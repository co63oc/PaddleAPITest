paddle.nn.functional.interpolate(Tensor([0, 2, 10, 10],"float64"), size=list[24,24,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([0, 2, 10, 10],"float64"), size=None, scale_factor=list[0.6,0.6,], mode="bicubic", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([0, 2, 10, 10],"float64"), size=None, scale_factor=list[0.6,0.6,], mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([0, 2, 10, 10],"float64"), size=None, scale_factor=list[0.6,0.6,], mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([0, 2, 10, 10],"float64"), size=None, scale_factor=list[0.6,0.6,], mode="bicubic", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([0, 2, 10, 10],"float64"), size=None, scale_factor=list[0.6,0.6,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([0, 2, 10, 10],"float64"), size=None, scale_factor=list[0.6,0.6,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([0, 2, 10, 10],"float64"), size=None, scale_factor=list[0.6,0.6,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([0, 2, 10, 10],"float64"), size=None, scale_factor=list[0.6,0.6,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([0, 2, 10, 10],"float64"), size=None, scale_factor=list[0.6,0.6,], mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([0, 2, 10, 10],"float64"), size=None, scale_factor=list[0.6,0.6,], mode="nearest", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([0, 2, 10, 10],"float64"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bicubic", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([0, 2, 10, 10],"float64"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([0, 2, 10, 10],"float64"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([0, 2, 10, 10],"float64"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bicubic", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([0, 2, 10, 10],"float64"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([0, 2, 10, 10],"float64"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([0, 2, 10, 10],"float64"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([0, 2, 10, 10],"float64"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([0, 2, 10, 10],"float64"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([0, 2, 10, 10],"float64"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="nearest", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([0, 2, 10, 10],"float64"), size=None, scale_factor=list[0.6,2.9999999999999996,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([0, 2, 10, 10],"float64"), size=None, scale_factor=list[0.6,2.9999999999999996,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([0, 2, 10, 10],"float64"), size=None, scale_factor=list[0.6,2.9999999999999996,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([0, 2, 10, 10],"float64"), size=None, scale_factor=list[0.6,2.9999999999999996,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([0, 2, 10, 10],"float64"), size=None, scale_factor=list[0.6,4.199999999999999,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([0, 2, 10, 10],"float64"), size=None, scale_factor=list[0.6,4.199999999999999,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([0, 2, 10, 10],"float64"), size=None, scale_factor=list[0.6,4.199999999999999,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([0, 2, 10, 10],"float64"), size=None, scale_factor=list[0.6,4.199999999999999,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([0, 2, 10, 10],"float64"), size=None, scale_factor=list[0.6,5.399999999999999,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([0, 2, 10, 10],"float64"), size=None, scale_factor=list[0.6,5.399999999999999,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([0, 2, 10, 10],"float64"), size=None, scale_factor=list[0.6,5.399999999999999,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([0, 2, 10, 10],"float64"), size=None, scale_factor=list[0.6,5.399999999999999,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([0, 2, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bicubic", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([0, 2, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([0, 2, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([0, 2, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bicubic", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([0, 2, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([0, 2, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([0, 2, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([0, 2, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([0, 2, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([0, 2, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="nearest", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([0, 2, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bicubic", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([0, 2, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([0, 2, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([0, 2, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bicubic", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([0, 2, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([0, 2, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([0, 2, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([0, 2, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([0, 2, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([0, 2, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="nearest", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([0, 2, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,2.9999999999999996,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([0, 2, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,2.9999999999999996,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([0, 2, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,2.9999999999999996,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([0, 2, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,2.9999999999999996,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([0, 2, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,4.199999999999999,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([0, 2, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,4.199999999999999,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([0, 2, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,4.199999999999999,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([0, 2, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,4.199999999999999,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([0, 2, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,5.399999999999999,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([0, 2, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,5.399999999999999,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([0, 2, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,5.399999999999999,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([0, 2, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,5.399999999999999,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([0, 2, 10, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,0.6,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([0, 2, 10, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,0.6,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([0, 2, 10, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,0.6,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([0, 2, 10, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,0.6,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([0, 2, 10, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,1.7999999999999998,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([0, 2, 10, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,1.7999999999999998,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([0, 2, 10, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,1.7999999999999998,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([0, 2, 10, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,1.7999999999999998,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([0, 2, 10, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,2.9999999999999996,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([0, 2, 10, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,2.9999999999999996,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([0, 2, 10, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,2.9999999999999996,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([0, 2, 10, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,2.9999999999999996,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([0, 2, 10, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,4.199999999999999,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([0, 2, 10, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,4.199999999999999,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([0, 2, 10, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,4.199999999999999,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([0, 2, 10, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,4.199999999999999,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([0, 2, 10, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,5.399999999999999,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([0, 2, 10, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,5.399999999999999,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([0, 2, 10, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,5.399999999999999,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([0, 2, 10, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,5.399999999999999,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([0, 2, 124, 128],"float32"), list[496,512,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([0, 2, 124, 128],"float32"), size=list[496,512,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 2, 128, 128],"float16"), list[512,512,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([0, 2, 128, 128],"float32"), list[512,512,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([0, 2, 128, 128],"float32"), size=list[512,512,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 2, 128, 256],"float32"), list[512,1024,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([0, 2, 16, 16],"float32"), size=list[32,32,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 2, 16, 16],"float32"), size=None, scale_factor=2, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([0, 2, 256, 256],"float32"), size=list[1024,1024,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 2, 32, 32],"float32"), size=list[32,32,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 2, 4, 5, 6],"float64"), size=list[9,10,11,], scale_factor=None, mode="trilinear", align_corners=False, align_mode=0, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([0, 2, 4, 5],"float64"), size=list[10,11,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([0, 2, 4, 5],"float64"), size=list[9,10,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([0, 2, 4, 5],"float64"), size=list[9,10,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([0, 2, 544, 544],"float32"), size=list[272,272,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 2, 6, 6, 6],"float16"), scale_factor=list[2,2,2,], mode="nearest", align_corners=False, data_format="NCDHW", )
paddle.nn.functional.interpolate(Tensor([0, 2, 6, 6, 6],"float32"), scale_factor=list[2,2,2,], mode="nearest", align_corners=False, data_format="NCDHW", )
paddle.nn.functional.interpolate(Tensor([0, 2, 6, 6],"float16"), scale_factor=list[2,2,], mode="nearest", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 2, 6, 6],"float32"), scale_factor=list[2,2,], mode="nearest", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 2, 62, 64],"float32"), list[496,512,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 2, 64, 128],"float32"), list[512,1024,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 2, 64, 64],"float32"), list[512,512,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 2, 64, 64],"float32"), size=tuple(64,64,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 200, 544, 544],"float32"), size=list[272,272,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 256, 1, 1],"float16"), list[64,64,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([0, 256, 1, 1],"float32"), list[62,64,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([0, 256, 1, 1],"float32"), list[64,128,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([0, 256, 1, 1],"float32"), list[64,64,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([0, 256, 1, 1],"float32"), scale_factor=2, mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([0, 256, 100, 136],"float32"), scale_factor=2.0, mode="nearest", )
paddle.nn.functional.interpolate(Tensor([0, 256, 100, 152],"float32"), scale_factor=2.0, mode="nearest", )
paddle.nn.functional.interpolate(Tensor([0, 256, 128, 128],"float32"), size=list[256,256,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 256, 13, 17],"float16"), size=list[25,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([0, 256, 13, 17],"float16"), size=list[26,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([0, 256, 13, 17],"float32"), size=list[25,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([0, 256, 13, 18],"float16"), size=list[25,35,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([0, 256, 13, 18],"float16"), size=list[25,36,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([0, 256, 13, 18],"float32"), size=list[25,35,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([0, 256, 13, 18],"float32"), size=list[25,36,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([0, 256, 13, 19],"float16"), size=list[25,37,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([0, 256, 13, 19],"float16"), size=list[25,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([0, 256, 13, 19],"float16"), size=list[26,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([0, 256, 13, 19],"float32"), size=list[25,37,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([0, 256, 13, 19],"float32"), size=list[25,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([0, 256, 13, 19],"float32"), size=list[26,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([0, 256, 13, 20],"float16"), size=list[25,39,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([0, 256, 13, 20],"float16"), size=list[25,40,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([0, 256, 13, 20],"float32"), size=list[25,39,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([0, 256, 13, 20],"float32"), size=list[25,40,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([0, 256, 13, 21],"float16"), size=list[25,41,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([0, 256, 13, 21],"float16"), size=list[25,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([0, 256, 13, 21],"float16"), size=list[26,41,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([0, 256, 13, 21],"float16"), size=list[26,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([0, 256, 13, 21],"float32"), size=list[25,41,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([0, 256, 13, 21],"float32"), size=list[25,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([0, 256, 13, 21],"float32"), size=list[26,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([0, 256, 14, 19],"float16"), size=list[27,37,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([0, 256, 14, 19],"float16"), size=list[27,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([0, 256, 14, 19],"float16"), size=list[28,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([0, 256, 14, 19],"float32"), size=list[27,37,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([0, 256, 14, 19],"float32"), size=list[27,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([0, 256, 14, 20],"float16"), size=list[27,39,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([0, 256, 15, 19],"float16"), size=list[29,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([0, 256, 15, 19],"float16"), size=list[30,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([0, 256, 15, 19],"float32"), size=list[29,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([0, 256, 15, 19],"float32"), size=list[30,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([0, 256, 15, 20],"float16"), size=list[29,40,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([0, 256, 15, 20],"float32"), size=list[29,40,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([0, 256, 16, 16],"float32"), size=list[124,128,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 256, 16, 16],"float32"), size=list[128,128,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 256, 16, 17],"float16"), size=list[31,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([0, 256, 16, 17],"float16"), size=list[32,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([0, 256, 16, 17],"float32"), size=list[31,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([0, 256, 16, 17],"float32"), size=list[32,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([0, 256, 16, 19],"float16"), size=list[31,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([0, 256, 16, 19],"float16"), size=list[32,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([0, 256, 16, 19],"float32"), size=list[31,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([0, 256, 16, 19],"float32"), size=list[32,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([0, 256, 16, 21],"float16"), size=list[31,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([0, 256, 16, 21],"float16"), size=list[32,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([0, 256, 16, 21],"float32"), size=list[31,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([0, 256, 16, 21],"float32"), size=list[32,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([0, 256, 17, 13],"float16"), size=list[34,25,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([0, 256, 17, 13],"float32"), size=list[34,25,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([0, 256, 17, 14],"float16"), size=list[34,27,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([0, 256, 17, 14],"float32"), size=list[34,27,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([0, 256, 17, 17],"float16"), size=list[34,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([0, 256, 17, 17],"float32"), size=list[34,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([0, 256, 17, 18],"float16"), size=list[33,36,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([0, 256, 17, 18],"float16"), size=list[34,35,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([0, 256, 17, 18],"float32"), size=list[34,35,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([0, 256, 17, 19],"float16"), size=list[33,37,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([0, 256, 17, 19],"float16"), size=list[33,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([0, 256, 17, 19],"float16"), size=list[34,37,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([0, 256, 17, 19],"float16"), size=list[34,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([0, 256, 17, 19],"float32"), size=list[33,37,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([0, 256, 17, 19],"float32"), size=list[34,37,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([0, 256, 17, 19],"float32"), size=list[34,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([0, 256, 17, 20],"float16"), size=list[33,40,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([0, 256, 17, 20],"float16"), size=list[34,39,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([0, 256, 17, 20],"float16"), size=list[34,40,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([0, 256, 17, 20],"float32"), size=list[33,40,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([0, 256, 17, 20],"float32"), size=list[34,39,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([0, 256, 17, 20],"float32"), size=list[34,40,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([0, 256, 17, 21],"float16"), size=list[33,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([0, 256, 17, 21],"float16"), size=list[34,41,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([0, 256, 17, 21],"float16"), size=list[34,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([0, 256, 17, 21],"float32"), size=list[33,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([0, 256, 17, 21],"float32"), size=list[34,41,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([0, 256, 17, 21],"float32"), size=list[34,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([0, 256, 18, 17],"float16"), size=list[35,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([0, 256, 18, 17],"float16"), size=list[36,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([0, 256, 18, 17],"float32"), size=list[35,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([0, 256, 18, 17],"float32"), size=list[36,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([0, 256, 18, 18],"float16"), size=list[35,35,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([0, 256, 18, 18],"float32"), size=list[35,35,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([0, 256, 18, 19],"float16"), size=list[35,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([0, 256, 18, 19],"float16"), size=list[36,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([0, 256, 18, 19],"float32"), size=list[35,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([0, 256, 18, 19],"float32"), size=list[36,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([0, 256, 18, 20],"float16"), size=list[35,39,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([0, 256, 18, 20],"float32"), size=list[35,39,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([0, 256, 18, 21],"float16"), size=list[35,41,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([0, 256, 18, 21],"float16"), size=list[35,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([0, 256, 18, 21],"float16"), size=list[36,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([0, 256, 18, 21],"float32"), size=list[35,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([0, 256, 18, 21],"float32"), size=list[36,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([0, 256, 19, 13],"float16"), size=list[38,25,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([0, 256, 19, 13],"float32"), size=list[38,25,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([0, 256, 19, 14],"float16"), size=list[38,27,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([0, 256, 19, 17],"float16"), size=list[37,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([0, 256, 19, 17],"float16"), size=list[38,33,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([0, 256, 19, 17],"float16"), size=list[38,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([0, 256, 19, 17],"float32"), size=list[37,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([0, 256, 19, 17],"float32"), size=list[38,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([0, 256, 19, 18],"float16"), size=list[38,35,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([0, 256, 19, 18],"float16"), size=list[38,36,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([0, 256, 19, 18],"float32"), size=list[38,35,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([0, 256, 19, 18],"float32"), size=list[38,36,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([0, 256, 19, 19],"float16"), size=list[37,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([0, 256, 19, 19],"float16"), size=list[38,37,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([0, 256, 19, 19],"float16"), size=list[38,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([0, 256, 19, 19],"float32"), size=list[37,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([0, 256, 19, 19],"float32"), size=list[38,37,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([0, 256, 19, 19],"float32"), size=list[38,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([0, 256, 19, 20],"float16"), size=list[38,39,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([0, 256, 19, 20],"float16"), size=list[38,40,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([0, 256, 19, 20],"float32"), size=list[38,39,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([0, 256, 19, 20],"float32"), size=list[38,40,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([0, 256, 19, 21],"float16"), size=list[37,41,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([0, 256, 19, 21],"float16"), size=list[37,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([0, 256, 19, 21],"float16"), size=list[38,41,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([0, 256, 19, 21],"float16"), size=list[38,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([0, 256, 19, 21],"float32"), size=list[37,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([0, 256, 19, 21],"float32"), size=list[38,41,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([0, 256, 19, 21],"float32"), size=list[38,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([0, 256, 2, 2],"float32"), scale_factor=2, mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([0, 256, 20, 17],"float16"), size=list[39,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([0, 256, 20, 17],"float16"), size=list[40,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([0, 256, 20, 17],"float32"), size=list[39,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([0, 256, 20, 17],"float32"), size=list[40,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([0, 256, 20, 19],"float16"), size=list[39,37,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([0, 256, 20, 19],"float16"), size=list[39,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([0, 256, 20, 19],"float16"), size=list[40,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([0, 256, 20, 19],"float32"), size=list[39,37,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([0, 256, 20, 19],"float32"), size=list[39,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([0, 256, 20, 19],"float32"), size=list[40,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([0, 256, 20, 21],"float16"), size=list[39,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([0, 256, 20, 21],"float32"), size=list[39,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([0, 256, 200, 272],"float32"), scale_factor=0.5, align_corners=False, align_mode=0, mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([0, 256, 200, 304],"float32"), scale_factor=0.5, align_corners=False, align_mode=0, mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([0, 256, 21, 13],"float16"), size=list[41,25,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([0, 256, 21, 13],"float16"), size=list[42,25,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([0, 256, 21, 13],"float32"), size=list[42,25,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([0, 256, 21, 17],"float16"), size=list[41,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([0, 256, 21, 17],"float16"), size=list[42,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([0, 256, 21, 17],"float32"), size=list[42,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([0, 256, 21, 18],"float16"), size=list[42,35,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([0, 256, 21, 19],"float16"), size=list[41,37,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([0, 256, 21, 19],"float16"), size=list[41,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([0, 256, 21, 19],"float16"), size=list[42,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([0, 256, 21, 19],"float32"), size=list[41,37,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([0, 256, 21, 19],"float32"), size=list[41,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([0, 256, 21, 19],"float32"), size=list[42,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([0, 256, 21, 20],"float16"), size=list[42,39,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([0, 256, 21, 20],"float16"), size=list[42,40,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([0, 256, 21, 20],"float32"), size=list[42,39,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([0, 256, 21, 21],"float16"), size=list[42,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([0, 256, 21, 21],"float32"), size=list[42,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([0, 256, 31, 32],"float32"), size=list[124,128,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 256, 32, 32],"float32"), size=list[128,128,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 256, 32, 32],"float32"), size=list[256,256,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 256, 40, 40],"float16"), scale_factor=2.0, mode="nearest", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([0, 256, 40, 40],"float32"), scale_factor=2.0, mode="nearest", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([0, 256, 62, 64],"float32"), list[124,128,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([0, 256, 64, 128],"float32"), list[128,256,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([0, 256, 64, 64],"float16"), list[128,128,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([0, 256, 64, 64],"float32"), list[128,128,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([0, 256, 88, 88],"float32"), size=list[88,88,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 258, 100, 136],"float32"), size=list[36,36,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([0, 258, 100, 136],"float32"), size=list[40,40,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([0, 258, 100, 152],"float32"), size=list[36,36,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([0, 258, 100, 152],"float32"), size=list[40,40,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([0, 258, 25, 34],"float32"), size=list[12,12,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([0, 258, 25, 34],"float32"), size=list[16,16,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([0, 258, 25, 38],"float32"), size=list[12,12,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([0, 258, 25, 38],"float32"), size=list[16,16,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([0, 258, 50, 68],"float32"), size=list[24,24,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([0, 258, 50, 76],"float32"), size=list[24,24,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([0, 3, 128],"float32"), size=list[64,], mode="linear", align_mode=1, align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 3, 128],"float32"), size=list[64,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NCW", name=None, )
paddle.nn.functional.interpolate(Tensor([0, 3, 181, 204],"float32"), size=tuple(280,280,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([0, 3, 182, 161],"float32"), size=tuple(224,224,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([0, 3, 200, 253],"float32"), size=tuple(280,280,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([0, 3, 235, 260],"float32"), size=tuple(224,224,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([0, 3, 256, 200],"float32"), size=tuple(180,160,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([0, 3, 28, 24],"float32"), size=tuple(46,40,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([0, 3, 280, 280],"float32"), size=tuple(256,200,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([0, 3, 280, 350],"float32"), size=tuple(300,375,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([0, 3, 4, 4, 4],"float16"), size=list[3,3,3,], mode="trilinear", align_corners=True, align_mode=1, data_format="NCDHW", )
paddle.nn.functional.interpolate(Tensor([0, 3, 4, 4, 4],"float32"), size=list[3,3,3,], mode="trilinear", align_corners=True, align_mode=1, data_format="NCDHW", )
paddle.nn.functional.interpolate(Tensor([0, 3, 5, 5],"float16"), size=list[3,3,], mode="bicubic", align_corners=True, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([0, 3, 5, 5],"float32"), size=list[3,3,], mode="bicubic", align_corners=True, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([0, 3, 6, 10],"float32"), size=list[12,12,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([0, 3, 6, 10],"float64"), size=list[12,12,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([0, 3, 6, 10],"float64"), size=list[12,12,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([0, 3, 6, 10],"float64"), size=list[12,13,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([0, 3, 6, 10],"float64"), size=list[256,256,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([0, 3, 6, 10],"float64"), size=None, scale_factor=5, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([0, 3, 6, 10],"float64"), size=None, scale_factor=list[2,3,], mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([0, 3, 6, 10],"float64"), size=None, scale_factor=tuple(2,3,), mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([0, 3, 6, 10],"float64"), size=tuple(12,13,), scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([0, 3, 6, 6],"float32"), size=list[12,12,], mode="bicubic", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 3, 64, 256],"float32"), list[32,64,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([0, 3, 64, 64],"float32"), size=None, scale_factor=4, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([0, 3, 64, 64],"float32"), size=tuple(16,16,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([0, 3, 64, 64],"float32"), size=tuple(64,64,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 3, 64, 64],"float32"), size=tuple(64,64,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([0, 3, 64],"float16"), scale_factor=2, mode="linear", align_mode=1, align_corners=False, data_format="NCW", )
paddle.nn.functional.interpolate(Tensor([0, 3, 64],"float32"), scale_factor=2, mode="linear", align_mode=1, align_corners=False, data_format="NCW", )
paddle.nn.functional.interpolate(Tensor([0, 3, 640, 640],"float32"), size=tuple(640,640,), mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([0, 32, 1, 1],"float32"), list[32,32,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([0, 32, 16, 12],"float16"), scale_factor=4, )
paddle.nn.functional.interpolate(Tensor([0, 32, 16, 12],"float32"), scale_factor=4, )
paddle.nn.functional.interpolate(Tensor([0, 32, 2, 2],"float32"), list[32,32,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([0, 32, 2, 2],"float32"), size=tuple(2,2,), mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([0, 32, 8, 6],"float16"), scale_factor=8, )
paddle.nn.functional.interpolate(Tensor([0, 32, 8, 6],"float32"), scale_factor=8, )
paddle.nn.functional.interpolate(Tensor([0, 4, 10, 10, 10],"float32"), size=list[2,2,2,], scale_factor=None, mode="trilinear", align_corners=False, align_mode=0, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([0, 4, 10, 10, 10],"float32"), size=list[2,2,2,], scale_factor=None, mode="trilinear", align_corners=False, align_mode=1, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([0, 4, 10, 10, 10],"float32"), size=list[2,2,2,], scale_factor=None, mode="trilinear", align_corners=True, align_mode=0, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([0, 4, 10, 10, 10],"float32"), size=list[2,2,2,], scale_factor=None, mode="trilinear", align_corners=True, align_mode=1, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([0, 4, 10, 10, 10],"float32"), size=None, scale_factor=list[0.6,0.6,0.6,], mode="trilinear", align_corners=False, align_mode=0, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([0, 4, 10, 10, 10],"float32"), size=None, scale_factor=list[0.6,0.6,0.6,], mode="trilinear", align_corners=False, align_mode=1, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([0, 4, 10, 10, 10],"float32"), size=None, scale_factor=list[0.6,0.6,0.6,], mode="trilinear", align_corners=True, align_mode=0, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([0, 4, 10, 10, 10],"float32"), size=None, scale_factor=list[0.6,0.6,0.6,], mode="trilinear", align_corners=True, align_mode=1, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([0, 4, 10, 10, 10],"float64"), size=list[2,2,2,], scale_factor=None, mode="trilinear", align_corners=False, align_mode=0, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([0, 4, 10, 10, 10],"float64"), size=list[2,2,2,], scale_factor=None, mode="trilinear", align_corners=False, align_mode=1, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([0, 4, 10, 10, 10],"float64"), size=list[2,2,2,], scale_factor=None, mode="trilinear", align_corners=True, align_mode=0, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([0, 4, 10, 10, 10],"float64"), size=list[2,2,2,], scale_factor=None, mode="trilinear", align_corners=True, align_mode=1, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([0, 4, 10, 10, 10],"float64"), size=None, scale_factor=list[0.6,0.6,0.6,], mode="trilinear", align_corners=False, align_mode=0, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([0, 4, 10, 10, 10],"float64"), size=None, scale_factor=list[0.6,0.6,0.6,], mode="trilinear", align_corners=False, align_mode=1, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([0, 4, 10, 10, 10],"float64"), size=None, scale_factor=list[0.6,0.6,0.6,], mode="trilinear", align_corners=True, align_mode=0, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([0, 4, 10, 10, 10],"float64"), size=None, scale_factor=list[0.6,0.6,0.6,], mode="trilinear", align_corners=True, align_mode=1, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([0, 4, 4, 4, 3],"float16"), size=list[3,3,3,], mode="trilinear", align_corners=True, align_mode=1, data_format="NDHWC", )
paddle.nn.functional.interpolate(Tensor([0, 4, 4, 4, 3],"float32"), size=list[3,3,3,], mode="trilinear", align_corners=True, align_mode=1, data_format="NDHWC", )
paddle.nn.functional.interpolate(Tensor([0, 4, 800, 907],"float32"), size=tuple(25,29,), )
paddle.nn.functional.interpolate(Tensor([0, 40, 16, 12],"float32"), size=list[32,24,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([0, 40, 16, 12],"float32"), size=None, scale_factor=4, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([0, 40, 32, 24],"float32"), size=list[64,48,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([0, 40, 4, 3],"float32"), size=None, scale_factor=8, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([0, 40, 8, 6],"float32"), size=None, scale_factor=4, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([0, 40, 8, 6],"float32"), size=None, scale_factor=8, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([0, 5, 20, 20],"float64"), size=list[10,10,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([0, 5, 6, 7],"float32"), size=list[10,10,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([0, 5, 6, 7],"float64"), size=list[10,10,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([0, 5, 6, 7],"float64"), size=list[100,50,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([0, 5, 6, 7],"float64"), size=None, scale_factor=list[1.2,3.3,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([0, 64, 20, 20],"float16"), size=list[40,40,], )
paddle.nn.functional.interpolate(Tensor([0, 64, 20, 20],"float16"), size=tuple(160,160,), )
paddle.nn.functional.interpolate(Tensor([0, 64, 20, 20],"float32"), size=list[40,40,], )
paddle.nn.functional.interpolate(Tensor([0, 64, 20, 20],"float32"), size=tuple(160,160,), )
paddle.nn.functional.interpolate(Tensor([0, 64, 32, 32],"float32"), scale_factor=2, mode="nearest", )
paddle.nn.functional.interpolate(Tensor([0, 64, 32, 64],"float16"), list[64,128,], mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([0, 64, 32, 64],"float32"), list[64,128,], mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([0, 64, 320, 320],"float16"), size=None, scale_factor=2, mode="nearest", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([0, 64, 320, 320],"float32"), size=None, scale_factor=2, mode="nearest", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([0, 64, 40, 40],"float16"), size=list[80,80,], )
paddle.nn.functional.interpolate(Tensor([0, 64, 40, 40],"float32"), size=list[80,80,], )
paddle.nn.functional.interpolate(Tensor([0, 64, 64, 64],"float32"), scale_factor=2, mode="nearest", )
paddle.nn.functional.interpolate(Tensor([0, 64, 68, 68],"float32"), size=list[68,68,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 64, 80, 80],"float16"), size=list[160,160,], )
paddle.nn.functional.interpolate(Tensor([0, 64, 80, 80],"float32"), size=list[160,160,], )
paddle.nn.functional.interpolate(Tensor([0, 64, 92, 92],"float32"), size=list[92,92,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 64, 96, 96],"float32"), size=list[96,96,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 768, 14, 14],"float32"), size=tuple(28,28,), align_corners=False, mode="bicubic", )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 192],"float32"), size=tuple(341,256,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 192],"float32"), size=tuple(342,257,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 192],"float32"), size=tuple(344,258,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 192],"float32"), size=tuple(345,259,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 192],"float32"), size=tuple(346,260,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 192],"float32"), size=tuple(348,261,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 192],"float32"), size=tuple(349,262,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 192],"float32"), size=tuple(350,263,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 192],"float32"), size=tuple(352,264,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 192],"float32"), size=tuple(353,265,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 192],"float32"), size=tuple(354,266,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 192],"float32"), size=tuple(356,267,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 192],"float32"), size=tuple(357,268,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 192],"float32"), size=tuple(358,269,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 192],"float32"), size=tuple(360,270,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 192],"float32"), size=tuple(361,271,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 192],"float32"), size=tuple(362,272,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 192],"float32"), size=tuple(364,273,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 192],"float32"), size=tuple(365,274,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 192],"float32"), size=tuple(366,275,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 192],"float32"), size=tuple(368,276,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 192],"float32"), size=tuple(369,277,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 192],"float32"), size=tuple(370,278,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 192],"float32"), size=tuple(372,279,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 192],"float32"), size=tuple(373,280,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 192],"float32"), size=tuple(374,281,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 192],"float32"), size=tuple(376,282,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 192],"float32"), size=tuple(377,283,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 192],"float32"), size=tuple(378,284,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 192],"float32"), size=tuple(380,285,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 192],"float32"), size=tuple(381,286,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 192],"float32"), size=tuple(382,287,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 192],"float32"), size=tuple(384,288,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 192],"float32"), size=tuple(385,289,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 192],"float32"), size=tuple(386,290,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 192],"float32"), size=tuple(388,291,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 192],"float32"), size=tuple(389,292,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 192],"float32"), size=tuple(390,293,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 192],"float32"), size=tuple(392,294,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 192],"float32"), size=tuple(393,295,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 192],"float32"), size=tuple(394,296,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 192],"float32"), size=tuple(396,297,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 192],"float32"), size=tuple(397,298,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 192],"float32"), size=tuple(398,299,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 192],"float32"), size=tuple(400,300,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 192],"float32"), size=tuple(401,301,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 192],"float32"), size=tuple(402,302,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 192],"float32"), size=tuple(404,303,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 192],"float32"), size=tuple(405,304,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 192],"float32"), size=tuple(406,305,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 192],"float32"), size=tuple(408,306,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 192],"float32"), size=tuple(409,307,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 192],"float32"), size=tuple(410,308,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 192],"float32"), size=tuple(412,309,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 192],"float32"), size=tuple(413,310,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 192],"float32"), size=tuple(414,311,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 192],"float32"), size=tuple(416,312,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 192],"float32"), size=tuple(417,313,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 192],"float32"), size=tuple(418,314,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 192],"float32"), size=tuple(420,315,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 192],"float32"), size=tuple(421,316,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 192],"float32"), size=tuple(422,317,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 192],"float32"), size=tuple(424,318,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 192],"float32"), size=tuple(425,319,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 192],"float32"), size=tuple(426,320,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 314],"float32"), size=tuple(257,315,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 314],"float32"), size=tuple(258,316,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 314],"float32"), size=tuple(259,317,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 314],"float32"), size=tuple(260,318,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 314],"float32"), size=tuple(261,320,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 314],"float32"), size=tuple(262,321,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 314],"float32"), size=tuple(263,322,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 314],"float32"), size=tuple(264,323,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 314],"float32"), size=tuple(265,325,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 314],"float32"), size=tuple(266,326,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 314],"float32"), size=tuple(267,327,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 314],"float32"), size=tuple(268,328,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 314],"float32"), size=tuple(269,329,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 314],"float32"), size=tuple(270,331,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 314],"float32"), size=tuple(271,332,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 314],"float32"), size=tuple(272,333,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 314],"float32"), size=tuple(273,334,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 314],"float32"), size=tuple(274,336,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 314],"float32"), size=tuple(275,337,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 314],"float32"), size=tuple(276,338,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 314],"float32"), size=tuple(277,339,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 314],"float32"), size=tuple(278,340,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 314],"float32"), size=tuple(279,342,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 314],"float32"), size=tuple(280,343,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 314],"float32"), size=tuple(281,344,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 314],"float32"), size=tuple(282,345,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 314],"float32"), size=tuple(283,347,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 314],"float32"), size=tuple(284,348,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 314],"float32"), size=tuple(285,349,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 314],"float32"), size=tuple(286,350,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 314],"float32"), size=tuple(287,352,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 314],"float32"), size=tuple(288,353,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 314],"float32"), size=tuple(289,354,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 314],"float32"), size=tuple(290,355,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 314],"float32"), size=tuple(291,356,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 314],"float32"), size=tuple(292,358,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 314],"float32"), size=tuple(293,359,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 314],"float32"), size=tuple(294,360,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 314],"float32"), size=tuple(295,361,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 314],"float32"), size=tuple(296,363,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 314],"float32"), size=tuple(297,364,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 314],"float32"), size=tuple(298,365,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 314],"float32"), size=tuple(299,366,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 314],"float32"), size=tuple(300,367,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 314],"float32"), size=tuple(301,369,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 314],"float32"), size=tuple(302,370,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 314],"float32"), size=tuple(303,371,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 314],"float32"), size=tuple(304,372,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 314],"float32"), size=tuple(305,374,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 314],"float32"), size=tuple(306,375,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 314],"float32"), size=tuple(307,376,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 314],"float32"), size=tuple(308,377,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 314],"float32"), size=tuple(309,379,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 314],"float32"), size=tuple(310,380,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 314],"float32"), size=tuple(311,381,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 314],"float32"), size=tuple(312,382,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 314],"float32"), size=tuple(313,383,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 314],"float32"), size=tuple(314,385,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 314],"float32"), size=tuple(315,386,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 314],"float32"), size=tuple(316,387,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 314],"float32"), size=tuple(317,388,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 314],"float32"), size=tuple(318,390,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 314],"float32"), size=tuple(319,391,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 314],"float32"), size=tuple(320,392,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 340],"float32"), size=tuple(257,341,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 340],"float32"), size=tuple(258,342,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 340],"float32"), size=tuple(259,343,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 340],"float32"), size=tuple(260,345,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 340],"float32"), size=tuple(261,346,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 340],"float32"), size=tuple(262,347,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 340],"float32"), size=tuple(263,349,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 340],"float32"), size=tuple(264,350,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 340],"float32"), size=tuple(265,351,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 340],"float32"), size=tuple(266,353,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 340],"float32"), size=tuple(267,354,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 340],"float32"), size=tuple(268,355,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 340],"float32"), size=tuple(269,357,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 340],"float32"), size=tuple(270,358,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 340],"float32"), size=tuple(271,359,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 340],"float32"), size=tuple(272,361,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 340],"float32"), size=tuple(273,362,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 340],"float32"), size=tuple(274,363,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 340],"float32"), size=tuple(275,365,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 340],"float32"), size=tuple(276,366,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 340],"float32"), size=tuple(277,367,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 340],"float32"), size=tuple(278,369,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 340],"float32"), size=tuple(279,370,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 340],"float32"), size=tuple(280,371,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 340],"float32"), size=tuple(281,373,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 340],"float32"), size=tuple(282,374,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 340],"float32"), size=tuple(283,375,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 340],"float32"), size=tuple(284,377,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 340],"float32"), size=tuple(285,378,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 340],"float32"), size=tuple(286,379,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 340],"float32"), size=tuple(287,381,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 340],"float32"), size=tuple(288,382,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 340],"float32"), size=tuple(289,383,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 340],"float32"), size=tuple(290,385,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 340],"float32"), size=tuple(291,386,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 340],"float32"), size=tuple(292,387,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 340],"float32"), size=tuple(293,389,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 340],"float32"), size=tuple(294,390,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 340],"float32"), size=tuple(295,391,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 340],"float32"), size=tuple(296,393,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 340],"float32"), size=tuple(297,394,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 340],"float32"), size=tuple(298,395,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 340],"float32"), size=tuple(299,397,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 340],"float32"), size=tuple(300,398,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 340],"float32"), size=tuple(301,399,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 340],"float32"), size=tuple(302,401,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 340],"float32"), size=tuple(303,402,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 340],"float32"), size=tuple(304,403,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 340],"float32"), size=tuple(305,405,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 340],"float32"), size=tuple(306,406,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 340],"float32"), size=tuple(307,407,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 340],"float32"), size=tuple(308,409,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 340],"float32"), size=tuple(309,410,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 340],"float32"), size=tuple(310,411,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 340],"float32"), size=tuple(311,413,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 340],"float32"), size=tuple(312,414,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 340],"float32"), size=tuple(313,415,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 340],"float32"), size=tuple(314,417,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 340],"float32"), size=tuple(315,418,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 340],"float32"), size=tuple(316,419,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 340],"float32"), size=tuple(317,421,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 340],"float32"), size=tuple(318,422,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 340],"float32"), size=tuple(319,423,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 340],"float32"), size=tuple(320,425,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 372],"float32"), size=tuple(257,373,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 372],"float32"), size=tuple(258,374,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 372],"float32"), size=tuple(259,376,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 372],"float32"), size=tuple(260,377,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 372],"float32"), size=tuple(261,379,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 372],"float32"), size=tuple(262,380,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 372],"float32"), size=tuple(263,382,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 372],"float32"), size=tuple(264,383,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 372],"float32"), size=tuple(265,385,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 372],"float32"), size=tuple(266,386,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 372],"float32"), size=tuple(267,387,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 372],"float32"), size=tuple(268,389,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 372],"float32"), size=tuple(269,390,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 372],"float32"), size=tuple(270,392,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 372],"float32"), size=tuple(271,393,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 372],"float32"), size=tuple(272,395,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 372],"float32"), size=tuple(273,396,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 372],"float32"), size=tuple(274,398,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 372],"float32"), size=tuple(275,399,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 372],"float32"), size=tuple(276,401,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 372],"float32"), size=tuple(277,402,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 372],"float32"), size=tuple(278,403,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 372],"float32"), size=tuple(279,405,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 372],"float32"), size=tuple(280,406,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 372],"float32"), size=tuple(281,408,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 372],"float32"), size=tuple(282,409,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 372],"float32"), size=tuple(283,411,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 372],"float32"), size=tuple(284,412,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 372],"float32"), size=tuple(285,414,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 372],"float32"), size=tuple(286,415,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 372],"float32"), size=tuple(287,417,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 372],"float32"), size=tuple(288,418,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 372],"float32"), size=tuple(289,419,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 372],"float32"), size=tuple(290,421,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 372],"float32"), size=tuple(291,422,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 372],"float32"), size=tuple(292,424,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 372],"float32"), size=tuple(293,425,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 372],"float32"), size=tuple(294,427,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 372],"float32"), size=tuple(295,428,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 372],"float32"), size=tuple(296,430,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 372],"float32"), size=tuple(297,431,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 372],"float32"), size=tuple(298,433,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 372],"float32"), size=tuple(299,434,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 372],"float32"), size=tuple(300,435,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 372],"float32"), size=tuple(301,437,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 372],"float32"), size=tuple(302,438,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 372],"float32"), size=tuple(303,440,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 372],"float32"), size=tuple(304,441,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 372],"float32"), size=tuple(305,443,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 372],"float32"), size=tuple(306,444,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 372],"float32"), size=tuple(307,446,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 372],"float32"), size=tuple(308,447,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 372],"float32"), size=tuple(309,449,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 372],"float32"), size=tuple(310,450,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 372],"float32"), size=tuple(311,451,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 372],"float32"), size=tuple(312,453,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 372],"float32"), size=tuple(313,454,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 372],"float32"), size=tuple(314,456,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 372],"float32"), size=tuple(315,457,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 372],"float32"), size=tuple(316,459,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 372],"float32"), size=tuple(317,460,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 372],"float32"), size=tuple(318,462,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 372],"float32"), size=tuple(319,463,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 372],"float32"), size=tuple(320,465,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 384],"float32"), size=tuple(257,385,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 384],"float32"), size=tuple(258,387,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 384],"float32"), size=tuple(259,388,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 384],"float32"), size=tuple(260,390,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 384],"float32"), size=tuple(261,391,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 384],"float32"), size=tuple(262,393,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 384],"float32"), size=tuple(263,394,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 384],"float32"), size=tuple(264,396,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 384],"float32"), size=tuple(265,397,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 384],"float32"), size=tuple(266,399,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 384],"float32"), size=tuple(267,400,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 384],"float32"), size=tuple(268,402,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 384],"float32"), size=tuple(269,403,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 384],"float32"), size=tuple(270,405,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 384],"float32"), size=tuple(271,406,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 384],"float32"), size=tuple(272,408,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 384],"float32"), size=tuple(273,409,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 384],"float32"), size=tuple(274,411,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 384],"float32"), size=tuple(275,412,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 384],"float32"), size=tuple(276,414,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 384],"float32"), size=tuple(277,415,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 384],"float32"), size=tuple(278,417,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 384],"float32"), size=tuple(279,418,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 384],"float32"), size=tuple(280,420,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 384],"float32"), size=tuple(281,421,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 384],"float32"), size=tuple(282,423,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 384],"float32"), size=tuple(283,424,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 384],"float32"), size=tuple(284,426,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 384],"float32"), size=tuple(285,427,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 384],"float32"), size=tuple(286,429,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 384],"float32"), size=tuple(287,430,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 384],"float32"), size=tuple(288,432,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 384],"float32"), size=tuple(289,433,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 384],"float32"), size=tuple(290,435,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 384],"float32"), size=tuple(291,436,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 384],"float32"), size=tuple(292,438,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 384],"float32"), size=tuple(293,439,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 384],"float32"), size=tuple(294,441,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 384],"float32"), size=tuple(295,442,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 384],"float32"), size=tuple(296,444,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 384],"float32"), size=tuple(297,445,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 384],"float32"), size=tuple(298,447,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 384],"float32"), size=tuple(299,448,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 384],"float32"), size=tuple(300,450,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 384],"float32"), size=tuple(301,451,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 384],"float32"), size=tuple(302,453,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 384],"float32"), size=tuple(303,454,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 384],"float32"), size=tuple(304,456,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 384],"float32"), size=tuple(305,457,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 384],"float32"), size=tuple(306,459,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 384],"float32"), size=tuple(307,460,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 384],"float32"), size=tuple(308,462,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 384],"float32"), size=tuple(309,463,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 384],"float32"), size=tuple(310,465,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 384],"float32"), size=tuple(311,466,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 384],"float32"), size=tuple(312,468,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 384],"float32"), size=tuple(313,469,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 384],"float32"), size=tuple(314,471,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 384],"float32"), size=tuple(315,472,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 384],"float32"), size=tuple(316,474,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 384],"float32"), size=tuple(317,475,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 384],"float32"), size=tuple(318,477,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 384],"float32"), size=tuple(319,478,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 384],"float32"), size=tuple(320,480,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 454],"float32"), size=tuple(257,455,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 454],"float32"), size=tuple(258,457,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 454],"float32"), size=tuple(259,459,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 454],"float32"), size=tuple(260,461,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 454],"float32"), size=tuple(261,462,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 454],"float32"), size=tuple(262,464,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 454],"float32"), size=tuple(263,466,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 454],"float32"), size=tuple(264,468,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 454],"float32"), size=tuple(265,469,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 454],"float32"), size=tuple(266,471,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 454],"float32"), size=tuple(267,473,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 454],"float32"), size=tuple(268,475,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 454],"float32"), size=tuple(269,477,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 454],"float32"), size=tuple(270,478,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 454],"float32"), size=tuple(271,480,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 454],"float32"), size=tuple(272,482,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 454],"float32"), size=tuple(273,484,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 454],"float32"), size=tuple(274,485,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 454],"float32"), size=tuple(275,487,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 454],"float32"), size=tuple(276,489,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 454],"float32"), size=tuple(277,491,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 454],"float32"), size=tuple(278,493,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 454],"float32"), size=tuple(279,494,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 454],"float32"), size=tuple(280,496,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 454],"float32"), size=tuple(281,498,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 454],"float32"), size=tuple(282,500,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 454],"float32"), size=tuple(283,501,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 454],"float32"), size=tuple(284,503,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 454],"float32"), size=tuple(285,505,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 454],"float32"), size=tuple(286,507,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 454],"float32"), size=tuple(287,508,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 454],"float32"), size=tuple(288,510,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 454],"float32"), size=tuple(289,512,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 454],"float32"), size=tuple(290,514,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 454],"float32"), size=tuple(291,516,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 454],"float32"), size=tuple(292,517,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 454],"float32"), size=tuple(293,519,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 454],"float32"), size=tuple(294,521,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 454],"float32"), size=tuple(295,523,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 454],"float32"), size=tuple(296,524,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 454],"float32"), size=tuple(297,526,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 454],"float32"), size=tuple(298,528,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 454],"float32"), size=tuple(299,530,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 454],"float32"), size=tuple(300,532,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 454],"float32"), size=tuple(301,533,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 454],"float32"), size=tuple(302,535,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 454],"float32"), size=tuple(303,537,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 454],"float32"), size=tuple(304,539,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 454],"float32"), size=tuple(305,540,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 454],"float32"), size=tuple(306,542,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 454],"float32"), size=tuple(307,544,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 454],"float32"), size=tuple(308,546,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 454],"float32"), size=tuple(309,547,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 454],"float32"), size=tuple(310,549,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 454],"float32"), size=tuple(311,551,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 454],"float32"), size=tuple(312,553,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 454],"float32"), size=tuple(313,555,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 454],"float32"), size=tuple(314,556,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 454],"float32"), size=tuple(315,558,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 454],"float32"), size=tuple(316,560,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 454],"float32"), size=tuple(317,562,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 454],"float32"), size=tuple(318,563,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 454],"float32"), size=tuple(319,565,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 8, 256, 454],"float32"), size=tuple(320,567,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([0, 80, 16, 12],"float32"), size=list[32,24,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([0, 80, 8, 6],"float32"), size=list[16,12,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([1, 0, 1, 1],"float16"), list[64,64,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 0, 1, 1],"float32"), list[128,128,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([1, 0, 1, 1],"float32"), list[16,32,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 0, 1, 1],"float32"), list[32,32,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([1, 0, 1, 1],"float32"), list[62,64,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 0, 1, 1],"float32"), list[64,128,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 0, 1, 1],"float32"), list[64,64,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 0, 100, 100],"float32"), scale_factor=2.0, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 0, 100, 136],"float32"), scale_factor=2.0, mode="nearest", )
paddle.nn.functional.interpolate(Tensor([1, 0, 100, 136],"float32"), size=list[36,36,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([1, 0, 100, 136],"float32"), size=list[40,40,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([1, 0, 100, 136],"float32"), size=None, scale_factor=2, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([1, 0, 100, 152],"float32"), scale_factor=2.0, mode="nearest", )
paddle.nn.functional.interpolate(Tensor([1, 0, 100, 152],"float32"), size=list[36,36,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([1, 0, 100, 152],"float32"), size=list[40,40,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([1, 0, 100, 152],"float32"), size=None, scale_factor=2, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([1, 0, 104, 104],"float32"), scale_factor=2.0, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 0, 124, 128],"float32"), list[496,512,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 0, 124, 128],"float32"), size=list[496,512,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 0, 128, 128],"float16"), list[512,512,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 0, 128, 128],"float32"), list[1024,1024,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 0, 128, 128],"float32"), list[256,256,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([1, 0, 128, 128],"float32"), list[512,512,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 0, 128, 128],"float32"), size=list[256,256,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 0, 128, 128],"float32"), size=list[512,512,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 0, 128, 256],"float32"), list[512,1024,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 0, 128],"float32"), size=list[64,], mode="linear", align_mode=1, align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 0, 128],"float32"), size=list[64,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NCW", name=None, )
paddle.nn.functional.interpolate(Tensor([1, 0, 13, 17],"float32"), size=list[25,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([1, 0, 13, 19],"float32"), size=list[25,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([1, 0, 13, 20],"float32"), size=list[25,39,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([1, 0, 14, 14],"float32"), size=tuple(28,28,), align_corners=False, mode="bicubic", )
paddle.nn.functional.interpolate(Tensor([1, 0, 16, 16],"float32"), size=list[124,128,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 0, 16, 16],"float32"), size=list[128,128,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 0, 16, 16],"float32"), size=tuple(24,24,), mode="bicubic", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 0, 16, 16],"float32"), size=tuple(256,256,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 0, 16, 32],"float32"), list[16,32,], mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([1, 0, 16, 32],"float32"), list[32,64,], mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([1, 0, 16],"float16"), size=tuple(16,), mode="linear", align_corners=False, data_format="NCW", )
paddle.nn.functional.interpolate(Tensor([1, 0, 16],"float16"), size=tuple(8,), mode="linear", align_corners=False, data_format="NCW", )
paddle.nn.functional.interpolate(Tensor([1, 0, 16],"float32"), size=tuple(16,), mode="linear", align_corners=False, data_format="NCW", )
paddle.nn.functional.interpolate(Tensor([1, 0, 16],"float32"), size=tuple(8,), mode="linear", align_corners=False, data_format="NCW", )
paddle.nn.functional.interpolate(Tensor([1, 0, 176, 176],"float32"), scale_factor=2, mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 0, 18, 18],"float32"), size=None, scale_factor=2, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([1, 0, 181, 204],"float32"), size=tuple(280,280,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 0, 182, 161],"float32"), size=tuple(224,224,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 0, 184, 184],"float32"), scale_factor=2, mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 0, 19, 13],"float32"), size=list[38,25,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([1, 0, 19, 19],"float32"), size=None, scale_factor=2, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([1, 0, 2, 2],"float32"), list[128,128,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([1, 0, 2, 2],"float32"), list[16,32,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 0, 2, 2],"float32"), list[32,32,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([1, 0, 2, 2],"float32"), size=tuple(2,2,), mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([1, 0, 200, 253],"float32"), size=tuple(280,280,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 0, 200, 272],"float32"), scale_factor=0.5, align_corners=False, align_mode=0, mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([1, 0, 200, 304],"float32"), scale_factor=0.5, align_corners=False, align_mode=0, mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([1, 0, 235, 260],"float32"), size=tuple(224,224,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 0, 25, 34],"float32"), size=list[12,12,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([1, 0, 25, 34],"float32"), size=list[16,16,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([1, 0, 25, 38],"float32"), size=list[12,12,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([1, 0, 25, 38],"float32"), size=list[16,16,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([1, 0, 256, 200],"float32"), size=tuple(180,160,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 0, 256, 256],"float32"), list[1024,1024,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 0, 256, 256],"float32"), size=list[1024,1024,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 0, 256, 256],"float32"), tuple(1024,1024,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 0, 28, 24],"float32"), size=tuple(46,40,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 0, 280, 280],"float32"), size=tuple(256,200,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 0, 280, 350],"float32"), size=tuple(300,375,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 0, 31, 32],"float32"), size=list[124,128,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 0, 32, 32],"float32"), list[128,128,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 0, 32, 32],"float32"), size=list[128,128,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 0, 32, 32],"float32"), size=list[256,256,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 0, 32, 32],"float32"), size=tuple(256,256,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 0, 32, 64],"float32"), list[64,128,], mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([1, 0, 50, 68],"float32"), size=list[24,24,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([1, 0, 50, 76],"float32"), size=list[24,24,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([1, 0, 544, 544],"float32"), size=list[272,272,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 0, 576, 798],"float32"), size=list[144,200,], )
paddle.nn.functional.interpolate(Tensor([1, 0, 576, 798],"float32"), size=list[18,25,], )
paddle.nn.functional.interpolate(Tensor([1, 0, 576, 798],"float32"), size=list[36,50,], )
paddle.nn.functional.interpolate(Tensor([1, 0, 576, 798],"float32"), size=list[72,100,], )
paddle.nn.functional.interpolate(Tensor([1, 0, 576, 798],"float32"), size=list[9,13,], )
paddle.nn.functional.interpolate(Tensor([1, 0, 62, 64],"float32"), list[124,128,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 0, 62, 64],"float32"), list[496,512,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 0, 64, 128],"float32"), list[128,256,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 0, 64, 128],"float32"), list[512,1024,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 0, 64, 64],"float16"), list[128,128,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 0, 64, 64],"float32"), list[128,128,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 0, 64, 64],"float32"), list[512,512,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 0, 64, 64],"float32"), size=tuple(16,16,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 0, 64, 64],"float32"), size=tuple(64,64,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 0, 64],"float16"), scale_factor=2, mode="linear", align_mode=1, align_corners=False, data_format="NCW", )
paddle.nn.functional.interpolate(Tensor([1, 0, 64],"float32"), scale_factor=2, mode="linear", align_mode=1, align_corners=False, data_format="NCW", )
paddle.nn.functional.interpolate(Tensor([1, 0, 640, 480],"float32"), size=list[10,8,], )
paddle.nn.functional.interpolate(Tensor([1, 0, 640, 480],"float32"), size=list[20,15,], )
paddle.nn.functional.interpolate(Tensor([1, 0, 640, 480],"float32"), size=list[40,30,], )
paddle.nn.functional.interpolate(Tensor([1, 0, 640, 480],"float32"), size=list[80,60,], )
paddle.nn.functional.interpolate(Tensor([1, 0, 640, 640],"float32"), tuple(160,160,), mode="nearest", )
paddle.nn.functional.interpolate(Tensor([1, 0, 686, 1024],"float32"), tuple(429,640,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 0, 704, 704],"float32"), size=list[352,352,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 0, 707, 576],"float32"), size=list[12,9,], )
paddle.nn.functional.interpolate(Tensor([1, 0, 707, 576],"float32"), size=list[23,18,], )
paddle.nn.functional.interpolate(Tensor([1, 0, 707, 576],"float32"), size=list[45,36,], )
paddle.nn.functional.interpolate(Tensor([1, 0, 707, 576],"float32"), size=list[89,72,], )
paddle.nn.functional.interpolate(Tensor([1, 0, 736, 736],"float32"), size=list[368,368,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 0, 768, 576],"float32"), size=list[12,9,], )
paddle.nn.functional.interpolate(Tensor([1, 0, 768, 576],"float32"), size=list[192,144,], )
paddle.nn.functional.interpolate(Tensor([1, 0, 768, 576],"float32"), size=list[24,18,], )
paddle.nn.functional.interpolate(Tensor([1, 0, 768, 576],"float32"), size=list[48,36,], )
paddle.nn.functional.interpolate(Tensor([1, 0, 768, 576],"float32"), size=list[96,72,], )
paddle.nn.functional.interpolate(Tensor([1, 0, 768, 768],"float32"), size=list[384,384,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 0, 800, 907],"float32"), size=tuple(25,29,), )
paddle.nn.functional.interpolate(Tensor([1, 0, 88, 88],"float32"), size=list[88,88,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 0, 92, 92],"float32"), size=list[92,92,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 0, 96, 96],"float32"), size=list[96,96,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 1, 0, 1024],"float32"), tuple(429,640,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 1, 0, 16],"float32"), size=tuple(256,256,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 1, 0, 176],"float32"), scale_factor=2, mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 1, 0, 184],"float32"), scale_factor=2, mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 1, 0, 256],"float32"), tuple(1024,1024,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 1, 0, 32],"float32"), size=tuple(256,256,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 1, 0, 480],"float32"), size=list[10,8,], )
paddle.nn.functional.interpolate(Tensor([1, 1, 0, 480],"float32"), size=list[20,15,], )
paddle.nn.functional.interpolate(Tensor([1, 1, 0, 480],"float32"), size=list[40,30,], )
paddle.nn.functional.interpolate(Tensor([1, 1, 0, 480],"float32"), size=list[80,60,], )
paddle.nn.functional.interpolate(Tensor([1, 1, 0, 576],"float32"), size=list[12,9,], )
paddle.nn.functional.interpolate(Tensor([1, 1, 0, 576],"float32"), size=list[192,144,], )
paddle.nn.functional.interpolate(Tensor([1, 1, 0, 576],"float32"), size=list[23,18,], )
paddle.nn.functional.interpolate(Tensor([1, 1, 0, 576],"float32"), size=list[24,18,], )
paddle.nn.functional.interpolate(Tensor([1, 1, 0, 576],"float32"), size=list[45,36,], )
paddle.nn.functional.interpolate(Tensor([1, 1, 0, 576],"float32"), size=list[48,36,], )
paddle.nn.functional.interpolate(Tensor([1, 1, 0, 576],"float32"), size=list[89,72,], )
paddle.nn.functional.interpolate(Tensor([1, 1, 0, 576],"float32"), size=list[96,72,], )
paddle.nn.functional.interpolate(Tensor([1, 1, 0, 640],"float32"), tuple(160,160,), mode="nearest", )
paddle.nn.functional.interpolate(Tensor([1, 1, 0, 704],"float32"), size=list[352,352,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 1, 0, 736],"float32"), size=list[368,368,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 1, 0, 768],"float32"), size=list[384,384,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 1, 0, 798],"float32"), size=list[144,200,], )
paddle.nn.functional.interpolate(Tensor([1, 1, 0, 798],"float32"), size=list[18,25,], )
paddle.nn.functional.interpolate(Tensor([1, 1, 0, 798],"float32"), size=list[36,50,], )
paddle.nn.functional.interpolate(Tensor([1, 1, 0, 798],"float32"), size=list[72,100,], )
paddle.nn.functional.interpolate(Tensor([1, 1, 0, 798],"float32"), size=list[9,13,], )
paddle.nn.functional.interpolate(Tensor([1, 1, 16, 0],"float32"), size=tuple(256,256,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 1, 176, 0],"float32"), scale_factor=2, mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 1, 184, 0],"float32"), scale_factor=2, mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 1, 256, 0],"float32"), tuple(1024,1024,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 1, 32, 0],"float32"), size=tuple(256,256,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 1, 576, 0],"float32"), size=list[144,200,], )
paddle.nn.functional.interpolate(Tensor([1, 1, 576, 0],"float32"), size=list[18,25,], )
paddle.nn.functional.interpolate(Tensor([1, 1, 576, 0],"float32"), size=list[36,50,], )
paddle.nn.functional.interpolate(Tensor([1, 1, 576, 0],"float32"), size=list[72,100,], )
paddle.nn.functional.interpolate(Tensor([1, 1, 576, 0],"float32"), size=list[9,13,], )
paddle.nn.functional.interpolate(Tensor([1, 1, 640, 0],"float32"), size=list[10,8,], )
paddle.nn.functional.interpolate(Tensor([1, 1, 640, 0],"float32"), size=list[20,15,], )
paddle.nn.functional.interpolate(Tensor([1, 1, 640, 0],"float32"), size=list[40,30,], )
paddle.nn.functional.interpolate(Tensor([1, 1, 640, 0],"float32"), size=list[80,60,], )
paddle.nn.functional.interpolate(Tensor([1, 1, 640, 0],"float32"), tuple(160,160,), mode="nearest", )
paddle.nn.functional.interpolate(Tensor([1, 1, 686, 0],"float32"), tuple(429,640,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 1, 704, 0],"float32"), size=list[352,352,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 1, 707, 0],"float32"), size=list[12,9,], )
paddle.nn.functional.interpolate(Tensor([1, 1, 707, 0],"float32"), size=list[23,18,], )
paddle.nn.functional.interpolate(Tensor([1, 1, 707, 0],"float32"), size=list[45,36,], )
paddle.nn.functional.interpolate(Tensor([1, 1, 707, 0],"float32"), size=list[89,72,], )
paddle.nn.functional.interpolate(Tensor([1, 1, 736, 0],"float32"), size=list[368,368,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 1, 768, 0],"float32"), size=list[12,9,], )
paddle.nn.functional.interpolate(Tensor([1, 1, 768, 0],"float32"), size=list[192,144,], )
paddle.nn.functional.interpolate(Tensor([1, 1, 768, 0],"float32"), size=list[24,18,], )
paddle.nn.functional.interpolate(Tensor([1, 1, 768, 0],"float32"), size=list[384,384,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 1, 768, 0],"float32"), size=list[48,36,], )
paddle.nn.functional.interpolate(Tensor([1, 1, 768, 0],"float32"), size=list[96,72,], )
paddle.nn.functional.interpolate(Tensor([1, 100, 0, 704],"float32"), size=list[352,352,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 100, 0, 736],"float32"), size=list[368,368,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 100, 0, 768],"float32"), size=list[384,384,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 100, 704, 0],"float32"), size=list[352,352,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 100, 736, 0],"float32"), size=list[368,368,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 100, 768, 0],"float32"), size=list[384,384,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 128, 0, 1],"float32"), list[128,128,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([1, 128, 0, 1],"float32"), list[16,32,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 128, 0, 128],"float32"), list[256,256,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([1, 128, 0, 136],"float32"), size=None, scale_factor=2, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([1, 128, 0, 152],"float32"), size=None, scale_factor=2, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([1, 128, 0, 2],"float32"), list[128,128,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([1, 128, 0, 2],"float32"), list[16,32,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 128, 0, 32],"float32"), list[128,128,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 128, 0, 32],"float32"), list[16,32,], mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([1, 128, 0, 32],"float32"), list[32,64,], mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([1, 128, 0, 92],"float32"), size=list[92,92,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 128, 0],"float16"), size=tuple(16,), mode="linear", align_corners=False, data_format="NCW", )
paddle.nn.functional.interpolate(Tensor([1, 128, 0],"float32"), size=tuple(16,), mode="linear", align_corners=False, data_format="NCW", )
paddle.nn.functional.interpolate(Tensor([1, 128, 1, 0],"float32"), list[128,128,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([1, 128, 1, 0],"float32"), list[16,32,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 128, 100, 0],"float32"), size=None, scale_factor=2, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([1, 128, 128, 0],"float32"), list[256,256,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([1, 128, 16, 0],"float32"), list[16,32,], mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([1, 128, 16, 0],"float32"), list[32,64,], mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([1, 128, 2, 0],"float32"), list[128,128,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([1, 128, 2, 0],"float32"), list[16,32,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 128, 32, 0],"float32"), list[128,128,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 128, 92, 0],"float32"), size=list[92,92,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 160, 0, 18],"float32"), size=None, scale_factor=2, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([1, 160, 0, 19],"float32"), size=None, scale_factor=2, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([1, 160, 18, 0],"float32"), size=None, scale_factor=2, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([1, 160, 19, 0],"float32"), size=None, scale_factor=2, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([1, 19, 0, 128],"float32"), list[1024,1024,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 19, 0, 128],"float32"), list[512,1024,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 19, 0, 256],"float32"), list[1024,1024,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 19, 0, 256],"float32"), list[512,1024,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 19, 0, 256],"float32"), size=list[1024,1024,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 19, 128, 0],"float32"), list[1024,1024,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 19, 128, 0],"float32"), list[512,1024,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 19, 256, 0],"float32"), list[1024,1024,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 19, 256, 0],"float32"), size=list[1024,1024,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 19, 64, 0],"float32"), list[512,1024,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 192, 0, 100],"float32"), scale_factor=2.0, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 192, 0, 104],"float32"), scale_factor=2.0, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 192, 0, 16],"float32"), size=tuple(24,24,), mode="bicubic", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 192, 0],"float16"), size=tuple(8,), mode="linear", align_corners=False, data_format="NCW", )
paddle.nn.functional.interpolate(Tensor([1, 192, 0],"float32"), size=tuple(8,), mode="linear", align_corners=False, data_format="NCW", )
paddle.nn.functional.interpolate(Tensor([1, 192, 100, 0],"float32"), scale_factor=2.0, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 192, 104, 0],"float32"), scale_factor=2.0, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 192, 16, 0],"float32"), size=tuple(24,24,), mode="bicubic", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 2, 0, 128],"float16"), list[512,512,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 2, 0, 128],"float32"), list[496,512,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 2, 0, 128],"float32"), list[512,512,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 2, 0, 128],"float32"), size=list[496,512,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 2, 0, 128],"float32"), size=list[512,512,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 2, 0, 544],"float32"), size=list[272,272,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 2, 0, 64],"float32"), list[496,512,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 2, 0, 64],"float32"), list[512,512,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 2, 124, 0],"float32"), list[496,512,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 2, 124, 0],"float32"), size=list[496,512,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 2, 128, 0],"float16"), list[512,512,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 2, 128, 0],"float32"), list[512,512,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 2, 128, 0],"float32"), size=list[512,512,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 2, 544, 0],"float32"), size=list[272,272,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 2, 62, 0],"float32"), list[496,512,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 2, 64, 0],"float32"), list[512,512,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 200, 0, 544],"float32"), size=list[272,272,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 200, 544, 0],"float32"), size=list[272,272,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 256, 0, 1],"float16"), list[64,64,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 256, 0, 1],"float32"), list[62,64,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 256, 0, 1],"float32"), list[64,128,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 256, 0, 1],"float32"), list[64,64,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 256, 0, 128],"float32"), list[128,256,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 256, 0, 128],"float32"), size=list[256,256,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 256, 0, 13],"float32"), size=list[38,25,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([1, 256, 0, 136],"float32"), scale_factor=2.0, mode="nearest", )
paddle.nn.functional.interpolate(Tensor([1, 256, 0, 152],"float32"), scale_factor=2.0, mode="nearest", )
paddle.nn.functional.interpolate(Tensor([1, 256, 0, 16],"float32"), size=list[124,128,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 256, 0, 16],"float32"), size=list[128,128,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 256, 0, 17],"float32"), size=list[25,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([1, 256, 0, 19],"float32"), size=list[25,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([1, 256, 0, 20],"float32"), size=list[25,39,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([1, 256, 0, 272],"float32"), scale_factor=0.5, align_corners=False, align_mode=0, mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([1, 256, 0, 304],"float32"), scale_factor=0.5, align_corners=False, align_mode=0, mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([1, 256, 0, 32],"float32"), size=list[124,128,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 256, 0, 32],"float32"), size=list[128,128,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 256, 0, 32],"float32"), size=list[256,256,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 256, 0, 64],"float16"), list[128,128,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 256, 0, 64],"float32"), list[124,128,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 256, 0, 64],"float32"), list[128,128,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 256, 0, 88],"float32"), size=list[88,88,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 256, 1, 0],"float16"), list[64,64,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 256, 1, 0],"float32"), list[62,64,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 256, 1, 0],"float32"), list[64,128,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 256, 1, 0],"float32"), list[64,64,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 256, 100, 0],"float32"), scale_factor=2.0, mode="nearest", )
paddle.nn.functional.interpolate(Tensor([1, 256, 128, 0],"float32"), size=list[256,256,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 256, 13, 0],"float32"), size=list[25,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([1, 256, 13, 0],"float32"), size=list[25,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([1, 256, 13, 0],"float32"), size=list[25,39,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([1, 256, 16, 0],"float32"), size=list[124,128,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 256, 16, 0],"float32"), size=list[128,128,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 256, 19, 0],"float32"), size=list[38,25,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([1, 256, 200, 0],"float32"), scale_factor=0.5, align_corners=False, align_mode=0, mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([1, 256, 31, 0],"float32"), size=list[124,128,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 256, 32, 0],"float32"), size=list[128,128,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 256, 32, 0],"float32"), size=list[256,256,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 256, 62, 0],"float32"), list[124,128,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 256, 64, 0],"float16"), list[128,128,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 256, 64, 0],"float32"), list[128,128,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 256, 64, 0],"float32"), list[128,256,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 256, 88, 0],"float32"), size=list[88,88,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 258, 0, 136],"float32"), size=list[36,36,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([1, 258, 0, 136],"float32"), size=list[40,40,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([1, 258, 0, 152],"float32"), size=list[36,36,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([1, 258, 0, 152],"float32"), size=list[40,40,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([1, 258, 0, 34],"float32"), size=list[12,12,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([1, 258, 0, 34],"float32"), size=list[16,16,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([1, 258, 0, 38],"float32"), size=list[12,12,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([1, 258, 0, 38],"float32"), size=list[16,16,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([1, 258, 0, 68],"float32"), size=list[24,24,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([1, 258, 0, 76],"float32"), size=list[24,24,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([1, 258, 100, 0],"float32"), size=list[36,36,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([1, 258, 100, 0],"float32"), size=list[40,40,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([1, 258, 25, 0],"float32"), size=list[12,12,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([1, 258, 25, 0],"float32"), size=list[16,16,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([1, 258, 50, 0],"float32"), size=list[24,24,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([1, 3, 0, 161],"float32"), size=tuple(224,224,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 3, 0, 200],"float32"), size=tuple(180,160,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 3, 0, 204],"float32"), size=tuple(280,280,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 3, 0, 24],"float32"), size=tuple(46,40,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 3, 0, 253],"float32"), size=tuple(280,280,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 3, 0, 260],"float32"), size=tuple(224,224,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 3, 0, 280],"float32"), size=tuple(256,200,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 3, 0, 350],"float32"), size=tuple(300,375,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 3, 0, 64],"float32"), size=tuple(16,16,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 3, 0, 64],"float32"), size=tuple(64,64,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 3, 0],"float16"), scale_factor=2, mode="linear", align_mode=1, align_corners=False, data_format="NCW", )
paddle.nn.functional.interpolate(Tensor([1, 3, 0],"float32"), scale_factor=2, mode="linear", align_mode=1, align_corners=False, data_format="NCW", )
paddle.nn.functional.interpolate(Tensor([1, 3, 0],"float32"), size=list[64,], mode="linear", align_mode=1, align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 3, 0],"float32"), size=list[64,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NCW", name=None, )
paddle.nn.functional.interpolate(Tensor([1, 3, 181, 0],"float32"), size=tuple(280,280,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 3, 182, 0],"float32"), size=tuple(224,224,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 3, 200, 0],"float32"), size=tuple(280,280,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 3, 235, 0],"float32"), size=tuple(224,224,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 3, 256, 0],"float32"), size=tuple(180,160,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 3, 28, 0],"float32"), size=tuple(46,40,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 3, 280, 0],"float32"), size=tuple(256,200,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 3, 280, 0],"float32"), size=tuple(300,375,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 3, 64, 0],"float32"), size=tuple(16,16,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 3, 64, 0],"float32"), size=tuple(64,64,), mode="bilinear", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 32, 0, 1],"float32"), list[32,32,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([1, 32, 0, 2],"float32"), list[32,32,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([1, 32, 0, 2],"float32"), size=tuple(2,2,), mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([1, 32, 1, 0],"float32"), list[32,32,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([1, 32, 2, 0],"float32"), list[32,32,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([1, 32, 2, 0],"float32"), size=tuple(2,2,), mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([1, 4, 0, 907],"float32"), size=tuple(25,29,), )
paddle.nn.functional.interpolate(Tensor([1, 4, 800, 0],"float32"), size=tuple(25,29,), )
paddle.nn.functional.interpolate(Tensor([1, 64, 0, 64],"float32"), list[64,128,], mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([1, 64, 0, 92],"float32"), size=list[92,92,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 64, 0, 96],"float32"), size=list[96,96,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 64, 32, 0],"float32"), list[64,128,], mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([1, 64, 92, 0],"float32"), size=list[92,92,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 64, 96, 0],"float32"), size=list[96,96,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 768, 0, 14],"float32"), size=tuple(28,28,), align_corners=False, mode="bicubic", )
paddle.nn.functional.interpolate(Tensor([1, 768, 14, 0],"float32"), size=tuple(28,28,), align_corners=False, mode="bicubic", )
paddle.nn.functional.interpolate(Tensor([16, 0, 16, 12],"float32"), size=list[32,24,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([16, 0, 16, 12],"float32"), size=None, scale_factor=4, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([16, 0, 2, 2],"float32"), scale_factor=2, )
paddle.nn.functional.interpolate(Tensor([16, 0, 32, 24],"float32"), size=list[64,48,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([16, 0, 4, 3],"float32"), size=list[8,6,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([16, 0, 4, 3],"float32"), size=None, scale_factor=8, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([16, 0, 4, 4],"float32"), scale_factor=2, )
paddle.nn.functional.interpolate(Tensor([16, 0, 40, 40],"float16"), scale_factor=2.0, mode="nearest", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([16, 0, 40, 40],"float32"), scale_factor=2.0, mode="nearest", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([16, 0, 8, 6],"float32"), size=list[16,12,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([16, 0, 8, 6],"float32"), size=None, scale_factor=4, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([16, 0, 8, 6],"float32"), size=None, scale_factor=8, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([16, 0, 80, 1700],"float32"), scale_factor=tuple(1,3,), mode="nearest", )
paddle.nn.functional.interpolate(Tensor([16, 0, 80, 340],"float32"), scale_factor=tuple(1,5,), mode="nearest", )
paddle.nn.functional.interpolate(Tensor([16, 0, 80, 5100],"float32"), scale_factor=tuple(1,5,), mode="nearest", )
paddle.nn.functional.interpolate(Tensor([16, 0, 80, 85],"float32"), scale_factor=tuple(1,4,), mode="nearest", )
paddle.nn.functional.interpolate(Tensor([16, 1, 0, 1700],"float32"), scale_factor=tuple(1,3,), mode="nearest", )
paddle.nn.functional.interpolate(Tensor([16, 1, 0, 340],"float32"), scale_factor=tuple(1,5,), mode="nearest", )
paddle.nn.functional.interpolate(Tensor([16, 1, 0, 5100],"float32"), scale_factor=tuple(1,5,), mode="nearest", )
paddle.nn.functional.interpolate(Tensor([16, 1, 0, 85],"float32"), scale_factor=tuple(1,4,), mode="nearest", )
paddle.nn.functional.interpolate(Tensor([16, 1, 80, 0],"float32"), scale_factor=tuple(1,3,), mode="nearest", )
paddle.nn.functional.interpolate(Tensor([16, 1, 80, 0],"float32"), scale_factor=tuple(1,4,), mode="nearest", )
paddle.nn.functional.interpolate(Tensor([16, 1, 80, 0],"float32"), scale_factor=tuple(1,5,), mode="nearest", )
paddle.nn.functional.interpolate(Tensor([16, 1024, 0, 2],"float32"), scale_factor=2, )
paddle.nn.functional.interpolate(Tensor([16, 1024, 0, 4],"float32"), scale_factor=2, )
paddle.nn.functional.interpolate(Tensor([16, 1024, 2, 0],"float32"), scale_factor=2, )
paddle.nn.functional.interpolate(Tensor([16, 1024, 4, 0],"float32"), scale_factor=2, )
paddle.nn.functional.interpolate(Tensor([16, 160, 0, 3],"float32"), size=list[8,6,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([16, 160, 0, 6],"float32"), size=list[16,12,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([16, 160, 4, 0],"float32"), size=list[8,6,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([16, 160, 8, 0],"float32"), size=list[16,12,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([16, 256, 0, 40],"float16"), scale_factor=2.0, mode="nearest", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([16, 256, 0, 40],"float32"), scale_factor=2.0, mode="nearest", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([16, 256, 40, 0],"float16"), scale_factor=2.0, mode="nearest", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([16, 256, 40, 0],"float32"), scale_factor=2.0, mode="nearest", data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([16, 40, 0, 12],"float32"), size=list[32,24,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([16, 40, 0, 12],"float32"), size=None, scale_factor=4, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([16, 40, 0, 24],"float32"), size=list[64,48,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([16, 40, 0, 3],"float32"), size=None, scale_factor=8, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([16, 40, 0, 6],"float32"), size=None, scale_factor=4, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([16, 40, 0, 6],"float32"), size=None, scale_factor=8, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([16, 40, 16, 0],"float32"), size=list[32,24,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([16, 40, 16, 0],"float32"), size=None, scale_factor=4, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([16, 40, 32, 0],"float32"), size=list[64,48,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([16, 40, 4, 0],"float32"), size=None, scale_factor=8, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([16, 40, 8, 0],"float32"), size=None, scale_factor=4, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([16, 40, 8, 0],"float32"), size=None, scale_factor=8, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([16, 80, 0, 12],"float32"), size=list[32,24,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([16, 80, 0, 6],"float32"), size=list[16,12,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([16, 80, 16, 0],"float32"), size=list[32,24,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([16, 80, 8, 0],"float32"), size=list[16,12,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([160, 0, 16, 12],"float16"), scale_factor=4, )
paddle.nn.functional.interpolate(Tensor([160, 0, 16, 12],"float32"), scale_factor=4, )
paddle.nn.functional.interpolate(Tensor([160, 0, 8, 6],"float16"), scale_factor=8, )
paddle.nn.functional.interpolate(Tensor([160, 0, 8, 6],"float32"), scale_factor=8, )
paddle.nn.functional.interpolate(Tensor([160, 32, 0, 12],"float16"), scale_factor=4, )
paddle.nn.functional.interpolate(Tensor([160, 32, 0, 12],"float32"), scale_factor=4, )
paddle.nn.functional.interpolate(Tensor([160, 32, 0, 6],"float16"), scale_factor=8, )
paddle.nn.functional.interpolate(Tensor([160, 32, 0, 6],"float32"), scale_factor=8, )
paddle.nn.functional.interpolate(Tensor([160, 32, 16, 0],"float16"), scale_factor=4, )
paddle.nn.functional.interpolate(Tensor([160, 32, 16, 0],"float32"), scale_factor=4, )
paddle.nn.functional.interpolate(Tensor([160, 32, 8, 0],"float16"), scale_factor=8, )
paddle.nn.functional.interpolate(Tensor([160, 32, 8, 0],"float32"), scale_factor=8, )
paddle.nn.functional.interpolate(Tensor([2, 0, 1, 1],"float32"), list[64,128,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([2, 0, 1, 1],"float32"), scale_factor=2, mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10, 10],"float32"), size=list[2,2,2,], scale_factor=None, mode="trilinear", align_corners=False, align_mode=0, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10, 10],"float32"), size=list[2,2,2,], scale_factor=None, mode="trilinear", align_corners=False, align_mode=1, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10, 10],"float32"), size=list[2,2,2,], scale_factor=None, mode="trilinear", align_corners=True, align_mode=0, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10, 10],"float32"), size=list[2,2,2,], scale_factor=None, mode="trilinear", align_corners=True, align_mode=1, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10, 10],"float32"), size=None, scale_factor=list[0.6,0.6,0.6,], mode="trilinear", align_corners=False, align_mode=0, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10, 10],"float32"), size=None, scale_factor=list[0.6,0.6,0.6,], mode="trilinear", align_corners=False, align_mode=1, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10, 10],"float32"), size=None, scale_factor=list[0.6,0.6,0.6,], mode="trilinear", align_corners=True, align_mode=0, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10, 10],"float32"), size=None, scale_factor=list[0.6,0.6,0.6,], mode="trilinear", align_corners=True, align_mode=1, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10, 10],"float64"), size=list[2,2,2,], scale_factor=None, mode="trilinear", align_corners=False, align_mode=0, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10, 10],"float64"), size=list[2,2,2,], scale_factor=None, mode="trilinear", align_corners=False, align_mode=1, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10, 10],"float64"), size=list[2,2,2,], scale_factor=None, mode="trilinear", align_corners=True, align_mode=0, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10, 10],"float64"), size=list[2,2,2,], scale_factor=None, mode="trilinear", align_corners=True, align_mode=1, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10, 10],"float64"), size=None, scale_factor=list[0.6,0.6,0.6,], mode="trilinear", align_corners=False, align_mode=0, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10, 10],"float64"), size=None, scale_factor=list[0.6,0.6,0.6,], mode="trilinear", align_corners=False, align_mode=1, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10, 10],"float64"), size=None, scale_factor=list[0.6,0.6,0.6,], mode="trilinear", align_corners=True, align_mode=0, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10, 10],"float64"), size=None, scale_factor=list[0.6,0.6,0.6,], mode="trilinear", align_corners=True, align_mode=1, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10, 4],"float64"), size=list[4,2,3,], scale_factor=None, mode="trilinear", align_corners=False, align_mode=0, data_format="NDHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10, 4],"float64"), size=list[4,2,3,], scale_factor=None, mode="trilinear", align_corners=False, align_mode=1, data_format="NDHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10, 4],"float64"), size=list[4,2,3,], scale_factor=None, mode="trilinear", align_corners=True, align_mode=0, data_format="NDHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10, 4],"float64"), size=list[4,2,3,], scale_factor=None, mode="trilinear", align_corners=True, align_mode=1, data_format="NDHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10, 4],"float64"), size=None, scale_factor=list[0.6,1.6,1.7,], mode="trilinear", align_corners=False, align_mode=0, data_format="NDHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10, 4],"float64"), size=None, scale_factor=list[0.6,1.6,1.7,], mode="trilinear", align_corners=False, align_mode=1, data_format="NDHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10, 4],"float64"), size=None, scale_factor=list[0.6,1.6,1.7,], mode="trilinear", align_corners=True, align_mode=0, data_format="NDHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10, 4],"float64"), size=None, scale_factor=list[0.6,1.6,1.7,], mode="trilinear", align_corners=True, align_mode=1, data_format="NDHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float32"), size=list[13,13,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float32"), size=list[13,13,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float32"), size=list[13,13,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float32"), size=list[13,13,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float32"), size=list[13,13,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float32"), size=list[13,13,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float32"), size=list[13,13,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float32"), size=list[13,13,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float32"), size=list[13,13,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float32"), size=list[13,13,], scale_factor=None, mode="nearest", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float32"), size=list[13,2,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float32"), size=list[13,2,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float32"), size=list[13,2,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float32"), size=list[13,2,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float32"), size=list[13,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float32"), size=list[13,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float32"), size=list[13,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float32"), size=list[13,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float32"), size=list[13,2,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float32"), size=list[13,2,], scale_factor=None, mode="nearest", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float32"), size=list[13,24,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float32"), size=list[13,24,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float32"), size=list[13,24,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float32"), size=list[13,24,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float32"), size=list[2,13,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float32"), size=list[2,13,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float32"), size=list[2,13,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float32"), size=list[2,13,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float32"), size=list[2,13,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float32"), size=list[2,13,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float32"), size=list[2,13,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float32"), size=list[2,13,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float32"), size=list[2,13,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float32"), size=list[2,13,], scale_factor=None, mode="nearest", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float32"), size=list[2,2,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float32"), size=list[2,2,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float32"), size=list[2,2,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float32"), size=list[2,2,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float32"), size=list[2,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float32"), size=list[2,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float32"), size=list[2,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float32"), size=list[2,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float32"), size=list[2,2,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float32"), size=list[2,2,], scale_factor=None, mode="nearest", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float32"), size=list[2,24,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float32"), size=list[2,24,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float32"), size=list[2,24,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float32"), size=list[2,24,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float32"), size=list[24,13,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float32"), size=list[24,13,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float32"), size=list[24,13,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float32"), size=list[24,13,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float32"), size=list[24,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float32"), size=list[24,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float32"), size=list[24,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float32"), size=list[24,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float32"), size=list[24,24,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float32"), size=list[24,24,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float32"), size=list[24,24,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float32"), size=list[24,24,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float32"), size=None, scale_factor=list[0.6,0.6,], mode="bicubic", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float32"), size=None, scale_factor=list[0.6,0.6,], mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float32"), size=None, scale_factor=list[0.6,0.6,], mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float32"), size=None, scale_factor=list[0.6,0.6,], mode="bicubic", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float32"), size=None, scale_factor=list[0.6,0.6,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float32"), size=None, scale_factor=list[0.6,0.6,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float32"), size=None, scale_factor=list[0.6,0.6,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float32"), size=None, scale_factor=list[0.6,0.6,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float32"), size=None, scale_factor=list[0.6,0.6,], mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float32"), size=None, scale_factor=list[0.6,0.6,], mode="nearest", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float32"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bicubic", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float32"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float32"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float32"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bicubic", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float32"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float32"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float32"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float32"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float32"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float32"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="nearest", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float32"), size=None, scale_factor=list[0.6,2.9999999999999996,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float32"), size=None, scale_factor=list[0.6,2.9999999999999996,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float32"), size=None, scale_factor=list[0.6,2.9999999999999996,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float32"), size=None, scale_factor=list[0.6,2.9999999999999996,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float32"), size=None, scale_factor=list[0.6,4.199999999999999,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float32"), size=None, scale_factor=list[0.6,4.199999999999999,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float32"), size=None, scale_factor=list[0.6,4.199999999999999,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float32"), size=None, scale_factor=list[0.6,4.199999999999999,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float32"), size=None, scale_factor=list[0.6,5.399999999999999,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float32"), size=None, scale_factor=list[0.6,5.399999999999999,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float32"), size=None, scale_factor=list[0.6,5.399999999999999,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float32"), size=None, scale_factor=list[0.6,5.399999999999999,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bicubic", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bicubic", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="nearest", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bicubic", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bicubic", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="nearest", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,2.9999999999999996,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,2.9999999999999996,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,2.9999999999999996,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,2.9999999999999996,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,4.199999999999999,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,4.199999999999999,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,4.199999999999999,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,4.199999999999999,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,5.399999999999999,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,5.399999999999999,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,5.399999999999999,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,5.399999999999999,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float32"), size=None, scale_factor=list[2.9999999999999996,0.6,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float32"), size=None, scale_factor=list[2.9999999999999996,0.6,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float32"), size=None, scale_factor=list[2.9999999999999996,0.6,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float32"), size=None, scale_factor=list[2.9999999999999996,0.6,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float32"), size=None, scale_factor=list[2.9999999999999996,1.7999999999999998,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float32"), size=None, scale_factor=list[2.9999999999999996,1.7999999999999998,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float32"), size=None, scale_factor=list[2.9999999999999996,1.7999999999999998,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float32"), size=None, scale_factor=list[2.9999999999999996,1.7999999999999998,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float32"), size=None, scale_factor=list[2.9999999999999996,2.9999999999999996,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float32"), size=None, scale_factor=list[2.9999999999999996,2.9999999999999996,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float32"), size=None, scale_factor=list[2.9999999999999996,2.9999999999999996,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float32"), size=None, scale_factor=list[2.9999999999999996,2.9999999999999996,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float32"), size=None, scale_factor=list[2.9999999999999996,4.199999999999999,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float32"), size=None, scale_factor=list[2.9999999999999996,4.199999999999999,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float32"), size=None, scale_factor=list[2.9999999999999996,4.199999999999999,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float32"), size=None, scale_factor=list[2.9999999999999996,4.199999999999999,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float32"), size=None, scale_factor=list[2.9999999999999996,5.399999999999999,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float32"), size=None, scale_factor=list[2.9999999999999996,5.399999999999999,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float32"), size=None, scale_factor=list[2.9999999999999996,5.399999999999999,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float32"), size=None, scale_factor=list[2.9999999999999996,5.399999999999999,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float64"), size=list[13,13,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float64"), size=list[13,13,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float64"), size=list[13,13,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float64"), size=list[13,13,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float64"), size=list[13,13,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float64"), size=list[13,13,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float64"), size=list[13,13,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float64"), size=list[13,13,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float64"), size=list[13,13,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float64"), size=list[13,13,], scale_factor=None, mode="nearest", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float64"), size=list[13,2,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float64"), size=list[13,2,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float64"), size=list[13,2,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float64"), size=list[13,2,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float64"), size=list[13,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float64"), size=list[13,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float64"), size=list[13,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float64"), size=list[13,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float64"), size=list[13,2,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float64"), size=list[13,2,], scale_factor=None, mode="nearest", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float64"), size=list[13,24,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float64"), size=list[13,24,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float64"), size=list[13,24,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float64"), size=list[13,24,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float64"), size=list[2,13,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float64"), size=list[2,13,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float64"), size=list[2,13,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float64"), size=list[2,13,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float64"), size=list[2,13,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float64"), size=list[2,13,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float64"), size=list[2,13,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float64"), size=list[2,13,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float64"), size=list[2,13,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float64"), size=list[2,13,], scale_factor=None, mode="nearest", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float64"), size=list[2,2,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float64"), size=list[2,2,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float64"), size=list[2,2,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float64"), size=list[2,2,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float64"), size=list[2,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float64"), size=list[2,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float64"), size=list[2,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float64"), size=list[2,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float64"), size=list[2,2,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float64"), size=list[2,2,], scale_factor=None, mode="nearest", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float64"), size=list[2,24,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float64"), size=list[2,24,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float64"), size=list[2,24,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float64"), size=list[2,24,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float64"), size=list[24,13,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float64"), size=list[24,13,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float64"), size=list[24,13,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float64"), size=list[24,13,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float64"), size=list[24,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float64"), size=list[24,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float64"), size=list[24,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float64"), size=list[24,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float64"), size=list[24,24,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float64"), size=list[24,24,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float64"), size=list[24,24,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float64"), size=list[24,24,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float64"), size=None, scale_factor=list[0.6,0.6,], mode="bicubic", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float64"), size=None, scale_factor=list[0.6,0.6,], mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float64"), size=None, scale_factor=list[0.6,0.6,], mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float64"), size=None, scale_factor=list[0.6,0.6,], mode="bicubic", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float64"), size=None, scale_factor=list[0.6,0.6,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float64"), size=None, scale_factor=list[0.6,0.6,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float64"), size=None, scale_factor=list[0.6,0.6,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float64"), size=None, scale_factor=list[0.6,0.6,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float64"), size=None, scale_factor=list[0.6,0.6,], mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float64"), size=None, scale_factor=list[0.6,0.6,], mode="nearest", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float64"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bicubic", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float64"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float64"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float64"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bicubic", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float64"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float64"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float64"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float64"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float64"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float64"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="nearest", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float64"), size=None, scale_factor=list[0.6,2.9999999999999996,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float64"), size=None, scale_factor=list[0.6,2.9999999999999996,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float64"), size=None, scale_factor=list[0.6,2.9999999999999996,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float64"), size=None, scale_factor=list[0.6,2.9999999999999996,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float64"), size=None, scale_factor=list[0.6,4.199999999999999,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float64"), size=None, scale_factor=list[0.6,4.199999999999999,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float64"), size=None, scale_factor=list[0.6,4.199999999999999,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float64"), size=None, scale_factor=list[0.6,4.199999999999999,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float64"), size=None, scale_factor=list[0.6,5.399999999999999,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float64"), size=None, scale_factor=list[0.6,5.399999999999999,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float64"), size=None, scale_factor=list[0.6,5.399999999999999,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float64"), size=None, scale_factor=list[0.6,5.399999999999999,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bicubic", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bicubic", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="nearest", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bicubic", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bicubic", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="nearest", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,2.9999999999999996,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,2.9999999999999996,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,2.9999999999999996,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,2.9999999999999996,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,4.199999999999999,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,4.199999999999999,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,4.199999999999999,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,4.199999999999999,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,5.399999999999999,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,5.399999999999999,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,5.399999999999999,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,5.399999999999999,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,0.6,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,0.6,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,0.6,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,0.6,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,1.7999999999999998,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,1.7999999999999998,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,1.7999999999999998,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,1.7999999999999998,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,2.9999999999999996,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,2.9999999999999996,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,2.9999999999999996,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,2.9999999999999996,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,4.199999999999999,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,4.199999999999999,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,4.199999999999999,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,4.199999999999999,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,5.399999999999999,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,5.399999999999999,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,5.399999999999999,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,5.399999999999999,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 2],"float64"), size=list[13,13,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 2],"float64"), size=list[13,13,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 2],"float64"), size=list[13,13,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 2],"float64"), size=list[13,13,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 2],"float64"), size=list[13,13,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 2],"float64"), size=list[13,13,], scale_factor=None, mode="nearest", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 2],"float64"), size=list[13,2,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 2],"float64"), size=list[13,2,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 2],"float64"), size=list[13,2,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 2],"float64"), size=list[13,2,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 2],"float64"), size=list[13,2,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 2],"float64"), size=list[13,2,], scale_factor=None, mode="nearest", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 2],"float64"), size=list[14,12,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 2],"float64"), size=list[14,12,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 2],"float64"), size=list[14,12,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 2],"float64"), size=list[14,12,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 2],"float64"), size=list[14,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 2],"float64"), size=list[14,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 2],"float64"), size=list[14,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 2],"float64"), size=list[14,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 2],"float64"), size=list[14,22,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 2],"float64"), size=list[14,22,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 2],"float64"), size=list[14,22,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 2],"float64"), size=list[14,22,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 2],"float64"), size=list[2,12,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 2],"float64"), size=list[2,12,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 2],"float64"), size=list[2,12,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 2],"float64"), size=list[2,12,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 2],"float64"), size=list[2,13,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 2],"float64"), size=list[2,13,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 2],"float64"), size=list[2,13,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 2],"float64"), size=list[2,13,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 2],"float64"), size=list[2,13,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 2],"float64"), size=list[2,13,], scale_factor=None, mode="nearest", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 2],"float64"), size=list[2,2,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 2],"float64"), size=list[2,2,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 2],"float64"), size=list[2,2,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 2],"float64"), size=list[2,2,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 2],"float64"), size=list[2,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 2],"float64"), size=list[2,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 2],"float64"), size=list[2,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 2],"float64"), size=list[2,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 2],"float64"), size=list[2,2,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 2],"float64"), size=list[2,2,], scale_factor=None, mode="nearest", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 2],"float64"), size=list[2,22,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 2],"float64"), size=list[2,22,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 2],"float64"), size=list[2,22,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 2],"float64"), size=list[2,22,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 2],"float64"), size=list[26,12,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 2],"float64"), size=list[26,12,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 2],"float64"), size=list[26,12,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 2],"float64"), size=list[26,12,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 2],"float64"), size=list[26,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 2],"float64"), size=list[26,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 2],"float64"), size=list[26,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 2],"float64"), size=list[26,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 2],"float64"), size=list[26,22,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 2],"float64"), size=list[26,22,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 2],"float64"), size=list[26,22,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 2],"float64"), size=list[26,22,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 2],"float64"), size=None, scale_factor=list[0.6,0.6,], mode="bicubic", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 2],"float64"), size=None, scale_factor=list[0.6,0.6,], mode="bicubic", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 2],"float64"), size=None, scale_factor=list[0.6,0.6,], mode="bicubic", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 2],"float64"), size=None, scale_factor=list[0.6,0.6,], mode="bicubic", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 2],"float64"), size=None, scale_factor=list[0.6,0.6,], mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 2],"float64"), size=None, scale_factor=list[0.6,0.6,], mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 2],"float64"), size=None, scale_factor=list[0.6,0.6,], mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 2],"float64"), size=None, scale_factor=list[0.6,0.6,], mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 2],"float64"), size=None, scale_factor=list[0.6,0.6,], mode="nearest", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 2],"float64"), size=None, scale_factor=list[0.6,0.6,], mode="nearest", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 2],"float64"), size=None, scale_factor=list[0.6,1.7000000000000002,], mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 2],"float64"), size=None, scale_factor=list[0.6,1.7000000000000002,], mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 2],"float64"), size=None, scale_factor=list[0.6,1.7000000000000002,], mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 2],"float64"), size=None, scale_factor=list[0.6,1.7000000000000002,], mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 2],"float64"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bicubic", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 2],"float64"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bicubic", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 2],"float64"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bicubic", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 2],"float64"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bicubic", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 2],"float64"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="nearest", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 2],"float64"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="nearest", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 2],"float64"), size=None, scale_factor=list[0.6,2.8000000000000003,], mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 2],"float64"), size=None, scale_factor=list[0.6,2.8000000000000003,], mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 2],"float64"), size=None, scale_factor=list[0.6,2.8000000000000003,], mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 2],"float64"), size=None, scale_factor=list[0.6,2.8000000000000003,], mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 2],"float64"), size=None, scale_factor=list[0.6,3.9000000000000004,], mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 2],"float64"), size=None, scale_factor=list[0.6,3.9000000000000004,], mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 2],"float64"), size=None, scale_factor=list[0.6,3.9000000000000004,], mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 2],"float64"), size=None, scale_factor=list[0.6,3.9000000000000004,], mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 2],"float64"), size=None, scale_factor=list[1.7000000000000002,0.6,], mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 2],"float64"), size=None, scale_factor=list[1.7000000000000002,0.6,], mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 2],"float64"), size=None, scale_factor=list[1.7000000000000002,0.6,], mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 2],"float64"), size=None, scale_factor=list[1.7000000000000002,0.6,], mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 2],"float64"), size=None, scale_factor=list[1.7000000000000002,1.7000000000000002,], mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 2],"float64"), size=None, scale_factor=list[1.7000000000000002,1.7000000000000002,], mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 2],"float64"), size=None, scale_factor=list[1.7000000000000002,1.7000000000000002,], mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 2],"float64"), size=None, scale_factor=list[1.7000000000000002,1.7000000000000002,], mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 2],"float64"), size=None, scale_factor=list[1.7000000000000002,2.8000000000000003,], mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 2],"float64"), size=None, scale_factor=list[1.7000000000000002,2.8000000000000003,], mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 2],"float64"), size=None, scale_factor=list[1.7000000000000002,2.8000000000000003,], mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 2],"float64"), size=None, scale_factor=list[1.7000000000000002,2.8000000000000003,], mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 2],"float64"), size=None, scale_factor=list[1.7000000000000002,3.9000000000000004,], mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 2],"float64"), size=None, scale_factor=list[1.7000000000000002,3.9000000000000004,], mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 2],"float64"), size=None, scale_factor=list[1.7000000000000002,3.9000000000000004,], mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 2],"float64"), size=None, scale_factor=list[1.7000000000000002,3.9000000000000004,], mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 2],"float64"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bicubic", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 2],"float64"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bicubic", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 2],"float64"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bicubic", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 2],"float64"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bicubic", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 2],"float64"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="nearest", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 2],"float64"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="nearest", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 2],"float64"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bicubic", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 2],"float64"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bicubic", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 2],"float64"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bicubic", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 2],"float64"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bicubic", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 2],"float64"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="nearest", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 2],"float64"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="nearest", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 2],"float64"), size=None, scale_factor=list[2.8000000000000003,0.6,], mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 2],"float64"), size=None, scale_factor=list[2.8000000000000003,0.6,], mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 2],"float64"), size=None, scale_factor=list[2.8000000000000003,0.6,], mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 2],"float64"), size=None, scale_factor=list[2.8000000000000003,0.6,], mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 2],"float64"), size=None, scale_factor=list[2.8000000000000003,1.7000000000000002,], mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 2],"float64"), size=None, scale_factor=list[2.8000000000000003,1.7000000000000002,], mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 2],"float64"), size=None, scale_factor=list[2.8000000000000003,1.7000000000000002,], mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 2],"float64"), size=None, scale_factor=list[2.8000000000000003,1.7000000000000002,], mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 2],"float64"), size=None, scale_factor=list[2.8000000000000003,2.8000000000000003,], mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 2],"float64"), size=None, scale_factor=list[2.8000000000000003,2.8000000000000003,], mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 2],"float64"), size=None, scale_factor=list[2.8000000000000003,2.8000000000000003,], mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 2],"float64"), size=None, scale_factor=list[2.8000000000000003,2.8000000000000003,], mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 2],"float64"), size=None, scale_factor=list[2.8000000000000003,3.9000000000000004,], mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 2],"float64"), size=None, scale_factor=list[2.8000000000000003,3.9000000000000004,], mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 2],"float64"), size=None, scale_factor=list[2.8000000000000003,3.9000000000000004,], mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 2],"float64"), size=None, scale_factor=list[2.8000000000000003,3.9000000000000004,], mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 2],"float64"), size=None, scale_factor=list[3.9000000000000004,0.6,], mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 2],"float64"), size=None, scale_factor=list[3.9000000000000004,0.6,], mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 2],"float64"), size=None, scale_factor=list[3.9000000000000004,0.6,], mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 2],"float64"), size=None, scale_factor=list[3.9000000000000004,0.6,], mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 2],"float64"), size=None, scale_factor=list[3.9000000000000004,1.7000000000000002,], mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 2],"float64"), size=None, scale_factor=list[3.9000000000000004,1.7000000000000002,], mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 2],"float64"), size=None, scale_factor=list[3.9000000000000004,1.7000000000000002,], mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 2],"float64"), size=None, scale_factor=list[3.9000000000000004,1.7000000000000002,], mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 2],"float64"), size=None, scale_factor=list[3.9000000000000004,2.8000000000000003,], mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 2],"float64"), size=None, scale_factor=list[3.9000000000000004,2.8000000000000003,], mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 2],"float64"), size=None, scale_factor=list[3.9000000000000004,2.8000000000000003,], mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 2],"float64"), size=None, scale_factor=list[3.9000000000000004,2.8000000000000003,], mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 2],"float64"), size=None, scale_factor=list[3.9000000000000004,3.9000000000000004,], mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 2],"float64"), size=None, scale_factor=list[3.9000000000000004,3.9000000000000004,], mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 2],"float64"), size=None, scale_factor=list[3.9000000000000004,3.9000000000000004,], mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 10, 2],"float64"), size=None, scale_factor=list[3.9000000000000004,3.9000000000000004,], mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 128, 128],"float32"), size=list[512,512,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2, 0, 128, 256],"float32"), list[512,1024,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([2, 0, 16, 16],"float32"), size=list[32,32,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2, 0, 16, 16],"float32"), size=None, scale_factor=2, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 2, 2],"float32"), scale_factor=2, mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([2, 0, 256, 256],"float32"), size=list[1024,1024,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2, 0, 32, 32],"float32"), size=list[32,32,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4, 4, 3],"float16"), size=list[3,3,3,], mode="trilinear", align_corners=True, align_mode=1, data_format="NDHWC", )
paddle.nn.functional.interpolate(Tensor([2, 0, 4, 4, 3],"float32"), size=list[3,3,3,], mode="trilinear", align_corners=True, align_mode=1, data_format="NDHWC", )
paddle.nn.functional.interpolate(Tensor([2, 0, 4, 4, 4],"float16"), size=list[3,3,3,], mode="trilinear", align_corners=True, align_mode=1, data_format="NCDHW", )
paddle.nn.functional.interpolate(Tensor([2, 0, 4, 4, 4],"float32"), size=list[3,3,3,], mode="trilinear", align_corners=True, align_mode=1, data_format="NCDHW", )
paddle.nn.functional.interpolate(Tensor([2, 0, 4, 5, 6],"float64"), size=list[9,10,11,], scale_factor=None, mode="trilinear", align_corners=False, align_mode=0, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4, 5],"float64"), size=list[10,11,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4, 5],"float64"), size=list[9,10,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4, 5],"float64"), size=list[9,10,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=list[11,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=list[11,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=list[11,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=list[11,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=list[14,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=list[14,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=list[14,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=list[14,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=list[17,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=list[17,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=list[17,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=list[17,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=list[2,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=list[2,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=list[2,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=list[2,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=list[20,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=list[20,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=list[20,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=list[20,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=list[23,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=list[23,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=list[23,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=list[23,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=list[26,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=list[26,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=list[26,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=list[26,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=list[29,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=list[29,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=list[29,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=list[29,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=list[5,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=list[5,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=list[5,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=list[5,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=list[8,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=list[8,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=list[8,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=list[8,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[0.6,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[0.6,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[0.6,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[0.6,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[0.7,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[0.7,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[0.7,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[0.7,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[0.7999999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[0.7999999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[0.7999999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[0.7999999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[0.8999999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[0.8999999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[0.8999999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[0.8999999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[0.9999999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[0.9999999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[0.9999999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[0.9999999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[1.0999999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[1.0999999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[1.0999999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[1.0999999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[1.1999999999999997,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[1.1999999999999997,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[1.1999999999999997,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[1.1999999999999997,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[1.2999999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[1.2999999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[1.2999999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[1.2999999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[1.4,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[1.4,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[1.4,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[1.4,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[1.4999999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[1.4999999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[1.4999999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[1.4999999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[1.5999999999999996,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[1.5999999999999996,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[1.5999999999999996,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[1.5999999999999996,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[1.6999999999999997,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[1.6999999999999997,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[1.6999999999999997,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[1.6999999999999997,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[1.7999999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[1.7999999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[1.7999999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[1.7999999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[1.9,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[1.9,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[1.9,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[1.9,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[1.9999999999999996,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[1.9999999999999996,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[1.9999999999999996,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[1.9999999999999996,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[2.0999999999999996,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[2.0999999999999996,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[2.0999999999999996,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[2.0999999999999996,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[2.1999999999999997,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[2.1999999999999997,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[2.1999999999999997,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[2.1999999999999997,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[2.3,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[2.3,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[2.3,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[2.3,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[2.3999999999999995,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[2.3999999999999995,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[2.3999999999999995,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[2.3999999999999995,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[2.4999999999999996,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[2.4999999999999996,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[2.4999999999999996,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[2.4999999999999996,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[2.5999999999999996,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[2.5999999999999996,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[2.5999999999999996,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[2.5999999999999996,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[2.6999999999999997,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[2.6999999999999997,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[2.6999999999999997,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[2.6999999999999997,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[2.7999999999999994,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[2.7999999999999994,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[2.7999999999999994,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[2.7999999999999994,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[2.8999999999999995,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[2.8999999999999995,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[2.8999999999999995,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[2.8999999999999995,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[2.9999999999999996,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[2.9999999999999996,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[2.9999999999999996,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[2.9999999999999996,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[3.0999999999999996,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[3.0999999999999996,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[3.0999999999999996,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[3.0999999999999996,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[3.1999999999999997,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[3.1999999999999997,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[3.1999999999999997,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[3.1999999999999997,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[3.2999999999999994,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[3.2999999999999994,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[3.2999999999999994,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[3.2999999999999994,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[3.3999999999999995,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[3.3999999999999995,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[3.3999999999999995,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[3.3999999999999995,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[3.4999999999999996,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[3.4999999999999996,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[3.4999999999999996,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[3.4999999999999996,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[3.599999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[3.599999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[3.599999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[3.599999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[3.6999999999999993,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[3.6999999999999993,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[3.6999999999999993,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[3.6999999999999993,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[3.7999999999999994,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[3.7999999999999994,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[3.7999999999999994,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[3.7999999999999994,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[3.8999999999999995,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[3.8999999999999995,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[3.8999999999999995,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[3.8999999999999995,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[3.9999999999999996,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[3.9999999999999996,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[3.9999999999999996,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[3.9999999999999996,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[4.099999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[4.099999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[4.099999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[4.099999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[4.199999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[4.199999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[4.199999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[4.199999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[4.299999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[4.299999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[4.299999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[4.299999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[4.399999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[4.399999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[4.399999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[4.399999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[4.499999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[4.499999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[4.499999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[4.499999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[4.599999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[4.599999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[4.599999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[4.599999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[4.699999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[4.699999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[4.699999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[4.699999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[4.799999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[4.799999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[4.799999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[4.799999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[4.899999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[4.899999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[4.899999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[4.899999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[4.999999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[4.999999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[4.999999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[4.999999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[5.099999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[5.099999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[5.099999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[5.099999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[5.199999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[5.199999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[5.199999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[5.199999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[5.299999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[5.299999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[5.299999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[5.299999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[5.399999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[5.399999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[5.399999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[5.399999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[5.499999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[5.499999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[5.499999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[5.499999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[5.599999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[5.599999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[5.599999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[5.599999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[5.699999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[5.699999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[5.699999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[5.699999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[5.799999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[5.799999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[5.799999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[5.799999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[5.899999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[5.899999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[5.899999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[5.899999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[5.999999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[5.999999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[5.999999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[5.999999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[6.099999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[6.099999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[6.099999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[6.099999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[6.199999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[6.199999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[6.199999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[6.199999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[6.299999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[6.299999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[6.299999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[6.299999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[6.399999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[6.399999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[6.399999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[6.399999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[6.499999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[6.499999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[6.499999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[6.499999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[6.599999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[6.599999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[6.599999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[6.599999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[6.699999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[6.699999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[6.699999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[6.699999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[6.799999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[6.799999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[6.799999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[6.799999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[6.899999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[6.899999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[6.899999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[6.899999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[6.999999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[6.999999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[6.999999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[6.999999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[7.099999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[7.099999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[7.099999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[7.099999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[7.199999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[7.199999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[7.199999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[7.199999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[7.299999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[7.299999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[7.299999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[7.299999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[7.399999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[7.399999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[7.399999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[7.399999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[7.499999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[7.499999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[7.499999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[7.499999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[7.599999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[7.599999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[7.599999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[7.599999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[7.699999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[7.699999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[7.699999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[7.699999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[7.799999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[7.799999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[7.799999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[7.799999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[7.899999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[7.899999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[7.899999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[7.899999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[7.999999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[7.999999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[7.999999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[7.999999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[8.099999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[8.099999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[8.099999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[8.099999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[8.199999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[8.199999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[8.199999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[8.199999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[8.299999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[8.299999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[8.299999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[8.299999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[8.399999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[8.399999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[8.399999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[8.399999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[8.499999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[8.499999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[8.499999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[8.499999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[8.599999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[8.599999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[8.599999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[8.599999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[8.699999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[8.699999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[8.699999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[8.699999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[8.799999999999997,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[8.799999999999997,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[8.799999999999997,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[8.799999999999997,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[8.899999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[8.899999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[8.899999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float32"), size=None, scale_factor=list[8.899999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=list[11,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=list[11,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=list[11,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=list[11,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=list[14,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=list[14,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=list[14,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=list[14,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=list[17,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=list[17,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=list[17,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=list[17,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=list[2,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=list[2,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=list[2,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=list[2,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=list[20,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=list[20,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=list[20,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=list[20,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=list[23,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=list[23,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=list[23,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=list[23,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=list[26,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=list[26,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=list[26,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=list[26,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=list[29,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=list[29,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=list[29,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=list[29,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=list[5,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=list[5,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=list[5,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=list[5,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=list[8,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=list[8,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=list[8,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=list[8,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[0.4,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[0.4,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[0.4,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[0.4,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[0.6,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[0.6,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[0.6,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[0.6,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[0.6000000000000001,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[0.6000000000000001,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[0.6000000000000001,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[0.6000000000000001,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[0.7,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[0.7,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[0.7,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[0.7,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[0.7999999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[0.7999999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[0.7999999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[0.7999999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[0.8000000000000002,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[0.8000000000000002,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[0.8000000000000002,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[0.8000000000000002,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[0.8999999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[0.8999999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[0.8999999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[0.8999999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[0.9999999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[0.9999999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[0.9999999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[0.9999999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[1.0000000000000002,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[1.0000000000000002,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[1.0000000000000002,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[1.0000000000000002,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[1.0999999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[1.0999999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[1.0999999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[1.0999999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[1.1999999999999997,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[1.1999999999999997,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[1.1999999999999997,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[1.1999999999999997,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[1.2000000000000002,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[1.2000000000000002,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[1.2000000000000002,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[1.2000000000000002,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[1.2999999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[1.2999999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[1.2999999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[1.2999999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[1.4,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[1.4,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[1.4,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[1.4,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[1.4000000000000004,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[1.4000000000000004,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[1.4000000000000004,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[1.4000000000000004,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[1.4999999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[1.4999999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[1.4999999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[1.4999999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[1.5999999999999996,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[1.5999999999999996,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[1.5999999999999996,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[1.5999999999999996,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[1.6000000000000005,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[1.6000000000000005,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[1.6000000000000005,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[1.6000000000000005,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[1.6999999999999997,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[1.6999999999999997,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[1.6999999999999997,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[1.6999999999999997,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[1.7999999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[1.7999999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[1.7999999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[1.7999999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[1.8000000000000003,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[1.8000000000000003,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[1.8000000000000003,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[1.8000000000000003,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[1.9,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[1.9,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[1.9,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[1.9,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[1.9999999999999996,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[1.9999999999999996,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[1.9999999999999996,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[1.9999999999999996,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[2.0000000000000004,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[2.0000000000000004,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[2.0000000000000004,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[2.0000000000000004,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[2.0999999999999996,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[2.0999999999999996,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[2.0999999999999996,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[2.0999999999999996,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[2.1999999999999997,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[2.1999999999999997,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[2.1999999999999997,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[2.1999999999999997,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[2.2000000000000006,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[2.2000000000000006,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[2.2000000000000006,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[2.2000000000000006,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[2.3,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[2.3,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[2.3,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[2.3,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[2.3999999999999995,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[2.3999999999999995,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[2.3999999999999995,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[2.3999999999999995,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[2.400000000000001,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[2.400000000000001,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[2.400000000000001,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[2.400000000000001,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[2.4999999999999996,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[2.4999999999999996,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[2.4999999999999996,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[2.4999999999999996,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[2.5999999999999996,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[2.5999999999999996,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[2.5999999999999996,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[2.5999999999999996,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[2.6000000000000005,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[2.6000000000000005,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[2.6000000000000005,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[2.6000000000000005,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[2.6999999999999997,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[2.6999999999999997,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[2.6999999999999997,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[2.6999999999999997,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[2.7999999999999994,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[2.7999999999999994,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[2.7999999999999994,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[2.7999999999999994,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[2.8000000000000007,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[2.8000000000000007,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[2.8000000000000007,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[2.8000000000000007,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[2.8999999999999995,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[2.8999999999999995,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[2.8999999999999995,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[2.8999999999999995,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[2.9999999999999996,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[2.9999999999999996,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[2.9999999999999996,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[2.9999999999999996,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[3.000000000000001,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[3.000000000000001,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[3.000000000000001,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[3.000000000000001,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[3.0999999999999996,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[3.0999999999999996,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[3.0999999999999996,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[3.0999999999999996,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[3.1999999999999997,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[3.1999999999999997,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[3.1999999999999997,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[3.1999999999999997,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[3.2000000000000006,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[3.2000000000000006,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[3.2000000000000006,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[3.2000000000000006,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[3.2999999999999994,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[3.2999999999999994,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[3.2999999999999994,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[3.2999999999999994,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[3.3999999999999995,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[3.3999999999999995,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[3.3999999999999995,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[3.3999999999999995,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[3.400000000000001,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[3.400000000000001,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[3.400000000000001,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[3.400000000000001,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[3.4999999999999996,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[3.4999999999999996,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[3.4999999999999996,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[3.4999999999999996,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[3.599999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[3.599999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[3.599999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[3.599999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[3.600000000000001,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[3.600000000000001,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[3.600000000000001,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[3.600000000000001,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[3.6999999999999993,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[3.6999999999999993,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[3.6999999999999993,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[3.6999999999999993,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[3.7999999999999994,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[3.7999999999999994,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[3.7999999999999994,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[3.7999999999999994,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[3.800000000000001,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[3.800000000000001,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[3.800000000000001,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[3.800000000000001,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[3.8999999999999995,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[3.8999999999999995,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[3.8999999999999995,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[3.8999999999999995,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[3.9999999999999996,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[3.9999999999999996,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[3.9999999999999996,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[3.9999999999999996,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[4.000000000000002,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[4.000000000000002,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[4.000000000000002,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[4.000000000000002,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[4.099999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[4.099999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[4.099999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[4.099999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[4.199999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[4.199999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[4.199999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[4.199999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[4.200000000000001,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[4.200000000000001,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[4.200000000000001,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[4.200000000000001,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[4.299999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[4.299999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[4.299999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[4.299999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[4.399999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[4.399999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[4.399999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[4.399999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[4.400000000000002,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[4.400000000000002,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[4.400000000000002,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[4.400000000000002,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[4.499999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[4.499999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[4.499999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[4.499999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[4.599999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[4.599999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[4.599999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[4.599999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[4.600000000000001,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[4.600000000000001,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[4.600000000000001,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[4.600000000000001,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[4.699999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[4.699999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[4.699999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[4.699999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[4.799999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[4.799999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[4.799999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[4.799999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[4.800000000000002,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[4.800000000000002,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[4.800000000000002,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[4.800000000000002,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[4.899999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[4.899999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[4.899999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[4.899999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[4.999999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[4.999999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[4.999999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[4.999999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[5.000000000000002,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[5.000000000000002,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[5.000000000000002,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[5.000000000000002,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[5.099999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[5.099999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[5.099999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[5.099999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[5.199999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[5.199999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[5.199999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[5.199999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[5.200000000000002,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[5.200000000000002,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[5.200000000000002,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[5.200000000000002,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[5.299999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[5.299999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[5.299999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[5.299999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[5.399999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[5.399999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[5.399999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[5.399999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[5.400000000000002,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[5.400000000000002,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[5.400000000000002,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[5.400000000000002,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[5.499999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[5.499999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[5.499999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[5.499999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[5.599999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[5.599999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[5.599999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[5.599999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[5.600000000000002,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[5.600000000000002,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[5.600000000000002,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[5.600000000000002,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[5.699999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[5.699999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[5.699999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[5.699999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[5.799999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[5.799999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[5.799999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[5.799999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[5.8000000000000025,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[5.8000000000000025,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[5.8000000000000025,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[5.8000000000000025,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[5.899999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[5.899999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[5.899999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[5.899999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[5.999999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[5.999999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[5.999999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[5.999999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[6.000000000000002,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[6.000000000000002,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[6.000000000000002,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[6.000000000000002,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[6.099999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[6.099999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[6.099999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[6.099999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[6.199999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[6.199999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[6.199999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[6.199999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[6.200000000000002,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[6.200000000000002,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[6.200000000000002,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[6.200000000000002,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[6.299999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[6.299999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[6.299999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[6.299999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[6.399999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[6.399999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[6.399999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[6.399999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[6.400000000000002,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[6.400000000000002,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[6.400000000000002,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[6.400000000000002,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[6.499999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[6.499999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[6.499999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[6.499999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[6.599999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[6.599999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[6.599999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[6.599999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[6.600000000000002,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[6.600000000000002,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[6.600000000000002,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[6.600000000000002,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[6.699999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[6.699999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[6.699999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[6.699999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[6.799999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[6.799999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[6.799999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[6.799999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[6.8000000000000025,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[6.8000000000000025,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[6.8000000000000025,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[6.8000000000000025,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[6.899999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[6.899999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[6.899999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[6.899999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[6.999999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[6.999999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[6.999999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[6.999999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[7.000000000000003,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[7.000000000000003,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[7.000000000000003,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[7.000000000000003,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[7.099999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[7.099999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[7.099999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[7.099999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[7.199999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[7.199999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[7.199999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[7.199999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[7.200000000000003,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[7.200000000000003,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[7.200000000000003,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[7.200000000000003,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[7.299999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[7.299999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[7.299999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[7.299999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[7.399999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[7.399999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[7.399999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[7.399999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[7.400000000000003,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[7.400000000000003,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[7.400000000000003,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[7.400000000000003,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[7.499999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[7.499999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[7.499999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[7.499999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[7.599999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[7.599999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[7.599999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[7.599999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[7.600000000000003,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[7.600000000000003,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[7.600000000000003,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[7.600000000000003,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[7.699999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[7.699999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[7.699999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[7.699999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[7.799999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[7.799999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[7.799999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[7.799999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[7.8000000000000025,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[7.8000000000000025,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[7.8000000000000025,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[7.8000000000000025,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[7.899999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[7.899999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[7.899999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[7.899999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[7.999999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[7.999999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[7.999999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[7.999999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[8.000000000000002,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[8.000000000000002,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[8.000000000000002,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[8.000000000000002,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[8.099999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[8.099999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[8.099999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[8.099999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[8.199999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[8.199999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[8.199999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[8.199999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[8.200000000000003,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[8.200000000000003,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[8.200000000000003,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[8.200000000000003,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[8.299999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[8.299999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[8.299999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[8.299999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[8.399999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[8.399999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[8.399999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[8.399999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[8.400000000000004,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[8.400000000000004,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[8.400000000000004,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[8.400000000000004,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[8.499999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[8.499999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[8.499999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[8.499999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[8.599999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[8.599999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[8.599999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[8.599999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[8.600000000000003,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[8.600000000000003,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[8.600000000000003,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[8.600000000000003,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[8.699999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[8.699999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[8.699999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[8.699999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[8.799999999999997,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[8.799999999999997,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[8.799999999999997,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[8.799999999999997,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[8.800000000000002,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[8.800000000000002,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[8.800000000000002,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[8.800000000000002,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[8.899999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[8.899999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[8.899999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 4],"float64"), size=None, scale_factor=list[8.899999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 5, 5],"float16"), size=list[3,3,], mode="bicubic", align_corners=True, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([2, 0, 5, 5],"float32"), size=list[3,3,], mode="bicubic", align_corners=True, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([2, 0, 6, 10],"float32"), size=list[12,12,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 6, 10],"float64"), size=list[12,12,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 6, 10],"float64"), size=list[12,12,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 6, 10],"float64"), size=list[12,13,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 6, 10],"float64"), size=list[256,256,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 6, 10],"float64"), size=None, scale_factor=5, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 6, 10],"float64"), size=None, scale_factor=list[2,3,], mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 6, 10],"float64"), size=None, scale_factor=tuple(2,3,), mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 6, 10],"float64"), size=tuple(12,13,), scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 0, 6, 6, 6],"float16"), scale_factor=list[2,2,2,], mode="nearest", align_corners=False, data_format="NCDHW", )
paddle.nn.functional.interpolate(Tensor([2, 0, 6, 6, 6],"float32"), scale_factor=list[2,2,2,], mode="nearest", align_corners=False, data_format="NCDHW", )
paddle.nn.functional.interpolate(Tensor([2, 0, 6, 6],"float16"), scale_factor=list[2,2,], mode="nearest", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2, 0, 6, 6],"float32"), scale_factor=list[2,2,], mode="nearest", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2, 0, 6, 6],"float32"), size=list[12,12,], mode="bicubic", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2, 0, 64, 128],"float32"), list[128,256,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([2, 0, 64, 128],"float32"), list[512,1024,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2, 0, 68, 68],"float32"), size=list[68,68,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0, 10, 4],"float64"), size=list[4,2,3,], scale_factor=None, mode="trilinear", align_corners=False, align_mode=0, data_format="NDHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0, 10, 4],"float64"), size=list[4,2,3,], scale_factor=None, mode="trilinear", align_corners=False, align_mode=1, data_format="NDHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0, 10, 4],"float64"), size=list[4,2,3,], scale_factor=None, mode="trilinear", align_corners=True, align_mode=0, data_format="NDHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0, 10, 4],"float64"), size=list[4,2,3,], scale_factor=None, mode="trilinear", align_corners=True, align_mode=1, data_format="NDHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0, 10, 4],"float64"), size=None, scale_factor=list[0.6,1.6,1.7,], mode="trilinear", align_corners=False, align_mode=0, data_format="NDHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0, 10, 4],"float64"), size=None, scale_factor=list[0.6,1.6,1.7,], mode="trilinear", align_corners=False, align_mode=1, data_format="NDHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0, 10, 4],"float64"), size=None, scale_factor=list[0.6,1.6,1.7,], mode="trilinear", align_corners=True, align_mode=0, data_format="NDHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0, 10, 4],"float64"), size=None, scale_factor=list[0.6,1.6,1.7,], mode="trilinear", align_corners=True, align_mode=1, data_format="NDHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0, 2],"float64"), size=list[13,13,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0, 2],"float64"), size=list[13,13,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0, 2],"float64"), size=list[13,13,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0, 2],"float64"), size=list[13,13,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0, 2],"float64"), size=list[13,13,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0, 2],"float64"), size=list[13,13,], scale_factor=None, mode="nearest", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0, 2],"float64"), size=list[13,2,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0, 2],"float64"), size=list[13,2,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0, 2],"float64"), size=list[13,2,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0, 2],"float64"), size=list[13,2,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0, 2],"float64"), size=list[13,2,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0, 2],"float64"), size=list[13,2,], scale_factor=None, mode="nearest", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0, 2],"float64"), size=list[14,12,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0, 2],"float64"), size=list[14,12,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0, 2],"float64"), size=list[14,12,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0, 2],"float64"), size=list[14,12,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0, 2],"float64"), size=list[14,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0, 2],"float64"), size=list[14,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0, 2],"float64"), size=list[14,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0, 2],"float64"), size=list[14,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0, 2],"float64"), size=list[14,22,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0, 2],"float64"), size=list[14,22,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0, 2],"float64"), size=list[14,22,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0, 2],"float64"), size=list[14,22,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0, 2],"float64"), size=list[2,12,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0, 2],"float64"), size=list[2,12,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0, 2],"float64"), size=list[2,12,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0, 2],"float64"), size=list[2,12,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0, 2],"float64"), size=list[2,13,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0, 2],"float64"), size=list[2,13,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0, 2],"float64"), size=list[2,13,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0, 2],"float64"), size=list[2,13,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0, 2],"float64"), size=list[2,13,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0, 2],"float64"), size=list[2,13,], scale_factor=None, mode="nearest", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0, 2],"float64"), size=list[2,2,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0, 2],"float64"), size=list[2,2,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0, 2],"float64"), size=list[2,2,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0, 2],"float64"), size=list[2,2,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0, 2],"float64"), size=list[2,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0, 2],"float64"), size=list[2,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0, 2],"float64"), size=list[2,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0, 2],"float64"), size=list[2,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0, 2],"float64"), size=list[2,2,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0, 2],"float64"), size=list[2,2,], scale_factor=None, mode="nearest", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0, 2],"float64"), size=list[2,22,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0, 2],"float64"), size=list[2,22,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0, 2],"float64"), size=list[2,22,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0, 2],"float64"), size=list[2,22,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0, 2],"float64"), size=list[26,12,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0, 2],"float64"), size=list[26,12,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0, 2],"float64"), size=list[26,12,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0, 2],"float64"), size=list[26,12,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0, 2],"float64"), size=list[26,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0, 2],"float64"), size=list[26,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0, 2],"float64"), size=list[26,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0, 2],"float64"), size=list[26,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0, 2],"float64"), size=list[26,22,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0, 2],"float64"), size=list[26,22,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0, 2],"float64"), size=list[26,22,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0, 2],"float64"), size=list[26,22,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0, 2],"float64"), size=None, scale_factor=list[0.6,0.6,], mode="bicubic", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0, 2],"float64"), size=None, scale_factor=list[0.6,0.6,], mode="bicubic", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0, 2],"float64"), size=None, scale_factor=list[0.6,0.6,], mode="bicubic", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0, 2],"float64"), size=None, scale_factor=list[0.6,0.6,], mode="bicubic", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0, 2],"float64"), size=None, scale_factor=list[0.6,0.6,], mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0, 2],"float64"), size=None, scale_factor=list[0.6,0.6,], mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0, 2],"float64"), size=None, scale_factor=list[0.6,0.6,], mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0, 2],"float64"), size=None, scale_factor=list[0.6,0.6,], mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0, 2],"float64"), size=None, scale_factor=list[0.6,0.6,], mode="nearest", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0, 2],"float64"), size=None, scale_factor=list[0.6,0.6,], mode="nearest", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0, 2],"float64"), size=None, scale_factor=list[0.6,1.7000000000000002,], mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0, 2],"float64"), size=None, scale_factor=list[0.6,1.7000000000000002,], mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0, 2],"float64"), size=None, scale_factor=list[0.6,1.7000000000000002,], mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0, 2],"float64"), size=None, scale_factor=list[0.6,1.7000000000000002,], mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0, 2],"float64"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bicubic", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0, 2],"float64"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bicubic", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0, 2],"float64"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bicubic", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0, 2],"float64"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bicubic", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0, 2],"float64"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="nearest", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0, 2],"float64"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="nearest", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0, 2],"float64"), size=None, scale_factor=list[0.6,2.8000000000000003,], mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0, 2],"float64"), size=None, scale_factor=list[0.6,2.8000000000000003,], mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0, 2],"float64"), size=None, scale_factor=list[0.6,2.8000000000000003,], mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0, 2],"float64"), size=None, scale_factor=list[0.6,2.8000000000000003,], mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0, 2],"float64"), size=None, scale_factor=list[0.6,3.9000000000000004,], mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0, 2],"float64"), size=None, scale_factor=list[0.6,3.9000000000000004,], mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0, 2],"float64"), size=None, scale_factor=list[0.6,3.9000000000000004,], mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0, 2],"float64"), size=None, scale_factor=list[0.6,3.9000000000000004,], mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0, 2],"float64"), size=None, scale_factor=list[1.7000000000000002,0.6,], mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0, 2],"float64"), size=None, scale_factor=list[1.7000000000000002,0.6,], mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0, 2],"float64"), size=None, scale_factor=list[1.7000000000000002,0.6,], mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0, 2],"float64"), size=None, scale_factor=list[1.7000000000000002,0.6,], mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0, 2],"float64"), size=None, scale_factor=list[1.7000000000000002,1.7000000000000002,], mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0, 2],"float64"), size=None, scale_factor=list[1.7000000000000002,1.7000000000000002,], mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0, 2],"float64"), size=None, scale_factor=list[1.7000000000000002,1.7000000000000002,], mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0, 2],"float64"), size=None, scale_factor=list[1.7000000000000002,1.7000000000000002,], mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0, 2],"float64"), size=None, scale_factor=list[1.7000000000000002,2.8000000000000003,], mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0, 2],"float64"), size=None, scale_factor=list[1.7000000000000002,2.8000000000000003,], mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0, 2],"float64"), size=None, scale_factor=list[1.7000000000000002,2.8000000000000003,], mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0, 2],"float64"), size=None, scale_factor=list[1.7000000000000002,2.8000000000000003,], mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0, 2],"float64"), size=None, scale_factor=list[1.7000000000000002,3.9000000000000004,], mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0, 2],"float64"), size=None, scale_factor=list[1.7000000000000002,3.9000000000000004,], mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0, 2],"float64"), size=None, scale_factor=list[1.7000000000000002,3.9000000000000004,], mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0, 2],"float64"), size=None, scale_factor=list[1.7000000000000002,3.9000000000000004,], mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0, 2],"float64"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bicubic", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0, 2],"float64"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bicubic", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0, 2],"float64"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bicubic", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0, 2],"float64"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bicubic", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0, 2],"float64"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="nearest", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0, 2],"float64"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="nearest", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0, 2],"float64"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bicubic", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0, 2],"float64"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bicubic", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0, 2],"float64"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bicubic", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0, 2],"float64"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bicubic", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0, 2],"float64"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="nearest", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0, 2],"float64"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="nearest", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0, 2],"float64"), size=None, scale_factor=list[2.8000000000000003,0.6,], mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0, 2],"float64"), size=None, scale_factor=list[2.8000000000000003,0.6,], mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0, 2],"float64"), size=None, scale_factor=list[2.8000000000000003,0.6,], mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0, 2],"float64"), size=None, scale_factor=list[2.8000000000000003,0.6,], mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0, 2],"float64"), size=None, scale_factor=list[2.8000000000000003,1.7000000000000002,], mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0, 2],"float64"), size=None, scale_factor=list[2.8000000000000003,1.7000000000000002,], mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0, 2],"float64"), size=None, scale_factor=list[2.8000000000000003,1.7000000000000002,], mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0, 2],"float64"), size=None, scale_factor=list[2.8000000000000003,1.7000000000000002,], mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0, 2],"float64"), size=None, scale_factor=list[2.8000000000000003,2.8000000000000003,], mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0, 2],"float64"), size=None, scale_factor=list[2.8000000000000003,2.8000000000000003,], mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0, 2],"float64"), size=None, scale_factor=list[2.8000000000000003,2.8000000000000003,], mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0, 2],"float64"), size=None, scale_factor=list[2.8000000000000003,2.8000000000000003,], mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0, 2],"float64"), size=None, scale_factor=list[2.8000000000000003,3.9000000000000004,], mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0, 2],"float64"), size=None, scale_factor=list[2.8000000000000003,3.9000000000000004,], mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0, 2],"float64"), size=None, scale_factor=list[2.8000000000000003,3.9000000000000004,], mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0, 2],"float64"), size=None, scale_factor=list[2.8000000000000003,3.9000000000000004,], mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0, 2],"float64"), size=None, scale_factor=list[3.9000000000000004,0.6,], mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0, 2],"float64"), size=None, scale_factor=list[3.9000000000000004,0.6,], mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0, 2],"float64"), size=None, scale_factor=list[3.9000000000000004,0.6,], mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0, 2],"float64"), size=None, scale_factor=list[3.9000000000000004,0.6,], mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0, 2],"float64"), size=None, scale_factor=list[3.9000000000000004,1.7000000000000002,], mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0, 2],"float64"), size=None, scale_factor=list[3.9000000000000004,1.7000000000000002,], mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0, 2],"float64"), size=None, scale_factor=list[3.9000000000000004,1.7000000000000002,], mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0, 2],"float64"), size=None, scale_factor=list[3.9000000000000004,1.7000000000000002,], mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0, 2],"float64"), size=None, scale_factor=list[3.9000000000000004,2.8000000000000003,], mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0, 2],"float64"), size=None, scale_factor=list[3.9000000000000004,2.8000000000000003,], mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0, 2],"float64"), size=None, scale_factor=list[3.9000000000000004,2.8000000000000003,], mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0, 2],"float64"), size=None, scale_factor=list[3.9000000000000004,2.8000000000000003,], mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0, 2],"float64"), size=None, scale_factor=list[3.9000000000000004,3.9000000000000004,], mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0, 2],"float64"), size=None, scale_factor=list[3.9000000000000004,3.9000000000000004,], mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0, 2],"float64"), size=None, scale_factor=list[3.9000000000000004,3.9000000000000004,], mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0, 2],"float64"), size=None, scale_factor=list[3.9000000000000004,3.9000000000000004,], mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=list[11,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=list[11,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=list[11,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=list[11,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=list[14,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=list[14,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=list[14,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=list[14,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=list[17,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=list[17,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=list[17,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=list[17,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=list[2,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=list[2,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=list[2,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=list[2,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=list[20,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=list[20,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=list[20,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=list[20,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=list[23,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=list[23,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=list[23,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=list[23,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=list[26,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=list[26,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=list[26,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=list[26,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=list[29,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=list[29,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=list[29,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=list[29,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=list[5,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=list[5,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=list[5,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=list[5,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=list[8,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=list[8,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=list[8,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=list[8,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[0.6,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[0.6,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[0.6,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[0.6,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[0.7,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[0.7,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[0.7,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[0.7,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[0.7999999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[0.7999999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[0.7999999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[0.7999999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[0.8999999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[0.8999999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[0.8999999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[0.8999999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[0.9999999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[0.9999999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[0.9999999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[0.9999999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[1.0999999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[1.0999999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[1.0999999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[1.0999999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[1.1999999999999997,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[1.1999999999999997,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[1.1999999999999997,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[1.1999999999999997,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[1.2999999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[1.2999999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[1.2999999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[1.2999999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[1.4,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[1.4,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[1.4,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[1.4,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[1.4999999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[1.4999999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[1.4999999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[1.4999999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[1.5999999999999996,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[1.5999999999999996,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[1.5999999999999996,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[1.5999999999999996,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[1.6999999999999997,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[1.6999999999999997,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[1.6999999999999997,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[1.6999999999999997,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[1.7999999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[1.7999999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[1.7999999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[1.7999999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[1.9,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[1.9,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[1.9,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[1.9,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[1.9999999999999996,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[1.9999999999999996,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[1.9999999999999996,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[1.9999999999999996,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[2.0999999999999996,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[2.0999999999999996,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[2.0999999999999996,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[2.0999999999999996,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[2.1999999999999997,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[2.1999999999999997,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[2.1999999999999997,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[2.1999999999999997,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[2.3,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[2.3,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[2.3,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[2.3,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[2.3999999999999995,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[2.3999999999999995,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[2.3999999999999995,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[2.3999999999999995,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[2.4999999999999996,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[2.4999999999999996,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[2.4999999999999996,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[2.4999999999999996,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[2.5999999999999996,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[2.5999999999999996,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[2.5999999999999996,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[2.5999999999999996,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[2.6999999999999997,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[2.6999999999999997,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[2.6999999999999997,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[2.6999999999999997,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[2.7999999999999994,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[2.7999999999999994,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[2.7999999999999994,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[2.7999999999999994,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[2.8999999999999995,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[2.8999999999999995,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[2.8999999999999995,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[2.8999999999999995,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[2.9999999999999996,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[2.9999999999999996,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[2.9999999999999996,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[2.9999999999999996,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[3.0999999999999996,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[3.0999999999999996,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[3.0999999999999996,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[3.0999999999999996,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[3.1999999999999997,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[3.1999999999999997,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[3.1999999999999997,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[3.1999999999999997,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[3.2999999999999994,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[3.2999999999999994,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[3.2999999999999994,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[3.2999999999999994,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[3.3999999999999995,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[3.3999999999999995,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[3.3999999999999995,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[3.3999999999999995,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[3.4999999999999996,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[3.4999999999999996,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[3.4999999999999996,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[3.4999999999999996,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[3.599999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[3.599999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[3.599999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[3.599999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[3.6999999999999993,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[3.6999999999999993,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[3.6999999999999993,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[3.6999999999999993,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[3.7999999999999994,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[3.7999999999999994,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[3.7999999999999994,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[3.7999999999999994,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[3.8999999999999995,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[3.8999999999999995,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[3.8999999999999995,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[3.8999999999999995,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[3.9999999999999996,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[3.9999999999999996,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[3.9999999999999996,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[3.9999999999999996,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[4.099999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[4.099999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[4.099999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[4.099999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[4.199999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[4.199999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[4.199999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[4.199999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[4.299999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[4.299999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[4.299999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[4.299999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[4.399999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[4.399999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[4.399999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[4.399999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[4.499999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[4.499999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[4.499999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[4.499999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[4.599999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[4.599999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[4.599999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[4.599999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[4.699999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[4.699999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[4.699999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[4.699999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[4.799999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[4.799999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[4.799999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[4.799999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[4.899999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[4.899999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[4.899999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[4.899999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[4.999999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[4.999999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[4.999999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[4.999999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[5.099999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[5.099999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[5.099999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[5.099999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[5.199999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[5.199999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[5.199999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[5.199999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[5.299999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[5.299999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[5.299999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[5.299999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[5.399999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[5.399999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[5.399999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[5.399999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[5.499999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[5.499999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[5.499999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[5.499999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[5.599999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[5.599999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[5.599999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[5.599999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[5.699999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[5.699999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[5.699999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[5.699999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[5.799999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[5.799999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[5.799999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[5.799999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[5.899999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[5.899999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[5.899999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[5.899999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[5.999999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[5.999999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[5.999999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[5.999999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[6.099999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[6.099999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[6.099999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[6.099999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[6.199999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[6.199999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[6.199999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[6.199999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[6.299999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[6.299999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[6.299999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[6.299999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[6.399999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[6.399999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[6.399999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[6.399999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[6.499999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[6.499999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[6.499999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[6.499999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[6.599999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[6.599999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[6.599999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[6.599999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[6.699999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[6.699999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[6.699999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[6.699999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[6.799999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[6.799999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[6.799999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[6.799999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[6.899999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[6.899999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[6.899999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[6.899999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[6.999999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[6.999999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[6.999999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[6.999999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[7.099999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[7.099999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[7.099999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[7.099999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[7.199999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[7.199999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[7.199999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[7.199999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[7.299999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[7.299999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[7.299999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[7.299999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[7.399999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[7.399999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[7.399999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[7.399999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[7.499999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[7.499999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[7.499999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[7.499999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[7.599999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[7.599999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[7.599999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[7.599999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[7.699999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[7.699999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[7.699999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[7.699999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[7.799999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[7.799999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[7.799999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[7.799999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[7.899999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[7.899999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[7.899999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[7.899999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[7.999999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[7.999999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[7.999999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[7.999999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[8.099999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[8.099999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[8.099999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[8.099999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[8.199999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[8.199999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[8.199999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[8.199999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[8.299999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[8.299999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[8.299999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[8.299999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[8.399999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[8.399999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[8.399999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[8.399999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[8.499999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[8.499999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[8.499999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[8.499999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[8.599999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[8.599999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[8.599999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[8.599999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[8.699999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[8.699999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[8.699999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[8.699999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[8.799999999999997,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[8.799999999999997,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[8.799999999999997,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[8.799999999999997,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[8.899999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[8.899999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[8.899999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float32"), size=None, scale_factor=list[8.899999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=list[11,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=list[11,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=list[11,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=list[11,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=list[14,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=list[14,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=list[14,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=list[14,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=list[17,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=list[17,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=list[17,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=list[17,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=list[2,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=list[2,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=list[2,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=list[2,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=list[20,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=list[20,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=list[20,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=list[20,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=list[23,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=list[23,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=list[23,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=list[23,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=list[26,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=list[26,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=list[26,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=list[26,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=list[29,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=list[29,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=list[29,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=list[29,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=list[5,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=list[5,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=list[5,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=list[5,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=list[8,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=list[8,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=list[8,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=list[8,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[0.4,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[0.4,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[0.4,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[0.4,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[0.6,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[0.6,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[0.6,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[0.6,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[0.6000000000000001,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[0.6000000000000001,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[0.6000000000000001,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[0.6000000000000001,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[0.7,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[0.7,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[0.7,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[0.7,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[0.7999999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[0.7999999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[0.7999999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[0.7999999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[0.8000000000000002,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[0.8000000000000002,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[0.8000000000000002,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[0.8000000000000002,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[0.8999999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[0.8999999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[0.8999999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[0.8999999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[0.9999999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[0.9999999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[0.9999999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[0.9999999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[1.0000000000000002,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[1.0000000000000002,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[1.0000000000000002,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[1.0000000000000002,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[1.0999999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[1.0999999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[1.0999999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[1.0999999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[1.1999999999999997,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[1.1999999999999997,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[1.1999999999999997,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[1.1999999999999997,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[1.2000000000000002,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[1.2000000000000002,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[1.2000000000000002,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[1.2000000000000002,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[1.2999999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[1.2999999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[1.2999999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[1.2999999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[1.4,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[1.4,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[1.4,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[1.4,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[1.4000000000000004,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[1.4000000000000004,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[1.4000000000000004,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[1.4000000000000004,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[1.4999999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[1.4999999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[1.4999999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[1.4999999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[1.5999999999999996,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[1.5999999999999996,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[1.5999999999999996,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[1.5999999999999996,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[1.6000000000000005,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[1.6000000000000005,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[1.6000000000000005,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[1.6000000000000005,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[1.6999999999999997,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[1.6999999999999997,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[1.6999999999999997,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[1.6999999999999997,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[1.7999999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[1.7999999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[1.7999999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[1.7999999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[1.8000000000000003,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[1.8000000000000003,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[1.8000000000000003,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[1.8000000000000003,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[1.9,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[1.9,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[1.9,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[1.9,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[1.9999999999999996,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[1.9999999999999996,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[1.9999999999999996,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[1.9999999999999996,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[2.0000000000000004,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[2.0000000000000004,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[2.0000000000000004,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[2.0000000000000004,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[2.0999999999999996,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[2.0999999999999996,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[2.0999999999999996,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[2.0999999999999996,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[2.1999999999999997,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[2.1999999999999997,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[2.1999999999999997,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[2.1999999999999997,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[2.2000000000000006,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[2.2000000000000006,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[2.2000000000000006,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[2.2000000000000006,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[2.3,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[2.3,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[2.3,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[2.3,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[2.3999999999999995,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[2.3999999999999995,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[2.3999999999999995,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[2.3999999999999995,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[2.400000000000001,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[2.400000000000001,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[2.400000000000001,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[2.400000000000001,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[2.4999999999999996,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[2.4999999999999996,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[2.4999999999999996,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[2.4999999999999996,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[2.5999999999999996,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[2.5999999999999996,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[2.5999999999999996,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[2.5999999999999996,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[2.6000000000000005,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[2.6000000000000005,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[2.6000000000000005,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[2.6000000000000005,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[2.6999999999999997,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[2.6999999999999997,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[2.6999999999999997,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[2.6999999999999997,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[2.7999999999999994,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[2.7999999999999994,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[2.7999999999999994,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[2.7999999999999994,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[2.8000000000000007,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[2.8000000000000007,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[2.8000000000000007,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[2.8000000000000007,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[2.8999999999999995,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[2.8999999999999995,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[2.8999999999999995,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[2.8999999999999995,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[2.9999999999999996,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[2.9999999999999996,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[2.9999999999999996,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[2.9999999999999996,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[3.000000000000001,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[3.000000000000001,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[3.000000000000001,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[3.000000000000001,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[3.0999999999999996,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[3.0999999999999996,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[3.0999999999999996,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[3.0999999999999996,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[3.1999999999999997,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[3.1999999999999997,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[3.1999999999999997,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[3.1999999999999997,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[3.2000000000000006,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[3.2000000000000006,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[3.2000000000000006,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[3.2000000000000006,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[3.2999999999999994,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[3.2999999999999994,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[3.2999999999999994,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[3.2999999999999994,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[3.3999999999999995,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[3.3999999999999995,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[3.3999999999999995,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[3.3999999999999995,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[3.400000000000001,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[3.400000000000001,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[3.400000000000001,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[3.400000000000001,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[3.4999999999999996,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[3.4999999999999996,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[3.4999999999999996,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[3.4999999999999996,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[3.599999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[3.599999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[3.599999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[3.599999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[3.600000000000001,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[3.600000000000001,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[3.600000000000001,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[3.600000000000001,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[3.6999999999999993,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[3.6999999999999993,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[3.6999999999999993,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[3.6999999999999993,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[3.7999999999999994,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[3.7999999999999994,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[3.7999999999999994,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[3.7999999999999994,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[3.800000000000001,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[3.800000000000001,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[3.800000000000001,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[3.800000000000001,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[3.8999999999999995,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[3.8999999999999995,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[3.8999999999999995,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[3.8999999999999995,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[3.9999999999999996,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[3.9999999999999996,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[3.9999999999999996,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[3.9999999999999996,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[4.000000000000002,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[4.000000000000002,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[4.000000000000002,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[4.000000000000002,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[4.099999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[4.099999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[4.099999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[4.099999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[4.199999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[4.199999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[4.199999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[4.199999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[4.200000000000001,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[4.200000000000001,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[4.200000000000001,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[4.200000000000001,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[4.299999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[4.299999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[4.299999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[4.299999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[4.399999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[4.399999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[4.399999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[4.399999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[4.400000000000002,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[4.400000000000002,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[4.400000000000002,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[4.400000000000002,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[4.499999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[4.499999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[4.499999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[4.499999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[4.599999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[4.599999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[4.599999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[4.599999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[4.600000000000001,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[4.600000000000001,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[4.600000000000001,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[4.600000000000001,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[4.699999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[4.699999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[4.699999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[4.699999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[4.799999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[4.799999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[4.799999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[4.799999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[4.800000000000002,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[4.800000000000002,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[4.800000000000002,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[4.800000000000002,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[4.899999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[4.899999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[4.899999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[4.899999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[4.999999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[4.999999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[4.999999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[4.999999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[5.000000000000002,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[5.000000000000002,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[5.000000000000002,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[5.000000000000002,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[5.099999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[5.099999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[5.099999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[5.099999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[5.199999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[5.199999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[5.199999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[5.199999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[5.200000000000002,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[5.200000000000002,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[5.200000000000002,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[5.200000000000002,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[5.299999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[5.299999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[5.299999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[5.299999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[5.399999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[5.399999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[5.399999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[5.399999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[5.400000000000002,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[5.400000000000002,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[5.400000000000002,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[5.400000000000002,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[5.499999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[5.499999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[5.499999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[5.499999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[5.599999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[5.599999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[5.599999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[5.599999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[5.600000000000002,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[5.600000000000002,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[5.600000000000002,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[5.600000000000002,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[5.699999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[5.699999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[5.699999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[5.699999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[5.799999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[5.799999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[5.799999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[5.799999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[5.8000000000000025,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[5.8000000000000025,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[5.8000000000000025,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[5.8000000000000025,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[5.899999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[5.899999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[5.899999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[5.899999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[5.999999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[5.999999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[5.999999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[5.999999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[6.000000000000002,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[6.000000000000002,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[6.000000000000002,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[6.000000000000002,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[6.099999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[6.099999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[6.099999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[6.099999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[6.199999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[6.199999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[6.199999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[6.199999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[6.200000000000002,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[6.200000000000002,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[6.200000000000002,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[6.200000000000002,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[6.299999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[6.299999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[6.299999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[6.299999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[6.399999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[6.399999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[6.399999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[6.399999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[6.400000000000002,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[6.400000000000002,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[6.400000000000002,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[6.400000000000002,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[6.499999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[6.499999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[6.499999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[6.499999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[6.599999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[6.599999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[6.599999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[6.599999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[6.600000000000002,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[6.600000000000002,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[6.600000000000002,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[6.600000000000002,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[6.699999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[6.699999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[6.699999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[6.699999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[6.799999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[6.799999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[6.799999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[6.799999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[6.8000000000000025,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[6.8000000000000025,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[6.8000000000000025,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[6.8000000000000025,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[6.899999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[6.899999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[6.899999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[6.899999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[6.999999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[6.999999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[6.999999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[6.999999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[7.000000000000003,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[7.000000000000003,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[7.000000000000003,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[7.000000000000003,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[7.099999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[7.099999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[7.099999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[7.099999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[7.199999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[7.199999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[7.199999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[7.199999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[7.200000000000003,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[7.200000000000003,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[7.200000000000003,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[7.200000000000003,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[7.299999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[7.299999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[7.299999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[7.299999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[7.399999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[7.399999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[7.399999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[7.399999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[7.400000000000003,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[7.400000000000003,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[7.400000000000003,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[7.400000000000003,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[7.499999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[7.499999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[7.499999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[7.499999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[7.599999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[7.599999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[7.599999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[7.599999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[7.600000000000003,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[7.600000000000003,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[7.600000000000003,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[7.600000000000003,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[7.699999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[7.699999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[7.699999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[7.699999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[7.799999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[7.799999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[7.799999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[7.799999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[7.8000000000000025,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[7.8000000000000025,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[7.8000000000000025,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[7.8000000000000025,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[7.899999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[7.899999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[7.899999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[7.899999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[7.999999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[7.999999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[7.999999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[7.999999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[8.000000000000002,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[8.000000000000002,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[8.000000000000002,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[8.000000000000002,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[8.099999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[8.099999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[8.099999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[8.099999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[8.199999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[8.199999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[8.199999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[8.199999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[8.200000000000003,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[8.200000000000003,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[8.200000000000003,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[8.200000000000003,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[8.299999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[8.299999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[8.299999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[8.299999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[8.399999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[8.399999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[8.399999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[8.399999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[8.400000000000004,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[8.400000000000004,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[8.400000000000004,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[8.400000000000004,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[8.499999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[8.499999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[8.499999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[8.499999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[8.599999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[8.599999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[8.599999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[8.599999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[8.600000000000003,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[8.600000000000003,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[8.600000000000003,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[8.600000000000003,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[8.699999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[8.699999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[8.699999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[8.699999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[8.799999999999997,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[8.799999999999997,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[8.799999999999997,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[8.799999999999997,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[8.800000000000002,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[8.800000000000002,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[8.800000000000002,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[8.800000000000002,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[8.899999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[8.899999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[8.899999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 0],"float64"), size=None, scale_factor=list[8.899999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 0, 4],"float64"), size=list[4,2,3,], scale_factor=None, mode="trilinear", align_corners=False, align_mode=0, data_format="NDHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 0, 4],"float64"), size=list[4,2,3,], scale_factor=None, mode="trilinear", align_corners=False, align_mode=1, data_format="NDHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 0, 4],"float64"), size=list[4,2,3,], scale_factor=None, mode="trilinear", align_corners=True, align_mode=0, data_format="NDHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 0, 4],"float64"), size=list[4,2,3,], scale_factor=None, mode="trilinear", align_corners=True, align_mode=1, data_format="NDHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 0, 4],"float64"), size=None, scale_factor=list[0.6,1.6,1.7,], mode="trilinear", align_corners=False, align_mode=0, data_format="NDHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 0, 4],"float64"), size=None, scale_factor=list[0.6,1.6,1.7,], mode="trilinear", align_corners=False, align_mode=1, data_format="NDHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 0, 4],"float64"), size=None, scale_factor=list[0.6,1.6,1.7,], mode="trilinear", align_corners=True, align_mode=0, data_format="NDHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 0, 4],"float64"), size=None, scale_factor=list[0.6,1.6,1.7,], mode="trilinear", align_corners=True, align_mode=1, data_format="NDHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 0],"float64"), size=list[13,13,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 0],"float64"), size=list[13,13,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 0],"float64"), size=list[13,13,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 0],"float64"), size=list[13,13,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 0],"float64"), size=list[13,13,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 0],"float64"), size=list[13,13,], scale_factor=None, mode="nearest", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 0],"float64"), size=list[13,2,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 0],"float64"), size=list[13,2,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 0],"float64"), size=list[13,2,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 0],"float64"), size=list[13,2,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 0],"float64"), size=list[13,2,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 0],"float64"), size=list[13,2,], scale_factor=None, mode="nearest", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 0],"float64"), size=list[14,12,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 0],"float64"), size=list[14,12,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 0],"float64"), size=list[14,12,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 0],"float64"), size=list[14,12,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 0],"float64"), size=list[14,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 0],"float64"), size=list[14,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 0],"float64"), size=list[14,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 0],"float64"), size=list[14,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 0],"float64"), size=list[14,22,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 0],"float64"), size=list[14,22,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 0],"float64"), size=list[14,22,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 0],"float64"), size=list[14,22,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 0],"float64"), size=list[2,12,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 0],"float64"), size=list[2,12,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 0],"float64"), size=list[2,12,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 0],"float64"), size=list[2,12,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 0],"float64"), size=list[2,13,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 0],"float64"), size=list[2,13,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 0],"float64"), size=list[2,13,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 0],"float64"), size=list[2,13,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 0],"float64"), size=list[2,13,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 0],"float64"), size=list[2,13,], scale_factor=None, mode="nearest", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 0],"float64"), size=list[2,2,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 0],"float64"), size=list[2,2,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 0],"float64"), size=list[2,2,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 0],"float64"), size=list[2,2,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 0],"float64"), size=list[2,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 0],"float64"), size=list[2,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 0],"float64"), size=list[2,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 0],"float64"), size=list[2,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 0],"float64"), size=list[2,2,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 0],"float64"), size=list[2,2,], scale_factor=None, mode="nearest", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 0],"float64"), size=list[2,22,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 0],"float64"), size=list[2,22,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 0],"float64"), size=list[2,22,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 0],"float64"), size=list[2,22,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 0],"float64"), size=list[26,12,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 0],"float64"), size=list[26,12,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 0],"float64"), size=list[26,12,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 0],"float64"), size=list[26,12,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 0],"float64"), size=list[26,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 0],"float64"), size=list[26,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 0],"float64"), size=list[26,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 0],"float64"), size=list[26,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 0],"float64"), size=list[26,22,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 0],"float64"), size=list[26,22,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 0],"float64"), size=list[26,22,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 0],"float64"), size=list[26,22,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 0],"float64"), size=None, scale_factor=list[0.6,0.6,], mode="bicubic", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 0],"float64"), size=None, scale_factor=list[0.6,0.6,], mode="bicubic", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 0],"float64"), size=None, scale_factor=list[0.6,0.6,], mode="bicubic", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 0],"float64"), size=None, scale_factor=list[0.6,0.6,], mode="bicubic", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 0],"float64"), size=None, scale_factor=list[0.6,0.6,], mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 0],"float64"), size=None, scale_factor=list[0.6,0.6,], mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 0],"float64"), size=None, scale_factor=list[0.6,0.6,], mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 0],"float64"), size=None, scale_factor=list[0.6,0.6,], mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 0],"float64"), size=None, scale_factor=list[0.6,0.6,], mode="nearest", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 0],"float64"), size=None, scale_factor=list[0.6,0.6,], mode="nearest", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 0],"float64"), size=None, scale_factor=list[0.6,1.7000000000000002,], mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 0],"float64"), size=None, scale_factor=list[0.6,1.7000000000000002,], mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 0],"float64"), size=None, scale_factor=list[0.6,1.7000000000000002,], mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 0],"float64"), size=None, scale_factor=list[0.6,1.7000000000000002,], mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 0],"float64"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bicubic", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 0],"float64"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bicubic", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 0],"float64"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bicubic", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 0],"float64"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bicubic", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 0],"float64"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="nearest", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 0],"float64"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="nearest", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 0],"float64"), size=None, scale_factor=list[0.6,2.8000000000000003,], mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 0],"float64"), size=None, scale_factor=list[0.6,2.8000000000000003,], mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 0],"float64"), size=None, scale_factor=list[0.6,2.8000000000000003,], mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 0],"float64"), size=None, scale_factor=list[0.6,2.8000000000000003,], mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 0],"float64"), size=None, scale_factor=list[0.6,3.9000000000000004,], mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 0],"float64"), size=None, scale_factor=list[0.6,3.9000000000000004,], mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 0],"float64"), size=None, scale_factor=list[0.6,3.9000000000000004,], mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 0],"float64"), size=None, scale_factor=list[0.6,3.9000000000000004,], mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 0],"float64"), size=None, scale_factor=list[1.7000000000000002,0.6,], mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 0],"float64"), size=None, scale_factor=list[1.7000000000000002,0.6,], mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 0],"float64"), size=None, scale_factor=list[1.7000000000000002,0.6,], mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 0],"float64"), size=None, scale_factor=list[1.7000000000000002,0.6,], mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 0],"float64"), size=None, scale_factor=list[1.7000000000000002,1.7000000000000002,], mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 0],"float64"), size=None, scale_factor=list[1.7000000000000002,1.7000000000000002,], mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 0],"float64"), size=None, scale_factor=list[1.7000000000000002,1.7000000000000002,], mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 0],"float64"), size=None, scale_factor=list[1.7000000000000002,1.7000000000000002,], mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 0],"float64"), size=None, scale_factor=list[1.7000000000000002,2.8000000000000003,], mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 0],"float64"), size=None, scale_factor=list[1.7000000000000002,2.8000000000000003,], mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 0],"float64"), size=None, scale_factor=list[1.7000000000000002,2.8000000000000003,], mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 0],"float64"), size=None, scale_factor=list[1.7000000000000002,2.8000000000000003,], mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 0],"float64"), size=None, scale_factor=list[1.7000000000000002,3.9000000000000004,], mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 0],"float64"), size=None, scale_factor=list[1.7000000000000002,3.9000000000000004,], mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 0],"float64"), size=None, scale_factor=list[1.7000000000000002,3.9000000000000004,], mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 0],"float64"), size=None, scale_factor=list[1.7000000000000002,3.9000000000000004,], mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 0],"float64"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bicubic", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 0],"float64"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bicubic", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 0],"float64"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bicubic", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 0],"float64"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bicubic", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 0],"float64"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="nearest", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 0],"float64"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="nearest", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 0],"float64"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bicubic", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 0],"float64"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bicubic", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 0],"float64"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bicubic", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 0],"float64"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bicubic", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 0],"float64"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="nearest", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 0],"float64"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="nearest", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 0],"float64"), size=None, scale_factor=list[2.8000000000000003,0.6,], mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 0],"float64"), size=None, scale_factor=list[2.8000000000000003,0.6,], mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 0],"float64"), size=None, scale_factor=list[2.8000000000000003,0.6,], mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 0],"float64"), size=None, scale_factor=list[2.8000000000000003,0.6,], mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 0],"float64"), size=None, scale_factor=list[2.8000000000000003,1.7000000000000002,], mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 0],"float64"), size=None, scale_factor=list[2.8000000000000003,1.7000000000000002,], mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 0],"float64"), size=None, scale_factor=list[2.8000000000000003,1.7000000000000002,], mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 0],"float64"), size=None, scale_factor=list[2.8000000000000003,1.7000000000000002,], mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 0],"float64"), size=None, scale_factor=list[2.8000000000000003,2.8000000000000003,], mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 0],"float64"), size=None, scale_factor=list[2.8000000000000003,2.8000000000000003,], mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 0],"float64"), size=None, scale_factor=list[2.8000000000000003,2.8000000000000003,], mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 0],"float64"), size=None, scale_factor=list[2.8000000000000003,2.8000000000000003,], mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 0],"float64"), size=None, scale_factor=list[2.8000000000000003,3.9000000000000004,], mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 0],"float64"), size=None, scale_factor=list[2.8000000000000003,3.9000000000000004,], mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 0],"float64"), size=None, scale_factor=list[2.8000000000000003,3.9000000000000004,], mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 0],"float64"), size=None, scale_factor=list[2.8000000000000003,3.9000000000000004,], mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 0],"float64"), size=None, scale_factor=list[3.9000000000000004,0.6,], mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 0],"float64"), size=None, scale_factor=list[3.9000000000000004,0.6,], mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 0],"float64"), size=None, scale_factor=list[3.9000000000000004,0.6,], mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 0],"float64"), size=None, scale_factor=list[3.9000000000000004,0.6,], mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 0],"float64"), size=None, scale_factor=list[3.9000000000000004,1.7000000000000002,], mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 0],"float64"), size=None, scale_factor=list[3.9000000000000004,1.7000000000000002,], mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 0],"float64"), size=None, scale_factor=list[3.9000000000000004,1.7000000000000002,], mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 0],"float64"), size=None, scale_factor=list[3.9000000000000004,1.7000000000000002,], mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 0],"float64"), size=None, scale_factor=list[3.9000000000000004,2.8000000000000003,], mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 0],"float64"), size=None, scale_factor=list[3.9000000000000004,2.8000000000000003,], mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 0],"float64"), size=None, scale_factor=list[3.9000000000000004,2.8000000000000003,], mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 0],"float64"), size=None, scale_factor=list[3.9000000000000004,2.8000000000000003,], mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 0],"float64"), size=None, scale_factor=list[3.9000000000000004,3.9000000000000004,], mode="bilinear", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 0],"float64"), size=None, scale_factor=list[3.9000000000000004,3.9000000000000004,], mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 0],"float64"), size=None, scale_factor=list[3.9000000000000004,3.9000000000000004,], mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 0],"float64"), size=None, scale_factor=list[3.9000000000000004,3.9000000000000004,], mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10, 0],"float64"), size=list[4,2,3,], scale_factor=None, mode="trilinear", align_corners=False, align_mode=0, data_format="NDHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10, 0],"float64"), size=list[4,2,3,], scale_factor=None, mode="trilinear", align_corners=False, align_mode=1, data_format="NDHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10, 0],"float64"), size=list[4,2,3,], scale_factor=None, mode="trilinear", align_corners=True, align_mode=0, data_format="NDHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10, 0],"float64"), size=list[4,2,3,], scale_factor=None, mode="trilinear", align_corners=True, align_mode=1, data_format="NDHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10, 0],"float64"), size=None, scale_factor=list[0.6,1.6,1.7,], mode="trilinear", align_corners=False, align_mode=0, data_format="NDHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10, 0],"float64"), size=None, scale_factor=list[0.6,1.6,1.7,], mode="trilinear", align_corners=False, align_mode=1, data_format="NDHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10, 0],"float64"), size=None, scale_factor=list[0.6,1.6,1.7,], mode="trilinear", align_corners=True, align_mode=0, data_format="NDHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10, 0],"float64"), size=None, scale_factor=list[0.6,1.6,1.7,], mode="trilinear", align_corners=True, align_mode=1, data_format="NDHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 128, 0, 16],"float32"), size=None, scale_factor=2, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 128, 16, 0],"float32"), size=None, scale_factor=2, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float32"), size=list[13,13,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float32"), size=list[13,13,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float32"), size=list[13,13,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float32"), size=list[13,13,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float32"), size=list[13,13,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float32"), size=list[13,13,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float32"), size=list[13,13,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float32"), size=list[13,13,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float32"), size=list[13,13,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float32"), size=list[13,13,], scale_factor=None, mode="nearest", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float32"), size=list[13,2,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float32"), size=list[13,2,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float32"), size=list[13,2,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float32"), size=list[13,2,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float32"), size=list[13,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float32"), size=list[13,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float32"), size=list[13,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float32"), size=list[13,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float32"), size=list[13,2,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float32"), size=list[13,2,], scale_factor=None, mode="nearest", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float32"), size=list[13,24,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float32"), size=list[13,24,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float32"), size=list[13,24,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float32"), size=list[13,24,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float32"), size=list[2,13,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float32"), size=list[2,13,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float32"), size=list[2,13,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float32"), size=list[2,13,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float32"), size=list[2,13,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float32"), size=list[2,13,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float32"), size=list[2,13,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float32"), size=list[2,13,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float32"), size=list[2,13,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float32"), size=list[2,13,], scale_factor=None, mode="nearest", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float32"), size=list[2,2,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float32"), size=list[2,2,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float32"), size=list[2,2,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float32"), size=list[2,2,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float32"), size=list[2,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float32"), size=list[2,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float32"), size=list[2,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float32"), size=list[2,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float32"), size=list[2,2,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float32"), size=list[2,2,], scale_factor=None, mode="nearest", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float32"), size=list[2,24,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float32"), size=list[2,24,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float32"), size=list[2,24,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float32"), size=list[2,24,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float32"), size=list[24,13,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float32"), size=list[24,13,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float32"), size=list[24,13,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float32"), size=list[24,13,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float32"), size=list[24,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float32"), size=list[24,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float32"), size=list[24,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float32"), size=list[24,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float32"), size=list[24,24,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float32"), size=list[24,24,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float32"), size=list[24,24,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float32"), size=list[24,24,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float32"), size=None, scale_factor=list[0.6,0.6,], mode="bicubic", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float32"), size=None, scale_factor=list[0.6,0.6,], mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float32"), size=None, scale_factor=list[0.6,0.6,], mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float32"), size=None, scale_factor=list[0.6,0.6,], mode="bicubic", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float32"), size=None, scale_factor=list[0.6,0.6,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float32"), size=None, scale_factor=list[0.6,0.6,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float32"), size=None, scale_factor=list[0.6,0.6,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float32"), size=None, scale_factor=list[0.6,0.6,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float32"), size=None, scale_factor=list[0.6,0.6,], mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float32"), size=None, scale_factor=list[0.6,0.6,], mode="nearest", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float32"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bicubic", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float32"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float32"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float32"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bicubic", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float32"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float32"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float32"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float32"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float32"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float32"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="nearest", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float32"), size=None, scale_factor=list[0.6,2.9999999999999996,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float32"), size=None, scale_factor=list[0.6,2.9999999999999996,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float32"), size=None, scale_factor=list[0.6,2.9999999999999996,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float32"), size=None, scale_factor=list[0.6,2.9999999999999996,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float32"), size=None, scale_factor=list[0.6,4.199999999999999,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float32"), size=None, scale_factor=list[0.6,4.199999999999999,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float32"), size=None, scale_factor=list[0.6,4.199999999999999,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float32"), size=None, scale_factor=list[0.6,4.199999999999999,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float32"), size=None, scale_factor=list[0.6,5.399999999999999,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float32"), size=None, scale_factor=list[0.6,5.399999999999999,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float32"), size=None, scale_factor=list[0.6,5.399999999999999,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float32"), size=None, scale_factor=list[0.6,5.399999999999999,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bicubic", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bicubic", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="nearest", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bicubic", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bicubic", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="nearest", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,2.9999999999999996,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,2.9999999999999996,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,2.9999999999999996,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,2.9999999999999996,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,4.199999999999999,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,4.199999999999999,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,4.199999999999999,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,4.199999999999999,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,5.399999999999999,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,5.399999999999999,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,5.399999999999999,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,5.399999999999999,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float32"), size=None, scale_factor=list[2.9999999999999996,0.6,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float32"), size=None, scale_factor=list[2.9999999999999996,0.6,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float32"), size=None, scale_factor=list[2.9999999999999996,0.6,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float32"), size=None, scale_factor=list[2.9999999999999996,0.6,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float32"), size=None, scale_factor=list[2.9999999999999996,1.7999999999999998,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float32"), size=None, scale_factor=list[2.9999999999999996,1.7999999999999998,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float32"), size=None, scale_factor=list[2.9999999999999996,1.7999999999999998,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float32"), size=None, scale_factor=list[2.9999999999999996,1.7999999999999998,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float32"), size=None, scale_factor=list[2.9999999999999996,2.9999999999999996,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float32"), size=None, scale_factor=list[2.9999999999999996,2.9999999999999996,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float32"), size=None, scale_factor=list[2.9999999999999996,2.9999999999999996,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float32"), size=None, scale_factor=list[2.9999999999999996,2.9999999999999996,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float32"), size=None, scale_factor=list[2.9999999999999996,4.199999999999999,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float32"), size=None, scale_factor=list[2.9999999999999996,4.199999999999999,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float32"), size=None, scale_factor=list[2.9999999999999996,4.199999999999999,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float32"), size=None, scale_factor=list[2.9999999999999996,4.199999999999999,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float32"), size=None, scale_factor=list[2.9999999999999996,5.399999999999999,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float32"), size=None, scale_factor=list[2.9999999999999996,5.399999999999999,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float32"), size=None, scale_factor=list[2.9999999999999996,5.399999999999999,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float32"), size=None, scale_factor=list[2.9999999999999996,5.399999999999999,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float64"), size=list[13,13,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float64"), size=list[13,13,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float64"), size=list[13,13,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float64"), size=list[13,13,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float64"), size=list[13,13,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float64"), size=list[13,13,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float64"), size=list[13,13,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float64"), size=list[13,13,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float64"), size=list[13,13,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float64"), size=list[13,13,], scale_factor=None, mode="nearest", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float64"), size=list[13,2,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float64"), size=list[13,2,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float64"), size=list[13,2,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float64"), size=list[13,2,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float64"), size=list[13,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float64"), size=list[13,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float64"), size=list[13,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float64"), size=list[13,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float64"), size=list[13,2,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float64"), size=list[13,2,], scale_factor=None, mode="nearest", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float64"), size=list[13,24,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float64"), size=list[13,24,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float64"), size=list[13,24,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float64"), size=list[13,24,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float64"), size=list[2,13,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float64"), size=list[2,13,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float64"), size=list[2,13,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float64"), size=list[2,13,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float64"), size=list[2,13,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float64"), size=list[2,13,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float64"), size=list[2,13,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float64"), size=list[2,13,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float64"), size=list[2,13,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float64"), size=list[2,13,], scale_factor=None, mode="nearest", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float64"), size=list[2,2,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float64"), size=list[2,2,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float64"), size=list[2,2,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float64"), size=list[2,2,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float64"), size=list[2,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float64"), size=list[2,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float64"), size=list[2,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float64"), size=list[2,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float64"), size=list[2,2,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float64"), size=list[2,2,], scale_factor=None, mode="nearest", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float64"), size=list[2,24,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float64"), size=list[2,24,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float64"), size=list[2,24,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float64"), size=list[2,24,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float64"), size=list[24,13,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float64"), size=list[24,13,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float64"), size=list[24,13,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float64"), size=list[24,13,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float64"), size=list[24,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float64"), size=list[24,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float64"), size=list[24,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float64"), size=list[24,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float64"), size=list[24,24,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float64"), size=list[24,24,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float64"), size=list[24,24,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float64"), size=list[24,24,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float64"), size=None, scale_factor=list[0.6,0.6,], mode="bicubic", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float64"), size=None, scale_factor=list[0.6,0.6,], mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float64"), size=None, scale_factor=list[0.6,0.6,], mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float64"), size=None, scale_factor=list[0.6,0.6,], mode="bicubic", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float64"), size=None, scale_factor=list[0.6,0.6,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float64"), size=None, scale_factor=list[0.6,0.6,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float64"), size=None, scale_factor=list[0.6,0.6,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float64"), size=None, scale_factor=list[0.6,0.6,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float64"), size=None, scale_factor=list[0.6,0.6,], mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float64"), size=None, scale_factor=list[0.6,0.6,], mode="nearest", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float64"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bicubic", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float64"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float64"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float64"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bicubic", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float64"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float64"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float64"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float64"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float64"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float64"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="nearest", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float64"), size=None, scale_factor=list[0.6,2.9999999999999996,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float64"), size=None, scale_factor=list[0.6,2.9999999999999996,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float64"), size=None, scale_factor=list[0.6,2.9999999999999996,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float64"), size=None, scale_factor=list[0.6,2.9999999999999996,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float64"), size=None, scale_factor=list[0.6,4.199999999999999,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float64"), size=None, scale_factor=list[0.6,4.199999999999999,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float64"), size=None, scale_factor=list[0.6,4.199999999999999,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float64"), size=None, scale_factor=list[0.6,4.199999999999999,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float64"), size=None, scale_factor=list[0.6,5.399999999999999,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float64"), size=None, scale_factor=list[0.6,5.399999999999999,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float64"), size=None, scale_factor=list[0.6,5.399999999999999,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float64"), size=None, scale_factor=list[0.6,5.399999999999999,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bicubic", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bicubic", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="nearest", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bicubic", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bicubic", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="nearest", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,2.9999999999999996,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,2.9999999999999996,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,2.9999999999999996,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,2.9999999999999996,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,4.199999999999999,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,4.199999999999999,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,4.199999999999999,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,4.199999999999999,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,5.399999999999999,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,5.399999999999999,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,5.399999999999999,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float64"), size=None, scale_factor=list[1.7999999999999998,5.399999999999999,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,0.6,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,0.6,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,0.6,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,0.6,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,1.7999999999999998,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,1.7999999999999998,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,1.7999999999999998,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,1.7999999999999998,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,2.9999999999999996,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,2.9999999999999996,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,2.9999999999999996,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,2.9999999999999996,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,4.199999999999999,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,4.199999999999999,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,4.199999999999999,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,4.199999999999999,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,5.399999999999999,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,5.399999999999999,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,5.399999999999999,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 10],"float64"), size=None, scale_factor=list[2.9999999999999996,5.399999999999999,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 128],"float32"), list[512,1024,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 128],"float32"), size=list[512,512,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 16],"float32"), size=list[32,32,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 16],"float32"), size=None, scale_factor=2, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 256],"float32"), list[512,1024,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 256],"float32"), size=list[1024,1024,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 32],"float32"), size=list[32,32,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 5, 6],"float64"), size=list[9,10,11,], scale_factor=None, mode="trilinear", align_corners=False, align_mode=0, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 5],"float64"), size=list[10,11,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 5],"float64"), size=list[9,10,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 5],"float64"), size=list[9,10,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 6, 6],"float16"), scale_factor=list[2,2,2,], mode="nearest", align_corners=False, data_format="NCDHW", )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 6, 6],"float32"), scale_factor=list[2,2,2,], mode="nearest", align_corners=False, data_format="NCDHW", )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 6],"float16"), scale_factor=list[2,2,], mode="nearest", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2, 2, 0, 6],"float32"), scale_factor=list[2,2,], mode="nearest", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float32"), size=list[13,13,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float32"), size=list[13,13,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float32"), size=list[13,13,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float32"), size=list[13,13,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float32"), size=list[13,13,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float32"), size=list[13,13,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float32"), size=list[13,13,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float32"), size=list[13,13,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float32"), size=list[13,13,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float32"), size=list[13,13,], scale_factor=None, mode="nearest", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float32"), size=list[13,2,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float32"), size=list[13,2,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float32"), size=list[13,2,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float32"), size=list[13,2,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float32"), size=list[13,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float32"), size=list[13,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float32"), size=list[13,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float32"), size=list[13,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float32"), size=list[13,2,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float32"), size=list[13,2,], scale_factor=None, mode="nearest", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float32"), size=list[13,24,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float32"), size=list[13,24,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float32"), size=list[13,24,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float32"), size=list[13,24,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float32"), size=list[2,13,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float32"), size=list[2,13,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float32"), size=list[2,13,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float32"), size=list[2,13,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float32"), size=list[2,13,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float32"), size=list[2,13,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float32"), size=list[2,13,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float32"), size=list[2,13,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float32"), size=list[2,13,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float32"), size=list[2,13,], scale_factor=None, mode="nearest", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float32"), size=list[2,2,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float32"), size=list[2,2,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float32"), size=list[2,2,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float32"), size=list[2,2,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float32"), size=list[2,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float32"), size=list[2,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float32"), size=list[2,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float32"), size=list[2,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float32"), size=list[2,2,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float32"), size=list[2,2,], scale_factor=None, mode="nearest", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float32"), size=list[2,24,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float32"), size=list[2,24,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float32"), size=list[2,24,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float32"), size=list[2,24,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float32"), size=list[24,13,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float32"), size=list[24,13,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float32"), size=list[24,13,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float32"), size=list[24,13,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float32"), size=list[24,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float32"), size=list[24,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float32"), size=list[24,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float32"), size=list[24,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float32"), size=list[24,24,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float32"), size=list[24,24,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float32"), size=list[24,24,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float32"), size=list[24,24,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float32"), size=None, scale_factor=list[0.6,0.6,], mode="bicubic", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float32"), size=None, scale_factor=list[0.6,0.6,], mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float32"), size=None, scale_factor=list[0.6,0.6,], mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float32"), size=None, scale_factor=list[0.6,0.6,], mode="bicubic", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float32"), size=None, scale_factor=list[0.6,0.6,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float32"), size=None, scale_factor=list[0.6,0.6,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float32"), size=None, scale_factor=list[0.6,0.6,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float32"), size=None, scale_factor=list[0.6,0.6,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float32"), size=None, scale_factor=list[0.6,0.6,], mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float32"), size=None, scale_factor=list[0.6,0.6,], mode="nearest", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float32"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bicubic", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float32"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float32"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float32"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bicubic", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float32"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float32"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float32"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float32"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float32"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float32"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="nearest", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float32"), size=None, scale_factor=list[0.6,2.9999999999999996,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float32"), size=None, scale_factor=list[0.6,2.9999999999999996,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float32"), size=None, scale_factor=list[0.6,2.9999999999999996,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float32"), size=None, scale_factor=list[0.6,2.9999999999999996,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float32"), size=None, scale_factor=list[0.6,4.199999999999999,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float32"), size=None, scale_factor=list[0.6,4.199999999999999,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float32"), size=None, scale_factor=list[0.6,4.199999999999999,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float32"), size=None, scale_factor=list[0.6,4.199999999999999,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float32"), size=None, scale_factor=list[0.6,5.399999999999999,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float32"), size=None, scale_factor=list[0.6,5.399999999999999,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float32"), size=None, scale_factor=list[0.6,5.399999999999999,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float32"), size=None, scale_factor=list[0.6,5.399999999999999,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float32"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bicubic", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float32"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float32"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float32"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bicubic", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float32"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float32"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float32"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float32"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float32"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float32"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="nearest", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float32"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bicubic", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float32"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float32"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float32"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bicubic", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float32"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float32"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float32"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float32"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float32"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float32"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="nearest", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float32"), size=None, scale_factor=list[1.7999999999999998,2.9999999999999996,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float32"), size=None, scale_factor=list[1.7999999999999998,2.9999999999999996,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float32"), size=None, scale_factor=list[1.7999999999999998,2.9999999999999996,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float32"), size=None, scale_factor=list[1.7999999999999998,2.9999999999999996,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float32"), size=None, scale_factor=list[1.7999999999999998,4.199999999999999,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float32"), size=None, scale_factor=list[1.7999999999999998,4.199999999999999,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float32"), size=None, scale_factor=list[1.7999999999999998,4.199999999999999,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float32"), size=None, scale_factor=list[1.7999999999999998,4.199999999999999,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float32"), size=None, scale_factor=list[1.7999999999999998,5.399999999999999,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float32"), size=None, scale_factor=list[1.7999999999999998,5.399999999999999,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float32"), size=None, scale_factor=list[1.7999999999999998,5.399999999999999,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float32"), size=None, scale_factor=list[1.7999999999999998,5.399999999999999,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float32"), size=None, scale_factor=list[2.9999999999999996,0.6,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float32"), size=None, scale_factor=list[2.9999999999999996,0.6,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float32"), size=None, scale_factor=list[2.9999999999999996,0.6,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float32"), size=None, scale_factor=list[2.9999999999999996,0.6,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float32"), size=None, scale_factor=list[2.9999999999999996,1.7999999999999998,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float32"), size=None, scale_factor=list[2.9999999999999996,1.7999999999999998,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float32"), size=None, scale_factor=list[2.9999999999999996,1.7999999999999998,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float32"), size=None, scale_factor=list[2.9999999999999996,1.7999999999999998,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float32"), size=None, scale_factor=list[2.9999999999999996,2.9999999999999996,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float32"), size=None, scale_factor=list[2.9999999999999996,2.9999999999999996,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float32"), size=None, scale_factor=list[2.9999999999999996,2.9999999999999996,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float32"), size=None, scale_factor=list[2.9999999999999996,2.9999999999999996,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float32"), size=None, scale_factor=list[2.9999999999999996,4.199999999999999,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float32"), size=None, scale_factor=list[2.9999999999999996,4.199999999999999,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float32"), size=None, scale_factor=list[2.9999999999999996,4.199999999999999,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float32"), size=None, scale_factor=list[2.9999999999999996,4.199999999999999,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float32"), size=None, scale_factor=list[2.9999999999999996,5.399999999999999,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float32"), size=None, scale_factor=list[2.9999999999999996,5.399999999999999,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float32"), size=None, scale_factor=list[2.9999999999999996,5.399999999999999,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float32"), size=None, scale_factor=list[2.9999999999999996,5.399999999999999,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float64"), size=list[13,13,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float64"), size=list[13,13,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float64"), size=list[13,13,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float64"), size=list[13,13,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float64"), size=list[13,13,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float64"), size=list[13,13,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float64"), size=list[13,13,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float64"), size=list[13,13,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float64"), size=list[13,13,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float64"), size=list[13,13,], scale_factor=None, mode="nearest", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float64"), size=list[13,2,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float64"), size=list[13,2,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float64"), size=list[13,2,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float64"), size=list[13,2,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float64"), size=list[13,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float64"), size=list[13,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float64"), size=list[13,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float64"), size=list[13,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float64"), size=list[13,2,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float64"), size=list[13,2,], scale_factor=None, mode="nearest", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float64"), size=list[13,24,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float64"), size=list[13,24,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float64"), size=list[13,24,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float64"), size=list[13,24,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float64"), size=list[2,13,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float64"), size=list[2,13,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float64"), size=list[2,13,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float64"), size=list[2,13,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float64"), size=list[2,13,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float64"), size=list[2,13,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float64"), size=list[2,13,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float64"), size=list[2,13,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float64"), size=list[2,13,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float64"), size=list[2,13,], scale_factor=None, mode="nearest", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float64"), size=list[2,2,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float64"), size=list[2,2,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float64"), size=list[2,2,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float64"), size=list[2,2,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float64"), size=list[2,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float64"), size=list[2,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float64"), size=list[2,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float64"), size=list[2,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float64"), size=list[2,2,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float64"), size=list[2,2,], scale_factor=None, mode="nearest", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float64"), size=list[2,24,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float64"), size=list[2,24,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float64"), size=list[2,24,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float64"), size=list[2,24,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float64"), size=list[24,13,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float64"), size=list[24,13,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float64"), size=list[24,13,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float64"), size=list[24,13,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float64"), size=list[24,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float64"), size=list[24,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float64"), size=list[24,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float64"), size=list[24,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float64"), size=list[24,24,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float64"), size=list[24,24,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float64"), size=list[24,24,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float64"), size=list[24,24,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float64"), size=None, scale_factor=list[0.6,0.6,], mode="bicubic", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float64"), size=None, scale_factor=list[0.6,0.6,], mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float64"), size=None, scale_factor=list[0.6,0.6,], mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float64"), size=None, scale_factor=list[0.6,0.6,], mode="bicubic", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float64"), size=None, scale_factor=list[0.6,0.6,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float64"), size=None, scale_factor=list[0.6,0.6,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float64"), size=None, scale_factor=list[0.6,0.6,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float64"), size=None, scale_factor=list[0.6,0.6,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float64"), size=None, scale_factor=list[0.6,0.6,], mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float64"), size=None, scale_factor=list[0.6,0.6,], mode="nearest", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float64"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bicubic", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float64"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float64"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float64"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bicubic", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float64"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float64"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float64"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float64"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float64"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float64"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="nearest", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float64"), size=None, scale_factor=list[0.6,2.9999999999999996,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float64"), size=None, scale_factor=list[0.6,2.9999999999999996,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float64"), size=None, scale_factor=list[0.6,2.9999999999999996,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float64"), size=None, scale_factor=list[0.6,2.9999999999999996,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float64"), size=None, scale_factor=list[0.6,4.199999999999999,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float64"), size=None, scale_factor=list[0.6,4.199999999999999,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float64"), size=None, scale_factor=list[0.6,4.199999999999999,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float64"), size=None, scale_factor=list[0.6,4.199999999999999,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float64"), size=None, scale_factor=list[0.6,5.399999999999999,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float64"), size=None, scale_factor=list[0.6,5.399999999999999,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float64"), size=None, scale_factor=list[0.6,5.399999999999999,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float64"), size=None, scale_factor=list[0.6,5.399999999999999,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float64"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bicubic", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float64"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float64"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float64"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bicubic", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float64"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float64"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float64"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float64"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float64"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float64"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="nearest", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float64"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bicubic", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float64"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float64"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float64"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bicubic", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float64"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float64"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float64"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float64"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float64"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float64"), size=None, scale_factor=list[1.7999999999999998,1.7999999999999998,], mode="nearest", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float64"), size=None, scale_factor=list[1.7999999999999998,2.9999999999999996,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float64"), size=None, scale_factor=list[1.7999999999999998,2.9999999999999996,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float64"), size=None, scale_factor=list[1.7999999999999998,2.9999999999999996,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float64"), size=None, scale_factor=list[1.7999999999999998,2.9999999999999996,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float64"), size=None, scale_factor=list[1.7999999999999998,4.199999999999999,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float64"), size=None, scale_factor=list[1.7999999999999998,4.199999999999999,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float64"), size=None, scale_factor=list[1.7999999999999998,4.199999999999999,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float64"), size=None, scale_factor=list[1.7999999999999998,4.199999999999999,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float64"), size=None, scale_factor=list[1.7999999999999998,5.399999999999999,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float64"), size=None, scale_factor=list[1.7999999999999998,5.399999999999999,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float64"), size=None, scale_factor=list[1.7999999999999998,5.399999999999999,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float64"), size=None, scale_factor=list[1.7999999999999998,5.399999999999999,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float64"), size=None, scale_factor=list[2.9999999999999996,0.6,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float64"), size=None, scale_factor=list[2.9999999999999996,0.6,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float64"), size=None, scale_factor=list[2.9999999999999996,0.6,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float64"), size=None, scale_factor=list[2.9999999999999996,0.6,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float64"), size=None, scale_factor=list[2.9999999999999996,1.7999999999999998,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float64"), size=None, scale_factor=list[2.9999999999999996,1.7999999999999998,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float64"), size=None, scale_factor=list[2.9999999999999996,1.7999999999999998,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float64"), size=None, scale_factor=list[2.9999999999999996,1.7999999999999998,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float64"), size=None, scale_factor=list[2.9999999999999996,2.9999999999999996,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float64"), size=None, scale_factor=list[2.9999999999999996,2.9999999999999996,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float64"), size=None, scale_factor=list[2.9999999999999996,2.9999999999999996,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float64"), size=None, scale_factor=list[2.9999999999999996,2.9999999999999996,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float64"), size=None, scale_factor=list[2.9999999999999996,4.199999999999999,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float64"), size=None, scale_factor=list[2.9999999999999996,4.199999999999999,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float64"), size=None, scale_factor=list[2.9999999999999996,4.199999999999999,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float64"), size=None, scale_factor=list[2.9999999999999996,4.199999999999999,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float64"), size=None, scale_factor=list[2.9999999999999996,5.399999999999999,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float64"), size=None, scale_factor=list[2.9999999999999996,5.399999999999999,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float64"), size=None, scale_factor=list[2.9999999999999996,5.399999999999999,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 0],"float64"), size=None, scale_factor=list[2.9999999999999996,5.399999999999999,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 128, 0],"float32"), list[512,1024,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([2, 2, 128, 0],"float32"), size=list[512,512,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2, 2, 16, 0],"float32"), size=list[32,32,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2, 2, 16, 0],"float32"), size=None, scale_factor=2, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 256, 0],"float32"), size=list[1024,1024,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2, 2, 32, 0],"float32"), size=list[32,32,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2, 2, 4, 0, 6],"float64"), size=list[9,10,11,], scale_factor=None, mode="trilinear", align_corners=False, align_mode=0, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 4, 0],"float64"), size=list[10,11,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 4, 0],"float64"), size=list[9,10,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 4, 0],"float64"), size=list[9,10,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 4, 5, 0],"float64"), size=list[9,10,11,], scale_factor=None, mode="trilinear", align_corners=False, align_mode=0, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 6, 0, 6],"float16"), scale_factor=list[2,2,2,], mode="nearest", align_corners=False, data_format="NCDHW", )
paddle.nn.functional.interpolate(Tensor([2, 2, 6, 0, 6],"float32"), scale_factor=list[2,2,2,], mode="nearest", align_corners=False, data_format="NCDHW", )
paddle.nn.functional.interpolate(Tensor([2, 2, 6, 0],"float16"), scale_factor=list[2,2,], mode="nearest", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2, 2, 6, 0],"float32"), scale_factor=list[2,2,], mode="nearest", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2, 2, 6, 6, 0],"float16"), scale_factor=list[2,2,2,], mode="nearest", align_corners=False, data_format="NCDHW", )
paddle.nn.functional.interpolate(Tensor([2, 2, 6, 6, 0],"float32"), scale_factor=list[2,2,2,], mode="nearest", align_corners=False, data_format="NCDHW", )
paddle.nn.functional.interpolate(Tensor([2, 2, 64, 0],"float32"), list[512,1024,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2, 256, 0, 1],"float32"), list[64,128,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([2, 256, 0, 1],"float32"), scale_factor=2, mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([2, 256, 0, 128],"float32"), list[128,256,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([2, 256, 0, 2],"float32"), scale_factor=2, mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([2, 256, 1, 0],"float32"), list[64,128,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([2, 256, 1, 0],"float32"), scale_factor=2, mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([2, 256, 2, 0],"float32"), scale_factor=2, mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([2, 256, 64, 0],"float32"), list[128,256,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([2, 3, 0, 10],"float32"), size=list[12,12,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 3, 0, 10],"float64"), size=list[12,12,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 3, 0, 10],"float64"), size=list[12,12,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 3, 0, 10],"float64"), size=list[12,13,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 3, 0, 10],"float64"), size=list[256,256,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 3, 0, 10],"float64"), size=None, scale_factor=5, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 3, 0, 10],"float64"), size=None, scale_factor=list[2,3,], mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 3, 0, 10],"float64"), size=None, scale_factor=tuple(2,3,), mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 3, 0, 10],"float64"), size=tuple(12,13,), scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 3, 0, 4, 4],"float16"), size=list[3,3,3,], mode="trilinear", align_corners=True, align_mode=1, data_format="NCDHW", )
paddle.nn.functional.interpolate(Tensor([2, 3, 0, 4, 4],"float32"), size=list[3,3,3,], mode="trilinear", align_corners=True, align_mode=1, data_format="NCDHW", )
paddle.nn.functional.interpolate(Tensor([2, 3, 0, 5],"float16"), size=list[3,3,], mode="bicubic", align_corners=True, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([2, 3, 0, 5],"float32"), size=list[3,3,], mode="bicubic", align_corners=True, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([2, 3, 0, 6],"float32"), size=list[12,12,], mode="bicubic", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2, 3, 4, 0, 4],"float16"), size=list[3,3,3,], mode="trilinear", align_corners=True, align_mode=1, data_format="NCDHW", )
paddle.nn.functional.interpolate(Tensor([2, 3, 4, 0, 4],"float32"), size=list[3,3,3,], mode="trilinear", align_corners=True, align_mode=1, data_format="NCDHW", )
paddle.nn.functional.interpolate(Tensor([2, 3, 4, 4, 0],"float16"), size=list[3,3,3,], mode="trilinear", align_corners=True, align_mode=1, data_format="NCDHW", )
paddle.nn.functional.interpolate(Tensor([2, 3, 4, 4, 0],"float32"), size=list[3,3,3,], mode="trilinear", align_corners=True, align_mode=1, data_format="NCDHW", )
paddle.nn.functional.interpolate(Tensor([2, 3, 5, 0],"float16"), size=list[3,3,], mode="bicubic", align_corners=True, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([2, 3, 5, 0],"float32"), size=list[3,3,], mode="bicubic", align_corners=True, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([2, 3, 6, 0],"float32"), size=list[12,12,], mode="bicubic", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2, 3, 6, 0],"float32"), size=list[12,12,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 3, 6, 0],"float64"), size=list[12,12,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 3, 6, 0],"float64"), size=list[12,12,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 3, 6, 0],"float64"), size=list[12,13,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 3, 6, 0],"float64"), size=list[256,256,], scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 3, 6, 0],"float64"), size=None, scale_factor=5, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 3, 6, 0],"float64"), size=None, scale_factor=list[2,3,], mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 3, 6, 0],"float64"), size=None, scale_factor=tuple(2,3,), mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 3, 6, 0],"float64"), size=tuple(12,13,), scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 4, 0, 10, 10],"float32"), size=list[2,2,2,], scale_factor=None, mode="trilinear", align_corners=False, align_mode=0, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 4, 0, 10, 10],"float32"), size=list[2,2,2,], scale_factor=None, mode="trilinear", align_corners=False, align_mode=1, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 4, 0, 10, 10],"float32"), size=list[2,2,2,], scale_factor=None, mode="trilinear", align_corners=True, align_mode=0, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 4, 0, 10, 10],"float32"), size=list[2,2,2,], scale_factor=None, mode="trilinear", align_corners=True, align_mode=1, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 4, 0, 10, 10],"float32"), size=None, scale_factor=list[0.6,0.6,0.6,], mode="trilinear", align_corners=False, align_mode=0, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 4, 0, 10, 10],"float32"), size=None, scale_factor=list[0.6,0.6,0.6,], mode="trilinear", align_corners=False, align_mode=1, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 4, 0, 10, 10],"float32"), size=None, scale_factor=list[0.6,0.6,0.6,], mode="trilinear", align_corners=True, align_mode=0, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 4, 0, 10, 10],"float32"), size=None, scale_factor=list[0.6,0.6,0.6,], mode="trilinear", align_corners=True, align_mode=1, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 4, 0, 10, 10],"float64"), size=list[2,2,2,], scale_factor=None, mode="trilinear", align_corners=False, align_mode=0, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 4, 0, 10, 10],"float64"), size=list[2,2,2,], scale_factor=None, mode="trilinear", align_corners=False, align_mode=1, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 4, 0, 10, 10],"float64"), size=list[2,2,2,], scale_factor=None, mode="trilinear", align_corners=True, align_mode=0, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 4, 0, 10, 10],"float64"), size=list[2,2,2,], scale_factor=None, mode="trilinear", align_corners=True, align_mode=1, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 4, 0, 10, 10],"float64"), size=None, scale_factor=list[0.6,0.6,0.6,], mode="trilinear", align_corners=False, align_mode=0, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 4, 0, 10, 10],"float64"), size=None, scale_factor=list[0.6,0.6,0.6,], mode="trilinear", align_corners=False, align_mode=1, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 4, 0, 10, 10],"float64"), size=None, scale_factor=list[0.6,0.6,0.6,], mode="trilinear", align_corners=True, align_mode=0, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 4, 0, 10, 10],"float64"), size=None, scale_factor=list[0.6,0.6,0.6,], mode="trilinear", align_corners=True, align_mode=1, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 4, 0, 4, 3],"float16"), size=list[3,3,3,], mode="trilinear", align_corners=True, align_mode=1, data_format="NDHWC", )
paddle.nn.functional.interpolate(Tensor([2, 4, 0, 4, 3],"float32"), size=list[3,3,3,], mode="trilinear", align_corners=True, align_mode=1, data_format="NDHWC", )
paddle.nn.functional.interpolate(Tensor([2, 4, 10, 0, 10],"float32"), size=list[2,2,2,], scale_factor=None, mode="trilinear", align_corners=False, align_mode=0, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 4, 10, 0, 10],"float32"), size=list[2,2,2,], scale_factor=None, mode="trilinear", align_corners=False, align_mode=1, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 4, 10, 0, 10],"float32"), size=list[2,2,2,], scale_factor=None, mode="trilinear", align_corners=True, align_mode=0, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 4, 10, 0, 10],"float32"), size=list[2,2,2,], scale_factor=None, mode="trilinear", align_corners=True, align_mode=1, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 4, 10, 0, 10],"float32"), size=None, scale_factor=list[0.6,0.6,0.6,], mode="trilinear", align_corners=False, align_mode=0, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 4, 10, 0, 10],"float32"), size=None, scale_factor=list[0.6,0.6,0.6,], mode="trilinear", align_corners=False, align_mode=1, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 4, 10, 0, 10],"float32"), size=None, scale_factor=list[0.6,0.6,0.6,], mode="trilinear", align_corners=True, align_mode=0, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 4, 10, 0, 10],"float32"), size=None, scale_factor=list[0.6,0.6,0.6,], mode="trilinear", align_corners=True, align_mode=1, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 4, 10, 0, 10],"float64"), size=list[2,2,2,], scale_factor=None, mode="trilinear", align_corners=False, align_mode=0, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 4, 10, 0, 10],"float64"), size=list[2,2,2,], scale_factor=None, mode="trilinear", align_corners=False, align_mode=1, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 4, 10, 0, 10],"float64"), size=list[2,2,2,], scale_factor=None, mode="trilinear", align_corners=True, align_mode=0, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 4, 10, 0, 10],"float64"), size=list[2,2,2,], scale_factor=None, mode="trilinear", align_corners=True, align_mode=1, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 4, 10, 0, 10],"float64"), size=None, scale_factor=list[0.6,0.6,0.6,], mode="trilinear", align_corners=False, align_mode=0, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 4, 10, 0, 10],"float64"), size=None, scale_factor=list[0.6,0.6,0.6,], mode="trilinear", align_corners=False, align_mode=1, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 4, 10, 0, 10],"float64"), size=None, scale_factor=list[0.6,0.6,0.6,], mode="trilinear", align_corners=True, align_mode=0, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 4, 10, 0, 10],"float64"), size=None, scale_factor=list[0.6,0.6,0.6,], mode="trilinear", align_corners=True, align_mode=1, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 4, 10, 10, 0],"float32"), size=list[2,2,2,], scale_factor=None, mode="trilinear", align_corners=False, align_mode=0, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 4, 10, 10, 0],"float32"), size=list[2,2,2,], scale_factor=None, mode="trilinear", align_corners=False, align_mode=1, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 4, 10, 10, 0],"float32"), size=list[2,2,2,], scale_factor=None, mode="trilinear", align_corners=True, align_mode=0, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 4, 10, 10, 0],"float32"), size=list[2,2,2,], scale_factor=None, mode="trilinear", align_corners=True, align_mode=1, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 4, 10, 10, 0],"float32"), size=None, scale_factor=list[0.6,0.6,0.6,], mode="trilinear", align_corners=False, align_mode=0, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 4, 10, 10, 0],"float32"), size=None, scale_factor=list[0.6,0.6,0.6,], mode="trilinear", align_corners=False, align_mode=1, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 4, 10, 10, 0],"float32"), size=None, scale_factor=list[0.6,0.6,0.6,], mode="trilinear", align_corners=True, align_mode=0, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 4, 10, 10, 0],"float32"), size=None, scale_factor=list[0.6,0.6,0.6,], mode="trilinear", align_corners=True, align_mode=1, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 4, 10, 10, 0],"float64"), size=list[2,2,2,], scale_factor=None, mode="trilinear", align_corners=False, align_mode=0, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 4, 10, 10, 0],"float64"), size=list[2,2,2,], scale_factor=None, mode="trilinear", align_corners=False, align_mode=1, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 4, 10, 10, 0],"float64"), size=list[2,2,2,], scale_factor=None, mode="trilinear", align_corners=True, align_mode=0, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 4, 10, 10, 0],"float64"), size=list[2,2,2,], scale_factor=None, mode="trilinear", align_corners=True, align_mode=1, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 4, 10, 10, 0],"float64"), size=None, scale_factor=list[0.6,0.6,0.6,], mode="trilinear", align_corners=False, align_mode=0, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 4, 10, 10, 0],"float64"), size=None, scale_factor=list[0.6,0.6,0.6,], mode="trilinear", align_corners=False, align_mode=1, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 4, 10, 10, 0],"float64"), size=None, scale_factor=list[0.6,0.6,0.6,], mode="trilinear", align_corners=True, align_mode=0, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 4, 10, 10, 0],"float64"), size=None, scale_factor=list[0.6,0.6,0.6,], mode="trilinear", align_corners=True, align_mode=1, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 4, 4, 0, 3],"float16"), size=list[3,3,3,], mode="trilinear", align_corners=True, align_mode=1, data_format="NDHWC", )
paddle.nn.functional.interpolate(Tensor([2, 4, 4, 0, 3],"float32"), size=list[3,3,3,], mode="trilinear", align_corners=True, align_mode=1, data_format="NDHWC", )
paddle.nn.functional.interpolate(Tensor([2, 4, 4, 4, 0],"float16"), size=list[3,3,3,], mode="trilinear", align_corners=True, align_mode=1, data_format="NDHWC", )
paddle.nn.functional.interpolate(Tensor([2, 4, 4, 4, 0],"float32"), size=list[3,3,3,], mode="trilinear", align_corners=True, align_mode=1, data_format="NDHWC", )
paddle.nn.functional.interpolate(Tensor([2, 64, 0, 68],"float32"), size=list[68,68,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([2, 64, 68, 0],"float32"), size=list[68,68,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 192],"float32"), size=tuple(341,256,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 192],"float32"), size=tuple(342,257,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 192],"float32"), size=tuple(344,258,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 192],"float32"), size=tuple(345,259,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 192],"float32"), size=tuple(346,260,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 192],"float32"), size=tuple(348,261,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 192],"float32"), size=tuple(349,262,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 192],"float32"), size=tuple(350,263,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 192],"float32"), size=tuple(352,264,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 192],"float32"), size=tuple(353,265,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 192],"float32"), size=tuple(354,266,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 192],"float32"), size=tuple(356,267,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 192],"float32"), size=tuple(357,268,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 192],"float32"), size=tuple(358,269,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 192],"float32"), size=tuple(360,270,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 192],"float32"), size=tuple(361,271,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 192],"float32"), size=tuple(362,272,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 192],"float32"), size=tuple(364,273,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 192],"float32"), size=tuple(365,274,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 192],"float32"), size=tuple(366,275,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 192],"float32"), size=tuple(368,276,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 192],"float32"), size=tuple(369,277,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 192],"float32"), size=tuple(370,278,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 192],"float32"), size=tuple(372,279,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 192],"float32"), size=tuple(373,280,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 192],"float32"), size=tuple(374,281,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 192],"float32"), size=tuple(376,282,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 192],"float32"), size=tuple(377,283,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 192],"float32"), size=tuple(378,284,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 192],"float32"), size=tuple(380,285,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 192],"float32"), size=tuple(381,286,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 192],"float32"), size=tuple(382,287,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 192],"float32"), size=tuple(384,288,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 192],"float32"), size=tuple(385,289,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 192],"float32"), size=tuple(386,290,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 192],"float32"), size=tuple(388,291,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 192],"float32"), size=tuple(389,292,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 192],"float32"), size=tuple(390,293,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 192],"float32"), size=tuple(392,294,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 192],"float32"), size=tuple(393,295,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 192],"float32"), size=tuple(394,296,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 192],"float32"), size=tuple(396,297,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 192],"float32"), size=tuple(397,298,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 192],"float32"), size=tuple(398,299,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 192],"float32"), size=tuple(400,300,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 192],"float32"), size=tuple(401,301,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 192],"float32"), size=tuple(402,302,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 192],"float32"), size=tuple(404,303,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 192],"float32"), size=tuple(405,304,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 192],"float32"), size=tuple(406,305,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 192],"float32"), size=tuple(408,306,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 192],"float32"), size=tuple(409,307,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 192],"float32"), size=tuple(410,308,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 192],"float32"), size=tuple(412,309,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 192],"float32"), size=tuple(413,310,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 192],"float32"), size=tuple(414,311,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 192],"float32"), size=tuple(416,312,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 192],"float32"), size=tuple(417,313,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 192],"float32"), size=tuple(418,314,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 192],"float32"), size=tuple(420,315,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 192],"float32"), size=tuple(421,316,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 192],"float32"), size=tuple(422,317,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 192],"float32"), size=tuple(424,318,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 192],"float32"), size=tuple(425,319,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 192],"float32"), size=tuple(426,320,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 256],"float32"), tuple(1024,1024,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 314],"float32"), size=tuple(257,315,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 314],"float32"), size=tuple(258,316,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 314],"float32"), size=tuple(259,317,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 314],"float32"), size=tuple(260,318,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 314],"float32"), size=tuple(261,320,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 314],"float32"), size=tuple(262,321,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 314],"float32"), size=tuple(263,322,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 314],"float32"), size=tuple(264,323,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 314],"float32"), size=tuple(265,325,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 314],"float32"), size=tuple(266,326,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 314],"float32"), size=tuple(267,327,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 314],"float32"), size=tuple(268,328,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 314],"float32"), size=tuple(269,329,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 314],"float32"), size=tuple(270,331,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 314],"float32"), size=tuple(271,332,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 314],"float32"), size=tuple(272,333,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 314],"float32"), size=tuple(273,334,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 314],"float32"), size=tuple(274,336,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 314],"float32"), size=tuple(275,337,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 314],"float32"), size=tuple(276,338,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 314],"float32"), size=tuple(277,339,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 314],"float32"), size=tuple(278,340,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 314],"float32"), size=tuple(279,342,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 314],"float32"), size=tuple(280,343,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 314],"float32"), size=tuple(281,344,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 314],"float32"), size=tuple(282,345,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 314],"float32"), size=tuple(283,347,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 314],"float32"), size=tuple(284,348,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 314],"float32"), size=tuple(285,349,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 314],"float32"), size=tuple(286,350,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 314],"float32"), size=tuple(287,352,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 314],"float32"), size=tuple(288,353,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 314],"float32"), size=tuple(289,354,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 314],"float32"), size=tuple(290,355,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 314],"float32"), size=tuple(291,356,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 314],"float32"), size=tuple(292,358,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 314],"float32"), size=tuple(293,359,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 314],"float32"), size=tuple(294,360,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 314],"float32"), size=tuple(295,361,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 314],"float32"), size=tuple(296,363,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 314],"float32"), size=tuple(297,364,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 314],"float32"), size=tuple(298,365,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 314],"float32"), size=tuple(299,366,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 314],"float32"), size=tuple(300,367,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 314],"float32"), size=tuple(301,369,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 314],"float32"), size=tuple(302,370,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 314],"float32"), size=tuple(303,371,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 314],"float32"), size=tuple(304,372,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 314],"float32"), size=tuple(305,374,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 314],"float32"), size=tuple(306,375,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 314],"float32"), size=tuple(307,376,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 314],"float32"), size=tuple(308,377,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 314],"float32"), size=tuple(309,379,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 314],"float32"), size=tuple(310,380,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 314],"float32"), size=tuple(311,381,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 314],"float32"), size=tuple(312,382,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 314],"float32"), size=tuple(313,383,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 314],"float32"), size=tuple(314,385,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 314],"float32"), size=tuple(315,386,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 314],"float32"), size=tuple(316,387,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 314],"float32"), size=tuple(317,388,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 314],"float32"), size=tuple(318,390,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 314],"float32"), size=tuple(319,391,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 314],"float32"), size=tuple(320,392,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 340],"float32"), size=tuple(257,341,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 340],"float32"), size=tuple(258,342,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 340],"float32"), size=tuple(259,343,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 340],"float32"), size=tuple(260,345,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 340],"float32"), size=tuple(261,346,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 340],"float32"), size=tuple(262,347,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 340],"float32"), size=tuple(263,349,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 340],"float32"), size=tuple(264,350,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 340],"float32"), size=tuple(265,351,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 340],"float32"), size=tuple(266,353,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 340],"float32"), size=tuple(267,354,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 340],"float32"), size=tuple(268,355,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 340],"float32"), size=tuple(269,357,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 340],"float32"), size=tuple(270,358,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 340],"float32"), size=tuple(271,359,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 340],"float32"), size=tuple(272,361,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 340],"float32"), size=tuple(273,362,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 340],"float32"), size=tuple(274,363,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 340],"float32"), size=tuple(275,365,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 340],"float32"), size=tuple(276,366,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 340],"float32"), size=tuple(277,367,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 340],"float32"), size=tuple(278,369,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 340],"float32"), size=tuple(279,370,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 340],"float32"), size=tuple(280,371,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 340],"float32"), size=tuple(281,373,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 340],"float32"), size=tuple(282,374,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 340],"float32"), size=tuple(283,375,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 340],"float32"), size=tuple(284,377,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 340],"float32"), size=tuple(285,378,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 340],"float32"), size=tuple(286,379,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 340],"float32"), size=tuple(287,381,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 340],"float32"), size=tuple(288,382,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 340],"float32"), size=tuple(289,383,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 340],"float32"), size=tuple(290,385,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 340],"float32"), size=tuple(291,386,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 340],"float32"), size=tuple(292,387,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 340],"float32"), size=tuple(293,389,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 340],"float32"), size=tuple(294,390,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 340],"float32"), size=tuple(295,391,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 340],"float32"), size=tuple(296,393,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 340],"float32"), size=tuple(297,394,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 340],"float32"), size=tuple(298,395,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 340],"float32"), size=tuple(299,397,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 340],"float32"), size=tuple(300,398,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 340],"float32"), size=tuple(301,399,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 340],"float32"), size=tuple(302,401,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 340],"float32"), size=tuple(303,402,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 340],"float32"), size=tuple(304,403,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 340],"float32"), size=tuple(305,405,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 340],"float32"), size=tuple(306,406,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 340],"float32"), size=tuple(307,407,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 340],"float32"), size=tuple(308,409,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 340],"float32"), size=tuple(309,410,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 340],"float32"), size=tuple(310,411,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 340],"float32"), size=tuple(311,413,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 340],"float32"), size=tuple(312,414,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 340],"float32"), size=tuple(313,415,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 340],"float32"), size=tuple(314,417,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 340],"float32"), size=tuple(315,418,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 340],"float32"), size=tuple(316,419,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 340],"float32"), size=tuple(317,421,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 340],"float32"), size=tuple(318,422,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 340],"float32"), size=tuple(319,423,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 340],"float32"), size=tuple(320,425,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 372],"float32"), size=tuple(257,373,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 372],"float32"), size=tuple(258,374,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 372],"float32"), size=tuple(259,376,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 372],"float32"), size=tuple(260,377,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 372],"float32"), size=tuple(261,379,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 372],"float32"), size=tuple(262,380,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 372],"float32"), size=tuple(263,382,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 372],"float32"), size=tuple(264,383,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 372],"float32"), size=tuple(265,385,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 372],"float32"), size=tuple(266,386,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 372],"float32"), size=tuple(267,387,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 372],"float32"), size=tuple(268,389,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 372],"float32"), size=tuple(269,390,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 372],"float32"), size=tuple(270,392,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 372],"float32"), size=tuple(271,393,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 372],"float32"), size=tuple(272,395,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 372],"float32"), size=tuple(273,396,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 372],"float32"), size=tuple(274,398,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 372],"float32"), size=tuple(275,399,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 372],"float32"), size=tuple(276,401,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 372],"float32"), size=tuple(277,402,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 372],"float32"), size=tuple(278,403,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 372],"float32"), size=tuple(279,405,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 372],"float32"), size=tuple(280,406,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 372],"float32"), size=tuple(281,408,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 372],"float32"), size=tuple(282,409,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 372],"float32"), size=tuple(283,411,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 372],"float32"), size=tuple(284,412,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 372],"float32"), size=tuple(285,414,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 372],"float32"), size=tuple(286,415,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 372],"float32"), size=tuple(287,417,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 372],"float32"), size=tuple(288,418,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 372],"float32"), size=tuple(289,419,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 372],"float32"), size=tuple(290,421,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 372],"float32"), size=tuple(291,422,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 372],"float32"), size=tuple(292,424,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 372],"float32"), size=tuple(293,425,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 372],"float32"), size=tuple(294,427,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 372],"float32"), size=tuple(295,428,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 372],"float32"), size=tuple(296,430,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 372],"float32"), size=tuple(297,431,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 372],"float32"), size=tuple(298,433,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 372],"float32"), size=tuple(299,434,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 372],"float32"), size=tuple(300,435,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 372],"float32"), size=tuple(301,437,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 372],"float32"), size=tuple(302,438,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 372],"float32"), size=tuple(303,440,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 372],"float32"), size=tuple(304,441,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 372],"float32"), size=tuple(305,443,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 372],"float32"), size=tuple(306,444,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 372],"float32"), size=tuple(307,446,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 372],"float32"), size=tuple(308,447,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 372],"float32"), size=tuple(309,449,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 372],"float32"), size=tuple(310,450,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 372],"float32"), size=tuple(311,451,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 372],"float32"), size=tuple(312,453,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 372],"float32"), size=tuple(313,454,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 372],"float32"), size=tuple(314,456,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 372],"float32"), size=tuple(315,457,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 372],"float32"), size=tuple(316,459,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 372],"float32"), size=tuple(317,460,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 372],"float32"), size=tuple(318,462,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 372],"float32"), size=tuple(319,463,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 372],"float32"), size=tuple(320,465,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 384],"float32"), size=tuple(257,385,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 384],"float32"), size=tuple(258,387,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 384],"float32"), size=tuple(259,388,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 384],"float32"), size=tuple(260,390,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 384],"float32"), size=tuple(261,391,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 384],"float32"), size=tuple(262,393,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 384],"float32"), size=tuple(263,394,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 384],"float32"), size=tuple(264,396,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 384],"float32"), size=tuple(265,397,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 384],"float32"), size=tuple(266,399,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 384],"float32"), size=tuple(267,400,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 384],"float32"), size=tuple(268,402,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 384],"float32"), size=tuple(269,403,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 384],"float32"), size=tuple(270,405,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 384],"float32"), size=tuple(271,406,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 384],"float32"), size=tuple(272,408,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 384],"float32"), size=tuple(273,409,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 384],"float32"), size=tuple(274,411,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 384],"float32"), size=tuple(275,412,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 384],"float32"), size=tuple(276,414,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 384],"float32"), size=tuple(277,415,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 384],"float32"), size=tuple(278,417,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 384],"float32"), size=tuple(279,418,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 384],"float32"), size=tuple(280,420,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 384],"float32"), size=tuple(281,421,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 384],"float32"), size=tuple(282,423,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 384],"float32"), size=tuple(283,424,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 384],"float32"), size=tuple(284,426,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 384],"float32"), size=tuple(285,427,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 384],"float32"), size=tuple(286,429,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 384],"float32"), size=tuple(287,430,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 384],"float32"), size=tuple(288,432,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 384],"float32"), size=tuple(289,433,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 384],"float32"), size=tuple(290,435,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 384],"float32"), size=tuple(291,436,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 384],"float32"), size=tuple(292,438,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 384],"float32"), size=tuple(293,439,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 384],"float32"), size=tuple(294,441,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 384],"float32"), size=tuple(295,442,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 384],"float32"), size=tuple(296,444,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 384],"float32"), size=tuple(297,445,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 384],"float32"), size=tuple(298,447,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 384],"float32"), size=tuple(299,448,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 384],"float32"), size=tuple(300,450,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 384],"float32"), size=tuple(301,451,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 384],"float32"), size=tuple(302,453,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 384],"float32"), size=tuple(303,454,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 384],"float32"), size=tuple(304,456,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 384],"float32"), size=tuple(305,457,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 384],"float32"), size=tuple(306,459,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 384],"float32"), size=tuple(307,460,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 384],"float32"), size=tuple(308,462,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 384],"float32"), size=tuple(309,463,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 384],"float32"), size=tuple(310,465,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 384],"float32"), size=tuple(311,466,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 384],"float32"), size=tuple(312,468,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 384],"float32"), size=tuple(313,469,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 384],"float32"), size=tuple(314,471,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 384],"float32"), size=tuple(315,472,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 384],"float32"), size=tuple(316,474,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 384],"float32"), size=tuple(317,475,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 384],"float32"), size=tuple(318,477,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 384],"float32"), size=tuple(319,478,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 384],"float32"), size=tuple(320,480,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 454],"float32"), size=tuple(257,455,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 454],"float32"), size=tuple(258,457,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 454],"float32"), size=tuple(259,459,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 454],"float32"), size=tuple(260,461,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 454],"float32"), size=tuple(261,462,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 454],"float32"), size=tuple(262,464,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 454],"float32"), size=tuple(263,466,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 454],"float32"), size=tuple(264,468,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 454],"float32"), size=tuple(265,469,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 454],"float32"), size=tuple(266,471,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 454],"float32"), size=tuple(267,473,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 454],"float32"), size=tuple(268,475,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 454],"float32"), size=tuple(269,477,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 454],"float32"), size=tuple(270,478,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 454],"float32"), size=tuple(271,480,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 454],"float32"), size=tuple(272,482,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 454],"float32"), size=tuple(273,484,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 454],"float32"), size=tuple(274,485,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 454],"float32"), size=tuple(275,487,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 454],"float32"), size=tuple(276,489,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 454],"float32"), size=tuple(277,491,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 454],"float32"), size=tuple(278,493,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 454],"float32"), size=tuple(279,494,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 454],"float32"), size=tuple(280,496,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 454],"float32"), size=tuple(281,498,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 454],"float32"), size=tuple(282,500,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 454],"float32"), size=tuple(283,501,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 454],"float32"), size=tuple(284,503,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 454],"float32"), size=tuple(285,505,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 454],"float32"), size=tuple(286,507,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 454],"float32"), size=tuple(287,508,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 454],"float32"), size=tuple(288,510,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 454],"float32"), size=tuple(289,512,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 454],"float32"), size=tuple(290,514,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 454],"float32"), size=tuple(291,516,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 454],"float32"), size=tuple(292,517,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 454],"float32"), size=tuple(293,519,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 454],"float32"), size=tuple(294,521,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 454],"float32"), size=tuple(295,523,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 454],"float32"), size=tuple(296,524,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 454],"float32"), size=tuple(297,526,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 454],"float32"), size=tuple(298,528,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 454],"float32"), size=tuple(299,530,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 454],"float32"), size=tuple(300,532,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 454],"float32"), size=tuple(301,533,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 454],"float32"), size=tuple(302,535,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 454],"float32"), size=tuple(303,537,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 454],"float32"), size=tuple(304,539,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 454],"float32"), size=tuple(305,540,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 454],"float32"), size=tuple(306,542,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 454],"float32"), size=tuple(307,544,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 454],"float32"), size=tuple(308,546,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 454],"float32"), size=tuple(309,547,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 454],"float32"), size=tuple(310,549,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 454],"float32"), size=tuple(311,551,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 454],"float32"), size=tuple(312,553,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 454],"float32"), size=tuple(313,555,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 454],"float32"), size=tuple(314,556,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 454],"float32"), size=tuple(315,558,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 454],"float32"), size=tuple(316,560,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 454],"float32"), size=tuple(317,562,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 454],"float32"), size=tuple(318,563,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 454],"float32"), size=tuple(319,565,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 256, 454],"float32"), size=tuple(320,567,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 0, 686, 1024],"float32"), tuple(429,640,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 1, 0, 1024],"float32"), tuple(429,640,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 1, 0, 256],"float32"), tuple(1024,1024,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 1, 256, 0],"float32"), tuple(1024,1024,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 1, 686, 0],"float32"), tuple(429,640,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 192],"float32"), size=tuple(341,256,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 192],"float32"), size=tuple(342,257,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 192],"float32"), size=tuple(344,258,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 192],"float32"), size=tuple(345,259,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 192],"float32"), size=tuple(346,260,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 192],"float32"), size=tuple(348,261,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 192],"float32"), size=tuple(349,262,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 192],"float32"), size=tuple(350,263,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 192],"float32"), size=tuple(352,264,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 192],"float32"), size=tuple(353,265,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 192],"float32"), size=tuple(354,266,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 192],"float32"), size=tuple(356,267,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 192],"float32"), size=tuple(357,268,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 192],"float32"), size=tuple(358,269,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 192],"float32"), size=tuple(360,270,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 192],"float32"), size=tuple(361,271,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 192],"float32"), size=tuple(362,272,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 192],"float32"), size=tuple(364,273,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 192],"float32"), size=tuple(365,274,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 192],"float32"), size=tuple(366,275,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 192],"float32"), size=tuple(368,276,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 192],"float32"), size=tuple(369,277,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 192],"float32"), size=tuple(370,278,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 192],"float32"), size=tuple(372,279,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 192],"float32"), size=tuple(373,280,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 192],"float32"), size=tuple(374,281,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 192],"float32"), size=tuple(376,282,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 192],"float32"), size=tuple(377,283,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 192],"float32"), size=tuple(378,284,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 192],"float32"), size=tuple(380,285,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 192],"float32"), size=tuple(381,286,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 192],"float32"), size=tuple(382,287,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 192],"float32"), size=tuple(384,288,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 192],"float32"), size=tuple(385,289,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 192],"float32"), size=tuple(386,290,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 192],"float32"), size=tuple(388,291,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 192],"float32"), size=tuple(389,292,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 192],"float32"), size=tuple(390,293,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 192],"float32"), size=tuple(392,294,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 192],"float32"), size=tuple(393,295,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 192],"float32"), size=tuple(394,296,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 192],"float32"), size=tuple(396,297,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 192],"float32"), size=tuple(397,298,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 192],"float32"), size=tuple(398,299,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 192],"float32"), size=tuple(400,300,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 192],"float32"), size=tuple(401,301,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 192],"float32"), size=tuple(402,302,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 192],"float32"), size=tuple(404,303,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 192],"float32"), size=tuple(405,304,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 192],"float32"), size=tuple(406,305,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 192],"float32"), size=tuple(408,306,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 192],"float32"), size=tuple(409,307,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 192],"float32"), size=tuple(410,308,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 192],"float32"), size=tuple(412,309,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 192],"float32"), size=tuple(413,310,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 192],"float32"), size=tuple(414,311,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 192],"float32"), size=tuple(416,312,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 192],"float32"), size=tuple(417,313,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 192],"float32"), size=tuple(418,314,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 192],"float32"), size=tuple(420,315,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 192],"float32"), size=tuple(421,316,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 192],"float32"), size=tuple(422,317,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 192],"float32"), size=tuple(424,318,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 192],"float32"), size=tuple(425,319,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 192],"float32"), size=tuple(426,320,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 314],"float32"), size=tuple(257,315,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 314],"float32"), size=tuple(258,316,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 314],"float32"), size=tuple(259,317,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 314],"float32"), size=tuple(260,318,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 314],"float32"), size=tuple(261,320,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 314],"float32"), size=tuple(262,321,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 314],"float32"), size=tuple(263,322,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 314],"float32"), size=tuple(264,323,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 314],"float32"), size=tuple(265,325,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 314],"float32"), size=tuple(266,326,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 314],"float32"), size=tuple(267,327,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 314],"float32"), size=tuple(268,328,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 314],"float32"), size=tuple(269,329,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 314],"float32"), size=tuple(270,331,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 314],"float32"), size=tuple(271,332,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 314],"float32"), size=tuple(272,333,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 314],"float32"), size=tuple(273,334,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 314],"float32"), size=tuple(274,336,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 314],"float32"), size=tuple(275,337,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 314],"float32"), size=tuple(276,338,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 314],"float32"), size=tuple(277,339,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 314],"float32"), size=tuple(278,340,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 314],"float32"), size=tuple(279,342,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 314],"float32"), size=tuple(280,343,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 314],"float32"), size=tuple(281,344,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 314],"float32"), size=tuple(282,345,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 314],"float32"), size=tuple(283,347,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 314],"float32"), size=tuple(284,348,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 314],"float32"), size=tuple(285,349,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 314],"float32"), size=tuple(286,350,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 314],"float32"), size=tuple(287,352,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 314],"float32"), size=tuple(288,353,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 314],"float32"), size=tuple(289,354,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 314],"float32"), size=tuple(290,355,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 314],"float32"), size=tuple(291,356,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 314],"float32"), size=tuple(292,358,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 314],"float32"), size=tuple(293,359,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 314],"float32"), size=tuple(294,360,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 314],"float32"), size=tuple(295,361,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 314],"float32"), size=tuple(296,363,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 314],"float32"), size=tuple(297,364,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 314],"float32"), size=tuple(298,365,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 314],"float32"), size=tuple(299,366,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 314],"float32"), size=tuple(300,367,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 314],"float32"), size=tuple(301,369,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 314],"float32"), size=tuple(302,370,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 314],"float32"), size=tuple(303,371,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 314],"float32"), size=tuple(304,372,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 314],"float32"), size=tuple(305,374,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 314],"float32"), size=tuple(306,375,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 314],"float32"), size=tuple(307,376,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 314],"float32"), size=tuple(308,377,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 314],"float32"), size=tuple(309,379,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 314],"float32"), size=tuple(310,380,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 314],"float32"), size=tuple(311,381,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 314],"float32"), size=tuple(312,382,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 314],"float32"), size=tuple(313,383,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 314],"float32"), size=tuple(314,385,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 314],"float32"), size=tuple(315,386,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 314],"float32"), size=tuple(316,387,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 314],"float32"), size=tuple(317,388,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 314],"float32"), size=tuple(318,390,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 314],"float32"), size=tuple(319,391,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 314],"float32"), size=tuple(320,392,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 340],"float32"), size=tuple(257,341,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 340],"float32"), size=tuple(258,342,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 340],"float32"), size=tuple(259,343,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 340],"float32"), size=tuple(260,345,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 340],"float32"), size=tuple(261,346,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 340],"float32"), size=tuple(262,347,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 340],"float32"), size=tuple(263,349,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 340],"float32"), size=tuple(264,350,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 340],"float32"), size=tuple(265,351,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 340],"float32"), size=tuple(266,353,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 340],"float32"), size=tuple(267,354,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 340],"float32"), size=tuple(268,355,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 340],"float32"), size=tuple(269,357,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 340],"float32"), size=tuple(270,358,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 340],"float32"), size=tuple(271,359,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 340],"float32"), size=tuple(272,361,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 340],"float32"), size=tuple(273,362,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 340],"float32"), size=tuple(274,363,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 340],"float32"), size=tuple(275,365,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 340],"float32"), size=tuple(276,366,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 340],"float32"), size=tuple(277,367,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 340],"float32"), size=tuple(278,369,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 340],"float32"), size=tuple(279,370,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 340],"float32"), size=tuple(280,371,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 340],"float32"), size=tuple(281,373,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 340],"float32"), size=tuple(282,374,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 340],"float32"), size=tuple(283,375,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 340],"float32"), size=tuple(284,377,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 340],"float32"), size=tuple(285,378,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 340],"float32"), size=tuple(286,379,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 340],"float32"), size=tuple(287,381,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 340],"float32"), size=tuple(288,382,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 340],"float32"), size=tuple(289,383,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 340],"float32"), size=tuple(290,385,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 340],"float32"), size=tuple(291,386,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 340],"float32"), size=tuple(292,387,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 340],"float32"), size=tuple(293,389,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 340],"float32"), size=tuple(294,390,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 340],"float32"), size=tuple(295,391,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 340],"float32"), size=tuple(296,393,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 340],"float32"), size=tuple(297,394,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 340],"float32"), size=tuple(298,395,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 340],"float32"), size=tuple(299,397,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 340],"float32"), size=tuple(300,398,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 340],"float32"), size=tuple(301,399,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 340],"float32"), size=tuple(302,401,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 340],"float32"), size=tuple(303,402,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 340],"float32"), size=tuple(304,403,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 340],"float32"), size=tuple(305,405,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 340],"float32"), size=tuple(306,406,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 340],"float32"), size=tuple(307,407,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 340],"float32"), size=tuple(308,409,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 340],"float32"), size=tuple(309,410,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 340],"float32"), size=tuple(310,411,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 340],"float32"), size=tuple(311,413,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 340],"float32"), size=tuple(312,414,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 340],"float32"), size=tuple(313,415,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 340],"float32"), size=tuple(314,417,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 340],"float32"), size=tuple(315,418,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 340],"float32"), size=tuple(316,419,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 340],"float32"), size=tuple(317,421,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 340],"float32"), size=tuple(318,422,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 340],"float32"), size=tuple(319,423,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 340],"float32"), size=tuple(320,425,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 372],"float32"), size=tuple(257,373,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 372],"float32"), size=tuple(258,374,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 372],"float32"), size=tuple(259,376,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 372],"float32"), size=tuple(260,377,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 372],"float32"), size=tuple(261,379,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 372],"float32"), size=tuple(262,380,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 372],"float32"), size=tuple(263,382,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 372],"float32"), size=tuple(264,383,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 372],"float32"), size=tuple(265,385,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 372],"float32"), size=tuple(266,386,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 372],"float32"), size=tuple(267,387,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 372],"float32"), size=tuple(268,389,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 372],"float32"), size=tuple(269,390,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 372],"float32"), size=tuple(270,392,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 372],"float32"), size=tuple(271,393,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 372],"float32"), size=tuple(272,395,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 372],"float32"), size=tuple(273,396,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 372],"float32"), size=tuple(274,398,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 372],"float32"), size=tuple(275,399,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 372],"float32"), size=tuple(276,401,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 372],"float32"), size=tuple(277,402,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 372],"float32"), size=tuple(278,403,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 372],"float32"), size=tuple(279,405,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 372],"float32"), size=tuple(280,406,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 372],"float32"), size=tuple(281,408,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 372],"float32"), size=tuple(282,409,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 372],"float32"), size=tuple(283,411,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 372],"float32"), size=tuple(284,412,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 372],"float32"), size=tuple(285,414,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 372],"float32"), size=tuple(286,415,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 372],"float32"), size=tuple(287,417,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 372],"float32"), size=tuple(288,418,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 372],"float32"), size=tuple(289,419,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 372],"float32"), size=tuple(290,421,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 372],"float32"), size=tuple(291,422,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 372],"float32"), size=tuple(292,424,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 372],"float32"), size=tuple(293,425,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 372],"float32"), size=tuple(294,427,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 372],"float32"), size=tuple(295,428,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 372],"float32"), size=tuple(296,430,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 372],"float32"), size=tuple(297,431,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 372],"float32"), size=tuple(298,433,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 372],"float32"), size=tuple(299,434,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 372],"float32"), size=tuple(300,435,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 372],"float32"), size=tuple(301,437,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 372],"float32"), size=tuple(302,438,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 372],"float32"), size=tuple(303,440,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 372],"float32"), size=tuple(304,441,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 372],"float32"), size=tuple(305,443,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 372],"float32"), size=tuple(306,444,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 372],"float32"), size=tuple(307,446,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 372],"float32"), size=tuple(308,447,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 372],"float32"), size=tuple(309,449,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 372],"float32"), size=tuple(310,450,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 372],"float32"), size=tuple(311,451,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 372],"float32"), size=tuple(312,453,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 372],"float32"), size=tuple(313,454,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 372],"float32"), size=tuple(314,456,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 372],"float32"), size=tuple(315,457,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 372],"float32"), size=tuple(316,459,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 372],"float32"), size=tuple(317,460,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 372],"float32"), size=tuple(318,462,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 372],"float32"), size=tuple(319,463,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 372],"float32"), size=tuple(320,465,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 384],"float32"), size=tuple(257,385,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 384],"float32"), size=tuple(258,387,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 384],"float32"), size=tuple(259,388,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 384],"float32"), size=tuple(260,390,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 384],"float32"), size=tuple(261,391,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 384],"float32"), size=tuple(262,393,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 384],"float32"), size=tuple(263,394,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 384],"float32"), size=tuple(264,396,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 384],"float32"), size=tuple(265,397,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 384],"float32"), size=tuple(266,399,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 384],"float32"), size=tuple(267,400,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 384],"float32"), size=tuple(268,402,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 384],"float32"), size=tuple(269,403,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 384],"float32"), size=tuple(270,405,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 384],"float32"), size=tuple(271,406,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 384],"float32"), size=tuple(272,408,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 384],"float32"), size=tuple(273,409,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 384],"float32"), size=tuple(274,411,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 384],"float32"), size=tuple(275,412,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 384],"float32"), size=tuple(276,414,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 384],"float32"), size=tuple(277,415,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 384],"float32"), size=tuple(278,417,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 384],"float32"), size=tuple(279,418,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 384],"float32"), size=tuple(280,420,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 384],"float32"), size=tuple(281,421,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 384],"float32"), size=tuple(282,423,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 384],"float32"), size=tuple(283,424,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 384],"float32"), size=tuple(284,426,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 384],"float32"), size=tuple(285,427,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 384],"float32"), size=tuple(286,429,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 384],"float32"), size=tuple(287,430,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 384],"float32"), size=tuple(288,432,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 384],"float32"), size=tuple(289,433,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 384],"float32"), size=tuple(290,435,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 384],"float32"), size=tuple(291,436,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 384],"float32"), size=tuple(292,438,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 384],"float32"), size=tuple(293,439,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 384],"float32"), size=tuple(294,441,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 384],"float32"), size=tuple(295,442,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 384],"float32"), size=tuple(296,444,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 384],"float32"), size=tuple(297,445,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 384],"float32"), size=tuple(298,447,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 384],"float32"), size=tuple(299,448,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 384],"float32"), size=tuple(300,450,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 384],"float32"), size=tuple(301,451,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 384],"float32"), size=tuple(302,453,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 384],"float32"), size=tuple(303,454,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 384],"float32"), size=tuple(304,456,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 384],"float32"), size=tuple(305,457,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 384],"float32"), size=tuple(306,459,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 384],"float32"), size=tuple(307,460,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 384],"float32"), size=tuple(308,462,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 384],"float32"), size=tuple(309,463,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 384],"float32"), size=tuple(310,465,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 384],"float32"), size=tuple(311,466,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 384],"float32"), size=tuple(312,468,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 384],"float32"), size=tuple(313,469,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 384],"float32"), size=tuple(314,471,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 384],"float32"), size=tuple(315,472,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 384],"float32"), size=tuple(316,474,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 384],"float32"), size=tuple(317,475,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 384],"float32"), size=tuple(318,477,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 384],"float32"), size=tuple(319,478,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 384],"float32"), size=tuple(320,480,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 454],"float32"), size=tuple(257,455,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 454],"float32"), size=tuple(258,457,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 454],"float32"), size=tuple(259,459,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 454],"float32"), size=tuple(260,461,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 454],"float32"), size=tuple(261,462,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 454],"float32"), size=tuple(262,464,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 454],"float32"), size=tuple(263,466,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 454],"float32"), size=tuple(264,468,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 454],"float32"), size=tuple(265,469,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 454],"float32"), size=tuple(266,471,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 454],"float32"), size=tuple(267,473,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 454],"float32"), size=tuple(268,475,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 454],"float32"), size=tuple(269,477,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 454],"float32"), size=tuple(270,478,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 454],"float32"), size=tuple(271,480,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 454],"float32"), size=tuple(272,482,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 454],"float32"), size=tuple(273,484,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 454],"float32"), size=tuple(274,485,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 454],"float32"), size=tuple(275,487,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 454],"float32"), size=tuple(276,489,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 454],"float32"), size=tuple(277,491,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 454],"float32"), size=tuple(278,493,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 454],"float32"), size=tuple(279,494,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 454],"float32"), size=tuple(280,496,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 454],"float32"), size=tuple(281,498,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 454],"float32"), size=tuple(282,500,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 454],"float32"), size=tuple(283,501,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 454],"float32"), size=tuple(284,503,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 454],"float32"), size=tuple(285,505,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 454],"float32"), size=tuple(286,507,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 454],"float32"), size=tuple(287,508,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 454],"float32"), size=tuple(288,510,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 454],"float32"), size=tuple(289,512,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 454],"float32"), size=tuple(290,514,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 454],"float32"), size=tuple(291,516,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 454],"float32"), size=tuple(292,517,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 454],"float32"), size=tuple(293,519,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 454],"float32"), size=tuple(294,521,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 454],"float32"), size=tuple(295,523,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 454],"float32"), size=tuple(296,524,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 454],"float32"), size=tuple(297,526,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 454],"float32"), size=tuple(298,528,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 454],"float32"), size=tuple(299,530,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 454],"float32"), size=tuple(300,532,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 454],"float32"), size=tuple(301,533,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 454],"float32"), size=tuple(302,535,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 454],"float32"), size=tuple(303,537,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 454],"float32"), size=tuple(304,539,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 454],"float32"), size=tuple(305,540,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 454],"float32"), size=tuple(306,542,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 454],"float32"), size=tuple(307,544,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 454],"float32"), size=tuple(308,546,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 454],"float32"), size=tuple(309,547,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 454],"float32"), size=tuple(310,549,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 454],"float32"), size=tuple(311,551,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 454],"float32"), size=tuple(312,553,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 454],"float32"), size=tuple(313,555,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 454],"float32"), size=tuple(314,556,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 454],"float32"), size=tuple(315,558,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 454],"float32"), size=tuple(316,560,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 454],"float32"), size=tuple(317,562,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 454],"float32"), size=tuple(318,563,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 454],"float32"), size=tuple(319,565,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 0, 454],"float32"), size=tuple(320,567,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(257,315,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(257,341,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(257,373,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(257,385,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(257,455,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(258,316,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(258,342,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(258,374,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(258,387,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(258,457,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(259,317,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(259,343,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(259,376,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(259,388,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(259,459,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(260,318,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(260,345,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(260,377,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(260,390,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(260,461,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(261,320,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(261,346,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(261,379,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(261,391,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(261,462,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(262,321,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(262,347,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(262,380,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(262,393,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(262,464,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(263,322,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(263,349,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(263,382,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(263,394,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(263,466,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(264,323,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(264,350,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(264,383,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(264,396,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(264,468,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(265,325,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(265,351,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(265,385,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(265,397,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(265,469,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(266,326,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(266,353,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(266,386,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(266,399,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(266,471,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(267,327,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(267,354,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(267,387,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(267,400,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(267,473,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(268,328,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(268,355,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(268,389,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(268,402,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(268,475,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(269,329,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(269,357,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(269,390,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(269,403,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(269,477,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(270,331,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(270,358,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(270,392,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(270,405,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(270,478,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(271,332,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(271,359,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(271,393,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(271,406,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(271,480,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(272,333,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(272,361,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(272,395,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(272,408,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(272,482,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(273,334,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(273,362,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(273,396,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(273,409,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(273,484,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(274,336,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(274,363,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(274,398,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(274,411,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(274,485,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(275,337,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(275,365,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(275,399,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(275,412,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(275,487,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(276,338,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(276,366,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(276,401,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(276,414,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(276,489,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(277,339,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(277,367,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(277,402,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(277,415,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(277,491,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(278,340,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(278,369,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(278,403,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(278,417,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(278,493,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(279,342,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(279,370,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(279,405,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(279,418,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(279,494,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(280,343,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(280,371,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(280,406,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(280,420,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(280,496,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(281,344,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(281,373,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(281,408,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(281,421,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(281,498,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(282,345,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(282,374,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(282,409,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(282,423,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(282,500,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(283,347,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(283,375,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(283,411,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(283,424,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(283,501,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(284,348,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(284,377,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(284,412,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(284,426,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(284,503,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(285,349,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(285,378,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(285,414,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(285,427,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(285,505,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(286,350,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(286,379,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(286,415,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(286,429,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(286,507,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(287,352,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(287,381,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(287,417,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(287,430,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(287,508,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(288,353,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(288,382,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(288,418,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(288,432,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(288,510,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(289,354,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(289,383,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(289,419,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(289,433,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(289,512,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(290,355,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(290,385,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(290,421,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(290,435,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(290,514,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(291,356,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(291,386,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(291,422,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(291,436,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(291,516,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(292,358,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(292,387,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(292,424,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(292,438,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(292,517,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(293,359,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(293,389,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(293,425,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(293,439,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(293,519,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(294,360,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(294,390,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(294,427,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(294,441,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(294,521,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(295,361,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(295,391,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(295,428,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(295,442,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(295,523,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(296,363,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(296,393,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(296,430,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(296,444,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(296,524,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(297,364,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(297,394,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(297,431,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(297,445,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(297,526,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(298,365,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(298,395,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(298,433,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(298,447,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(298,528,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(299,366,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(299,397,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(299,434,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(299,448,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(299,530,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(300,367,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(300,398,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(300,435,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(300,450,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(300,532,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(301,369,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(301,399,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(301,437,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(301,451,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(301,533,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(302,370,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(302,401,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(302,438,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(302,453,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(302,535,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(303,371,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(303,402,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(303,440,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(303,454,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(303,537,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(304,372,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(304,403,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(304,441,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(304,456,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(304,539,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(305,374,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(305,405,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(305,443,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(305,457,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(305,540,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(306,375,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(306,406,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(306,444,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(306,459,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(306,542,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(307,376,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(307,407,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(307,446,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(307,460,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(307,544,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(308,377,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(308,409,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(308,447,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(308,462,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(308,546,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(309,379,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(309,410,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(309,449,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(309,463,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(309,547,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(310,380,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(310,411,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(310,450,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(310,465,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(310,549,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(311,381,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(311,413,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(311,451,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(311,466,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(311,551,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(312,382,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(312,414,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(312,453,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(312,468,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(312,553,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(313,383,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(313,415,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(313,454,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(313,469,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(313,555,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(314,385,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(314,417,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(314,456,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(314,471,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(314,556,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(315,386,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(315,418,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(315,457,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(315,472,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(315,558,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(316,387,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(316,419,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(316,459,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(316,474,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(316,560,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(317,388,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(317,421,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(317,460,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(317,475,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(317,562,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(318,390,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(318,422,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(318,462,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(318,477,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(318,563,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(319,391,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(319,423,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(319,463,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(319,478,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(319,565,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(320,392,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(320,425,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(320,465,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(320,480,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(320,567,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(341,256,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(342,257,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(344,258,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(345,259,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(346,260,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(348,261,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(349,262,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(350,263,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(352,264,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(353,265,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(354,266,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(356,267,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(357,268,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(358,269,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(360,270,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(361,271,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(362,272,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(364,273,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(365,274,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(366,275,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(368,276,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(369,277,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(370,278,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(372,279,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(373,280,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(374,281,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(376,282,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(377,283,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(378,284,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(380,285,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(381,286,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(382,287,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(384,288,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(385,289,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(386,290,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(388,291,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(389,292,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(390,293,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(392,294,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(393,295,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(394,296,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(396,297,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(397,298,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(398,299,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(400,300,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(401,301,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(402,302,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(404,303,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(405,304,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(406,305,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(408,306,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(409,307,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(410,308,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(412,309,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(413,310,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(414,311,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(416,312,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(417,313,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(418,314,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(420,315,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(421,316,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(422,317,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(424,318,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(425,319,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([3, 8, 256, 0],"float32"), size=tuple(426,320,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([4, 0, 128, 128],"float16"), list[256,256,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([4, 0, 13, 17],"float16"), size=list[25,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 0, 13, 17],"float16"), size=list[26,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 0, 13, 18],"float16"), size=list[25,35,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 0, 13, 18],"float16"), size=list[25,36,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 0, 13, 18],"float32"), size=list[25,35,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 0, 13, 18],"float32"), size=list[25,36,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 0, 13, 19],"float16"), size=list[25,37,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 0, 13, 19],"float16"), size=list[25,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 0, 13, 19],"float16"), size=list[26,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 0, 13, 19],"float32"), size=list[25,37,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 0, 13, 19],"float32"), size=list[26,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 0, 13, 20],"float16"), size=list[25,39,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 0, 13, 20],"float16"), size=list[25,40,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 0, 13, 20],"float32"), size=list[25,40,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 0, 13, 21],"float16"), size=list[25,41,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 0, 13, 21],"float16"), size=list[25,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 0, 13, 21],"float16"), size=list[26,41,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 0, 13, 21],"float16"), size=list[26,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 0, 13, 21],"float32"), size=list[25,41,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 0, 13, 21],"float32"), size=list[25,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 0, 13, 21],"float32"), size=list[26,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 0, 14, 19],"float16"), size=list[27,37,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 0, 14, 19],"float16"), size=list[27,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 0, 14, 19],"float16"), size=list[28,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 0, 14, 19],"float32"), size=list[27,37,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 0, 14, 19],"float32"), size=list[27,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 0, 14, 20],"float16"), size=list[27,39,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 0, 15, 19],"float16"), size=list[29,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 0, 15, 19],"float16"), size=list[30,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 0, 15, 19],"float32"), size=list[29,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 0, 15, 19],"float32"), size=list[30,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 0, 15, 20],"float16"), size=list[29,40,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 0, 15, 20],"float32"), size=list[29,40,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 0, 16, 16],"float16"), size=tuple(32,32,), mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([4, 0, 16, 16],"float32"), size=tuple(32,32,), mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([4, 0, 16, 17],"float16"), size=list[31,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 0, 16, 17],"float16"), size=list[32,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 0, 16, 17],"float32"), size=list[31,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 0, 16, 17],"float32"), size=list[32,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 0, 16, 19],"float16"), size=list[31,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 0, 16, 19],"float16"), size=list[32,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 0, 16, 19],"float32"), size=list[31,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 0, 16, 19],"float32"), size=list[32,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 0, 16, 21],"float16"), size=list[31,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 0, 16, 21],"float16"), size=list[32,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 0, 16, 21],"float32"), size=list[31,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 0, 16, 21],"float32"), size=list[32,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 0, 16, 32],"float16"), list[16,32,], mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([4, 0, 16, 32],"float16"), list[32,64,], mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([4, 0, 17, 13],"float16"), size=list[34,25,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 0, 17, 13],"float32"), size=list[34,25,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 0, 17, 14],"float16"), size=list[34,27,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 0, 17, 14],"float32"), size=list[34,27,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 0, 17, 17],"float16"), size=list[34,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 0, 17, 17],"float32"), size=list[34,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 0, 17, 18],"float16"), size=list[33,36,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 0, 17, 18],"float16"), size=list[34,35,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 0, 17, 18],"float32"), size=list[34,35,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 0, 17, 19],"float16"), size=list[33,37,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 0, 17, 19],"float16"), size=list[33,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 0, 17, 19],"float16"), size=list[34,37,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 0, 17, 19],"float16"), size=list[34,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 0, 17, 19],"float32"), size=list[33,37,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 0, 17, 19],"float32"), size=list[34,37,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 0, 17, 19],"float32"), size=list[34,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 0, 17, 20],"float16"), size=list[33,40,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 0, 17, 20],"float16"), size=list[34,39,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 0, 17, 20],"float16"), size=list[34,40,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 0, 17, 20],"float32"), size=list[33,40,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 0, 17, 20],"float32"), size=list[34,39,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 0, 17, 20],"float32"), size=list[34,40,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 0, 17, 21],"float16"), size=list[33,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 0, 17, 21],"float16"), size=list[34,41,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 0, 17, 21],"float16"), size=list[34,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 0, 17, 21],"float32"), size=list[33,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 0, 17, 21],"float32"), size=list[34,41,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 0, 17, 21],"float32"), size=list[34,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 0, 18, 17],"float16"), size=list[35,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 0, 18, 17],"float16"), size=list[36,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 0, 18, 17],"float32"), size=list[35,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 0, 18, 17],"float32"), size=list[36,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 0, 18, 18],"float16"), size=list[35,35,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 0, 18, 18],"float32"), size=list[35,35,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 0, 18, 19],"float16"), size=list[35,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 0, 18, 19],"float16"), size=list[36,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 0, 18, 19],"float32"), size=list[35,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 0, 18, 19],"float32"), size=list[36,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 0, 18, 20],"float16"), size=list[35,39,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 0, 18, 20],"float32"), size=list[35,39,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 0, 18, 21],"float16"), size=list[35,41,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 0, 18, 21],"float16"), size=list[35,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 0, 18, 21],"float16"), size=list[36,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 0, 18, 21],"float32"), size=list[35,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 0, 18, 21],"float32"), size=list[36,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 0, 19, 13],"float16"), size=list[38,25,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 0, 19, 14],"float16"), size=list[38,27,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 0, 19, 17],"float16"), size=list[37,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 0, 19, 17],"float16"), size=list[38,33,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 0, 19, 17],"float16"), size=list[38,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 0, 19, 17],"float32"), size=list[37,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 0, 19, 17],"float32"), size=list[38,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 0, 19, 18],"float16"), size=list[38,35,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 0, 19, 18],"float16"), size=list[38,36,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 0, 19, 18],"float32"), size=list[38,35,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 0, 19, 18],"float32"), size=list[38,36,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 0, 19, 19],"float16"), size=list[37,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 0, 19, 19],"float16"), size=list[38,37,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 0, 19, 19],"float16"), size=list[38,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 0, 19, 19],"float32"), size=list[37,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 0, 19, 19],"float32"), size=list[38,37,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 0, 19, 19],"float32"), size=list[38,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 0, 19, 20],"float16"), size=list[38,39,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 0, 19, 20],"float16"), size=list[38,40,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 0, 19, 20],"float32"), size=list[38,39,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 0, 19, 20],"float32"), size=list[38,40,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 0, 19, 21],"float16"), size=list[37,41,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 0, 19, 21],"float16"), size=list[37,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 0, 19, 21],"float16"), size=list[38,41,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 0, 19, 21],"float16"), size=list[38,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 0, 19, 21],"float32"), size=list[37,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 0, 19, 21],"float32"), size=list[38,41,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 0, 19, 21],"float32"), size=list[38,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 0, 20, 17],"float16"), size=list[39,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 0, 20, 17],"float16"), size=list[40,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 0, 20, 17],"float32"), size=list[39,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 0, 20, 17],"float32"), size=list[40,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 0, 20, 19],"float16"), size=list[39,37,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 0, 20, 19],"float16"), size=list[39,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 0, 20, 19],"float16"), size=list[40,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 0, 20, 19],"float32"), size=list[39,37,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 0, 20, 19],"float32"), size=list[39,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 0, 20, 19],"float32"), size=list[40,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 0, 20, 20],"float64"), size=list[10,10,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([4, 0, 20, 21],"float16"), size=list[39,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 0, 20, 21],"float32"), size=list[39,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 0, 21, 13],"float16"), size=list[41,25,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 0, 21, 13],"float16"), size=list[42,25,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 0, 21, 13],"float32"), size=list[42,25,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 0, 21, 17],"float16"), size=list[41,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 0, 21, 17],"float16"), size=list[42,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 0, 21, 17],"float32"), size=list[42,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 0, 21, 18],"float16"), size=list[42,35,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 0, 21, 19],"float16"), size=list[41,37,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 0, 21, 19],"float16"), size=list[41,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 0, 21, 19],"float16"), size=list[42,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 0, 21, 19],"float32"), size=list[41,37,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 0, 21, 19],"float32"), size=list[41,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 0, 21, 19],"float32"), size=list[42,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 0, 21, 20],"float16"), size=list[42,39,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 0, 21, 20],"float16"), size=list[42,40,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 0, 21, 20],"float32"), size=list[42,39,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 0, 21, 21],"float16"), size=list[42,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 0, 21, 21],"float32"), size=list[42,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 0, 32, 32],"float16"), list[128,128,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([4, 0, 32, 32],"float16"), size=list[64,64,], mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([4, 0, 32, 32],"float32"), size=list[64,64,], mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([4, 0, 32, 64],"float16"), list[64,128,], mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([4, 0, 320, 320],"float16"), size=None, scale_factor=2, mode="nearest", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([4, 0, 320, 320],"float32"), size=None, scale_factor=2, mode="nearest", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([4, 0, 6, 7],"float32"), size=list[10,10,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([4, 0, 6, 7],"float64"), size=list[10,10,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([4, 0, 6, 7],"float64"), size=list[100,50,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([4, 0, 6, 7],"float64"), size=None, scale_factor=list[1.2,3.3,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([4, 0, 64, 64],"float16"), list[512,512,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([4, 0, 64, 64],"float32"), size=None, scale_factor=4, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([4, 0, 8, 8],"float16"), size=tuple(16,16,), mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([4, 0, 8, 8],"float32"), size=tuple(16,16,), mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([4, 128, 0, 128],"float16"), list[256,256,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([4, 128, 0, 16],"float16"), size=tuple(32,32,), mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([4, 128, 0, 16],"float32"), size=tuple(32,32,), mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([4, 128, 0, 32],"float16"), list[128,128,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([4, 128, 0, 32],"float16"), list[16,32,], mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([4, 128, 0, 32],"float16"), list[32,64,], mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([4, 128, 0, 32],"float16"), size=list[64,64,], mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([4, 128, 0, 32],"float32"), size=list[64,64,], mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([4, 128, 128, 0],"float16"), list[256,256,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([4, 128, 16, 0],"float16"), list[16,32,], mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([4, 128, 16, 0],"float16"), list[32,64,], mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([4, 128, 16, 0],"float16"), size=tuple(32,32,), mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([4, 128, 16, 0],"float32"), size=tuple(32,32,), mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([4, 128, 32, 0],"float16"), list[128,128,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([4, 128, 32, 0],"float16"), size=list[64,64,], mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([4, 128, 32, 0],"float32"), size=list[64,64,], mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([4, 150, 0, 64],"float16"), list[512,512,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([4, 150, 64, 0],"float16"), list[512,512,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([4, 192, 0, 8],"float16"), size=tuple(16,16,), mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([4, 192, 0, 8],"float32"), size=tuple(16,16,), mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([4, 192, 8, 0],"float16"), size=tuple(16,16,), mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([4, 192, 8, 0],"float32"), size=tuple(16,16,), mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([4, 256, 0, 13],"float16"), size=list[34,25,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 0, 13],"float16"), size=list[38,25,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 0, 13],"float16"), size=list[41,25,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 0, 13],"float16"), size=list[42,25,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 0, 13],"float32"), size=list[34,25,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 0, 13],"float32"), size=list[42,25,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 0, 14],"float16"), size=list[34,27,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 0, 14],"float16"), size=list[38,27,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 0, 14],"float32"), size=list[34,27,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 0, 17],"float16"), size=list[25,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 0, 17],"float16"), size=list[26,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 0, 17],"float16"), size=list[31,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 0, 17],"float16"), size=list[32,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 0, 17],"float16"), size=list[34,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 0, 17],"float16"), size=list[35,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 0, 17],"float16"), size=list[36,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 0, 17],"float16"), size=list[37,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 0, 17],"float16"), size=list[38,33,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 0, 17],"float16"), size=list[38,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 0, 17],"float16"), size=list[39,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 0, 17],"float16"), size=list[40,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 0, 17],"float16"), size=list[41,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 0, 17],"float16"), size=list[42,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 0, 17],"float32"), size=list[31,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 0, 17],"float32"), size=list[32,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 0, 17],"float32"), size=list[34,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 0, 17],"float32"), size=list[35,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 0, 17],"float32"), size=list[36,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 0, 17],"float32"), size=list[37,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 0, 17],"float32"), size=list[38,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 0, 17],"float32"), size=list[39,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 0, 17],"float32"), size=list[40,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 0, 17],"float32"), size=list[42,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 0, 18],"float16"), size=list[25,35,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 0, 18],"float16"), size=list[25,36,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 0, 18],"float16"), size=list[33,36,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 0, 18],"float16"), size=list[34,35,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 0, 18],"float16"), size=list[35,35,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 0, 18],"float16"), size=list[38,35,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 0, 18],"float16"), size=list[38,36,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 0, 18],"float16"), size=list[42,35,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 0, 18],"float32"), size=list[25,35,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 0, 18],"float32"), size=list[25,36,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 0, 18],"float32"), size=list[34,35,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 0, 18],"float32"), size=list[35,35,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 0, 18],"float32"), size=list[38,35,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 0, 18],"float32"), size=list[38,36,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 0, 19],"float16"), size=list[25,37,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 0, 19],"float16"), size=list[25,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 0, 19],"float16"), size=list[26,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 0, 19],"float16"), size=list[27,37,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 0, 19],"float16"), size=list[27,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 0, 19],"float16"), size=list[28,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 0, 19],"float16"), size=list[29,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 0, 19],"float16"), size=list[30,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 0, 19],"float16"), size=list[31,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 0, 19],"float16"), size=list[32,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 0, 19],"float16"), size=list[33,37,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 0, 19],"float16"), size=list[33,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 0, 19],"float16"), size=list[34,37,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 0, 19],"float16"), size=list[34,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 0, 19],"float16"), size=list[35,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 0, 19],"float16"), size=list[36,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 0, 19],"float16"), size=list[37,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 0, 19],"float16"), size=list[38,37,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 0, 19],"float16"), size=list[38,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 0, 19],"float16"), size=list[39,37,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 0, 19],"float16"), size=list[39,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 0, 19],"float16"), size=list[40,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 0, 19],"float16"), size=list[41,37,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 0, 19],"float16"), size=list[41,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 0, 19],"float16"), size=list[42,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 0, 19],"float32"), size=list[25,37,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 0, 19],"float32"), size=list[26,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 0, 19],"float32"), size=list[27,37,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 0, 19],"float32"), size=list[27,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 0, 19],"float32"), size=list[29,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 0, 19],"float32"), size=list[30,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 0, 19],"float32"), size=list[31,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 0, 19],"float32"), size=list[32,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 0, 19],"float32"), size=list[33,37,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 0, 19],"float32"), size=list[34,37,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 0, 19],"float32"), size=list[34,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 0, 19],"float32"), size=list[35,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 0, 19],"float32"), size=list[36,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 0, 19],"float32"), size=list[37,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 0, 19],"float32"), size=list[38,37,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 0, 19],"float32"), size=list[38,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 0, 19],"float32"), size=list[39,37,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 0, 19],"float32"), size=list[39,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 0, 19],"float32"), size=list[40,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 0, 19],"float32"), size=list[41,37,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 0, 19],"float32"), size=list[41,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 0, 19],"float32"), size=list[42,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 0, 20],"float16"), size=list[25,39,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 0, 20],"float16"), size=list[25,40,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 0, 20],"float16"), size=list[27,39,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 0, 20],"float16"), size=list[29,40,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 0, 20],"float16"), size=list[33,40,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 0, 20],"float16"), size=list[34,39,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 0, 20],"float16"), size=list[34,40,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 0, 20],"float16"), size=list[35,39,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 0, 20],"float16"), size=list[38,39,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 0, 20],"float16"), size=list[38,40,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 0, 20],"float16"), size=list[42,39,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 0, 20],"float16"), size=list[42,40,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 0, 20],"float32"), size=list[25,40,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 0, 20],"float32"), size=list[29,40,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 0, 20],"float32"), size=list[33,40,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 0, 20],"float32"), size=list[34,39,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 0, 20],"float32"), size=list[34,40,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 0, 20],"float32"), size=list[35,39,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 0, 20],"float32"), size=list[38,39,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 0, 20],"float32"), size=list[38,40,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 0, 20],"float32"), size=list[42,39,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 0, 21],"float16"), size=list[25,41,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 0, 21],"float16"), size=list[25,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 0, 21],"float16"), size=list[26,41,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 0, 21],"float16"), size=list[26,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 0, 21],"float16"), size=list[31,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 0, 21],"float16"), size=list[32,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 0, 21],"float16"), size=list[33,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 0, 21],"float16"), size=list[34,41,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 0, 21],"float16"), size=list[34,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 0, 21],"float16"), size=list[35,41,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 0, 21],"float16"), size=list[35,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 0, 21],"float16"), size=list[36,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 0, 21],"float16"), size=list[37,41,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 0, 21],"float16"), size=list[37,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 0, 21],"float16"), size=list[38,41,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 0, 21],"float16"), size=list[38,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 0, 21],"float16"), size=list[39,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 0, 21],"float16"), size=list[42,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 0, 21],"float32"), size=list[25,41,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 0, 21],"float32"), size=list[25,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 0, 21],"float32"), size=list[26,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 0, 21],"float32"), size=list[31,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 0, 21],"float32"), size=list[32,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 0, 21],"float32"), size=list[33,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 0, 21],"float32"), size=list[34,41,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 0, 21],"float32"), size=list[34,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 0, 21],"float32"), size=list[35,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 0, 21],"float32"), size=list[36,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 0, 21],"float32"), size=list[37,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 0, 21],"float32"), size=list[38,41,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 0, 21],"float32"), size=list[38,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 0, 21],"float32"), size=list[39,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 0, 21],"float32"), size=list[42,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 13, 0],"float16"), size=list[25,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 13, 0],"float16"), size=list[25,35,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 13, 0],"float16"), size=list[25,36,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 13, 0],"float16"), size=list[25,37,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 13, 0],"float16"), size=list[25,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 13, 0],"float16"), size=list[25,39,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 13, 0],"float16"), size=list[25,40,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 13, 0],"float16"), size=list[25,41,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 13, 0],"float16"), size=list[25,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 13, 0],"float16"), size=list[26,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 13, 0],"float16"), size=list[26,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 13, 0],"float16"), size=list[26,41,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 13, 0],"float16"), size=list[26,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 13, 0],"float32"), size=list[25,35,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 13, 0],"float32"), size=list[25,36,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 13, 0],"float32"), size=list[25,37,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 13, 0],"float32"), size=list[25,40,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 13, 0],"float32"), size=list[25,41,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 13, 0],"float32"), size=list[25,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 13, 0],"float32"), size=list[26,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 13, 0],"float32"), size=list[26,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 14, 0],"float16"), size=list[27,37,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 14, 0],"float16"), size=list[27,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 14, 0],"float16"), size=list[27,39,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 14, 0],"float16"), size=list[28,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 14, 0],"float32"), size=list[27,37,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 14, 0],"float32"), size=list[27,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 15, 0],"float16"), size=list[29,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 15, 0],"float16"), size=list[29,40,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 15, 0],"float16"), size=list[30,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 15, 0],"float32"), size=list[29,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 15, 0],"float32"), size=list[29,40,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 15, 0],"float32"), size=list[30,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 16, 0],"float16"), size=list[31,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 16, 0],"float16"), size=list[31,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 16, 0],"float16"), size=list[31,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 16, 0],"float16"), size=list[32,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 16, 0],"float16"), size=list[32,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 16, 0],"float16"), size=list[32,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 16, 0],"float32"), size=list[31,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 16, 0],"float32"), size=list[31,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 16, 0],"float32"), size=list[31,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 16, 0],"float32"), size=list[32,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 16, 0],"float32"), size=list[32,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 16, 0],"float32"), size=list[32,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 17, 0],"float16"), size=list[33,36,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 17, 0],"float16"), size=list[33,37,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 17, 0],"float16"), size=list[33,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 17, 0],"float16"), size=list[33,40,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 17, 0],"float16"), size=list[33,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 17, 0],"float16"), size=list[34,25,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 17, 0],"float16"), size=list[34,27,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 17, 0],"float16"), size=list[34,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 17, 0],"float16"), size=list[34,35,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 17, 0],"float16"), size=list[34,37,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 17, 0],"float16"), size=list[34,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 17, 0],"float16"), size=list[34,39,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 17, 0],"float16"), size=list[34,40,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 17, 0],"float16"), size=list[34,41,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 17, 0],"float16"), size=list[34,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 17, 0],"float32"), size=list[33,37,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 17, 0],"float32"), size=list[33,40,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 17, 0],"float32"), size=list[33,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 17, 0],"float32"), size=list[34,25,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 17, 0],"float32"), size=list[34,27,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 17, 0],"float32"), size=list[34,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 17, 0],"float32"), size=list[34,35,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 17, 0],"float32"), size=list[34,37,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 17, 0],"float32"), size=list[34,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 17, 0],"float32"), size=list[34,39,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 17, 0],"float32"), size=list[34,40,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 17, 0],"float32"), size=list[34,41,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 17, 0],"float32"), size=list[34,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 18, 0],"float16"), size=list[35,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 18, 0],"float16"), size=list[35,35,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 18, 0],"float16"), size=list[35,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 18, 0],"float16"), size=list[35,39,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 18, 0],"float16"), size=list[35,41,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 18, 0],"float16"), size=list[35,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 18, 0],"float16"), size=list[36,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 18, 0],"float16"), size=list[36,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 18, 0],"float16"), size=list[36,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 18, 0],"float32"), size=list[35,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 18, 0],"float32"), size=list[35,35,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 18, 0],"float32"), size=list[35,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 18, 0],"float32"), size=list[35,39,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 18, 0],"float32"), size=list[35,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 18, 0],"float32"), size=list[36,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 18, 0],"float32"), size=list[36,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 18, 0],"float32"), size=list[36,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 19, 0],"float16"), size=list[37,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 19, 0],"float16"), size=list[37,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 19, 0],"float16"), size=list[37,41,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 19, 0],"float16"), size=list[37,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 19, 0],"float16"), size=list[38,25,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 19, 0],"float16"), size=list[38,27,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 19, 0],"float16"), size=list[38,33,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 19, 0],"float16"), size=list[38,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 19, 0],"float16"), size=list[38,35,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 19, 0],"float16"), size=list[38,36,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 19, 0],"float16"), size=list[38,37,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 19, 0],"float16"), size=list[38,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 19, 0],"float16"), size=list[38,39,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 19, 0],"float16"), size=list[38,40,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 19, 0],"float16"), size=list[38,41,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 19, 0],"float16"), size=list[38,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 19, 0],"float32"), size=list[37,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 19, 0],"float32"), size=list[37,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 19, 0],"float32"), size=list[37,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 19, 0],"float32"), size=list[38,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 19, 0],"float32"), size=list[38,35,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 19, 0],"float32"), size=list[38,36,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 19, 0],"float32"), size=list[38,37,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 19, 0],"float32"), size=list[38,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 19, 0],"float32"), size=list[38,39,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 19, 0],"float32"), size=list[38,40,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 19, 0],"float32"), size=list[38,41,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 19, 0],"float32"), size=list[38,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 20, 0],"float16"), size=list[39,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 20, 0],"float16"), size=list[39,37,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 20, 0],"float16"), size=list[39,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 20, 0],"float16"), size=list[39,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 20, 0],"float16"), size=list[40,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 20, 0],"float16"), size=list[40,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 20, 0],"float32"), size=list[39,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 20, 0],"float32"), size=list[39,37,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 20, 0],"float32"), size=list[39,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 20, 0],"float32"), size=list[39,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 20, 0],"float32"), size=list[40,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 20, 0],"float32"), size=list[40,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 21, 0],"float16"), size=list[41,25,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 21, 0],"float16"), size=list[41,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 21, 0],"float16"), size=list[41,37,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 21, 0],"float16"), size=list[41,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 21, 0],"float16"), size=list[42,25,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 21, 0],"float16"), size=list[42,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 21, 0],"float16"), size=list[42,35,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 21, 0],"float16"), size=list[42,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 21, 0],"float16"), size=list[42,39,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 21, 0],"float16"), size=list[42,40,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 21, 0],"float16"), size=list[42,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 21, 0],"float32"), size=list[41,37,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 21, 0],"float32"), size=list[41,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 21, 0],"float32"), size=list[42,25,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 21, 0],"float32"), size=list[42,34,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 21, 0],"float32"), size=list[42,38,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 21, 0],"float32"), size=list[42,39,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 256, 21, 0],"float32"), size=list[42,42,], mode="bilinear", align_corners=False, align_mode=0, )
paddle.nn.functional.interpolate(Tensor([4, 3, 0, 64],"float32"), size=None, scale_factor=4, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([4, 3, 64, 0],"float32"), size=None, scale_factor=4, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([4, 5, 0, 20],"float64"), size=list[10,10,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([4, 5, 0, 7],"float32"), size=list[10,10,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([4, 5, 0, 7],"float64"), size=list[10,10,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([4, 5, 0, 7],"float64"), size=list[100,50,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([4, 5, 0, 7],"float64"), size=None, scale_factor=list[1.2,3.3,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([4, 5, 20, 0],"float64"), size=list[10,10,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([4, 5, 6, 0],"float32"), size=list[10,10,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([4, 5, 6, 0],"float64"), size=list[10,10,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([4, 5, 6, 0],"float64"), size=list[100,50,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([4, 5, 6, 0],"float64"), size=None, scale_factor=list[1.2,3.3,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([4, 64, 0, 320],"float16"), size=None, scale_factor=2, mode="nearest", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([4, 64, 0, 320],"float32"), size=None, scale_factor=2, mode="nearest", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([4, 64, 0, 64],"float16"), list[64,128,], mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([4, 64, 32, 0],"float16"), list[64,128,], mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([4, 64, 320, 0],"float16"), size=None, scale_factor=2, mode="nearest", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([4, 64, 320, 0],"float32"), size=None, scale_factor=2, mode="nearest", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([512, 0, 4, 3],"float16"), size=list[8,6,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([512, 0, 64, 256],"float32"), list[32,64,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([512, 160, 0, 3],"float16"), size=list[8,6,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([512, 160, 4, 0],"float16"), size=list[8,6,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([512, 3, 0, 256],"float32"), list[32,64,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([512, 3, 64, 0],"float32"), list[32,64,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([56, 0, 64, 64],"float32"), size=tuple(64,64,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([56, 2, 0, 64],"float32"), size=tuple(64,64,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([56, 2, 64, 0],"float32"), size=tuple(64,64,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([56, 3, 0, 64],"float32"), size=tuple(64,64,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([56, 3, 64, 0],"float32"), size=tuple(64,64,), mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([64, 0, 32, 32],"float32"), scale_factor=2, mode="nearest", )
paddle.nn.functional.interpolate(Tensor([64, 0, 64, 64],"float32"), scale_factor=2, mode="nearest", )
paddle.nn.functional.interpolate(Tensor([64, 0, 64, 64],"float32"), size=None, scale_factor=4, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([64, 3, 0, 64],"float32"), size=None, scale_factor=4, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([64, 3, 64, 0],"float32"), size=None, scale_factor=4, mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([64, 64, 0, 32],"float32"), scale_factor=2, mode="nearest", )
paddle.nn.functional.interpolate(Tensor([64, 64, 0, 64],"float32"), scale_factor=2, mode="nearest", )
paddle.nn.functional.interpolate(Tensor([64, 64, 32, 0],"float32"), scale_factor=2, mode="nearest", )
paddle.nn.functional.interpolate(Tensor([64, 64, 64, 0],"float32"), scale_factor=2, mode="nearest", )
paddle.nn.functional.interpolate(Tensor([8, 0, 20, 20],"float16"), size=list[40,40,], )
paddle.nn.functional.interpolate(Tensor([8, 0, 20, 20],"float16"), size=tuple(160,160,), )
paddle.nn.functional.interpolate(Tensor([8, 0, 20, 20],"float32"), size=list[40,40,], )
paddle.nn.functional.interpolate(Tensor([8, 0, 20, 20],"float32"), size=tuple(160,160,), )
paddle.nn.functional.interpolate(Tensor([8, 0, 40, 40],"float16"), size=list[80,80,], )
paddle.nn.functional.interpolate(Tensor([8, 0, 40, 40],"float32"), size=list[80,80,], )
paddle.nn.functional.interpolate(Tensor([8, 0, 640, 640],"float32"), size=tuple(640,640,), mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([8, 0, 80, 80],"float16"), size=list[160,160,], )
paddle.nn.functional.interpolate(Tensor([8, 0, 80, 80],"float32"), size=list[160,160,], )
paddle.nn.functional.interpolate(Tensor([8, 3, 0, 640],"float32"), size=tuple(640,640,), mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([8, 3, 640, 0],"float32"), size=tuple(640,640,), mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([8, 64, 0, 20],"float16"), size=list[40,40,], )
paddle.nn.functional.interpolate(Tensor([8, 64, 0, 20],"float16"), size=tuple(160,160,), )
paddle.nn.functional.interpolate(Tensor([8, 64, 0, 20],"float32"), size=list[40,40,], )
paddle.nn.functional.interpolate(Tensor([8, 64, 0, 20],"float32"), size=tuple(160,160,), )
paddle.nn.functional.interpolate(Tensor([8, 64, 0, 40],"float16"), size=list[80,80,], )
paddle.nn.functional.interpolate(Tensor([8, 64, 0, 40],"float32"), size=list[80,80,], )
paddle.nn.functional.interpolate(Tensor([8, 64, 0, 80],"float16"), size=list[160,160,], )
paddle.nn.functional.interpolate(Tensor([8, 64, 0, 80],"float32"), size=list[160,160,], )
paddle.nn.functional.interpolate(Tensor([8, 64, 20, 0],"float16"), size=list[40,40,], )
paddle.nn.functional.interpolate(Tensor([8, 64, 20, 0],"float16"), size=tuple(160,160,), )
paddle.nn.functional.interpolate(Tensor([8, 64, 20, 0],"float32"), size=list[40,40,], )
paddle.nn.functional.interpolate(Tensor([8, 64, 20, 0],"float32"), size=tuple(160,160,), )
paddle.nn.functional.interpolate(Tensor([8, 64, 40, 0],"float16"), size=list[80,80,], )
paddle.nn.functional.interpolate(Tensor([8, 64, 40, 0],"float32"), size=list[80,80,], )
paddle.nn.functional.interpolate(Tensor([8, 64, 80, 0],"float16"), size=list[160,160,], )
paddle.nn.functional.interpolate(Tensor([8, 64, 80, 0],"float32"), size=list[160,160,], )
paddle.nn.functional.interpolate(x=Tensor([0, 1, 3, 4],"float32"), size=list[6,6,], )
paddle.nn.functional.interpolate(x=Tensor([0, 1, 3, 4],"float64"), scale_factor=list[2,1.5,], )
paddle.nn.functional.interpolate(x=Tensor([0, 1, 3, 4],"float64"), size=list[6,6,], )
paddle.nn.functional.interpolate(x=Tensor([0, 3, 5, 7, 7],"float32"), mode="area", size=list[2,3,5,], )
paddle.nn.functional.interpolate(x=Tensor([0, 3, 6, 6],"float32"), size=list[12,12,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(x=Tensor([0, 3, 7, 7],"float32"), mode="area", size=list[2,5,], )
paddle.nn.functional.interpolate(x=Tensor([2, 0, 3, 4],"float32"), size=list[6,6,], )
paddle.nn.functional.interpolate(x=Tensor([2, 0, 3, 4],"float64"), scale_factor=list[2,1.5,], )
paddle.nn.functional.interpolate(x=Tensor([2, 0, 3, 4],"float64"), size=list[6,6,], )
paddle.nn.functional.interpolate(x=Tensor([2, 0, 5, 7, 7],"float32"), mode="area", size=list[2,3,5,], )
paddle.nn.functional.interpolate(x=Tensor([2, 0, 6, 6],"float32"), size=list[12,12,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(x=Tensor([2, 0, 7, 7],"float32"), mode="area", size=list[2,5,], )
paddle.nn.functional.interpolate(x=Tensor([2, 1, 0, 4],"float32"), size=list[6,6,], )
paddle.nn.functional.interpolate(x=Tensor([2, 1, 0, 4],"float64"), scale_factor=list[2,1.5,], )
paddle.nn.functional.interpolate(x=Tensor([2, 1, 0, 4],"float64"), size=list[6,6,], )
paddle.nn.functional.interpolate(x=Tensor([2, 1, 3, 0],"float32"), size=list[6,6,], )
paddle.nn.functional.interpolate(x=Tensor([2, 1, 3, 0],"float64"), scale_factor=list[2,1.5,], )
paddle.nn.functional.interpolate(x=Tensor([2, 1, 3, 0],"float64"), size=list[6,6,], )
paddle.nn.functional.interpolate(x=Tensor([2, 3, 0, 6],"float32"), size=list[12,12,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(x=Tensor([2, 3, 0, 7, 7],"float32"), mode="area", size=list[2,3,5,], )
paddle.nn.functional.interpolate(x=Tensor([2, 3, 0, 7],"float32"), mode="area", size=list[2,5,], )
paddle.nn.functional.interpolate(x=Tensor([2, 3, 5, 0, 7],"float32"), mode="area", size=list[2,3,5,], )
paddle.nn.functional.interpolate(x=Tensor([2, 3, 5, 7, 0],"float32"), mode="area", size=list[2,3,5,], )
paddle.nn.functional.interpolate(x=Tensor([2, 3, 6, 0],"float32"), size=list[12,12,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(x=Tensor([2, 3, 7, 0],"float32"), mode="area", size=list[2,5,], )
paddle.nn.functional.kl_div(input=Tensor([0, 128, 128],"float32"), label=Tensor([0, 128, 128],"float32"), reduction="batchmean", )
paddle.nn.functional.kl_div(input=Tensor([0, 128, 128],"float32"), label=Tensor([32, 128, 128],"float32"), reduction="batchmean", )
paddle.nn.functional.kl_div(input=Tensor([32, 0, 128],"float32"), label=Tensor([32, 0, 128],"float32"), reduction="batchmean", )
paddle.nn.functional.kl_div(input=Tensor([32, 0, 128],"float32"), label=Tensor([32, 128, 128],"float32"), reduction="batchmean", )
paddle.nn.functional.kl_div(input=Tensor([32, 128, 0],"float32"), label=Tensor([32, 128, 0],"float32"), reduction="batchmean", )
paddle.nn.functional.kl_div(input=Tensor([32, 128, 0],"float32"), label=Tensor([32, 128, 128],"float32"), reduction="batchmean", )
paddle.nn.functional.kl_div(input=Tensor([32, 128, 128],"float32"), label=Tensor([0, 128, 128],"float32"), reduction="batchmean", )
paddle.nn.functional.kl_div(input=Tensor([32, 128, 128],"float32"), label=Tensor([32, 0, 128],"float32"), reduction="batchmean", )
paddle.nn.functional.kl_div(input=Tensor([32, 128, 128],"float32"), label=Tensor([32, 128, 0],"float32"), reduction="batchmean", )
paddle.nn.functional.kl_div(Tensor([0, 2],"float32"), label=Tensor([0, 2],"float32"), reduction="mean", name=None, )
paddle.nn.functional.kl_div(Tensor([0, 2],"float32"), label=Tensor([5, 2],"float32"), reduction="mean", name=None, )
paddle.nn.functional.kl_div(Tensor([0, 20, 50],"float32"), Tensor([0, 20, 50],"float32"), "batchmean", False, )
paddle.nn.functional.kl_div(Tensor([0, 20, 50],"float32"), Tensor([0, 20, 50],"float32"), "batchmean", True, )
paddle.nn.functional.kl_div(Tensor([0, 20, 50],"float32"), Tensor([0, 20, 50],"float32"), "none", False, )
paddle.nn.functional.kl_div(Tensor([0, 20, 50],"float32"), Tensor([40, 20, 50],"float32"), "batchmean", False, )
paddle.nn.functional.kl_div(Tensor([0, 20, 50],"float32"), Tensor([40, 20, 50],"float32"), "batchmean", True, )
paddle.nn.functional.kl_div(Tensor([0, 20, 50],"float32"), Tensor([40, 20, 50],"float32"), "none", False, )
paddle.nn.functional.kl_div(Tensor([0, 20],"float32"), Tensor([0, 20],"float64"), "mean", False, )
paddle.nn.functional.kl_div(Tensor([0, 20],"float32"), Tensor([5, 20],"float64"), "mean", False, )
paddle.nn.functional.kl_div(Tensor([0, 20],"float64"), Tensor([0, 20],"float32"), )
paddle.nn.functional.kl_div(Tensor([0, 20],"float64"), Tensor([0, 20],"float64"), "batchmean", False, )
paddle.nn.functional.kl_div(Tensor([0, 20],"float64"), Tensor([0, 20],"float64"), "mean", False, )
paddle.nn.functional.kl_div(Tensor([0, 20],"float64"), Tensor([0, 20],"float64"), "mean", True, )
paddle.nn.functional.kl_div(Tensor([0, 20],"float64"), Tensor([0, 20],"float64"), "none", False, )
paddle.nn.functional.kl_div(Tensor([0, 20],"float64"), Tensor([0, 20],"float64"), "sum", False, )
paddle.nn.functional.kl_div(Tensor([0, 20],"float64"), Tensor([5, 20],"float32"), )
paddle.nn.functional.kl_div(Tensor([0, 20],"float64"), Tensor([5, 20],"float64"), "batchmean", False, )
paddle.nn.functional.kl_div(Tensor([0, 20],"float64"), Tensor([5, 20],"float64"), "mean", False, )
paddle.nn.functional.kl_div(Tensor([0, 20],"float64"), Tensor([5, 20],"float64"), "mean", True, )
paddle.nn.functional.kl_div(Tensor([0, 20],"float64"), Tensor([5, 20],"float64"), "none", False, )
paddle.nn.functional.kl_div(Tensor([0, 20],"float64"), Tensor([5, 20],"float64"), "sum", False, )
paddle.nn.functional.kl_div(Tensor([40, 0, 50],"float32"), Tensor([40, 0, 50],"float32"), "batchmean", False, )
paddle.nn.functional.kl_div(Tensor([40, 0, 50],"float32"), Tensor([40, 0, 50],"float32"), "batchmean", True, )
paddle.nn.functional.kl_div(Tensor([40, 0, 50],"float32"), Tensor([40, 0, 50],"float32"), "none", False, )
paddle.nn.functional.kl_div(Tensor([40, 0, 50],"float32"), Tensor([40, 20, 50],"float32"), "batchmean", False, )
paddle.nn.functional.kl_div(Tensor([40, 0, 50],"float32"), Tensor([40, 20, 50],"float32"), "batchmean", True, )
paddle.nn.functional.kl_div(Tensor([40, 0, 50],"float32"), Tensor([40, 20, 50],"float32"), "none", False, )
paddle.nn.functional.kl_div(Tensor([40, 20, 0],"float32"), Tensor([40, 20, 0],"float32"), "batchmean", False, )
paddle.nn.functional.kl_div(Tensor([40, 20, 0],"float32"), Tensor([40, 20, 0],"float32"), "batchmean", True, )
paddle.nn.functional.kl_div(Tensor([40, 20, 0],"float32"), Tensor([40, 20, 0],"float32"), "none", False, )
paddle.nn.functional.kl_div(Tensor([40, 20, 0],"float32"), Tensor([40, 20, 50],"float32"), "batchmean", False, )
paddle.nn.functional.kl_div(Tensor([40, 20, 0],"float32"), Tensor([40, 20, 50],"float32"), "batchmean", True, )
paddle.nn.functional.kl_div(Tensor([40, 20, 0],"float32"), Tensor([40, 20, 50],"float32"), "none", False, )
paddle.nn.functional.kl_div(Tensor([40, 20, 50],"float32"), Tensor([0, 20, 50],"float32"), "batchmean", False, )
paddle.nn.functional.kl_div(Tensor([40, 20, 50],"float32"), Tensor([0, 20, 50],"float32"), "batchmean", True, )
paddle.nn.functional.kl_div(Tensor([40, 20, 50],"float32"), Tensor([0, 20, 50],"float32"), "none", False, )
paddle.nn.functional.kl_div(Tensor([40, 20, 50],"float32"), Tensor([40, 0, 50],"float32"), "batchmean", False, )
paddle.nn.functional.kl_div(Tensor([40, 20, 50],"float32"), Tensor([40, 0, 50],"float32"), "batchmean", True, )
paddle.nn.functional.kl_div(Tensor([40, 20, 50],"float32"), Tensor([40, 0, 50],"float32"), "none", False, )
paddle.nn.functional.kl_div(Tensor([40, 20, 50],"float32"), Tensor([40, 20, 0],"float32"), "batchmean", False, )
paddle.nn.functional.kl_div(Tensor([40, 20, 50],"float32"), Tensor([40, 20, 0],"float32"), "batchmean", True, )
paddle.nn.functional.kl_div(Tensor([40, 20, 50],"float32"), Tensor([40, 20, 0],"float32"), "none", False, )
paddle.nn.functional.kl_div(Tensor([5, 0],"float32"), label=Tensor([5, 0],"float32"), reduction="mean", name=None, )
paddle.nn.functional.kl_div(Tensor([5, 0],"float32"), label=Tensor([5, 2],"float32"), reduction="mean", name=None, )
paddle.nn.functional.kl_div(Tensor([5, 0],"float32"), Tensor([5, 0],"float64"), "mean", False, )
paddle.nn.functional.kl_div(Tensor([5, 0],"float32"), Tensor([5, 20],"float64"), "mean", False, )
paddle.nn.functional.kl_div(Tensor([5, 0],"float64"), Tensor([5, 0],"float32"), )
paddle.nn.functional.kl_div(Tensor([5, 0],"float64"), Tensor([5, 0],"float64"), "batchmean", False, )
paddle.nn.functional.kl_div(Tensor([5, 0],"float64"), Tensor([5, 0],"float64"), "mean", False, )
paddle.nn.functional.kl_div(Tensor([5, 0],"float64"), Tensor([5, 0],"float64"), "mean", True, )
paddle.nn.functional.kl_div(Tensor([5, 0],"float64"), Tensor([5, 0],"float64"), "none", False, )
paddle.nn.functional.kl_div(Tensor([5, 0],"float64"), Tensor([5, 0],"float64"), "sum", False, )
paddle.nn.functional.kl_div(Tensor([5, 0],"float64"), Tensor([5, 20],"float32"), )
paddle.nn.functional.kl_div(Tensor([5, 0],"float64"), Tensor([5, 20],"float64"), "batchmean", False, )
paddle.nn.functional.kl_div(Tensor([5, 0],"float64"), Tensor([5, 20],"float64"), "mean", False, )
paddle.nn.functional.kl_div(Tensor([5, 0],"float64"), Tensor([5, 20],"float64"), "mean", True, )
paddle.nn.functional.kl_div(Tensor([5, 0],"float64"), Tensor([5, 20],"float64"), "none", False, )
paddle.nn.functional.kl_div(Tensor([5, 0],"float64"), Tensor([5, 20],"float64"), "sum", False, )
paddle.nn.functional.kl_div(Tensor([5, 2],"float32"), label=Tensor([0, 2],"float32"), reduction="mean", name=None, )
paddle.nn.functional.kl_div(Tensor([5, 2],"float32"), label=Tensor([5, 0],"float32"), reduction="mean", name=None, )
paddle.nn.functional.kl_div(Tensor([5, 20],"float32"), Tensor([0, 20],"float64"), "mean", False, )
paddle.nn.functional.kl_div(Tensor([5, 20],"float32"), Tensor([5, 0],"float64"), "mean", False, )
paddle.nn.functional.kl_div(Tensor([5, 20],"float64"), Tensor([0, 20],"float32"), )
paddle.nn.functional.kl_div(Tensor([5, 20],"float64"), Tensor([0, 20],"float64"), "batchmean", False, )
paddle.nn.functional.kl_div(Tensor([5, 20],"float64"), Tensor([0, 20],"float64"), "mean", False, )
paddle.nn.functional.kl_div(Tensor([5, 20],"float64"), Tensor([0, 20],"float64"), "mean", True, )
paddle.nn.functional.kl_div(Tensor([5, 20],"float64"), Tensor([0, 20],"float64"), "none", False, )
paddle.nn.functional.kl_div(Tensor([5, 20],"float64"), Tensor([0, 20],"float64"), "sum", False, )
paddle.nn.functional.kl_div(Tensor([5, 20],"float64"), Tensor([5, 0],"float32"), )
paddle.nn.functional.kl_div(Tensor([5, 20],"float64"), Tensor([5, 0],"float64"), "batchmean", False, )
paddle.nn.functional.kl_div(Tensor([5, 20],"float64"), Tensor([5, 0],"float64"), "mean", False, )
paddle.nn.functional.kl_div(Tensor([5, 20],"float64"), Tensor([5, 0],"float64"), "mean", True, )
paddle.nn.functional.kl_div(Tensor([5, 20],"float64"), Tensor([5, 0],"float64"), "none", False, )
paddle.nn.functional.kl_div(Tensor([5, 20],"float64"), Tensor([5, 0],"float64"), "sum", False, )
paddle.nn.functional.l1_loss(Tensor([0, 10, 5],"float32"), Tensor([0, 10, 5],"float32"), "mean", name=None, )
paddle.nn.functional.l1_loss(Tensor([0, 10, 5],"float32"), Tensor([0, 10, 5],"float32"), "none", name=None, )
paddle.nn.functional.l1_loss(Tensor([0, 10, 5],"float32"), Tensor([0, 10, 5],"float32"), "sum", name=None, )
paddle.nn.functional.l1_loss(Tensor([0, 10, 5],"float32"), Tensor([0, 10, 5],"float32"), )
paddle.nn.functional.l1_loss(Tensor([0, 10, 5],"float32"), Tensor([0, 10, 5],"float32"), reduction="none", )
paddle.nn.functional.l1_loss(Tensor([0, 10, 5],"float32"), Tensor([0, 10, 5],"float32"), reduction="sum", )
paddle.nn.functional.l1_loss(Tensor([0, 10, 5],"float32"), Tensor([10, 10, 5],"float32"), "mean", name=None, )
paddle.nn.functional.l1_loss(Tensor([0, 10, 5],"float32"), Tensor([10, 10, 5],"float32"), "none", name=None, )
paddle.nn.functional.l1_loss(Tensor([0, 10, 5],"float32"), Tensor([10, 10, 5],"float32"), "sum", name=None, )
paddle.nn.functional.l1_loss(Tensor([0, 10, 5],"float32"), Tensor([10, 10, 5],"float32"), )
paddle.nn.functional.l1_loss(Tensor([0, 10, 5],"float32"), Tensor([10, 10, 5],"float32"), reduction="none", )
paddle.nn.functional.l1_loss(Tensor([0, 10, 5],"float32"), Tensor([10, 10, 5],"float32"), reduction="sum", )
paddle.nn.functional.l1_loss(Tensor([0, 107, 1025],"float32"), Tensor([0, 107, 1025],"float32"), )
paddle.nn.functional.l1_loss(Tensor([0, 107, 1025],"float32"), Tensor([16, 107, 1025],"float32"), )
paddle.nn.functional.l1_loss(Tensor([0, 2],"float64"), label=Tensor([0, 2],"float64"), reduction="mean", name=None, )
paddle.nn.functional.l1_loss(Tensor([0, 2],"float64"), label=Tensor([2, 2],"float64"), reduction="mean", name=None, )
paddle.nn.functional.l1_loss(Tensor([0, 2],"float64"), Tensor([0, 2],"float64"), "mean", name=None, )
paddle.nn.functional.l1_loss(Tensor([0, 2],"float64"), Tensor([2, 2],"float64"), "mean", name=None, )
paddle.nn.functional.l1_loss(Tensor([0, 3, 256, 256],"float32"), Tensor([0, 3, 256, 256],"float32"), "mean", name=None, )
paddle.nn.functional.l1_loss(Tensor([0, 3, 256, 256],"float32"), Tensor([1, 3, 256, 256],"float32"), "mean", name=None, )
paddle.nn.functional.l1_loss(Tensor([0, 3, 32, 32],"float32"), Tensor([0, 3, 32, 32],"float32"), "mean", name=None, )
paddle.nn.functional.l1_loss(Tensor([0, 3, 32, 32],"float32"), Tensor([2, 3, 32, 32],"float32"), "mean", name=None, )
paddle.nn.functional.l1_loss(Tensor([0, 4],"float32"), Tensor([0, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([0, 4],"float32"), Tensor([0, 4],"float32"), reduction="sum", )
paddle.nn.functional.l1_loss(Tensor([0, 4],"float32"), Tensor([1, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([0, 4],"float32"), Tensor([1, 4],"float32"), reduction="sum", )
paddle.nn.functional.l1_loss(Tensor([0, 4],"float32"), Tensor([10, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([0, 4],"float32"), Tensor([100, 4],"float32"), reduction="sum", )
paddle.nn.functional.l1_loss(Tensor([0, 499, 2],"float32"), Tensor([0, 499, 2],"float32"), "sum", name=None, )
paddle.nn.functional.l1_loss(Tensor([0, 499, 2],"float32"), Tensor([10, 499, 2],"float32"), "sum", name=None, )
paddle.nn.functional.l1_loss(Tensor([0, 5],"float32"), Tensor([0, 5],"float32"), reduction="mean", )
paddle.nn.functional.l1_loss(Tensor([0, 5],"float32"), Tensor([3, 5],"float32"), reduction="mean", )
paddle.nn.functional.l1_loss(Tensor([0, 500, 10],"float32"), Tensor([0, 500, 10],"float32"), reduction="none", )
paddle.nn.functional.l1_loss(Tensor([0, 500, 10],"float32"), Tensor([4, 500, 10],"float32"), reduction="none", )
paddle.nn.functional.l1_loss(Tensor([0, 500, 2],"float16"), Tensor([0, 500, 2],"float32"), reduction="sum", )
paddle.nn.functional.l1_loss(Tensor([0, 500, 2],"float16"), Tensor([20, 500, 2],"float32"), reduction="sum", )
paddle.nn.functional.l1_loss(Tensor([1, 0, 256, 256],"float32"), Tensor([1, 0, 256, 256],"float32"), "mean", name=None, )
paddle.nn.functional.l1_loss(Tensor([1, 0, 256, 256],"float32"), Tensor([1, 3, 256, 256],"float32"), "mean", name=None, )
paddle.nn.functional.l1_loss(Tensor([1, 0],"float32"), Tensor([1, 0],"float32"), )
paddle.nn.functional.l1_loss(Tensor([1, 0],"float32"), Tensor([1, 0],"float32"), reduction="sum", )
paddle.nn.functional.l1_loss(Tensor([1, 0],"float32"), Tensor([1, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([1, 0],"float32"), Tensor([1, 4],"float32"), reduction="sum", )
paddle.nn.functional.l1_loss(Tensor([1, 3, 0, 256],"float32"), Tensor([1, 3, 0, 256],"float32"), "mean", name=None, )
paddle.nn.functional.l1_loss(Tensor([1, 3, 0, 256],"float32"), Tensor([1, 3, 256, 256],"float32"), "mean", name=None, )
paddle.nn.functional.l1_loss(Tensor([1, 3, 256, 0],"float32"), Tensor([1, 3, 256, 0],"float32"), "mean", name=None, )
paddle.nn.functional.l1_loss(Tensor([1, 3, 256, 0],"float32"), Tensor([1, 3, 256, 256],"float32"), "mean", name=None, )
paddle.nn.functional.l1_loss(Tensor([1, 3, 256, 256],"float32"), Tensor([0, 3, 256, 256],"float32"), "mean", name=None, )
paddle.nn.functional.l1_loss(Tensor([1, 3, 256, 256],"float32"), Tensor([1, 0, 256, 256],"float32"), "mean", name=None, )
paddle.nn.functional.l1_loss(Tensor([1, 3, 256, 256],"float32"), Tensor([1, 3, 0, 256],"float32"), "mean", name=None, )
paddle.nn.functional.l1_loss(Tensor([1, 3, 256, 256],"float32"), Tensor([1, 3, 256, 0],"float32"), "mean", name=None, )
paddle.nn.functional.l1_loss(Tensor([1, 4],"float32"), Tensor([0, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([1, 4],"float32"), Tensor([0, 4],"float32"), reduction="sum", )
paddle.nn.functional.l1_loss(Tensor([1, 4],"float32"), Tensor([1, 0],"float32"), )
paddle.nn.functional.l1_loss(Tensor([1, 4],"float32"), Tensor([1, 0],"float32"), reduction="sum", )
paddle.nn.functional.l1_loss(Tensor([10, 0, 2],"float32"), Tensor([10, 0, 2],"float32"), "sum", name=None, )
paddle.nn.functional.l1_loss(Tensor([10, 0, 2],"float32"), Tensor([10, 499, 2],"float32"), "sum", name=None, )
paddle.nn.functional.l1_loss(Tensor([10, 0, 5],"float32"), Tensor([10, 0, 5],"float32"), "mean", name=None, )
paddle.nn.functional.l1_loss(Tensor([10, 0, 5],"float32"), Tensor([10, 0, 5],"float32"), "none", name=None, )
paddle.nn.functional.l1_loss(Tensor([10, 0, 5],"float32"), Tensor([10, 0, 5],"float32"), "sum", name=None, )
paddle.nn.functional.l1_loss(Tensor([10, 0, 5],"float32"), Tensor([10, 0, 5],"float32"), )
paddle.nn.functional.l1_loss(Tensor([10, 0, 5],"float32"), Tensor([10, 0, 5],"float32"), reduction="none", )
paddle.nn.functional.l1_loss(Tensor([10, 0, 5],"float32"), Tensor([10, 0, 5],"float32"), reduction="sum", )
paddle.nn.functional.l1_loss(Tensor([10, 0, 5],"float32"), Tensor([10, 10, 5],"float32"), "mean", name=None, )
paddle.nn.functional.l1_loss(Tensor([10, 0, 5],"float32"), Tensor([10, 10, 5],"float32"), "none", name=None, )
paddle.nn.functional.l1_loss(Tensor([10, 0, 5],"float32"), Tensor([10, 10, 5],"float32"), "sum", name=None, )
paddle.nn.functional.l1_loss(Tensor([10, 0, 5],"float32"), Tensor([10, 10, 5],"float32"), )
paddle.nn.functional.l1_loss(Tensor([10, 0, 5],"float32"), Tensor([10, 10, 5],"float32"), reduction="none", )
paddle.nn.functional.l1_loss(Tensor([10, 0, 5],"float32"), Tensor([10, 10, 5],"float32"), reduction="sum", )
paddle.nn.functional.l1_loss(Tensor([10, 0],"float32"), Tensor([10, 0],"float32"), )
paddle.nn.functional.l1_loss(Tensor([10, 0],"float32"), Tensor([10, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([10, 10, 0],"float32"), Tensor([10, 10, 0],"float32"), "mean", name=None, )
paddle.nn.functional.l1_loss(Tensor([10, 10, 0],"float32"), Tensor([10, 10, 0],"float32"), "none", name=None, )
paddle.nn.functional.l1_loss(Tensor([10, 10, 0],"float32"), Tensor([10, 10, 0],"float32"), "sum", name=None, )
paddle.nn.functional.l1_loss(Tensor([10, 10, 0],"float32"), Tensor([10, 10, 0],"float32"), )
paddle.nn.functional.l1_loss(Tensor([10, 10, 0],"float32"), Tensor([10, 10, 0],"float32"), reduction="none", )
paddle.nn.functional.l1_loss(Tensor([10, 10, 0],"float32"), Tensor([10, 10, 0],"float32"), reduction="sum", )
paddle.nn.functional.l1_loss(Tensor([10, 10, 0],"float32"), Tensor([10, 10, 5],"float32"), "mean", name=None, )
paddle.nn.functional.l1_loss(Tensor([10, 10, 0],"float32"), Tensor([10, 10, 5],"float32"), "none", name=None, )
paddle.nn.functional.l1_loss(Tensor([10, 10, 0],"float32"), Tensor([10, 10, 5],"float32"), "sum", name=None, )
paddle.nn.functional.l1_loss(Tensor([10, 10, 0],"float32"), Tensor([10, 10, 5],"float32"), )
paddle.nn.functional.l1_loss(Tensor([10, 10, 0],"float32"), Tensor([10, 10, 5],"float32"), reduction="none", )
paddle.nn.functional.l1_loss(Tensor([10, 10, 0],"float32"), Tensor([10, 10, 5],"float32"), reduction="sum", )
paddle.nn.functional.l1_loss(Tensor([10, 10, 5],"float32"), Tensor([0, 10, 5],"float32"), "mean", name=None, )
paddle.nn.functional.l1_loss(Tensor([10, 10, 5],"float32"), Tensor([0, 10, 5],"float32"), "none", name=None, )
paddle.nn.functional.l1_loss(Tensor([10, 10, 5],"float32"), Tensor([0, 10, 5],"float32"), "sum", name=None, )
paddle.nn.functional.l1_loss(Tensor([10, 10, 5],"float32"), Tensor([0, 10, 5],"float32"), )
paddle.nn.functional.l1_loss(Tensor([10, 10, 5],"float32"), Tensor([0, 10, 5],"float32"), reduction="none", )
paddle.nn.functional.l1_loss(Tensor([10, 10, 5],"float32"), Tensor([0, 10, 5],"float32"), reduction="sum", )
paddle.nn.functional.l1_loss(Tensor([10, 10, 5],"float32"), Tensor([10, 0, 5],"float32"), "mean", name=None, )
paddle.nn.functional.l1_loss(Tensor([10, 10, 5],"float32"), Tensor([10, 0, 5],"float32"), "none", name=None, )
paddle.nn.functional.l1_loss(Tensor([10, 10, 5],"float32"), Tensor([10, 0, 5],"float32"), "sum", name=None, )
paddle.nn.functional.l1_loss(Tensor([10, 10, 5],"float32"), Tensor([10, 0, 5],"float32"), )
paddle.nn.functional.l1_loss(Tensor([10, 10, 5],"float32"), Tensor([10, 0, 5],"float32"), reduction="none", )
paddle.nn.functional.l1_loss(Tensor([10, 10, 5],"float32"), Tensor([10, 0, 5],"float32"), reduction="sum", )
paddle.nn.functional.l1_loss(Tensor([10, 10, 5],"float32"), Tensor([10, 10, 0],"float32"), "mean", name=None, )
paddle.nn.functional.l1_loss(Tensor([10, 10, 5],"float32"), Tensor([10, 10, 0],"float32"), "none", name=None, )
paddle.nn.functional.l1_loss(Tensor([10, 10, 5],"float32"), Tensor([10, 10, 0],"float32"), "sum", name=None, )
paddle.nn.functional.l1_loss(Tensor([10, 10, 5],"float32"), Tensor([10, 10, 0],"float32"), )
paddle.nn.functional.l1_loss(Tensor([10, 10, 5],"float32"), Tensor([10, 10, 0],"float32"), reduction="none", )
paddle.nn.functional.l1_loss(Tensor([10, 10, 5],"float32"), Tensor([10, 10, 0],"float32"), reduction="sum", )
paddle.nn.functional.l1_loss(Tensor([10, 4],"float32"), Tensor([0, 4],"float32"), )
paddle.nn.functional.l1_loss(Tensor([10, 4],"float32"), Tensor([10, 0],"float32"), )
paddle.nn.functional.l1_loss(Tensor([10, 499, 0],"float32"), Tensor([10, 499, 0],"float32"), "sum", name=None, )
paddle.nn.functional.l1_loss(Tensor([10, 499, 0],"float32"), Tensor([10, 499, 2],"float32"), "sum", name=None, )
paddle.nn.functional.l1_loss(Tensor([10, 499, 2],"float32"), Tensor([0, 499, 2],"float32"), "sum", name=None, )
paddle.nn.functional.l1_loss(Tensor([10, 499, 2],"float32"), Tensor([10, 0, 2],"float32"), "sum", name=None, )
paddle.nn.functional.l1_loss(Tensor([10, 499, 2],"float32"), Tensor([10, 499, 0],"float32"), "sum", name=None, )
paddle.nn.functional.l1_loss(Tensor([100, 0],"float32"), Tensor([100, 0],"float32"), reduction="sum", )
paddle.nn.functional.l1_loss(Tensor([100, 0],"float32"), Tensor([100, 4],"float32"), reduction="sum", )
paddle.nn.functional.l1_loss(Tensor([100, 4],"float32"), Tensor([0, 4],"float32"), reduction="sum", )
paddle.nn.functional.l1_loss(Tensor([100, 4],"float32"), Tensor([100, 0],"float32"), reduction="sum", )
paddle.nn.functional.l1_loss(Tensor([16, 0, 1025],"float32"), Tensor([16, 0, 1025],"float32"), )
paddle.nn.functional.l1_loss(Tensor([16, 0, 1025],"float32"), Tensor([16, 107, 1025],"float32"), )
paddle.nn.functional.l1_loss(Tensor([16, 107, 0],"float32"), Tensor([16, 107, 0],"float32"), )
paddle.nn.functional.l1_loss(Tensor([16, 107, 0],"float32"), Tensor([16, 107, 1025],"float32"), )
paddle.nn.functional.l1_loss(Tensor([16, 107, 1025],"float32"), Tensor([0, 107, 1025],"float32"), )
paddle.nn.functional.l1_loss(Tensor([16, 107, 1025],"float32"), Tensor([16, 0, 1025],"float32"), )
paddle.nn.functional.l1_loss(Tensor([16, 107, 1025],"float32"), Tensor([16, 107, 0],"float32"), )
paddle.nn.functional.l1_loss(Tensor([2, 0, 32, 32],"float32"), Tensor([2, 0, 32, 32],"float32"), "mean", name=None, )
paddle.nn.functional.l1_loss(Tensor([2, 0, 32, 32],"float32"), Tensor([2, 3, 32, 32],"float32"), "mean", name=None, )
paddle.nn.functional.l1_loss(Tensor([2, 0],"float64"), label=Tensor([2, 0],"float64"), reduction="mean", name=None, )
paddle.nn.functional.l1_loss(Tensor([2, 0],"float64"), label=Tensor([2, 2],"float64"), reduction="mean", name=None, )
paddle.nn.functional.l1_loss(Tensor([2, 0],"float64"), Tensor([2, 0],"float64"), "mean", name=None, )
paddle.nn.functional.l1_loss(Tensor([2, 0],"float64"), Tensor([2, 2],"float64"), "mean", name=None, )
paddle.nn.functional.l1_loss(Tensor([2, 2],"float64"), label=Tensor([0, 2],"float64"), reduction="mean", name=None, )
paddle.nn.functional.l1_loss(Tensor([2, 2],"float64"), label=Tensor([2, 0],"float64"), reduction="mean", name=None, )
paddle.nn.functional.l1_loss(Tensor([2, 2],"float64"), Tensor([0, 2],"float64"), "mean", name=None, )
paddle.nn.functional.l1_loss(Tensor([2, 2],"float64"), Tensor([2, 0],"float64"), "mean", name=None, )
paddle.nn.functional.l1_loss(Tensor([2, 3, 0, 32],"float32"), Tensor([2, 3, 0, 32],"float32"), "mean", name=None, )
paddle.nn.functional.l1_loss(Tensor([2, 3, 0, 32],"float32"), Tensor([2, 3, 32, 32],"float32"), "mean", name=None, )
paddle.nn.functional.l1_loss(Tensor([2, 3, 32, 0],"float32"), Tensor([2, 3, 32, 0],"float32"), "mean", name=None, )
paddle.nn.functional.l1_loss(Tensor([2, 3, 32, 0],"float32"), Tensor([2, 3, 32, 32],"float32"), "mean", name=None, )
paddle.nn.functional.l1_loss(Tensor([2, 3, 32, 32],"float32"), Tensor([0, 3, 32, 32],"float32"), "mean", name=None, )
paddle.nn.functional.l1_loss(Tensor([2, 3, 32, 32],"float32"), Tensor([2, 0, 32, 32],"float32"), "mean", name=None, )
paddle.nn.functional.l1_loss(Tensor([2, 3, 32, 32],"float32"), Tensor([2, 3, 0, 32],"float32"), "mean", name=None, )
paddle.nn.functional.l1_loss(Tensor([2, 3, 32, 32],"float32"), Tensor([2, 3, 32, 0],"float32"), "mean", name=None, )
paddle.nn.functional.l1_loss(Tensor([20, 0, 2],"float16"), Tensor([20, 0, 2],"float32"), reduction="sum", )
paddle.nn.functional.l1_loss(Tensor([20, 0, 2],"float16"), Tensor([20, 500, 2],"float32"), reduction="sum", )
paddle.nn.functional.l1_loss(Tensor([20, 500, 0],"float16"), Tensor([20, 500, 0],"float32"), reduction="sum", )
paddle.nn.functional.l1_loss(Tensor([20, 500, 0],"float16"), Tensor([20, 500, 2],"float32"), reduction="sum", )
paddle.nn.functional.l1_loss(Tensor([20, 500, 2],"float16"), Tensor([0, 500, 2],"float32"), reduction="sum", )
paddle.nn.functional.l1_loss(Tensor([20, 500, 2],"float16"), Tensor([20, 0, 2],"float32"), reduction="sum", )
paddle.nn.functional.l1_loss(Tensor([20, 500, 2],"float16"), Tensor([20, 500, 0],"float32"), reduction="sum", )
paddle.nn.functional.l1_loss(Tensor([3, 0],"float32"), Tensor([3, 0],"float32"), reduction="mean", )
paddle.nn.functional.l1_loss(Tensor([3, 0],"float32"), Tensor([3, 5],"float32"), reduction="mean", )
paddle.nn.functional.l1_loss(Tensor([3, 5],"float32"), Tensor([0, 5],"float32"), reduction="mean", )
paddle.nn.functional.l1_loss(Tensor([3, 5],"float32"), Tensor([3, 0],"float32"), reduction="mean", )
paddle.nn.functional.l1_loss(Tensor([4, 0, 10],"float32"), Tensor([4, 0, 10],"float32"), reduction="none", )
paddle.nn.functional.l1_loss(Tensor([4, 0, 10],"float32"), Tensor([4, 500, 10],"float32"), reduction="none", )
paddle.nn.functional.l1_loss(Tensor([4, 500, 0],"float32"), Tensor([4, 500, 0],"float32"), reduction="none", )
paddle.nn.functional.l1_loss(Tensor([4, 500, 0],"float32"), Tensor([4, 500, 10],"float32"), reduction="none", )
paddle.nn.functional.l1_loss(Tensor([4, 500, 10],"float32"), Tensor([0, 500, 10],"float32"), reduction="none", )
paddle.nn.functional.l1_loss(Tensor([4, 500, 10],"float32"), Tensor([4, 0, 10],"float32"), reduction="none", )
paddle.nn.functional.l1_loss(Tensor([4, 500, 10],"float32"), Tensor([4, 500, 0],"float32"), reduction="none", )
paddle.nn.functional.label_smooth(label=Tensor([0, 10000],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(label=Tensor([0, 28, 33712],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(label=Tensor([0, 29, 33712],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(label=Tensor([104, 0, 33712],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(label=Tensor([104, 28, 0],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(label=Tensor([104, 29, 0],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(label=Tensor([128, 0],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(Tensor([0, 1, 1000],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(Tensor([0, 1],"float32"), prior_dist=None, epsilon=0.1, )
paddle.nn.functional.label_smooth(Tensor([0, 102],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(Tensor([0, 2, 2, 5],"float32"), epsilon=0.20326138379662173, )
paddle.nn.functional.label_smooth(Tensor([0, 2, 2, 5],"float32"), epsilon=0.7336344401714625, )
paddle.nn.functional.label_smooth(Tensor([0, 2, 2, 5],"float64"), epsilon=0.18833946207874966, )
paddle.nn.functional.label_smooth(Tensor([0, 2, 2, 5],"float64"), epsilon=0.7642113030841614, )
paddle.nn.functional.label_smooth(Tensor([0, 3, 1],"float32"), prior_dist=None, epsilon=0.1, )
paddle.nn.functional.label_smooth(Tensor([0, 3],"float32"), epsilon=0.1858912794612338, )
paddle.nn.functional.label_smooth(Tensor([0, 3],"float32"), epsilon=0.5436483450993637, )
paddle.nn.functional.label_smooth(Tensor([0, 3],"float64"), epsilon=0.5986189939413826, )
paddle.nn.functional.label_smooth(Tensor([0, 3],"float64"), epsilon=0.8211263365048883, )
paddle.nn.functional.label_smooth(Tensor([1024, 0, 1000],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(Tensor([1024, 1, 0],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(Tensor([12, 0],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(Tensor([124, 0],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(Tensor([128, 0, 1000],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(Tensor([128, 1, 0],"float32"), epsilon=0.1, )
paddle.nn.functional.label_smooth(Tensor([2, 0, 1],"float32"), prior_dist=None, epsilon=0.1, )
paddle.nn.functional.label_smooth(Tensor([2, 3, 0],"float32"), prior_dist=None, epsilon=0.1, )
paddle.nn.functional.label_smooth(Tensor([20, 0],"float32"), prior_dist=None, epsilon=0.1, )
paddle.nn.functional.label_smooth(Tensor([3, 0, 2, 5],"float32"), epsilon=0.20326138379662173, )
paddle.nn.functional.label_smooth(Tensor([3, 0, 2, 5],"float32"), epsilon=0.7336344401714625, )
paddle.nn.functional.label_smooth(Tensor([3, 0, 2, 5],"float64"), epsilon=0.18833946207874966, )
paddle.nn.functional.label_smooth(Tensor([3, 0, 2, 5],"float64"), epsilon=0.7642113030841614, )
paddle.nn.functional.label_smooth(Tensor([3, 2, 0, 5],"float32"), epsilon=0.20326138379662173, )
paddle.nn.functional.label_smooth(Tensor([3, 2, 0, 5],"float32"), epsilon=0.7336344401714625, )
paddle.nn.functional.label_smooth(Tensor([3, 2, 0, 5],"float64"), epsilon=0.18833946207874966, )
paddle.nn.functional.label_smooth(Tensor([3, 2, 0, 5],"float64"), epsilon=0.7642113030841614, )
paddle.nn.functional.label_smooth(Tensor([3, 2, 2, 0],"float32"), epsilon=0.20326138379662173, )
paddle.nn.functional.label_smooth(Tensor([3, 2, 2, 0],"float32"), epsilon=0.7336344401714625, )
paddle.nn.functional.label_smooth(Tensor([3, 2, 2, 0],"float64"), epsilon=0.18833946207874966, )
paddle.nn.functional.label_smooth(Tensor([3, 2, 2, 0],"float64"), epsilon=0.7642113030841614, )
paddle.nn.functional.label_smooth(Tensor([4, 0],"float32"), epsilon=0.1858912794612338, )
paddle.nn.functional.label_smooth(Tensor([4, 0],"float32"), epsilon=0.5436483450993637, )
paddle.nn.functional.label_smooth(Tensor([4, 0],"float64"), epsilon=0.5986189939413826, )
paddle.nn.functional.label_smooth(Tensor([4, 0],"float64"), epsilon=0.8211263365048883, )
paddle.nn.functional.layer_norm(Tensor([0, 10, 4, 4],"float32"), 4, )
paddle.nn.functional.layer_norm(Tensor([0, 10, 60, 30],"float32"), list[10,60,30,], weight=Tensor([18000],"float32"), bias=Tensor([18000],"float32"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([0, 10, 60, 70],"float32"), list[60,70,], weight=Tensor([4200],"float32"), bias=Tensor([4200],"float32"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([0, 165, 1024],"float32"), 1024, weight=Tensor([1024],"float32"), bias=Tensor([1024],"float32"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([0, 186, 1024],"float32"), 1024, weight=Tensor([1024],"float32"), bias=Tensor([1024],"float32"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([0, 2, 2],"float32"), 2, epsilon=1e-05, weight=None, bias=None, )
paddle.nn.functional.layer_norm(Tensor([0, 2, 2],"float32"), 2, epsilon=1e-05, weight=Tensor([2],"float32"), bias=Tensor([2],"float32"), )
paddle.nn.functional.layer_norm(Tensor([0, 20],"float16"), list[20,], Tensor([20],"float32"), Tensor([20],"float32"), )
paddle.nn.functional.layer_norm(Tensor([0, 209, 384],"float32"), 384, weight=Tensor([384],"float32"), bias=Tensor([384],"float32"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([0, 3, 10, 10],"float32"), list[3,10,10,], Tensor([300],"float32"), Tensor([300],"float32"), )
paddle.nn.functional.layer_norm(Tensor([0, 6, 6, 3],"float32"), list[6,6,3,], weight=None, bias=Tensor([108],"float32"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([0, 6, 6, 3],"float32"), list[6,6,3,], weight=Tensor([108],"float32"), bias=None, epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([0, 6, 6, 3],"float32"), list[6,6,3,], weight=Tensor([108],"float32"), bias=Tensor([108],"float32"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([0, 6, 6, 3],"float64"), list[6,6,3,], weight=None, bias=Tensor([108],"float64"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([0, 6, 6, 3],"float64"), list[6,6,3,], weight=Tensor([108],"float64"), bias=None, epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([0, 6, 6, 3],"float64"), list[6,6,3,], weight=Tensor([108],"float64"), bias=Tensor([108],"float64"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([0, 64, 128],"float32"), list[64,128,], Tensor([8192],"float32"), Tensor([8192],"float32"), )
paddle.nn.functional.layer_norm(Tensor([1, 0, 2],"float32"), 2, epsilon=1e-05, weight=None, bias=None, )
paddle.nn.functional.layer_norm(Tensor([1, 0, 2],"float32"), 2, epsilon=1e-05, weight=Tensor([2],"float32"), bias=Tensor([2],"float32"), )
paddle.nn.functional.layer_norm(Tensor([1, 2, 0],"float32"), 2, epsilon=1e-05, weight=None, bias=None, )
paddle.nn.functional.layer_norm(Tensor([1, 2, 0],"float32"), 2, epsilon=1e-05, weight=Tensor([2],"float32"), bias=Tensor([2],"float32"), )
paddle.nn.functional.layer_norm(Tensor([1, 2, 2],"float32"), 2, epsilon=1e-05, weight=Tensor([0],"float32"), bias=Tensor([2],"float32"), )
paddle.nn.functional.layer_norm(Tensor([1, 2, 2],"float32"), 2, epsilon=1e-05, weight=Tensor([2],"float32"), bias=Tensor([0],"float32"), )
paddle.nn.functional.layer_norm(Tensor([10, 0],"float16"), list[20,], Tensor([20],"float32"), Tensor([20],"float32"), )
paddle.nn.functional.layer_norm(Tensor([10, 20],"float16"), list[20,], Tensor([0],"float32"), Tensor([20],"float32"), )
paddle.nn.functional.layer_norm(Tensor([10, 20],"float16"), list[20,], Tensor([20],"float32"), Tensor([0],"float32"), )
paddle.nn.functional.layer_norm(Tensor([14, 0, 384],"float32"), 384, weight=Tensor([384],"float32"), bias=Tensor([384],"float32"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([14, 209, 0],"float32"), 384, weight=Tensor([384],"float32"), bias=Tensor([384],"float32"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([14, 209, 384],"float32"), 384, weight=Tensor([0],"float32"), bias=Tensor([384],"float32"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([14, 209, 384],"float32"), 384, weight=Tensor([384],"float32"), bias=Tensor([0],"float32"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([2, 0, 10, 10],"float32"), list[3,10,10,], Tensor([300],"float32"), Tensor([300],"float32"), )
paddle.nn.functional.layer_norm(Tensor([2, 0, 6, 3],"float32"), list[6,6,3,], weight=None, bias=Tensor([108],"float32"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([2, 0, 6, 3],"float32"), list[6,6,3,], weight=Tensor([108],"float32"), bias=None, epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([2, 0, 6, 3],"float32"), list[6,6,3,], weight=Tensor([108],"float32"), bias=Tensor([108],"float32"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([2, 0, 6, 3],"float64"), list[6,6,3,], weight=None, bias=Tensor([108],"float64"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([2, 0, 6, 3],"float64"), list[6,6,3,], weight=Tensor([108],"float64"), bias=None, epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([2, 0, 6, 3],"float64"), list[6,6,3,], weight=Tensor([108],"float64"), bias=Tensor([108],"float64"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([2, 3, 0, 10],"float32"), list[3,10,10,], Tensor([300],"float32"), Tensor([300],"float32"), )
paddle.nn.functional.layer_norm(Tensor([2, 3, 10, 0],"float32"), list[3,10,10,], Tensor([300],"float32"), Tensor([300],"float32"), )
paddle.nn.functional.layer_norm(Tensor([2, 3, 10, 10],"float32"), list[3,10,10,], Tensor([0],"float32"), Tensor([300],"float32"), )
paddle.nn.functional.layer_norm(Tensor([2, 3, 10, 10],"float32"), list[3,10,10,], Tensor([300],"float32"), Tensor([0],"float32"), )
paddle.nn.functional.layer_norm(Tensor([2, 6, 0, 3],"float32"), list[6,6,3,], weight=None, bias=Tensor([108],"float32"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([2, 6, 0, 3],"float32"), list[6,6,3,], weight=Tensor([108],"float32"), bias=None, epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([2, 6, 0, 3],"float32"), list[6,6,3,], weight=Tensor([108],"float32"), bias=Tensor([108],"float32"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([2, 6, 0, 3],"float64"), list[6,6,3,], weight=None, bias=Tensor([108],"float64"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([2, 6, 0, 3],"float64"), list[6,6,3,], weight=Tensor([108],"float64"), bias=None, epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([2, 6, 0, 3],"float64"), list[6,6,3,], weight=Tensor([108],"float64"), bias=Tensor([108],"float64"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([2, 6, 6, 0],"float32"), list[6,6,3,], weight=None, bias=Tensor([108],"float32"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([2, 6, 6, 0],"float32"), list[6,6,3,], weight=Tensor([108],"float32"), bias=None, epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([2, 6, 6, 0],"float32"), list[6,6,3,], weight=Tensor([108],"float32"), bias=Tensor([108],"float32"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([2, 6, 6, 0],"float64"), list[6,6,3,], weight=None, bias=Tensor([108],"float64"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([2, 6, 6, 0],"float64"), list[6,6,3,], weight=Tensor([108],"float64"), bias=None, epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([2, 6, 6, 0],"float64"), list[6,6,3,], weight=Tensor([108],"float64"), bias=Tensor([108],"float64"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([2, 6, 6, 3],"float32"), list[6,6,3,], weight=None, bias=Tensor([0],"float32"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([2, 6, 6, 3],"float32"), list[6,6,3,], weight=Tensor([0],"float32"), bias=None, epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([2, 6, 6, 3],"float32"), list[6,6,3,], weight=Tensor([0],"float32"), bias=Tensor([108],"float32"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([2, 6, 6, 3],"float32"), list[6,6,3,], weight=Tensor([108],"float32"), bias=Tensor([0],"float32"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([2, 6, 6, 3],"float64"), list[6,6,3,], weight=None, bias=Tensor([0],"float64"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([2, 6, 6, 3],"float64"), list[6,6,3,], weight=Tensor([0],"float64"), bias=None, epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([2, 6, 6, 3],"float64"), list[6,6,3,], weight=Tensor([0],"float64"), bias=Tensor([108],"float64"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([2, 6, 6, 3],"float64"), list[6,6,3,], weight=Tensor([108],"float64"), bias=Tensor([0],"float64"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([20, 0, 60, 30],"float32"), list[10,60,30,], weight=Tensor([18000],"float32"), bias=Tensor([18000],"float32"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([20, 0, 60, 70],"float32"), list[60,70,], weight=Tensor([4200],"float32"), bias=Tensor([4200],"float32"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([20, 10, 0, 30],"float32"), list[10,60,30,], weight=Tensor([18000],"float32"), bias=Tensor([18000],"float32"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([20, 10, 0, 70],"float32"), list[60,70,], weight=Tensor([4200],"float32"), bias=Tensor([4200],"float32"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([20, 10, 60, 0],"float32"), list[10,60,30,], weight=Tensor([18000],"float32"), bias=Tensor([18000],"float32"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([20, 10, 60, 0],"float32"), list[60,70,], weight=Tensor([4200],"float32"), bias=Tensor([4200],"float32"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([20, 10, 60, 30],"float32"), list[10,60,30,], weight=Tensor([0],"float32"), bias=Tensor([18000],"float32"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([20, 10, 60, 30],"float32"), list[10,60,30,], weight=Tensor([18000],"float32"), bias=Tensor([0],"float32"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([20, 10, 60, 70],"float32"), list[60,70,], weight=Tensor([0],"float32"), bias=Tensor([4200],"float32"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([20, 10, 60, 70],"float32"), list[60,70,], weight=Tensor([4200],"float32"), bias=Tensor([0],"float32"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([4, 0, 4, 4],"float32"), 4, )
paddle.nn.functional.layer_norm(Tensor([4, 10, 0, 4],"float32"), 4, )
paddle.nn.functional.layer_norm(Tensor([4, 10, 4, 0],"float32"), 4, )
paddle.nn.functional.layer_norm(Tensor([64, 0, 128],"float32"), list[64,128,], Tensor([8192],"float32"), Tensor([8192],"float32"), )
paddle.nn.functional.layer_norm(Tensor([64, 64, 0],"float32"), list[64,128,], Tensor([8192],"float32"), Tensor([8192],"float32"), )
paddle.nn.functional.layer_norm(Tensor([64, 64, 128],"float32"), list[64,128,], Tensor([0],"float32"), Tensor([8192],"float32"), )
paddle.nn.functional.layer_norm(Tensor([64, 64, 128],"float32"), list[64,128,], Tensor([8192],"float32"), Tensor([0],"float32"), )
paddle.nn.functional.layer_norm(Tensor([7, 0, 1024],"float32"), 1024, weight=Tensor([1024],"float32"), bias=Tensor([1024],"float32"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([7, 165, 0],"float32"), 1024, weight=Tensor([1024],"float32"), bias=Tensor([1024],"float32"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([7, 165, 1024],"float32"), 1024, weight=Tensor([0],"float32"), bias=Tensor([1024],"float32"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([7, 165, 1024],"float32"), 1024, weight=Tensor([1024],"float32"), bias=Tensor([0],"float32"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([7, 186, 0],"float32"), 1024, weight=Tensor([1024],"float32"), bias=Tensor([1024],"float32"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([7, 186, 1024],"float32"), 1024, weight=Tensor([0],"float32"), bias=Tensor([1024],"float32"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([7, 186, 1024],"float32"), 1024, weight=Tensor([1024],"float32"), bias=Tensor([0],"float32"), epsilon=1e-05, )
paddle.nn.functional.linear(Tensor([0, 1, 2],"float32"), Tensor([2, 2],"float32"), Tensor([2],"float32"), )
paddle.nn.functional.linear(Tensor([0, 1024, 2048],"float16"), Tensor([2048, 2048],"float16"), Tensor([2048],"float16"), name=None, )
paddle.nn.functional.linear(Tensor([0, 1024, 2048],"float16"), Tensor([2048, 6144],"float16"), Tensor([6144],"float16"), name=None, )
paddle.nn.functional.linear(Tensor([0, 128, 256],"float32"), weight=Tensor([256, 256],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.linear(Tensor([0, 17],"float16"), Tensor([17],"float16"), )
paddle.nn.functional.linear(Tensor([0, 17],"float32"), Tensor([17],"float32"), )
paddle.nn.functional.linear(Tensor([0, 2, 2],"float32"), Tensor([2, 2],"float32"), bias=None, )
paddle.nn.functional.linear(Tensor([0, 2, 2],"float32"), Tensor([2, 4],"float32"), bias=Tensor([4],"float32"), )
paddle.nn.functional.linear(Tensor([0, 2, 4],"float32"), Tensor([4, 2],"float32"), bias=Tensor([2],"float32"), )
paddle.nn.functional.linear(Tensor([0, 2],"float32"), Tensor([0, 4],"float32"), )
paddle.nn.functional.linear(Tensor([0, 2],"float32"), Tensor([2, 4],"float32"), )
paddle.nn.functional.linear(Tensor([0, 2],"float32"), Tensor([2, 4],"float32"), Tensor([4],"float32"), )
paddle.nn.functional.linear(Tensor([0, 2],"float64"), Tensor([2, 4],"float64"), Tensor([4],"float64"), )
paddle.nn.functional.linear(Tensor([0, 396, 384],"float16"), Tensor([384, 768],"float16"), name=None, )
paddle.nn.functional.linear(Tensor([0, 396, 5504],"float16"), Tensor([5504, 768],"float16"), name=None, )
paddle.nn.functional.linear(Tensor([0, 396, 768],"float16"), Tensor([768, 384],"float16"), None, name=None, )
paddle.nn.functional.linear(Tensor([0, 396, 768],"float16"), Tensor([768, 5504],"float16"), None, name=None, )
paddle.nn.functional.linear(Tensor([0, 512],"float32"), Tensor([0, 512],"float32"), )
paddle.nn.functional.linear(Tensor([0, 512],"float32"), Tensor([512, 128],"float32"), bias=Tensor([128],"float32"), )
paddle.nn.functional.linear(Tensor([0, 512],"float32"), Tensor([512, 256],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.linear(Tensor([0, 512],"float32"), Tensor([512, 512],"float32"), )
paddle.nn.functional.linear(Tensor([0, 64, 3072],"float16"), Tensor([3072, 768],"float16"), Tensor([768],"float16"), )
paddle.nn.functional.linear(Tensor([0, 64],"float32"), Tensor([0, 60],"float32"), None, )
paddle.nn.functional.linear(Tensor([0, 64],"float32"), Tensor([64, 60],"float32"), None, )
paddle.nn.functional.linear(Tensor([1, 0, 2],"float32"), Tensor([2, 2],"float32"), bias=None, )
paddle.nn.functional.linear(Tensor([1, 0, 2],"float32"), Tensor([2, 4],"float32"), bias=Tensor([4],"float32"), )
paddle.nn.functional.linear(Tensor([1, 0, 4],"float32"), Tensor([4, 2],"float32"), bias=Tensor([2],"float32"), )
paddle.nn.functional.linear(Tensor([1, 0],"float32"), Tensor([512, 0],"float32"), )
paddle.nn.functional.linear(Tensor([1, 0],"float32"), Tensor([512, 128],"float32"), bias=Tensor([128],"float32"), )
paddle.nn.functional.linear(Tensor([1, 0],"float32"), Tensor([512, 256],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.linear(Tensor([1, 0],"float32"), Tensor([512, 512],"float32"), )
paddle.nn.functional.linear(Tensor([1, 2, 0],"float32"), Tensor([2, 2],"float32"), bias=None, )
paddle.nn.functional.linear(Tensor([1, 2, 0],"float32"), Tensor([2, 4],"float32"), bias=Tensor([4],"float32"), )
paddle.nn.functional.linear(Tensor([1, 2, 0],"float32"), Tensor([4, 2],"float32"), bias=Tensor([2],"float32"), )
paddle.nn.functional.linear(Tensor([1, 2, 2],"float32"), Tensor([0, 2],"float32"), bias=None, )
paddle.nn.functional.linear(Tensor([1, 2, 2],"float32"), Tensor([0, 4],"float32"), bias=Tensor([4],"float32"), )
paddle.nn.functional.linear(Tensor([1, 2, 2],"float32"), Tensor([2, 0],"float32"), bias=None, )
paddle.nn.functional.linear(Tensor([1, 2, 2],"float32"), Tensor([2, 0],"float32"), bias=Tensor([4],"float32"), )
paddle.nn.functional.linear(Tensor([1, 2, 2],"float32"), Tensor([2, 4],"float32"), bias=Tensor([0],"float32"), )
paddle.nn.functional.linear(Tensor([1, 2, 4],"float32"), Tensor([0, 2],"float32"), bias=Tensor([2],"float32"), )
paddle.nn.functional.linear(Tensor([1, 2, 4],"float32"), Tensor([4, 0],"float32"), bias=Tensor([2],"float32"), )
paddle.nn.functional.linear(Tensor([1, 2, 4],"float32"), Tensor([4, 2],"float32"), bias=Tensor([0],"float32"), )
paddle.nn.functional.linear(Tensor([1, 512],"float32"), Tensor([0, 128],"float32"), bias=Tensor([128],"float32"), )
paddle.nn.functional.linear(Tensor([1, 512],"float32"), Tensor([0, 256],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.linear(Tensor([1, 512],"float32"), Tensor([0, 512],"float32"), )
paddle.nn.functional.linear(Tensor([1, 512],"float32"), Tensor([512, 0],"float32"), )
paddle.nn.functional.linear(Tensor([1, 512],"float32"), Tensor([512, 0],"float32"), bias=Tensor([128],"float32"), )
paddle.nn.functional.linear(Tensor([1, 512],"float32"), Tensor([512, 0],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.linear(Tensor([1, 512],"float32"), Tensor([512, 128],"float32"), bias=Tensor([0],"float32"), )
paddle.nn.functional.linear(Tensor([1, 512],"float32"), Tensor([512, 256],"float32"), bias=Tensor([0],"float32"), )
paddle.nn.functional.linear(Tensor([10, 0],"float32"), Tensor([64, 0],"float32"), None, )
paddle.nn.functional.linear(Tensor([10, 0],"float32"), Tensor([64, 60],"float32"), None, )
paddle.nn.functional.linear(Tensor([10, 64],"float32"), Tensor([0, 60],"float32"), None, )
paddle.nn.functional.linear(Tensor([10, 64],"float32"), Tensor([64, 0],"float32"), None, )
paddle.nn.functional.linear(Tensor([100, 0],"float16"), Tensor([17],"float16"), )
paddle.nn.functional.linear(Tensor([100, 0],"float32"), Tensor([17],"float32"), )
paddle.nn.functional.linear(Tensor([100, 17],"float16"), Tensor([0],"float16"), )
paddle.nn.functional.linear(Tensor([100, 17],"float32"), Tensor([0],"float32"), )
paddle.nn.functional.linear(Tensor([2, 0, 3072],"float16"), Tensor([3072, 768],"float16"), Tensor([768],"float16"), )
paddle.nn.functional.linear(Tensor([2, 0],"float32"), Tensor([64, 0],"float32"), None, )
paddle.nn.functional.linear(Tensor([2, 0],"float32"), Tensor([64, 60],"float32"), None, )
paddle.nn.functional.linear(Tensor([2, 64, 0],"float16"), Tensor([3072, 768],"float16"), Tensor([768],"float16"), )
paddle.nn.functional.linear(Tensor([2, 64, 3072],"float16"), Tensor([0, 768],"float16"), Tensor([768],"float16"), )
paddle.nn.functional.linear(Tensor([2, 64, 3072],"float16"), Tensor([3072, 0],"float16"), Tensor([768],"float16"), )
paddle.nn.functional.linear(Tensor([2, 64, 3072],"float16"), Tensor([3072, 768],"float16"), Tensor([0],"float16"), )
paddle.nn.functional.linear(Tensor([2, 64],"float32"), Tensor([0, 60],"float32"), None, )
paddle.nn.functional.linear(Tensor([2, 64],"float32"), Tensor([64, 0],"float32"), None, )
paddle.nn.functional.linear(Tensor([3, 0, 2],"float32"), Tensor([2, 2],"float32"), Tensor([2],"float32"), )
paddle.nn.functional.linear(Tensor([3, 0],"float32"), Tensor([2, 0],"float32"), )
paddle.nn.functional.linear(Tensor([3, 0],"float32"), Tensor([2, 4],"float32"), )
paddle.nn.functional.linear(Tensor([3, 0],"float32"), Tensor([2, 4],"float32"), Tensor([4],"float32"), )
paddle.nn.functional.linear(Tensor([3, 0],"float64"), Tensor([2, 4],"float64"), Tensor([4],"float64"), )
paddle.nn.functional.linear(Tensor([3, 1, 0],"float32"), Tensor([2, 2],"float32"), Tensor([2],"float32"), )
paddle.nn.functional.linear(Tensor([3, 1, 2],"float32"), Tensor([0, 2],"float32"), Tensor([2],"float32"), )
paddle.nn.functional.linear(Tensor([3, 1, 2],"float32"), Tensor([2, 0],"float32"), Tensor([2],"float32"), )
paddle.nn.functional.linear(Tensor([3, 1, 2],"float32"), Tensor([2, 2],"float32"), Tensor([0],"float32"), )
paddle.nn.functional.linear(Tensor([3, 2],"float32"), Tensor([0, 4],"float32"), )
paddle.nn.functional.linear(Tensor([3, 2],"float32"), Tensor([0, 4],"float32"), Tensor([4],"float32"), )
paddle.nn.functional.linear(Tensor([3, 2],"float32"), Tensor([2, 0],"float32"), )
paddle.nn.functional.linear(Tensor([3, 2],"float32"), Tensor([2, 0],"float32"), Tensor([4],"float32"), )
paddle.nn.functional.linear(Tensor([3, 2],"float32"), Tensor([2, 4],"float32"), Tensor([0],"float32"), )
paddle.nn.functional.linear(Tensor([3, 2],"float64"), Tensor([0, 4],"float64"), Tensor([4],"float64"), )
paddle.nn.functional.linear(Tensor([3, 2],"float64"), Tensor([2, 0],"float64"), Tensor([4],"float64"), )
paddle.nn.functional.linear(Tensor([3, 2],"float64"), Tensor([2, 4],"float64"), Tensor([0],"float64"), )
paddle.nn.functional.linear(Tensor([4, 0, 384],"float16"), Tensor([384, 768],"float16"), name=None, )
paddle.nn.functional.linear(Tensor([4, 0, 5504],"float16"), Tensor([5504, 768],"float16"), name=None, )
paddle.nn.functional.linear(Tensor([4, 0, 768],"float16"), Tensor([768, 384],"float16"), None, name=None, )
paddle.nn.functional.linear(Tensor([4, 0, 768],"float16"), Tensor([768, 5504],"float16"), None, name=None, )
paddle.nn.functional.linear(Tensor([4, 396, 0],"float16"), Tensor([384, 768],"float16"), name=None, )
paddle.nn.functional.linear(Tensor([4, 396, 0],"float16"), Tensor([5504, 768],"float16"), name=None, )
paddle.nn.functional.linear(Tensor([4, 396, 0],"float16"), Tensor([768, 384],"float16"), None, name=None, )
paddle.nn.functional.linear(Tensor([4, 396, 0],"float16"), Tensor([768, 5504],"float16"), None, name=None, )
paddle.nn.functional.linear(Tensor([4, 396, 384],"float16"), Tensor([0, 768],"float16"), name=None, )
paddle.nn.functional.linear(Tensor([4, 396, 384],"float16"), Tensor([384, 0],"float16"), name=None, )
paddle.nn.functional.linear(Tensor([4, 396, 5504],"float16"), Tensor([0, 768],"float16"), name=None, )
paddle.nn.functional.linear(Tensor([4, 396, 5504],"float16"), Tensor([5504, 0],"float16"), name=None, )
paddle.nn.functional.linear(Tensor([4, 396, 768],"float16"), Tensor([0, 384],"float16"), None, name=None, )
paddle.nn.functional.linear(Tensor([4, 396, 768],"float16"), Tensor([0, 5504],"float16"), None, name=None, )
paddle.nn.functional.linear(Tensor([4, 396, 768],"float16"), Tensor([768, 0],"float16"), None, name=None, )
paddle.nn.functional.linear(Tensor([8, 0, 2048],"float16"), Tensor([2048, 2048],"float16"), Tensor([2048],"float16"), name=None, )
paddle.nn.functional.linear(Tensor([8, 0, 2048],"float16"), Tensor([2048, 6144],"float16"), Tensor([6144],"float16"), name=None, )
paddle.nn.functional.linear(Tensor([8, 0, 256],"float32"), weight=Tensor([256, 256],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.linear(Tensor([8, 1024, 0],"float16"), Tensor([2048, 2048],"float16"), Tensor([2048],"float16"), name=None, )
paddle.nn.functional.linear(Tensor([8, 1024, 0],"float16"), Tensor([2048, 6144],"float16"), Tensor([6144],"float16"), name=None, )
paddle.nn.functional.linear(Tensor([8, 1024, 2048],"float16"), Tensor([0, 2048],"float16"), Tensor([2048],"float16"), name=None, )
paddle.nn.functional.linear(Tensor([8, 1024, 2048],"float16"), Tensor([0, 6144],"float16"), Tensor([6144],"float16"), name=None, )
paddle.nn.functional.linear(Tensor([8, 1024, 2048],"float16"), Tensor([2048, 0],"float16"), Tensor([2048],"float16"), name=None, )
paddle.nn.functional.linear(Tensor([8, 1024, 2048],"float16"), Tensor([2048, 0],"float16"), Tensor([6144],"float16"), name=None, )
paddle.nn.functional.linear(Tensor([8, 1024, 2048],"float16"), Tensor([2048, 2048],"float16"), Tensor([0],"float16"), name=None, )
paddle.nn.functional.linear(Tensor([8, 1024, 2048],"float16"), Tensor([2048, 6144],"float16"), Tensor([0],"float16"), name=None, )
paddle.nn.functional.linear(Tensor([8, 128, 0],"float32"), weight=Tensor([256, 256],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.linear(Tensor([8, 128, 256],"float32"), weight=Tensor([0, 256],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.linear(Tensor([8, 128, 256],"float32"), weight=Tensor([256, 0],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.linear(Tensor([8, 128, 256],"float32"), weight=Tensor([256, 256],"float32"), bias=Tensor([0],"float32"), )
paddle.nn.functional.linear(x=Tensor([0, 1, 1, 7, 7, 512],"float16"), weight=Tensor([512, 1536],"float16"), bias=Tensor([1536],"float16"), name=None, )
paddle.nn.functional.linear(x=Tensor([0, 1, 1, 7, 7, 512],"float32"), weight=Tensor([512, 1536],"float32"), bias=Tensor([1536],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([0, 1, 1000],"float16"), weight=Tensor([1000, 64],"float16"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([0, 1, 1000],"float32"), weight=Tensor([1000, 64],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([0, 1, 1024],"float32"), weight=Tensor([1024, 1024],"float32"), bias=Tensor([1024],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([0, 1, 1024],"float32"), weight=Tensor([1024, 256],"float32"), bias=Tensor([256],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([0, 10],"float16"), weight=Tensor([0, 10],"float16"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([0, 10],"float16"), weight=Tensor([10, 10],"float16"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([0, 10],"float32"), weight=Tensor([0, 10],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([0, 10],"float32"), weight=Tensor([10, 10],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([0, 1024, 1024],"float32"), weight=Tensor([1024, 1024],"float32"), bias=Tensor([1024],"float32"), )
paddle.nn.functional.linear(x=Tensor([0, 1024],"float32"), weight=Tensor([1024, 1000],"float32"), bias=Tensor([1000],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([0, 1024],"float32"), weight=Tensor([1024, 50],"float32"), bias=Tensor([50],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([0, 11, 256],"float32"), weight=Tensor([256, 256],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.linear(x=Tensor([0, 16, 14, 14, 1536],"float16"), weight=Tensor([1536, 384],"float16"), bias=Tensor([384],"float16"), name=None, )
paddle.nn.functional.linear(x=Tensor([0, 16, 14, 14, 1536],"float32"), weight=Tensor([1536, 384],"float32"), bias=Tensor([384],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([0, 16, 14, 14, 768],"float16"), weight=Tensor([768, 384],"float16"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([0, 16, 14, 14, 768],"float32"), weight=Tensor([768, 384],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([0, 16],"float32"), weight=Tensor([0, 8],"float32"), )
paddle.nn.functional.linear(x=Tensor([0, 16],"float32"), weight=Tensor([0, 8],"float32"), bias=None, )
paddle.nn.functional.linear(x=Tensor([0, 16],"float32"), weight=Tensor([16, 8],"float32"), )
paddle.nn.functional.linear(x=Tensor([0, 16],"float32"), weight=Tensor([16, 8],"float32"), bias=None, )
paddle.nn.functional.linear(x=Tensor([0, 2, 7, 32],"float32"), weight=Tensor([32, 99],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([0, 3, 3, 5],"float32"), weight=Tensor([5, 1],"float32"), bias=Tensor([1],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([0, 56, 56, 32],"float32"), weight=Tensor([32, 4],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([0, 56, 56, 64],"float32"), weight=Tensor([64, 4],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([0, 6, 4, 4],"float32"), weight=Tensor([4, 4],"float32"), bias=Tensor([4],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([0, 8],"float32"), weight=Tensor([0, 3],"float32"), bias=None, )
paddle.nn.functional.linear(x=Tensor([0, 8],"float32"), weight=Tensor([0, 5],"float32"), )
paddle.nn.functional.linear(x=Tensor([0, 8],"float32"), weight=Tensor([8, 3],"float32"), bias=None, )
paddle.nn.functional.linear(x=Tensor([0, 8],"float32"), weight=Tensor([8, 5],"float32"), )
paddle.nn.functional.linear(x=Tensor([0, 8],"float32"), weight=Tensor([8, 6],"float32"), bias=Tensor([6],"float32"), )
paddle.nn.functional.linear(x=Tensor([0],"float32"), weight=Tensor([10, 1],"float32"), bias=Tensor([1],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([0],"float32"), weight=Tensor([10, 10],"float32"), bias=Tensor([10],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([0],"float32"), weight=Tensor([14336, 64],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([0],"float32"), weight=Tensor([64, 14336],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([1, 0, 1000],"float16"), weight=Tensor([1000, 64],"float16"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([1, 0, 1000],"float32"), weight=Tensor([1000, 64],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([1, 0, 1024],"float32"), weight=Tensor([1024, 1024],"float32"), bias=Tensor([1024],"float32"), )
paddle.nn.functional.linear(x=Tensor([1, 0, 1024],"float32"), weight=Tensor([1024, 1024],"float32"), bias=Tensor([1024],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 0, 1024],"float32"), weight=Tensor([1024, 256],"float32"), bias=Tensor([256],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 0, 14, 14, 1536],"float16"), weight=Tensor([1536, 384],"float16"), bias=Tensor([384],"float16"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 0, 14, 14, 1536],"float32"), weight=Tensor([1536, 384],"float32"), bias=Tensor([384],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 0, 14, 14, 768],"float16"), weight=Tensor([768, 384],"float16"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([1, 0, 14, 14, 768],"float32"), weight=Tensor([768, 384],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([1, 0, 256],"float32"), weight=Tensor([256, 256],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.linear(x=Tensor([1, 0, 3, 5],"float32"), weight=Tensor([5, 1],"float32"), bias=Tensor([1],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 0, 4, 4],"float32"), weight=Tensor([4, 4],"float32"), bias=Tensor([4],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 0],"float16"), weight=Tensor([10, 0],"float16"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([1, 0],"float16"), weight=Tensor([10, 10],"float16"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([1, 0],"float32"), weight=Tensor([10, 0],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([1, 0],"float32"), weight=Tensor([10, 10],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([1, 0],"float32"), weight=Tensor([1024, 1000],"float32"), bias=Tensor([1000],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 0],"float32"), weight=Tensor([1024, 50],"float32"), bias=Tensor([50],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 1, 0],"float16"), weight=Tensor([1000, 64],"float16"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([1, 1, 0],"float32"), weight=Tensor([1000, 64],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([1, 1, 0],"float32"), weight=Tensor([1024, 1024],"float32"), bias=Tensor([1024],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 1, 0],"float32"), weight=Tensor([1024, 256],"float32"), bias=Tensor([256],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 1, 1000],"float16"), weight=Tensor([0, 64],"float16"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([1, 1, 1000],"float16"), weight=Tensor([1000, 0],"float16"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([1, 1, 1000],"float32"), weight=Tensor([0, 64],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([1, 1, 1000],"float32"), weight=Tensor([1000, 0],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([1, 1, 1024],"float32"), weight=Tensor([0, 1024],"float32"), bias=Tensor([1024],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 1, 1024],"float32"), weight=Tensor([0, 256],"float32"), bias=Tensor([256],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 1, 1024],"float32"), weight=Tensor([1024, 0],"float32"), bias=Tensor([1024],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 1, 1024],"float32"), weight=Tensor([1024, 0],"float32"), bias=Tensor([256],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 1, 1024],"float32"), weight=Tensor([1024, 1024],"float32"), bias=Tensor([0],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 1, 1024],"float32"), weight=Tensor([1024, 256],"float32"), bias=Tensor([0],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 10],"float16"), weight=Tensor([0, 10],"float16"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([1, 10],"float16"), weight=Tensor([10, 0],"float16"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([1, 10],"float32"), weight=Tensor([0, 10],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([1, 10],"float32"), weight=Tensor([10, 0],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([1, 1024, 0],"float32"), weight=Tensor([1024, 1024],"float32"), bias=Tensor([1024],"float32"), )
paddle.nn.functional.linear(x=Tensor([1, 1024, 1024],"float32"), weight=Tensor([0, 1024],"float32"), bias=Tensor([1024],"float32"), )
paddle.nn.functional.linear(x=Tensor([1, 1024, 1024],"float32"), weight=Tensor([1024, 0],"float32"), bias=Tensor([1024],"float32"), )
paddle.nn.functional.linear(x=Tensor([1, 1024, 1024],"float32"), weight=Tensor([1024, 1024],"float32"), bias=Tensor([0],"float32"), )
paddle.nn.functional.linear(x=Tensor([1, 1024],"float32"), weight=Tensor([0, 1000],"float32"), bias=Tensor([1000],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 1024],"float32"), weight=Tensor([0, 50],"float32"), bias=Tensor([50],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 1024],"float32"), weight=Tensor([1024, 0],"float32"), bias=Tensor([1000],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 1024],"float32"), weight=Tensor([1024, 0],"float32"), bias=Tensor([50],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 1024],"float32"), weight=Tensor([1024, 1000],"float32"), bias=Tensor([0],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 1024],"float32"), weight=Tensor([1024, 50],"float32"), bias=Tensor([0],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 11, 0],"float32"), weight=Tensor([256, 256],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.linear(x=Tensor([1, 11, 256],"float32"), weight=Tensor([0, 256],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.linear(x=Tensor([1, 11, 256],"float32"), weight=Tensor([256, 0],"float32"), bias=Tensor([256],"float32"), )
paddle.nn.functional.linear(x=Tensor([1, 11, 256],"float32"), weight=Tensor([256, 256],"float32"), bias=Tensor([0],"float32"), )
paddle.nn.functional.linear(x=Tensor([1, 16, 0, 14, 1536],"float16"), weight=Tensor([1536, 384],"float16"), bias=Tensor([384],"float16"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 16, 0, 14, 1536],"float32"), weight=Tensor([1536, 384],"float32"), bias=Tensor([384],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 16, 0, 14, 768],"float16"), weight=Tensor([768, 384],"float16"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([1, 16, 0, 14, 768],"float32"), weight=Tensor([768, 384],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([1, 16, 14, 0, 1536],"float16"), weight=Tensor([1536, 384],"float16"), bias=Tensor([384],"float16"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 16, 14, 0, 1536],"float32"), weight=Tensor([1536, 384],"float32"), bias=Tensor([384],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 16, 14, 0, 768],"float16"), weight=Tensor([768, 384],"float16"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([1, 16, 14, 0, 768],"float32"), weight=Tensor([768, 384],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([1, 16, 14, 14, 0],"float16"), weight=Tensor([1536, 384],"float16"), bias=Tensor([384],"float16"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 16, 14, 14, 0],"float16"), weight=Tensor([768, 384],"float16"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([1, 16, 14, 14, 0],"float32"), weight=Tensor([1536, 384],"float32"), bias=Tensor([384],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 16, 14, 14, 0],"float32"), weight=Tensor([768, 384],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([1, 16, 14, 14, 1536],"float16"), weight=Tensor([0, 384],"float16"), bias=Tensor([384],"float16"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 16, 14, 14, 1536],"float16"), weight=Tensor([1536, 0],"float16"), bias=Tensor([384],"float16"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 16, 14, 14, 1536],"float16"), weight=Tensor([1536, 384],"float16"), bias=Tensor([0],"float16"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 16, 14, 14, 1536],"float32"), weight=Tensor([0, 384],"float32"), bias=Tensor([384],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 16, 14, 14, 1536],"float32"), weight=Tensor([1536, 0],"float32"), bias=Tensor([384],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 16, 14, 14, 1536],"float32"), weight=Tensor([1536, 384],"float32"), bias=Tensor([0],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 16, 14, 14, 768],"float16"), weight=Tensor([0, 384],"float16"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([1, 16, 14, 14, 768],"float16"), weight=Tensor([768, 0],"float16"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([1, 16, 14, 14, 768],"float32"), weight=Tensor([0, 384],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([1, 16, 14, 14, 768],"float32"), weight=Tensor([768, 0],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([1, 3, 0, 5],"float32"), weight=Tensor([5, 1],"float32"), bias=Tensor([1],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 3, 3, 0],"float32"), weight=Tensor([5, 1],"float32"), bias=Tensor([1],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 3, 3, 5],"float32"), weight=Tensor([0, 1],"float32"), bias=Tensor([1],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 3, 3, 5],"float32"), weight=Tensor([5, 0],"float32"), bias=Tensor([1],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 3, 3, 5],"float32"), weight=Tensor([5, 1],"float32"), bias=Tensor([0],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 6, 0, 4],"float32"), weight=Tensor([4, 4],"float32"), bias=Tensor([4],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 6, 4, 0],"float32"), weight=Tensor([4, 4],"float32"), bias=Tensor([4],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 6, 4, 4],"float32"), weight=Tensor([0, 4],"float32"), bias=Tensor([4],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 6, 4, 4],"float32"), weight=Tensor([4, 0],"float32"), bias=Tensor([4],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 6, 4, 4],"float32"), weight=Tensor([4, 4],"float32"), bias=Tensor([0],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([10],"float32"), weight=Tensor([0, 1],"float32"), bias=Tensor([1],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([10],"float32"), weight=Tensor([0, 10],"float32"), bias=Tensor([10],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([10],"float32"), weight=Tensor([10, 0],"float32"), bias=Tensor([1],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([10],"float32"), weight=Tensor([10, 0],"float32"), bias=Tensor([10],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([10],"float32"), weight=Tensor([10, 1],"float32"), bias=Tensor([0],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([10],"float32"), weight=Tensor([10, 10],"float32"), bias=Tensor([0],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([128, 0, 1, 7, 7, 512],"float16"), weight=Tensor([512, 1536],"float16"), bias=Tensor([1536],"float16"), name=None, )
paddle.nn.functional.linear(x=Tensor([128, 0, 1, 7, 7, 512],"float32"), weight=Tensor([512, 1536],"float32"), bias=Tensor([1536],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([128, 0],"float32"), weight=Tensor([16, 0],"float32"), bias=None, )
paddle.nn.functional.linear(x=Tensor([128, 0],"float32"), weight=Tensor([16, 8],"float32"), bias=None, )
paddle.nn.functional.linear(x=Tensor([128, 1, 0, 7, 7, 512],"float16"), weight=Tensor([512, 1536],"float16"), bias=Tensor([1536],"float16"), name=None, )
paddle.nn.functional.linear(x=Tensor([128, 1, 0, 7, 7, 512],"float32"), weight=Tensor([512, 1536],"float32"), bias=Tensor([1536],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([128, 1, 1, 0, 7, 512],"float16"), weight=Tensor([512, 1536],"float16"), bias=Tensor([1536],"float16"), name=None, )
paddle.nn.functional.linear(x=Tensor([128, 1, 1, 0, 7, 512],"float32"), weight=Tensor([512, 1536],"float32"), bias=Tensor([1536],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([128, 1, 1, 7, 0, 512],"float16"), weight=Tensor([512, 1536],"float16"), bias=Tensor([1536],"float16"), name=None, )
paddle.nn.functional.linear(x=Tensor([128, 1, 1, 7, 0, 512],"float32"), weight=Tensor([512, 1536],"float32"), bias=Tensor([1536],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([128, 1, 1, 7, 7, 0],"float16"), weight=Tensor([512, 1536],"float16"), bias=Tensor([1536],"float16"), name=None, )
paddle.nn.functional.linear(x=Tensor([128, 1, 1, 7, 7, 0],"float32"), weight=Tensor([512, 1536],"float32"), bias=Tensor([1536],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([128, 1, 1, 7, 7, 512],"float16"), weight=Tensor([0, 1536],"float16"), bias=Tensor([1536],"float16"), name=None, )
paddle.nn.functional.linear(x=Tensor([128, 1, 1, 7, 7, 512],"float16"), weight=Tensor([512, 0],"float16"), bias=Tensor([1536],"float16"), name=None, )
paddle.nn.functional.linear(x=Tensor([128, 1, 1, 7, 7, 512],"float16"), weight=Tensor([512, 1536],"float16"), bias=Tensor([0],"float16"), name=None, )
paddle.nn.functional.linear(x=Tensor([128, 1, 1, 7, 7, 512],"float32"), weight=Tensor([0, 1536],"float32"), bias=Tensor([1536],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([128, 1, 1, 7, 7, 512],"float32"), weight=Tensor([512, 0],"float32"), bias=Tensor([1536],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([128, 1, 1, 7, 7, 512],"float32"), weight=Tensor([512, 1536],"float32"), bias=Tensor([0],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([128, 16],"float32"), weight=Tensor([0, 8],"float32"), bias=None, )
paddle.nn.functional.linear(x=Tensor([128, 16],"float32"), weight=Tensor([16, 0],"float32"), bias=None, )
paddle.nn.functional.linear(x=Tensor([13, 0, 56, 32],"float32"), weight=Tensor([32, 4],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([13, 0, 56, 64],"float32"), weight=Tensor([64, 4],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([13, 0, 7, 32],"float32"), weight=Tensor([32, 99],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([13, 2, 0, 32],"float32"), weight=Tensor([32, 99],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([13, 2, 7, 0],"float32"), weight=Tensor([32, 99],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([13, 2, 7, 32],"float32"), weight=Tensor([0, 99],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([13, 2, 7, 32],"float32"), weight=Tensor([32, 0],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([13, 56, 0, 32],"float32"), weight=Tensor([32, 4],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([13, 56, 0, 64],"float32"), weight=Tensor([64, 4],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([13, 56, 56, 0],"float32"), weight=Tensor([32, 4],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([13, 56, 56, 0],"float32"), weight=Tensor([64, 4],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([13, 56, 56, 32],"float32"), weight=Tensor([0, 4],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([13, 56, 56, 32],"float32"), weight=Tensor([32, 0],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([13, 56, 56, 64],"float32"), weight=Tensor([0, 4],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([13, 56, 56, 64],"float32"), weight=Tensor([64, 0],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([14336],"float32"), weight=Tensor([0, 64],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([14336],"float32"), weight=Tensor([14336, 0],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([28, 0],"float32"), weight=Tensor([16, 0],"float32"), )
paddle.nn.functional.linear(x=Tensor([28, 0],"float32"), weight=Tensor([16, 8],"float32"), )
paddle.nn.functional.linear(x=Tensor([28, 0],"float32"), weight=Tensor([8, 0],"float32"), )
paddle.nn.functional.linear(x=Tensor([28, 0],"float32"), weight=Tensor([8, 5],"float32"), )
paddle.nn.functional.linear(x=Tensor([28, 16],"float32"), weight=Tensor([0, 8],"float32"), )
paddle.nn.functional.linear(x=Tensor([28, 16],"float32"), weight=Tensor([16, 0],"float32"), )
paddle.nn.functional.linear(x=Tensor([28, 8],"float32"), weight=Tensor([0, 5],"float32"), )
paddle.nn.functional.linear(x=Tensor([28, 8],"float32"), weight=Tensor([8, 0],"float32"), )
paddle.nn.functional.linear(x=Tensor([4, 0],"float32"), weight=Tensor([8, 0],"float32"), bias=None, )
paddle.nn.functional.linear(x=Tensor([4, 0],"float32"), weight=Tensor([8, 3],"float32"), bias=None, )
paddle.nn.functional.linear(x=Tensor([4, 0],"float32"), weight=Tensor([8, 6],"float32"), bias=Tensor([6],"float32"), )
paddle.nn.functional.linear(x=Tensor([4, 8],"float32"), weight=Tensor([0, 3],"float32"), bias=None, )
paddle.nn.functional.linear(x=Tensor([4, 8],"float32"), weight=Tensor([0, 6],"float32"), bias=Tensor([6],"float32"), )
paddle.nn.functional.linear(x=Tensor([4, 8],"float32"), weight=Tensor([8, 0],"float32"), bias=None, )
paddle.nn.functional.linear(x=Tensor([4, 8],"float32"), weight=Tensor([8, 0],"float32"), bias=Tensor([6],"float32"), )
paddle.nn.functional.linear(x=Tensor([4, 8],"float32"), weight=Tensor([8, 6],"float32"), bias=Tensor([0],"float32"), )
paddle.nn.functional.linear(x=Tensor([64],"float32"), weight=Tensor([0, 14336],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([64],"float32"), weight=Tensor([64, 0],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=tuple(Tensor([0, 10],"float32"),), weight=Tensor([0, 10],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=tuple(Tensor([0, 10],"float32"),), weight=Tensor([10, 10],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=tuple(Tensor([0, 7, 32],"float32"),Tensor([13, 32],"float32"),), weight=Tensor([32, 32],"float32"), bias=Tensor([32],"float32"), name=None, )
paddle.nn.functional.linear(x=tuple(Tensor([0, 7, 32],"float32"),Tensor([13, 4, 7, 7],"float32"),), weight=Tensor([32, 32],"float32"), bias=Tensor([32],"float32"), name=None, )
paddle.nn.functional.linear(x=tuple(Tensor([1, 0],"float32"),), weight=Tensor([10, 0],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=tuple(Tensor([1, 0],"float32"),), weight=Tensor([10, 10],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=tuple(Tensor([1, 10],"float32"),), weight=Tensor([0, 10],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=tuple(Tensor([1, 10],"float32"),), weight=Tensor([10, 0],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=tuple(Tensor([13, 0, 32],"float32"),Tensor([13, 32],"float32"),), weight=Tensor([32, 32],"float32"), bias=Tensor([32],"float32"), name=None, )
paddle.nn.functional.linear(x=tuple(Tensor([13, 0, 32],"float32"),Tensor([13, 4, 7, 7],"float32"),), weight=Tensor([32, 32],"float32"), bias=Tensor([32],"float32"), name=None, )
paddle.nn.functional.linear(x=tuple(Tensor([13, 7, 0],"float32"),Tensor([13, 32],"float32"),), weight=Tensor([32, 32],"float32"), bias=Tensor([32],"float32"), name=None, )
paddle.nn.functional.linear(x=tuple(Tensor([13, 7, 0],"float32"),Tensor([13, 4, 7, 7],"float32"),), weight=Tensor([32, 32],"float32"), bias=Tensor([32],"float32"), name=None, )
paddle.nn.functional.linear(x=tuple(Tensor([13, 7, 32],"float32"),Tensor([0, 32],"float32"),), weight=Tensor([32, 32],"float32"), bias=Tensor([32],"float32"), name=None, )
paddle.nn.functional.linear(x=tuple(Tensor([13, 7, 32],"float32"),Tensor([0, 4, 7, 7],"float32"),), weight=Tensor([32, 32],"float32"), bias=Tensor([32],"float32"), name=None, )
paddle.nn.functional.linear(x=tuple(Tensor([13, 7, 32],"float32"),Tensor([13, 0, 7, 7],"float32"),), weight=Tensor([32, 32],"float32"), bias=Tensor([32],"float32"), name=None, )
paddle.nn.functional.linear(x=tuple(Tensor([13, 7, 32],"float32"),Tensor([13, 0],"float32"),), weight=Tensor([32, 32],"float32"), bias=Tensor([32],"float32"), name=None, )
paddle.nn.functional.linear(x=tuple(Tensor([13, 7, 32],"float32"),Tensor([13, 32],"float32"),), weight=Tensor([0, 32],"float32"), bias=Tensor([32],"float32"), name=None, )
paddle.nn.functional.linear(x=tuple(Tensor([13, 7, 32],"float32"),Tensor([13, 32],"float32"),), weight=Tensor([32, 0],"float32"), bias=Tensor([32],"float32"), name=None, )
paddle.nn.functional.linear(x=tuple(Tensor([13, 7, 32],"float32"),Tensor([13, 32],"float32"),), weight=Tensor([32, 32],"float32"), bias=Tensor([0],"float32"), name=None, )
paddle.nn.functional.linear(x=tuple(Tensor([13, 7, 32],"float32"),Tensor([13, 4, 0, 7],"float32"),), weight=Tensor([32, 32],"float32"), bias=Tensor([32],"float32"), name=None, )
paddle.nn.functional.linear(x=tuple(Tensor([13, 7, 32],"float32"),Tensor([13, 4, 7, 0],"float32"),), weight=Tensor([32, 32],"float32"), bias=Tensor([32],"float32"), name=None, )
paddle.nn.functional.linear(x=tuple(Tensor([13, 7, 32],"float32"),Tensor([13, 4, 7, 7],"float32"),), weight=Tensor([0, 32],"float32"), bias=Tensor([32],"float32"), name=None, )
paddle.nn.functional.linear(x=tuple(Tensor([13, 7, 32],"float32"),Tensor([13, 4, 7, 7],"float32"),), weight=Tensor([32, 0],"float32"), bias=Tensor([32],"float32"), name=None, )
paddle.nn.functional.linear(x=tuple(Tensor([13, 7, 32],"float32"),Tensor([13, 4, 7, 7],"float32"),), weight=Tensor([32, 32],"float32"), bias=Tensor([0],"float32"), name=None, )
paddle.nn.functional.local_response_norm(Tensor([0, 3, 40, 40],"float32"), 5, 0.0001, 0.75, 1.0, "NCHW", None, )
paddle.nn.functional.local_response_norm(Tensor([0, 40, 40, 3],"float32"), 5, 0.0001, 0.75, 1.0, "NHWC", None, )
paddle.nn.functional.local_response_norm(Tensor([3, 0, 40, 3],"float32"), 5, 0.0001, 0.75, 1.0, "NHWC", None, )
paddle.nn.functional.local_response_norm(Tensor([3, 0, 40, 40],"float32"), 5, 0.0001, 0.75, 1.0, "NCHW", None, )
paddle.nn.functional.local_response_norm(Tensor([3, 3, 0, 40],"float32"), 5, 0.0001, 0.75, 1.0, "NCHW", None, )
paddle.nn.functional.local_response_norm(Tensor([3, 3, 40, 0],"float32"), 5, 0.0001, 0.75, 1.0, "NCHW", None, )
paddle.nn.functional.local_response_norm(Tensor([3, 40, 0, 3],"float32"), 5, 0.0001, 0.75, 1.0, "NHWC", None, )
paddle.nn.functional.local_response_norm(Tensor([3, 40, 40, 0],"float32"), 5, 0.0001, 0.75, 1.0, "NHWC", None, )
paddle.nn.functional.local_response_norm(x=Tensor([0, 3, 3, 40, 40],"float32"), size=5, data_format="NCDHW", )
paddle.nn.functional.local_response_norm(x=Tensor([0, 3, 40, 40, 3],"float32"), size=5, data_format="NDHWC", )
paddle.nn.functional.local_response_norm(x=Tensor([0, 3, 40, 40],"float32"), size=5, data_format="NCHW", )
paddle.nn.functional.local_response_norm(x=Tensor([0, 40, 40, 3],"float32"), size=5, data_format="NHWC", )
paddle.nn.functional.local_response_norm(x=Tensor([0, 40, 40],"float32"), size=5, data_format="NCL", )
paddle.nn.functional.local_response_norm(x=Tensor([0, 40, 40],"float32"), size=5, data_format="NLC", )
paddle.nn.functional.local_response_norm(x=Tensor([3, 0, 3, 40, 40],"float32"), size=5, data_format="NCDHW", )
paddle.nn.functional.local_response_norm(x=Tensor([3, 0, 40, 3],"float32"), size=5, data_format="NHWC", )
paddle.nn.functional.local_response_norm(x=Tensor([3, 0, 40, 40, 3],"float32"), size=5, data_format="NDHWC", )
paddle.nn.functional.local_response_norm(x=Tensor([3, 0, 40, 40],"float32"), size=5, data_format="NCHW", )
paddle.nn.functional.local_response_norm(x=Tensor([3, 0, 40],"float32"), size=5, data_format="NCL", )
paddle.nn.functional.local_response_norm(x=Tensor([3, 0, 40],"float32"), size=5, data_format="NLC", )
paddle.nn.functional.local_response_norm(x=Tensor([3, 3, 0, 40, 3],"float32"), size=5, data_format="NDHWC", )
paddle.nn.functional.local_response_norm(x=Tensor([3, 3, 0, 40, 40],"float32"), size=5, data_format="NCDHW", )
paddle.nn.functional.local_response_norm(x=Tensor([3, 3, 0, 40],"float32"), size=5, data_format="NCHW", )
paddle.nn.functional.local_response_norm(x=Tensor([3, 3, 3, 0, 40],"float32"), size=5, data_format="NCDHW", )
paddle.nn.functional.local_response_norm(x=Tensor([3, 3, 3, 40, 0],"float32"), size=5, data_format="NCDHW", )
paddle.nn.functional.local_response_norm(x=Tensor([3, 3, 40, 0, 3],"float32"), size=5, data_format="NDHWC", )
paddle.nn.functional.local_response_norm(x=Tensor([3, 3, 40, 0],"float32"), size=5, data_format="NCHW", )
paddle.nn.functional.local_response_norm(x=Tensor([3, 3, 40, 40, 0],"float32"), size=5, data_format="NDHWC", )
paddle.nn.functional.local_response_norm(x=Tensor([3, 40, 0, 3],"float32"), size=5, data_format="NHWC", )
paddle.nn.functional.local_response_norm(x=Tensor([3, 40, 0],"float32"), size=5, data_format="NCL", )
paddle.nn.functional.local_response_norm(x=Tensor([3, 40, 0],"float32"), size=5, data_format="NLC", )
paddle.nn.functional.local_response_norm(x=Tensor([3, 40, 40, 0],"float32"), size=5, data_format="NHWC", )
paddle.nn.functional.log_loss(Tensor([0, 1],"float32"), label=Tensor([0, 1],"float32"), epsilon=0.0001, name=None, )
paddle.nn.functional.log_loss(Tensor([0, 1],"float32"), label=Tensor([10, 1],"float32"), epsilon=0.0001, name=None, )
paddle.nn.functional.log_loss(Tensor([0, 1],"float32"), Tensor([0, 1],"float32"), )
paddle.nn.functional.log_loss(Tensor([0, 1],"float32"), Tensor([128, 1],"float32"), )
paddle.nn.functional.log_loss(Tensor([0, 1],"float32"), Tensor([400, 1],"float32"), )
paddle.nn.functional.log_loss(Tensor([10, 0],"float32"), label=Tensor([10, 0],"float32"), epsilon=0.0001, name=None, )
paddle.nn.functional.log_loss(Tensor([10, 0],"float32"), label=Tensor([10, 1],"float32"), epsilon=0.0001, name=None, )
paddle.nn.functional.log_loss(Tensor([10, 1],"float32"), label=Tensor([0, 1],"float32"), epsilon=0.0001, name=None, )
paddle.nn.functional.log_loss(Tensor([10, 1],"float32"), label=Tensor([10, 0],"float32"), epsilon=0.0001, name=None, )
paddle.nn.functional.log_loss(Tensor([128, 0],"float32"), Tensor([128, 0],"float32"), )
paddle.nn.functional.log_loss(Tensor([128, 0],"float32"), Tensor([128, 1],"float32"), )
paddle.nn.functional.log_loss(Tensor([128, 1],"float32"), Tensor([0, 1],"float32"), )
paddle.nn.functional.log_loss(Tensor([128, 1],"float32"), Tensor([128, 0],"float32"), )
paddle.nn.functional.log_loss(Tensor([400, 0],"float32"), Tensor([400, 0],"float32"), )
paddle.nn.functional.log_loss(Tensor([400, 0],"float32"), Tensor([400, 1],"float32"), )
paddle.nn.functional.log_loss(Tensor([400, 1],"float32"), Tensor([0, 1],"float32"), )
paddle.nn.functional.log_loss(Tensor([400, 1],"float32"), Tensor([400, 0],"float32"), )
paddle.nn.functional.log_softmax(Tensor([0, 1000],"float16"), axis=-1, )
paddle.nn.functional.log_softmax(Tensor([0, 1000],"float32"), axis=-1, )
paddle.nn.functional.log_softmax(Tensor([0, 2, 1],"float32"), 0, )
paddle.nn.functional.log_softmax(Tensor([0, 2, 1],"float64"), 0, )
paddle.nn.functional.log_softmax(Tensor([0, 2, 3],"float32"), )
paddle.nn.functional.log_softmax(Tensor([0, 2],"float32"), )
paddle.nn.functional.log_softmax(Tensor([0, 3, 2, 4],"float32"), 1, )
paddle.nn.functional.log_softmax(Tensor([0, 3, 4, 5],"float32"), -1, "float64", )
paddle.nn.functional.log_softmax(Tensor([0, 3, 4, 5],"float32"), 1, )
paddle.nn.functional.log_softmax(Tensor([0, 3, 4, 5],"float32"), -1, )
paddle.nn.functional.log_softmax(Tensor([0, 3, 4, 5],"float32"), 1, None, )
paddle.nn.functional.log_softmax(Tensor([0, 3, 4, 5],"float32"), -1, None, )
paddle.nn.functional.log_softmax(Tensor([0, 3, 4],"float64"), 1, )
paddle.nn.functional.log_softmax(Tensor([0, 3, 4],"float64"), -1, )
paddle.nn.functional.log_softmax(Tensor([0, 3, 4],"float64"), 2, )
paddle.nn.functional.log_softmax(Tensor([0, 3],"float32"), 1, )
paddle.nn.functional.log_softmax(Tensor([0, 300, 4096],"float32"), )
paddle.nn.functional.log_softmax(Tensor([0, 32000],"float16"), )
paddle.nn.functional.log_softmax(Tensor([0, 51865],"float32"), axis=-1, dtype="float32", )
paddle.nn.functional.log_softmax(Tensor([0, 6629],"float32"), axis=1, )
paddle.nn.functional.log_softmax(Tensor([0, 8],"float32"), axis=1, )
paddle.nn.functional.log_softmax(Tensor([1, 0, 4096],"float32"), )
paddle.nn.functional.log_softmax(Tensor([1, 0],"float16"), )
paddle.nn.functional.log_softmax(Tensor([1, 300, 0],"float32"), )
paddle.nn.functional.log_softmax(Tensor([100000, 0, 3],"float32"), )
paddle.nn.functional.log_softmax(Tensor([100000, 0],"float32"), )
paddle.nn.functional.log_softmax(Tensor([100000, 2, 0],"float32"), )
paddle.nn.functional.log_softmax(Tensor([1024, 0],"float16"), axis=-1, )
paddle.nn.functional.log_softmax(Tensor([1024, 0],"float32"), axis=-1, )
paddle.nn.functional.log_softmax(Tensor([128, 0],"float32"), axis=1, )
paddle.nn.functional.log_softmax(Tensor([2, 0, 1],"float32"), 0, )
paddle.nn.functional.log_softmax(Tensor([2, 0, 1],"float64"), 0, )
paddle.nn.functional.log_softmax(Tensor([2, 0, 4, 5],"float32"), -1, "float64", )
paddle.nn.functional.log_softmax(Tensor([2, 0, 4, 5],"float32"), 1, )
paddle.nn.functional.log_softmax(Tensor([2, 0, 4, 5],"float32"), -1, )
paddle.nn.functional.log_softmax(Tensor([2, 0, 4, 5],"float32"), 1, None, )
paddle.nn.functional.log_softmax(Tensor([2, 0, 4, 5],"float32"), -1, None, )
paddle.nn.functional.log_softmax(Tensor([2, 0, 4],"float64"), 1, )
paddle.nn.functional.log_softmax(Tensor([2, 0, 4],"float64"), -1, )
paddle.nn.functional.log_softmax(Tensor([2, 0, 4],"float64"), 2, )
paddle.nn.functional.log_softmax(Tensor([2, 2, 0],"float32"), 0, )
paddle.nn.functional.log_softmax(Tensor([2, 2, 0],"float64"), 0, )
paddle.nn.functional.log_softmax(Tensor([2, 3, 0, 5],"float32"), -1, "float64", )
paddle.nn.functional.log_softmax(Tensor([2, 3, 0, 5],"float32"), 1, )
paddle.nn.functional.log_softmax(Tensor([2, 3, 0, 5],"float32"), -1, )
paddle.nn.functional.log_softmax(Tensor([2, 3, 0, 5],"float32"), 1, None, )
paddle.nn.functional.log_softmax(Tensor([2, 3, 0, 5],"float32"), -1, None, )
paddle.nn.functional.log_softmax(Tensor([2, 3, 0],"float64"), 1, )
paddle.nn.functional.log_softmax(Tensor([2, 3, 0],"float64"), -1, )
paddle.nn.functional.log_softmax(Tensor([2, 3, 0],"float64"), 2, )
paddle.nn.functional.log_softmax(Tensor([2, 3, 4, 0],"float32"), -1, "float64", )
paddle.nn.functional.log_softmax(Tensor([2, 3, 4, 0],"float32"), 1, )
paddle.nn.functional.log_softmax(Tensor([2, 3, 4, 0],"float32"), -1, )
paddle.nn.functional.log_softmax(Tensor([2, 3, 4, 0],"float32"), 1, None, )
paddle.nn.functional.log_softmax(Tensor([2, 3, 4, 0],"float32"), -1, None, )
paddle.nn.functional.log_softmax(Tensor([20, 0],"float32"), axis=1, )
paddle.nn.functional.log_softmax(Tensor([5, 0, 2, 4],"float32"), 1, )
paddle.nn.functional.log_softmax(Tensor([5, 0],"float32"), 1, )
paddle.nn.functional.log_softmax(Tensor([5, 0],"float32"), axis=-1, dtype="float32", )
paddle.nn.functional.log_softmax(Tensor([5, 3, 0, 4],"float32"), 1, )
paddle.nn.functional.log_softmax(Tensor([5, 3, 2, 0],"float32"), 1, )
paddle.nn.functional.log_softmax(x=Tensor([0, 2, 1],"float32"), axis=0, )
paddle.nn.functional.log_softmax(x=Tensor([0, 2, 1],"float64"), axis=0, )
paddle.nn.functional.log_softmax(x=Tensor([0, 3, 4],"float64"), )
paddle.nn.functional.log_softmax(x=Tensor([0, 3, 4],"float64"), axis=1, )
paddle.nn.functional.log_softmax(x=Tensor([0, 3, 4],"float64"), axis=-1, )
paddle.nn.functional.log_softmax(x=Tensor([0, 3, 4],"float64"), axis=2, )
paddle.nn.functional.log_softmax(x=Tensor([0, 3, 4],"float64"), axis=2, dtype="float32", )
paddle.nn.functional.log_softmax(x=Tensor([0, 3, 4],"float64"), axis=2, dtype="float64", )
paddle.nn.functional.log_softmax(x=Tensor([0, 3, 4],"float64"), axis=2, dtype=type(numpy.float32), )
paddle.nn.functional.log_softmax(x=Tensor([0, 3, 4],"float64"), axis=2, dtype=type(numpy.float64), )
paddle.nn.functional.log_softmax(x=Tensor([2, 0, 1],"float32"), axis=0, )
paddle.nn.functional.log_softmax(x=Tensor([2, 0, 1],"float64"), axis=0, )
paddle.nn.functional.log_softmax(x=Tensor([2, 0, 4],"float64"), )
paddle.nn.functional.log_softmax(x=Tensor([2, 0, 4],"float64"), axis=1, )
paddle.nn.functional.log_softmax(x=Tensor([2, 0, 4],"float64"), axis=-1, )
paddle.nn.functional.log_softmax(x=Tensor([2, 0, 4],"float64"), axis=2, )
paddle.nn.functional.log_softmax(x=Tensor([2, 0, 4],"float64"), axis=2, dtype="float32", )
paddle.nn.functional.log_softmax(x=Tensor([2, 0, 4],"float64"), axis=2, dtype="float64", )
paddle.nn.functional.log_softmax(x=Tensor([2, 0, 4],"float64"), axis=2, dtype=type(numpy.float32), )
paddle.nn.functional.log_softmax(x=Tensor([2, 0, 4],"float64"), axis=2, dtype=type(numpy.float64), )
paddle.nn.functional.log_softmax(x=Tensor([2, 2, 0],"float32"), axis=0, )
paddle.nn.functional.log_softmax(x=Tensor([2, 2, 0],"float64"), axis=0, )
paddle.nn.functional.log_softmax(x=Tensor([2, 3, 0],"float64"), )
paddle.nn.functional.log_softmax(x=Tensor([2, 3, 0],"float64"), axis=1, )
paddle.nn.functional.log_softmax(x=Tensor([2, 3, 0],"float64"), axis=-1, )
paddle.nn.functional.log_softmax(x=Tensor([2, 3, 0],"float64"), axis=2, )
paddle.nn.functional.log_softmax(x=Tensor([2, 3, 0],"float64"), axis=2, dtype="float32", )
paddle.nn.functional.log_softmax(x=Tensor([2, 3, 0],"float64"), axis=2, dtype="float64", )
paddle.nn.functional.log_softmax(x=Tensor([2, 3, 0],"float64"), axis=2, dtype=type(numpy.float32), )
paddle.nn.functional.log_softmax(x=Tensor([2, 3, 0],"float64"), axis=2, dtype=type(numpy.float64), )
paddle.nn.functional.lp_pool1d(Tensor([0, 3, 32],"float16"), 5.0, 5, 3, 0, False, "NCL", None, )
paddle.nn.functional.lp_pool1d(Tensor([0, 3, 32],"float16"), norm_type=5, kernel_size=5, stride=3, padding=list[0,], )
paddle.nn.functional.lp_pool1d(Tensor([0, 3, 32],"float32"), 4.0, 3, 2, 1, False, "NCL", None, )
paddle.nn.functional.lp_pool1d(Tensor([0, 3, 32],"float32"), 7.0, 2, None, 1, True, "NCL", None, )
paddle.nn.functional.lp_pool1d(Tensor([0, 3, 32],"float32"), math.inf, 2, None, 1, False, "NCL", None, )
paddle.nn.functional.lp_pool1d(Tensor([0, 3, 32],"float32"), norm_type=4, kernel_size=3, stride=2, padding=list[1,], )
paddle.nn.functional.lp_pool1d(Tensor([0, 3, 32],"float32"), norm_type=7, kernel_size=2, stride=2, padding=list[1,], ceil_mode=True, )
paddle.nn.functional.lp_pool1d(Tensor([0, 3, 32],"float32"), norm_type=math.inf, kernel_size=2, stride=2, padding=list[1,], ceil_mode=True, )
paddle.nn.functional.lp_pool1d(Tensor([0, 3, 32],"float64"), 5.0, 5, 3, 0, False, "NCL", None, )
paddle.nn.functional.lp_pool1d(Tensor([0, 3, 32],"float64"), norm_type=5, kernel_size=5, stride=3, padding=list[0,], )
paddle.nn.functional.lp_pool1d(Tensor([0, 32, 3],"float32"), 7.0, 2, None, 1, False, "NLC", None, )
paddle.nn.functional.lp_pool1d(Tensor([0, 32, 3],"float32"), norm_type=7, kernel_size=2, stride=2, padding=list[1,], ceil_mode=True, data_format="NLC", )
paddle.nn.functional.lp_pool1d(Tensor([2, 0, 3],"float32"), 7.0, 2, None, 1, False, "NLC", None, )
paddle.nn.functional.lp_pool1d(Tensor([2, 0, 3],"float32"), norm_type=7, kernel_size=2, stride=2, padding=list[1,], ceil_mode=True, data_format="NLC", )
paddle.nn.functional.lp_pool1d(Tensor([2, 0, 32],"float16"), 5.0, 5, 3, 0, False, "NCL", None, )
paddle.nn.functional.lp_pool1d(Tensor([2, 0, 32],"float16"), norm_type=5, kernel_size=5, stride=3, padding=list[0,], )
paddle.nn.functional.lp_pool1d(Tensor([2, 0, 32],"float32"), 4.0, 3, 2, 1, False, "NCL", None, )
paddle.nn.functional.lp_pool1d(Tensor([2, 0, 32],"float32"), 7.0, 2, None, 1, True, "NCL", None, )
paddle.nn.functional.lp_pool1d(Tensor([2, 0, 32],"float32"), math.inf, 2, None, 1, False, "NCL", None, )
paddle.nn.functional.lp_pool1d(Tensor([2, 0, 32],"float32"), norm_type=4, kernel_size=3, stride=2, padding=list[1,], )
paddle.nn.functional.lp_pool1d(Tensor([2, 0, 32],"float32"), norm_type=7, kernel_size=2, stride=2, padding=list[1,], ceil_mode=True, )
paddle.nn.functional.lp_pool1d(Tensor([2, 0, 32],"float32"), norm_type=math.inf, kernel_size=2, stride=2, padding=list[1,], ceil_mode=True, )
paddle.nn.functional.lp_pool1d(Tensor([2, 0, 32],"float64"), 5.0, 5, 3, 0, False, "NCL", None, )
paddle.nn.functional.lp_pool1d(Tensor([2, 0, 32],"float64"), norm_type=5, kernel_size=5, stride=3, padding=list[0,], )
paddle.nn.functional.lp_pool1d(Tensor([2, 3, 0],"float16"), 5.0, 5, 3, 0, False, "NCL", None, )
paddle.nn.functional.lp_pool1d(Tensor([2, 3, 0],"float16"), norm_type=5, kernel_size=5, stride=3, padding=list[0,], )
paddle.nn.functional.lp_pool1d(Tensor([2, 3, 0],"float32"), 4.0, 3, 2, 1, False, "NCL", None, )
paddle.nn.functional.lp_pool1d(Tensor([2, 3, 0],"float32"), 7.0, 2, None, 1, True, "NCL", None, )
paddle.nn.functional.lp_pool1d(Tensor([2, 3, 0],"float32"), math.inf, 2, None, 1, False, "NCL", None, )
paddle.nn.functional.lp_pool1d(Tensor([2, 3, 0],"float32"), norm_type=4, kernel_size=3, stride=2, padding=list[1,], )
paddle.nn.functional.lp_pool1d(Tensor([2, 3, 0],"float32"), norm_type=7, kernel_size=2, stride=2, padding=list[1,], ceil_mode=True, )
paddle.nn.functional.lp_pool1d(Tensor([2, 3, 0],"float32"), norm_type=math.inf, kernel_size=2, stride=2, padding=list[1,], ceil_mode=True, )
paddle.nn.functional.lp_pool1d(Tensor([2, 3, 0],"float64"), 5.0, 5, 3, 0, False, "NCL", None, )
paddle.nn.functional.lp_pool1d(Tensor([2, 3, 0],"float64"), norm_type=5, kernel_size=5, stride=3, padding=list[0,], )
paddle.nn.functional.lp_pool1d(Tensor([2, 32, 0],"float32"), 7.0, 2, None, 1, False, "NLC", None, )
paddle.nn.functional.lp_pool1d(Tensor([2, 32, 0],"float32"), norm_type=7, kernel_size=2, stride=2, padding=list[1,], ceil_mode=True, data_format="NLC", )
paddle.nn.functional.lp_pool2d(Tensor([0, 3, 32, 32],"float16"), 2, kernel_size=3, stride=2, ceil_mode=False, )
paddle.nn.functional.lp_pool2d(Tensor([0, 3, 32, 32],"float16"), norm_type=2.0, kernel_size=3, stride=2, padding=0, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.lp_pool2d(Tensor([0, 3, 32, 32],"float32"), 2, kernel_size=2, stride=1, ceil_mode=False, )
paddle.nn.functional.lp_pool2d(Tensor([0, 3, 32, 32],"float32"), 2, kernel_size=2, stride=None, ceil_mode=False, )
paddle.nn.functional.lp_pool2d(Tensor([0, 3, 32, 32],"float32"), 2, kernel_size=5, stride=3, ceil_mode=True, )
paddle.nn.functional.lp_pool2d(Tensor([0, 3, 32, 32],"float32"), -math.inf, kernel_size=2, stride=2, ceil_mode=False, )
paddle.nn.functional.lp_pool2d(Tensor([0, 3, 32, 32],"float32"), math.inf, kernel_size=list[2,4,], stride=2, ceil_mode=False, )
paddle.nn.functional.lp_pool2d(Tensor([0, 3, 32, 32],"float32"), norm_type=2.0, kernel_size=2, stride=1, padding=0, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.lp_pool2d(Tensor([0, 3, 32, 32],"float32"), norm_type=2.0, kernel_size=2, stride=2, padding=0, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.lp_pool2d(Tensor([0, 3, 32, 32],"float32"), norm_type=2.0, kernel_size=5, stride=3, padding=0, ceil_mode=True, data_format="NCHW", name=None, )
paddle.nn.functional.lp_pool2d(Tensor([0, 3, 32, 32],"float32"), norm_type=-math.inf, kernel_size=2, stride=2, padding=0, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.lp_pool2d(Tensor([0, 3, 32, 32],"float32"), norm_type=math.inf, kernel_size=list[2,4,], stride=2, padding=0, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.lp_pool2d(Tensor([0, 3, 32, 32],"float64"), 2, kernel_size=5, stride=3, ceil_mode=False, )
paddle.nn.functional.lp_pool2d(Tensor([0, 3, 32, 32],"float64"), norm_type=2.0, kernel_size=5, stride=3, padding=0, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.lp_pool2d(Tensor([0, 32, 32, 3],"float32"), 2, kernel_size=2, stride=2, ceil_mode=False, data_format="NHWC", )
paddle.nn.functional.lp_pool2d(Tensor([0, 32, 32, 3],"float32"), norm_type=2.0, kernel_size=2, stride=list[2,2,], padding=0, ceil_mode=False, data_format="NHWC", name=None, )
paddle.nn.functional.lp_pool2d(Tensor([2, 0, 32, 3],"float32"), 2, kernel_size=2, stride=2, ceil_mode=False, data_format="NHWC", )
paddle.nn.functional.lp_pool2d(Tensor([2, 0, 32, 3],"float32"), norm_type=2.0, kernel_size=2, stride=list[2,2,], padding=0, ceil_mode=False, data_format="NHWC", name=None, )
paddle.nn.functional.lp_pool2d(Tensor([2, 0, 32, 32],"float16"), 2, kernel_size=3, stride=2, ceil_mode=False, )
paddle.nn.functional.lp_pool2d(Tensor([2, 0, 32, 32],"float16"), norm_type=2.0, kernel_size=3, stride=2, padding=0, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.lp_pool2d(Tensor([2, 0, 32, 32],"float32"), 2, kernel_size=2, stride=1, ceil_mode=False, )
paddle.nn.functional.lp_pool2d(Tensor([2, 0, 32, 32],"float32"), 2, kernel_size=2, stride=None, ceil_mode=False, )
paddle.nn.functional.lp_pool2d(Tensor([2, 0, 32, 32],"float32"), 2, kernel_size=5, stride=3, ceil_mode=True, )
paddle.nn.functional.lp_pool2d(Tensor([2, 0, 32, 32],"float32"), -math.inf, kernel_size=2, stride=2, ceil_mode=False, )
paddle.nn.functional.lp_pool2d(Tensor([2, 0, 32, 32],"float32"), math.inf, kernel_size=list[2,4,], stride=2, ceil_mode=False, )
paddle.nn.functional.lp_pool2d(Tensor([2, 0, 32, 32],"float32"), norm_type=2.0, kernel_size=2, stride=1, padding=0, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.lp_pool2d(Tensor([2, 0, 32, 32],"float32"), norm_type=2.0, kernel_size=2, stride=2, padding=0, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.lp_pool2d(Tensor([2, 0, 32, 32],"float32"), norm_type=2.0, kernel_size=5, stride=3, padding=0, ceil_mode=True, data_format="NCHW", name=None, )
paddle.nn.functional.lp_pool2d(Tensor([2, 0, 32, 32],"float32"), norm_type=-math.inf, kernel_size=2, stride=2, padding=0, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.lp_pool2d(Tensor([2, 0, 32, 32],"float32"), norm_type=math.inf, kernel_size=list[2,4,], stride=2, padding=0, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.lp_pool2d(Tensor([2, 0, 32, 32],"float64"), 2, kernel_size=5, stride=3, ceil_mode=False, )
paddle.nn.functional.lp_pool2d(Tensor([2, 0, 32, 32],"float64"), norm_type=2.0, kernel_size=5, stride=3, padding=0, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.lp_pool2d(Tensor([2, 3, 0, 32],"float16"), 2, kernel_size=3, stride=2, ceil_mode=False, )
paddle.nn.functional.lp_pool2d(Tensor([2, 3, 0, 32],"float16"), norm_type=2.0, kernel_size=3, stride=2, padding=0, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.lp_pool2d(Tensor([2, 3, 0, 32],"float32"), 2, kernel_size=2, stride=1, ceil_mode=False, )
paddle.nn.functional.lp_pool2d(Tensor([2, 3, 0, 32],"float32"), 2, kernel_size=2, stride=None, ceil_mode=False, )
paddle.nn.functional.lp_pool2d(Tensor([2, 3, 0, 32],"float32"), 2, kernel_size=5, stride=3, ceil_mode=True, )
paddle.nn.functional.lp_pool2d(Tensor([2, 3, 0, 32],"float32"), -math.inf, kernel_size=2, stride=2, ceil_mode=False, )
paddle.nn.functional.lp_pool2d(Tensor([2, 3, 0, 32],"float32"), math.inf, kernel_size=list[2,4,], stride=2, ceil_mode=False, )
paddle.nn.functional.lp_pool2d(Tensor([2, 3, 0, 32],"float32"), norm_type=2.0, kernel_size=2, stride=1, padding=0, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.lp_pool2d(Tensor([2, 3, 0, 32],"float32"), norm_type=2.0, kernel_size=2, stride=2, padding=0, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.lp_pool2d(Tensor([2, 3, 0, 32],"float32"), norm_type=2.0, kernel_size=5, stride=3, padding=0, ceil_mode=True, data_format="NCHW", name=None, )
paddle.nn.functional.lp_pool2d(Tensor([2, 3, 0, 32],"float32"), norm_type=-math.inf, kernel_size=2, stride=2, padding=0, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.lp_pool2d(Tensor([2, 3, 0, 32],"float32"), norm_type=math.inf, kernel_size=list[2,4,], stride=2, padding=0, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.lp_pool2d(Tensor([2, 3, 0, 32],"float64"), 2, kernel_size=5, stride=3, ceil_mode=False, )
paddle.nn.functional.lp_pool2d(Tensor([2, 3, 0, 32],"float64"), norm_type=2.0, kernel_size=5, stride=3, padding=0, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.lp_pool2d(Tensor([2, 3, 32, 0],"float16"), 2, kernel_size=3, stride=2, ceil_mode=False, )
paddle.nn.functional.lp_pool2d(Tensor([2, 3, 32, 0],"float16"), norm_type=2.0, kernel_size=3, stride=2, padding=0, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.lp_pool2d(Tensor([2, 3, 32, 0],"float32"), 2, kernel_size=2, stride=1, ceil_mode=False, )
paddle.nn.functional.lp_pool2d(Tensor([2, 3, 32, 0],"float32"), 2, kernel_size=2, stride=None, ceil_mode=False, )
paddle.nn.functional.lp_pool2d(Tensor([2, 3, 32, 0],"float32"), 2, kernel_size=5, stride=3, ceil_mode=True, )
paddle.nn.functional.lp_pool2d(Tensor([2, 3, 32, 0],"float32"), -math.inf, kernel_size=2, stride=2, ceil_mode=False, )
paddle.nn.functional.lp_pool2d(Tensor([2, 3, 32, 0],"float32"), math.inf, kernel_size=list[2,4,], stride=2, ceil_mode=False, )
paddle.nn.functional.lp_pool2d(Tensor([2, 3, 32, 0],"float32"), norm_type=2.0, kernel_size=2, stride=1, padding=0, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.lp_pool2d(Tensor([2, 3, 32, 0],"float32"), norm_type=2.0, kernel_size=2, stride=2, padding=0, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.lp_pool2d(Tensor([2, 3, 32, 0],"float32"), norm_type=2.0, kernel_size=5, stride=3, padding=0, ceil_mode=True, data_format="NCHW", name=None, )
paddle.nn.functional.lp_pool2d(Tensor([2, 3, 32, 0],"float32"), norm_type=-math.inf, kernel_size=2, stride=2, padding=0, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.lp_pool2d(Tensor([2, 3, 32, 0],"float32"), norm_type=math.inf, kernel_size=list[2,4,], stride=2, padding=0, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.lp_pool2d(Tensor([2, 3, 32, 0],"float64"), 2, kernel_size=5, stride=3, ceil_mode=False, )
paddle.nn.functional.lp_pool2d(Tensor([2, 3, 32, 0],"float64"), norm_type=2.0, kernel_size=5, stride=3, padding=0, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.lp_pool2d(Tensor([2, 32, 0, 3],"float32"), 2, kernel_size=2, stride=2, ceil_mode=False, data_format="NHWC", )
paddle.nn.functional.lp_pool2d(Tensor([2, 32, 0, 3],"float32"), norm_type=2.0, kernel_size=2, stride=list[2,2,], padding=0, ceil_mode=False, data_format="NHWC", name=None, )
paddle.nn.functional.lp_pool2d(Tensor([2, 32, 32, 0],"float32"), 2, kernel_size=2, stride=2, ceil_mode=False, data_format="NHWC", )
paddle.nn.functional.lp_pool2d(Tensor([2, 32, 32, 0],"float32"), norm_type=2.0, kernel_size=2, stride=list[2,2,], padding=0, ceil_mode=False, data_format="NHWC", name=None, )
paddle.nn.functional.margin_ranking_loss(Tensor([0, 10],"float64"), Tensor([0, 10],"float64"), Tensor([0, 10],"float64"), 0.0, "mean", )
paddle.nn.functional.margin_ranking_loss(Tensor([0, 10],"float64"), Tensor([0, 10],"float64"), Tensor([0, 10],"float64"), 0.0, "mean", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([0, 10],"float64"), Tensor([0, 10],"float64"), Tensor([0, 10],"float64"), 0.0, "none", )
paddle.nn.functional.margin_ranking_loss(Tensor([0, 10],"float64"), Tensor([0, 10],"float64"), Tensor([0, 10],"float64"), 0.0, "none", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([0, 10],"float64"), Tensor([0, 10],"float64"), Tensor([0, 10],"float64"), 0.0, "sum", )
paddle.nn.functional.margin_ranking_loss(Tensor([0, 10],"float64"), Tensor([0, 10],"float64"), Tensor([0, 10],"float64"), 0.0, "sum", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([0, 10],"float64"), Tensor([0, 10],"float64"), Tensor([0, 10],"float64"), 0.2, "mean", )
paddle.nn.functional.margin_ranking_loss(Tensor([0, 10],"float64"), Tensor([0, 10],"float64"), Tensor([0, 10],"float64"), 0.2, "mean", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([0, 10],"float64"), Tensor([0, 10],"float64"), Tensor([0, 10],"float64"), 0.2, "none", )
paddle.nn.functional.margin_ranking_loss(Tensor([0, 10],"float64"), Tensor([0, 10],"float64"), Tensor([0, 10],"float64"), 0.2, "none", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([0, 10],"float64"), Tensor([0, 10],"float64"), Tensor([0, 10],"float64"), 0.2, "sum", )
paddle.nn.functional.margin_ranking_loss(Tensor([0, 10],"float64"), Tensor([0, 10],"float64"), Tensor([0, 10],"float64"), 0.2, "sum", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([0, 10],"float64"), Tensor([10, 10],"float64"), Tensor([10, 10],"float64"), 0.0, "mean", )
paddle.nn.functional.margin_ranking_loss(Tensor([0, 10],"float64"), Tensor([10, 10],"float64"), Tensor([10, 10],"float64"), 0.0, "mean", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([0, 10],"float64"), Tensor([10, 10],"float64"), Tensor([10, 10],"float64"), 0.0, "none", )
paddle.nn.functional.margin_ranking_loss(Tensor([0, 10],"float64"), Tensor([10, 10],"float64"), Tensor([10, 10],"float64"), 0.0, "none", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([0, 10],"float64"), Tensor([10, 10],"float64"), Tensor([10, 10],"float64"), 0.0, "sum", )
paddle.nn.functional.margin_ranking_loss(Tensor([0, 10],"float64"), Tensor([10, 10],"float64"), Tensor([10, 10],"float64"), 0.0, "sum", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([0, 10],"float64"), Tensor([10, 10],"float64"), Tensor([10, 10],"float64"), 0.2, "mean", )
paddle.nn.functional.margin_ranking_loss(Tensor([0, 10],"float64"), Tensor([10, 10],"float64"), Tensor([10, 10],"float64"), 0.2, "mean", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([0, 10],"float64"), Tensor([10, 10],"float64"), Tensor([10, 10],"float64"), 0.2, "none", )
paddle.nn.functional.margin_ranking_loss(Tensor([0, 10],"float64"), Tensor([10, 10],"float64"), Tensor([10, 10],"float64"), 0.2, "none", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([0, 10],"float64"), Tensor([10, 10],"float64"), Tensor([10, 10],"float64"), 0.2, "sum", )
paddle.nn.functional.margin_ranking_loss(Tensor([0, 10],"float64"), Tensor([10, 10],"float64"), Tensor([10, 10],"float64"), 0.2, "sum", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([0, 10],"float64"), Tensor([10, 10],"float64"), Tensor([10],"float64"), 0.0, "mean", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([0, 10],"float64"), Tensor([10, 10],"float64"), Tensor([10],"float64"), 0.0, "none", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([0, 10],"float64"), Tensor([10, 10],"float64"), Tensor([10],"float64"), 0.0, "sum", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([0, 10],"float64"), Tensor([10, 10],"float64"), Tensor([10],"float64"), 0.2, "mean", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([0, 10],"float64"), Tensor([10, 10],"float64"), Tensor([10],"float64"), 0.2, "none", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([0, 10],"float64"), Tensor([10, 10],"float64"), Tensor([10],"float64"), 0.2, "sum", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([0, 2],"float64"), other=Tensor([0, 2],"float64"), label=Tensor([0, 2],"float64"), margin=0.0, reduction="mean", name=None, )
paddle.nn.functional.margin_ranking_loss(Tensor([0, 2],"float64"), other=Tensor([2, 2],"float64"), label=Tensor([2, 2],"float64"), margin=0.0, reduction="mean", name=None, )
paddle.nn.functional.margin_ranking_loss(Tensor([0, 2],"float64"), Tensor([0, 2],"float64"), Tensor([0, 2],"float64"), 0.0, "mean", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([0, 2],"float64"), Tensor([2, 2],"float64"), Tensor([2, 2],"float64"), 0.0, "mean", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([0],"float16"), Tensor([0],"float16"), Tensor([0],"float16"), 0.5, "mean", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([0],"float16"), Tensor([128],"float16"), Tensor([128],"float16"), 0.5, "mean", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([0],"float32"), Tensor([0],"float32"), Tensor([0],"float32"), 0.5, "mean", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([0],"float32"), Tensor([128],"float32"), Tensor([128],"float32"), 0.5, "mean", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 0],"float64"), Tensor([10, 0],"float64"), Tensor([10, 0],"float64"), 0.0, "mean", )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 0],"float64"), Tensor([10, 0],"float64"), Tensor([10, 0],"float64"), 0.0, "mean", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 0],"float64"), Tensor([10, 0],"float64"), Tensor([10, 0],"float64"), 0.0, "none", )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 0],"float64"), Tensor([10, 0],"float64"), Tensor([10, 0],"float64"), 0.0, "none", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 0],"float64"), Tensor([10, 0],"float64"), Tensor([10, 0],"float64"), 0.0, "sum", )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 0],"float64"), Tensor([10, 0],"float64"), Tensor([10, 0],"float64"), 0.0, "sum", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 0],"float64"), Tensor([10, 0],"float64"), Tensor([10, 0],"float64"), 0.2, "mean", )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 0],"float64"), Tensor([10, 0],"float64"), Tensor([10, 0],"float64"), 0.2, "mean", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 0],"float64"), Tensor([10, 0],"float64"), Tensor([10, 0],"float64"), 0.2, "none", )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 0],"float64"), Tensor([10, 0],"float64"), Tensor([10, 0],"float64"), 0.2, "none", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 0],"float64"), Tensor([10, 0],"float64"), Tensor([10, 0],"float64"), 0.2, "sum", )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 0],"float64"), Tensor([10, 0],"float64"), Tensor([10, 0],"float64"), 0.2, "sum", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 0],"float64"), Tensor([10, 10],"float64"), Tensor([10, 10],"float64"), 0.0, "mean", )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 0],"float64"), Tensor([10, 10],"float64"), Tensor([10, 10],"float64"), 0.0, "mean", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 0],"float64"), Tensor([10, 10],"float64"), Tensor([10, 10],"float64"), 0.0, "none", )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 0],"float64"), Tensor([10, 10],"float64"), Tensor([10, 10],"float64"), 0.0, "none", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 0],"float64"), Tensor([10, 10],"float64"), Tensor([10, 10],"float64"), 0.0, "sum", )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 0],"float64"), Tensor([10, 10],"float64"), Tensor([10, 10],"float64"), 0.0, "sum", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 0],"float64"), Tensor([10, 10],"float64"), Tensor([10, 10],"float64"), 0.2, "mean", )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 0],"float64"), Tensor([10, 10],"float64"), Tensor([10, 10],"float64"), 0.2, "mean", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 0],"float64"), Tensor([10, 10],"float64"), Tensor([10, 10],"float64"), 0.2, "none", )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 0],"float64"), Tensor([10, 10],"float64"), Tensor([10, 10],"float64"), 0.2, "none", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 0],"float64"), Tensor([10, 10],"float64"), Tensor([10, 10],"float64"), 0.2, "sum", )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 0],"float64"), Tensor([10, 10],"float64"), Tensor([10, 10],"float64"), 0.2, "sum", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 0],"float64"), Tensor([10, 10],"float64"), Tensor([10],"float64"), 0.0, "mean", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 0],"float64"), Tensor([10, 10],"float64"), Tensor([10],"float64"), 0.0, "none", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 0],"float64"), Tensor([10, 10],"float64"), Tensor([10],"float64"), 0.0, "sum", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 0],"float64"), Tensor([10, 10],"float64"), Tensor([10],"float64"), 0.2, "mean", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 0],"float64"), Tensor([10, 10],"float64"), Tensor([10],"float64"), 0.2, "none", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 0],"float64"), Tensor([10, 10],"float64"), Tensor([10],"float64"), 0.2, "sum", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([0, 10],"float64"), Tensor([10, 10],"float64"), 0.0, "mean", )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([0, 10],"float64"), Tensor([10, 10],"float64"), 0.0, "mean", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([0, 10],"float64"), Tensor([10, 10],"float64"), 0.0, "none", )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([0, 10],"float64"), Tensor([10, 10],"float64"), 0.0, "none", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([0, 10],"float64"), Tensor([10, 10],"float64"), 0.0, "sum", )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([0, 10],"float64"), Tensor([10, 10],"float64"), 0.0, "sum", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([0, 10],"float64"), Tensor([10, 10],"float64"), 0.2, "mean", )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([0, 10],"float64"), Tensor([10, 10],"float64"), 0.2, "mean", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([0, 10],"float64"), Tensor([10, 10],"float64"), 0.2, "none", )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([0, 10],"float64"), Tensor([10, 10],"float64"), 0.2, "none", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([0, 10],"float64"), Tensor([10, 10],"float64"), 0.2, "sum", )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([0, 10],"float64"), Tensor([10, 10],"float64"), 0.2, "sum", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([0, 10],"float64"), Tensor([10],"float64"), 0.0, "mean", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([0, 10],"float64"), Tensor([10],"float64"), 0.0, "none", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([0, 10],"float64"), Tensor([10],"float64"), 0.0, "sum", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([0, 10],"float64"), Tensor([10],"float64"), 0.2, "mean", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([0, 10],"float64"), Tensor([10],"float64"), 0.2, "none", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([0, 10],"float64"), Tensor([10],"float64"), 0.2, "sum", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([10, 0],"float64"), Tensor([10, 10],"float64"), 0.0, "mean", )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([10, 0],"float64"), Tensor([10, 10],"float64"), 0.0, "mean", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([10, 0],"float64"), Tensor([10, 10],"float64"), 0.0, "none", )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([10, 0],"float64"), Tensor([10, 10],"float64"), 0.0, "none", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([10, 0],"float64"), Tensor([10, 10],"float64"), 0.0, "sum", )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([10, 0],"float64"), Tensor([10, 10],"float64"), 0.0, "sum", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([10, 0],"float64"), Tensor([10, 10],"float64"), 0.2, "mean", )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([10, 0],"float64"), Tensor([10, 10],"float64"), 0.2, "mean", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([10, 0],"float64"), Tensor([10, 10],"float64"), 0.2, "none", )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([10, 0],"float64"), Tensor([10, 10],"float64"), 0.2, "none", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([10, 0],"float64"), Tensor([10, 10],"float64"), 0.2, "sum", )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([10, 0],"float64"), Tensor([10, 10],"float64"), 0.2, "sum", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([10, 0],"float64"), Tensor([10],"float64"), 0.0, "mean", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([10, 0],"float64"), Tensor([10],"float64"), 0.0, "none", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([10, 0],"float64"), Tensor([10],"float64"), 0.0, "sum", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([10, 0],"float64"), Tensor([10],"float64"), 0.2, "mean", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([10, 0],"float64"), Tensor([10],"float64"), 0.2, "none", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([10, 0],"float64"), Tensor([10],"float64"), 0.2, "sum", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([10, 10],"float64"), Tensor([0, 10],"float64"), 0.0, "mean", )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([10, 10],"float64"), Tensor([0, 10],"float64"), 0.0, "mean", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([10, 10],"float64"), Tensor([0, 10],"float64"), 0.0, "none", )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([10, 10],"float64"), Tensor([0, 10],"float64"), 0.0, "none", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([10, 10],"float64"), Tensor([0, 10],"float64"), 0.0, "sum", )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([10, 10],"float64"), Tensor([0, 10],"float64"), 0.0, "sum", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([10, 10],"float64"), Tensor([0, 10],"float64"), 0.2, "mean", )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([10, 10],"float64"), Tensor([0, 10],"float64"), 0.2, "mean", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([10, 10],"float64"), Tensor([0, 10],"float64"), 0.2, "none", )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([10, 10],"float64"), Tensor([0, 10],"float64"), 0.2, "none", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([10, 10],"float64"), Tensor([0, 10],"float64"), 0.2, "sum", )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([10, 10],"float64"), Tensor([0, 10],"float64"), 0.2, "sum", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([10, 10],"float64"), Tensor([0],"float64"), 0.0, "mean", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([10, 10],"float64"), Tensor([0],"float64"), 0.0, "none", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([10, 10],"float64"), Tensor([0],"float64"), 0.0, "sum", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([10, 10],"float64"), Tensor([0],"float64"), 0.2, "mean", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([10, 10],"float64"), Tensor([0],"float64"), 0.2, "none", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([10, 10],"float64"), Tensor([0],"float64"), 0.2, "sum", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([10, 10],"float64"), Tensor([10, 0],"float64"), 0.0, "mean", )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([10, 10],"float64"), Tensor([10, 0],"float64"), 0.0, "mean", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([10, 10],"float64"), Tensor([10, 0],"float64"), 0.0, "none", )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([10, 10],"float64"), Tensor([10, 0],"float64"), 0.0, "none", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([10, 10],"float64"), Tensor([10, 0],"float64"), 0.0, "sum", )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([10, 10],"float64"), Tensor([10, 0],"float64"), 0.0, "sum", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([10, 10],"float64"), Tensor([10, 0],"float64"), 0.2, "mean", )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([10, 10],"float64"), Tensor([10, 0],"float64"), 0.2, "mean", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([10, 10],"float64"), Tensor([10, 0],"float64"), 0.2, "none", )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([10, 10],"float64"), Tensor([10, 0],"float64"), 0.2, "none", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([10, 10],"float64"), Tensor([10, 0],"float64"), 0.2, "sum", )
paddle.nn.functional.margin_ranking_loss(Tensor([10, 10],"float64"), Tensor([10, 10],"float64"), Tensor([10, 0],"float64"), 0.2, "sum", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([128],"float16"), Tensor([0],"float16"), Tensor([128],"float16"), 0.5, "mean", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([128],"float16"), Tensor([128],"float16"), Tensor([0],"float16"), 0.5, "mean", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([128],"float32"), Tensor([0],"float32"), Tensor([128],"float32"), 0.5, "mean", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([128],"float32"), Tensor([128],"float32"), Tensor([0],"float32"), 0.5, "mean", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([2, 0],"float64"), other=Tensor([2, 0],"float64"), label=Tensor([2, 0],"float64"), margin=0.0, reduction="mean", name=None, )
paddle.nn.functional.margin_ranking_loss(Tensor([2, 0],"float64"), other=Tensor([2, 2],"float64"), label=Tensor([2, 2],"float64"), margin=0.0, reduction="mean", name=None, )
paddle.nn.functional.margin_ranking_loss(Tensor([2, 0],"float64"), Tensor([2, 0],"float64"), Tensor([2, 0],"float64"), 0.0, "mean", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([2, 0],"float64"), Tensor([2, 2],"float64"), Tensor([2, 2],"float64"), 0.0, "mean", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([2, 2],"float64"), other=Tensor([0, 2],"float64"), label=Tensor([2, 2],"float64"), margin=0.0, reduction="mean", name=None, )
paddle.nn.functional.margin_ranking_loss(Tensor([2, 2],"float64"), other=Tensor([2, 0],"float64"), label=Tensor([2, 2],"float64"), margin=0.0, reduction="mean", name=None, )
paddle.nn.functional.margin_ranking_loss(Tensor([2, 2],"float64"), other=Tensor([2, 2],"float64"), label=Tensor([0, 2],"float64"), margin=0.0, reduction="mean", name=None, )
paddle.nn.functional.margin_ranking_loss(Tensor([2, 2],"float64"), other=Tensor([2, 2],"float64"), label=Tensor([2, 0],"float64"), margin=0.0, reduction="mean", name=None, )
paddle.nn.functional.margin_ranking_loss(Tensor([2, 2],"float64"), Tensor([0, 2],"float64"), Tensor([2, 2],"float64"), 0.0, "mean", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([2, 2],"float64"), Tensor([2, 0],"float64"), Tensor([2, 2],"float64"), 0.0, "mean", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([2, 2],"float64"), Tensor([2, 2],"float64"), Tensor([0, 2],"float64"), 0.0, "mean", None, )
paddle.nn.functional.margin_ranking_loss(Tensor([2, 2],"float64"), Tensor([2, 2],"float64"), Tensor([2, 0],"float64"), 0.0, "mean", None, )
paddle.nn.functional.max_pool1d(Tensor([0, 1, 2],"float64"), 2, 2, 0, True, False, None, )
paddle.nn.functional.max_pool1d(Tensor([0, 3, 16],"float32"), kernel_size=2, stride=2, return_mask=True, )
paddle.nn.functional.max_pool1d(Tensor([0, 3, 16],"float64"), 2, 2, 0, True, False, None, )
paddle.nn.functional.max_pool1d(Tensor([0, 3, 16],"float64"), kernel_size=2, stride=2, return_mask=True, )
paddle.nn.functional.max_pool1d(Tensor([0, 3, 32],"float32"), 2, None, 0, False, False, None, )
paddle.nn.functional.max_pool1d(Tensor([0, 3, 32],"float32"), kernel_size=2, stride=2, padding="SAME", )
paddle.nn.functional.max_pool1d(Tensor([0, 3, 32],"float32"), kernel_size=2, stride=2, padding=0, )
paddle.nn.functional.max_pool1d(Tensor([0, 3, 32],"float32"), kernel_size=2, stride=2, padding=0, return_mask=True, )
paddle.nn.functional.max_pool1d(Tensor([0, 3, 6],"float32"), kernel_size=5, stride=5, padding=0, ceil_mode=True, return_mask=True, )
paddle.nn.functional.max_pool1d(Tensor([0, 3, 8],"float32"), 2, 2, 0, False, False, None, )
paddle.nn.functional.max_pool1d(Tensor([0, 3, 8],"float64"), 1, 1, 0, False, False, None, )
paddle.nn.functional.max_pool1d(Tensor([0, 3, 8],"float64"), 2, 1, 0, False, True, None, )
paddle.nn.functional.max_pool1d(Tensor([0, 3, 8],"float64"), 2, 1, 1, False, False, None, )
paddle.nn.functional.max_pool1d(Tensor([0, 3, 8],"float64"), 2, 1, list[1,], False, False, None, )
paddle.nn.functional.max_pool1d(Tensor([0, 3, 8],"float64"), 2, 1, list[1,1,], False, False, None, )
paddle.nn.functional.max_pool1d(Tensor([0, 3, 8],"float64"), 2, 2, 0, False, False, None, )
paddle.nn.functional.max_pool1d(Tensor([0, 3, 8],"float64"), 2, 2, 1, False, False, None, )
paddle.nn.functional.max_pool1d(Tensor([0, 3, 8],"float64"), 2, list[1,], 1, False, False, None, )
paddle.nn.functional.max_pool1d(Tensor([0, 3, 8],"float64"), 3, 4, 0, False, False, None, )
paddle.nn.functional.max_pool1d(Tensor([0, 3, 8],"float64"), list[3,], 1, 1, False, False, None, )
paddle.nn.functional.max_pool1d(Tensor([0, 32, 7],"float32"), 7, )
paddle.nn.functional.max_pool1d(Tensor([1, 0, 16],"float32"), kernel_size=2, stride=2, return_mask=True, )
paddle.nn.functional.max_pool1d(Tensor([1, 0, 16],"float64"), 2, 2, 0, True, False, None, )
paddle.nn.functional.max_pool1d(Tensor([1, 0, 16],"float64"), kernel_size=2, stride=2, return_mask=True, )
paddle.nn.functional.max_pool1d(Tensor([1, 0, 2],"float64"), 2, 2, 0, True, False, None, )
paddle.nn.functional.max_pool1d(Tensor([1, 0, 6],"float32"), kernel_size=5, stride=5, padding=0, ceil_mode=True, return_mask=True, )
paddle.nn.functional.max_pool1d(Tensor([1, 1, 0],"float64"), 2, 2, 0, True, False, None, )
paddle.nn.functional.max_pool1d(Tensor([1, 3, 0],"float32"), kernel_size=2, stride=2, return_mask=True, )
paddle.nn.functional.max_pool1d(Tensor([1, 3, 0],"float32"), kernel_size=5, stride=5, padding=0, ceil_mode=True, return_mask=True, )
paddle.nn.functional.max_pool1d(Tensor([1, 3, 0],"float64"), 2, 2, 0, True, False, None, )
paddle.nn.functional.max_pool1d(Tensor([1, 3, 0],"float64"), kernel_size=2, stride=2, return_mask=True, )
paddle.nn.functional.max_pool1d(Tensor([2, 0, 32],"float32"), 2, None, 0, False, False, None, )
paddle.nn.functional.max_pool1d(Tensor([2, 0, 32],"float32"), kernel_size=2, stride=2, padding="SAME", )
paddle.nn.functional.max_pool1d(Tensor([2, 0, 32],"float32"), kernel_size=2, stride=2, padding=0, )
paddle.nn.functional.max_pool1d(Tensor([2, 0, 32],"float32"), kernel_size=2, stride=2, padding=0, return_mask=True, )
paddle.nn.functional.max_pool1d(Tensor([2, 0, 8],"float32"), 2, 2, 0, False, False, None, )
paddle.nn.functional.max_pool1d(Tensor([2, 0, 8],"float64"), 1, 1, 0, False, False, None, )
paddle.nn.functional.max_pool1d(Tensor([2, 0, 8],"float64"), 2, 1, 0, False, True, None, )
paddle.nn.functional.max_pool1d(Tensor([2, 0, 8],"float64"), 2, 1, 1, False, False, None, )
paddle.nn.functional.max_pool1d(Tensor([2, 0, 8],"float64"), 2, 1, list[1,], False, False, None, )
paddle.nn.functional.max_pool1d(Tensor([2, 0, 8],"float64"), 2, 1, list[1,1,], False, False, None, )
paddle.nn.functional.max_pool1d(Tensor([2, 0, 8],"float64"), 2, 2, 0, False, False, None, )
paddle.nn.functional.max_pool1d(Tensor([2, 0, 8],"float64"), 2, 2, 1, False, False, None, )
paddle.nn.functional.max_pool1d(Tensor([2, 0, 8],"float64"), 2, list[1,], 1, False, False, None, )
paddle.nn.functional.max_pool1d(Tensor([2, 0, 8],"float64"), 3, 4, 0, False, False, None, )
paddle.nn.functional.max_pool1d(Tensor([2, 0, 8],"float64"), list[3,], 1, 1, False, False, None, )
paddle.nn.functional.max_pool1d(Tensor([2, 3, 0],"float32"), 2, 2, 0, False, False, None, )
paddle.nn.functional.max_pool1d(Tensor([2, 3, 0],"float32"), 2, None, 0, False, False, None, )
paddle.nn.functional.max_pool1d(Tensor([2, 3, 0],"float32"), kernel_size=2, stride=2, padding="SAME", )
paddle.nn.functional.max_pool1d(Tensor([2, 3, 0],"float32"), kernel_size=2, stride=2, padding=0, )
paddle.nn.functional.max_pool1d(Tensor([2, 3, 0],"float32"), kernel_size=2, stride=2, padding=0, return_mask=True, )
paddle.nn.functional.max_pool1d(Tensor([2, 3, 0],"float64"), 1, 1, 0, False, False, None, )
paddle.nn.functional.max_pool1d(Tensor([2, 3, 0],"float64"), 2, 1, 0, False, True, None, )
paddle.nn.functional.max_pool1d(Tensor([2, 3, 0],"float64"), 2, 1, 1, False, False, None, )
paddle.nn.functional.max_pool1d(Tensor([2, 3, 0],"float64"), 2, 1, list[1,], False, False, None, )
paddle.nn.functional.max_pool1d(Tensor([2, 3, 0],"float64"), 2, 1, list[1,1,], False, False, None, )
paddle.nn.functional.max_pool1d(Tensor([2, 3, 0],"float64"), 2, 2, 0, False, False, None, )
paddle.nn.functional.max_pool1d(Tensor([2, 3, 0],"float64"), 2, 2, 1, False, False, None, )
paddle.nn.functional.max_pool1d(Tensor([2, 3, 0],"float64"), 2, list[1,], 1, False, False, None, )
paddle.nn.functional.max_pool1d(Tensor([2, 3, 0],"float64"), 3, 4, 0, False, False, None, )
paddle.nn.functional.max_pool1d(Tensor([2, 3, 0],"float64"), list[3,], 1, 1, False, False, None, )
paddle.nn.functional.max_pool1d(Tensor([91, 0, 7],"float32"), 7, )
paddle.nn.functional.max_pool1d(Tensor([91, 32, 0],"float32"), 7, )
paddle.nn.functional.max_pool1d(x=Tensor([0, 1, 2],"float64"), kernel_size=2, stride=2, padding=0, return_mask=True, )
paddle.nn.functional.max_pool1d(x=Tensor([0, 3, 8],"float32"), kernel_size=2, stride=2, padding=0, )
paddle.nn.functional.max_pool1d(x=Tensor([0, 3, 8],"float64"), kernel_size=1, stride=1, padding=0, )
paddle.nn.functional.max_pool1d(x=Tensor([0, 3, 8],"float64"), kernel_size=2, stride=1, padding=0, ceil_mode=True, )
paddle.nn.functional.max_pool1d(x=Tensor([0, 3, 8],"float64"), kernel_size=2, stride=1, padding=1, )
paddle.nn.functional.max_pool1d(x=Tensor([0, 3, 8],"float64"), kernel_size=2, stride=1, padding=list[1,], )
paddle.nn.functional.max_pool1d(x=Tensor([0, 3, 8],"float64"), kernel_size=2, stride=1, padding=list[1,1,], )
paddle.nn.functional.max_pool1d(x=Tensor([0, 3, 8],"float64"), kernel_size=2, stride=2, padding=0, )
paddle.nn.functional.max_pool1d(x=Tensor([0, 3, 8],"float64"), kernel_size=2, stride=2, padding=1, )
paddle.nn.functional.max_pool1d(x=Tensor([0, 3, 8],"float64"), kernel_size=2, stride=list[1,], padding=1, )
paddle.nn.functional.max_pool1d(x=Tensor([0, 3, 8],"float64"), kernel_size=3, stride=4, padding=0, )
paddle.nn.functional.max_pool1d(x=Tensor([0, 3, 8],"float64"), kernel_size=list[3,], stride=1, padding=1, )
paddle.nn.functional.max_pool1d(x=Tensor([1, 0, 2],"float64"), kernel_size=2, stride=2, padding=0, return_mask=True, )
paddle.nn.functional.max_pool1d(x=Tensor([1, 1, 0],"float64"), kernel_size=2, stride=2, padding=0, return_mask=True, )
paddle.nn.functional.max_pool1d(x=Tensor([2, 0, 8],"float32"), kernel_size=2, stride=2, padding=0, )
paddle.nn.functional.max_pool1d(x=Tensor([2, 0, 8],"float64"), kernel_size=1, stride=1, padding=0, )
paddle.nn.functional.max_pool1d(x=Tensor([2, 0, 8],"float64"), kernel_size=2, stride=1, padding=0, ceil_mode=True, )
paddle.nn.functional.max_pool1d(x=Tensor([2, 0, 8],"float64"), kernel_size=2, stride=1, padding=1, )
paddle.nn.functional.max_pool1d(x=Tensor([2, 0, 8],"float64"), kernel_size=2, stride=1, padding=list[1,], )
paddle.nn.functional.max_pool1d(x=Tensor([2, 0, 8],"float64"), kernel_size=2, stride=1, padding=list[1,1,], )
paddle.nn.functional.max_pool1d(x=Tensor([2, 0, 8],"float64"), kernel_size=2, stride=2, padding=0, )
paddle.nn.functional.max_pool1d(x=Tensor([2, 0, 8],"float64"), kernel_size=2, stride=2, padding=1, )
paddle.nn.functional.max_pool1d(x=Tensor([2, 0, 8],"float64"), kernel_size=2, stride=list[1,], padding=1, )
paddle.nn.functional.max_pool1d(x=Tensor([2, 0, 8],"float64"), kernel_size=3, stride=4, padding=0, )
paddle.nn.functional.max_pool1d(x=Tensor([2, 0, 8],"float64"), kernel_size=list[3,], stride=1, padding=1, )
paddle.nn.functional.max_pool1d(x=Tensor([2, 3, 0],"float32"), kernel_size=2, stride=2, padding=0, )
paddle.nn.functional.max_pool1d(x=Tensor([2, 3, 0],"float64"), kernel_size=1, stride=1, padding=0, )
paddle.nn.functional.max_pool1d(x=Tensor([2, 3, 0],"float64"), kernel_size=2, stride=1, padding=0, ceil_mode=True, )
paddle.nn.functional.max_pool1d(x=Tensor([2, 3, 0],"float64"), kernel_size=2, stride=1, padding=1, )
paddle.nn.functional.max_pool1d(x=Tensor([2, 3, 0],"float64"), kernel_size=2, stride=1, padding=list[1,], )
paddle.nn.functional.max_pool1d(x=Tensor([2, 3, 0],"float64"), kernel_size=2, stride=1, padding=list[1,1,], )
paddle.nn.functional.max_pool1d(x=Tensor([2, 3, 0],"float64"), kernel_size=2, stride=2, padding=0, )
paddle.nn.functional.max_pool1d(x=Tensor([2, 3, 0],"float64"), kernel_size=2, stride=2, padding=1, )
paddle.nn.functional.max_pool1d(x=Tensor([2, 3, 0],"float64"), kernel_size=2, stride=list[1,], padding=1, )
paddle.nn.functional.max_pool1d(x=Tensor([2, 3, 0],"float64"), kernel_size=3, stride=4, padding=0, )
paddle.nn.functional.max_pool1d(x=Tensor([2, 3, 0],"float64"), kernel_size=list[3,], stride=1, padding=1, )
paddle.nn.functional.max_pool2d(Tensor([0, 1, 4, 1],"float32"), tuple(2,1,), stride=tuple(2,1,), ceil_mode=True, )
paddle.nn.functional.max_pool2d(Tensor([0, 1, 4, 4],"float32"), kernel_size=2, stride=2, padding=0, return_mask=True, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([0, 1, 4, 4],"float32"), kernel_size=2, stride=2, return_mask=True, )
paddle.nn.functional.max_pool2d(Tensor([0, 1, 4, 5],"float32"), kernel_size=2, stride=2, return_mask=True, )
paddle.nn.functional.max_pool2d(Tensor([0, 1, 7, 1],"float32"), tuple(2,1,), stride=tuple(2,1,), ceil_mode=True, )
paddle.nn.functional.max_pool2d(Tensor([0, 112, 112, 64],"float16"), kernel_size=3, stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NHWC", name=None, )
paddle.nn.functional.max_pool2d(Tensor([0, 128, 40, 40],"float16"), 3, stride=1, padding=1, data_format="NCHW", )
paddle.nn.functional.max_pool2d(Tensor([0, 128, 40, 40],"float32"), 3, stride=1, padding=1, data_format="NCHW", )
paddle.nn.functional.max_pool2d(Tensor([0, 128, 40, 40],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([0, 128, 55, 55],"float32"), kernel_size=3, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([0, 16, 10, 10],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([0, 192, 20, 20],"float32"), kernel_size=13, stride=1, padding=6, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([0, 192, 20, 20],"float32"), kernel_size=5, stride=1, padding=2, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([0, 192, 20, 20],"float32"), kernel_size=9, stride=1, padding=4, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([0, 192, 27, 27],"float32"), kernel_size=3, stride=1, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([0, 192, 27, 27],"float32"), kernel_size=3, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([0, 2, 32, 32],"float32"), kernel_size=2, stride=2, padding=0, return_mask=True, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([0, 24, 368, 368],"float32"), kernel_size=2, stride=1, padding="SAME", return_mask=False, ceil_mode=True, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([0, 24, 384, 384],"float32"), kernel_size=2, stride=1, padding="SAME", return_mask=False, ceil_mode=True, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([0, 24, 40, 40],"float32"), kernel_size=3, stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([0, 244, 244, 2],"float32"), kernel_size=list[5,3,], stride=list[1,2,], padding=tuple(2,1,), )
paddle.nn.functional.max_pool2d(Tensor([0, 256, 20, 27],"float32"), 1, stride=2, )
paddle.nn.functional.max_pool2d(Tensor([0, 256, 20, 30],"float32"), 1, stride=2, )
paddle.nn.functional.max_pool2d(Tensor([0, 256, 27, 27],"float32"), kernel_size=3, stride=1, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([0, 256, 7, 7],"float32"), kernel_size=1, stride=2, padding=0, )
paddle.nn.functional.max_pool2d(Tensor([0, 3, 224, 224],"float32"), kernel_size=1, )
paddle.nn.functional.max_pool2d(Tensor([0, 3, 224, 224],"float32"), kernel_size=2, )
paddle.nn.functional.max_pool2d(Tensor([0, 3, 224, 224],"float32"), kernel_size=3, )
paddle.nn.functional.max_pool2d(Tensor([0, 3, 224, 224],"float32"), kernel_size=list[5,3,], stride=list[1,2,], padding=tuple(2,1,), )
paddle.nn.functional.max_pool2d(Tensor([0, 3, 32, 32],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=True, )
paddle.nn.functional.max_pool2d(Tensor([0, 3, 32, 32],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, )
paddle.nn.functional.max_pool2d(Tensor([0, 3, 32, 32],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=True, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([0, 3, 32, 32],"float32"), kernel_size=2, stride=2, padding=1, ceil_mode=False, )
paddle.nn.functional.max_pool2d(Tensor([0, 3, 32, 32],"float32"), kernel_size=2, stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([0, 3, 32, 32],"float32"), kernel_size=2, stride=2, padding=list[list[0,0,],list[0,0,],list[0,0,],list[0,0,],], return_mask=False, )
paddle.nn.functional.max_pool2d(Tensor([0, 3, 32, 32],"float32"), kernel_size=2, stride=None, padding="SAME", return_mask=True, )
paddle.nn.functional.max_pool2d(Tensor([0, 3, 32, 32],"float32"), kernel_size=list[2,2,], stride=None, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([0, 3, 32, 32],"float64"), kernel_size=list[2,2,], stride=None, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([0, 3, 32, 32],"float64"), kernel_size=list[3,3,], stride=list[1,1,], padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([0, 3, 32, 32],"float64"), kernel_size=list[3,3,], stride=list[1,1,], padding=list[0,0,0,0,], return_mask=False, ceil_mode=True, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([0, 3, 32, 32],"float64"), kernel_size=list[3,3,], stride=list[1,1,], padding=list[1,1,], return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([0, 3, 32, 32],"float64"), kernel_size=list[3,3,], stride=list[1,2,], padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([0, 3, 32, 32],"float64"), kernel_size=list[3,3,], stride=None, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([0, 3, 32, 32],"float64"), kernel_size=list[3,3,], stride=tuple(1,2,), padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([0, 3, 33, 33],"float32"), kernel_size=5, stride=5, padding=0, ceil_mode=True, return_mask=True, )
paddle.nn.functional.max_pool2d(Tensor([0, 3, 6, 6],"float32"), kernel_size=2, stride=2, padding=0, return_mask=True, )
paddle.nn.functional.max_pool2d(Tensor([0, 32, 32, 3],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, data_format="NHWC", )
paddle.nn.functional.max_pool2d(Tensor([0, 384, 32, 32],"float32"), kernel_size=13, stride=1, padding=6, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([0, 384, 32, 32],"float32"), kernel_size=5, stride=1, padding=2, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([0, 384, 32, 32],"float32"), kernel_size=9, stride=1, padding=4, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([0, 4, 4, 4],"float16"), kernel_size=2, stride=2, padding=0, )
paddle.nn.functional.max_pool2d(Tensor([0, 4, 40, 40],"float64"), kernel_size=2, stride=None, padding=0, return_mask=True, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([0, 4, 40, 40],"float64"), kernel_size=4, stride=2, padding=2, return_mask=True, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([0, 4, 40, 40],"float64"), kernel_size=4, stride=None, padding=2, return_mask=True, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([0, 4, 40, 40],"float64"), kernel_size=tuple(2,4,), stride=None, padding=0, return_mask=True, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([0, 512, 1, 40],"float16"), kernel_size=tuple(1,1,), stride=1, padding=0, )
paddle.nn.functional.max_pool2d(Tensor([0, 512, 1, 40],"float32"), kernel_size=tuple(1,1,), stride=1, padding=0, )
paddle.nn.functional.max_pool2d(Tensor([0, 64, 112, 112],"float32"), kernel_size=3, stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([0, 64, 17, 17],"float32"), kernel_size=tuple(3,3,), stride=tuple(2,2,), padding=tuple(0,0,), return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([0, 64, 17, 257],"float32"), tuple(3,3,), tuple(2,2,), tuple(0,0,), False, )
paddle.nn.functional.max_pool2d(Tensor([0, 64, 17, 273],"float32"), tuple(3,3,), tuple(2,2,), tuple(0,0,), False, )
paddle.nn.functional.max_pool2d(Tensor([0, 64, 18, 18],"float32"), kernel_size=tuple(3,3,), stride=tuple(2,2,), padding=tuple(0,0,), return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([0, 64, 288, 399],"float32"), kernel_size=3, stride=2, padding=1, )
paddle.nn.functional.max_pool2d(Tensor([0, 64, 320, 432],"float32"), kernel_size=3, stride=2, padding=1, )
paddle.nn.functional.max_pool2d(Tensor([0, 8, 16, 64],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=True, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 0, 10, 10],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 0, 112, 112],"float32"), kernel_size=3, stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 0, 17, 257],"float32"), tuple(3,3,), tuple(2,2,), tuple(0,0,), False, )
paddle.nn.functional.max_pool2d(Tensor([1, 0, 17, 273],"float32"), tuple(3,3,), tuple(2,2,), tuple(0,0,), False, )
paddle.nn.functional.max_pool2d(Tensor([1, 0, 20, 20],"float32"), kernel_size=13, stride=1, padding=6, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 0, 20, 20],"float32"), kernel_size=5, stride=1, padding=2, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 0, 20, 20],"float32"), kernel_size=9, stride=1, padding=4, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 0, 20, 27],"float32"), 1, stride=2, )
paddle.nn.functional.max_pool2d(Tensor([1, 0, 20, 30],"float32"), 1, stride=2, )
paddle.nn.functional.max_pool2d(Tensor([1, 0, 224, 224],"float32"), kernel_size=1, )
paddle.nn.functional.max_pool2d(Tensor([1, 0, 224, 224],"float32"), kernel_size=2, )
paddle.nn.functional.max_pool2d(Tensor([1, 0, 224, 224],"float32"), kernel_size=3, )
paddle.nn.functional.max_pool2d(Tensor([1, 0, 288, 399],"float32"), kernel_size=3, stride=2, padding=1, )
paddle.nn.functional.max_pool2d(Tensor([1, 0, 32, 32],"float32"), kernel_size=13, stride=1, padding=6, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 0, 32, 32],"float32"), kernel_size=2, stride=2, padding=0, return_mask=True, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 0, 32, 32],"float32"), kernel_size=5, stride=1, padding=2, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 0, 32, 32],"float32"), kernel_size=9, stride=1, padding=4, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 0, 320, 432],"float32"), kernel_size=3, stride=2, padding=1, )
paddle.nn.functional.max_pool2d(Tensor([1, 0, 368, 368],"float32"), kernel_size=2, stride=1, padding="SAME", return_mask=False, ceil_mode=True, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 0, 384, 384],"float32"), kernel_size=2, stride=1, padding="SAME", return_mask=False, ceil_mode=True, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 0, 4, 4],"float32"), kernel_size=2, stride=2, padding=0, return_mask=True, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 0, 4, 4],"float32"), kernel_size=2, stride=2, return_mask=True, )
paddle.nn.functional.max_pool2d(Tensor([1, 0, 4, 5],"float32"), kernel_size=2, stride=2, return_mask=True, )
paddle.nn.functional.max_pool2d(Tensor([1, 0, 40, 40],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 0, 40, 40],"float32"), kernel_size=3, stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 0, 6, 6],"float32"), kernel_size=2, stride=2, padding=0, return_mask=True, )
paddle.nn.functional.max_pool2d(Tensor([1, 1, 0, 4],"float32"), kernel_size=2, stride=2, padding=0, return_mask=True, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 1, 0, 4],"float32"), kernel_size=2, stride=2, return_mask=True, )
paddle.nn.functional.max_pool2d(Tensor([1, 1, 0, 5],"float32"), kernel_size=2, stride=2, return_mask=True, )
paddle.nn.functional.max_pool2d(Tensor([1, 1, 4, 0],"float32"), kernel_size=2, stride=2, padding=0, return_mask=True, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 1, 4, 0],"float32"), kernel_size=2, stride=2, return_mask=True, )
paddle.nn.functional.max_pool2d(Tensor([1, 128, 0, 40],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 128, 40, 0],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 16, 0, 10],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 16, 10, 0],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 192, 0, 20],"float32"), kernel_size=13, stride=1, padding=6, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 192, 0, 20],"float32"), kernel_size=5, stride=1, padding=2, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 192, 0, 20],"float32"), kernel_size=9, stride=1, padding=4, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 192, 20, 0],"float32"), kernel_size=13, stride=1, padding=6, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 192, 20, 0],"float32"), kernel_size=5, stride=1, padding=2, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 192, 20, 0],"float32"), kernel_size=9, stride=1, padding=4, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 2, 0, 32],"float32"), kernel_size=2, stride=2, padding=0, return_mask=True, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 2, 32, 0],"float32"), kernel_size=2, stride=2, padding=0, return_mask=True, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 24, 0, 368],"float32"), kernel_size=2, stride=1, padding="SAME", return_mask=False, ceil_mode=True, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 24, 0, 384],"float32"), kernel_size=2, stride=1, padding="SAME", return_mask=False, ceil_mode=True, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 24, 0, 40],"float32"), kernel_size=3, stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 24, 368, 0],"float32"), kernel_size=2, stride=1, padding="SAME", return_mask=False, ceil_mode=True, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 24, 384, 0],"float32"), kernel_size=2, stride=1, padding="SAME", return_mask=False, ceil_mode=True, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 24, 40, 0],"float32"), kernel_size=3, stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 256, 0, 27],"float32"), 1, stride=2, )
paddle.nn.functional.max_pool2d(Tensor([1, 256, 0, 30],"float32"), 1, stride=2, )
paddle.nn.functional.max_pool2d(Tensor([1, 256, 20, 0],"float32"), 1, stride=2, )
paddle.nn.functional.max_pool2d(Tensor([1, 3, 0, 224],"float32"), kernel_size=1, )
paddle.nn.functional.max_pool2d(Tensor([1, 3, 0, 224],"float32"), kernel_size=2, )
paddle.nn.functional.max_pool2d(Tensor([1, 3, 0, 224],"float32"), kernel_size=3, )
paddle.nn.functional.max_pool2d(Tensor([1, 3, 0, 6],"float32"), kernel_size=2, stride=2, padding=0, return_mask=True, )
paddle.nn.functional.max_pool2d(Tensor([1, 3, 224, 0],"float32"), kernel_size=1, )
paddle.nn.functional.max_pool2d(Tensor([1, 3, 224, 0],"float32"), kernel_size=2, )
paddle.nn.functional.max_pool2d(Tensor([1, 3, 224, 0],"float32"), kernel_size=3, )
paddle.nn.functional.max_pool2d(Tensor([1, 3, 6, 0],"float32"), kernel_size=2, stride=2, padding=0, return_mask=True, )
paddle.nn.functional.max_pool2d(Tensor([1, 384, 0, 32],"float32"), kernel_size=13, stride=1, padding=6, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 384, 0, 32],"float32"), kernel_size=5, stride=1, padding=2, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 384, 0, 32],"float32"), kernel_size=9, stride=1, padding=4, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 384, 32, 0],"float32"), kernel_size=13, stride=1, padding=6, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 384, 32, 0],"float32"), kernel_size=5, stride=1, padding=2, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 384, 32, 0],"float32"), kernel_size=9, stride=1, padding=4, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 64, 0, 112],"float32"), kernel_size=3, stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 64, 0, 257],"float32"), tuple(3,3,), tuple(2,2,), tuple(0,0,), False, )
paddle.nn.functional.max_pool2d(Tensor([1, 64, 0, 273],"float32"), tuple(3,3,), tuple(2,2,), tuple(0,0,), False, )
paddle.nn.functional.max_pool2d(Tensor([1, 64, 0, 399],"float32"), kernel_size=3, stride=2, padding=1, )
paddle.nn.functional.max_pool2d(Tensor([1, 64, 0, 432],"float32"), kernel_size=3, stride=2, padding=1, )
paddle.nn.functional.max_pool2d(Tensor([1, 64, 112, 0],"float32"), kernel_size=3, stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 64, 17, 0],"float32"), tuple(3,3,), tuple(2,2,), tuple(0,0,), False, )
paddle.nn.functional.max_pool2d(Tensor([1, 64, 288, 0],"float32"), kernel_size=3, stride=2, padding=1, )
paddle.nn.functional.max_pool2d(Tensor([1, 64, 320, 0],"float32"), kernel_size=3, stride=2, padding=1, )
paddle.nn.functional.max_pool2d(Tensor([12, 0, 40, 40],"float16"), 3, stride=1, padding=1, data_format="NCHW", )
paddle.nn.functional.max_pool2d(Tensor([12, 0, 40, 40],"float32"), 3, stride=1, padding=1, data_format="NCHW", )
paddle.nn.functional.max_pool2d(Tensor([12, 128, 0, 40],"float16"), 3, stride=1, padding=1, data_format="NCHW", )
paddle.nn.functional.max_pool2d(Tensor([12, 128, 0, 40],"float32"), 3, stride=1, padding=1, data_format="NCHW", )
paddle.nn.functional.max_pool2d(Tensor([12, 128, 40, 0],"float16"), 3, stride=1, padding=1, data_format="NCHW", )
paddle.nn.functional.max_pool2d(Tensor([12, 128, 40, 0],"float32"), 3, stride=1, padding=1, data_format="NCHW", )
paddle.nn.functional.max_pool2d(Tensor([13, 0, 4, 1],"float32"), tuple(2,1,), stride=tuple(2,1,), ceil_mode=True, )
paddle.nn.functional.max_pool2d(Tensor([13, 0, 7, 1],"float32"), tuple(2,1,), stride=tuple(2,1,), ceil_mode=True, )
paddle.nn.functional.max_pool2d(Tensor([13, 0, 7, 7],"float32"), kernel_size=1, stride=2, padding=0, )
paddle.nn.functional.max_pool2d(Tensor([13, 1, 0, 1],"float32"), tuple(2,1,), stride=tuple(2,1,), ceil_mode=True, )
paddle.nn.functional.max_pool2d(Tensor([13, 1, 4, 0],"float32"), tuple(2,1,), stride=tuple(2,1,), ceil_mode=True, )
paddle.nn.functional.max_pool2d(Tensor([13, 1, 7, 0],"float32"), tuple(2,1,), stride=tuple(2,1,), ceil_mode=True, )
paddle.nn.functional.max_pool2d(Tensor([13, 256, 0, 7],"float32"), kernel_size=1, stride=2, padding=0, )
paddle.nn.functional.max_pool2d(Tensor([13, 256, 7, 0],"float32"), kernel_size=1, stride=2, padding=0, )
paddle.nn.functional.max_pool2d(Tensor([2, 0, 16, 64],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=True, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 0, 17, 17],"float32"), kernel_size=tuple(3,3,), stride=tuple(2,2,), padding=tuple(0,0,), return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 0, 224, 224],"float32"), kernel_size=list[5,3,], stride=list[1,2,], padding=tuple(2,1,), )
paddle.nn.functional.max_pool2d(Tensor([2, 0, 244, 2],"float32"), kernel_size=list[5,3,], stride=list[1,2,], padding=tuple(2,1,), )
paddle.nn.functional.max_pool2d(Tensor([2, 0, 27, 27],"float32"), kernel_size=3, stride=1, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 0, 27, 27],"float32"), kernel_size=3, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 0, 32, 3],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, data_format="NHWC", )
paddle.nn.functional.max_pool2d(Tensor([2, 0, 32, 32],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=True, )
paddle.nn.functional.max_pool2d(Tensor([2, 0, 32, 32],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, )
paddle.nn.functional.max_pool2d(Tensor([2, 0, 32, 32],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=True, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 0, 32, 32],"float32"), kernel_size=2, stride=2, padding=1, ceil_mode=False, )
paddle.nn.functional.max_pool2d(Tensor([2, 0, 32, 32],"float32"), kernel_size=2, stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 0, 32, 32],"float32"), kernel_size=2, stride=2, padding=list[list[0,0,],list[0,0,],list[0,0,],list[0,0,],], return_mask=False, )
paddle.nn.functional.max_pool2d(Tensor([2, 0, 32, 32],"float32"), kernel_size=2, stride=None, padding="SAME", return_mask=True, )
paddle.nn.functional.max_pool2d(Tensor([2, 0, 32, 32],"float32"), kernel_size=list[2,2,], stride=None, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 0, 32, 32],"float64"), kernel_size=list[2,2,], stride=None, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 0, 32, 32],"float64"), kernel_size=list[3,3,], stride=list[1,1,], padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 0, 32, 32],"float64"), kernel_size=list[3,3,], stride=list[1,1,], padding=list[0,0,0,0,], return_mask=False, ceil_mode=True, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 0, 32, 32],"float64"), kernel_size=list[3,3,], stride=list[1,1,], padding=list[1,1,], return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 0, 32, 32],"float64"), kernel_size=list[3,3,], stride=list[1,2,], padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 0, 32, 32],"float64"), kernel_size=list[3,3,], stride=None, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 0, 32, 32],"float64"), kernel_size=list[3,3,], stride=tuple(1,2,), padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 0, 33, 33],"float32"), kernel_size=5, stride=5, padding=0, ceil_mode=True, return_mask=True, )
paddle.nn.functional.max_pool2d(Tensor([2, 0, 40, 40],"float64"), kernel_size=2, stride=None, padding=0, return_mask=True, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 0, 40, 40],"float64"), kernel_size=4, stride=2, padding=2, return_mask=True, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 0, 40, 40],"float64"), kernel_size=4, stride=None, padding=2, return_mask=True, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 0, 40, 40],"float64"), kernel_size=tuple(2,4,), stride=None, padding=0, return_mask=True, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 0, 55, 55],"float32"), kernel_size=3, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 128, 0, 55],"float32"), kernel_size=3, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 128, 55, 0],"float32"), kernel_size=3, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 192, 0, 27],"float32"), kernel_size=3, stride=1, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 192, 0, 27],"float32"), kernel_size=3, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 192, 27, 0],"float32"), kernel_size=3, stride=1, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 192, 27, 0],"float32"), kernel_size=3, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 244, 0, 2],"float32"), kernel_size=list[5,3,], stride=list[1,2,], padding=tuple(2,1,), )
paddle.nn.functional.max_pool2d(Tensor([2, 244, 244, 0],"float32"), kernel_size=list[5,3,], stride=list[1,2,], padding=tuple(2,1,), )
paddle.nn.functional.max_pool2d(Tensor([2, 256, 0, 27],"float32"), kernel_size=3, stride=1, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 256, 27, 0],"float32"), kernel_size=3, stride=1, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 3, 0, 224],"float32"), kernel_size=list[5,3,], stride=list[1,2,], padding=tuple(2,1,), )
paddle.nn.functional.max_pool2d(Tensor([2, 3, 0, 32],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=True, )
paddle.nn.functional.max_pool2d(Tensor([2, 3, 0, 32],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, )
paddle.nn.functional.max_pool2d(Tensor([2, 3, 0, 32],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=True, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 3, 0, 32],"float32"), kernel_size=2, stride=2, padding=1, ceil_mode=False, )
paddle.nn.functional.max_pool2d(Tensor([2, 3, 0, 32],"float32"), kernel_size=2, stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 3, 0, 32],"float32"), kernel_size=2, stride=2, padding=list[list[0,0,],list[0,0,],list[0,0,],list[0,0,],], return_mask=False, )
paddle.nn.functional.max_pool2d(Tensor([2, 3, 0, 32],"float32"), kernel_size=2, stride=None, padding="SAME", return_mask=True, )
paddle.nn.functional.max_pool2d(Tensor([2, 3, 0, 32],"float32"), kernel_size=list[2,2,], stride=None, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 3, 0, 32],"float64"), kernel_size=list[2,2,], stride=None, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 3, 0, 32],"float64"), kernel_size=list[3,3,], stride=list[1,1,], padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 3, 0, 32],"float64"), kernel_size=list[3,3,], stride=list[1,1,], padding=list[0,0,0,0,], return_mask=False, ceil_mode=True, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 3, 0, 32],"float64"), kernel_size=list[3,3,], stride=list[1,1,], padding=list[1,1,], return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 3, 0, 32],"float64"), kernel_size=list[3,3,], stride=list[1,2,], padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 3, 0, 32],"float64"), kernel_size=list[3,3,], stride=None, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 3, 0, 32],"float64"), kernel_size=list[3,3,], stride=tuple(1,2,), padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 3, 0, 33],"float32"), kernel_size=5, stride=5, padding=0, ceil_mode=True, return_mask=True, )
paddle.nn.functional.max_pool2d(Tensor([2, 3, 224, 0],"float32"), kernel_size=list[5,3,], stride=list[1,2,], padding=tuple(2,1,), )
paddle.nn.functional.max_pool2d(Tensor([2, 3, 32, 0],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=True, )
paddle.nn.functional.max_pool2d(Tensor([2, 3, 32, 0],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, )
paddle.nn.functional.max_pool2d(Tensor([2, 3, 32, 0],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=True, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 3, 32, 0],"float32"), kernel_size=2, stride=2, padding=1, ceil_mode=False, )
paddle.nn.functional.max_pool2d(Tensor([2, 3, 32, 0],"float32"), kernel_size=2, stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 3, 32, 0],"float32"), kernel_size=2, stride=2, padding=list[list[0,0,],list[0,0,],list[0,0,],list[0,0,],], return_mask=False, )
paddle.nn.functional.max_pool2d(Tensor([2, 3, 32, 0],"float32"), kernel_size=2, stride=None, padding="SAME", return_mask=True, )
paddle.nn.functional.max_pool2d(Tensor([2, 3, 32, 0],"float32"), kernel_size=list[2,2,], stride=None, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 3, 32, 0],"float64"), kernel_size=list[2,2,], stride=None, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 3, 32, 0],"float64"), kernel_size=list[3,3,], stride=list[1,1,], padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 3, 32, 0],"float64"), kernel_size=list[3,3,], stride=list[1,1,], padding=list[0,0,0,0,], return_mask=False, ceil_mode=True, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 3, 32, 0],"float64"), kernel_size=list[3,3,], stride=list[1,1,], padding=list[1,1,], return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 3, 32, 0],"float64"), kernel_size=list[3,3,], stride=list[1,2,], padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 3, 32, 0],"float64"), kernel_size=list[3,3,], stride=None, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 3, 32, 0],"float64"), kernel_size=list[3,3,], stride=tuple(1,2,), padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 3, 33, 0],"float32"), kernel_size=5, stride=5, padding=0, ceil_mode=True, return_mask=True, )
paddle.nn.functional.max_pool2d(Tensor([2, 32, 0, 3],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, data_format="NHWC", )
paddle.nn.functional.max_pool2d(Tensor([2, 32, 32, 0],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, data_format="NHWC", )
paddle.nn.functional.max_pool2d(Tensor([2, 4, 0, 40],"float64"), kernel_size=2, stride=None, padding=0, return_mask=True, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 4, 0, 40],"float64"), kernel_size=4, stride=2, padding=2, return_mask=True, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 4, 0, 40],"float64"), kernel_size=4, stride=None, padding=2, return_mask=True, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 4, 0, 40],"float64"), kernel_size=tuple(2,4,), stride=None, padding=0, return_mask=True, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 4, 40, 0],"float64"), kernel_size=2, stride=None, padding=0, return_mask=True, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 4, 40, 0],"float64"), kernel_size=4, stride=2, padding=2, return_mask=True, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 4, 40, 0],"float64"), kernel_size=4, stride=None, padding=2, return_mask=True, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 4, 40, 0],"float64"), kernel_size=tuple(2,4,), stride=None, padding=0, return_mask=True, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 64, 0, 17],"float32"), kernel_size=tuple(3,3,), stride=tuple(2,2,), padding=tuple(0,0,), return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 64, 17, 0],"float32"), kernel_size=tuple(3,3,), stride=tuple(2,2,), padding=tuple(0,0,), return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 8, 0, 64],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=True, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([2, 8, 16, 0],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=True, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([256, 0, 112, 64],"float16"), kernel_size=3, stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NHWC", name=None, )
paddle.nn.functional.max_pool2d(Tensor([256, 112, 0, 64],"float16"), kernel_size=3, stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NHWC", name=None, )
paddle.nn.functional.max_pool2d(Tensor([256, 112, 112, 0],"float16"), kernel_size=3, stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NHWC", name=None, )
paddle.nn.functional.max_pool2d(Tensor([3, 0, 18, 18],"float32"), kernel_size=tuple(3,3,), stride=tuple(2,2,), padding=tuple(0,0,), return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([3, 64, 0, 18],"float32"), kernel_size=tuple(3,3,), stride=tuple(2,2,), padding=tuple(0,0,), return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([3, 64, 18, 0],"float32"), kernel_size=tuple(3,3,), stride=tuple(2,2,), padding=tuple(0,0,), return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([4, 0, 4, 4],"float16"), kernel_size=2, stride=2, padding=0, )
paddle.nn.functional.max_pool2d(Tensor([4, 4, 0, 4],"float16"), kernel_size=2, stride=2, padding=0, )
paddle.nn.functional.max_pool2d(Tensor([4, 4, 4, 0],"float16"), kernel_size=2, stride=2, padding=0, )
paddle.nn.functional.max_pool2d(Tensor([64, 0, 1, 40],"float16"), kernel_size=tuple(1,1,), stride=1, padding=0, )
paddle.nn.functional.max_pool2d(Tensor([64, 0, 1, 40],"float32"), kernel_size=tuple(1,1,), stride=1, padding=0, )
paddle.nn.functional.max_pool2d(Tensor([64, 512, 0, 40],"float16"), kernel_size=tuple(1,1,), stride=1, padding=0, )
