paddle.reshape(Tensor([4, 0, 83328],"float32"), shape=tuple(-1,248,336,), )
paddle.reshape(Tensor([4, 0, 84480],"float16"), shape=tuple(-1,264,320,), )
paddle.reshape(Tensor([4, 0, 84480],"float32"), shape=tuple(-1,264,320,), )
paddle.reshape(Tensor([4, 0, 84864],"float16"), shape=tuple(-1,272,312,), )
paddle.reshape(Tensor([4, 0, 84864],"float16"), shape=tuple(-1,312,272,), )
paddle.reshape(Tensor([4, 0, 84864],"float32"), shape=tuple(-1,272,312,), )
paddle.reshape(Tensor([4, 0, 84864],"float32"), shape=tuple(-1,312,272,), )
paddle.reshape(Tensor([4, 0, 85120],"float16"), shape=tuple(-1,280,304,), )
paddle.reshape(Tensor([4, 0, 85120],"float16"), shape=tuple(-1,304,280,), )
paddle.reshape(Tensor([4, 0, 85120],"float32"), shape=tuple(-1,280,304,), )
paddle.reshape(Tensor([4, 0, 86016],"float16"), shape=tuple(-1,256,336,), )
paddle.reshape(Tensor([4, 0, 86016],"float32"), shape=tuple(-1,256,336,), )
paddle.reshape(Tensor([4, 0, 87040],"float16"), shape=tuple(-1,272,320,), )
paddle.reshape(Tensor([4, 0, 87040],"float16"), shape=tuple(-1,320,272,), )
paddle.reshape(Tensor([4, 0, 87040],"float32"), shape=tuple(-1,272,320,), )
paddle.reshape(Tensor([4, 0, 87040],"float32"), shape=tuple(-1,320,272,), )
paddle.reshape(Tensor([4, 0, 87360],"float16"), shape=tuple(-1,280,312,), )
paddle.reshape(Tensor([4, 0, 87360],"float32"), shape=tuple(-1,280,312,), )
paddle.reshape(Tensor([4, 0, 87552],"float16"), shape=tuple(-1,288,304,), )
paddle.reshape(Tensor([4, 0, 87552],"float16"), shape=tuple(-1,304,288,), )
paddle.reshape(Tensor([4, 0, 87552],"float32"), shape=tuple(-1,288,304,), )
paddle.reshape(Tensor([4, 0, 87552],"float32"), shape=tuple(-1,304,288,), )
paddle.reshape(Tensor([4, 0, 88704],"float16"), shape=tuple(-1,264,336,), )
paddle.reshape(Tensor([4, 0, 88704],"float32"), shape=tuple(-1,264,336,), )
paddle.reshape(Tensor([4, 0, 89216],"float16"), shape=tuple(-1,272,328,), )
paddle.reshape(Tensor([4, 0, 89216],"float16"), shape=tuple(-1,328,272,), )
paddle.reshape(Tensor([4, 0, 89216],"float32"), shape=tuple(-1,272,328,), )
paddle.reshape(Tensor([4, 0, 89984],"float16"), shape=tuple(-1,296,304,), )
paddle.reshape(Tensor([4, 0, 89984],"float16"), shape=tuple(-1,304,296,), )
paddle.reshape(Tensor([4, 0, 89984],"float32"), shape=tuple(-1,296,304,), )
paddle.reshape(Tensor([4, 0, 91392],"float16"), shape=tuple(-1,272,336,), )
paddle.reshape(Tensor([4, 0, 91392],"float16"), shape=tuple(-1,336,272,), )
paddle.reshape(Tensor([4, 0, 91392],"float32"), shape=tuple(-1,272,336,), )
paddle.reshape(Tensor([4, 0, 91392],"float32"), shape=tuple(-1,336,272,), )
paddle.reshape(Tensor([4, 0, 91840],"float16"), shape=tuple(-1,280,328,), )
paddle.reshape(Tensor([4, 0, 92352],"float16"), shape=tuple(-1,312,296,), )
paddle.reshape(Tensor([4, 0, 92352],"float32"), shape=tuple(-1,312,296,), )
paddle.reshape(Tensor([4, 0, 92416],"float16"), shape=tuple(-1,304,304,), )
paddle.reshape(Tensor([4, 0, 94080],"float16"), shape=tuple(-1,280,336,), )
paddle.reshape(Tensor([4, 0, 94080],"float16"), shape=tuple(-1,336,280,), )
paddle.reshape(Tensor([4, 0, 94848],"float16"), shape=tuple(-1,304,312,), )
paddle.reshape(Tensor([4, 0, 94848],"float16"), shape=tuple(-1,312,304,), )
paddle.reshape(Tensor([4, 0, 94848],"float32"), shape=tuple(-1,304,312,), )
paddle.reshape(Tensor([4, 0, 94848],"float32"), shape=tuple(-1,312,304,), )
paddle.reshape(Tensor([4, 0, 96, 128],"float32"), list[4,96,96,128,], )
paddle.reshape(Tensor([4, 0, 96, 192],"float32"), list[4,96,96,192,], )
paddle.reshape(Tensor([4, 0, 96768],"float16"), shape=tuple(-1,288,336,), )
paddle.reshape(Tensor([4, 0, 96768],"float32"), shape=tuple(-1,288,336,), )
paddle.reshape(Tensor([4, 0, 97088],"float16"), shape=tuple(-1,296,328,), )
paddle.reshape(Tensor([4, 0, 97088],"float16"), shape=tuple(-1,328,296,), )
paddle.reshape(Tensor([4, 0, 97088],"float32"), shape=tuple(-1,328,296,), )
paddle.reshape(Tensor([4, 0, 97280],"float16"), shape=tuple(-1,304,320,), )
paddle.reshape(Tensor([4, 0, 97280],"float16"), shape=tuple(-1,320,304,), )
paddle.reshape(Tensor([4, 0, 97280],"float32"), shape=tuple(-1,304,320,), )
paddle.reshape(Tensor([4, 0, 97280],"float32"), shape=tuple(-1,320,304,), )
paddle.reshape(Tensor([4, 0, 99456],"float16"), shape=tuple(-1,296,336,), )
paddle.reshape(Tensor([4, 0, 99456],"float32"), shape=tuple(-1,296,336,), )
paddle.reshape(Tensor([4, 0, 99712],"float16"), shape=tuple(-1,304,328,), )
paddle.reshape(Tensor([4, 0, 99712],"float16"), shape=tuple(-1,328,304,), )
paddle.reshape(Tensor([4, 0, 99712],"float32"), shape=tuple(-1,304,328,), )
paddle.reshape(Tensor([4, 0, 99712],"float32"), shape=tuple(-1,328,304,), )
paddle.reshape(Tensor([4, 0],"float32"), list[-1,3,10,], )
paddle.reshape(Tensor([4, 0],"float32"), list[4,5,4,], )
paddle.reshape(Tensor([4, 0],"float32"), list[4,5,6,6,6,], )
paddle.reshape(Tensor([4, 0],"float32"), list[4,7,], )
paddle.reshape(Tensor([4, 0],"float32"), shape=list[1,-1,10,], )
paddle.reshape(Tensor([4, 0],"float32"), shape=list[-1,1,10,], )
paddle.reshape(Tensor([4, 0],"float32"), tuple(-1,7,), )
paddle.reshape(Tensor([4, 0],"float32"), tuple(2,4,), )
paddle.reshape(Tensor([4, 0],"float32"), tuple(4,-1,), )
paddle.reshape(Tensor([4, 0],"float64"), shape=list[4,-1,], )
paddle.reshape(Tensor([4, 1, 0, 272],"float32"), shape=list[-1,272,272,], )
paddle.reshape(Tensor([4, 1, 0, 272],"float32"), shape=list[-1,296,272,], )
paddle.reshape(Tensor([4, 1, 0, 272],"float32"), shape=list[-1,312,272,], )
paddle.reshape(Tensor([4, 1, 0, 304],"float32"), shape=list[-1,272,304,], )
paddle.reshape(Tensor([4, 1, 0, 304],"float32"), shape=list[-1,304,304,], )
paddle.reshape(Tensor([4, 1, 0, 304],"float32"), shape=list[-1,320,304,], )
paddle.reshape(Tensor([4, 1, 0, 312],"float32"), shape=list[-1,280,312,], )
paddle.reshape(Tensor([4, 1, 0, 336],"float32"), shape=list[-1,200,336,], )
paddle.reshape(Tensor([4, 1, 0, 336],"float32"), shape=list[-1,304,336,], )
paddle.reshape(Tensor([4, 1, 0, 336],"float32"), shape=list[-1,336,336,], )
paddle.reshape(Tensor([4, 1, 0],"float16"), shape=tuple(-1,200,336,), )
paddle.reshape(Tensor([4, 1, 0],"float16"), shape=tuple(-1,272,272,), )
paddle.reshape(Tensor([4, 1, 0],"float16"), shape=tuple(-1,272,304,), )
paddle.reshape(Tensor([4, 1, 0],"float16"), shape=tuple(-1,280,312,), )
paddle.reshape(Tensor([4, 1, 0],"float16"), shape=tuple(-1,296,272,), )
paddle.reshape(Tensor([4, 1, 0],"float16"), shape=tuple(-1,304,304,), )
paddle.reshape(Tensor([4, 1, 0],"float16"), shape=tuple(-1,304,336,), )
paddle.reshape(Tensor([4, 1, 0],"float16"), shape=tuple(-1,312,272,), )
paddle.reshape(Tensor([4, 1, 0],"float16"), shape=tuple(-1,320,304,), )
paddle.reshape(Tensor([4, 1, 0],"float16"), shape=tuple(-1,336,336,), )
paddle.reshape(Tensor([4, 1, 0],"float32"), shape=list[-1,10,], )
paddle.reshape(Tensor([4, 1, 0],"float32"), shape=tuple(-1,272,272,), )
paddle.reshape(Tensor([4, 1, 0],"float32"), shape=tuple(-1,280,312,), )
paddle.reshape(Tensor([4, 1, 0],"float32"), shape=tuple(-1,296,272,), )
paddle.reshape(Tensor([4, 1, 0],"float32"), shape=tuple(-1,304,336,), )
paddle.reshape(Tensor([4, 1, 0],"float32"), shape=tuple(-1,312,272,), )
paddle.reshape(Tensor([4, 1, 0],"float32"), shape=tuple(-1,320,304,), )
paddle.reshape(Tensor([4, 1, 0],"float32"), shape=tuple(-1,336,336,), )
paddle.reshape(Tensor([4, 1, 200, 0],"float32"), shape=list[-1,200,336,], )
paddle.reshape(Tensor([4, 1, 272, 0],"float32"), shape=list[-1,272,272,], )
paddle.reshape(Tensor([4, 1, 272, 0],"float32"), shape=list[-1,272,304,], )
paddle.reshape(Tensor([4, 1, 280, 0],"float32"), shape=list[-1,280,312,], )
paddle.reshape(Tensor([4, 1, 296, 0],"float32"), shape=list[-1,296,272,], )
paddle.reshape(Tensor([4, 1, 304, 0],"float32"), shape=list[-1,304,304,], )
paddle.reshape(Tensor([4, 1, 304, 0],"float32"), shape=list[-1,304,336,], )
paddle.reshape(Tensor([4, 1, 312, 0],"float32"), shape=list[-1,312,272,], )
paddle.reshape(Tensor([4, 1, 320, 0],"float32"), shape=list[-1,320,304,], )
paddle.reshape(Tensor([4, 1, 336, 0],"float32"), shape=list[-1,336,336,], )
paddle.reshape(Tensor([4, 10, 0, 200],"float32"), shape=list[-1,336,200,], )
paddle.reshape(Tensor([4, 10, 0, 272],"float32"), shape=list[-1,200,272,], )
paddle.reshape(Tensor([4, 10, 0, 272],"float32"), shape=list[-1,208,272,], )
paddle.reshape(Tensor([4, 10, 0, 272],"float32"), shape=list[-1,256,272,], )
paddle.reshape(Tensor([4, 10, 0, 272],"float32"), shape=list[-1,272,272,], )
paddle.reshape(Tensor([4, 10, 0, 272],"float32"), shape=list[-1,280,272,], )
paddle.reshape(Tensor([4, 10, 0, 272],"float32"), shape=list[-1,288,272,], )
paddle.reshape(Tensor([4, 10, 0, 272],"float32"), shape=list[-1,296,272,], )
paddle.reshape(Tensor([4, 10, 0, 272],"float32"), shape=list[-1,304,272,], )
paddle.reshape(Tensor([4, 10, 0, 272],"float32"), shape=list[-1,312,272,], )
paddle.reshape(Tensor([4, 10, 0, 272],"float32"), shape=list[-1,336,272,], )
paddle.reshape(Tensor([4, 10, 0, 280],"float32"), shape=list[-1,280,280,], )
paddle.reshape(Tensor([4, 10, 0, 280],"float32"), shape=list[-1,304,280,], )
paddle.reshape(Tensor([4, 10, 0, 280],"float32"), shape=list[-1,336,280,], )
paddle.reshape(Tensor([4, 10, 0, 296],"float32"), shape=list[-1,200,296,], )
paddle.reshape(Tensor([4, 10, 0, 296],"float32"), shape=list[-1,216,296,], )
paddle.reshape(Tensor([4, 10, 0, 296],"float32"), shape=list[-1,264,296,], )
paddle.reshape(Tensor([4, 10, 0, 296],"float32"), shape=list[-1,272,296,], )
paddle.reshape(Tensor([4, 10, 0, 304],"float32"), shape=list[-1,208,304,], )
paddle.reshape(Tensor([4, 10, 0, 304],"float32"), shape=list[-1,232,304,], )
paddle.reshape(Tensor([4, 10, 0, 304],"float32"), shape=list[-1,272,304,], )
paddle.reshape(Tensor([4, 10, 0, 304],"float32"), shape=list[-1,296,304,], )
paddle.reshape(Tensor([4, 10, 0, 304],"float32"), shape=list[-1,304,304,], )
paddle.reshape(Tensor([4, 10, 0, 304],"float32"), shape=list[-1,312,304,], )
paddle.reshape(Tensor([4, 10, 0, 304],"float32"), shape=list[-1,320,304,], )
paddle.reshape(Tensor([4, 10, 0, 304],"float32"), shape=list[-1,328,304,], )
paddle.reshape(Tensor([4, 10, 0, 304],"float32"), shape=list[-1,336,304,], )
paddle.reshape(Tensor([4, 10, 0, 312],"float32"), shape=list[-1,216,312,], )
paddle.reshape(Tensor([4, 10, 0, 312],"float32"), shape=list[-1,272,312,], )
paddle.reshape(Tensor([4, 10, 0, 312],"float32"), shape=list[-1,304,312,], )
paddle.reshape(Tensor([4, 10, 0, 320],"float32"), shape=list[-1,200,320,], )
paddle.reshape(Tensor([4, 10, 0, 320],"float32"), shape=list[-1,272,320,], )
paddle.reshape(Tensor([4, 10, 0, 320],"float32"), shape=list[-1,304,320,], )
paddle.reshape(Tensor([4, 10, 0, 328],"float32"), shape=list[-1,272,328,], )
paddle.reshape(Tensor([4, 10, 0, 336],"float32"), shape=list[-1,200,336,], )
paddle.reshape(Tensor([4, 10, 0, 336],"float32"), shape=list[-1,256,336,], )
paddle.reshape(Tensor([4, 10, 0, 336],"float32"), shape=list[-1,272,336,], )
paddle.reshape(Tensor([4, 10, 0, 336],"float32"), shape=list[-1,280,336,], )
paddle.reshape(Tensor([4, 10, 0, 336],"float32"), shape=list[-1,296,336,], )
paddle.reshape(Tensor([4, 10, 0, 336],"float32"), shape=list[-1,304,336,], )
paddle.reshape(Tensor([4, 10, 0, 336],"float32"), shape=list[-1,312,336,], )
paddle.reshape(Tensor([4, 10, 0, 336],"float32"), shape=list[-1,336,336,], )
paddle.reshape(Tensor([4, 10, 0],"float16"), shape=tuple(-1,200,272,), )
paddle.reshape(Tensor([4, 10, 0],"float16"), shape=tuple(-1,200,296,), )
paddle.reshape(Tensor([4, 10, 0],"float16"), shape=tuple(-1,200,320,), )
paddle.reshape(Tensor([4, 10, 0],"float16"), shape=tuple(-1,200,336,), )
paddle.reshape(Tensor([4, 10, 0],"float16"), shape=tuple(-1,208,272,), )
paddle.reshape(Tensor([4, 10, 0],"float16"), shape=tuple(-1,208,304,), )
paddle.reshape(Tensor([4, 10, 0],"float16"), shape=tuple(-1,216,296,), )
paddle.reshape(Tensor([4, 10, 0],"float16"), shape=tuple(-1,216,312,), )
paddle.reshape(Tensor([4, 10, 0],"float16"), shape=tuple(-1,232,304,), )
paddle.reshape(Tensor([4, 10, 0],"float16"), shape=tuple(-1,256,272,), )
paddle.reshape(Tensor([4, 10, 0],"float16"), shape=tuple(-1,256,336,), )
paddle.reshape(Tensor([4, 10, 0],"float16"), shape=tuple(-1,264,296,), )
paddle.reshape(Tensor([4, 10, 0],"float16"), shape=tuple(-1,272,296,), )
paddle.reshape(Tensor([4, 10, 0],"float16"), shape=tuple(-1,272,304,), )
paddle.reshape(Tensor([4, 10, 0],"float16"), shape=tuple(-1,272,312,), )
paddle.reshape(Tensor([4, 10, 0],"float16"), shape=tuple(-1,272,320,), )
paddle.reshape(Tensor([4, 10, 0],"float16"), shape=tuple(-1,272,328,), )
paddle.reshape(Tensor([4, 10, 0],"float16"), shape=tuple(-1,272,336,), )
paddle.reshape(Tensor([4, 10, 0],"float16"), shape=tuple(-1,280,272,), )
paddle.reshape(Tensor([4, 10, 0],"float16"), shape=tuple(-1,280,280,), )
paddle.reshape(Tensor([4, 10, 0],"float16"), shape=tuple(-1,280,336,), )
paddle.reshape(Tensor([4, 10, 0],"float16"), shape=tuple(-1,288,272,), )
paddle.reshape(Tensor([4, 10, 0],"float16"), shape=tuple(-1,296,304,), )
paddle.reshape(Tensor([4, 10, 0],"float16"), shape=tuple(-1,296,336,), )
paddle.reshape(Tensor([4, 10, 0],"float16"), shape=tuple(-1,304,272,), )
paddle.reshape(Tensor([4, 10, 0],"float16"), shape=tuple(-1,304,280,), )
paddle.reshape(Tensor([4, 10, 0],"float16"), shape=tuple(-1,304,304,), )
paddle.reshape(Tensor([4, 10, 0],"float16"), shape=tuple(-1,304,312,), )
paddle.reshape(Tensor([4, 10, 0],"float16"), shape=tuple(-1,304,320,), )
paddle.reshape(Tensor([4, 10, 0],"float16"), shape=tuple(-1,312,304,), )
paddle.reshape(Tensor([4, 10, 0],"float16"), shape=tuple(-1,312,336,), )
paddle.reshape(Tensor([4, 10, 0],"float16"), shape=tuple(-1,328,304,), )
paddle.reshape(Tensor([4, 10, 0],"float16"), shape=tuple(-1,336,200,), )
paddle.reshape(Tensor([4, 10, 0],"float16"), shape=tuple(-1,336,272,), )
paddle.reshape(Tensor([4, 10, 0],"float16"), shape=tuple(-1,336,280,), )
paddle.reshape(Tensor([4, 10, 0],"float16"), shape=tuple(-1,336,304,), )
paddle.reshape(Tensor([4, 10, 0],"float32"), shape=tuple(-1,200,296,), )
paddle.reshape(Tensor([4, 10, 0],"float32"), shape=tuple(-1,200,320,), )
paddle.reshape(Tensor([4, 10, 0],"float32"), shape=tuple(-1,208,304,), )
paddle.reshape(Tensor([4, 10, 0],"float32"), shape=tuple(-1,216,296,), )
paddle.reshape(Tensor([4, 10, 0],"float32"), shape=tuple(-1,232,304,), )
paddle.reshape(Tensor([4, 10, 0],"float32"), shape=tuple(-1,256,272,), )
paddle.reshape(Tensor([4, 10, 0],"float32"), shape=tuple(-1,256,336,), )
paddle.reshape(Tensor([4, 10, 0],"float32"), shape=tuple(-1,264,296,), )
paddle.reshape(Tensor([4, 10, 0],"float32"), shape=tuple(-1,272,296,), )
paddle.reshape(Tensor([4, 10, 0],"float32"), shape=tuple(-1,272,312,), )
paddle.reshape(Tensor([4, 10, 0],"float32"), shape=tuple(-1,272,320,), )
paddle.reshape(Tensor([4, 10, 0],"float32"), shape=tuple(-1,272,328,), )
paddle.reshape(Tensor([4, 10, 0],"float32"), shape=tuple(-1,272,336,), )
paddle.reshape(Tensor([4, 10, 0],"float32"), shape=tuple(-1,280,280,), )
paddle.reshape(Tensor([4, 10, 0],"float32"), shape=tuple(-1,288,272,), )
paddle.reshape(Tensor([4, 10, 0],"float32"), shape=tuple(-1,296,304,), )
paddle.reshape(Tensor([4, 10, 0],"float32"), shape=tuple(-1,296,336,), )
paddle.reshape(Tensor([4, 10, 0],"float32"), shape=tuple(-1,304,272,), )
paddle.reshape(Tensor([4, 10, 0],"float32"), shape=tuple(-1,304,312,), )
paddle.reshape(Tensor([4, 10, 0],"float32"), shape=tuple(-1,304,320,), )
paddle.reshape(Tensor([4, 10, 0],"float32"), shape=tuple(-1,312,304,), )
paddle.reshape(Tensor([4, 10, 0],"float32"), shape=tuple(-1,312,336,), )
paddle.reshape(Tensor([4, 10, 0],"float32"), shape=tuple(-1,328,304,), )
paddle.reshape(Tensor([4, 10, 0],"float32"), shape=tuple(-1,336,200,), )
paddle.reshape(Tensor([4, 10, 0],"float32"), shape=tuple(-1,336,272,), )
paddle.reshape(Tensor([4, 10, 0],"float32"), shape=tuple(-1,336,304,), )
paddle.reshape(Tensor([4, 10, 200, 0],"float32"), shape=list[-1,200,272,], )
paddle.reshape(Tensor([4, 10, 200, 0],"float32"), shape=list[-1,200,296,], )
paddle.reshape(Tensor([4, 10, 200, 0],"float32"), shape=list[-1,200,320,], )
paddle.reshape(Tensor([4, 10, 200, 0],"float32"), shape=list[-1,200,336,], )
paddle.reshape(Tensor([4, 10, 208, 0],"float32"), shape=list[-1,208,272,], )
paddle.reshape(Tensor([4, 10, 208, 0],"float32"), shape=list[-1,208,304,], )
paddle.reshape(Tensor([4, 10, 216, 0],"float32"), shape=list[-1,216,296,], )
paddle.reshape(Tensor([4, 10, 216, 0],"float32"), shape=list[-1,216,312,], )
paddle.reshape(Tensor([4, 10, 232, 0],"float32"), shape=list[-1,232,304,], )
paddle.reshape(Tensor([4, 10, 256, 0],"float32"), shape=list[-1,256,272,], )
paddle.reshape(Tensor([4, 10, 256, 0],"float32"), shape=list[-1,256,336,], )
paddle.reshape(Tensor([4, 10, 264, 0],"float32"), shape=list[-1,264,296,], )
paddle.reshape(Tensor([4, 10, 272, 0],"float32"), shape=list[-1,272,272,], )
paddle.reshape(Tensor([4, 10, 272, 0],"float32"), shape=list[-1,272,296,], )
paddle.reshape(Tensor([4, 10, 272, 0],"float32"), shape=list[-1,272,304,], )
paddle.reshape(Tensor([4, 10, 272, 0],"float32"), shape=list[-1,272,312,], )
paddle.reshape(Tensor([4, 10, 272, 0],"float32"), shape=list[-1,272,320,], )
paddle.reshape(Tensor([4, 10, 272, 0],"float32"), shape=list[-1,272,328,], )
paddle.reshape(Tensor([4, 10, 272, 0],"float32"), shape=list[-1,272,336,], )
paddle.reshape(Tensor([4, 10, 280, 0],"float32"), shape=list[-1,280,272,], )
paddle.reshape(Tensor([4, 10, 280, 0],"float32"), shape=list[-1,280,280,], )
paddle.reshape(Tensor([4, 10, 280, 0],"float32"), shape=list[-1,280,336,], )
paddle.reshape(Tensor([4, 10, 288, 0],"float32"), shape=list[-1,288,272,], )
paddle.reshape(Tensor([4, 10, 296, 0],"float32"), shape=list[-1,296,272,], )
paddle.reshape(Tensor([4, 10, 296, 0],"float32"), shape=list[-1,296,304,], )
paddle.reshape(Tensor([4, 10, 296, 0],"float32"), shape=list[-1,296,336,], )
paddle.reshape(Tensor([4, 10, 304, 0],"float32"), shape=list[-1,304,272,], )
paddle.reshape(Tensor([4, 10, 304, 0],"float32"), shape=list[-1,304,280,], )
paddle.reshape(Tensor([4, 10, 304, 0],"float32"), shape=list[-1,304,304,], )
paddle.reshape(Tensor([4, 10, 304, 0],"float32"), shape=list[-1,304,312,], )
paddle.reshape(Tensor([4, 10, 304, 0],"float32"), shape=list[-1,304,320,], )
paddle.reshape(Tensor([4, 10, 304, 0],"float32"), shape=list[-1,304,336,], )
paddle.reshape(Tensor([4, 10, 312, 0],"float32"), shape=list[-1,312,272,], )
paddle.reshape(Tensor([4, 10, 312, 0],"float32"), shape=list[-1,312,304,], )
paddle.reshape(Tensor([4, 10, 312, 0],"float32"), shape=list[-1,312,336,], )
paddle.reshape(Tensor([4, 10, 320, 0],"float32"), shape=list[-1,320,304,], )
paddle.reshape(Tensor([4, 10, 328, 0],"float32"), shape=list[-1,328,304,], )
paddle.reshape(Tensor([4, 10, 336, 0],"float32"), shape=list[-1,336,200,], )
paddle.reshape(Tensor([4, 10, 336, 0],"float32"), shape=list[-1,336,272,], )
paddle.reshape(Tensor([4, 10, 336, 0],"float32"), shape=list[-1,336,280,], )
paddle.reshape(Tensor([4, 10, 336, 0],"float32"), shape=list[-1,336,304,], )
paddle.reshape(Tensor([4, 10, 336, 0],"float32"), shape=list[-1,336,336,], )
paddle.reshape(Tensor([4, 100, 0, 12],"float16"), shape=tuple(4,-1,4,), )
paddle.reshape(Tensor([4, 100, 0, 12],"float32"), shape=tuple(4,-1,4,), )
paddle.reshape(Tensor([4, 100, 0, 3],"float16"), shape=tuple(4,-1,1,), )
paddle.reshape(Tensor([4, 100, 0, 3],"float32"), shape=tuple(4,-1,1,), )
paddle.reshape(Tensor([4, 100, 120, 0],"float16"), shape=tuple(4,-1,1,), )
paddle.reshape(Tensor([4, 100, 120, 0],"float16"), shape=tuple(4,-1,4,), )
paddle.reshape(Tensor([4, 100, 120, 0],"float32"), shape=tuple(4,-1,1,), )
paddle.reshape(Tensor([4, 100, 120, 0],"float32"), shape=tuple(4,-1,4,), )
paddle.reshape(Tensor([4, 1024, 0, 1],"float32"), shape=list[-1,1024,], )
paddle.reshape(Tensor([4, 1024, 1, 0],"float32"), shape=list[-1,1024,], )
paddle.reshape(Tensor([4, 11, 0, 272],"float32"), shape=list[-1,304,272,], )
paddle.reshape(Tensor([4, 11, 0, 272],"float32"), shape=list[-1,336,272,], )
paddle.reshape(Tensor([4, 11, 0, 296],"float32"), shape=list[-1,264,296,], )
paddle.reshape(Tensor([4, 11, 0, 296],"float32"), shape=list[-1,272,296,], )
paddle.reshape(Tensor([4, 11, 0, 304],"float32"), shape=list[-1,208,304,], )
paddle.reshape(Tensor([4, 11, 0, 304],"float32"), shape=list[-1,248,304,], )
paddle.reshape(Tensor([4, 11, 0, 304],"float32"), shape=list[-1,312,304,], )
paddle.reshape(Tensor([4, 11, 0, 304],"float32"), shape=list[-1,328,304,], )
paddle.reshape(Tensor([4, 11, 0, 312],"float32"), shape=list[-1,272,312,], )
paddle.reshape(Tensor([4, 11, 0, 312],"float32"), shape=list[-1,304,312,], )
paddle.reshape(Tensor([4, 11, 0, 320],"float32"), shape=list[-1,200,320,], )
paddle.reshape(Tensor([4, 11, 0, 328],"float32"), shape=list[-1,296,328,], )
paddle.reshape(Tensor([4, 11, 0, 336],"float32"), shape=list[-1,272,336,], )
paddle.reshape(Tensor([4, 11, 0],"float16"), shape=tuple(-1,248,304,), )
paddle.reshape(Tensor([4, 11, 0],"float16"), shape=tuple(-1,296,328,), )
paddle.reshape(Tensor([4, 11, 0],"float32"), shape=tuple(-1,248,304,), )
paddle.reshape(Tensor([4, 11, 200, 0],"float32"), shape=list[-1,200,320,], )
paddle.reshape(Tensor([4, 11, 208, 0],"float32"), shape=list[-1,208,304,], )
paddle.reshape(Tensor([4, 11, 248, 0],"float32"), shape=list[-1,248,304,], )
paddle.reshape(Tensor([4, 11, 264, 0],"float32"), shape=list[-1,264,296,], )
paddle.reshape(Tensor([4, 11, 272, 0],"float32"), shape=list[-1,272,296,], )
paddle.reshape(Tensor([4, 11, 272, 0],"float32"), shape=list[-1,272,312,], )
paddle.reshape(Tensor([4, 11, 272, 0],"float32"), shape=list[-1,272,336,], )
paddle.reshape(Tensor([4, 11, 296, 0],"float32"), shape=list[-1,296,328,], )
paddle.reshape(Tensor([4, 11, 304, 0],"float32"), shape=list[-1,304,272,], )
paddle.reshape(Tensor([4, 11, 304, 0],"float32"), shape=list[-1,304,312,], )
paddle.reshape(Tensor([4, 11, 312, 0],"float32"), shape=list[-1,312,304,], )
paddle.reshape(Tensor([4, 11, 328, 0],"float32"), shape=list[-1,328,304,], )
paddle.reshape(Tensor([4, 11, 336, 0],"float32"), shape=list[-1,336,272,], )
paddle.reshape(Tensor([4, 114, 0, 64],"float16"), list[4,114,-1,], )
paddle.reshape(Tensor([4, 114, 1, 0],"float16"), list[4,114,-1,], )
paddle.reshape(Tensor([4, 12, 0, 216],"float32"), shape=list[-1,304,216,], )
paddle.reshape(Tensor([4, 12, 0, 272],"float32"), shape=list[-1,280,272,], )
paddle.reshape(Tensor([4, 12, 0, 272],"float32"), shape=list[-1,320,272,], )
paddle.reshape(Tensor([4, 12, 0, 272],"float32"), shape=list[-1,328,272,], )
paddle.reshape(Tensor([4, 12, 0, 280],"float32"), shape=list[-1,272,280,], )
paddle.reshape(Tensor([4, 12, 0, 280],"float32"), shape=list[-1,304,280,], )
paddle.reshape(Tensor([4, 12, 0, 288],"float32"), shape=list[-1,200,288,], )
paddle.reshape(Tensor([4, 12, 0, 288],"float32"), shape=list[-1,304,288,], )
paddle.reshape(Tensor([4, 12, 0, 296],"float32"), shape=list[-1,216,296,], )
paddle.reshape(Tensor([4, 12, 0, 296],"float32"), shape=list[-1,304,296,], )
paddle.reshape(Tensor([4, 12, 0, 296],"float32"), shape=list[-1,328,296,], )
paddle.reshape(Tensor([4, 12, 0, 304],"float32"), shape=list[-1,224,304,], )
paddle.reshape(Tensor([4, 12, 0, 304],"float32"), shape=list[-1,232,304,], )
paddle.reshape(Tensor([4, 12, 0, 304],"float32"), shape=list[-1,248,304,], )
paddle.reshape(Tensor([4, 12, 0, 304],"float32"), shape=list[-1,264,304,], )
paddle.reshape(Tensor([4, 12, 0, 304],"float32"), shape=list[-1,280,304,], )
paddle.reshape(Tensor([4, 12, 0, 304],"float32"), shape=list[-1,288,304,], )
paddle.reshape(Tensor([4, 12, 0, 304],"float32"), shape=list[-1,296,304,], )
paddle.reshape(Tensor([4, 12, 0, 304],"float32"), shape=list[-1,336,304,], )
paddle.reshape(Tensor([4, 12, 0, 312],"float32"), shape=list[-1,200,312,], )
paddle.reshape(Tensor([4, 12, 0, 320],"float32"), shape=list[-1,272,320,], )
paddle.reshape(Tensor([4, 12, 0, 320],"float32"), shape=list[-1,304,320,], )
paddle.reshape(Tensor([4, 12, 0, 328],"float32"), shape=list[-1,272,328,], )
paddle.reshape(Tensor([4, 12, 0, 328],"float32"), shape=list[-1,280,328,], )
paddle.reshape(Tensor([4, 12, 0, 328],"float32"), shape=list[-1,304,328,], )
paddle.reshape(Tensor([4, 12, 0, 336],"float32"), shape=list[-1,208,336,], )
paddle.reshape(Tensor([4, 12, 0, 336],"float32"), shape=list[-1,248,336,], )
paddle.reshape(Tensor([4, 12, 0, 336],"float32"), shape=list[-1,256,336,], )
paddle.reshape(Tensor([4, 12, 0, 336],"float32"), shape=list[-1,264,336,], )
paddle.reshape(Tensor([4, 12, 0, 336],"float32"), shape=list[-1,280,336,], )
paddle.reshape(Tensor([4, 12, 0, 336],"float32"), shape=list[-1,296,336,], )
paddle.reshape(Tensor([4, 12, 0, 336],"float32"), shape=list[-1,312,336,], )
paddle.reshape(Tensor([4, 12, 0, 80],"float16"), shape=tuple(-1,80,), )
paddle.reshape(Tensor([4, 12, 0, 80],"float32"), shape=tuple(-1,80,), )
paddle.reshape(Tensor([4, 12, 0],"float16"), shape=tuple(-1,200,288,), )
paddle.reshape(Tensor([4, 12, 0],"float16"), shape=tuple(-1,200,312,), )
paddle.reshape(Tensor([4, 12, 0],"float16"), shape=tuple(-1,208,336,), )
paddle.reshape(Tensor([4, 12, 0],"float16"), shape=tuple(-1,224,304,), )
paddle.reshape(Tensor([4, 12, 0],"float16"), shape=tuple(-1,248,336,), )
paddle.reshape(Tensor([4, 12, 0],"float16"), shape=tuple(-1,264,304,), )
paddle.reshape(Tensor([4, 12, 0],"float16"), shape=tuple(-1,264,336,), )
paddle.reshape(Tensor([4, 12, 0],"float16"), shape=tuple(-1,272,280,), )
paddle.reshape(Tensor([4, 12, 0],"float16"), shape=tuple(-1,280,272,), )
paddle.reshape(Tensor([4, 12, 0],"float16"), shape=tuple(-1,280,304,), )
paddle.reshape(Tensor([4, 12, 0],"float16"), shape=tuple(-1,280,328,), )
paddle.reshape(Tensor([4, 12, 0],"float16"), shape=tuple(-1,280,336,), )
paddle.reshape(Tensor([4, 12, 0],"float16"), shape=tuple(-1,288,304,), )
paddle.reshape(Tensor([4, 12, 0],"float16"), shape=tuple(-1,304,216,), )
paddle.reshape(Tensor([4, 12, 0],"float16"), shape=tuple(-1,304,280,), )
paddle.reshape(Tensor([4, 12, 0],"float16"), shape=tuple(-1,304,288,), )
paddle.reshape(Tensor([4, 12, 0],"float16"), shape=tuple(-1,304,296,), )
paddle.reshape(Tensor([4, 12, 0],"float16"), shape=tuple(-1,304,328,), )
paddle.reshape(Tensor([4, 12, 0],"float16"), shape=tuple(-1,320,272,), )
paddle.reshape(Tensor([4, 12, 0],"float16"), shape=tuple(-1,328,272,), )
paddle.reshape(Tensor([4, 12, 0],"float16"), shape=tuple(-1,328,296,), )
paddle.reshape(Tensor([4, 12, 0],"float32"), shape=tuple(-1,200,288,), )
paddle.reshape(Tensor([4, 12, 0],"float32"), shape=tuple(-1,208,336,), )
paddle.reshape(Tensor([4, 12, 0],"float32"), shape=tuple(-1,248,336,), )
paddle.reshape(Tensor([4, 12, 0],"float32"), shape=tuple(-1,264,336,), )
paddle.reshape(Tensor([4, 12, 0],"float32"), shape=tuple(-1,272,280,), )
paddle.reshape(Tensor([4, 12, 0],"float32"), shape=tuple(-1,280,304,), )
paddle.reshape(Tensor([4, 12, 0],"float32"), shape=tuple(-1,288,304,), )
paddle.reshape(Tensor([4, 12, 0],"float32"), shape=tuple(-1,304,288,), )
paddle.reshape(Tensor([4, 12, 0],"float32"), shape=tuple(-1,304,328,), )
paddle.reshape(Tensor([4, 12, 0],"float32"), shape=tuple(-1,320,272,), )
paddle.reshape(Tensor([4, 12, 0],"float32"), shape=tuple(-1,328,296,), )
paddle.reshape(Tensor([4, 12, 12, 0],"float16"), shape=tuple(-1,80,), )
paddle.reshape(Tensor([4, 12, 12, 0],"float32"), shape=tuple(-1,80,), )
paddle.reshape(Tensor([4, 12, 200, 0],"float32"), shape=list[-1,200,288,], )
paddle.reshape(Tensor([4, 12, 200, 0],"float32"), shape=list[-1,200,312,], )
paddle.reshape(Tensor([4, 12, 208, 0],"float32"), shape=list[-1,208,336,], )
paddle.reshape(Tensor([4, 12, 216, 0],"float32"), shape=list[-1,216,296,], )
paddle.reshape(Tensor([4, 12, 224, 0],"float32"), shape=list[-1,224,304,], )
paddle.reshape(Tensor([4, 12, 232, 0],"float32"), shape=list[-1,232,304,], )
paddle.reshape(Tensor([4, 12, 248, 0],"float32"), shape=list[-1,248,304,], )
paddle.reshape(Tensor([4, 12, 248, 0],"float32"), shape=list[-1,248,336,], )
paddle.reshape(Tensor([4, 12, 256, 0],"float32"), shape=list[-1,256,336,], )
paddle.reshape(Tensor([4, 12, 264, 0],"float32"), shape=list[-1,264,304,], )
paddle.reshape(Tensor([4, 12, 264, 0],"float32"), shape=list[-1,264,336,], )
paddle.reshape(Tensor([4, 12, 272, 0],"float32"), shape=list[-1,272,280,], )
paddle.reshape(Tensor([4, 12, 272, 0],"float32"), shape=list[-1,272,320,], )
paddle.reshape(Tensor([4, 12, 272, 0],"float32"), shape=list[-1,272,328,], )
paddle.reshape(Tensor([4, 12, 280, 0],"float32"), shape=list[-1,280,272,], )
paddle.reshape(Tensor([4, 12, 280, 0],"float32"), shape=list[-1,280,304,], )
paddle.reshape(Tensor([4, 12, 280, 0],"float32"), shape=list[-1,280,328,], )
paddle.reshape(Tensor([4, 12, 280, 0],"float32"), shape=list[-1,280,336,], )
paddle.reshape(Tensor([4, 12, 288, 0],"float32"), shape=list[-1,288,304,], )
paddle.reshape(Tensor([4, 12, 296, 0],"float32"), shape=list[-1,296,304,], )
paddle.reshape(Tensor([4, 12, 296, 0],"float32"), shape=list[-1,296,336,], )
paddle.reshape(Tensor([4, 12, 304, 0],"float32"), shape=list[-1,304,216,], )
paddle.reshape(Tensor([4, 12, 304, 0],"float32"), shape=list[-1,304,280,], )
paddle.reshape(Tensor([4, 12, 304, 0],"float32"), shape=list[-1,304,288,], )
paddle.reshape(Tensor([4, 12, 304, 0],"float32"), shape=list[-1,304,296,], )
paddle.reshape(Tensor([4, 12, 304, 0],"float32"), shape=list[-1,304,320,], )
paddle.reshape(Tensor([4, 12, 304, 0],"float32"), shape=list[-1,304,328,], )
paddle.reshape(Tensor([4, 12, 312, 0],"float32"), shape=list[-1,312,336,], )
paddle.reshape(Tensor([4, 12, 320, 0],"float32"), shape=list[-1,320,272,], )
paddle.reshape(Tensor([4, 12, 328, 0],"float32"), shape=list[-1,328,272,], )
paddle.reshape(Tensor([4, 12, 328, 0],"float32"), shape=list[-1,328,296,], )
paddle.reshape(Tensor([4, 12, 336, 0],"float32"), shape=list[-1,336,304,], )
paddle.reshape(Tensor([4, 128, 0, 2],"float32"), shape=list[4,-1,2,], )
paddle.reshape(Tensor([4, 128, 128, 0],"float32"), shape=list[4,-1,2,], )
paddle.reshape(Tensor([4, 1280, 0, 1],"float32"), shape=list[-1,1280,], )
paddle.reshape(Tensor([4, 1280, 1, 0],"float32"), shape=list[-1,1280,], )
paddle.reshape(Tensor([4, 13, 0, 216],"float32"), shape=list[-1,304,216,], )
paddle.reshape(Tensor([4, 13, 0, 272],"float32"), shape=list[-1,288,272,], )
paddle.reshape(Tensor([4, 13, 0, 296],"float32"), shape=list[-1,312,296,], )
paddle.reshape(Tensor([4, 13, 0, 304],"float32"), shape=list[-1,216,304,], )
paddle.reshape(Tensor([4, 13, 0, 312],"float32"), shape=list[-1,336,312,], )
paddle.reshape(Tensor([4, 13, 0, 320],"float32"), shape=list[-1,320,320,], )
paddle.reshape(Tensor([4, 13, 0],"float16"), shape=tuple(-1,216,304,), )
paddle.reshape(Tensor([4, 13, 0],"float16"), shape=tuple(-1,304,216,), )
paddle.reshape(Tensor([4, 13, 0],"float16"), shape=tuple(-1,312,296,), )
paddle.reshape(Tensor([4, 13, 0],"float16"), shape=tuple(-1,320,320,), )
paddle.reshape(Tensor([4, 13, 0],"float16"), shape=tuple(-1,336,312,), )
paddle.reshape(Tensor([4, 13, 0],"float32"), shape=tuple(-1,216,304,), )
paddle.reshape(Tensor([4, 13, 0],"float32"), shape=tuple(-1,312,296,), )
paddle.reshape(Tensor([4, 13, 0],"float32"), shape=tuple(-1,320,320,), )
paddle.reshape(Tensor([4, 13, 0],"float32"), shape=tuple(-1,336,312,), )
paddle.reshape(Tensor([4, 13, 216, 0],"float32"), shape=list[-1,216,304,], )
paddle.reshape(Tensor([4, 13, 288, 0],"float32"), shape=list[-1,288,272,], )
paddle.reshape(Tensor([4, 13, 304, 0],"float32"), shape=list[-1,304,216,], )
paddle.reshape(Tensor([4, 13, 312, 0],"float32"), shape=list[-1,312,296,], )
paddle.reshape(Tensor([4, 13, 320, 0],"float32"), shape=list[-1,320,320,], )
paddle.reshape(Tensor([4, 13, 336, 0],"float32"), shape=list[-1,336,312,], )
paddle.reshape(Tensor([4, 14, 0, 264],"float32"), shape=list[-1,304,264,], )
paddle.reshape(Tensor([4, 14, 0, 288],"float32"), shape=list[-1,264,288,], )
paddle.reshape(Tensor([4, 14, 0, 304],"float32"), shape=list[-1,216,304,], )
paddle.reshape(Tensor([4, 14, 0, 304],"float32"), shape=list[-1,256,304,], )
paddle.reshape(Tensor([4, 14, 0, 304],"float32"), shape=list[-1,264,304,], )
paddle.reshape(Tensor([4, 14, 0, 312],"float32"), shape=list[-1,280,312,], )
paddle.reshape(Tensor([4, 14, 0, 320],"float32"), shape=list[-1,264,320,], )
paddle.reshape(Tensor([4, 14, 0, 328],"float32"), shape=list[-1,296,328,], )
paddle.reshape(Tensor([4, 14, 0, 768],"float32"), list[4,14,14,768,], )
paddle.reshape(Tensor([4, 14, 0],"float16"), shape=tuple(-1,256,304,), )
paddle.reshape(Tensor([4, 14, 0],"float16"), shape=tuple(-1,264,288,), )
paddle.reshape(Tensor([4, 14, 0],"float16"), shape=tuple(-1,264,304,), )
paddle.reshape(Tensor([4, 14, 0],"float16"), shape=tuple(-1,264,320,), )
paddle.reshape(Tensor([4, 14, 0],"float16"), shape=tuple(-1,296,328,), )
paddle.reshape(Tensor([4, 14, 0],"float16"), shape=tuple(-1,304,264,), )
paddle.reshape(Tensor([4, 14, 0],"float32"), shape=tuple(-1,256,304,), )
paddle.reshape(Tensor([4, 14, 0],"float32"), shape=tuple(-1,264,320,), )
paddle.reshape(Tensor([4, 14, 14, 0],"float32"), list[4,14,14,768,], )
paddle.reshape(Tensor([4, 14, 216, 0],"float32"), shape=list[-1,216,304,], )
paddle.reshape(Tensor([4, 14, 256, 0],"float32"), shape=list[-1,256,304,], )
paddle.reshape(Tensor([4, 14, 264, 0],"float32"), shape=list[-1,264,288,], )
paddle.reshape(Tensor([4, 14, 264, 0],"float32"), shape=list[-1,264,304,], )
paddle.reshape(Tensor([4, 14, 264, 0],"float32"), shape=list[-1,264,320,], )
paddle.reshape(Tensor([4, 14, 280, 0],"float32"), shape=list[-1,280,312,], )
paddle.reshape(Tensor([4, 14, 296, 0],"float32"), shape=list[-1,296,328,], )
paddle.reshape(Tensor([4, 14, 304, 0],"float32"), shape=list[-1,304,264,], )
paddle.reshape(Tensor([4, 15, 0, 200],"float32"), shape=list[-1,328,200,], )
paddle.reshape(Tensor([4, 15, 0, 216],"float32"), shape=list[-1,272,216,], )
paddle.reshape(Tensor([4, 15, 0, 272],"float32"), shape=list[-1,208,272,], )
paddle.reshape(Tensor([4, 15, 0, 272],"float32"), shape=list[-1,248,272,], )
paddle.reshape(Tensor([4, 15, 0, 296],"float32"), shape=list[-1,304,296,], )
paddle.reshape(Tensor([4, 15, 0, 304],"float32"), shape=list[-1,256,304,], )
paddle.reshape(Tensor([4, 15, 0, 328],"float32"), shape=list[-1,208,328,], )
paddle.reshape(Tensor([4, 15, 0, 328],"float32"), shape=list[-1,280,328,], )
paddle.reshape(Tensor([4, 15, 0, 328],"float32"), shape=list[-1,304,328,], )
paddle.reshape(Tensor([4, 15, 0, 336],"float32"), shape=list[-1,288,336,], )
paddle.reshape(Tensor([4, 15, 0],"float16"), shape=tuple(-1,208,272,), )
paddle.reshape(Tensor([4, 15, 0],"float16"), shape=tuple(-1,208,328,), )
paddle.reshape(Tensor([4, 15, 0],"float16"), shape=tuple(-1,248,272,), )
paddle.reshape(Tensor([4, 15, 0],"float16"), shape=tuple(-1,272,216,), )
paddle.reshape(Tensor([4, 15, 0],"float16"), shape=tuple(-1,280,328,), )
paddle.reshape(Tensor([4, 15, 0],"float16"), shape=tuple(-1,288,336,), )
paddle.reshape(Tensor([4, 15, 0],"float16"), shape=tuple(-1,304,296,), )
paddle.reshape(Tensor([4, 15, 0],"float16"), shape=tuple(-1,328,200,), )
paddle.reshape(Tensor([4, 15, 0],"float32"), shape=tuple(-1,248,272,), )
paddle.reshape(Tensor([4, 15, 0],"float32"), shape=tuple(-1,272,216,), )
paddle.reshape(Tensor([4, 15, 0],"float32"), shape=tuple(-1,288,336,), )
paddle.reshape(Tensor([4, 15, 208, 0],"float32"), shape=list[-1,208,272,], )
paddle.reshape(Tensor([4, 15, 208, 0],"float32"), shape=list[-1,208,328,], )
paddle.reshape(Tensor([4, 15, 248, 0],"float32"), shape=list[-1,248,272,], )
paddle.reshape(Tensor([4, 15, 256, 0],"float32"), shape=list[-1,256,304,], )
paddle.reshape(Tensor([4, 15, 272, 0],"float32"), shape=list[-1,272,216,], )
paddle.reshape(Tensor([4, 15, 280, 0],"float32"), shape=list[-1,280,328,], )
paddle.reshape(Tensor([4, 15, 288, 0],"float32"), shape=list[-1,288,336,], )
paddle.reshape(Tensor([4, 15, 304, 0],"float32"), shape=list[-1,304,296,], )
paddle.reshape(Tensor([4, 15, 304, 0],"float32"), shape=list[-1,304,328,], )
paddle.reshape(Tensor([4, 15, 328, 0],"float32"), shape=list[-1,328,200,], )
paddle.reshape(Tensor([4, 16, 0, 200],"float32"), shape=list[-1,272,200,], )
paddle.reshape(Tensor([4, 16, 0, 280],"float32"), shape=list[-1,280,280,], )
paddle.reshape(Tensor([4, 16, 0, 280],"float32"), shape=list[-1,336,280,], )
paddle.reshape(Tensor([4, 16, 0, 288],"float32"), shape=list[-1,200,288,], )
paddle.reshape(Tensor([4, 16, 0, 288],"float32"), shape=list[-1,304,288,], )
paddle.reshape(Tensor([4, 16, 0, 296],"float32"), shape=list[-1,312,296,], )
paddle.reshape(Tensor([4, 16, 0, 304],"float32"), shape=list[-1,240,304,], )
paddle.reshape(Tensor([4, 16, 0, 328],"float32"), shape=list[-1,208,328,], )
paddle.reshape(Tensor([4, 16, 0],"float16"), shape=tuple(-1,208,328,), )
paddle.reshape(Tensor([4, 16, 0],"float16"), shape=tuple(-1,240,304,), )
paddle.reshape(Tensor([4, 16, 0],"float16"), shape=tuple(-1,272,200,), )
paddle.reshape(Tensor([4, 16, 0],"float16"), shape=tuple(-1,336,280,), )
paddle.reshape(Tensor([4, 16, 0],"float32"), shape=tuple(-1,240,304,), )
paddle.reshape(Tensor([4, 16, 0],"float32"), shape=tuple(-1,272,200,), )
paddle.reshape(Tensor([4, 16, 200, 0],"float32"), shape=list[-1,200,288,], )
paddle.reshape(Tensor([4, 16, 208, 0],"float32"), shape=list[-1,208,328,], )
paddle.reshape(Tensor([4, 16, 240, 0],"float32"), shape=list[-1,240,304,], )
paddle.reshape(Tensor([4, 16, 272, 0],"float32"), shape=list[-1,272,200,], )
paddle.reshape(Tensor([4, 16, 280, 0],"float32"), shape=list[-1,280,280,], )
paddle.reshape(Tensor([4, 16, 304, 0],"float32"), shape=list[-1,304,288,], )
paddle.reshape(Tensor([4, 16, 312, 0],"float32"), shape=list[-1,312,296,], )
paddle.reshape(Tensor([4, 16, 336, 0],"float32"), shape=list[-1,336,280,], )
paddle.reshape(Tensor([4, 17, 0, 200],"float32"), shape=list[-1,272,200,], )
paddle.reshape(Tensor([4, 17, 0, 200],"float32"), shape=list[-1,336,200,], )
paddle.reshape(Tensor([4, 17, 0, 280],"float32"), shape=list[-1,272,280,], )
paddle.reshape(Tensor([4, 17, 0, 304],"float32"), shape=list[-1,240,304,], )
paddle.reshape(Tensor([4, 17, 0, 328],"float32"), shape=list[-1,200,328,], )
paddle.reshape(Tensor([4, 17, 0],"float16"), shape=tuple(-1,200,328,), )
paddle.reshape(Tensor([4, 17, 0],"float32"), shape=tuple(-1,200,328,), )
paddle.reshape(Tensor([4, 17, 200, 0],"float32"), shape=list[-1,200,328,], )
paddle.reshape(Tensor([4, 17, 240, 0],"float32"), shape=list[-1,240,304,], )
paddle.reshape(Tensor([4, 17, 272, 0],"float32"), shape=list[-1,272,200,], )
paddle.reshape(Tensor([4, 17, 272, 0],"float32"), shape=list[-1,272,280,], )
paddle.reshape(Tensor([4, 17, 336, 0],"float32"), shape=list[-1,336,200,], )
paddle.reshape(Tensor([4, 18, 0, 200],"float32"), shape=list[-1,328,200,], )
paddle.reshape(Tensor([4, 18, 0, 216],"float32"), shape=list[-1,272,216,], )
paddle.reshape(Tensor([4, 18, 0, 320],"float32"), shape=list[-1,232,320,], )
paddle.reshape(Tensor([4, 18, 0],"float16"), shape=tuple(-1,232,320,), )
paddle.reshape(Tensor([4, 18, 0],"float16"), shape=tuple(-1,328,200,), )
paddle.reshape(Tensor([4, 18, 0],"float32"), shape=tuple(-1,232,320,), )
paddle.reshape(Tensor([4, 18, 232, 0],"float32"), shape=list[-1,232,320,], )
paddle.reshape(Tensor([4, 18, 272, 0],"float32"), shape=list[-1,272,216,], )
paddle.reshape(Tensor([4, 18, 328, 0],"float32"), shape=list[-1,328,200,], )
paddle.reshape(Tensor([4, 19, 0, 312],"float32"), shape=list[-1,216,312,], )
paddle.reshape(Tensor([4, 19, 0],"float16"), shape=tuple(-1,216,312,), )
paddle.reshape(Tensor([4, 19, 216, 0],"float32"), shape=list[-1,216,312,], )
paddle.reshape(Tensor([4, 2, 0, 272],"float32"), shape=list[-1,320,272,], )
paddle.reshape(Tensor([4, 2, 0, 296],"float32"), shape=list[-1,328,296,], )
paddle.reshape(Tensor([4, 2, 0, 320],"float32"), shape=list[-1,320,320,], )
paddle.reshape(Tensor([4, 2, 0, 320],"float32"), shape=list[-1,336,320,], )
paddle.reshape(Tensor([4, 2, 0],"float16"), shape=tuple(-1,336,320,), )
paddle.reshape(Tensor([4, 2, 320, 0],"float32"), shape=list[-1,320,272,], )
paddle.reshape(Tensor([4, 2, 320, 0],"float32"), shape=list[-1,320,320,], )
paddle.reshape(Tensor([4, 2, 328, 0],"float32"), shape=list[-1,328,296,], )
paddle.reshape(Tensor([4, 2, 336, 0],"float32"), shape=list[-1,336,320,], )
paddle.reshape(Tensor([4, 20, 0, 336],"float32"), shape=list[-1,208,336,], )
paddle.reshape(Tensor([4, 20, 208, 0],"float32"), shape=list[-1,208,336,], )
paddle.reshape(Tensor([4, 200, 0],"float16"), shape=tuple(4,-1,), )
paddle.reshape(Tensor([4, 200, 0],"float32"), shape=tuple(4,-1,), )
paddle.reshape(Tensor([4, 21, 0, 320],"float32"), shape=list[-1,264,320,], )
paddle.reshape(Tensor([4, 21, 264, 0],"float32"), shape=list[-1,264,320,], )
paddle.reshape(Tensor([4, 22, 0, 272],"float32"), shape=list[-1,256,272,], )
paddle.reshape(Tensor([4, 22, 0, 280],"float32"), shape=list[-1,200,280,], )
paddle.reshape(Tensor([4, 22, 0, 296],"float32"), shape=list[-1,200,296,], )
paddle.reshape(Tensor([4, 22, 0, 336],"float32"), shape=list[-1,248,336,], )
paddle.reshape(Tensor([4, 22, 0, 336],"float32"), shape=list[-1,264,336,], )
paddle.reshape(Tensor([4, 22, 0],"float16"), shape=tuple(-1,200,280,), )
paddle.reshape(Tensor([4, 22, 0],"float32"), shape=tuple(-1,200,280,), )
paddle.reshape(Tensor([4, 22, 200, 0],"float32"), shape=list[-1,200,280,], )
paddle.reshape(Tensor([4, 22, 200, 0],"float32"), shape=list[-1,200,296,], )
paddle.reshape(Tensor([4, 22, 248, 0],"float32"), shape=list[-1,248,336,], )
paddle.reshape(Tensor([4, 22, 256, 0],"float32"), shape=list[-1,256,272,], )
paddle.reshape(Tensor([4, 22, 264, 0],"float32"), shape=list[-1,264,336,], )
paddle.reshape(Tensor([4, 24, 0, 272],"float32"), shape=list[-1,248,272,], )
paddle.reshape(Tensor([4, 24, 0, 512],"float32"), list[4,24,24,512,], )
paddle.reshape(Tensor([4, 24, 0, 768],"float32"), list[4,24,24,768,], )
paddle.reshape(Tensor([4, 24, 24, 0],"float32"), list[4,24,24,512,], )
paddle.reshape(Tensor([4, 24, 24, 0],"float32"), list[4,24,24,768,], )
paddle.reshape(Tensor([4, 24, 248, 0],"float32"), shape=list[-1,248,272,], )
paddle.reshape(Tensor([4, 25, 0, 288],"float32"), shape=list[-1,264,288,], )
paddle.reshape(Tensor([4, 25, 0, 304],"float32"), shape=list[-1,288,304,], )
paddle.reshape(Tensor([4, 25, 0, 312],"float32"), shape=list[-1,336,312,], )
paddle.reshape(Tensor([4, 25, 0],"float16"), shape=tuple(-1,264,288,), )
paddle.reshape(Tensor([4, 25, 264, 0],"float32"), shape=list[-1,264,288,], )
paddle.reshape(Tensor([4, 25, 288, 0],"float32"), shape=list[-1,288,304,], )
paddle.reshape(Tensor([4, 25, 336, 0],"float32"), shape=list[-1,336,312,], )
paddle.reshape(Tensor([4, 256, 0, 12],"float16"), shape=tuple(4,256,-1,), )
paddle.reshape(Tensor([4, 256, 0, 12],"float32"), shape=tuple(4,256,-1,), )
paddle.reshape(Tensor([4, 256, 12, 0],"float16"), shape=tuple(4,256,-1,), )
paddle.reshape(Tensor([4, 256, 12, 0],"float32"), shape=tuple(4,256,-1,), )
paddle.reshape(Tensor([4, 28, 0, 384],"float32"), list[4,28,28,384,], )
paddle.reshape(Tensor([4, 28, 28, 0],"float32"), list[4,28,28,384,], )
paddle.reshape(Tensor([4, 3, 0, 10],"float32"), shape=list[-1,10,], )
paddle.reshape(Tensor([4, 3, 0, 10],"float32"), shape=list[-1,3,10,], )
paddle.reshape(Tensor([4, 3, 0, 1000],"float32"), shape=list[-1,1000,], )
paddle.reshape(Tensor([4, 3, 0],"float32"), shape=list[-1,3,], )
paddle.reshape(Tensor([4, 3, 0],"float32"), shape=list[-1,3,10,], )
paddle.reshape(Tensor([4, 3, 1, 0],"float32"), shape=list[-1,10,], )
paddle.reshape(Tensor([4, 3, 1, 0],"float32"), shape=list[-1,1000,], )
paddle.reshape(Tensor([4, 3, 1, 0],"float32"), shape=list[-1,3,10,], )
paddle.reshape(Tensor([4, 30, 0, 320],"float32"), shape=list[-1,336,320,], )
paddle.reshape(Tensor([4, 30, 0],"float16"), shape=tuple(-1,336,320,), )
paddle.reshape(Tensor([4, 30, 336, 0],"float32"), shape=list[-1,336,320,], )
paddle.reshape(Tensor([4, 35, 0, 280],"float32"), shape=list[-1,200,280,], )
paddle.reshape(Tensor([4, 35, 200, 0],"float32"), shape=list[-1,200,280,], )
paddle.reshape(Tensor([4, 39, 0, 264],"float32"), shape=list[-1,304,264,], )
paddle.reshape(Tensor([4, 39, 0, 320],"float32"), shape=list[-1,232,320,], )
paddle.reshape(Tensor([4, 39, 0],"float16"), shape=tuple(-1,304,264,), )
paddle.reshape(Tensor([4, 39, 232, 0],"float32"), shape=list[-1,232,320,], )
paddle.reshape(Tensor([4, 39, 304, 0],"float32"), shape=list[-1,304,264,], )
paddle.reshape(Tensor([4, 4, 0, 14],"float32"), list[4,4,14,7,], )
paddle.reshape(Tensor([4, 4, 0, 328],"float32"), shape=list[-1,200,328,], )
paddle.reshape(Tensor([4, 4, 0, 336],"float32"), shape=list[-1,288,336,], )
paddle.reshape(Tensor([4, 4, 0, 7],"float32"), list[4,4,7,13,], )
paddle.reshape(Tensor([4, 4, 0],"float32"), list[-1,128,], )
paddle.reshape(Tensor([4, 4, 0],"float32"), list[-1,64,], )
paddle.reshape(Tensor([4, 4, 0],"float32"), shape=list[-1,16,], )
paddle.reshape(Tensor([4, 4, 0],"float32"), shape=list[-1,32,], )
paddle.reshape(Tensor([4, 4, 13, 0],"float32"), list[4,4,7,13,], )
paddle.reshape(Tensor([4, 4, 200, 0],"float32"), shape=list[-1,200,328,], )
paddle.reshape(Tensor([4, 4, 288, 0],"float32"), shape=list[-1,288,336,], )
paddle.reshape(Tensor([4, 4, 7, 0],"float32"), list[4,4,14,7,], )
paddle.reshape(Tensor([4, 48, 0, 256],"float32"), list[4,48,48,256,], )
paddle.reshape(Tensor([4, 48, 0, 384],"float32"), list[4,48,48,384,], )
paddle.reshape(Tensor([4, 48, 48, 0],"float32"), list[4,48,48,256,], )
paddle.reshape(Tensor([4, 48, 48, 0],"float32"), list[4,48,48,384,], )
paddle.reshape(Tensor([4, 5, 0, 6, 6],"float32"), tuple(4,-1,), )
paddle.reshape(Tensor([4, 5, 0],"float32"), tuple(4,-1,), )
paddle.reshape(Tensor([4, 5, 6, 0, 6],"float32"), tuple(4,-1,), )
paddle.reshape(Tensor([4, 5, 6, 6, 0],"float32"), tuple(4,-1,), )
paddle.reshape(Tensor([4, 512, 0, 150],"float32"), list[-1,150,], )
paddle.reshape(Tensor([4, 512, 0, 2],"float32"), list[-1,2,], )
paddle.reshape(Tensor([4, 512, 0],"float16"), list[-1,1024,], )
paddle.reshape(Tensor([4, 512, 0],"float32"), list[-1,1024,], )
paddle.reshape(Tensor([4, 512, 512, 0],"float32"), list[-1,150,], )
paddle.reshape(Tensor([4, 512, 512, 0],"float32"), list[-1,2,], )
paddle.reshape(Tensor([4, 56, 0, 192],"float32"), list[4,56,56,192,], )
paddle.reshape(Tensor([4, 56, 56, 0],"float32"), list[4,56,56,192,], )
paddle.reshape(Tensor([4, 6, 0, 272],"float32"), shape=list[-1,328,272,], )
paddle.reshape(Tensor([4, 6, 0, 304],"float32"), shape=list[-1,224,304,], )
paddle.reshape(Tensor([4, 6, 0, 304],"float32"), shape=list[-1,280,304,], )
paddle.reshape(Tensor([4, 6, 0],"float16"), shape=tuple(-1,224,304,), )
paddle.reshape(Tensor([4, 6, 0],"float16"), shape=tuple(-1,328,272,), )
paddle.reshape(Tensor([4, 6, 224, 0],"float32"), shape=list[-1,224,304,], )
paddle.reshape(Tensor([4, 6, 280, 0],"float32"), shape=list[-1,280,304,], )
paddle.reshape(Tensor([4, 6, 328, 0],"float32"), shape=list[-1,328,272,], )
paddle.reshape(Tensor([4, 640, 0],"float32"), shape=list[-1,], )
paddle.reshape(Tensor([4, 8, 0],"float32"), list[-1,256,], )
paddle.reshape(Tensor([4, 8, 0],"float32"), shape=list[-1,32,], )
paddle.reshape(Tensor([4, 96, 0, 128],"float32"), list[4,96,96,128,], )
paddle.reshape(Tensor([4, 96, 0, 192],"float32"), list[4,96,96,192,], )
paddle.reshape(Tensor([4, 96, 96, 0],"float32"), list[4,96,96,128,], )
paddle.reshape(Tensor([4, 96, 96, 0],"float32"), list[4,96,96,192,], )
paddle.reshape(Tensor([40, 0, 24],"float32"), list[1960,24,], )
paddle.reshape(Tensor([40, 0, 272],"float16"), shape=tuple(40,-1,), )
paddle.reshape(Tensor([40, 0, 272],"float32"), shape=tuple(40,-1,), )
paddle.reshape(Tensor([40, 0, 6, 4],"float32"), list[-1,4,], )
paddle.reshape(Tensor([40, 0, 7],"float32"), list[1960,], )
paddle.reshape(Tensor([40, 200, 0],"float16"), shape=tuple(40,-1,), )
paddle.reshape(Tensor([40, 200, 0],"float32"), shape=tuple(40,-1,), )
paddle.reshape(Tensor([40, 40, 0, 4],"float32"), list[-1,4,], )
paddle.reshape(Tensor([40, 40, 6, 0],"float32"), list[-1,4,], )
paddle.reshape(Tensor([40, 49, 0],"float32"), list[1960,24,], )
paddle.reshape(Tensor([40, 7, 0],"float32"), list[1960,], )
paddle.reshape(Tensor([44, 0, 272],"float16"), shape=tuple(44,-1,), )
paddle.reshape(Tensor([44, 0, 272],"float32"), shape=tuple(44,-1,), )
paddle.reshape(Tensor([44, 200, 0],"float16"), shape=tuple(44,-1,), )
paddle.reshape(Tensor([44, 200, 0],"float32"), shape=tuple(44,-1,), )
paddle.reshape(Tensor([45, 0],"float32"), list[5,3,3,3,], )
paddle.reshape(Tensor([45000, 0],"int64"), list[9,5000,10,], name="Categorical_sample", )
paddle.reshape(Tensor([48, 0, 1, 1],"float16"), list[-1,3,2048,], )
paddle.reshape(Tensor([48, 0, 1, 1],"float32"), list[-1,3,2048,], )
paddle.reshape(Tensor([48, 0, 272],"float16"), shape=tuple(48,-1,), )
paddle.reshape(Tensor([48, 0, 272],"float32"), shape=tuple(48,-1,), )
paddle.reshape(Tensor([48, 200, 0],"float16"), shape=tuple(48,-1,), )
paddle.reshape(Tensor([48, 200, 0],"float32"), shape=tuple(48,-1,), )
paddle.reshape(Tensor([48, 2048, 0, 1],"float16"), list[-1,3,2048,], )
paddle.reshape(Tensor([48, 2048, 0, 1],"float32"), list[-1,3,2048,], )
paddle.reshape(Tensor([48, 2048, 1, 0],"float16"), list[-1,3,2048,], )
paddle.reshape(Tensor([48, 2048, 1, 0],"float32"), list[-1,3,2048,], )
paddle.reshape(Tensor([5, 0, 10],"float32"), list[-1,10,], )
paddle.reshape(Tensor([5, 0, 2],"float32"), tuple(5,-1,), )
paddle.reshape(Tensor([5, 0, 3, 3, 3],"float32"), tuple(5,-1,), )
paddle.reshape(Tensor([5, 0, 3, 3],"float32"), tuple(-1,3,), )
paddle.reshape(Tensor([5, 0, 3, 3],"float32"), tuple(5,-1,), )
paddle.reshape(Tensor([5, 0, 4, 4, 4],"float32"), tuple(5,-1,), )
paddle.reshape(Tensor([5, 0, 6, 6, 6],"float32"), tuple(-1,6,), )
paddle.reshape(Tensor([5, 0, 8],"float32"), list[5,10,8,], name="Normal_sample", )
paddle.reshape(Tensor([5, 0],"float32"), list[5,3,3,3,], )
paddle.reshape(Tensor([5, 0],"float32"), list[5,3,3,3,3,], )
paddle.reshape(Tensor([5, 0],"float32"), list[5,4,2,], )
paddle.reshape(Tensor([5, 0],"float32"), list[5,4,4,4,4,], )
paddle.reshape(Tensor([5, 0],"float32"), shape=list[5,-1,], )
paddle.reshape(Tensor([5, 0],"int32"), shape=tuple(7,5,), )
paddle.reshape(Tensor([5, 10, 0],"float32"), list[5,10,8,], name="Normal_sample", )
paddle.reshape(Tensor([5, 20, 0],"float32"), list[-1,10,], )
paddle.reshape(Tensor([5, 3, 0, 3, 3],"float32"), tuple(5,-1,), )
paddle.reshape(Tensor([5, 3, 0, 3],"float32"), tuple(-1,3,), )
paddle.reshape(Tensor([5, 3, 0, 3],"float32"), tuple(5,-1,), )
paddle.reshape(Tensor([5, 3, 3, 0, 3],"float32"), tuple(5,-1,), )
paddle.reshape(Tensor([5, 3, 3, 0],"float32"), tuple(-1,3,), )
paddle.reshape(Tensor([5, 3, 3, 0],"float32"), tuple(5,-1,), )
paddle.reshape(Tensor([5, 3, 3, 3, 0],"float32"), tuple(5,-1,), )
paddle.reshape(Tensor([5, 4, 0, 4, 4],"float32"), tuple(5,-1,), )
paddle.reshape(Tensor([5, 4, 0, 6, 6],"float32"), tuple(-1,6,), )
paddle.reshape(Tensor([5, 4, 0],"float32"), tuple(5,-1,), )
paddle.reshape(Tensor([5, 4, 4, 0, 4],"float32"), tuple(5,-1,), )
paddle.reshape(Tensor([5, 4, 4, 4, 0],"float32"), tuple(5,-1,), )
paddle.reshape(Tensor([5, 4, 6, 0, 6],"float32"), tuple(-1,6,), )
paddle.reshape(Tensor([5, 4, 6, 6, 0],"float32"), tuple(-1,6,), )
paddle.reshape(Tensor([512, 0, 1, 2],"float16"), shape=tuple(512,-1,), )
paddle.reshape(Tensor([512, 0, 1, 2],"float32"), shape=tuple(512,-1,), )
paddle.reshape(Tensor([512, 0, 2],"float16"), shape=list[-1,32,100,2,], )
paddle.reshape(Tensor([512, 0, 2],"float32"), shape=list[-1,32,100,2,], )
paddle.reshape(Tensor([512, 0],"float16"), shape=list[-1,20,2,], )
paddle.reshape(Tensor([512, 0],"float32"), shape=list[-1,20,2,], )
paddle.reshape(Tensor([512, 256, 0, 2],"float16"), shape=tuple(512,-1,), )
paddle.reshape(Tensor([512, 256, 0, 2],"float32"), shape=tuple(512,-1,), )
paddle.reshape(Tensor([512, 256, 1, 0],"float16"), shape=tuple(512,-1,), )
paddle.reshape(Tensor([512, 256, 1, 0],"float32"), shape=tuple(512,-1,), )
paddle.reshape(Tensor([512, 3200, 0],"float16"), shape=list[-1,32,100,2,], )
paddle.reshape(Tensor([512, 3200, 0],"float32"), shape=list[-1,32,100,2,], )
paddle.reshape(Tensor([52, 0, 1, 7],"float32"), list[52,7,1,], )
paddle.reshape(Tensor([52, 0, 1],"float32"), list[52,1,1,1,], )
paddle.reshape(Tensor([52, 0, 1],"float32"), list[52,5,1,1,], )
paddle.reshape(Tensor([52, 0, 272],"float16"), shape=tuple(52,-1,), )
paddle.reshape(Tensor([52, 0, 272],"float32"), shape=tuple(52,-1,), )
paddle.reshape(Tensor([52, 0, 32],"float32"), list[52,7,4,-1,], )
paddle.reshape(Tensor([52, 0, 4, 8],"float32"), list[52,7,-1,], )
paddle.reshape(Tensor([52, 0, 5, 1, 8],"float32"), list[52,4,5,-1,], )
paddle.reshape(Tensor([52, 0, 5, 5, 1, 8],"float32"), list[52,4,5,5,-1,], )
paddle.reshape(Tensor([52, 0, 7, 1],"float32"), list[52,7,1,], )
paddle.reshape(Tensor([52, 0, 7, 8],"float32"), list[52,4,7,1,-1,], )
paddle.reshape(Tensor([52, 0, 7],"float32"), tuple(13,4,7,-1,), )
paddle.reshape(Tensor([52, 0, 8],"float32"), tuple(-1,8,), )
paddle.reshape(Tensor([52, 0, 8],"float32"), tuple(13,4,-1,8,), )
paddle.reshape(Tensor([52, 0, 8],"float32"), tuple(13,4,21,8,), )
paddle.reshape(Tensor([52, 0, 8],"float32"), tuple(13,4,7,8,), )
paddle.reshape(Tensor([52, 0, 96],"float32"), list[52,7,4,-1,], )
paddle.reshape(Tensor([52, 1, 0, 1],"float32"), list[52,7,1,], )
paddle.reshape(Tensor([52, 1, 0, 7],"float32"), list[52,7,1,], )
paddle.reshape(Tensor([52, 1, 0],"float32"), list[52,1,1,1,], )
paddle.reshape(Tensor([52, 1, 1, 0],"float32"), list[52,7,1,], )
paddle.reshape(Tensor([52, 1, 7, 0],"float32"), list[52,7,1,], )
paddle.reshape(Tensor([52, 200, 0],"float16"), shape=tuple(52,-1,), )
paddle.reshape(Tensor([52, 200, 0],"float32"), shape=tuple(52,-1,), )
paddle.reshape(Tensor([52, 21, 0],"float32"), tuple(13,4,21,8,), )
paddle.reshape(Tensor([52, 4, 0, 1, 8],"float32"), list[52,4,5,-1,], )
paddle.reshape(Tensor([52, 4, 0, 5, 1, 8],"float32"), list[52,4,5,5,-1,], )
paddle.reshape(Tensor([52, 4, 0, 8],"float32"), list[52,4,7,1,-1,], )
paddle.reshape(Tensor([52, 4, 5, 0, 1, 8],"float32"), list[52,4,5,5,-1,], )
paddle.reshape(Tensor([52, 4, 5, 0, 8],"float32"), list[52,4,5,-1,], )
paddle.reshape(Tensor([52, 4, 5, 1, 0],"float32"), list[52,4,5,-1,], )
paddle.reshape(Tensor([52, 4, 5, 5, 0, 8],"float32"), list[52,4,5,5,-1,], )
paddle.reshape(Tensor([52, 4, 5, 5, 1, 0],"float32"), list[52,4,5,5,-1,], )
paddle.reshape(Tensor([52, 4, 7, 0],"float32"), list[52,4,7,1,-1,], )
paddle.reshape(Tensor([52, 5, 0],"float32"), list[52,5,1,1,], )
paddle.reshape(Tensor([52, 7, 0, 8],"float32"), list[52,7,-1,], )
paddle.reshape(Tensor([52, 7, 0],"float32"), list[52,7,4,-1,], )
paddle.reshape(Tensor([52, 7, 0],"float32"), tuple(-1,8,), )
paddle.reshape(Tensor([52, 7, 0],"float32"), tuple(13,4,-1,8,), )
paddle.reshape(Tensor([52, 7, 0],"float32"), tuple(13,4,7,-1,), )
paddle.reshape(Tensor([52, 7, 0],"float32"), tuple(13,4,7,8,), )
paddle.reshape(Tensor([52, 7, 4, 0],"float32"), list[52,7,-1,], )
paddle.reshape(Tensor([520, 0, 8],"float32"), list[13,4,5,2,-1,], )
paddle.reshape(Tensor([520, 0],"float32"), list[13,4,5,-1,], )
paddle.reshape(Tensor([520, 1, 0],"float32"), list[13,4,5,2,-1,], )
paddle.reshape(Tensor([54, 0],"int64"), list[9,6,10,], name="Categorical_sample", )
paddle.reshape(Tensor([56, 0, 13, 7],"float32"), list[56,4,7,13,], )
paddle.reshape(Tensor([56, 0, 272],"float16"), shape=tuple(56,-1,), )
paddle.reshape(Tensor([56, 0, 272],"float32"), shape=tuple(56,-1,), )
paddle.reshape(Tensor([56, 0, 7, 14],"float32"), list[56,4,14,7,], )
paddle.reshape(Tensor([56, 200, 0],"float16"), shape=tuple(56,-1,), )
paddle.reshape(Tensor([56, 200, 0],"float32"), shape=tuple(56,-1,), )
paddle.reshape(Tensor([56, 4, 0, 14],"float32"), list[56,4,14,7,], )
paddle.reshape(Tensor([56, 4, 0, 7],"float32"), list[56,4,7,13,], )
paddle.reshape(Tensor([56, 4, 13, 0],"float32"), list[56,4,7,13,], )
paddle.reshape(Tensor([56, 4, 7, 0],"float32"), list[56,4,14,7,], )
paddle.reshape(Tensor([58, 0, 2],"float32"), shape=list[-1,2,], )
paddle.reshape(Tensor([58, 0],"int64"), list[58,], )
paddle.reshape(Tensor([58, 1, 0],"float32"), shape=list[-1,2,], )
paddle.reshape(Tensor([59, 0],"int64"), list[59,], )
paddle.reshape(Tensor([6, 0, 1, 32],"float32"), shape=list[-1,32,], )
paddle.reshape(Tensor([6, 0, 100, 11],"float32"), tuple(-1,11,), )
paddle.reshape(Tensor([6, 0, 100, 2],"float32"), tuple(-1,2,), )
paddle.reshape(Tensor([6, 0, 200],"float32"), shape=tuple(6,-1,), )
paddle.reshape(Tensor([6, 0, 25, 11],"float32"), tuple(-1,11,), )
paddle.reshape(Tensor([6, 0, 25, 2],"float32"), tuple(-1,2,), )
paddle.reshape(Tensor([6, 0, 3],"float32"), list[1,-1,2,], )
paddle.reshape(Tensor([6, 0, 3],"float32"), list[-1,1,3,], )
paddle.reshape(Tensor([6, 0, 3],"float32"), list[1,18,2,], )
paddle.reshape(Tensor([6, 0, 3],"float32"), list[1,2,2,3,3,], )
paddle.reshape(Tensor([6, 0, 3],"float32"), list[-1,3,2,], )
paddle.reshape(Tensor([6, 0, 3],"float32"), list[-1,6,2,], )
paddle.reshape(Tensor([6, 0, 3],"float32"), list[-1,9,1,], )
paddle.reshape(Tensor([6, 0, 3],"float32"), list[-1,9,2,], )
paddle.reshape(Tensor([6, 0, 3],"float32"), list[12,1,3,], )
paddle.reshape(Tensor([6, 0, 3],"float32"), list[2,1,18,], )
paddle.reshape(Tensor([6, 0, 3],"float32"), list[2,-1,18,], )
paddle.reshape(Tensor([6, 0, 3],"float32"), list[2,3,3,2,], )
paddle.reshape(Tensor([6, 0, 3],"float32"), list[2,6,3,], )
paddle.reshape(Tensor([6, 0, 3],"float32"), list[2,9,2,], )
paddle.reshape(Tensor([6, 0, 3],"float32"), list[3,6,2,], )
paddle.reshape(Tensor([6, 0, 3],"float32"), list[4,9,1,], )
paddle.reshape(Tensor([6, 0, 3],"float32"), list[6,2,3,], )
paddle.reshape(Tensor([6, 0, 3],"float32"), list[6,3,2,], )
paddle.reshape(Tensor([6, 0, 3],"int64"), list[1,-1,2,], )
paddle.reshape(Tensor([6, 0, 3],"int64"), list[-1,1,3,], )
paddle.reshape(Tensor([6, 0, 3],"int64"), list[1,18,2,], )
paddle.reshape(Tensor([6, 0, 3],"int64"), list[1,2,2,3,3,], )
paddle.reshape(Tensor([6, 0, 3],"int64"), list[-1,3,2,], )
paddle.reshape(Tensor([6, 0, 3],"int64"), list[-1,6,2,], )
paddle.reshape(Tensor([6, 0, 3],"int64"), list[-1,9,1,], )
paddle.reshape(Tensor([6, 0, 3],"int64"), list[-1,9,2,], )
paddle.reshape(Tensor([6, 0, 3],"int64"), list[12,1,3,], )
paddle.reshape(Tensor([6, 0, 3],"int64"), list[2,1,18,], )
paddle.reshape(Tensor([6, 0, 3],"int64"), list[2,-1,18,], )
paddle.reshape(Tensor([6, 0, 3],"int64"), list[2,3,3,2,], )
paddle.reshape(Tensor([6, 0, 3],"int64"), list[2,6,3,], )
paddle.reshape(Tensor([6, 0, 3],"int64"), list[2,9,2,], )
paddle.reshape(Tensor([6, 0, 3],"int64"), list[3,6,2,], )
paddle.reshape(Tensor([6, 0, 3],"int64"), list[4,9,1,], )
paddle.reshape(Tensor([6, 0, 3],"int64"), list[6,2,3,], )
paddle.reshape(Tensor([6, 0, 3],"int64"), list[6,3,2,], )
paddle.reshape(Tensor([6, 0, 304],"float32"), shape=tuple(6,-1,), )
paddle.reshape(Tensor([6, 0, 4],"float16"), shape=list[6,8,], )
paddle.reshape(Tensor([6, 0, 4],"float32"), shape=list[6,8,], )
paddle.reshape(Tensor([6, 0, 5, 6, 6],"float32"), tuple(6,-1,), )
paddle.reshape(Tensor([6, 0, 6, 5, 6],"float32"), tuple(6,-1,), )
paddle.reshape(Tensor([6, 0],"float32"), list[-1,3,8,], )
paddle.reshape(Tensor([6, 0],"float32"), list[6,4,5,6,6,], )
paddle.reshape(Tensor([6, 0],"float32"), list[6,4,6,5,6,], )
paddle.reshape(Tensor([6, 0],"float32"), shape=list[1,-1,256,], )
paddle.reshape(Tensor([6, 0],"int32"), shape=tuple(3,2,), )
paddle.reshape(Tensor([6, 100, 0, 11],"float32"), tuple(-1,11,), )
paddle.reshape(Tensor([6, 100, 0, 2],"float32"), tuple(-1,2,), )
paddle.reshape(Tensor([6, 100, 100, 0],"float32"), tuple(-1,11,), )
paddle.reshape(Tensor([6, 100, 100, 0],"float32"), tuple(-1,2,), )
paddle.reshape(Tensor([6, 2, 0],"float16"), shape=list[6,8,], )
paddle.reshape(Tensor([6, 2, 0],"float32"), list[1,-1,2,], )
paddle.reshape(Tensor([6, 2, 0],"float32"), list[-1,1,3,], )
paddle.reshape(Tensor([6, 2, 0],"float32"), list[1,18,2,], )
paddle.reshape(Tensor([6, 2, 0],"float32"), list[1,2,2,3,3,], )
paddle.reshape(Tensor([6, 2, 0],"float32"), list[-1,3,2,], )
paddle.reshape(Tensor([6, 2, 0],"float32"), list[-1,6,2,], )
paddle.reshape(Tensor([6, 2, 0],"float32"), list[-1,9,1,], )
paddle.reshape(Tensor([6, 2, 0],"float32"), list[-1,9,2,], )
paddle.reshape(Tensor([6, 2, 0],"float32"), list[12,1,3,], )
paddle.reshape(Tensor([6, 2, 0],"float32"), list[2,1,18,], )
paddle.reshape(Tensor([6, 2, 0],"float32"), list[2,-1,18,], )
paddle.reshape(Tensor([6, 2, 0],"float32"), list[2,3,3,2,], )
paddle.reshape(Tensor([6, 2, 0],"float32"), list[2,6,3,], )
paddle.reshape(Tensor([6, 2, 0],"float32"), list[2,9,2,], )
paddle.reshape(Tensor([6, 2, 0],"float32"), list[3,6,2,], )
paddle.reshape(Tensor([6, 2, 0],"float32"), list[4,9,1,], )
paddle.reshape(Tensor([6, 2, 0],"float32"), list[6,2,3,], )
paddle.reshape(Tensor([6, 2, 0],"float32"), list[6,3,2,], )
paddle.reshape(Tensor([6, 2, 0],"float32"), shape=list[6,8,], )
paddle.reshape(Tensor([6, 2, 0],"int64"), list[1,-1,2,], )
paddle.reshape(Tensor([6, 2, 0],"int64"), list[-1,1,3,], )
paddle.reshape(Tensor([6, 2, 0],"int64"), list[1,18,2,], )
paddle.reshape(Tensor([6, 2, 0],"int64"), list[1,2,2,3,3,], )
paddle.reshape(Tensor([6, 2, 0],"int64"), list[-1,3,2,], )
paddle.reshape(Tensor([6, 2, 0],"int64"), list[-1,6,2,], )
paddle.reshape(Tensor([6, 2, 0],"int64"), list[-1,9,1,], )
paddle.reshape(Tensor([6, 2, 0],"int64"), list[-1,9,2,], )
paddle.reshape(Tensor([6, 2, 0],"int64"), list[12,1,3,], )
paddle.reshape(Tensor([6, 2, 0],"int64"), list[2,1,18,], )
paddle.reshape(Tensor([6, 2, 0],"int64"), list[2,-1,18,], )
paddle.reshape(Tensor([6, 2, 0],"int64"), list[2,3,3,2,], )
paddle.reshape(Tensor([6, 2, 0],"int64"), list[2,6,3,], )
paddle.reshape(Tensor([6, 2, 0],"int64"), list[2,9,2,], )
paddle.reshape(Tensor([6, 2, 0],"int64"), list[3,6,2,], )
paddle.reshape(Tensor([6, 2, 0],"int64"), list[4,9,1,], )
paddle.reshape(Tensor([6, 2, 0],"int64"), list[6,2,3,], )
paddle.reshape(Tensor([6, 2, 0],"int64"), list[6,3,2,], )
paddle.reshape(Tensor([6, 200, 0],"float32"), shape=tuple(6,-1,), )
paddle.reshape(Tensor([6, 25, 0, 11],"float32"), tuple(-1,11,), )
paddle.reshape(Tensor([6, 25, 0, 2],"float32"), tuple(-1,2,), )
paddle.reshape(Tensor([6, 25, 25, 0],"float32"), tuple(-1,11,), )
paddle.reshape(Tensor([6, 25, 25, 0],"float32"), tuple(-1,2,), )
paddle.reshape(Tensor([6, 3, 0, 32],"float32"), shape=list[-1,32,], )
paddle.reshape(Tensor([6, 3, 1, 0],"float32"), shape=list[-1,32,], )
paddle.reshape(Tensor([6, 304, 0],"float32"), shape=tuple(6,-1,), )
paddle.reshape(Tensor([6, 4, 0, 5, 6],"float32"), tuple(6,-1,), )
paddle.reshape(Tensor([6, 4, 0, 6, 6],"float32"), tuple(6,-1,), )
paddle.reshape(Tensor([6, 4, 5, 0, 6],"float32"), tuple(6,-1,), )
paddle.reshape(Tensor([6, 4, 5, 6, 0],"float32"), tuple(6,-1,), )
paddle.reshape(Tensor([6, 4, 6, 0, 6],"float32"), tuple(6,-1,), )
paddle.reshape(Tensor([6, 4, 6, 5, 0],"float32"), tuple(6,-1,), )
paddle.reshape(Tensor([60, 0, 14, 384],"float32"), list[60,14,14,384,], )
paddle.reshape(Tensor([60, 0, 14, 512],"float32"), list[60,14,14,512,], )
paddle.reshape(Tensor([60, 0, 24, 512],"float32"), list[60,24,24,512,], )
paddle.reshape(Tensor([60, 0, 272],"float16"), shape=tuple(60,-1,), )
paddle.reshape(Tensor([60, 0, 272],"float32"), shape=tuple(60,-1,), )
paddle.reshape(Tensor([60, 0, 28, 192],"float32"), list[60,28,28,192,], )
paddle.reshape(Tensor([60, 0, 28, 256],"float32"), list[60,28,28,256,], )
paddle.reshape(Tensor([60, 0, 48, 256],"float32"), list[60,48,48,256,], )
paddle.reshape(Tensor([60, 0, 56, 128],"float32"), list[60,56,56,128,], )
paddle.reshape(Tensor([60, 0, 56, 96],"float32"), list[60,56,56,96,], )
paddle.reshape(Tensor([60, 0, 96, 128],"float32"), list[60,96,96,128,], )
paddle.reshape(Tensor([60, 0],"float32"), list[15,4,4,], )
paddle.reshape(Tensor([60, 0],"int64"), list[60,], )
paddle.reshape(Tensor([60, 14, 0, 384],"float32"), list[60,14,14,384,], )
paddle.reshape(Tensor([60, 14, 0, 512],"float32"), list[60,14,14,512,], )
paddle.reshape(Tensor([60, 14, 14, 0],"float32"), list[60,14,14,384,], )
paddle.reshape(Tensor([60, 14, 14, 0],"float32"), list[60,14,14,512,], )
paddle.reshape(Tensor([60, 200, 0],"float16"), shape=tuple(60,-1,), )
paddle.reshape(Tensor([60, 200, 0],"float32"), shape=tuple(60,-1,), )
paddle.reshape(Tensor([60, 24, 0, 512],"float32"), list[60,24,24,512,], )
paddle.reshape(Tensor([60, 24, 24, 0],"float32"), list[60,24,24,512,], )
paddle.reshape(Tensor([60, 28, 0, 192],"float32"), list[60,28,28,192,], )
paddle.reshape(Tensor([60, 28, 0, 256],"float32"), list[60,28,28,256,], )
paddle.reshape(Tensor([60, 28, 28, 0],"float32"), list[60,28,28,192,], )
paddle.reshape(Tensor([60, 28, 28, 0],"float32"), list[60,28,28,256,], )
paddle.reshape(Tensor([60, 48, 0, 256],"float32"), list[60,48,48,256,], )
paddle.reshape(Tensor([60, 48, 48, 0],"float32"), list[60,48,48,256,], )
paddle.reshape(Tensor([60, 56, 0, 128],"float32"), list[60,56,56,128,], )
paddle.reshape(Tensor([60, 56, 0, 96],"float32"), list[60,56,56,96,], )
paddle.reshape(Tensor([60, 56, 56, 0],"float32"), list[60,56,56,128,], )
paddle.reshape(Tensor([60, 56, 56, 0],"float32"), list[60,56,56,96,], )
paddle.reshape(Tensor([60, 96, 0, 128],"float32"), list[60,96,96,128,], )
paddle.reshape(Tensor([60, 96, 96, 0],"float32"), list[60,96,96,128,], )
paddle.reshape(Tensor([61, 0],"int64"), list[61,], )
paddle.reshape(Tensor([64, 0, 1, 1],"float32"), list[-1,8,1280,], )
paddle.reshape(Tensor([64, 0, 1],"float32"), tuple(64,-1,), )
paddle.reshape(Tensor([64, 0, 14, 384],"float32"), list[64,14,14,384,], )
paddle.reshape(Tensor([64, 0, 14, 512],"float32"), list[64,14,14,512,], )
paddle.reshape(Tensor([64, 0, 16, 16],"float16"), list[64,96,-1,], )
paddle.reshape(Tensor([64, 0, 24, 512],"float32"), list[64,24,24,512,], )
paddle.reshape(Tensor([64, 0, 272],"float16"), shape=tuple(64,-1,), )
paddle.reshape(Tensor([64, 0, 272],"float32"), shape=tuple(64,-1,), )
paddle.reshape(Tensor([64, 0, 28, 192],"float32"), list[64,28,28,192,], )
paddle.reshape(Tensor([64, 0, 28, 256],"float32"), list[64,28,28,256,], )
paddle.reshape(Tensor([64, 0, 3],"float32"), tuple(64,-1,), )
paddle.reshape(Tensor([64, 0, 48, 256],"float32"), list[64,48,48,256,], )
paddle.reshape(Tensor([64, 0, 56, 128],"float32"), list[64,56,56,128,], )
paddle.reshape(Tensor([64, 0, 56, 96],"float32"), list[64,56,56,96,], )
paddle.reshape(Tensor([64, 0, 6626],"float32"), list[-1,6626,], )
paddle.reshape(Tensor([64, 0, 96, 128],"float32"), list[64,96,96,128,], )
paddle.reshape(Tensor([64, 0],"float16"), tuple(1,1,64,64,), )
paddle.reshape(Tensor([64, 0],"float32"), list[16,-1,], )
paddle.reshape(Tensor([64, 0],"float32"), list[64,1,1,], )
paddle.reshape(Tensor([64, 0],"float32"), list[64,1,3,], )
paddle.reshape(Tensor([64, 0],"float32"), list[64,64,1,], )
paddle.reshape(Tensor([64, 0],"float32"), list[64,64,3,], )
paddle.reshape(Tensor([64, 1, 0],"float32"), tuple(64,-1,), )
paddle.reshape(Tensor([64, 1280, 0, 1],"float32"), list[-1,8,1280,], )
paddle.reshape(Tensor([64, 1280, 1, 0],"float32"), list[-1,8,1280,], )
paddle.reshape(Tensor([64, 14, 0, 384],"float32"), list[64,14,14,384,], )
paddle.reshape(Tensor([64, 14, 0, 512],"float32"), list[64,14,14,512,], )
paddle.reshape(Tensor([64, 14, 14, 0],"float32"), list[64,14,14,384,], )
paddle.reshape(Tensor([64, 14, 14, 0],"float32"), list[64,14,14,512,], )
paddle.reshape(Tensor([64, 200, 0],"float16"), shape=tuple(64,-1,), )
paddle.reshape(Tensor([64, 200, 0],"float32"), shape=tuple(64,-1,), )
paddle.reshape(Tensor([64, 24, 0, 512],"float32"), list[64,24,24,512,], )
paddle.reshape(Tensor([64, 24, 0],"float32"), list[-1,6626,], )
paddle.reshape(Tensor([64, 24, 24, 0],"float32"), list[64,24,24,512,], )
paddle.reshape(Tensor([64, 28, 0, 192],"float32"), list[64,28,28,192,], )
paddle.reshape(Tensor([64, 28, 0, 256],"float32"), list[64,28,28,256,], )
paddle.reshape(Tensor([64, 28, 28, 0],"float32"), list[64,28,28,192,], )
paddle.reshape(Tensor([64, 28, 28, 0],"float32"), list[64,28,28,256,], )
paddle.reshape(Tensor([64, 48, 0, 256],"float32"), list[64,48,48,256,], )
paddle.reshape(Tensor([64, 48, 48, 0],"float32"), list[64,48,48,256,], )
paddle.reshape(Tensor([64, 56, 0, 128],"float32"), list[64,56,56,128,], )
paddle.reshape(Tensor([64, 56, 0, 96],"float32"), list[64,56,56,96,], )
paddle.reshape(Tensor([64, 56, 56, 0],"float32"), list[64,56,56,128,], )
paddle.reshape(Tensor([64, 56, 56, 0],"float32"), list[64,56,56,96,], )
paddle.reshape(Tensor([64, 96, 0, 128],"float32"), list[64,96,96,128,], )
paddle.reshape(Tensor([64, 96, 0, 16],"float16"), list[64,96,-1,], )
paddle.reshape(Tensor([64, 96, 16, 0],"float16"), list[64,96,-1,], )
paddle.reshape(Tensor([64, 96, 96, 0],"float32"), list[64,96,96,128,], )
paddle.reshape(Tensor([65, 0],"float16"), tuple(1,1,65,64,), )
paddle.reshape(Tensor([68, 0, 272],"float16"), shape=tuple(68,-1,), )
paddle.reshape(Tensor([68, 0, 272],"float32"), shape=tuple(68,-1,), )
paddle.reshape(Tensor([68, 200, 0],"float16"), shape=tuple(68,-1,), )
paddle.reshape(Tensor([68, 200, 0],"float32"), shape=tuple(68,-1,), )
paddle.reshape(Tensor([7, 0, 13, 7],"float32"), list[7,4,7,13,], )
paddle.reshape(Tensor([7, 0, 32],"float16"), shape=list[7,14,4,8,], )
paddle.reshape(Tensor([7, 0, 32],"float32"), shape=list[7,10,4,8,], )
paddle.reshape(Tensor([7, 0, 32],"float32"), shape=list[7,11,4,8,], )
paddle.reshape(Tensor([7, 0, 32],"float32"), shape=list[7,14,4,8,], )
paddle.reshape(Tensor([7, 0, 32],"float32"), shape=list[7,4,4,8,], )
paddle.reshape(Tensor([7, 0, 32],"float32"), shape=list[7,56,4,8,], )
paddle.reshape(Tensor([7, 0, 32],"float32"), shape=list[7,7,4,8,], )
paddle.reshape(Tensor([7, 0, 50000],"float32"), list[-1,50000,], )
paddle.reshape(Tensor([7, 0, 7, 14],"float32"), list[7,4,14,7,], )
paddle.reshape(Tensor([7, 10, 0],"float32"), shape=list[7,10,4,8,], )
paddle.reshape(Tensor([7, 11, 0],"float32"), shape=list[7,11,4,8,], )
paddle.reshape(Tensor([7, 14, 0],"float16"), shape=list[7,14,4,8,], )
paddle.reshape(Tensor([7, 14, 0],"float32"), shape=list[7,14,4,8,], )
paddle.reshape(Tensor([7, 165, 0],"float32"), list[-1,50000,], )
paddle.reshape(Tensor([7, 4, 0, 14],"float32"), list[7,4,14,7,], )
paddle.reshape(Tensor([7, 4, 0, 7],"float32"), list[7,4,7,13,], )
paddle.reshape(Tensor([7, 4, 0],"float32"), shape=list[7,4,4,8,], )
paddle.reshape(Tensor([7, 4, 13, 0],"float32"), list[7,4,7,13,], )
paddle.reshape(Tensor([7, 4, 7, 0],"float32"), list[7,4,14,7,], )
paddle.reshape(Tensor([7, 56, 0],"float32"), shape=list[7,56,4,8,], )
paddle.reshape(Tensor([7, 7, 0],"float32"), shape=list[7,7,4,8,], )
paddle.reshape(Tensor([72, 0, 272],"float16"), shape=tuple(72,-1,), )
paddle.reshape(Tensor([72, 0, 272],"float32"), shape=tuple(72,-1,), )
paddle.reshape(Tensor([72, 200, 0],"float16"), shape=tuple(72,-1,), )
paddle.reshape(Tensor([72, 200, 0],"float32"), shape=tuple(72,-1,), )
paddle.reshape(Tensor([720, 0],"float32"), list[5,4,6,6,6,], )
paddle.reshape(Tensor([728, 0],"float32"), tuple(2,52,7,-1,), )
paddle.reshape(Tensor([76, 0, 272],"float16"), shape=tuple(76,-1,), )
paddle.reshape(Tensor([76, 0, 272],"float32"), shape=tuple(76,-1,), )
paddle.reshape(Tensor([76, 200, 0],"float16"), shape=tuple(76,-1,), )
paddle.reshape(Tensor([76, 200, 0],"float32"), shape=tuple(76,-1,), )
paddle.reshape(Tensor([8, 0, 1, 1, 400],"float16"), shape=tuple(8,-1,), )
paddle.reshape(Tensor([8, 0, 1, 1, 400],"float32"), shape=tuple(8,-1,), )
paddle.reshape(Tensor([8, 0, 1, 1],"float32"), shape=list[-1,256,], )
paddle.reshape(Tensor([8, 0, 1, 1],"float32"), shape=list[-1,512,], )
paddle.reshape(Tensor([8, 0, 1, 7, 7],"float32"), list[8,5,7,7,], )
paddle.reshape(Tensor([8, 0, 100],"float64"), list[-1,400,], )
paddle.reshape(Tensor([8, 0, 136, 12],"float16"), shape=tuple(8,-1,4,), )
paddle.reshape(Tensor([8, 0, 136, 12],"float32"), shape=tuple(8,-1,4,), )
paddle.reshape(Tensor([8, 0, 136, 3],"float16"), shape=tuple(8,-1,1,), )
paddle.reshape(Tensor([8, 0, 136, 3],"float32"), shape=tuple(8,-1,1,), )
paddle.reshape(Tensor([8, 0, 14, 768],"float32"), list[8,14,14,768,], )
paddle.reshape(Tensor([8, 0, 24, 7, 7],"float32"), list[40,24,49,], )
paddle.reshape(Tensor([8, 0, 28, 384],"float32"), list[8,28,28,384,], )
paddle.reshape(Tensor([8, 0, 304],"float16"), shape=tuple(8,-1,), )
paddle.reshape(Tensor([8, 0, 304],"float32"), shape=tuple(8,-1,), )
paddle.reshape(Tensor([8, 0, 32],"float32"), shape=list[8,14,4,8,], )
paddle.reshape(Tensor([8, 0, 4, 4, 5, 3],"float32"), list[24,8,10,3,], )
paddle.reshape(Tensor([8, 0, 4, 4, 5, 3],"int64"), list[24,8,10,3,], )
paddle.reshape(Tensor([8, 0, 56, 192],"float32"), list[8,56,56,192,], )
paddle.reshape(Tensor([8, 0, 6626],"float32"), list[-1,6626,], )
paddle.reshape(Tensor([8, 0, 7, 7],"bool"), list[-1,], )
paddle.reshape(Tensor([8, 0, 7, 7],"bool"), list[-1,1,], )
paddle.reshape(Tensor([8, 0, 7, 7],"float32"), list[8,-1,], )
paddle.reshape(Tensor([8, 0, 7, 7],"float32"), list[8,1024,-1,], )
paddle.reshape(Tensor([8, 0, 7, 7],"float32"), list[8,5,29,7,7,], )
paddle.reshape(Tensor([8, 0],"float32"), list[8,1024,1,1,], )
paddle.reshape(Tensor([8, 0],"float32"), list[8,2048,1,1,], )
paddle.reshape(Tensor([8, 0],"float32"), list[8,256,1,1,], )
paddle.reshape(Tensor([8, 0],"float32"), list[8,512,1,1,], )
paddle.reshape(Tensor([8, 0],"float32"), shape=list[-1,1280,], )
paddle.reshape(Tensor([8, 0],"int64"), list[2,4,3,], name="Categorical_sample", )
paddle.reshape(Tensor([8, 0],"int64"), list[2,4,3,2,], name="Categorical_sample", )
paddle.reshape(Tensor([8, 1, 0, 1, 400],"float16"), shape=tuple(8,-1,), )
paddle.reshape(Tensor([8, 1, 0, 1, 400],"float32"), shape=tuple(8,-1,), )
paddle.reshape(Tensor([8, 1, 1, 0, 400],"float16"), shape=tuple(8,-1,), )
paddle.reshape(Tensor([8, 1, 1, 0, 400],"float32"), shape=tuple(8,-1,), )
paddle.reshape(Tensor([8, 1, 1, 1, 0],"float16"), shape=tuple(8,-1,), )
paddle.reshape(Tensor([8, 1, 1, 1, 0],"float32"), shape=tuple(8,-1,), )
paddle.reshape(Tensor([8, 100, 0, 12],"float16"), shape=tuple(8,-1,4,), )
paddle.reshape(Tensor([8, 100, 0, 12],"float32"), shape=tuple(8,-1,4,), )
paddle.reshape(Tensor([8, 100, 0, 3],"float16"), shape=tuple(8,-1,1,), )
paddle.reshape(Tensor([8, 100, 0, 3],"float32"), shape=tuple(8,-1,1,), )
paddle.reshape(Tensor([8, 100, 136, 0],"float16"), shape=tuple(8,-1,1,), )
paddle.reshape(Tensor([8, 100, 136, 0],"float16"), shape=tuple(8,-1,4,), )
paddle.reshape(Tensor([8, 100, 136, 0],"float32"), shape=tuple(8,-1,1,), )
paddle.reshape(Tensor([8, 100, 136, 0],"float32"), shape=tuple(8,-1,4,), )
paddle.reshape(Tensor([8, 1024, 0, 7],"float32"), list[8,1024,-1,], )
paddle.reshape(Tensor([8, 1024, 7, 0],"float32"), list[8,1024,-1,], )
paddle.reshape(Tensor([8, 14, 0, 768],"float32"), list[8,14,14,768,], )
paddle.reshape(Tensor([8, 14, 0],"float32"), shape=list[8,14,4,8,], )
paddle.reshape(Tensor([8, 14, 14, 0],"float32"), list[8,14,14,768,], )
paddle.reshape(Tensor([8, 145, 0, 7],"float32"), list[8,5,29,7,7,], )
paddle.reshape(Tensor([8, 145, 7, 0],"float32"), list[8,5,29,7,7,], )
paddle.reshape(Tensor([8, 200, 0],"float16"), shape=tuple(8,-1,), )
paddle.reshape(Tensor([8, 200, 0],"float32"), shape=tuple(8,-1,), )
paddle.reshape(Tensor([8, 24, 0],"float32"), list[-1,6626,], )
paddle.reshape(Tensor([8, 256, 0, 1],"float32"), shape=list[-1,256,], )
paddle.reshape(Tensor([8, 256, 1, 0],"float32"), shape=list[-1,256,], )
paddle.reshape(Tensor([8, 28, 0, 384],"float32"), list[8,28,28,384,], )
paddle.reshape(Tensor([8, 28, 28, 0],"float32"), list[8,28,28,384,], )
paddle.reshape(Tensor([8, 3, 0, 4, 5, 3],"float32"), list[24,8,10,3,], )
paddle.reshape(Tensor([8, 3, 0, 4, 5, 3],"int64"), list[24,8,10,3,], )
paddle.reshape(Tensor([8, 3, 4, 0, 5, 3],"float32"), list[24,8,10,3,], )
paddle.reshape(Tensor([8, 3, 4, 0, 5, 3],"int64"), list[24,8,10,3,], )
paddle.reshape(Tensor([8, 3, 4, 4, 0, 3],"float32"), list[24,8,10,3,], )
paddle.reshape(Tensor([8, 3, 4, 4, 0, 3],"int64"), list[24,8,10,3,], )
paddle.reshape(Tensor([8, 3, 4, 4, 5, 0],"float32"), list[24,8,10,3,], )
paddle.reshape(Tensor([8, 3, 4, 4, 5, 0],"int64"), list[24,8,10,3,], )
paddle.reshape(Tensor([8, 4, 0],"float64"), list[-1,400,], )
paddle.reshape(Tensor([8, 5, 0, 7, 7],"float32"), list[40,24,49,], )
paddle.reshape(Tensor([8, 5, 0, 7, 7],"float32"), list[8,5,7,7,], )
paddle.reshape(Tensor([8, 5, 0, 7],"bool"), list[-1,], )
paddle.reshape(Tensor([8, 5, 0, 7],"bool"), list[-1,1,], )
paddle.reshape(Tensor([8, 5, 0, 7],"float32"), list[8,-1,], )
paddle.reshape(Tensor([8, 5, 1, 0, 7],"float32"), list[8,5,7,7,], )
paddle.reshape(Tensor([8, 5, 1, 7, 0],"float32"), list[8,5,7,7,], )
paddle.reshape(Tensor([8, 5, 24, 0, 7],"float32"), list[40,24,49,], )
paddle.reshape(Tensor([8, 5, 24, 7, 0],"float32"), list[40,24,49,], )
paddle.reshape(Tensor([8, 5, 7, 0],"bool"), list[-1,], )
paddle.reshape(Tensor([8, 5, 7, 0],"bool"), list[-1,1,], )
paddle.reshape(Tensor([8, 5, 7, 0],"float32"), list[8,-1,], )
paddle.reshape(Tensor([8, 512, 0, 1],"float32"), shape=list[-1,512,], )
paddle.reshape(Tensor([8, 512, 1, 0],"float32"), shape=list[-1,512,], )
paddle.reshape(Tensor([8, 56, 0, 192],"float32"), list[8,56,56,192,], )
paddle.reshape(Tensor([8, 56, 56, 0],"float32"), list[8,56,56,192,], )
paddle.reshape(Tensor([80, 0, 2, 4],"float32"), list[-1,4,], )
paddle.reshape(Tensor([80, 0, 272],"float16"), shape=tuple(80,-1,), )
paddle.reshape(Tensor([80, 0, 272],"float32"), shape=tuple(80,-1,), )
paddle.reshape(Tensor([80, 0, 5],"float32"), tuple(80,-1,), )
paddle.reshape(Tensor([80, 0],"float32"), list[80,80,5,], )
paddle.reshape(Tensor([80, 200, 0],"float16"), shape=tuple(80,-1,), )
paddle.reshape(Tensor([80, 200, 0],"float32"), shape=tuple(80,-1,), )
paddle.reshape(Tensor([80, 80, 0, 4],"float32"), list[-1,4,], )
paddle.reshape(Tensor([80, 80, 0],"float32"), tuple(80,-1,), )
paddle.reshape(Tensor([80, 80, 2, 0],"float32"), list[-1,4,], )
paddle.reshape(Tensor([80239, 0],"bool"), list[-1,20,1,], )
paddle.reshape(Tensor([84, 0, 272],"float16"), shape=tuple(84,-1,), )
paddle.reshape(Tensor([84, 0, 272],"float32"), shape=tuple(84,-1,), )
paddle.reshape(Tensor([84, 200, 0],"float16"), shape=tuple(84,-1,), )
paddle.reshape(Tensor([84, 200, 0],"float32"), shape=tuple(84,-1,), )
paddle.reshape(Tensor([88, 0, 272],"float16"), shape=tuple(88,-1,), )
paddle.reshape(Tensor([88, 0, 272],"float32"), shape=tuple(88,-1,), )
paddle.reshape(Tensor([88, 200, 0],"float16"), shape=tuple(88,-1,), )
paddle.reshape(Tensor([88, 200, 0],"float32"), shape=tuple(88,-1,), )
paddle.reshape(Tensor([9, 0, 272],"float32"), shape=tuple(9,-1,), )
paddle.reshape(Tensor([9, 0, 304],"float32"), shape=tuple(9,-1,), )
paddle.reshape(Tensor([9, 0],"float32"), list[18,4,], )
paddle.reshape(Tensor([9, 0],"float32"), shape=list[1,-1,256,], )
paddle.reshape(Tensor([9, 0],"int64"), list[18,4,], )
paddle.reshape(Tensor([9, 0],"int64"), list[9,10,], name="Categorical_sample", )
paddle.reshape(Tensor([9, 200, 0],"float32"), shape=tuple(9,-1,), )
paddle.reshape(Tensor([92, 0, 272],"float16"), shape=tuple(92,-1,), )
paddle.reshape(Tensor([92, 0, 272],"float32"), shape=tuple(92,-1,), )
paddle.reshape(Tensor([92, 200, 0],"float16"), shape=tuple(92,-1,), )
paddle.reshape(Tensor([92, 200, 0],"float32"), shape=tuple(92,-1,), )
paddle.reshape(Tensor([96, 0, 272],"float16"), shape=tuple(96,-1,), )
paddle.reshape(Tensor([96, 0, 272],"float32"), shape=tuple(96,-1,), )
paddle.reshape(Tensor([96, 200, 0],"float16"), shape=tuple(96,-1,), )
paddle.reshape(Tensor([96, 200, 0],"float32"), shape=tuple(96,-1,), )
paddle.reshape(x=Tensor([0, 1, 10],"float32"), shape=list[5,10,], )
paddle.reshape(x=Tensor([0, 1, 10],"int32"), shape=list[5,10,], )
paddle.reshape(x=Tensor([0, 1, 12, 16],"float32"), shape=tuple(13,12,16,), )
paddle.reshape(x=Tensor([0, 1, 12, 16],"float32"), shape=tuple(16,12,16,), )
paddle.reshape(x=Tensor([0, 1, 12, 16],"float32"), shape=tuple(3,12,16,), )
paddle.reshape(x=Tensor([0, 1],"float32"), shape=list[10,], )
paddle.reshape(x=Tensor([0, 10],"float32"), shape=list[100,], )
paddle.reshape(x=Tensor([0, 10],"float32"), shape=list[200,], )
paddle.reshape(x=Tensor([0, 10],"float32"), shape=list[80,], )
paddle.reshape(x=Tensor([0, 100],"float16"), shape=list[-1,], )
paddle.reshape(x=Tensor([0, 100],"float32"), shape=list[-1,], )
paddle.reshape(x=Tensor([0, 1024, 1, 1],"float16"), shape=list[64,1,2,512,], )
paddle.reshape(x=Tensor([0, 1024, 1, 1],"float32"), shape=list[64,1,2,512,], )
paddle.reshape(x=Tensor([0, 1024],"float16"), shape=list[1048576,], )
paddle.reshape(x=Tensor([0, 116, 2, 14, 14],"float16"), shape=list[1536,232,14,14,], )
paddle.reshape(x=Tensor([0, 116, 2, 14, 14],"float16"), shape=list[512,232,14,14,], )
paddle.reshape(x=Tensor([0, 116, 2, 14, 14],"float32"), shape=list[1536,232,14,14,], )
paddle.reshape(x=Tensor([0, 116, 2, 14, 14],"float32"), shape=list[512,232,14,14,], )
paddle.reshape(x=Tensor([0, 116, 28, 28],"float16"), shape=list[1536,2,58,28,28,], )
paddle.reshape(x=Tensor([0, 116, 28, 28],"float32"), shape=list[1536,2,58,28,28,], )
paddle.reshape(x=Tensor([0, 12, 16],"float32"), shape=tuple(-1,1,12,16,), )
paddle.reshape(x=Tensor([0, 12, 16],"float32"), shape=tuple(-1,2,12,16,), )
paddle.reshape(x=Tensor([0, 120, 28, 28],"float16"), shape=list[512,2,60,28,28,], )
paddle.reshape(x=Tensor([0, 120, 28, 28],"float32"), shape=list[512,2,60,28,28,], )
paddle.reshape(x=Tensor([0, 12288],"float16"), shape=list[50331648,], )
paddle.reshape(x=Tensor([0, 128, 1, 1],"float16"), shape=list[64,1,2,64,], )
paddle.reshape(x=Tensor([0, 128, 1, 1],"float32"), shape=list[64,1,2,64,], )
paddle.reshape(x=Tensor([0, 138120, 1],"float32"), shape=tuple(-1,), )
paddle.reshape(x=Tensor([0, 138120, 4],"float32"), shape=tuple(-1,4,), )
paddle.reshape(x=Tensor([0, 140, 2],"float32"), shape=list[-1,2,], )
paddle.reshape(x=Tensor([0, 153450, 1],"float32"), shape=tuple(-1,), )
paddle.reshape(x=Tensor([0, 153450, 4],"float32"), shape=tuple(-1,4,), )
paddle.reshape(x=Tensor([0, 16, 2, 32, 24],"float16"), shape=list[512,32,32,24,], )
paddle.reshape(x=Tensor([0, 16, 2, 32, 24],"float32"), shape=list[16,32,32,24,], )
paddle.reshape(x=Tensor([0, 16, 2, 32, 24],"float32"), shape=list[512,32,32,24,], )
paddle.reshape(x=Tensor([0, 16, 2, 64, 48],"float32"), shape=list[16,32,64,48,], )
paddle.reshape(x=Tensor([0, 160, 16, 12],"float32"), shape=list[16,2,80,16,12,], )
paddle.reshape(x=Tensor([0, 160, 2, 4, 3],"float16"), shape=list[512,320,4,3,], )
paddle.reshape(x=Tensor([0, 160, 2, 4, 3],"float32"), shape=list[16,320,4,3,], )
paddle.reshape(x=Tensor([0, 160, 2, 4, 3],"float32"), shape=list[512,320,4,3,], )
paddle.reshape(x=Tensor([0, 160, 2, 8, 6],"float32"), shape=list[16,320,8,6,], )
paddle.reshape(x=Tensor([0, 160, 8, 6],"float16"), shape=list[512,2,80,8,6,], )
paddle.reshape(x=Tensor([0, 160, 8, 6],"float32"), shape=list[16,2,80,8,6,], )
paddle.reshape(x=Tensor([0, 160, 8, 6],"float32"), shape=list[512,2,80,8,6,], )
paddle.reshape(x=Tensor([0, 16384],"float16"), shape=list[67108864,], )
paddle.reshape(x=Tensor([0, 192, 16, 16],"float16"), shape=list[64,2,96,16,16,], )
paddle.reshape(x=Tensor([0, 192, 16, 16],"float32"), shape=list[64,2,96,16,16,], )
paddle.reshape(x=Tensor([0, 192, 18, 18],"float16"), shape=list[64,2,96,18,18,], )
paddle.reshape(x=Tensor([0, 192, 18, 18],"float32"), shape=list[64,2,96,18,18,], )
paddle.reshape(x=Tensor([0, 192, 2, 10, 10],"float16"), shape=list[64,384,10,10,], )
paddle.reshape(x=Tensor([0, 192, 2, 10, 10],"float32"), shape=list[64,384,10,10,], )
paddle.reshape(x=Tensor([0, 192, 2, 11, 11],"float16"), shape=list[64,384,11,11,], )
paddle.reshape(x=Tensor([0, 192, 2, 11, 11],"float32"), shape=list[64,384,11,11,], )
paddle.reshape(x=Tensor([0, 192, 2, 12, 12],"float16"), shape=list[64,384,12,12,], )
paddle.reshape(x=Tensor([0, 192, 2, 12, 12],"float32"), shape=list[64,384,12,12,], )
paddle.reshape(x=Tensor([0, 192, 2, 8, 8],"float16"), shape=list[64,384,8,8,], )
paddle.reshape(x=Tensor([0, 192, 2, 8, 8],"float32"), shape=list[64,384,8,8,], )
paddle.reshape(x=Tensor([0, 192, 2, 9, 9],"float16"), shape=list[64,384,9,9,], )
paddle.reshape(x=Tensor([0, 192, 2, 9, 9],"float32"), shape=list[64,384,9,9,], )
paddle.reshape(x=Tensor([0, 192, 20, 20],"float16"), shape=list[64,2,96,20,20,], )
paddle.reshape(x=Tensor([0, 192, 20, 20],"float32"), shape=list[64,2,96,20,20,], )
paddle.reshape(x=Tensor([0, 192, 22, 22],"float16"), shape=list[64,2,96,22,22,], )
paddle.reshape(x=Tensor([0, 192, 22, 22],"float32"), shape=list[64,2,96,22,22,], )
paddle.reshape(x=Tensor([0, 192, 24, 24],"float16"), shape=list[64,2,96,24,24,], )
paddle.reshape(x=Tensor([0, 192, 24, 24],"float32"), shape=list[64,2,96,24,24,], )
paddle.reshape(x=Tensor([0, 2, 1, 128],"float16"), shape=list[64,256,1,1,], )
paddle.reshape(x=Tensor([0, 2, 1, 128],"float32"), shape=list[64,256,1,1,], )
paddle.reshape(x=Tensor([0, 2, 1, 256],"float16"), shape=list[64,512,1,1,], )
paddle.reshape(x=Tensor([0, 2, 1, 256],"float32"), shape=list[64,512,1,1,], )
paddle.reshape(x=Tensor([0, 2, 1, 512],"float16"), shape=list[64,1024,1,1,], )
paddle.reshape(x=Tensor([0, 2, 1, 512],"float32"), shape=list[64,1024,1,1,], )
paddle.reshape(x=Tensor([0, 2, 1, 64],"float16"), shape=list[64,128,1,1,], )
paddle.reshape(x=Tensor([0, 2, 1, 64],"float32"), shape=list[64,128,1,1,], )
paddle.reshape(x=Tensor([0, 2, 12, 16],"float32"), shape=tuple(32,12,16,), )
paddle.reshape(x=Tensor([0, 2, 12, 16],"float32"), shape=tuple(4,12,16,), )
paddle.reshape(x=Tensor([0, 2],"float32"), shape=list[1,-1,], )
paddle.reshape(x=Tensor([0, 2],"float32"), shape=list[1,4,], )
paddle.reshape(x=Tensor([0, 2],"float64"), shape=list[1,-1,], )
paddle.reshape(x=Tensor([0, 2],"float64"), shape=list[1,4,], )
paddle.reshape(x=Tensor([0, 2],"float64"), shape=tuple(1,4,), )
paddle.reshape(x=Tensor([0, 20, 2, 32, 24],"float16"), shape=list[512,40,32,24,], )
paddle.reshape(x=Tensor([0, 20, 2, 32, 24],"float32"), shape=list[16,40,32,24,], )
paddle.reshape(x=Tensor([0, 20, 2, 32, 24],"float32"), shape=list[512,40,32,24,], )
paddle.reshape(x=Tensor([0, 20, 2, 64, 48],"float32"), shape=list[16,40,64,48,], )
paddle.reshape(x=Tensor([0, 2048],"float16"), shape=list[103022592,], )
paddle.reshape(x=Tensor([0, 2048],"float16"), shape=list[2097152,], )
paddle.reshape(x=Tensor([0, 2048],"float16"), shape=list[4194304,], )
paddle.reshape(x=Tensor([0, 232, 14, 14],"float16"), shape=list[1536,2,116,14,14,], )
paddle.reshape(x=Tensor([0, 232, 14, 14],"float16"), shape=list[512,2,116,14,14,], )
paddle.reshape(x=Tensor([0, 232, 14, 14],"float32"), shape=list[1536,2,116,14,14,], )
paddle.reshape(x=Tensor([0, 232, 14, 14],"float32"), shape=list[512,2,116,14,14,], )
paddle.reshape(x=Tensor([0, 232, 2, 7, 7],"float16"), shape=list[1536,464,7,7,], )
paddle.reshape(x=Tensor([0, 232, 2, 7, 7],"float16"), shape=list[512,464,7,7,], )
paddle.reshape(x=Tensor([0, 232, 2, 7, 7],"float32"), shape=list[1536,464,7,7,], )
paddle.reshape(x=Tensor([0, 232, 2, 7, 7],"float32"), shape=list[512,464,7,7,], )
paddle.reshape(x=Tensor([0, 256, 1, 1],"float16"), shape=list[64,1,2,128,], )
paddle.reshape(x=Tensor([0, 256, 1, 1],"float32"), shape=list[64,1,2,128,], )
paddle.reshape(x=Tensor([0, 3],"float32"), shape=list[6,], )
paddle.reshape(x=Tensor([0, 32, 32, 24],"float16"), shape=list[512,2,16,32,24,], )
paddle.reshape(x=Tensor([0, 32, 32, 24],"float32"), shape=list[16,2,16,32,24,], )
paddle.reshape(x=Tensor([0, 32, 32, 24],"float32"), shape=list[512,2,16,32,24,], )
paddle.reshape(x=Tensor([0, 32, 64, 48],"float32"), shape=list[16,2,16,64,48,], )
paddle.reshape(x=Tensor([0, 320, 4, 3],"float16"), shape=list[512,2,160,4,3,], )
paddle.reshape(x=Tensor([0, 320, 4, 3],"float32"), shape=list[16,2,160,4,3,], )
paddle.reshape(x=Tensor([0, 320, 4, 3],"float32"), shape=list[512,2,160,4,3,], )
paddle.reshape(x=Tensor([0, 320, 8, 6],"float32"), shape=list[16,2,160,8,6,], )
paddle.reshape(x=Tensor([0, 384, 10, 10],"float16"), shape=list[64,2,192,10,10,], )
paddle.reshape(x=Tensor([0, 384, 10, 10],"float32"), shape=list[64,2,192,10,10,], )
paddle.reshape(x=Tensor([0, 384, 11, 11],"float16"), shape=list[64,2,192,11,11,], )
paddle.reshape(x=Tensor([0, 384, 11, 11],"float32"), shape=list[64,2,192,11,11,], )
paddle.reshape(x=Tensor([0, 384, 12, 12],"float16"), shape=list[64,2,192,12,12,], )
paddle.reshape(x=Tensor([0, 384, 12, 12],"float32"), shape=list[64,2,192,12,12,], )
paddle.reshape(x=Tensor([0, 384, 8, 8],"float16"), shape=list[64,2,192,8,8,], )
paddle.reshape(x=Tensor([0, 384, 8, 8],"float32"), shape=list[64,2,192,8,8,], )
paddle.reshape(x=Tensor([0, 384, 9, 9],"float16"), shape=list[64,2,192,9,9,], )
paddle.reshape(x=Tensor([0, 384, 9, 9],"float32"), shape=list[64,2,192,9,9,], )
paddle.reshape(x=Tensor([0, 40, 2, 16, 12],"float16"), shape=list[512,80,16,12,], )
paddle.reshape(x=Tensor([0, 40, 2, 16, 12],"float32"), shape=list[16,80,16,12,], )
paddle.reshape(x=Tensor([0, 40, 2, 16, 12],"float32"), shape=list[512,80,16,12,], )
paddle.reshape(x=Tensor([0, 40, 2, 32, 24],"float32"), shape=list[16,80,32,24,], )
paddle.reshape(x=Tensor([0, 40, 32, 24],"float16"), shape=list[512,2,20,32,24,], )
paddle.reshape(x=Tensor([0, 40, 32, 24],"float32"), shape=list[16,2,20,32,24,], )
paddle.reshape(x=Tensor([0, 40, 32, 24],"float32"), shape=list[512,2,20,32,24,], )
paddle.reshape(x=Tensor([0, 40, 64, 48],"float32"), shape=list[16,2,20,64,48,], )
paddle.reshape(x=Tensor([0, 4096],"float16"), shape=list[16777216,], )
paddle.reshape(x=Tensor([0, 4096],"float16"), shape=list[206045184,], )
paddle.reshape(x=Tensor([0, 4096],"float16"), shape=list[4194304,], )
paddle.reshape(x=Tensor([0, 4096],"float16"), shape=list[67108864,], )
paddle.reshape(x=Tensor([0, 464, 7, 7],"float16"), shape=list[1536,2,232,7,7,], )
paddle.reshape(x=Tensor([0, 464, 7, 7],"float16"), shape=list[512,2,232,7,7,], )
paddle.reshape(x=Tensor([0, 464, 7, 7],"float32"), shape=list[1536,2,232,7,7,], )
paddle.reshape(x=Tensor([0, 464, 7, 7],"float32"), shape=list[512,2,232,7,7,], )
paddle.reshape(x=Tensor([0, 48, 2, 32, 32],"float16"), shape=list[64,96,32,32,], )
paddle.reshape(x=Tensor([0, 48, 2, 32, 32],"float32"), shape=list[64,96,32,32,], )
paddle.reshape(x=Tensor([0, 48, 2, 36, 36],"float16"), shape=list[64,96,36,36,], )
paddle.reshape(x=Tensor([0, 48, 2, 36, 36],"float32"), shape=list[64,96,36,36,], )
paddle.reshape(x=Tensor([0, 48, 2, 40, 40],"float16"), shape=list[64,96,40,40,], )
paddle.reshape(x=Tensor([0, 48, 2, 40, 40],"float32"), shape=list[64,96,40,40,], )
paddle.reshape(x=Tensor([0, 48, 2, 44, 44],"float16"), shape=list[64,96,44,44,], )
paddle.reshape(x=Tensor([0, 48, 2, 44, 44],"float32"), shape=list[64,96,44,44,], )
paddle.reshape(x=Tensor([0, 48, 2, 48, 48],"float16"), shape=list[64,96,48,48,], )
paddle.reshape(x=Tensor([0, 48, 2, 48, 48],"float32"), shape=list[64,96,48,48,], )
paddle.reshape(x=Tensor([0, 512, 1, 1],"float16"), shape=list[64,1,2,256,], )
paddle.reshape(x=Tensor([0, 512, 1, 1],"float32"), shape=list[64,1,2,256,], )
paddle.reshape(x=Tensor([0, 58, 2, 28, 28],"float16"), shape=list[1536,116,28,28,], )
paddle.reshape(x=Tensor([0, 58, 2, 28, 28],"float32"), shape=list[1536,116,28,28,], )
paddle.reshape(x=Tensor([0, 60, 2, 28, 28],"float16"), shape=list[512,120,28,28,], )
paddle.reshape(x=Tensor([0, 60, 2, 28, 28],"float32"), shape=list[512,120,28,28,], )
paddle.reshape(x=Tensor([0, 6144],"float16"), shape=list[12582912,], )
paddle.reshape(x=Tensor([0, 7, 32],"float32"), shape=list[13,7,4,-1,], )
paddle.reshape(x=Tensor([0, 7, 32],"float32"), shape=list[52,7,4,-1,], )
paddle.reshape(x=Tensor([0, 8, 1],"float32"), shape=list[2,8,], )
paddle.reshape(x=Tensor([0, 8],"float32"), shape=list[80,], )
paddle.reshape(x=Tensor([0, 80, 16, 12],"float16"), shape=list[512,2,40,16,12,], )
paddle.reshape(x=Tensor([0, 80, 16, 12],"float32"), shape=list[16,2,40,16,12,], )
paddle.reshape(x=Tensor([0, 80, 16, 12],"float32"), shape=list[512,2,40,16,12,], )
paddle.reshape(x=Tensor([0, 80, 2, 16, 12],"float32"), shape=list[16,160,16,12,], )
paddle.reshape(x=Tensor([0, 80, 2, 8, 6],"float16"), shape=list[512,160,8,6,], )
paddle.reshape(x=Tensor([0, 80, 2, 8, 6],"float32"), shape=list[16,160,8,6,], )
paddle.reshape(x=Tensor([0, 80, 2, 8, 6],"float32"), shape=list[512,160,8,6,], )
paddle.reshape(x=Tensor([0, 80, 32, 24],"float32"), shape=list[16,2,40,32,24,], )
paddle.reshape(x=Tensor([0, 8192],"float16"), shape=list[16777216,], )
paddle.reshape(x=Tensor([0, 9],"float32"), shape=list[36,], )
paddle.reshape(x=Tensor([0, 96, 2, 16, 16],"float16"), shape=list[64,192,16,16,], )
paddle.reshape(x=Tensor([0, 96, 2, 16, 16],"float32"), shape=list[64,192,16,16,], )
paddle.reshape(x=Tensor([0, 96, 2, 18, 18],"float16"), shape=list[64,192,18,18,], )
paddle.reshape(x=Tensor([0, 96, 2, 18, 18],"float32"), shape=list[64,192,18,18,], )
paddle.reshape(x=Tensor([0, 96, 2, 20, 20],"float16"), shape=list[64,192,20,20,], )
paddle.reshape(x=Tensor([0, 96, 2, 20, 20],"float32"), shape=list[64,192,20,20,], )
paddle.reshape(x=Tensor([0, 96, 2, 22, 22],"float16"), shape=list[64,192,22,22,], )
paddle.reshape(x=Tensor([0, 96, 2, 22, 22],"float32"), shape=list[64,192,22,22,], )
paddle.reshape(x=Tensor([0, 96, 2, 24, 24],"float16"), shape=list[64,192,24,24,], )
paddle.reshape(x=Tensor([0, 96, 2, 24, 24],"float32"), shape=list[64,192,24,24,], )
paddle.reshape(x=Tensor([0, 96, 32, 32],"float16"), shape=list[64,2,48,32,32,], )
paddle.reshape(x=Tensor([0, 96, 32, 32],"float32"), shape=list[64,2,48,32,32,], )
paddle.reshape(x=Tensor([0, 96, 36, 36],"float16"), shape=list[64,2,48,36,36,], )
paddle.reshape(x=Tensor([0, 96, 36, 36],"float32"), shape=list[64,2,48,36,36,], )
paddle.reshape(x=Tensor([0, 96, 40, 40],"float16"), shape=list[64,2,48,40,40,], )
paddle.reshape(x=Tensor([0, 96, 40, 40],"float32"), shape=list[64,2,48,40,40,], )
paddle.reshape(x=Tensor([0, 96, 44, 44],"float16"), shape=list[64,2,48,44,44,], )
paddle.reshape(x=Tensor([0, 96, 44, 44],"float32"), shape=list[64,2,48,44,44,], )
paddle.reshape(x=Tensor([0, 96, 48, 48],"float16"), shape=list[64,2,48,48,48,], )
paddle.reshape(x=Tensor([0, 96, 48, 48],"float32"), shape=list[64,2,48,48,48,], )
paddle.reshape(x=Tensor([0],"float16"), shape=list[1,], )
paddle.reshape(x=Tensor([0],"float16"), shape=list[1024,], )
paddle.reshape(x=Tensor([0],"float16"), shape=list[12288,], )
paddle.reshape(x=Tensor([0],"float16"), shape=list[16384,], )
paddle.reshape(x=Tensor([0],"float16"), shape=list[2048,], )
paddle.reshape(x=Tensor([0],"float16"), shape=list[4096,], )
paddle.reshape(x=Tensor([0],"float16"), shape=list[6144,], )
paddle.reshape(x=Tensor([0],"float16"), shape=list[768,], )
paddle.reshape(x=Tensor([0],"float16"), shape=list[8192,], )
paddle.reshape(x=Tensor([0],"float32"), shape=list[10,], )
paddle.reshape(x=Tensor([0],"float32"), shape=list[1024,], )
paddle.reshape(x=Tensor([0],"float32"), shape=list[2048,], )
paddle.reshape(x=Tensor([0],"float32"), shape=list[4096,], )
paddle.reshape(x=Tensor([0],"float32"), shape=list[8,], )
paddle.reshape(x=Tensor([1, 0, 1],"float32"), shape=tuple(-1,), )
paddle.reshape(x=Tensor([1, 0, 4],"float32"), shape=tuple(-1,4,), )
paddle.reshape(x=Tensor([1, 138120, 0],"float32"), shape=tuple(-1,), )
paddle.reshape(x=Tensor([1, 138120, 0],"float32"), shape=tuple(-1,4,), )
paddle.reshape(x=Tensor([1, 153450, 0],"float32"), shape=tuple(-1,), )
paddle.reshape(x=Tensor([1, 153450, 0],"float32"), shape=tuple(-1,4,), )
paddle.reshape(x=Tensor([10, 0],"float32"), shape=list[10,], )
paddle.reshape(x=Tensor([10, 0],"float32"), shape=list[100,], )
paddle.reshape(x=Tensor([10, 0],"float32"), shape=list[80,], )
paddle.reshape(x=Tensor([1024, 0],"float16"), shape=list[1048576,], )
paddle.reshape(x=Tensor([1024, 0],"float16"), shape=list[2097152,], )
paddle.reshape(x=Tensor([1024, 0],"float16"), shape=list[4194304,], )
paddle.reshape(x=Tensor([13, 0, 12, 16],"float32"), shape=tuple(13,12,16,), )
paddle.reshape(x=Tensor([13, 0, 16],"float32"), shape=tuple(-1,1,12,16,), )
paddle.reshape(x=Tensor([13, 0, 32],"float32"), shape=list[13,7,4,-1,], )
paddle.reshape(x=Tensor([13, 1, 0, 16],"float32"), shape=tuple(13,12,16,), )
paddle.reshape(x=Tensor([13, 1, 12, 0],"float32"), shape=tuple(13,12,16,), )
paddle.reshape(x=Tensor([13, 12, 0],"float32"), shape=tuple(-1,1,12,16,), )
paddle.reshape(x=Tensor([13, 7, 0],"float32"), shape=list[13,7,4,-1,], )
paddle.reshape(x=Tensor([1536, 0, 14, 14],"float16"), shape=list[1536,2,116,14,14,], )
paddle.reshape(x=Tensor([1536, 0, 14, 14],"float32"), shape=list[1536,2,116,14,14,], )
paddle.reshape(x=Tensor([1536, 0, 2, 14, 14],"float16"), shape=list[1536,232,14,14,], )
paddle.reshape(x=Tensor([1536, 0, 2, 14, 14],"float32"), shape=list[1536,232,14,14,], )
paddle.reshape(x=Tensor([1536, 0, 2, 28, 28],"float16"), shape=list[1536,116,28,28,], )
paddle.reshape(x=Tensor([1536, 0, 2, 28, 28],"float32"), shape=list[1536,116,28,28,], )
paddle.reshape(x=Tensor([1536, 0, 2, 7, 7],"float16"), shape=list[1536,464,7,7,], )
paddle.reshape(x=Tensor([1536, 0, 2, 7, 7],"float32"), shape=list[1536,464,7,7,], )
paddle.reshape(x=Tensor([1536, 0, 28, 28],"float16"), shape=list[1536,2,58,28,28,], )
paddle.reshape(x=Tensor([1536, 0, 28, 28],"float32"), shape=list[1536,2,58,28,28,], )
paddle.reshape(x=Tensor([1536, 0, 7, 7],"float16"), shape=list[1536,2,232,7,7,], )
paddle.reshape(x=Tensor([1536, 0, 7, 7],"float32"), shape=list[1536,2,232,7,7,], )
paddle.reshape(x=Tensor([1536, 116, 0, 14, 14],"float16"), shape=list[1536,232,14,14,], )
paddle.reshape(x=Tensor([1536, 116, 0, 14, 14],"float32"), shape=list[1536,232,14,14,], )
paddle.reshape(x=Tensor([1536, 116, 0, 28],"float16"), shape=list[1536,2,58,28,28,], )
paddle.reshape(x=Tensor([1536, 116, 0, 28],"float32"), shape=list[1536,2,58,28,28,], )
paddle.reshape(x=Tensor([1536, 116, 2, 0, 14],"float16"), shape=list[1536,232,14,14,], )
paddle.reshape(x=Tensor([1536, 116, 2, 0, 14],"float32"), shape=list[1536,232,14,14,], )
paddle.reshape(x=Tensor([1536, 116, 2, 14, 0],"float16"), shape=list[1536,232,14,14,], )
paddle.reshape(x=Tensor([1536, 116, 2, 14, 0],"float32"), shape=list[1536,232,14,14,], )
paddle.reshape(x=Tensor([1536, 116, 28, 0],"float16"), shape=list[1536,2,58,28,28,], )
paddle.reshape(x=Tensor([1536, 116, 28, 0],"float32"), shape=list[1536,2,58,28,28,], )
paddle.reshape(x=Tensor([1536, 232, 0, 14],"float16"), shape=list[1536,2,116,14,14,], )
paddle.reshape(x=Tensor([1536, 232, 0, 14],"float32"), shape=list[1536,2,116,14,14,], )
paddle.reshape(x=Tensor([1536, 232, 0, 7, 7],"float16"), shape=list[1536,464,7,7,], )
paddle.reshape(x=Tensor([1536, 232, 0, 7, 7],"float32"), shape=list[1536,464,7,7,], )
paddle.reshape(x=Tensor([1536, 232, 14, 0],"float16"), shape=list[1536,2,116,14,14,], )
paddle.reshape(x=Tensor([1536, 232, 14, 0],"float32"), shape=list[1536,2,116,14,14,], )
paddle.reshape(x=Tensor([1536, 232, 2, 0, 7],"float16"), shape=list[1536,464,7,7,], )
paddle.reshape(x=Tensor([1536, 232, 2, 0, 7],"float32"), shape=list[1536,464,7,7,], )
paddle.reshape(x=Tensor([1536, 232, 2, 7, 0],"float16"), shape=list[1536,464,7,7,], )
paddle.reshape(x=Tensor([1536, 232, 2, 7, 0],"float32"), shape=list[1536,464,7,7,], )
paddle.reshape(x=Tensor([1536, 464, 0, 7],"float16"), shape=list[1536,2,232,7,7,], )
paddle.reshape(x=Tensor([1536, 464, 0, 7],"float32"), shape=list[1536,2,232,7,7,], )
paddle.reshape(x=Tensor([1536, 464, 7, 0],"float16"), shape=list[1536,2,232,7,7,], )
paddle.reshape(x=Tensor([1536, 464, 7, 0],"float32"), shape=list[1536,2,232,7,7,], )
paddle.reshape(x=Tensor([1536, 58, 0, 28, 28],"float16"), shape=list[1536,116,28,28,], )
paddle.reshape(x=Tensor([1536, 58, 0, 28, 28],"float32"), shape=list[1536,116,28,28,], )
paddle.reshape(x=Tensor([1536, 58, 2, 0, 28],"float16"), shape=list[1536,116,28,28,], )
paddle.reshape(x=Tensor([1536, 58, 2, 0, 28],"float32"), shape=list[1536,116,28,28,], )
paddle.reshape(x=Tensor([1536, 58, 2, 28, 0],"float16"), shape=list[1536,116,28,28,], )
paddle.reshape(x=Tensor([1536, 58, 2, 28, 0],"float32"), shape=list[1536,116,28,28,], )
paddle.reshape(x=Tensor([16, 0, 12, 16],"float32"), shape=tuple(16,12,16,), )
paddle.reshape(x=Tensor([16, 0, 12, 16],"float32"), shape=tuple(32,12,16,), )
paddle.reshape(x=Tensor([16, 0, 16, 12],"float32"), shape=list[16,2,40,16,12,], )
paddle.reshape(x=Tensor([16, 0, 16, 12],"float32"), shape=list[16,2,80,16,12,], )
paddle.reshape(x=Tensor([16, 0, 16],"float32"), shape=tuple(-1,1,12,16,), )
paddle.reshape(x=Tensor([16, 0, 2, 16, 12],"float32"), shape=list[16,160,16,12,], )
paddle.reshape(x=Tensor([16, 0, 2, 16, 12],"float32"), shape=list[16,80,16,12,], )
paddle.reshape(x=Tensor([16, 0, 2, 32, 24],"float32"), shape=list[16,32,32,24,], )
paddle.reshape(x=Tensor([16, 0, 2, 32, 24],"float32"), shape=list[16,40,32,24,], )
paddle.reshape(x=Tensor([16, 0, 2, 32, 24],"float32"), shape=list[16,80,32,24,], )
paddle.reshape(x=Tensor([16, 0, 2, 4, 3],"float32"), shape=list[16,320,4,3,], )
paddle.reshape(x=Tensor([16, 0, 2, 64, 48],"float32"), shape=list[16,32,64,48,], )
paddle.reshape(x=Tensor([16, 0, 2, 64, 48],"float32"), shape=list[16,40,64,48,], )
paddle.reshape(x=Tensor([16, 0, 2, 8, 6],"float32"), shape=list[16,160,8,6,], )
paddle.reshape(x=Tensor([16, 0, 2, 8, 6],"float32"), shape=list[16,320,8,6,], )
paddle.reshape(x=Tensor([16, 0, 32, 24],"float32"), shape=list[16,2,16,32,24,], )
paddle.reshape(x=Tensor([16, 0, 32, 24],"float32"), shape=list[16,2,20,32,24,], )
paddle.reshape(x=Tensor([16, 0, 32, 24],"float32"), shape=list[16,2,40,32,24,], )
paddle.reshape(x=Tensor([16, 0, 4, 3],"float32"), shape=list[16,2,160,4,3,], )
paddle.reshape(x=Tensor([16, 0, 64, 48],"float32"), shape=list[16,2,16,64,48,], )
paddle.reshape(x=Tensor([16, 0, 64, 48],"float32"), shape=list[16,2,20,64,48,], )
paddle.reshape(x=Tensor([16, 0, 8, 6],"float32"), shape=list[16,2,160,8,6,], )
paddle.reshape(x=Tensor([16, 0, 8, 6],"float32"), shape=list[16,2,80,8,6,], )
paddle.reshape(x=Tensor([16, 1, 0, 16],"float32"), shape=tuple(16,12,16,), )
paddle.reshape(x=Tensor([16, 1, 12, 0],"float32"), shape=tuple(16,12,16,), )
paddle.reshape(x=Tensor([16, 12, 0],"float32"), shape=tuple(-1,1,12,16,), )
paddle.reshape(x=Tensor([16, 16, 0, 32, 24],"float32"), shape=list[16,32,32,24,], )
paddle.reshape(x=Tensor([16, 16, 0, 64, 48],"float32"), shape=list[16,32,64,48,], )
paddle.reshape(x=Tensor([16, 16, 2, 0, 24],"float32"), shape=list[16,32,32,24,], )
paddle.reshape(x=Tensor([16, 16, 2, 0, 48],"float32"), shape=list[16,32,64,48,], )
paddle.reshape(x=Tensor([16, 16, 2, 32, 0],"float32"), shape=list[16,32,32,24,], )
paddle.reshape(x=Tensor([16, 16, 2, 64, 0],"float32"), shape=list[16,32,64,48,], )
paddle.reshape(x=Tensor([16, 160, 0, 12],"float32"), shape=list[16,2,80,16,12,], )
paddle.reshape(x=Tensor([16, 160, 0, 4, 3],"float32"), shape=list[16,320,4,3,], )
paddle.reshape(x=Tensor([16, 160, 0, 6],"float32"), shape=list[16,2,80,8,6,], )
paddle.reshape(x=Tensor([16, 160, 0, 8, 6],"float32"), shape=list[16,320,8,6,], )
paddle.reshape(x=Tensor([16, 160, 16, 0],"float32"), shape=list[16,2,80,16,12,], )
paddle.reshape(x=Tensor([16, 160, 2, 0, 3],"float32"), shape=list[16,320,4,3,], )
paddle.reshape(x=Tensor([16, 160, 2, 0, 6],"float32"), shape=list[16,320,8,6,], )
paddle.reshape(x=Tensor([16, 160, 2, 4, 0],"float32"), shape=list[16,320,4,3,], )
paddle.reshape(x=Tensor([16, 160, 2, 8, 0],"float32"), shape=list[16,320,8,6,], )
paddle.reshape(x=Tensor([16, 160, 8, 0],"float32"), shape=list[16,2,80,8,6,], )
paddle.reshape(x=Tensor([16, 2, 0, 16],"float32"), shape=tuple(32,12,16,), )
paddle.reshape(x=Tensor([16, 2, 12, 0],"float32"), shape=tuple(32,12,16,), )
paddle.reshape(x=Tensor([16, 20, 0, 32, 24],"float32"), shape=list[16,40,32,24,], )
paddle.reshape(x=Tensor([16, 20, 0, 64, 48],"float32"), shape=list[16,40,64,48,], )
paddle.reshape(x=Tensor([16, 20, 2, 0, 24],"float32"), shape=list[16,40,32,24,], )
paddle.reshape(x=Tensor([16, 20, 2, 0, 48],"float32"), shape=list[16,40,64,48,], )
paddle.reshape(x=Tensor([16, 20, 2, 32, 0],"float32"), shape=list[16,40,32,24,], )
paddle.reshape(x=Tensor([16, 20, 2, 64, 0],"float32"), shape=list[16,40,64,48,], )
paddle.reshape(x=Tensor([16, 32, 0, 24],"float32"), shape=list[16,2,16,32,24,], )
paddle.reshape(x=Tensor([16, 32, 0, 48],"float32"), shape=list[16,2,16,64,48,], )
paddle.reshape(x=Tensor([16, 32, 32, 0],"float32"), shape=list[16,2,16,32,24,], )
paddle.reshape(x=Tensor([16, 32, 64, 0],"float32"), shape=list[16,2,16,64,48,], )
paddle.reshape(x=Tensor([16, 320, 0, 3],"float32"), shape=list[16,2,160,4,3,], )
paddle.reshape(x=Tensor([16, 320, 0, 6],"float32"), shape=list[16,2,160,8,6,], )
paddle.reshape(x=Tensor([16, 320, 4, 0],"float32"), shape=list[16,2,160,4,3,], )
paddle.reshape(x=Tensor([16, 320, 8, 0],"float32"), shape=list[16,2,160,8,6,], )
paddle.reshape(x=Tensor([16, 40, 0, 16, 12],"float32"), shape=list[16,80,16,12,], )
paddle.reshape(x=Tensor([16, 40, 0, 24],"float32"), shape=list[16,2,20,32,24,], )
paddle.reshape(x=Tensor([16, 40, 0, 32, 24],"float32"), shape=list[16,80,32,24,], )
paddle.reshape(x=Tensor([16, 40, 0, 48],"float32"), shape=list[16,2,20,64,48,], )
paddle.reshape(x=Tensor([16, 40, 2, 0, 12],"float32"), shape=list[16,80,16,12,], )
paddle.reshape(x=Tensor([16, 40, 2, 0, 24],"float32"), shape=list[16,80,32,24,], )
paddle.reshape(x=Tensor([16, 40, 2, 16, 0],"float32"), shape=list[16,80,16,12,], )
paddle.reshape(x=Tensor([16, 40, 2, 32, 0],"float32"), shape=list[16,80,32,24,], )
paddle.reshape(x=Tensor([16, 40, 32, 0],"float32"), shape=list[16,2,20,32,24,], )
paddle.reshape(x=Tensor([16, 40, 64, 0],"float32"), shape=list[16,2,20,64,48,], )
paddle.reshape(x=Tensor([16, 80, 0, 12],"float32"), shape=list[16,2,40,16,12,], )
paddle.reshape(x=Tensor([16, 80, 0, 16, 12],"float32"), shape=list[16,160,16,12,], )
paddle.reshape(x=Tensor([16, 80, 0, 24],"float32"), shape=list[16,2,40,32,24,], )
paddle.reshape(x=Tensor([16, 80, 0, 8, 6],"float32"), shape=list[16,160,8,6,], )
paddle.reshape(x=Tensor([16, 80, 16, 0],"float32"), shape=list[16,2,40,16,12,], )
paddle.reshape(x=Tensor([16, 80, 2, 0, 12],"float32"), shape=list[16,160,16,12,], )
paddle.reshape(x=Tensor([16, 80, 2, 0, 6],"float32"), shape=list[16,160,8,6,], )
paddle.reshape(x=Tensor([16, 80, 2, 16, 0],"float32"), shape=list[16,160,16,12,], )
paddle.reshape(x=Tensor([16, 80, 2, 8, 0],"float32"), shape=list[16,160,8,6,], )
paddle.reshape(x=Tensor([16, 80, 32, 0],"float32"), shape=list[16,2,40,32,24,], )
paddle.reshape(x=Tensor([16384, 0],"float16"), shape=list[67108864,], )
paddle.reshape(x=Tensor([2, 0, 1],"float32"), shape=list[2,8,], )
paddle.reshape(x=Tensor([2, 0, 12, 16],"float32"), shape=tuple(4,12,16,), )
paddle.reshape(x=Tensor([2, 0],"float32"), shape=list[1,-1,], )
paddle.reshape(x=Tensor([2, 0],"float32"), shape=list[1,4,], )
paddle.reshape(x=Tensor([2, 0],"float32"), shape=list[6,], )
paddle.reshape(x=Tensor([2, 0],"float64"), shape=list[1,-1,], )
paddle.reshape(x=Tensor([2, 0],"float64"), shape=list[1,4,], )
paddle.reshape(x=Tensor([2, 0],"float64"), shape=tuple(1,4,), )
paddle.reshape(x=Tensor([2, 2, 0, 16],"float32"), shape=tuple(4,12,16,), )
paddle.reshape(x=Tensor([2, 2, 12, 0],"float32"), shape=tuple(4,12,16,), )
paddle.reshape(x=Tensor([2, 8, 0],"float32"), shape=list[2,8,], )
paddle.reshape(x=Tensor([20, 0],"float32"), shape=list[200,], )
paddle.reshape(x=Tensor([2048, 0],"float16"), shape=list[12582912,], )
paddle.reshape(x=Tensor([2048, 0],"float16"), shape=list[16777216,], )
paddle.reshape(x=Tensor([2048, 0],"float16"), shape=list[4194304,], )
paddle.reshape(x=Tensor([3, 0, 12, 16],"float32"), shape=tuple(3,12,16,), )
paddle.reshape(x=Tensor([3, 1, 0, 16],"float32"), shape=tuple(3,12,16,), )
paddle.reshape(x=Tensor([3, 1, 12, 0],"float32"), shape=tuple(3,12,16,), )
paddle.reshape(x=Tensor([32, 0, 16],"float32"), shape=tuple(-1,2,12,16,), )
paddle.reshape(x=Tensor([32, 12, 0],"float32"), shape=tuple(-1,2,12,16,), )
paddle.reshape(x=Tensor([4, 0, 16],"float32"), shape=tuple(-1,2,12,16,), )
paddle.reshape(x=Tensor([4, 0],"float32"), shape=list[36,], )
paddle.reshape(x=Tensor([4, 12, 0],"float32"), shape=tuple(-1,2,12,16,), )
paddle.reshape(x=Tensor([4096, 0],"float16"), shape=list[16777216,], )
paddle.reshape(x=Tensor([4096, 0],"float16"), shape=list[50331648,], )
paddle.reshape(x=Tensor([4096, 0],"float16"), shape=list[67108864,], )
paddle.reshape(x=Tensor([5, 0, 10],"float32"), shape=list[5,10,], )
paddle.reshape(x=Tensor([5, 0, 10],"int32"), shape=list[5,10,], )
paddle.reshape(x=Tensor([5, 1, 0],"float32"), shape=list[5,10,], )
paddle.reshape(x=Tensor([5, 1, 0],"int32"), shape=list[5,10,], )
paddle.reshape(x=Tensor([50304, 0],"float16"), shape=list[103022592,], )
paddle.reshape(x=Tensor([50304, 0],"float16"), shape=list[206045184,], )
paddle.reshape(x=Tensor([512, 0, 14, 14],"float16"), shape=list[512,2,116,14,14,], )
paddle.reshape(x=Tensor([512, 0, 14, 14],"float32"), shape=list[512,2,116,14,14,], )
paddle.reshape(x=Tensor([512, 0, 16, 12],"float16"), shape=list[512,2,40,16,12,], )
paddle.reshape(x=Tensor([512, 0, 16, 12],"float32"), shape=list[512,2,40,16,12,], )
paddle.reshape(x=Tensor([512, 0, 2, 14, 14],"float16"), shape=list[512,232,14,14,], )
paddle.reshape(x=Tensor([512, 0, 2, 14, 14],"float32"), shape=list[512,232,14,14,], )
paddle.reshape(x=Tensor([512, 0, 2, 16, 12],"float16"), shape=list[512,80,16,12,], )
paddle.reshape(x=Tensor([512, 0, 2, 16, 12],"float32"), shape=list[512,80,16,12,], )
paddle.reshape(x=Tensor([512, 0, 2, 28, 28],"float16"), shape=list[512,120,28,28,], )
paddle.reshape(x=Tensor([512, 0, 2, 28, 28],"float32"), shape=list[512,120,28,28,], )
paddle.reshape(x=Tensor([512, 0, 2, 32, 24],"float16"), shape=list[512,32,32,24,], )
paddle.reshape(x=Tensor([512, 0, 2, 32, 24],"float16"), shape=list[512,40,32,24,], )
paddle.reshape(x=Tensor([512, 0, 2, 32, 24],"float32"), shape=list[512,32,32,24,], )
paddle.reshape(x=Tensor([512, 0, 2, 32, 24],"float32"), shape=list[512,40,32,24,], )
paddle.reshape(x=Tensor([512, 0, 2, 4, 3],"float16"), shape=list[512,320,4,3,], )
paddle.reshape(x=Tensor([512, 0, 2, 4, 3],"float32"), shape=list[512,320,4,3,], )
paddle.reshape(x=Tensor([512, 0, 2, 7, 7],"float16"), shape=list[512,464,7,7,], )
paddle.reshape(x=Tensor([512, 0, 2, 7, 7],"float32"), shape=list[512,464,7,7,], )
paddle.reshape(x=Tensor([512, 0, 2, 8, 6],"float16"), shape=list[512,160,8,6,], )
paddle.reshape(x=Tensor([512, 0, 2, 8, 6],"float32"), shape=list[512,160,8,6,], )
paddle.reshape(x=Tensor([512, 0, 28, 28],"float16"), shape=list[512,2,60,28,28,], )
paddle.reshape(x=Tensor([512, 0, 28, 28],"float32"), shape=list[512,2,60,28,28,], )
paddle.reshape(x=Tensor([512, 0, 32, 24],"float16"), shape=list[512,2,16,32,24,], )
paddle.reshape(x=Tensor([512, 0, 32, 24],"float16"), shape=list[512,2,20,32,24,], )
paddle.reshape(x=Tensor([512, 0, 32, 24],"float32"), shape=list[512,2,16,32,24,], )
paddle.reshape(x=Tensor([512, 0, 32, 24],"float32"), shape=list[512,2,20,32,24,], )
paddle.reshape(x=Tensor([512, 0, 4, 3],"float16"), shape=list[512,2,160,4,3,], )
paddle.reshape(x=Tensor([512, 0, 4, 3],"float32"), shape=list[512,2,160,4,3,], )
paddle.reshape(x=Tensor([512, 0, 7, 7],"float16"), shape=list[512,2,232,7,7,], )
paddle.reshape(x=Tensor([512, 0, 7, 7],"float32"), shape=list[512,2,232,7,7,], )
paddle.reshape(x=Tensor([512, 0, 8, 6],"float16"), shape=list[512,2,80,8,6,], )
paddle.reshape(x=Tensor([512, 0, 8, 6],"float32"), shape=list[512,2,80,8,6,], )
paddle.reshape(x=Tensor([512, 116, 0, 14, 14],"float16"), shape=list[512,232,14,14,], )
paddle.reshape(x=Tensor([512, 116, 0, 14, 14],"float32"), shape=list[512,232,14,14,], )
paddle.reshape(x=Tensor([512, 116, 2, 0, 14],"float16"), shape=list[512,232,14,14,], )
paddle.reshape(x=Tensor([512, 116, 2, 0, 14],"float32"), shape=list[512,232,14,14,], )
paddle.reshape(x=Tensor([512, 116, 2, 14, 0],"float16"), shape=list[512,232,14,14,], )
paddle.reshape(x=Tensor([512, 116, 2, 14, 0],"float32"), shape=list[512,232,14,14,], )
paddle.reshape(x=Tensor([512, 120, 0, 28],"float16"), shape=list[512,2,60,28,28,], )
paddle.reshape(x=Tensor([512, 120, 0, 28],"float32"), shape=list[512,2,60,28,28,], )
paddle.reshape(x=Tensor([512, 120, 28, 0],"float16"), shape=list[512,2,60,28,28,], )
paddle.reshape(x=Tensor([512, 120, 28, 0],"float32"), shape=list[512,2,60,28,28,], )
paddle.reshape(x=Tensor([512, 16, 0, 32, 24],"float16"), shape=list[512,32,32,24,], )
paddle.reshape(x=Tensor([512, 16, 0, 32, 24],"float32"), shape=list[512,32,32,24,], )
paddle.reshape(x=Tensor([512, 16, 2, 0, 24],"float16"), shape=list[512,32,32,24,], )
paddle.reshape(x=Tensor([512, 16, 2, 0, 24],"float32"), shape=list[512,32,32,24,], )
paddle.reshape(x=Tensor([512, 16, 2, 32, 0],"float16"), shape=list[512,32,32,24,], )
paddle.reshape(x=Tensor([512, 16, 2, 32, 0],"float32"), shape=list[512,32,32,24,], )
paddle.reshape(x=Tensor([512, 160, 0, 4, 3],"float16"), shape=list[512,320,4,3,], )
paddle.reshape(x=Tensor([512, 160, 0, 4, 3],"float32"), shape=list[512,320,4,3,], )
paddle.reshape(x=Tensor([512, 160, 0, 6],"float16"), shape=list[512,2,80,8,6,], )
paddle.reshape(x=Tensor([512, 160, 0, 6],"float32"), shape=list[512,2,80,8,6,], )
paddle.reshape(x=Tensor([512, 160, 2, 0, 3],"float16"), shape=list[512,320,4,3,], )
paddle.reshape(x=Tensor([512, 160, 2, 0, 3],"float32"), shape=list[512,320,4,3,], )
paddle.reshape(x=Tensor([512, 160, 2, 4, 0],"float16"), shape=list[512,320,4,3,], )
paddle.reshape(x=Tensor([512, 160, 2, 4, 0],"float32"), shape=list[512,320,4,3,], )
paddle.reshape(x=Tensor([512, 160, 8, 0],"float16"), shape=list[512,2,80,8,6,], )
paddle.reshape(x=Tensor([512, 160, 8, 0],"float32"), shape=list[512,2,80,8,6,], )
paddle.reshape(x=Tensor([512, 20, 0, 32, 24],"float16"), shape=list[512,40,32,24,], )
paddle.reshape(x=Tensor([512, 20, 0, 32, 24],"float32"), shape=list[512,40,32,24,], )
paddle.reshape(x=Tensor([512, 20, 2, 0, 24],"float16"), shape=list[512,40,32,24,], )
paddle.reshape(x=Tensor([512, 20, 2, 0, 24],"float32"), shape=list[512,40,32,24,], )
paddle.reshape(x=Tensor([512, 20, 2, 32, 0],"float16"), shape=list[512,40,32,24,], )
paddle.reshape(x=Tensor([512, 20, 2, 32, 0],"float32"), shape=list[512,40,32,24,], )
paddle.reshape(x=Tensor([512, 232, 0, 14],"float16"), shape=list[512,2,116,14,14,], )
paddle.reshape(x=Tensor([512, 232, 0, 14],"float32"), shape=list[512,2,116,14,14,], )
paddle.reshape(x=Tensor([512, 232, 0, 7, 7],"float16"), shape=list[512,464,7,7,], )
paddle.reshape(x=Tensor([512, 232, 0, 7, 7],"float32"), shape=list[512,464,7,7,], )
paddle.reshape(x=Tensor([512, 232, 14, 0],"float16"), shape=list[512,2,116,14,14,], )
paddle.reshape(x=Tensor([512, 232, 14, 0],"float32"), shape=list[512,2,116,14,14,], )
paddle.reshape(x=Tensor([512, 232, 2, 0, 7],"float16"), shape=list[512,464,7,7,], )
paddle.reshape(x=Tensor([512, 232, 2, 0, 7],"float32"), shape=list[512,464,7,7,], )
paddle.reshape(x=Tensor([512, 232, 2, 7, 0],"float16"), shape=list[512,464,7,7,], )
paddle.reshape(x=Tensor([512, 232, 2, 7, 0],"float32"), shape=list[512,464,7,7,], )
paddle.reshape(x=Tensor([512, 32, 0, 24],"float16"), shape=list[512,2,16,32,24,], )
paddle.reshape(x=Tensor([512, 32, 0, 24],"float32"), shape=list[512,2,16,32,24,], )
paddle.reshape(x=Tensor([512, 32, 32, 0],"float16"), shape=list[512,2,16,32,24,], )
paddle.reshape(x=Tensor([512, 32, 32, 0],"float32"), shape=list[512,2,16,32,24,], )
paddle.reshape(x=Tensor([512, 320, 0, 3],"float16"), shape=list[512,2,160,4,3,], )
paddle.reshape(x=Tensor([512, 320, 0, 3],"float32"), shape=list[512,2,160,4,3,], )
paddle.reshape(x=Tensor([512, 320, 4, 0],"float16"), shape=list[512,2,160,4,3,], )
paddle.reshape(x=Tensor([512, 320, 4, 0],"float32"), shape=list[512,2,160,4,3,], )
paddle.reshape(x=Tensor([512, 40, 0, 16, 12],"float16"), shape=list[512,80,16,12,], )
paddle.reshape(x=Tensor([512, 40, 0, 16, 12],"float32"), shape=list[512,80,16,12,], )
paddle.reshape(x=Tensor([512, 40, 0, 24],"float16"), shape=list[512,2,20,32,24,], )
paddle.reshape(x=Tensor([512, 40, 0, 24],"float32"), shape=list[512,2,20,32,24,], )
paddle.reshape(x=Tensor([512, 40, 2, 0, 12],"float16"), shape=list[512,80,16,12,], )
paddle.reshape(x=Tensor([512, 40, 2, 0, 12],"float32"), shape=list[512,80,16,12,], )
paddle.reshape(x=Tensor([512, 40, 2, 16, 0],"float16"), shape=list[512,80,16,12,], )
paddle.reshape(x=Tensor([512, 40, 2, 16, 0],"float32"), shape=list[512,80,16,12,], )
paddle.reshape(x=Tensor([512, 40, 32, 0],"float16"), shape=list[512,2,20,32,24,], )
paddle.reshape(x=Tensor([512, 40, 32, 0],"float32"), shape=list[512,2,20,32,24,], )
paddle.reshape(x=Tensor([512, 464, 0, 7],"float16"), shape=list[512,2,232,7,7,], )
paddle.reshape(x=Tensor([512, 464, 0, 7],"float32"), shape=list[512,2,232,7,7,], )
paddle.reshape(x=Tensor([512, 464, 7, 0],"float16"), shape=list[512,2,232,7,7,], )
paddle.reshape(x=Tensor([512, 464, 7, 0],"float32"), shape=list[512,2,232,7,7,], )
paddle.reshape(x=Tensor([512, 60, 0, 28, 28],"float16"), shape=list[512,120,28,28,], )
paddle.reshape(x=Tensor([512, 60, 0, 28, 28],"float32"), shape=list[512,120,28,28,], )
paddle.reshape(x=Tensor([512, 60, 2, 0, 28],"float16"), shape=list[512,120,28,28,], )
paddle.reshape(x=Tensor([512, 60, 2, 0, 28],"float32"), shape=list[512,120,28,28,], )
paddle.reshape(x=Tensor([512, 60, 2, 28, 0],"float16"), shape=list[512,120,28,28,], )
paddle.reshape(x=Tensor([512, 60, 2, 28, 0],"float32"), shape=list[512,120,28,28,], )
paddle.reshape(x=Tensor([512, 80, 0, 12],"float16"), shape=list[512,2,40,16,12,], )
paddle.reshape(x=Tensor([512, 80, 0, 12],"float32"), shape=list[512,2,40,16,12,], )
paddle.reshape(x=Tensor([512, 80, 0, 8, 6],"float16"), shape=list[512,160,8,6,], )
paddle.reshape(x=Tensor([512, 80, 0, 8, 6],"float32"), shape=list[512,160,8,6,], )
paddle.reshape(x=Tensor([512, 80, 16, 0],"float16"), shape=list[512,2,40,16,12,], )
paddle.reshape(x=Tensor([512, 80, 16, 0],"float32"), shape=list[512,2,40,16,12,], )
paddle.reshape(x=Tensor([512, 80, 2, 0, 6],"float16"), shape=list[512,160,8,6,], )
paddle.reshape(x=Tensor([512, 80, 2, 0, 6],"float32"), shape=list[512,160,8,6,], )
paddle.reshape(x=Tensor([512, 80, 2, 8, 0],"float16"), shape=list[512,160,8,6,], )
paddle.reshape(x=Tensor([512, 80, 2, 8, 0],"float32"), shape=list[512,160,8,6,], )
paddle.reshape(x=Tensor([52, 0, 32],"float32"), shape=list[52,7,4,-1,], )
paddle.reshape(x=Tensor([52, 7, 0],"float32"), shape=list[52,7,4,-1,], )
paddle.reshape(x=Tensor([58, 0, 2],"float32"), shape=list[-1,2,], )
paddle.reshape(x=Tensor([58, 140, 0],"float32"), shape=list[-1,2,], )
paddle.reshape(x=Tensor([64, 0, 1, 1],"float16"), shape=list[64,1,2,128,], )
paddle.reshape(x=Tensor([64, 0, 1, 1],"float16"), shape=list[64,1,2,256,], )
paddle.reshape(x=Tensor([64, 0, 1, 1],"float16"), shape=list[64,1,2,512,], )
paddle.reshape(x=Tensor([64, 0, 1, 1],"float16"), shape=list[64,1,2,64,], )
paddle.reshape(x=Tensor([64, 0, 1, 1],"float32"), shape=list[64,1,2,128,], )
paddle.reshape(x=Tensor([64, 0, 1, 1],"float32"), shape=list[64,1,2,256,], )
paddle.reshape(x=Tensor([64, 0, 1, 1],"float32"), shape=list[64,1,2,512,], )
paddle.reshape(x=Tensor([64, 0, 1, 1],"float32"), shape=list[64,1,2,64,], )
paddle.reshape(x=Tensor([64, 0, 1, 128],"float16"), shape=list[64,256,1,1,], )
paddle.reshape(x=Tensor([64, 0, 1, 128],"float32"), shape=list[64,256,1,1,], )
paddle.reshape(x=Tensor([64, 0, 1, 256],"float16"), shape=list[64,512,1,1,], )
paddle.reshape(x=Tensor([64, 0, 1, 256],"float32"), shape=list[64,512,1,1,], )
paddle.reshape(x=Tensor([64, 0, 1, 512],"float16"), shape=list[64,1024,1,1,], )
paddle.reshape(x=Tensor([64, 0, 1, 512],"float32"), shape=list[64,1024,1,1,], )
paddle.reshape(x=Tensor([64, 0, 1, 64],"float16"), shape=list[64,128,1,1,], )
paddle.reshape(x=Tensor([64, 0, 1, 64],"float32"), shape=list[64,128,1,1,], )
paddle.reshape(x=Tensor([64, 0, 10, 10],"float16"), shape=list[64,2,192,10,10,], )
paddle.reshape(x=Tensor([64, 0, 10, 10],"float32"), shape=list[64,2,192,10,10,], )
paddle.reshape(x=Tensor([64, 0, 11, 11],"float16"), shape=list[64,2,192,11,11,], )
paddle.reshape(x=Tensor([64, 0, 11, 11],"float32"), shape=list[64,2,192,11,11,], )
paddle.reshape(x=Tensor([64, 0, 12, 12],"float16"), shape=list[64,2,192,12,12,], )
paddle.reshape(x=Tensor([64, 0, 12, 12],"float32"), shape=list[64,2,192,12,12,], )
paddle.reshape(x=Tensor([64, 0, 16, 16],"float16"), shape=list[64,2,96,16,16,], )
paddle.reshape(x=Tensor([64, 0, 16, 16],"float32"), shape=list[64,2,96,16,16,], )
paddle.reshape(x=Tensor([64, 0, 18, 18],"float16"), shape=list[64,2,96,18,18,], )
paddle.reshape(x=Tensor([64, 0, 18, 18],"float32"), shape=list[64,2,96,18,18,], )
paddle.reshape(x=Tensor([64, 0, 2, 10, 10],"float16"), shape=list[64,384,10,10,], )
paddle.reshape(x=Tensor([64, 0, 2, 10, 10],"float32"), shape=list[64,384,10,10,], )
paddle.reshape(x=Tensor([64, 0, 2, 11, 11],"float16"), shape=list[64,384,11,11,], )
paddle.reshape(x=Tensor([64, 0, 2, 11, 11],"float32"), shape=list[64,384,11,11,], )
paddle.reshape(x=Tensor([64, 0, 2, 12, 12],"float16"), shape=list[64,384,12,12,], )
paddle.reshape(x=Tensor([64, 0, 2, 12, 12],"float32"), shape=list[64,384,12,12,], )
paddle.reshape(x=Tensor([64, 0, 2, 16, 16],"float16"), shape=list[64,192,16,16,], )
paddle.reshape(x=Tensor([64, 0, 2, 16, 16],"float32"), shape=list[64,192,16,16,], )
paddle.reshape(x=Tensor([64, 0, 2, 18, 18],"float16"), shape=list[64,192,18,18,], )
paddle.reshape(x=Tensor([64, 0, 2, 18, 18],"float32"), shape=list[64,192,18,18,], )
paddle.reshape(x=Tensor([64, 0, 2, 20, 20],"float16"), shape=list[64,192,20,20,], )
paddle.reshape(x=Tensor([64, 0, 2, 20, 20],"float32"), shape=list[64,192,20,20,], )
paddle.reshape(x=Tensor([64, 0, 2, 22, 22],"float16"), shape=list[64,192,22,22,], )
paddle.reshape(x=Tensor([64, 0, 2, 22, 22],"float32"), shape=list[64,192,22,22,], )
paddle.reshape(x=Tensor([64, 0, 2, 24, 24],"float16"), shape=list[64,192,24,24,], )
paddle.reshape(x=Tensor([64, 0, 2, 24, 24],"float32"), shape=list[64,192,24,24,], )
paddle.reshape(x=Tensor([64, 0, 2, 32, 32],"float16"), shape=list[64,96,32,32,], )
paddle.reshape(x=Tensor([64, 0, 2, 32, 32],"float32"), shape=list[64,96,32,32,], )
paddle.reshape(x=Tensor([64, 0, 2, 36, 36],"float16"), shape=list[64,96,36,36,], )
paddle.reshape(x=Tensor([64, 0, 2, 36, 36],"float32"), shape=list[64,96,36,36,], )
paddle.reshape(x=Tensor([64, 0, 2, 40, 40],"float16"), shape=list[64,96,40,40,], )
paddle.reshape(x=Tensor([64, 0, 2, 40, 40],"float32"), shape=list[64,96,40,40,], )
paddle.reshape(x=Tensor([64, 0, 2, 44, 44],"float16"), shape=list[64,96,44,44,], )
paddle.reshape(x=Tensor([64, 0, 2, 44, 44],"float32"), shape=list[64,96,44,44,], )
paddle.reshape(x=Tensor([64, 0, 2, 48, 48],"float16"), shape=list[64,96,48,48,], )
paddle.reshape(x=Tensor([64, 0, 2, 48, 48],"float32"), shape=list[64,96,48,48,], )
paddle.reshape(x=Tensor([64, 0, 2, 8, 8],"float16"), shape=list[64,384,8,8,], )
paddle.reshape(x=Tensor([64, 0, 2, 8, 8],"float32"), shape=list[64,384,8,8,], )
paddle.reshape(x=Tensor([64, 0, 2, 9, 9],"float16"), shape=list[64,384,9,9,], )
paddle.reshape(x=Tensor([64, 0, 2, 9, 9],"float32"), shape=list[64,384,9,9,], )
paddle.reshape(x=Tensor([64, 0, 20, 20],"float16"), shape=list[64,2,96,20,20,], )
paddle.reshape(x=Tensor([64, 0, 20, 20],"float32"), shape=list[64,2,96,20,20,], )
paddle.reshape(x=Tensor([64, 0, 22, 22],"float16"), shape=list[64,2,96,22,22,], )
paddle.reshape(x=Tensor([64, 0, 22, 22],"float32"), shape=list[64,2,96,22,22,], )
paddle.reshape(x=Tensor([64, 0, 24, 24],"float16"), shape=list[64,2,96,24,24,], )
paddle.reshape(x=Tensor([64, 0, 24, 24],"float32"), shape=list[64,2,96,24,24,], )
paddle.reshape(x=Tensor([64, 0, 32, 32],"float16"), shape=list[64,2,48,32,32,], )
paddle.reshape(x=Tensor([64, 0, 32, 32],"float32"), shape=list[64,2,48,32,32,], )
paddle.reshape(x=Tensor([64, 0, 36, 36],"float16"), shape=list[64,2,48,36,36,], )
paddle.reshape(x=Tensor([64, 0, 36, 36],"float32"), shape=list[64,2,48,36,36,], )
paddle.reshape(x=Tensor([64, 0, 40, 40],"float16"), shape=list[64,2,48,40,40,], )
paddle.reshape(x=Tensor([64, 0, 40, 40],"float32"), shape=list[64,2,48,40,40,], )
paddle.reshape(x=Tensor([64, 0, 44, 44],"float16"), shape=list[64,2,48,44,44,], )
paddle.reshape(x=Tensor([64, 0, 44, 44],"float32"), shape=list[64,2,48,44,44,], )
paddle.reshape(x=Tensor([64, 0, 48, 48],"float16"), shape=list[64,2,48,48,48,], )
paddle.reshape(x=Tensor([64, 0, 48, 48],"float32"), shape=list[64,2,48,48,48,], )
paddle.reshape(x=Tensor([64, 0, 8, 8],"float16"), shape=list[64,2,192,8,8,], )
paddle.reshape(x=Tensor([64, 0, 8, 8],"float32"), shape=list[64,2,192,8,8,], )
paddle.reshape(x=Tensor([64, 0, 9, 9],"float16"), shape=list[64,2,192,9,9,], )
paddle.reshape(x=Tensor([64, 0, 9, 9],"float32"), shape=list[64,2,192,9,9,], )
paddle.reshape(x=Tensor([64, 1024, 0, 1],"float16"), shape=list[64,1,2,512,], )
paddle.reshape(x=Tensor([64, 1024, 0, 1],"float32"), shape=list[64,1,2,512,], )
paddle.reshape(x=Tensor([64, 1024, 1, 0],"float16"), shape=list[64,1,2,512,], )
paddle.reshape(x=Tensor([64, 1024, 1, 0],"float32"), shape=list[64,1,2,512,], )
paddle.reshape(x=Tensor([64, 128, 0, 1],"float16"), shape=list[64,1,2,64,], )
paddle.reshape(x=Tensor([64, 128, 0, 1],"float32"), shape=list[64,1,2,64,], )
paddle.reshape(x=Tensor([64, 128, 1, 0],"float16"), shape=list[64,1,2,64,], )
paddle.reshape(x=Tensor([64, 128, 1, 0],"float32"), shape=list[64,1,2,64,], )
paddle.reshape(x=Tensor([64, 192, 0, 10, 10],"float16"), shape=list[64,384,10,10,], )
paddle.reshape(x=Tensor([64, 192, 0, 10, 10],"float32"), shape=list[64,384,10,10,], )
paddle.reshape(x=Tensor([64, 192, 0, 11, 11],"float16"), shape=list[64,384,11,11,], )
paddle.reshape(x=Tensor([64, 192, 0, 11, 11],"float32"), shape=list[64,384,11,11,], )
paddle.reshape(x=Tensor([64, 192, 0, 12, 12],"float16"), shape=list[64,384,12,12,], )
paddle.reshape(x=Tensor([64, 192, 0, 12, 12],"float32"), shape=list[64,384,12,12,], )
paddle.reshape(x=Tensor([64, 192, 0, 16],"float16"), shape=list[64,2,96,16,16,], )
paddle.reshape(x=Tensor([64, 192, 0, 16],"float32"), shape=list[64,2,96,16,16,], )
paddle.reshape(x=Tensor([64, 192, 0, 18],"float16"), shape=list[64,2,96,18,18,], )
paddle.reshape(x=Tensor([64, 192, 0, 18],"float32"), shape=list[64,2,96,18,18,], )
paddle.reshape(x=Tensor([64, 192, 0, 20],"float16"), shape=list[64,2,96,20,20,], )
paddle.reshape(x=Tensor([64, 192, 0, 20],"float32"), shape=list[64,2,96,20,20,], )
paddle.reshape(x=Tensor([64, 192, 0, 22],"float16"), shape=list[64,2,96,22,22,], )
paddle.reshape(x=Tensor([64, 192, 0, 22],"float32"), shape=list[64,2,96,22,22,], )
paddle.reshape(x=Tensor([64, 192, 0, 24],"float16"), shape=list[64,2,96,24,24,], )
paddle.reshape(x=Tensor([64, 192, 0, 24],"float32"), shape=list[64,2,96,24,24,], )
paddle.reshape(x=Tensor([64, 192, 0, 8, 8],"float16"), shape=list[64,384,8,8,], )
paddle.reshape(x=Tensor([64, 192, 0, 8, 8],"float32"), shape=list[64,384,8,8,], )
paddle.reshape(x=Tensor([64, 192, 0, 9, 9],"float16"), shape=list[64,384,9,9,], )
paddle.reshape(x=Tensor([64, 192, 0, 9, 9],"float32"), shape=list[64,384,9,9,], )
paddle.reshape(x=Tensor([64, 192, 16, 0],"float16"), shape=list[64,2,96,16,16,], )
paddle.reshape(x=Tensor([64, 192, 16, 0],"float32"), shape=list[64,2,96,16,16,], )
paddle.reshape(x=Tensor([64, 192, 18, 0],"float16"), shape=list[64,2,96,18,18,], )
paddle.reshape(x=Tensor([64, 192, 18, 0],"float32"), shape=list[64,2,96,18,18,], )
paddle.reshape(x=Tensor([64, 192, 2, 0, 10],"float16"), shape=list[64,384,10,10,], )
paddle.reshape(x=Tensor([64, 192, 2, 0, 10],"float32"), shape=list[64,384,10,10,], )
paddle.reshape(x=Tensor([64, 192, 2, 0, 11],"float16"), shape=list[64,384,11,11,], )
paddle.reshape(x=Tensor([64, 192, 2, 0, 11],"float32"), shape=list[64,384,11,11,], )
paddle.reshape(x=Tensor([64, 192, 2, 0, 12],"float16"), shape=list[64,384,12,12,], )
paddle.reshape(x=Tensor([64, 192, 2, 0, 12],"float32"), shape=list[64,384,12,12,], )
paddle.reshape(x=Tensor([64, 192, 2, 0, 8],"float16"), shape=list[64,384,8,8,], )
paddle.reshape(x=Tensor([64, 192, 2, 0, 8],"float32"), shape=list[64,384,8,8,], )
paddle.reshape(x=Tensor([64, 192, 2, 0, 9],"float16"), shape=list[64,384,9,9,], )
paddle.reshape(x=Tensor([64, 192, 2, 0, 9],"float32"), shape=list[64,384,9,9,], )
paddle.reshape(x=Tensor([64, 192, 2, 10, 0],"float16"), shape=list[64,384,10,10,], )
paddle.reshape(x=Tensor([64, 192, 2, 10, 0],"float32"), shape=list[64,384,10,10,], )
paddle.reshape(x=Tensor([64, 192, 2, 11, 0],"float16"), shape=list[64,384,11,11,], )
paddle.reshape(x=Tensor([64, 192, 2, 11, 0],"float32"), shape=list[64,384,11,11,], )
paddle.reshape(x=Tensor([64, 192, 2, 12, 0],"float16"), shape=list[64,384,12,12,], )
paddle.reshape(x=Tensor([64, 192, 2, 12, 0],"float32"), shape=list[64,384,12,12,], )
paddle.reshape(x=Tensor([64, 192, 2, 8, 0],"float16"), shape=list[64,384,8,8,], )
paddle.reshape(x=Tensor([64, 192, 2, 8, 0],"float32"), shape=list[64,384,8,8,], )
paddle.reshape(x=Tensor([64, 192, 2, 9, 0],"float16"), shape=list[64,384,9,9,], )
paddle.reshape(x=Tensor([64, 192, 2, 9, 0],"float32"), shape=list[64,384,9,9,], )
paddle.reshape(x=Tensor([64, 192, 20, 0],"float16"), shape=list[64,2,96,20,20,], )
paddle.reshape(x=Tensor([64, 192, 20, 0],"float32"), shape=list[64,2,96,20,20,], )
paddle.reshape(x=Tensor([64, 192, 22, 0],"float16"), shape=list[64,2,96,22,22,], )
paddle.reshape(x=Tensor([64, 192, 22, 0],"float32"), shape=list[64,2,96,22,22,], )
paddle.reshape(x=Tensor([64, 192, 24, 0],"float16"), shape=list[64,2,96,24,24,], )
paddle.reshape(x=Tensor([64, 192, 24, 0],"float32"), shape=list[64,2,96,24,24,], )
paddle.reshape(x=Tensor([64, 2, 0, 128],"float16"), shape=list[64,256,1,1,], )
paddle.reshape(x=Tensor([64, 2, 0, 128],"float32"), shape=list[64,256,1,1,], )
paddle.reshape(x=Tensor([64, 2, 0, 256],"float16"), shape=list[64,512,1,1,], )
paddle.reshape(x=Tensor([64, 2, 0, 256],"float32"), shape=list[64,512,1,1,], )
paddle.reshape(x=Tensor([64, 2, 0, 512],"float16"), shape=list[64,1024,1,1,], )
paddle.reshape(x=Tensor([64, 2, 0, 512],"float32"), shape=list[64,1024,1,1,], )
paddle.reshape(x=Tensor([64, 2, 0, 64],"float16"), shape=list[64,128,1,1,], )
paddle.reshape(x=Tensor([64, 2, 0, 64],"float32"), shape=list[64,128,1,1,], )
paddle.reshape(x=Tensor([64, 2, 1, 0],"float16"), shape=list[64,1024,1,1,], )
paddle.reshape(x=Tensor([64, 2, 1, 0],"float16"), shape=list[64,128,1,1,], )
paddle.reshape(x=Tensor([64, 2, 1, 0],"float16"), shape=list[64,256,1,1,], )
paddle.reshape(x=Tensor([64, 2, 1, 0],"float16"), shape=list[64,512,1,1,], )
paddle.reshape(x=Tensor([64, 2, 1, 0],"float32"), shape=list[64,1024,1,1,], )
paddle.reshape(x=Tensor([64, 2, 1, 0],"float32"), shape=list[64,128,1,1,], )
paddle.reshape(x=Tensor([64, 2, 1, 0],"float32"), shape=list[64,256,1,1,], )
paddle.reshape(x=Tensor([64, 2, 1, 0],"float32"), shape=list[64,512,1,1,], )
paddle.reshape(x=Tensor([64, 256, 0, 1],"float16"), shape=list[64,1,2,128,], )
paddle.reshape(x=Tensor([64, 256, 0, 1],"float32"), shape=list[64,1,2,128,], )
paddle.reshape(x=Tensor([64, 256, 1, 0],"float16"), shape=list[64,1,2,128,], )
paddle.reshape(x=Tensor([64, 256, 1, 0],"float32"), shape=list[64,1,2,128,], )
paddle.reshape(x=Tensor([64, 384, 0, 10],"float16"), shape=list[64,2,192,10,10,], )
paddle.reshape(x=Tensor([64, 384, 0, 10],"float32"), shape=list[64,2,192,10,10,], )
paddle.reshape(x=Tensor([64, 384, 0, 11],"float16"), shape=list[64,2,192,11,11,], )
paddle.reshape(x=Tensor([64, 384, 0, 11],"float32"), shape=list[64,2,192,11,11,], )
paddle.reshape(x=Tensor([64, 384, 0, 12],"float16"), shape=list[64,2,192,12,12,], )
paddle.reshape(x=Tensor([64, 384, 0, 12],"float32"), shape=list[64,2,192,12,12,], )
paddle.reshape(x=Tensor([64, 384, 0, 8],"float16"), shape=list[64,2,192,8,8,], )
paddle.reshape(x=Tensor([64, 384, 0, 8],"float32"), shape=list[64,2,192,8,8,], )
paddle.reshape(x=Tensor([64, 384, 0, 9],"float16"), shape=list[64,2,192,9,9,], )
paddle.reshape(x=Tensor([64, 384, 0, 9],"float32"), shape=list[64,2,192,9,9,], )
paddle.reshape(x=Tensor([64, 384, 10, 0],"float16"), shape=list[64,2,192,10,10,], )
paddle.reshape(x=Tensor([64, 384, 10, 0],"float32"), shape=list[64,2,192,10,10,], )
paddle.reshape(x=Tensor([64, 384, 11, 0],"float16"), shape=list[64,2,192,11,11,], )
paddle.reshape(x=Tensor([64, 384, 11, 0],"float32"), shape=list[64,2,192,11,11,], )
paddle.reshape(x=Tensor([64, 384, 12, 0],"float16"), shape=list[64,2,192,12,12,], )
paddle.reshape(x=Tensor([64, 384, 12, 0],"float32"), shape=list[64,2,192,12,12,], )
paddle.reshape(x=Tensor([64, 384, 8, 0],"float16"), shape=list[64,2,192,8,8,], )
paddle.reshape(x=Tensor([64, 384, 8, 0],"float32"), shape=list[64,2,192,8,8,], )
paddle.reshape(x=Tensor([64, 384, 9, 0],"float16"), shape=list[64,2,192,9,9,], )
paddle.reshape(x=Tensor([64, 384, 9, 0],"float32"), shape=list[64,2,192,9,9,], )
paddle.reshape(x=Tensor([64, 48, 0, 32, 32],"float16"), shape=list[64,96,32,32,], )
paddle.reshape(x=Tensor([64, 48, 0, 32, 32],"float32"), shape=list[64,96,32,32,], )
paddle.reshape(x=Tensor([64, 48, 0, 36, 36],"float16"), shape=list[64,96,36,36,], )
paddle.reshape(x=Tensor([64, 48, 0, 36, 36],"float32"), shape=list[64,96,36,36,], )
paddle.reshape(x=Tensor([64, 48, 0, 40, 40],"float16"), shape=list[64,96,40,40,], )
paddle.reshape(x=Tensor([64, 48, 0, 40, 40],"float32"), shape=list[64,96,40,40,], )
paddle.reshape(x=Tensor([64, 48, 0, 44, 44],"float16"), shape=list[64,96,44,44,], )
paddle.reshape(x=Tensor([64, 48, 0, 44, 44],"float32"), shape=list[64,96,44,44,], )
paddle.reshape(x=Tensor([64, 48, 0, 48, 48],"float16"), shape=list[64,96,48,48,], )
paddle.reshape(x=Tensor([64, 48, 0, 48, 48],"float32"), shape=list[64,96,48,48,], )
paddle.reshape(x=Tensor([64, 48, 2, 0, 32],"float16"), shape=list[64,96,32,32,], )
paddle.reshape(x=Tensor([64, 48, 2, 0, 32],"float32"), shape=list[64,96,32,32,], )
paddle.reshape(x=Tensor([64, 48, 2, 0, 36],"float16"), shape=list[64,96,36,36,], )
paddle.reshape(x=Tensor([64, 48, 2, 0, 36],"float32"), shape=list[64,96,36,36,], )
paddle.reshape(x=Tensor([64, 48, 2, 0, 40],"float16"), shape=list[64,96,40,40,], )
paddle.reshape(x=Tensor([64, 48, 2, 0, 40],"float32"), shape=list[64,96,40,40,], )
paddle.reshape(x=Tensor([64, 48, 2, 0, 44],"float16"), shape=list[64,96,44,44,], )
paddle.reshape(x=Tensor([64, 48, 2, 0, 44],"float32"), shape=list[64,96,44,44,], )
paddle.reshape(x=Tensor([64, 48, 2, 0, 48],"float16"), shape=list[64,96,48,48,], )
paddle.reshape(x=Tensor([64, 48, 2, 0, 48],"float32"), shape=list[64,96,48,48,], )
paddle.reshape(x=Tensor([64, 48, 2, 32, 0],"float16"), shape=list[64,96,32,32,], )
paddle.reshape(x=Tensor([64, 48, 2, 32, 0],"float32"), shape=list[64,96,32,32,], )
paddle.reshape(x=Tensor([64, 48, 2, 36, 0],"float16"), shape=list[64,96,36,36,], )
paddle.reshape(x=Tensor([64, 48, 2, 36, 0],"float32"), shape=list[64,96,36,36,], )
paddle.reshape(x=Tensor([64, 48, 2, 40, 0],"float16"), shape=list[64,96,40,40,], )
paddle.reshape(x=Tensor([64, 48, 2, 40, 0],"float32"), shape=list[64,96,40,40,], )
paddle.reshape(x=Tensor([64, 48, 2, 44, 0],"float16"), shape=list[64,96,44,44,], )
paddle.reshape(x=Tensor([64, 48, 2, 44, 0],"float32"), shape=list[64,96,44,44,], )
paddle.reshape(x=Tensor([64, 48, 2, 48, 0],"float16"), shape=list[64,96,48,48,], )
paddle.reshape(x=Tensor([64, 48, 2, 48, 0],"float32"), shape=list[64,96,48,48,], )
paddle.reshape(x=Tensor([64, 512, 0, 1],"float16"), shape=list[64,1,2,256,], )
paddle.reshape(x=Tensor([64, 512, 0, 1],"float32"), shape=list[64,1,2,256,], )
paddle.reshape(x=Tensor([64, 512, 1, 0],"float16"), shape=list[64,1,2,256,], )
paddle.reshape(x=Tensor([64, 512, 1, 0],"float32"), shape=list[64,1,2,256,], )
paddle.reshape(x=Tensor([64, 96, 0, 16, 16],"float16"), shape=list[64,192,16,16,], )
paddle.reshape(x=Tensor([64, 96, 0, 16, 16],"float32"), shape=list[64,192,16,16,], )
paddle.reshape(x=Tensor([64, 96, 0, 18, 18],"float16"), shape=list[64,192,18,18,], )
paddle.reshape(x=Tensor([64, 96, 0, 18, 18],"float32"), shape=list[64,192,18,18,], )
paddle.reshape(x=Tensor([64, 96, 0, 20, 20],"float16"), shape=list[64,192,20,20,], )
paddle.reshape(x=Tensor([64, 96, 0, 20, 20],"float32"), shape=list[64,192,20,20,], )
paddle.reshape(x=Tensor([64, 96, 0, 22, 22],"float16"), shape=list[64,192,22,22,], )
paddle.reshape(x=Tensor([64, 96, 0, 22, 22],"float32"), shape=list[64,192,22,22,], )
paddle.reshape(x=Tensor([64, 96, 0, 24, 24],"float16"), shape=list[64,192,24,24,], )
paddle.reshape(x=Tensor([64, 96, 0, 24, 24],"float32"), shape=list[64,192,24,24,], )
paddle.reshape(x=Tensor([64, 96, 0, 32],"float16"), shape=list[64,2,48,32,32,], )
paddle.reshape(x=Tensor([64, 96, 0, 32],"float32"), shape=list[64,2,48,32,32,], )
paddle.reshape(x=Tensor([64, 96, 0, 36],"float16"), shape=list[64,2,48,36,36,], )
paddle.reshape(x=Tensor([64, 96, 0, 36],"float32"), shape=list[64,2,48,36,36,], )
paddle.reshape(x=Tensor([64, 96, 0, 40],"float16"), shape=list[64,2,48,40,40,], )
paddle.reshape(x=Tensor([64, 96, 0, 40],"float32"), shape=list[64,2,48,40,40,], )
paddle.reshape(x=Tensor([64, 96, 0, 44],"float16"), shape=list[64,2,48,44,44,], )
paddle.reshape(x=Tensor([64, 96, 0, 44],"float32"), shape=list[64,2,48,44,44,], )
paddle.reshape(x=Tensor([64, 96, 0, 48],"float16"), shape=list[64,2,48,48,48,], )
paddle.reshape(x=Tensor([64, 96, 0, 48],"float32"), shape=list[64,2,48,48,48,], )
paddle.reshape(x=Tensor([64, 96, 2, 0, 16],"float16"), shape=list[64,192,16,16,], )
paddle.reshape(x=Tensor([64, 96, 2, 0, 16],"float32"), shape=list[64,192,16,16,], )
paddle.reshape(x=Tensor([64, 96, 2, 0, 18],"float16"), shape=list[64,192,18,18,], )
paddle.reshape(x=Tensor([64, 96, 2, 0, 18],"float32"), shape=list[64,192,18,18,], )
paddle.reshape(x=Tensor([64, 96, 2, 0, 20],"float16"), shape=list[64,192,20,20,], )
paddle.reshape(x=Tensor([64, 96, 2, 0, 20],"float32"), shape=list[64,192,20,20,], )
paddle.reshape(x=Tensor([64, 96, 2, 0, 22],"float16"), shape=list[64,192,22,22,], )
paddle.reshape(x=Tensor([64, 96, 2, 0, 22],"float32"), shape=list[64,192,22,22,], )
paddle.reshape(x=Tensor([64, 96, 2, 0, 24],"float16"), shape=list[64,192,24,24,], )
paddle.reshape(x=Tensor([64, 96, 2, 0, 24],"float32"), shape=list[64,192,24,24,], )
paddle.reshape(x=Tensor([64, 96, 2, 16, 0],"float16"), shape=list[64,192,16,16,], )
paddle.reshape(x=Tensor([64, 96, 2, 16, 0],"float32"), shape=list[64,192,16,16,], )
paddle.reshape(x=Tensor([64, 96, 2, 18, 0],"float16"), shape=list[64,192,18,18,], )
paddle.reshape(x=Tensor([64, 96, 2, 18, 0],"float32"), shape=list[64,192,18,18,], )
paddle.reshape(x=Tensor([64, 96, 2, 20, 0],"float16"), shape=list[64,192,20,20,], )
paddle.reshape(x=Tensor([64, 96, 2, 20, 0],"float32"), shape=list[64,192,20,20,], )
paddle.reshape(x=Tensor([64, 96, 2, 22, 0],"float16"), shape=list[64,192,22,22,], )
paddle.reshape(x=Tensor([64, 96, 2, 22, 0],"float32"), shape=list[64,192,22,22,], )
paddle.reshape(x=Tensor([64, 96, 2, 24, 0],"float16"), shape=list[64,192,24,24,], )
paddle.reshape(x=Tensor([64, 96, 2, 24, 0],"float32"), shape=list[64,192,24,24,], )
paddle.reshape(x=Tensor([64, 96, 32, 0],"float16"), shape=list[64,2,48,32,32,], )
paddle.reshape(x=Tensor([64, 96, 32, 0],"float32"), shape=list[64,2,48,32,32,], )
paddle.reshape(x=Tensor([64, 96, 36, 0],"float16"), shape=list[64,2,48,36,36,], )
paddle.reshape(x=Tensor([64, 96, 36, 0],"float32"), shape=list[64,2,48,36,36,], )
paddle.reshape(x=Tensor([64, 96, 40, 0],"float16"), shape=list[64,2,48,40,40,], )
paddle.reshape(x=Tensor([64, 96, 40, 0],"float32"), shape=list[64,2,48,40,40,], )
paddle.reshape(x=Tensor([64, 96, 44, 0],"float16"), shape=list[64,2,48,44,44,], )
paddle.reshape(x=Tensor([64, 96, 44, 0],"float32"), shape=list[64,2,48,44,44,], )
paddle.reshape(x=Tensor([64, 96, 48, 0],"float16"), shape=list[64,2,48,48,48,], )
paddle.reshape(x=Tensor([64, 96, 48, 0],"float32"), shape=list[64,2,48,48,48,], )
paddle.reshape(x=Tensor([8, 0],"float16"), shape=list[-1,], )
paddle.reshape(x=Tensor([8, 0],"float32"), shape=list[-1,], )
paddle.reshape(x=Tensor([8, 0],"float32"), shape=list[80,], )
paddle.roll(Tensor([0, 16, 14, 14, 384],"float16"), shifts=tuple(4,3,3,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([0, 16, 14, 14, 384],"float16"), shifts=tuple(-4,-3,-3,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([0, 16, 14, 14, 384],"float32"), shifts=tuple(4,3,3,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([0, 16, 14, 14, 384],"float32"), shifts=tuple(-4,-3,-3,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([0, 16, 14, 7, 768],"float16"), shifts=tuple(4,3,0,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([0, 16, 14, 7, 768],"float16"), shifts=tuple(-4,-3,0,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([0, 16, 14, 7, 768],"float32"), shifts=tuple(4,3,0,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([0, 16, 14, 7, 768],"float32"), shifts=tuple(-4,-3,0,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([0, 16, 16, 64],"float32"), shifts=tuple(2,2,), axis=tuple(1,2,), )
paddle.roll(Tensor([0, 16, 16, 64],"float32"), shifts=tuple(-2,-2,), axis=tuple(1,2,), )
paddle.roll(Tensor([0, 16, 7, 14, 768],"float16"), shifts=tuple(4,0,3,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([0, 16, 7, 14, 768],"float16"), shifts=tuple(-4,0,-3,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([0, 16, 7, 14, 768],"float32"), shifts=tuple(4,0,3,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([0, 16, 7, 14, 768],"float32"), shifts=tuple(-4,0,-3,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([0, 16, 7, 7, 768],"float16"), shifts=tuple(4,0,0,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([0, 16, 7, 7, 768],"float16"), shifts=tuple(-4,0,0,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([0, 16, 7, 7, 768],"float32"), shifts=tuple(4,0,0,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([0, 16, 7, 7, 768],"float32"), shifts=tuple(-4,0,0,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([0, 161, 126, 96],"float32"), shifts=tuple(3,3,), axis=tuple(1,2,), )
paddle.roll(Tensor([0, 161, 126, 96],"float32"), shifts=tuple(-3,-3,), axis=tuple(1,2,), )
paddle.roll(Tensor([0, 192, 144, 192],"float32"), shifts=tuple(6,6,), axis=tuple(1,2,), )
paddle.roll(Tensor([0, 192, 144, 192],"float32"), shifts=tuple(-6,-6,), axis=tuple(1,2,), )
paddle.roll(Tensor([0, 21, 21, 768],"float32"), shifts=tuple(3,3,), axis=tuple(1,2,), )
paddle.roll(Tensor([0, 21, 21, 768],"float32"), shifts=tuple(-3,-3,), axis=tuple(1,2,), )
paddle.roll(Tensor([0, 24, 24, 1536],"float32"), shifts=tuple(6,6,), axis=tuple(1,2,), )
paddle.roll(Tensor([0, 24, 24, 1536],"float32"), shifts=tuple(-6,-6,), axis=tuple(1,2,), )
paddle.roll(Tensor([0, 3],"float64"), shifts=1, )
paddle.roll(Tensor([0, 3],"float64"), shifts=1, axis=0, )
paddle.roll(Tensor([0, 32, 32, 32],"float32"), shifts=tuple(2,2,), axis=tuple(1,2,), )
paddle.roll(Tensor([0, 32, 32, 32],"float32"), shifts=tuple(-2,-2,), axis=tuple(1,2,), )
paddle.roll(Tensor([0],"float32"), -2, name=None, )
paddle.roll(Tensor([0],"float32"), -5, name=None, )
paddle.roll(Tensor([1, 0, 126, 96],"float32"), shifts=tuple(3,3,), axis=tuple(1,2,), )
paddle.roll(Tensor([1, 0, 126, 96],"float32"), shifts=tuple(-3,-3,), axis=tuple(1,2,), )
paddle.roll(Tensor([1, 0, 14, 14, 384],"float16"), shifts=tuple(4,3,3,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 0, 14, 14, 384],"float16"), shifts=tuple(-4,-3,-3,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 0, 14, 14, 384],"float32"), shifts=tuple(4,3,3,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 0, 14, 14, 384],"float32"), shifts=tuple(-4,-3,-3,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 0, 14, 7, 768],"float16"), shifts=tuple(4,3,0,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 0, 14, 7, 768],"float16"), shifts=tuple(-4,-3,0,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 0, 14, 7, 768],"float32"), shifts=tuple(4,3,0,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 0, 14, 7, 768],"float32"), shifts=tuple(-4,-3,0,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 0, 144, 192],"float32"), shifts=tuple(6,6,), axis=tuple(1,2,), )
paddle.roll(Tensor([1, 0, 144, 192],"float32"), shifts=tuple(-6,-6,), axis=tuple(1,2,), )
paddle.roll(Tensor([1, 0, 21, 768],"float32"), shifts=tuple(3,3,), axis=tuple(1,2,), )
paddle.roll(Tensor([1, 0, 21, 768],"float32"), shifts=tuple(-3,-3,), axis=tuple(1,2,), )
paddle.roll(Tensor([1, 0, 24, 1536],"float32"), shifts=tuple(6,6,), axis=tuple(1,2,), )
paddle.roll(Tensor([1, 0, 24, 1536],"float32"), shifts=tuple(-6,-6,), axis=tuple(1,2,), )
paddle.roll(Tensor([1, 0, 7, 14, 768],"float16"), shifts=tuple(4,0,3,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 0, 7, 14, 768],"float16"), shifts=tuple(-4,0,-3,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 0, 7, 14, 768],"float32"), shifts=tuple(4,0,3,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 0, 7, 14, 768],"float32"), shifts=tuple(-4,0,-3,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 0, 7, 7, 768],"float16"), shifts=tuple(4,0,0,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 0, 7, 7, 768],"float16"), shifts=tuple(-4,0,0,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 0, 7, 7, 768],"float32"), shifts=tuple(4,0,0,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 0, 7, 7, 768],"float32"), shifts=tuple(-4,0,0,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 16, 0, 14, 384],"float16"), shifts=tuple(4,3,3,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 16, 0, 14, 384],"float16"), shifts=tuple(-4,-3,-3,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 16, 0, 14, 384],"float32"), shifts=tuple(4,3,3,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 16, 0, 14, 384],"float32"), shifts=tuple(-4,-3,-3,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 16, 0, 14, 768],"float16"), shifts=tuple(4,0,3,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 16, 0, 14, 768],"float16"), shifts=tuple(-4,0,-3,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 16, 0, 14, 768],"float32"), shifts=tuple(4,0,3,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 16, 0, 14, 768],"float32"), shifts=tuple(-4,0,-3,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 16, 0, 7, 768],"float16"), shifts=tuple(4,0,0,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 16, 0, 7, 768],"float16"), shifts=tuple(-4,0,0,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 16, 0, 7, 768],"float16"), shifts=tuple(4,3,0,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 16, 0, 7, 768],"float16"), shifts=tuple(-4,-3,0,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 16, 0, 7, 768],"float32"), shifts=tuple(4,0,0,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 16, 0, 7, 768],"float32"), shifts=tuple(-4,0,0,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 16, 0, 7, 768],"float32"), shifts=tuple(4,3,0,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 16, 0, 7, 768],"float32"), shifts=tuple(-4,-3,0,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 16, 14, 0, 384],"float16"), shifts=tuple(4,3,3,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 16, 14, 0, 384],"float16"), shifts=tuple(-4,-3,-3,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 16, 14, 0, 384],"float32"), shifts=tuple(4,3,3,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 16, 14, 0, 384],"float32"), shifts=tuple(-4,-3,-3,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 16, 14, 0, 768],"float16"), shifts=tuple(4,3,0,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 16, 14, 0, 768],"float16"), shifts=tuple(-4,-3,0,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 16, 14, 0, 768],"float32"), shifts=tuple(4,3,0,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 16, 14, 0, 768],"float32"), shifts=tuple(-4,-3,0,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 16, 14, 14, 0],"float16"), shifts=tuple(4,3,3,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 16, 14, 14, 0],"float16"), shifts=tuple(-4,-3,-3,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 16, 14, 14, 0],"float32"), shifts=tuple(4,3,3,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 16, 14, 14, 0],"float32"), shifts=tuple(-4,-3,-3,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 16, 14, 7, 0],"float16"), shifts=tuple(4,3,0,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 16, 14, 7, 0],"float16"), shifts=tuple(-4,-3,0,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 16, 14, 7, 0],"float32"), shifts=tuple(4,3,0,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 16, 14, 7, 0],"float32"), shifts=tuple(-4,-3,0,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 16, 7, 0, 768],"float16"), shifts=tuple(4,0,0,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 16, 7, 0, 768],"float16"), shifts=tuple(-4,0,0,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 16, 7, 0, 768],"float16"), shifts=tuple(4,0,3,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 16, 7, 0, 768],"float16"), shifts=tuple(-4,0,-3,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 16, 7, 0, 768],"float32"), shifts=tuple(4,0,0,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 16, 7, 0, 768],"float32"), shifts=tuple(-4,0,0,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 16, 7, 0, 768],"float32"), shifts=tuple(4,0,3,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 16, 7, 0, 768],"float32"), shifts=tuple(-4,0,-3,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 16, 7, 14, 0],"float16"), shifts=tuple(4,0,3,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 16, 7, 14, 0],"float16"), shifts=tuple(-4,0,-3,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 16, 7, 14, 0],"float32"), shifts=tuple(4,0,3,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 16, 7, 14, 0],"float32"), shifts=tuple(-4,0,-3,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 16, 7, 7, 0],"float16"), shifts=tuple(4,0,0,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 16, 7, 7, 0],"float16"), shifts=tuple(-4,0,0,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 16, 7, 7, 0],"float32"), shifts=tuple(4,0,0,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 16, 7, 7, 0],"float32"), shifts=tuple(-4,0,0,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 161, 0, 96],"float32"), shifts=tuple(3,3,), axis=tuple(1,2,), )
paddle.roll(Tensor([1, 161, 0, 96],"float32"), shifts=tuple(-3,-3,), axis=tuple(1,2,), )
paddle.roll(Tensor([1, 161, 126, 0],"float32"), shifts=tuple(3,3,), axis=tuple(1,2,), )
paddle.roll(Tensor([1, 161, 126, 0],"float32"), shifts=tuple(-3,-3,), axis=tuple(1,2,), )
paddle.roll(Tensor([1, 192, 0, 192],"float32"), shifts=tuple(6,6,), axis=tuple(1,2,), )
paddle.roll(Tensor([1, 192, 0, 192],"float32"), shifts=tuple(-6,-6,), axis=tuple(1,2,), )
paddle.roll(Tensor([1, 192, 144, 0],"float32"), shifts=tuple(6,6,), axis=tuple(1,2,), )
paddle.roll(Tensor([1, 192, 144, 0],"float32"), shifts=tuple(-6,-6,), axis=tuple(1,2,), )
paddle.roll(Tensor([1, 21, 0, 768],"float32"), shifts=tuple(3,3,), axis=tuple(1,2,), )
paddle.roll(Tensor([1, 21, 0, 768],"float32"), shifts=tuple(-3,-3,), axis=tuple(1,2,), )
paddle.roll(Tensor([1, 21, 21, 0],"float32"), shifts=tuple(3,3,), axis=tuple(1,2,), )
paddle.roll(Tensor([1, 21, 21, 0],"float32"), shifts=tuple(-3,-3,), axis=tuple(1,2,), )
paddle.roll(Tensor([1, 24, 0, 1536],"float32"), shifts=tuple(6,6,), axis=tuple(1,2,), )
paddle.roll(Tensor([1, 24, 0, 1536],"float32"), shifts=tuple(-6,-6,), axis=tuple(1,2,), )
paddle.roll(Tensor([1, 24, 24, 0],"float32"), shifts=tuple(6,6,), axis=tuple(1,2,), )
paddle.roll(Tensor([1, 24, 24, 0],"float32"), shifts=tuple(-6,-6,), axis=tuple(1,2,), )
paddle.roll(Tensor([12, 0, 16, 64],"float32"), shifts=tuple(2,2,), axis=tuple(1,2,), )
paddle.roll(Tensor([12, 0, 16, 64],"float32"), shifts=tuple(-2,-2,), axis=tuple(1,2,), )
paddle.roll(Tensor([12, 0, 32, 32],"float32"), shifts=tuple(2,2,), axis=tuple(1,2,), )
paddle.roll(Tensor([12, 0, 32, 32],"float32"), shifts=tuple(-2,-2,), axis=tuple(1,2,), )
paddle.roll(Tensor([12, 16, 0, 64],"float32"), shifts=tuple(2,2,), axis=tuple(1,2,), )
paddle.roll(Tensor([12, 16, 0, 64],"float32"), shifts=tuple(-2,-2,), axis=tuple(1,2,), )
paddle.roll(Tensor([12, 16, 16, 0],"float32"), shifts=tuple(2,2,), axis=tuple(1,2,), )
paddle.roll(Tensor([12, 16, 16, 0],"float32"), shifts=tuple(-2,-2,), axis=tuple(1,2,), )
paddle.roll(Tensor([12, 32, 0, 32],"float32"), shifts=tuple(2,2,), axis=tuple(1,2,), )
paddle.roll(Tensor([12, 32, 0, 32],"float32"), shifts=tuple(-2,-2,), axis=tuple(1,2,), )
paddle.roll(Tensor([12, 32, 32, 0],"float32"), shifts=tuple(2,2,), axis=tuple(1,2,), )
paddle.roll(Tensor([12, 32, 32, 0],"float32"), shifts=tuple(-2,-2,), axis=tuple(1,2,), )
paddle.roll(Tensor([3, 0],"float64"), shifts=1, )
paddle.roll(Tensor([3, 0],"float64"), shifts=1, axis=0, )
paddle.roll(x=Tensor([0, 3],"float32"), shifts=0, axis=None, )
paddle.roll(x=Tensor([0, 3],"float64"), shifts=0, axis=None, )
paddle.roll(x=Tensor([0, 3],"float64"), shifts=-1, axis=0, )
paddle.roll(x=Tensor([0, 3],"float64"), shifts=1, axis=None, )
paddle.roll(x=Tensor([0, 3],"float64"), shifts=list[-1,1,], axis=list[0,1,], )
paddle.roll(x=Tensor([0, 3],"float64"), shifts=tuple(-1,1,), axis=tuple(0,1,), )
paddle.roll(x=Tensor([3, 0],"float32"), shifts=0, axis=None, )
paddle.roll(x=Tensor([3, 0],"float64"), shifts=0, axis=None, )
paddle.roll(x=Tensor([3, 0],"float64"), shifts=-1, axis=0, )
paddle.roll(x=Tensor([3, 0],"float64"), shifts=1, axis=None, )
paddle.roll(x=Tensor([3, 0],"float64"), shifts=list[-1,1,], axis=list[0,1,], )
paddle.roll(x=Tensor([3, 0],"float64"), shifts=tuple(-1,1,), axis=tuple(0,1,), )
paddle.rot90(Tensor([0, 3],"float32"), k=1, axes=list[0,1,], )
paddle.rot90(Tensor([2, 0],"float32"), k=1, axes=list[0,1,], )
paddle.rot90(x=Tensor([0, 2],"float64"), k=-4, )
paddle.rot90(x=Tensor([0, 4, 4, 4],"float64"), )
paddle.rot90(x=Tensor([0, 4, 4, 4],"float64"), k=-1, axes=list[1,2,], )
paddle.rot90(x=Tensor([0, 4, 4, 4],"float64"), k=-1, axes=tuple(2,3,), )
paddle.rot90(x=Tensor([0, 4, 4],"float64"), )
paddle.rot90(x=Tensor([0, 4],"float32"), )
paddle.rot90(x=Tensor([0, 4],"float64"), )
paddle.rot90(x=Tensor([0, 4],"float64"), k=-1, )
paddle.rot90(x=Tensor([0, 4],"float64"), k=4, )
paddle.rot90(x=Tensor([2, 0],"float64"), k=-4, )
paddle.rot90(x=Tensor([3, 0],"float64"), )
paddle.rot90(x=Tensor([4, 0, 4, 4],"float64"), )
paddle.rot90(x=Tensor([4, 0, 4, 4],"float64"), k=-1, axes=list[1,2,], )
paddle.rot90(x=Tensor([4, 0, 4, 4],"float64"), k=-1, axes=tuple(2,3,), )
paddle.rot90(x=Tensor([4, 0, 4],"float64"), )
paddle.rot90(x=Tensor([4, 0],"float32"), )
paddle.rot90(x=Tensor([4, 0],"float64"), k=-1, )
paddle.rot90(x=Tensor([4, 0],"float64"), k=4, )
paddle.rot90(x=Tensor([4, 4, 0, 4],"float64"), )
paddle.rot90(x=Tensor([4, 4, 0, 4],"float64"), k=-1, axes=list[1,2,], )
paddle.rot90(x=Tensor([4, 4, 0, 4],"float64"), k=-1, axes=tuple(2,3,), )
paddle.rot90(x=Tensor([4, 4, 0],"float64"), )
paddle.rot90(x=Tensor([4, 4, 4, 0],"float64"), )
paddle.rot90(x=Tensor([4, 4, 4, 0],"float64"), k=-1, axes=list[1,2,], )
paddle.rot90(x=Tensor([4, 4, 4, 0],"float64"), k=-1, axes=tuple(2,3,), )
paddle.row_stack(list[Tensor([0, 1, 1, 1],"float64"),], )
paddle.row_stack(list[Tensor([0, 1, 1, 1],"float64"),Tensor([0, 1, 1, 1],"float64"),Tensor([0, 1, 1, 1],"float64"),], )
paddle.row_stack(list[Tensor([0, 1, 1, 1],"float64"),Tensor([1, 1, 1, 1],"float64"),Tensor([1, 1, 1, 1],"float64"),], )
paddle.row_stack(list[Tensor([0, 1, 1],"float64"),], )
paddle.row_stack(list[Tensor([0, 1, 1],"float64"),Tensor([0, 1, 1],"float64"),Tensor([0, 1, 1],"float64"),], )
paddle.row_stack(list[Tensor([0, 1, 1],"float64"),Tensor([1, 1, 1],"float64"),Tensor([1, 1, 1],"float64"),], )
paddle.row_stack(list[Tensor([0, 1],"float64"),], )
paddle.row_stack(list[Tensor([0, 1],"float64"),Tensor([0, 1],"float64"),Tensor([0, 1],"float64"),], )
paddle.row_stack(list[Tensor([0, 1],"float64"),Tensor([1, 1],"float64"),Tensor([1, 1],"float64"),], )
paddle.row_stack(list[Tensor([0, 2],"float64"),], )
paddle.row_stack(list[Tensor([0, 2],"float64"),Tensor([0, 2],"float64"),Tensor([0, 2],"float64"),], )
paddle.row_stack(list[Tensor([0, 2],"float64"),Tensor([3, 2],"float64"),Tensor([3, 2],"float64"),], )
paddle.row_stack(list[Tensor([0, 4, 2, 5],"float64"),], )
paddle.row_stack(list[Tensor([0, 4, 2, 5],"float64"),Tensor([0, 4, 2, 5],"float64"),Tensor([0, 4, 2, 5],"float64"),], )
paddle.row_stack(list[Tensor([0, 4, 2, 5],"float64"),Tensor([3, 4, 2, 5],"float64"),Tensor([3, 4, 2, 5],"float64"),], )
paddle.row_stack(list[Tensor([0, 4, 2],"float64"),], )
paddle.row_stack(list[Tensor([0, 4, 2],"float64"),Tensor([0, 4, 2],"float64"),Tensor([0, 4, 2],"float64"),], )
paddle.row_stack(list[Tensor([0, 4, 2],"float64"),Tensor([3, 4, 2],"float64"),Tensor([3, 4, 2],"float64"),], )
paddle.row_stack(list[Tensor([0],"float64"),], )
paddle.row_stack(list[Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),], )
paddle.row_stack(list[Tensor([0],"float64"),Tensor([1, 2],"float64"),], )
paddle.row_stack(list[Tensor([0],"float64"),Tensor([1],"float64"),Tensor([1],"float64"),], )
paddle.row_stack(list[Tensor([0],"float64"),Tensor([5],"float64"),Tensor([5],"float64"),], )
paddle.row_stack(list[Tensor([1, 0, 1, 1],"float64"),], )
paddle.row_stack(list[Tensor([1, 0, 1, 1],"float64"),Tensor([1, 0, 1, 1],"float64"),Tensor([1, 0, 1, 1],"float64"),], )
paddle.row_stack(list[Tensor([1, 0, 1, 1],"float64"),Tensor([1, 1, 1, 1],"float64"),Tensor([1, 1, 1, 1],"float64"),], )
paddle.row_stack(list[Tensor([1, 0, 1],"float64"),], )
paddle.row_stack(list[Tensor([1, 0, 1],"float64"),Tensor([1, 0, 1],"float64"),Tensor([1, 0, 1],"float64"),], )
paddle.row_stack(list[Tensor([1, 0, 1],"float64"),Tensor([1, 1, 1],"float64"),Tensor([1, 1, 1],"float64"),], )
paddle.row_stack(list[Tensor([1, 0],"float64"),], )
paddle.row_stack(list[Tensor([1, 0],"float64"),Tensor([1, 0],"float64"),Tensor([1, 0],"float64"),], )
paddle.row_stack(list[Tensor([1, 0],"float64"),Tensor([1, 1],"float64"),Tensor([1, 1],"float64"),], )
paddle.row_stack(list[Tensor([1, 1, 0, 1],"float64"),], )
paddle.row_stack(list[Tensor([1, 1, 0, 1],"float64"),Tensor([1, 1, 0, 1],"float64"),Tensor([1, 1, 0, 1],"float64"),], )
paddle.row_stack(list[Tensor([1, 1, 0, 1],"float64"),Tensor([1, 1, 1, 1],"float64"),Tensor([1, 1, 1, 1],"float64"),], )
paddle.row_stack(list[Tensor([1, 1, 0],"float64"),], )
paddle.row_stack(list[Tensor([1, 1, 0],"float64"),Tensor([1, 1, 0],"float64"),Tensor([1, 1, 0],"float64"),], )
paddle.row_stack(list[Tensor([1, 1, 0],"float64"),Tensor([1, 1, 1],"float64"),Tensor([1, 1, 1],"float64"),], )
paddle.row_stack(list[Tensor([1, 1, 1, 0],"float64"),], )
paddle.row_stack(list[Tensor([1, 1, 1, 0],"float64"),Tensor([1, 1, 1, 0],"float64"),Tensor([1, 1, 1, 0],"float64"),], )
paddle.row_stack(list[Tensor([1, 1, 1, 0],"float64"),Tensor([1, 1, 1, 1],"float64"),Tensor([1, 1, 1, 1],"float64"),], )
paddle.row_stack(list[Tensor([1, 1, 1, 1],"float64"),Tensor([0, 1, 1, 1],"float64"),Tensor([1, 1, 1, 1],"float64"),], )
paddle.row_stack(list[Tensor([1, 1, 1, 1],"float64"),Tensor([1, 0, 1, 1],"float64"),Tensor([1, 1, 1, 1],"float64"),], )
paddle.row_stack(list[Tensor([1, 1, 1, 1],"float64"),Tensor([1, 1, 0, 1],"float64"),Tensor([1, 1, 1, 1],"float64"),], )
paddle.row_stack(list[Tensor([1, 1, 1, 1],"float64"),Tensor([1, 1, 1, 0],"float64"),Tensor([1, 1, 1, 1],"float64"),], )
paddle.row_stack(list[Tensor([1, 1, 1, 1],"float64"),Tensor([1, 1, 1, 1],"float64"),Tensor([0, 1, 1, 1],"float64"),], )
paddle.row_stack(list[Tensor([1, 1, 1, 1],"float64"),Tensor([1, 1, 1, 1],"float64"),Tensor([1, 0, 1, 1],"float64"),], )
paddle.row_stack(list[Tensor([1, 1, 1, 1],"float64"),Tensor([1, 1, 1, 1],"float64"),Tensor([1, 1, 0, 1],"float64"),], )
paddle.row_stack(list[Tensor([1, 1, 1, 1],"float64"),Tensor([1, 1, 1, 1],"float64"),Tensor([1, 1, 1, 0],"float64"),], )
paddle.row_stack(list[Tensor([1, 1, 1],"float64"),Tensor([0, 1, 1],"float64"),Tensor([1, 1, 1],"float64"),], )
paddle.row_stack(list[Tensor([1, 1, 1],"float64"),Tensor([1, 0, 1],"float64"),Tensor([1, 1, 1],"float64"),], )
paddle.row_stack(list[Tensor([1, 1, 1],"float64"),Tensor([1, 1, 0],"float64"),Tensor([1, 1, 1],"float64"),], )
paddle.row_stack(list[Tensor([1, 1, 1],"float64"),Tensor([1, 1, 1],"float64"),Tensor([0, 1, 1],"float64"),], )
paddle.row_stack(list[Tensor([1, 1, 1],"float64"),Tensor([1, 1, 1],"float64"),Tensor([1, 0, 1],"float64"),], )
paddle.row_stack(list[Tensor([1, 1, 1],"float64"),Tensor([1, 1, 1],"float64"),Tensor([1, 1, 0],"float64"),], )
paddle.row_stack(list[Tensor([1, 1],"float64"),Tensor([0, 1],"float64"),Tensor([1, 1],"float64"),], )
paddle.row_stack(list[Tensor([1, 1],"float64"),Tensor([1, 0],"float64"),Tensor([1, 1],"float64"),], )
paddle.row_stack(list[Tensor([1, 1],"float64"),Tensor([1, 1],"float64"),Tensor([0, 1],"float64"),], )
paddle.row_stack(list[Tensor([1, 1],"float64"),Tensor([1, 1],"float64"),Tensor([1, 0],"float64"),], )
paddle.row_stack(list[Tensor([1],"float64"),Tensor([0],"float64"),Tensor([1],"float64"),], )
paddle.row_stack(list[Tensor([1],"float64"),Tensor([1],"float64"),Tensor([0],"float64"),], )
paddle.row_stack(list[Tensor([2],"float64"),Tensor([0, 2],"float64"),], )
paddle.row_stack(list[Tensor([2],"float64"),Tensor([1, 0],"float64"),], )
paddle.row_stack(list[Tensor([3, 0, 2, 5],"float64"),], )
paddle.row_stack(list[Tensor([3, 0, 2, 5],"float64"),Tensor([3, 0, 2, 5],"float64"),Tensor([3, 0, 2, 5],"float64"),], )
paddle.row_stack(list[Tensor([3, 0, 2, 5],"float64"),Tensor([3, 4, 2, 5],"float64"),Tensor([3, 4, 2, 5],"float64"),], )
paddle.row_stack(list[Tensor([3, 0, 2],"float64"),], )
paddle.row_stack(list[Tensor([3, 0, 2],"float64"),Tensor([3, 0, 2],"float64"),Tensor([3, 0, 2],"float64"),], )
paddle.row_stack(list[Tensor([3, 0, 2],"float64"),Tensor([3, 4, 2],"float64"),Tensor([3, 4, 2],"float64"),], )
paddle.row_stack(list[Tensor([3, 0],"float64"),], )
paddle.row_stack(list[Tensor([3, 0],"float64"),Tensor([3, 0],"float64"),Tensor([3, 0],"float64"),], )
paddle.row_stack(list[Tensor([3, 0],"float64"),Tensor([3, 2],"float64"),Tensor([3, 2],"float64"),], )
paddle.row_stack(list[Tensor([3, 2],"float64"),Tensor([0, 2],"float64"),Tensor([3, 2],"float64"),], )
paddle.row_stack(list[Tensor([3, 2],"float64"),Tensor([3, 0],"float64"),Tensor([3, 2],"float64"),], )
paddle.row_stack(list[Tensor([3, 2],"float64"),Tensor([3, 2],"float64"),Tensor([0, 2],"float64"),], )
paddle.row_stack(list[Tensor([3, 2],"float64"),Tensor([3, 2],"float64"),Tensor([3, 0],"float64"),], )
paddle.row_stack(list[Tensor([3, 4, 0, 5],"float64"),], )
paddle.row_stack(list[Tensor([3, 4, 0, 5],"float64"),Tensor([3, 4, 0, 5],"float64"),Tensor([3, 4, 0, 5],"float64"),], )
paddle.row_stack(list[Tensor([3, 4, 0, 5],"float64"),Tensor([3, 4, 2, 5],"float64"),Tensor([3, 4, 2, 5],"float64"),], )
paddle.row_stack(list[Tensor([3, 4, 0],"float64"),], )
paddle.row_stack(list[Tensor([3, 4, 0],"float64"),Tensor([3, 4, 0],"float64"),Tensor([3, 4, 0],"float64"),], )
paddle.row_stack(list[Tensor([3, 4, 0],"float64"),Tensor([3, 4, 2],"float64"),Tensor([3, 4, 2],"float64"),], )
paddle.row_stack(list[Tensor([3, 4, 2, 0],"float64"),], )
paddle.row_stack(list[Tensor([3, 4, 2, 0],"float64"),Tensor([3, 4, 2, 0],"float64"),Tensor([3, 4, 2, 0],"float64"),], )
paddle.row_stack(list[Tensor([3, 4, 2, 0],"float64"),Tensor([3, 4, 2, 5],"float64"),Tensor([3, 4, 2, 5],"float64"),], )
paddle.row_stack(list[Tensor([3, 4, 2, 5],"float64"),Tensor([0, 4, 2, 5],"float64"),Tensor([3, 4, 2, 5],"float64"),], )
paddle.row_stack(list[Tensor([3, 4, 2, 5],"float64"),Tensor([3, 0, 2, 5],"float64"),Tensor([3, 4, 2, 5],"float64"),], )
paddle.row_stack(list[Tensor([3, 4, 2, 5],"float64"),Tensor([3, 4, 0, 5],"float64"),Tensor([3, 4, 2, 5],"float64"),], )
paddle.row_stack(list[Tensor([3, 4, 2, 5],"float64"),Tensor([3, 4, 2, 0],"float64"),Tensor([3, 4, 2, 5],"float64"),], )
paddle.row_stack(list[Tensor([3, 4, 2, 5],"float64"),Tensor([3, 4, 2, 5],"float64"),Tensor([0, 4, 2, 5],"float64"),], )
paddle.row_stack(list[Tensor([3, 4, 2, 5],"float64"),Tensor([3, 4, 2, 5],"float64"),Tensor([3, 0, 2, 5],"float64"),], )
paddle.row_stack(list[Tensor([3, 4, 2, 5],"float64"),Tensor([3, 4, 2, 5],"float64"),Tensor([3, 4, 0, 5],"float64"),], )
paddle.row_stack(list[Tensor([3, 4, 2, 5],"float64"),Tensor([3, 4, 2, 5],"float64"),Tensor([3, 4, 2, 0],"float64"),], )
paddle.row_stack(list[Tensor([3, 4, 2],"float64"),Tensor([0, 4, 2],"float64"),Tensor([3, 4, 2],"float64"),], )
paddle.row_stack(list[Tensor([3, 4, 2],"float64"),Tensor([3, 0, 2],"float64"),Tensor([3, 4, 2],"float64"),], )
paddle.row_stack(list[Tensor([3, 4, 2],"float64"),Tensor([3, 4, 0],"float64"),Tensor([3, 4, 2],"float64"),], )
paddle.row_stack(list[Tensor([3, 4, 2],"float64"),Tensor([3, 4, 2],"float64"),Tensor([0, 4, 2],"float64"),], )
paddle.row_stack(list[Tensor([3, 4, 2],"float64"),Tensor([3, 4, 2],"float64"),Tensor([3, 0, 2],"float64"),], )
paddle.row_stack(list[Tensor([3, 4, 2],"float64"),Tensor([3, 4, 2],"float64"),Tensor([3, 4, 0],"float64"),], )
paddle.row_stack(list[Tensor([5],"float64"),Tensor([0],"float64"),Tensor([5],"float64"),], )
paddle.row_stack(list[Tensor([5],"float64"),Tensor([5],"float64"),Tensor([0],"float64"),], )
paddle.rsqrt(Tensor([0, 1, 1],"float32"), )
paddle.rsqrt(Tensor([0, 1, 4096],"float32"), )
paddle.rsqrt(Tensor([0, 1],"float32"), )
paddle.rsqrt(Tensor([0, 128],"float32"), )
paddle.rsqrt(Tensor([0, 2, 16, 4, 1],"float32"), )
paddle.rsqrt(Tensor([0],"float32"), )
paddle.rsqrt(Tensor([1, 0, 1],"float32"), )
paddle.rsqrt(Tensor([1, 0, 4096],"float32"), )
paddle.rsqrt(Tensor([1, 0],"float32"), )
paddle.rsqrt(Tensor([1, 1, 0],"float32"), )
paddle.rsqrt(Tensor([13, 0, 16, 4, 1],"float32"), )
paddle.rsqrt(Tensor([13, 2, 0, 4, 1],"float32"), )
paddle.rsqrt(Tensor([13, 2, 16, 0, 1],"float32"), )
paddle.rsqrt(Tensor([13, 2, 16, 4, 0],"float32"), )
paddle.rsqrt(x=Tensor([0, 3, 2],"float32"), )
paddle.rsqrt(x=Tensor([0, 3, 2],"float64"), )
paddle.rsqrt(x=Tensor([2, 0, 2],"float32"), )
paddle.rsqrt(x=Tensor([2, 0, 2],"float64"), )
paddle.rsqrt(x=Tensor([2, 3, 0],"float32"), )
paddle.rsqrt(x=Tensor([2, 3, 0],"float64"), )
paddle.select_scatter(Tensor([0, 3, 4, 5, 6],"int32"), Tensor([2, 3, 5, 6],"int32"), 2, 1, )
paddle.select_scatter(Tensor([0, 3, 4, 5],"float64"), Tensor([2, 3, 5],"float64"), 2, 1, )
paddle.select_scatter(Tensor([0, 3, 4],"float32"), Tensor([2, 4],"float32"), 1, 1, )
paddle.select_scatter(Tensor([2, 0, 4, 5, 6],"int32"), Tensor([2, 3, 5, 6],"int32"), 2, 1, )
paddle.select_scatter(Tensor([2, 0, 4, 5],"float64"), Tensor([2, 3, 5],"float64"), 2, 1, )
paddle.select_scatter(Tensor([2, 0, 4],"float32"), Tensor([2, 4],"float32"), 1, 1, )
paddle.select_scatter(Tensor([2, 3, 0, 5, 6],"int32"), Tensor([2, 3, 5, 6],"int32"), 2, 1, )
paddle.select_scatter(Tensor([2, 3, 0, 5],"float64"), Tensor([2, 3, 5],"float64"), 2, 1, )
paddle.select_scatter(Tensor([2, 3, 0],"float32"), Tensor([2, 4],"float32"), 1, 1, )
paddle.select_scatter(Tensor([2, 3, 4, 0, 6],"int32"), Tensor([2, 3, 5, 6],"int32"), 2, 1, )
paddle.select_scatter(Tensor([2, 3, 4, 0],"float64"), Tensor([2, 3, 5],"float64"), 2, 1, )
paddle.select_scatter(Tensor([2, 3, 4, 5, 0],"int32"), Tensor([2, 3, 5, 6],"int32"), 2, 1, )
paddle.select_scatter(Tensor([2, 3, 4, 5, 6],"int32"), Tensor([0, 3, 5, 6],"int32"), 2, 1, )
paddle.select_scatter(Tensor([2, 3, 4, 5, 6],"int32"), Tensor([2, 0, 5, 6],"int32"), 2, 1, )
paddle.select_scatter(Tensor([2, 3, 4, 5, 6],"int32"), Tensor([2, 3, 0, 6],"int32"), 2, 1, )
paddle.select_scatter(Tensor([2, 3, 4, 5, 6],"int32"), Tensor([2, 3, 5, 0],"int32"), 2, 1, )
paddle.select_scatter(Tensor([2, 3, 4, 5],"float64"), Tensor([0, 3, 5],"float64"), 2, 1, )
paddle.select_scatter(Tensor([2, 3, 4, 5],"float64"), Tensor([2, 0, 5],"float64"), 2, 1, )
paddle.select_scatter(Tensor([2, 3, 4, 5],"float64"), Tensor([2, 3, 0],"float64"), 2, 1, )
paddle.select_scatter(Tensor([2, 3, 4],"float32"), Tensor([0, 4],"float32"), 1, 1, )
paddle.select_scatter(Tensor([2, 3, 4],"float32"), Tensor([2, 0],"float32"), 1, 1, )
paddle.sgn(Tensor([0, 20, 2],"float16"), )
paddle.sgn(Tensor([0, 20, 2],"float32"), )
paddle.sgn(Tensor([0, 4],"complex128"), )
paddle.sgn(Tensor([0, 4],"complex64"), )
paddle.sgn(Tensor([12, 0, 2],"float16"), )
paddle.sgn(Tensor([12, 0, 2],"float32"), )
paddle.sgn(Tensor([12, 20, 0],"float16"), )
paddle.sgn(Tensor([12, 20, 0],"float32"), )
paddle.sgn(Tensor([2, 0],"complex128"), )
paddle.sgn(Tensor([2, 0],"complex64"), )
paddle.sign(Tensor([0, 17, 10],"int16"), )
paddle.sign(Tensor([0, 17, 10],"int32"), )
paddle.sign(Tensor([0, 17, 5, 6, 7],"float16"), )
paddle.sign(Tensor([0, 17],"float32"), )
paddle.sign(Tensor([0, 3, 4, 5],"float64"), )
paddle.sign(Tensor([0, 3, 4, 5],"int8"), )
paddle.sign(Tensor([0, 6],"float32"), )
paddle.sign(Tensor([0],"int64"), )
paddle.sign(Tensor([0],"uint8"), )
paddle.sign(Tensor([11, 0, 10],"int16"), )
paddle.sign(Tensor([11, 0, 10],"int32"), )
paddle.sign(Tensor([11, 0],"float32"), )
paddle.sign(Tensor([11, 17, 0],"int16"), )
paddle.sign(Tensor([11, 17, 0],"int32"), )
paddle.sign(Tensor([2, 0, 4, 5],"float64"), )
paddle.sign(Tensor([2, 0, 4, 5],"int8"), )
paddle.sign(Tensor([2, 3, 0, 5],"float64"), )
paddle.sign(Tensor([2, 3, 0, 5],"int8"), )
paddle.sign(Tensor([2, 3, 4, 0],"float64"), )
paddle.sign(Tensor([2, 3, 4, 0],"int8"), )
paddle.sign(Tensor([8, 0, 5, 6, 7],"float16"), )
paddle.sign(Tensor([8, 17, 0, 6, 7],"float16"), )
paddle.sign(Tensor([8, 17, 5, 0, 7],"float16"), )
paddle.sign(Tensor([8, 17, 5, 6, 0],"float16"), )
paddle.sign(Tensor([9, 0],"float32"), )
paddle.sign(x=Tensor([0],"float32"), )
paddle.sign(x=Tensor([0],"float64"), )
paddle.signal.istft(Tensor([0, 257, 471],"complex128"), 512, 99, 299, Tensor([299],"float64"), True, False, True, None, False, )
paddle.signal.istft(Tensor([0, 257, 471],"complex128"), 512, 99, None, Tensor([512],"float64"), True, False, True, None, False, )
paddle.signal.istft(Tensor([0, 257, 471],"complex128"), 512, None, None, None, False, False, True, 1888, False, )
paddle.signal.istft(Tensor([0, 257, 471],"complex128"), 512, None, None, None, False, False, True, None, False, )
paddle.signal.istft(Tensor([0, 257, 471],"complex128"), 512, None, None, None, True, False, True, None, False, )
paddle.signal.istft(Tensor([0, 257, 471],"complex128"), 512, None, None, Tensor([512],"float64"), True, False, True, None, False, )
paddle.signal.istft(Tensor([1, 0, 471],"complex128"), 512, 99, 299, Tensor([299],"float64"), True, False, True, None, False, )
paddle.signal.istft(Tensor([1, 0, 471],"complex128"), 512, 99, None, Tensor([512],"float64"), True, False, True, None, False, )
paddle.signal.istft(Tensor([1, 0, 471],"complex128"), 512, None, None, None, False, False, True, 1888, False, )
paddle.signal.istft(Tensor([1, 0, 471],"complex128"), 512, None, None, None, False, False, True, None, False, )
paddle.signal.istft(Tensor([1, 0, 471],"complex128"), 512, None, None, None, True, False, True, None, False, )
paddle.signal.istft(Tensor([1, 0, 471],"complex128"), 512, None, None, Tensor([512],"float64"), True, False, True, None, False, )
paddle.signal.istft(Tensor([1, 257, 0],"complex128"), 512, 99, 299, Tensor([299],"float64"), True, False, True, None, False, )
paddle.signal.istft(Tensor([1, 257, 0],"complex128"), 512, 99, None, Tensor([512],"float64"), True, False, True, None, False, )
paddle.signal.istft(Tensor([1, 257, 0],"complex128"), 512, None, None, None, False, False, True, 1888, False, )
paddle.signal.istft(Tensor([1, 257, 0],"complex128"), 512, None, None, None, False, False, True, None, False, )
paddle.signal.istft(Tensor([1, 257, 0],"complex128"), 512, None, None, None, True, False, True, None, False, )
paddle.signal.istft(Tensor([1, 257, 0],"complex128"), 512, None, None, Tensor([512],"float64"), True, False, True, None, False, )
paddle.signal.istft(Tensor([1, 257, 471],"complex128"), 512, 99, 299, Tensor([0],"float64"), True, False, True, None, False, )
paddle.signal.istft(Tensor([1, 257, 471],"complex128"), 512, 99, None, Tensor([0],"float64"), True, False, True, None, False, )
paddle.signal.istft(Tensor([1, 257, 471],"complex128"), 512, None, None, Tensor([0],"float64"), True, False, True, None, False, )
paddle.signbit(Tensor([0, 17, 10],"int16"), )
paddle.signbit(Tensor([0, 17, 10],"int32"), )
paddle.signbit(Tensor([0, 17, 5, 6, 7],"float16"), )
paddle.signbit(Tensor([0, 17],"float32"), )
paddle.signbit(Tensor([0, 3, 4, 5],"float64"), )
paddle.signbit(Tensor([0, 3, 4, 5],"int8"), )
paddle.signbit(Tensor([0],"int64"), )
paddle.signbit(Tensor([0],"uint8"), )
paddle.signbit(Tensor([11, 0, 10],"int16"), )
paddle.signbit(Tensor([11, 0, 10],"int32"), )
paddle.signbit(Tensor([11, 0],"float32"), )
paddle.signbit(Tensor([11, 17, 0],"int16"), )
paddle.signbit(Tensor([11, 17, 0],"int32"), )
paddle.signbit(Tensor([2, 0, 4, 5],"float64"), )
paddle.signbit(Tensor([2, 0, 4, 5],"int8"), )
paddle.signbit(Tensor([2, 3, 0, 5],"float64"), )
paddle.signbit(Tensor([2, 3, 0, 5],"int8"), )
paddle.signbit(Tensor([2, 3, 4, 0],"float64"), )
paddle.signbit(Tensor([2, 3, 4, 0],"int8"), )
paddle.signbit(Tensor([8, 0, 5, 6, 7],"float16"), )
paddle.signbit(Tensor([8, 17, 0, 6, 7],"float16"), )
paddle.signbit(Tensor([8, 17, 5, 0, 7],"float16"), )
paddle.signbit(Tensor([8, 17, 5, 6, 0],"float16"), )
paddle.sin(Tensor([0, 10],"float32"), )
paddle.sin(Tensor([0, 128, 1, 32],"float32"), )
paddle.sin(Tensor([0, 2],"float32"), )
paddle.sin(Tensor([0, 20, 1],"float32"), )
paddle.sin(Tensor([0, 25, 1],"float32"), )
paddle.sin(Tensor([0, 4096, 1, 128],"float32"), )
paddle.sin(Tensor([0],"float32"), )
paddle.sin(Tensor([0],"float64"), )
paddle.sin(Tensor([1, 0, 1, 128],"float32"), )
paddle.sin(Tensor([1, 0, 1, 32],"float32"), )
paddle.sin(Tensor([1, 0, 1],"float32"), )
paddle.sin(Tensor([1, 0],"float32"), )
paddle.sin(Tensor([1, 128, 0, 32],"float32"), )
paddle.sin(Tensor([1, 128, 1, 0],"float32"), )
paddle.sin(Tensor([1, 25, 0],"float32"), )
paddle.sin(Tensor([1, 4096, 0, 128],"float32"), )
paddle.sin(Tensor([1, 4096, 1, 0],"float32"), )
paddle.sin(Tensor([10, 0, 1],"float32"), )
paddle.sin(Tensor([10, 0],"float32"), )
paddle.sin(Tensor([10, 20, 0],"float32"), )
paddle.sin(x=Tensor([0, 2, 3],"float64"), )
paddle.sin(x=Tensor([0, 2, 3],"float64"), name="test_sin", )
paddle.sin(x=Tensor([0],"float32"), )
paddle.sin(x=Tensor([0],"float64"), )
paddle.sin(x=Tensor([2, 0, 3],"float64"), )
paddle.sin(x=Tensor([2, 0, 3],"float64"), name="test_sin", )
paddle.sin(x=Tensor([2, 2, 0],"float64"), )
paddle.sin(x=Tensor([2, 2, 0],"float64"), name="test_sin", )
paddle.sinc(Tensor([0, 64],"float32"), )
paddle.sinc(Tensor([0, 64],"float64"), )
paddle.sinc(Tensor([0],"float32"), )
paddle.sinc(Tensor([0],"float64"), )
paddle.sinc(Tensor([16, 0],"float32"), )
paddle.sinc(Tensor([16, 0],"float64"), )
paddle.sinh(Tensor([0, 16, 32],"complex128"), )
paddle.sinh(Tensor([0, 20, 1],"float32"), )
paddle.sinh(Tensor([10, 0, 1],"float32"), )
paddle.sinh(Tensor([10, 20, 0],"float32"), )
paddle.sinh(Tensor([8, 0, 32],"complex128"), )
paddle.sinh(Tensor([8, 16, 0],"complex128"), )
paddle.sinh(x=Tensor([0, 2],"float32"), )
paddle.sinh(x=Tensor([0, 2],"float64"), )
paddle.sinh(x=Tensor([0, 3, 2, 2],"float64"), )
paddle.sinh(x=Tensor([0],"float64"), )
paddle.sinh(x=Tensor([1, 0],"float32"), )
paddle.sinh(x=Tensor([1, 0],"float64"), )
paddle.sinh(x=Tensor([2, 0, 2, 2],"float64"), )
paddle.sinh(x=Tensor([2, 3, 0, 2],"float64"), )
paddle.sinh(x=Tensor([2, 3, 2, 0],"float64"), )
paddle.sqrt(Tensor([0, 1, 1],"float32"), )
paddle.sqrt(Tensor([0, 1, 14, 14],"float32"), )
paddle.sqrt(Tensor([0, 1, 24, 24],"float32"), )
paddle.sqrt(Tensor([0, 1, 3],"float64"), )
paddle.sqrt(Tensor([0, 1, 512, 4, 4],"float32"), )
paddle.sqrt(Tensor([0, 1],"float32"), )
paddle.sqrt(Tensor([0, 10],"float64"), )
paddle.sqrt(Tensor([0, 15, 3, 256, 256],"float32"), )
paddle.sqrt(Tensor([0],"float32"), )
paddle.sqrt(Tensor([0],"float64"), )
paddle.sqrt(Tensor([1, 0, 1],"float32"), )
paddle.sqrt(Tensor([1, 0, 3],"float64"), )
paddle.sqrt(Tensor([1, 0],"float32"), )
paddle.sqrt(Tensor([1, 0],"float64"), )
paddle.sqrt(Tensor([1, 1, 0],"float32"), )
paddle.sqrt(Tensor([1, 1, 0],"float64"), )
paddle.sqrt(Tensor([124, 0, 14, 14],"float32"), )
paddle.sqrt(Tensor([124, 0, 24, 24],"float32"), )
paddle.sqrt(Tensor([124, 1, 0, 14],"float32"), )
paddle.sqrt(Tensor([124, 1, 0, 24],"float32"), )
paddle.sqrt(Tensor([124, 1, 14, 0],"float32"), )
paddle.sqrt(Tensor([124, 1, 24, 0],"float32"), )
paddle.sqrt(Tensor([2, 0, 512, 4, 4],"float32"), )
paddle.sqrt(Tensor([2, 1, 0, 4, 4],"float32"), )
paddle.sqrt(Tensor([2, 1, 512, 0, 4],"float32"), )
paddle.sqrt(Tensor([2, 1, 512, 4, 0],"float32"), )
paddle.sqrt(Tensor([4, 0, 3, 256, 256],"float32"), )
paddle.sqrt(Tensor([4, 15, 0, 256, 256],"float32"), )
paddle.sqrt(Tensor([4, 15, 3, 0, 256],"float32"), )
paddle.sqrt(Tensor([4, 15, 3, 256, 0],"float32"), )
paddle.sqrt(x=Tensor([0, 1, 1],"float32"), )
paddle.sqrt(x=Tensor([0, 3],"float64"), )
paddle.sqrt(x=Tensor([0],"float64"), )
paddle.sqrt(x=Tensor([0],"float64"), name=None, )
paddle.sqrt(x=Tensor([13, 0, 1],"float32"), )
paddle.sqrt(x=Tensor([13, 1, 0],"float32"), )
paddle.sqrt(x=Tensor([16, 0, 1],"float32"), )
paddle.sqrt(x=Tensor([16, 1, 0],"float32"), )
paddle.sqrt(x=Tensor([3, 0],"float64"), )
paddle.square(Tensor([0, 1, 1],"float32"), )
paddle.square(Tensor([0, 1],"float32"), )
paddle.square(Tensor([0, 1],"float32"), name=None, )
paddle.square(Tensor([0, 10, 10],"float32"), name=None, )
paddle.square(Tensor([0, 10],"float32"), name=None, )
paddle.square(Tensor([0, 196608],"float32"), )
paddle.square(Tensor([0, 2, 3, 3],"float32"), )
paddle.square(Tensor([0, 2, 3],"float32"), )
paddle.square(Tensor([0, 3, 10, 10],"float32"), )
paddle.square(Tensor([0, 3, 10, 10],"float32"), name=None, )
paddle.square(Tensor([0, 96, 2],"float32"), name=None, )
paddle.square(Tensor([0],"float32"), )
paddle.square(Tensor([0],"float64"), )
paddle.square(Tensor([1, 0, 1],"float32"), )
paddle.square(Tensor([1, 0],"float32"), )
paddle.square(Tensor([1, 1, 0],"float32"), )
paddle.square(Tensor([10, 0, 3],"float32"), )
paddle.square(Tensor([10, 0],"float32"), name=None, )
paddle.square(Tensor([10, 2, 0],"float32"), )
paddle.square(Tensor([100, 0],"float32"), name=None, )
paddle.square(Tensor([16, 0, 2],"float32"), name=None, )
paddle.square(Tensor([16, 96, 0],"float32"), name=None, )
paddle.square(Tensor([2, 0, 10],"float32"), name=None, )
paddle.square(Tensor([2, 10, 0],"float32"), name=None, )
paddle.square(Tensor([3, 0, 10, 10],"float32"), )
paddle.square(Tensor([3, 0, 10, 10],"float32"), name=None, )
paddle.square(Tensor([3, 0, 3, 3],"float32"), )
paddle.square(Tensor([3, 2, 0, 3],"float32"), )
paddle.square(Tensor([3, 2, 3, 0],"float32"), )
paddle.square(Tensor([3, 3, 0, 10],"float32"), )
paddle.square(Tensor([3, 3, 0, 10],"float32"), name=None, )
paddle.square(Tensor([3, 3, 10, 0],"float32"), )
paddle.square(Tensor([3, 3, 10, 0],"float32"), name=None, )
paddle.square(x=Tensor([0],"float32"), )
paddle.square(x=Tensor([0],"float64"), )
paddle.squeeze(Tensor([0, 1, 100, 100],"float16"), axis=list[1,], )
paddle.squeeze(Tensor([0, 1, 100, 100],"float32"), axis=list[1,], )
paddle.squeeze(Tensor([0, 1, 1024, 1024],"int32"), axis=1, )
paddle.squeeze(Tensor([0, 1, 1024, 1024],"int64"), axis=1, )
paddle.squeeze(Tensor([0, 1, 2, 2],"float64"), 1, )
paddle.squeeze(Tensor([0, 1, 3, 1600, 3],"float32"), axis=1, )
paddle.squeeze(Tensor([0, 1, 3, 3, 1600],"float32"), axis=1, )
paddle.squeeze(Tensor([0, 1, 32],"float64"), axis=list[1,], )
paddle.squeeze(Tensor([0, 1, 400],"float32"), axis=1, )
paddle.squeeze(Tensor([0, 1, 8],"float32"), list[1,], )
paddle.squeeze(Tensor([0, 1, 93431],"float32"), axis=list[1,], )
paddle.squeeze(Tensor([0, 1, 96],"float32"), axis=1, )
paddle.squeeze(Tensor([0, 1],"float16"), axis=1, )
paddle.squeeze(Tensor([0, 1],"float32"), axis=1, )
paddle.squeeze(Tensor([0, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([0, 1],"float32"), axis=list[1,], )
paddle.squeeze(Tensor([0, 1],"float32"), list[-1,], )
paddle.squeeze(Tensor([0, 1],"float64"), 1, )
paddle.squeeze(Tensor([0, 1],"float64"), -1, )
paddle.squeeze(Tensor([0, 1],"int32"), axis=-1, )
paddle.squeeze(Tensor([0, 10, 10],"float64"), )
paddle.squeeze(Tensor([0, 10, 10],"float64"), axis=-1, )
paddle.squeeze(Tensor([0, 10, 8, 1, 2],"float32"), axis=-1, )
paddle.squeeze(Tensor([0, 100, 1],"float32"), -1, )
paddle.squeeze(Tensor([0, 1024, 1024, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([0, 125, 125, 1],"float64"), -1, )
paddle.squeeze(Tensor([0, 1280, 1, 1],"float16"), axis=list[2,3,], )
paddle.squeeze(Tensor([0, 2, 1, 58],"float32"), )
paddle.squeeze(Tensor([0, 2, 1],"float32"), axis=2, )
paddle.squeeze(Tensor([0, 2, 2, 1],"float64"), -1, )
paddle.squeeze(Tensor([0, 2, 2, 1],"float64"), axis=-1, )
paddle.squeeze(Tensor([0, 2],"float32"), )
paddle.squeeze(Tensor([0, 20, 1],"float32"), )
paddle.squeeze(Tensor([0, 2048, 1, 1],"float32"), axis=list[2,3,], )
paddle.squeeze(Tensor([0, 2048, 1, 7, 7],"float32"), axis=2, )
paddle.squeeze(Tensor([0, 28, 1],"int64"), axis=list[2,], )
paddle.squeeze(Tensor([0, 29, 1],"int64"), axis=list[2,], )
paddle.squeeze(Tensor([0, 3, 10, 10, 10],"float64"), axis=-1, )
paddle.squeeze(Tensor([0, 3, 3],"float32"), axis=0, )
paddle.squeeze(Tensor([0, 3, 3],"float64"), axis=0, )
paddle.squeeze(Tensor([0, 3],"float32"), )
paddle.squeeze(Tensor([0, 3],"float32"), axis=list[0,], )
paddle.squeeze(Tensor([0, 3],"float64"), axis=0, )
paddle.squeeze(Tensor([0, 4, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([0, 4],"float32"), axis=list[0,], )
paddle.squeeze(Tensor([0, 512, 1, 100, 100],"float32"), axis=list[2,], )
paddle.squeeze(Tensor([0, 6, 3, 1, 2, 5],"float64"), axis=3, )
paddle.squeeze(Tensor([0, 6, 3, 4, 1, 5],"float64"), axis=4, )
paddle.squeeze(Tensor([0, 6, 3, 4, 2, 1],"float64"), axis=5, )
paddle.squeeze(Tensor([0, 7, 1],"float32"), -1, )
paddle.squeeze(Tensor([0, 7, 1],"float64"), axis=2, )
paddle.squeeze(Tensor([0, 8, 16, 128, 64],"float32"), axis=0, )
paddle.squeeze(Tensor([0],"float32"), )
paddle.squeeze(Tensor([0],"float32"), axis=0, )
paddle.squeeze(Tensor([0],"float32"), axis=-1, )
paddle.squeeze(Tensor([0],"float64"), axis=0, )
paddle.squeeze(Tensor([1, 0, 1, 58],"float32"), )
paddle.squeeze(Tensor([1, 0, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([1, 0, 1024, 1024],"int32"), axis=1, )
paddle.squeeze(Tensor([1, 0, 1024, 1024],"int64"), axis=1, )
paddle.squeeze(Tensor([1, 0, 16, 128, 64],"float32"), axis=0, )
paddle.squeeze(Tensor([1, 0, 3],"float32"), axis=0, )
paddle.squeeze(Tensor([1, 0, 3],"float64"), axis=0, )
paddle.squeeze(Tensor([1, 0, 32],"float64"), axis=list[1,], )
paddle.squeeze(Tensor([1, 0],"float32"), axis=-1, )
paddle.squeeze(Tensor([1, 0],"float32"), axis=list[0,], )
paddle.squeeze(Tensor([1, 0],"float32"), axis=list[1,], )
paddle.squeeze(Tensor([1, 0],"float64"), axis=0, )
paddle.squeeze(Tensor([1, 0],"int32"), axis=-1, )
paddle.squeeze(Tensor([1, 1, 0, 1024],"int32"), axis=1, )
paddle.squeeze(Tensor([1, 1, 0, 1024],"int64"), axis=1, )
paddle.squeeze(Tensor([1, 1, 0],"float64"), axis=list[1,], )
paddle.squeeze(Tensor([1, 1, 1024, 0],"int32"), axis=1, )
paddle.squeeze(Tensor([1, 1, 1024, 0],"int64"), axis=1, )
paddle.squeeze(Tensor([1, 2, 0, 58],"float32"), )
paddle.squeeze(Tensor([1, 2, 1, 0],"float32"), )
paddle.squeeze(Tensor([1, 3, 0],"float32"), axis=0, )
paddle.squeeze(Tensor([1, 3, 0],"float64"), axis=0, )
paddle.squeeze(Tensor([1, 4, 0],"float32"), axis=-1, )
paddle.squeeze(Tensor([1, 8, 0, 128, 64],"float32"), axis=0, )
paddle.squeeze(Tensor([1, 8, 16, 0, 64],"float32"), axis=0, )
paddle.squeeze(Tensor([1, 8, 16, 128, 0],"float32"), axis=0, )
paddle.squeeze(Tensor([10, 0, 1],"float32"), )
paddle.squeeze(Tensor([10, 0, 10],"float64"), )
paddle.squeeze(Tensor([10, 0, 10],"float64"), axis=-1, )
paddle.squeeze(Tensor([10, 10, 0],"float64"), )
paddle.squeeze(Tensor([10, 10, 0],"float64"), axis=-1, )
paddle.squeeze(Tensor([10, 20, 0],"float32"), )
paddle.squeeze(Tensor([100, 0],"float64"), 1, )
paddle.squeeze(Tensor([100, 0],"float64"), -1, )
paddle.squeeze(Tensor([1024, 0, 1, 1],"float32"), axis=list[2,3,], )
paddle.squeeze(Tensor([1024, 2048, 0, 1],"float32"), axis=list[2,3,], )
paddle.squeeze(Tensor([1024, 2048, 1, 0],"float32"), axis=list[2,3,], )
paddle.squeeze(Tensor([104, 0, 1],"int64"), axis=list[2,], )
paddle.squeeze(Tensor([104, 0, 93431],"float32"), axis=list[1,], )
paddle.squeeze(Tensor([104, 1, 0],"float32"), axis=list[1,], )
paddle.squeeze(Tensor([104, 28, 0],"int64"), axis=list[2,], )
paddle.squeeze(Tensor([104, 29, 0],"int64"), axis=list[2,], )
paddle.squeeze(Tensor([128, 0, 1, 1],"float16"), axis=list[2,3,], )
paddle.squeeze(Tensor([128, 0],"float16"), axis=1, )
paddle.squeeze(Tensor([128, 0],"float32"), axis=1, )
paddle.squeeze(Tensor([128, 0],"float32"), axis=list[1,], )
paddle.squeeze(Tensor([128, 0],"float32"), list[-1,], )
paddle.squeeze(Tensor([128, 1280, 0, 1],"float16"), axis=list[2,3,], )
paddle.squeeze(Tensor([128, 1280, 1, 0],"float16"), axis=list[2,3,], )
paddle.squeeze(Tensor([13, 0, 1],"float32"), -1, )
paddle.squeeze(Tensor([13, 7, 0],"float32"), -1, )
paddle.squeeze(Tensor([16, 0, 400],"float32"), axis=1, )
paddle.squeeze(Tensor([16, 1, 0],"float32"), axis=1, )
paddle.squeeze(Tensor([192, 0],"float32"), list[-1,], )
paddle.squeeze(Tensor([2, 0, 10, 10, 10],"float64"), axis=-1, )
paddle.squeeze(Tensor([2, 0, 1024, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([2, 0, 2, 1],"float64"), -1, )
paddle.squeeze(Tensor([2, 0, 2, 1],"float64"), axis=-1, )
paddle.squeeze(Tensor([2, 0, 2, 2],"float64"), 1, )
paddle.squeeze(Tensor([2, 0],"float32"), )
paddle.squeeze(Tensor([2, 0],"float64"), 1, )
paddle.squeeze(Tensor([2, 1, 0, 2],"float64"), 1, )
paddle.squeeze(Tensor([2, 1, 2, 0],"float64"), 1, )
paddle.squeeze(Tensor([2, 1024, 0, 1],"float32"), axis=-1, )
paddle.squeeze(Tensor([2, 1024, 1024, 0],"float32"), axis=-1, )
paddle.squeeze(Tensor([2, 2, 0, 1],"float64"), -1, )
paddle.squeeze(Tensor([2, 2, 0, 1],"float64"), axis=-1, )
paddle.squeeze(Tensor([2, 2, 2, 0],"float64"), -1, )
paddle.squeeze(Tensor([2, 2, 2, 0],"float64"), axis=-1, )
paddle.squeeze(Tensor([2, 3, 0, 10, 10],"float64"), axis=-1, )
paddle.squeeze(Tensor([2, 3, 10, 0, 10],"float64"), axis=-1, )
paddle.squeeze(Tensor([2, 3, 10, 10, 0],"float64"), axis=-1, )
paddle.squeeze(Tensor([24, 0, 96],"float32"), axis=1, )
paddle.squeeze(Tensor([24, 1, 0],"float32"), axis=1, )
paddle.squeeze(Tensor([3, 0, 1],"float32"), axis=2, )
paddle.squeeze(Tensor([3, 0, 3, 1, 2, 5],"float64"), axis=3, )
paddle.squeeze(Tensor([3, 0, 3, 1600, 3],"float32"), axis=1, )
paddle.squeeze(Tensor([3, 0, 3, 3, 1600],"float32"), axis=1, )
paddle.squeeze(Tensor([3, 0, 3, 4, 1, 5],"float64"), axis=4, )
paddle.squeeze(Tensor([3, 0, 3, 4, 2, 1],"float64"), axis=5, )
paddle.squeeze(Tensor([3, 1, 0, 1600, 3],"float32"), axis=1, )
paddle.squeeze(Tensor([3, 1, 0, 3, 1600],"float32"), axis=1, )
paddle.squeeze(Tensor([3, 1, 3, 0, 1600],"float32"), axis=1, )
paddle.squeeze(Tensor([3, 1, 3, 0, 3],"float32"), axis=1, )
paddle.squeeze(Tensor([3, 1, 3, 1600, 0],"float32"), axis=1, )
paddle.squeeze(Tensor([3, 1, 3, 3, 0],"float32"), axis=1, )
paddle.squeeze(Tensor([3, 2, 0],"float32"), axis=2, )
paddle.squeeze(Tensor([3, 6, 0, 1, 2, 5],"float64"), axis=3, )
paddle.squeeze(Tensor([3, 6, 0, 4, 1, 5],"float64"), axis=4, )
paddle.squeeze(Tensor([3, 6, 0, 4, 2, 1],"float64"), axis=5, )
paddle.squeeze(Tensor([3, 6, 3, 0, 1, 5],"float64"), axis=4, )
paddle.squeeze(Tensor([3, 6, 3, 0, 2, 1],"float64"), axis=5, )
paddle.squeeze(Tensor([3, 6, 3, 0, 2, 5],"float64"), axis=3, )
paddle.squeeze(Tensor([3, 6, 3, 1, 0, 5],"float64"), axis=3, )
paddle.squeeze(Tensor([3, 6, 3, 1, 2, 0],"float64"), axis=3, )
paddle.squeeze(Tensor([3, 6, 3, 4, 0, 1],"float64"), axis=5, )
paddle.squeeze(Tensor([3, 6, 3, 4, 0, 5],"float64"), axis=4, )
paddle.squeeze(Tensor([3, 6, 3, 4, 1, 0],"float64"), axis=4, )
paddle.squeeze(Tensor([3, 6, 3, 4, 2, 0],"float64"), axis=5, )
paddle.squeeze(Tensor([4, 0, 1],"float32"), -1, )
paddle.squeeze(Tensor([4, 0, 1],"float64"), axis=2, )
paddle.squeeze(Tensor([4, 0, 125, 1],"float64"), -1, )
paddle.squeeze(Tensor([4, 100, 0],"float32"), -1, )
paddle.squeeze(Tensor([4, 125, 0, 1],"float64"), -1, )
paddle.squeeze(Tensor([4, 125, 125, 0],"float64"), -1, )
paddle.squeeze(Tensor([4, 7, 0],"float64"), axis=2, )
paddle.squeeze(Tensor([5, 0, 8, 1, 2],"float32"), axis=-1, )
paddle.squeeze(Tensor([5, 0],"float64"), -1, )
paddle.squeeze(Tensor([5, 10, 0, 1, 2],"float32"), axis=-1, )
paddle.squeeze(Tensor([5, 10, 8, 0, 2],"float32"), axis=-1, )
paddle.squeeze(Tensor([5, 10, 8, 1, 0],"float32"), axis=-1, )
paddle.squeeze(Tensor([8, 0, 1, 100, 100],"float32"), axis=list[2,], )
paddle.squeeze(Tensor([8, 0, 1, 7, 7],"float32"), axis=2, )
paddle.squeeze(Tensor([8, 0, 100, 100],"float16"), axis=list[1,], )
paddle.squeeze(Tensor([8, 0, 100, 100],"float32"), axis=list[1,], )
paddle.squeeze(Tensor([8, 0, 8],"float32"), list[1,], )
paddle.squeeze(Tensor([8, 1, 0, 100],"float16"), axis=list[1,], )
paddle.squeeze(Tensor([8, 1, 0, 100],"float32"), axis=list[1,], )
paddle.squeeze(Tensor([8, 1, 0],"float32"), list[1,], )
paddle.squeeze(Tensor([8, 1, 100, 0],"float16"), axis=list[1,], )
paddle.squeeze(Tensor([8, 1, 100, 0],"float32"), axis=list[1,], )
paddle.squeeze(Tensor([8, 2048, 0, 7, 7],"float32"), axis=2, )
paddle.squeeze(Tensor([8, 2048, 1, 0, 7],"float32"), axis=2, )
paddle.squeeze(Tensor([8, 2048, 1, 7, 0],"float32"), axis=2, )
paddle.squeeze(Tensor([8, 512, 0, 100, 100],"float32"), axis=list[2,], )
paddle.squeeze(Tensor([8, 512, 1, 0, 100],"float32"), axis=list[2,], )
paddle.squeeze(Tensor([8, 512, 1, 100, 0],"float32"), axis=list[2,], )
paddle.squeeze(x=Tensor([0, 2, 1, 3],"float32"), )
paddle.squeeze(x=Tensor([0, 2, 1, 3],"float64"), )
paddle.squeeze(x=Tensor([0, 2, 1, 3],"float64"), axis=-4, )
paddle.squeeze(x=Tensor([0, 2, 1, 3],"float64"), axis=list[2,3,], )
paddle.squeeze(x=Tensor([0, 2, 1, 3],"float64"), axis=tuple(-4,-3,), )
paddle.squeeze(x=Tensor([1, 0, 1, 3],"float32"), )
paddle.squeeze(x=Tensor([1, 0, 1, 3],"float64"), )
paddle.squeeze(x=Tensor([1, 0, 1, 3],"float64"), axis=-4, )
paddle.squeeze(x=Tensor([1, 0, 1, 3],"float64"), axis=list[2,3,], )
paddle.squeeze(x=Tensor([1, 0, 1, 3],"float64"), axis=tuple(-4,-3,), )
paddle.squeeze(x=Tensor([1, 2, 0, 3],"float32"), )
paddle.squeeze(x=Tensor([1, 2, 0, 3],"float64"), )
paddle.squeeze(x=Tensor([1, 2, 0, 3],"float64"), axis=-4, )
paddle.squeeze(x=Tensor([1, 2, 0, 3],"float64"), axis=list[2,3,], )
paddle.squeeze(x=Tensor([1, 2, 0, 3],"float64"), axis=tuple(-4,-3,), )
paddle.squeeze(x=Tensor([1, 2, 1, 0],"float32"), )
paddle.squeeze(x=Tensor([1, 2, 1, 0],"float64"), )
paddle.squeeze(x=Tensor([1, 2, 1, 0],"float64"), axis=-4, )
paddle.squeeze(x=Tensor([1, 2, 1, 0],"float64"), axis=list[2,3,], )
paddle.squeeze(x=Tensor([1, 2, 1, 0],"float64"), axis=tuple(-4,-3,), )
paddle.stack(list[Tensor([0, 1, 1, 32],"float16"),Tensor([0, 1, 1, 32],"float16"),], axis=-1, )
paddle.stack(list[Tensor([0, 1, 1, 32],"float16"),Tensor([1, 1, 1, 32],"float16"),], axis=-1, )
paddle.stack(list[Tensor([0, 1, 1],"float32"),Tensor([0, 1, 1],"float32"),Tensor([0, 1, 1],"float32"),], axis=-1, )
paddle.stack(list[Tensor([0, 1, 1],"float32"),Tensor([1, 1, 1],"float32"),Tensor([1, 1, 1],"float32"),], axis=-1, )
paddle.stack(list[Tensor([0, 1, 1],"float64"),Tensor([0, 1, 1],"float64"),], 0, )
paddle.stack(list[Tensor([0, 1, 1],"float64"),Tensor([0, 1, 1],"float64"),Tensor([0, 1, 1],"float64"),], 0, )
paddle.stack(list[Tensor([0, 1, 1],"float64"),Tensor([5, 1, 1],"float64"),], 0, )
paddle.stack(list[Tensor([0, 1, 1],"float64"),Tensor([5, 1, 1],"float64"),Tensor([5, 1, 1],"float64"),], 0, )
paddle.stack(list[Tensor([0, 1, 16],"float32"),Tensor([0, 1, 16],"float32"),Tensor([0, 1, 16],"float32"),Tensor([0, 1, 16],"float32"),Tensor([0, 1, 16],"float32"),Tensor([0, 1, 16],"float32"),Tensor([0, 1, 16],"float32"),Tensor([0, 1, 16],"float32"),Tensor([0, 1, 16],"float32"),Tensor([0, 1, 16],"float32"),Tensor([0, 1, 16],"float32"),Tensor([0, 1, 16],"float32"),], axis=-1, )
paddle.stack(list[Tensor([0, 1, 16],"float32"),Tensor([13, 1, 16],"float32"),Tensor([13, 1, 16],"float32"),Tensor([13, 1, 16],"float32"),Tensor([13, 1, 16],"float32"),Tensor([13, 1, 16],"float32"),Tensor([13, 1, 16],"float32"),Tensor([13, 1, 16],"float32"),Tensor([13, 1, 16],"float32"),Tensor([13, 1, 16],"float32"),Tensor([13, 1, 16],"float32"),Tensor([13, 1, 16],"float32"),], axis=-1, )
paddle.stack(list[Tensor([0, 1, 16],"float32"),Tensor([16, 1, 16],"float32"),Tensor([16, 1, 16],"float32"),Tensor([16, 1, 16],"float32"),Tensor([16, 1, 16],"float32"),Tensor([16, 1, 16],"float32"),Tensor([16, 1, 16],"float32"),Tensor([16, 1, 16],"float32"),Tensor([16, 1, 16],"float32"),Tensor([16, 1, 16],"float32"),Tensor([16, 1, 16],"float32"),Tensor([16, 1, 16],"float32"),], axis=-1, )
paddle.stack(list[Tensor([0, 1, 2, 2],"float32"),Tensor([0, 1, 2, 2],"float32"),], -1, )
paddle.stack(list[Tensor([0, 1, 2, 2],"float32"),Tensor([1, 1, 2, 2],"float32"),], -1, )
paddle.stack(list[Tensor([0, 1, 4, 2],"float32"),Tensor([0, 1, 4, 2],"float32"),], -1, )
paddle.stack(list[Tensor([0, 1, 4, 2],"float32"),Tensor([1, 1, 4, 2],"float32"),], -1, )
paddle.stack(list[Tensor([0, 1, 64, 32],"float16"),Tensor([0, 1, 64, 32],"float16"),], axis=-1, )
paddle.stack(list[Tensor([0, 1, 64, 32],"float16"),Tensor([1, 1, 64, 32],"float16"),], axis=-1, )
paddle.stack(list[Tensor([0, 1, 64],"float16"),Tensor([0, 1, 64],"float16"),], axis=0, )
paddle.stack(list[Tensor([0, 1, 64],"float16"),Tensor([2, 1, 64],"float16"),], axis=0, )
paddle.stack(list[Tensor([0, 1],"float32"),], )
paddle.stack(list[Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),], -1, )
paddle.stack(list[Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),], axis=1, )
paddle.stack(list[Tensor([0, 1],"float32"),Tensor([1, 1],"float32"),], -1, )
paddle.stack(list[Tensor([0, 1],"float32"),Tensor([10105, 1],"float32"),Tensor([10105, 1],"float32"),Tensor([10105, 1],"float32"),], axis=1, )
paddle.stack(list[Tensor([0, 1],"int32"),], )
paddle.stack(list[Tensor([0, 1],"int32"),Tensor([0, 1],"int32"),], axis=-1, )
paddle.stack(list[Tensor([0, 1],"int32"),Tensor([1, 1],"int32"),], axis=-1, )
paddle.stack(list[Tensor([0, 10, 10],"float64"),Tensor([0, 10, 10],"float64"),], -1, )
paddle.stack(list[Tensor([0, 10, 10],"float64"),Tensor([10, 10, 10],"float64"),], -1, )
paddle.stack(list[Tensor([0, 10, 2, 1, 4],"float32"),Tensor([0, 10, 2, 1, 4],"float32"),], axis=0, )
paddle.stack(list[Tensor([0, 10, 2, 1, 4],"float32"),Tensor([2, 10, 2, 1, 4],"float32"),], axis=0, )
paddle.stack(list[Tensor([0, 10, 64],"float32"),Tensor([0, 10, 64],"float32"),Tensor([0, 10, 64],"float32"),Tensor([0, 10, 64],"float32"),Tensor([0, 10, 64],"float32"),Tensor([0, 10, 64],"float32"),Tensor([0, 10, 64],"float32"),Tensor([0, 10, 64],"float32"),Tensor([0, 10, 64],"float32"),Tensor([0, 10, 64],"float32"),Tensor([0, 10, 64],"float32"),Tensor([0, 10, 64],"float32"),Tensor([0, 10, 64],"float32"),Tensor([0, 10, 64],"float32"),Tensor([0, 10, 64],"float32"),Tensor([0, 10, 64],"float32"),Tensor([0, 10, 64],"float32"),Tensor([0, 10, 64],"float32"),Tensor([0, 10, 64],"float32"),Tensor([0, 10, 64],"float32"),Tensor([0, 10, 64],"float32"),Tensor([0, 10, 64],"float32"),Tensor([0, 10, 64],"float32"),Tensor([0, 10, 64],"float32"),Tensor([0, 10, 64],"float32"),Tensor([0, 10, 64],"float32"),Tensor([0, 10, 64],"float32"),Tensor([0, 10, 64],"float32"),Tensor([0, 10, 64],"float32"),Tensor([0, 10, 64],"float32"),Tensor([0, 10, 64],"float32"),Tensor([0, 10, 64],"float32"),Tensor([0, 10, 64],"float32"),Tensor([0, 10, 64],"float32"),Tensor([0, 10, 64],"float32"),Tensor([0, 10, 64],"float32"),Tensor([0, 10, 64],"float32"),Tensor([0, 10, 64],"float32"),Tensor([0, 10, 64],"float32"),Tensor([0, 10, 64],"float32"),Tensor([0, 10, 64],"float32"),Tensor([0, 10, 64],"float32"),Tensor([0, 10, 64],"float32"),Tensor([0, 10, 64],"float32"),Tensor([0, 10, 64],"float32"),Tensor([0, 10, 64],"float32"),Tensor([0, 10, 64],"float32"),Tensor([0, 10, 64],"float32"),Tensor([0, 10, 64],"float32"),Tensor([0, 10, 64],"float32"),Tensor([0, 10, 64],"float32"),Tensor([0, 10, 64],"float32"),Tensor([0, 10, 64],"float32"),Tensor([0, 10, 64],"float32"),Tensor([0, 10, 64],"float32"),Tensor([0, 10, 64],"float32"),Tensor([0, 10, 64],"float32"),Tensor([0, 10, 64],"float32"),Tensor([0, 10, 64],"float32"),Tensor([0, 10, 64],"float32"),], axis=1, )
paddle.stack(list[Tensor([0, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),], axis=1, )
paddle.stack(list[Tensor([0, 10],"float32"),Tensor([0, 10],"float32"),Tensor([0, 10],"float32"),Tensor([0, 10],"float32"),], axis=1, )
paddle.stack(list[Tensor([0, 10],"float32"),Tensor([0, 10],"float32"),Tensor([0, 10],"float32"),Tensor([0, 10],"float32"),], axis=-1, )
paddle.stack(list[Tensor([0, 10],"float32"),Tensor([10, 10],"float32"),Tensor([10, 10],"float32"),Tensor([10, 10],"float32"),], axis=-1, )
paddle.stack(list[Tensor([0, 10],"float32"),Tensor([10105, 10],"float32"),Tensor([10105, 10],"float32"),Tensor([10105, 10],"float32"),], axis=1, )
paddle.stack(list[Tensor([0, 10],"int32"),Tensor([0, 10],"int32"),], axis=-1, )
paddle.stack(list[Tensor([0, 10],"int32"),Tensor([1, 10],"int32"),], axis=-1, )
paddle.stack(list[Tensor([0, 11, 256],"float32"),Tensor([0, 11, 256],"float32"),Tensor([0, 11, 256],"float32"),Tensor([0, 11, 256],"float32"),Tensor([0, 11, 256],"float32"),Tensor([0, 11, 256],"float32"),], )
paddle.stack(list[Tensor([0, 11, 256],"float32"),Tensor([1, 11, 256],"float32"),Tensor([1, 11, 256],"float32"),Tensor([1, 11, 256],"float32"),Tensor([1, 11, 256],"float32"),Tensor([1, 11, 256],"float32"),], )
paddle.stack(list[Tensor([0, 11, 4],"float32"),Tensor([0, 11, 4],"float32"),Tensor([0, 11, 4],"float32"),Tensor([0, 11, 4],"float32"),Tensor([0, 11, 4],"float32"),Tensor([0, 11, 4],"float32"),], )
paddle.stack(list[Tensor([0, 11, 4],"float32"),Tensor([1, 11, 4],"float32"),Tensor([1, 11, 4],"float32"),Tensor([1, 11, 4],"float32"),Tensor([1, 11, 4],"float32"),Tensor([1, 11, 4],"float32"),], )
paddle.stack(list[Tensor([0, 114, 4, 1, 32],"float16"),Tensor([0, 114, 4, 1, 32],"float16"),], axis=0, )
paddle.stack(list[Tensor([0, 114, 4, 1, 32],"float16"),Tensor([2, 114, 4, 1, 32],"float16"),], axis=0, )
paddle.stack(list[Tensor([0, 12],"int64"),Tensor([0, 12],"int64"),], )
paddle.stack(list[Tensor([0, 12],"int64"),Tensor([12, 12],"int64"),], )
paddle.stack(list[Tensor([0, 128, 32],"float32"),], axis=-1, )
paddle.stack(list[Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),], )
paddle.stack(list[Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),], )
paddle.stack(list[Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),], )
paddle.stack(list[Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),], )
paddle.stack(list[Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),], )
paddle.stack(list[Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),], )
paddle.stack(list[Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),], )
paddle.stack(list[Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),], )
paddle.stack(list[Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),], )
paddle.stack(list[Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),], )
paddle.stack(list[Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),Tensor([0, 14],"int32"),], )
paddle.stack(list[Tensor([0, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),], )
paddle.stack(list[Tensor([0, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),], )
paddle.stack(list[Tensor([0, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),], )
paddle.stack(list[Tensor([0, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),], )
paddle.stack(list[Tensor([0, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),], )
paddle.stack(list[Tensor([0, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),], )
paddle.stack(list[Tensor([0, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),], )
paddle.stack(list[Tensor([0, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),], )
paddle.stack(list[Tensor([0, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),], )
paddle.stack(list[Tensor([0, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),], )
paddle.stack(list[Tensor([0, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),Tensor([14, 14],"int32"),], )
paddle.stack(list[Tensor([0, 14],"int64"),Tensor([14, 14],"int64"),], )
paddle.stack(list[Tensor([0, 16],"float64"),Tensor([0, 16],"float64"),Tensor([0, 16],"float64"),Tensor([0, 16],"float64"),Tensor([0, 16],"float64"),Tensor([0, 16],"float64"),Tensor([0, 16],"float64"),Tensor([0, 16],"float64"),Tensor([0, 16],"float64"),Tensor([0, 16],"float64"),Tensor([0, 16],"float64"),Tensor([0, 16],"float64"),], axis=0, )
paddle.stack(list[Tensor([0, 16],"float64"),Tensor([4, 16],"float64"),Tensor([4, 16],"float64"),Tensor([4, 16],"float64"),Tensor([4, 16],"float64"),Tensor([4, 16],"float64"),Tensor([4, 16],"float64"),Tensor([4, 16],"float64"),Tensor([4, 16],"float64"),Tensor([4, 16],"float64"),Tensor([4, 16],"float64"),Tensor([4, 16],"float64"),], axis=0, )
paddle.stack(list[Tensor([0, 2, 1, 4],"float32"),Tensor([0, 2, 1, 4],"float32"),], axis=0, )
paddle.stack(list[Tensor([0, 2, 1, 4],"float32"),Tensor([10, 2, 1, 4],"float32"),], axis=0, )
paddle.stack(list[Tensor([0, 2],"float32"),Tensor([0, 2],"float32"),], -1, )
paddle.stack(list[Tensor([0, 2],"float32"),Tensor([0, 2],"float32"),Tensor([0, 2],"float32"),Tensor([0, 2],"float32"),], )
paddle.stack(list[Tensor([0, 2],"float32"),Tensor([0, 2],"float32"),Tensor([0, 2],"float32"),Tensor([0, 2],"float32"),], 1, )
paddle.stack(list[Tensor([0, 2],"float32"),Tensor([0, 2],"float32"),Tensor([0, 2],"float32"),Tensor([0, 2],"float32"),Tensor([0, 2],"float32"),], 1, )
paddle.stack(list[Tensor([0, 2],"float32"),Tensor([1, 2],"float32"),], -1, )
paddle.stack(list[Tensor([0, 2],"float32"),Tensor([1, 2],"float32"),Tensor([1, 2],"float32"),Tensor([1, 2],"float32"),], 1, )
paddle.stack(list[Tensor([0, 2],"float32"),Tensor([1, 2],"float32"),Tensor([1, 2],"float32"),Tensor([1, 2],"float32"),Tensor([1, 2],"float32"),], 1, )
paddle.stack(list[Tensor([0, 2],"float32"),Tensor([157920, 2],"float32"),Tensor([157920, 2],"float32"),Tensor([157920, 2],"float32"),], )
paddle.stack(list[Tensor([0, 2],"float32"),Tensor([2, 2],"float32"),Tensor([2, 2],"float32"),Tensor([2, 2],"float32"),], 1, )
paddle.stack(list[Tensor([0, 21504],"float32"),], axis=0, )
paddle.stack(list[Tensor([0, 25, 2],"float32"),Tensor([0, 25, 2],"float32"),], axis=-2, )
paddle.stack(list[Tensor([0, 25, 2],"float32"),Tensor([1, 25, 2],"float32"),], axis=-2, )
paddle.stack(list[Tensor([0, 25, 4],"float32"),Tensor([0, 25, 4],"float32"),], axis=-1, )
paddle.stack(list[Tensor([0, 25, 4],"float32"),Tensor([1, 25, 4],"float32"),], axis=-1, )
paddle.stack(list[Tensor([0, 28, 28],"float32"),Tensor([0, 28, 28],"float32"),Tensor([0, 28, 28],"float32"),], axis=-4, )
paddle.stack(list[Tensor([0, 28, 28],"float32"),Tensor([6, 28, 28],"float32"),Tensor([6, 28, 28],"float32"),], axis=-4, )
paddle.stack(list[Tensor([0, 28],"float32"),Tensor([0, 28],"float32"),Tensor([0, 28],"float32"),], axis=-3, )
paddle.stack(list[Tensor([0, 28],"float32"),Tensor([0, 28],"float32"),Tensor([0, 28],"float32"),Tensor([0, 28],"float32"),Tensor([0, 28],"float32"),Tensor([0, 28],"float32"),], axis=-3, )
paddle.stack(list[Tensor([0, 28],"float32"),Tensor([28, 28],"float32"),Tensor([28, 28],"float32"),], axis=-3, )
paddle.stack(list[Tensor([0, 28],"float32"),Tensor([28, 28],"float32"),Tensor([28, 28],"float32"),Tensor([28, 28],"float32"),Tensor([28, 28],"float32"),Tensor([28, 28],"float32"),], axis=-3, )
paddle.stack(list[Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),], )
paddle.stack(list[Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),], )
paddle.stack(list[Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),], )
paddle.stack(list[Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),], )
paddle.stack(list[Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),], )
paddle.stack(list[Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),], )
paddle.stack(list[Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),], )
paddle.stack(list[Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),], )
paddle.stack(list[Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),], )
paddle.stack(list[Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),], )
paddle.stack(list[Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),], )
paddle.stack(list[Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),], )
paddle.stack(list[Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),], )
paddle.stack(list[Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),], )
paddle.stack(list[Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),], )
paddle.stack(list[Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),], )
paddle.stack(list[Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),], )
paddle.stack(list[Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),], )
paddle.stack(list[Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),], )
paddle.stack(list[Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),], )
paddle.stack(list[Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),], )
paddle.stack(list[Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),], )
paddle.stack(list[Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),], )
paddle.stack(list[Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),], )
paddle.stack(list[Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),], )
paddle.stack(list[Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),], )
paddle.stack(list[Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),], )
paddle.stack(list[Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),], )
paddle.stack(list[Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),], )
paddle.stack(list[Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),], )
paddle.stack(list[Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),Tensor([0, 28],"int32"),], )
paddle.stack(list[Tensor([0, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),], )
paddle.stack(list[Tensor([0, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),], )
paddle.stack(list[Tensor([0, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),], )
paddle.stack(list[Tensor([0, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),], )
paddle.stack(list[Tensor([0, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),], )
paddle.stack(list[Tensor([0, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),], )
paddle.stack(list[Tensor([0, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),], )
paddle.stack(list[Tensor([0, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),], )
paddle.stack(list[Tensor([0, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),], )
paddle.stack(list[Tensor([0, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),], )
paddle.stack(list[Tensor([0, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),], )
paddle.stack(list[Tensor([0, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),], )
paddle.stack(list[Tensor([0, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),], )
paddle.stack(list[Tensor([0, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),], )
paddle.stack(list[Tensor([0, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),], )
paddle.stack(list[Tensor([0, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),], )
paddle.stack(list[Tensor([0, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),], )
paddle.stack(list[Tensor([0, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),], )
paddle.stack(list[Tensor([0, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),], )
paddle.stack(list[Tensor([0, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),], )
paddle.stack(list[Tensor([0, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),], )
paddle.stack(list[Tensor([0, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),], )
paddle.stack(list[Tensor([0, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),], )
paddle.stack(list[Tensor([0, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),], )
paddle.stack(list[Tensor([0, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),], )
paddle.stack(list[Tensor([0, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),Tensor([28, 28],"int32"),], )
paddle.stack(list[Tensor([0, 3, 256, 256],"float32"),Tensor([4, 3, 256, 256],"float32"),Tensor([4, 3, 256, 256],"float32"),Tensor([4, 3, 256, 256],"float32"),Tensor([4, 3, 256, 256],"float32"),Tensor([4, 3, 256, 256],"float32"),Tensor([4, 3, 256, 256],"float32"),Tensor([4, 3, 256, 256],"float32"),Tensor([4, 3, 256, 256],"float32"),Tensor([4, 3, 256, 256],"float32"),Tensor([4, 3, 256, 256],"float32"),Tensor([4, 3, 256, 256],"float32"),Tensor([4, 3, 256, 256],"float32"),Tensor([4, 3, 256, 256],"float32"),Tensor([4, 3, 256, 256],"float32"),], axis=1, )
paddle.stack(list[Tensor([0, 3, 4],"float32"),Tensor([0, 3, 4],"float32"),], axis=1, )
paddle.stack(list[Tensor([0, 3, 4],"float32"),Tensor([2, 3, 4],"float32"),], axis=1, )
paddle.stack(list[Tensor([0, 3],"float32"),], axis=1, )
paddle.stack(list[Tensor([0, 3],"float32"),Tensor([0, 3],"float32"),], axis=0, )
paddle.stack(list[Tensor([0, 3],"float32"),Tensor([0, 3],"float32"),Tensor([0, 3],"float32"),Tensor([0, 3],"float32"),Tensor([0, 3],"float32"),Tensor([0, 3],"float32"),Tensor([0, 3],"float32"),], )
paddle.stack(list[Tensor([0, 3],"float32"),Tensor([1, 3],"float32"),], axis=0, )
paddle.stack(list[Tensor([0, 3],"float32"),Tensor([13, 3],"float32"),Tensor([13, 3],"float32"),Tensor([13, 3],"float32"),Tensor([13, 3],"float32"),Tensor([13, 3],"float32"),Tensor([13, 3],"float32"),], )
paddle.stack(list[Tensor([0, 3],"int64"),Tensor([0, 3],"int64"),Tensor([0, 3],"int64"),Tensor([0, 3],"int64"),Tensor([0, 3],"int64"),Tensor([0, 3],"int64"),], )
paddle.stack(list[Tensor([0, 3],"int64"),Tensor([13, 3],"int64"),Tensor([13, 3],"int64"),Tensor([13, 3],"int64"),Tensor([13, 3],"int64"),Tensor([13, 3],"int64"),], )
paddle.stack(list[Tensor([0, 300, 4],"float32"),], )
paddle.stack(list[Tensor([0, 300, 4096],"float32"),Tensor([0, 300, 4096],"float32"),], axis=0, )
paddle.stack(list[Tensor([0, 300, 4096],"float32"),Tensor([1, 300, 4096],"float32"),], axis=0, )
paddle.stack(list[Tensor([0, 300],"float32"),Tensor([0, 300],"float32"),Tensor([0, 300],"float32"),Tensor([0, 300],"float32"),], axis=-1, )
paddle.stack(list[Tensor([0, 300],"float32"),Tensor([1, 300],"float32"),Tensor([1, 300],"float32"),Tensor([1, 300],"float32"),], axis=-1, )
paddle.stack(list[Tensor([0, 32, 1100, 4],"float32"),Tensor([0, 32, 1100, 4],"float32"),Tensor([0, 32, 1100, 4],"float32"),Tensor([0, 32, 1100, 4],"float32"),Tensor([0, 32, 1100, 4],"float32"),], axis=-2, )
paddle.stack(list[Tensor([0, 32, 1100, 4],"float32"),Tensor([8, 32, 1100, 4],"float32"),Tensor([8, 32, 1100, 4],"float32"),Tensor([8, 32, 1100, 4],"float32"),Tensor([8, 32, 1100, 4],"float32"),], axis=-2, )
paddle.stack(list[Tensor([0, 32, 11645, 4],"float32"),Tensor([0, 32, 11645, 4],"float32"),Tensor([0, 32, 11645, 4],"float32"),Tensor([0, 32, 11645, 4],"float32"),], axis=-2, )
paddle.stack(list[Tensor([0, 32, 11645, 4],"float32"),Tensor([16, 32, 11645, 4],"float32"),Tensor([16, 32, 11645, 4],"float32"),Tensor([16, 32, 11645, 4],"float32"),], axis=-2, )
paddle.stack(list[Tensor([0, 32, 18, 4],"float32"),Tensor([0, 32, 18, 4],"float32"),Tensor([0, 32, 18, 4],"float32"),Tensor([0, 32, 18, 4],"float32"),Tensor([0, 32, 18, 4],"float32"),], axis=-2, )
paddle.stack(list[Tensor([0, 32, 18, 4],"float32"),Tensor([8, 32, 18, 4],"float32"),Tensor([8, 32, 18, 4],"float32"),Tensor([8, 32, 18, 4],"float32"),Tensor([8, 32, 18, 4],"float32"),], axis=-2, )
paddle.stack(list[Tensor([0, 32, 300, 4],"float32"),Tensor([0, 32, 300, 4],"float32"),Tensor([0, 32, 300, 4],"float32"),], axis=-2, )
paddle.stack(list[Tensor([0, 32, 300, 4],"float32"),Tensor([0, 32, 300, 4],"float32"),Tensor([0, 32, 300, 4],"float32"),Tensor([0, 32, 300, 4],"float32"),], axis=-2, )
paddle.stack(list[Tensor([0, 32, 300, 4],"float32"),Tensor([16, 32, 300, 4],"float32"),Tensor([16, 32, 300, 4],"float32"),], axis=-2, )
paddle.stack(list[Tensor([0, 32, 300, 4],"float32"),Tensor([16, 32, 300, 4],"float32"),Tensor([16, 32, 300, 4],"float32"),Tensor([16, 32, 300, 4],"float32"),], axis=-2, )
paddle.stack(list[Tensor([0, 32, 476, 4],"float32"),Tensor([0, 32, 476, 4],"float32"),Tensor([0, 32, 476, 4],"float32"),], axis=-2, )
paddle.stack(list[Tensor([0, 32, 476, 4],"float32"),Tensor([128, 32, 476, 4],"float32"),Tensor([128, 32, 476, 4],"float32"),], axis=-2, )
paddle.stack(list[Tensor([0, 32],"float32"),Tensor([0, 32],"float32"),Tensor([0, 32],"float32"),Tensor([0, 32],"float32"),Tensor([0, 32],"float32"),Tensor([0, 32],"float32"),Tensor([0, 32],"float32"),Tensor([0, 32],"float32"),Tensor([0, 32],"float32"),Tensor([0, 32],"float32"),Tensor([0, 32],"float32"),Tensor([0, 32],"float32"),Tensor([0, 32],"float32"),Tensor([0, 32],"float32"),Tensor([0, 32],"float32"),Tensor([0, 32],"float32"),Tensor([0, 32],"float32"),Tensor([0, 32],"float32"),Tensor([0, 32],"float32"),Tensor([0, 32],"float32"),Tensor([0, 32],"float32"),Tensor([0, 32],"float32"),Tensor([0, 32],"float32"),], axis=1, )
paddle.stack(list[Tensor([0, 32],"float32"),Tensor([4, 32],"float32"),Tensor([4, 32],"float32"),Tensor([4, 32],"float32"),Tensor([4, 32],"float32"),Tensor([4, 32],"float32"),Tensor([4, 32],"float32"),Tensor([4, 32],"float32"),Tensor([4, 32],"float32"),Tensor([4, 32],"float32"),Tensor([4, 32],"float32"),Tensor([4, 32],"float32"),Tensor([4, 32],"float32"),Tensor([4, 32],"float32"),Tensor([4, 32],"float32"),Tensor([4, 32],"float32"),Tensor([4, 32],"float32"),Tensor([4, 32],"float32"),Tensor([4, 32],"float32"),Tensor([4, 32],"float32"),Tensor([4, 32],"float32"),Tensor([4, 32],"float32"),Tensor([4, 32],"float32"),], axis=1, )
paddle.stack(list[Tensor([0, 32],"float64"),Tensor([0, 32],"float64"),], axis=0, )
paddle.stack(list[Tensor([0, 32],"float64"),Tensor([0, 32],"float64"),Tensor([0, 32],"float64"),Tensor([0, 32],"float64"),Tensor([0, 32],"float64"),Tensor([0, 32],"float64"),Tensor([0, 32],"float64"),Tensor([0, 32],"float64"),Tensor([0, 32],"float64"),Tensor([0, 32],"float64"),], axis=1, )
paddle.stack(list[Tensor([0, 32],"float64"),Tensor([0, 32],"float64"),Tensor([0, 32],"float64"),Tensor([0, 32],"float64"),Tensor([0, 32],"float64"),Tensor([0, 32],"float64"),Tensor([0, 32],"float64"),Tensor([0, 32],"float64"),Tensor([0, 32],"float64"),Tensor([0, 32],"float64"),Tensor([0, 32],"float64"),Tensor([0, 32],"float64"),], axis=1, )
paddle.stack(list[Tensor([0, 32],"float64"),Tensor([1, 32],"float64"),], axis=0, )
paddle.stack(list[Tensor([0, 32],"float64"),Tensor([1, 32],"float64"),Tensor([1, 32],"float64"),Tensor([1, 32],"float64"),Tensor([1, 32],"float64"),Tensor([1, 32],"float64"),Tensor([1, 32],"float64"),Tensor([1, 32],"float64"),Tensor([1, 32],"float64"),Tensor([1, 32],"float64"),], axis=1, )
paddle.stack(list[Tensor([0, 32],"float64"),Tensor([4, 32],"float64"),Tensor([4, 32],"float64"),Tensor([4, 32],"float64"),Tensor([4, 32],"float64"),Tensor([4, 32],"float64"),Tensor([4, 32],"float64"),Tensor([4, 32],"float64"),Tensor([4, 32],"float64"),Tensor([4, 32],"float64"),Tensor([4, 32],"float64"),Tensor([4, 32],"float64"),], axis=1, )
paddle.stack(list[Tensor([0, 4, 1, 32],"float16"),Tensor([0, 4, 1, 32],"float16"),], axis=0, )
paddle.stack(list[Tensor([0, 4, 1, 32],"float16"),Tensor([114, 4, 1, 32],"float16"),], axis=0, )
paddle.stack(list[Tensor([0, 4],"float32"),], 0, )
paddle.stack(list[Tensor([0, 4],"float32"),], axis=1, )
paddle.stack(list[Tensor([0, 4],"float32"),Tensor([0, 4],"float32"),Tensor([0, 4],"float32"),Tensor([0, 4],"float32"),Tensor([0, 4],"float32"),Tensor([0, 4],"float32"),], axis=0, )
paddle.stack(list[Tensor([0, 4],"float32"),Tensor([0, 4],"float32"),Tensor([0, 4],"float32"),Tensor([0, 4],"float32"),Tensor([0, 4],"float32"),Tensor([0, 4],"float32"),Tensor([0, 4],"float32"),Tensor([0, 4],"float32"),Tensor([0, 4],"float32"),Tensor([0, 4],"float32"),Tensor([0, 4],"float32"),], axis=0, )
paddle.stack(list[Tensor([0, 4],"float32"),Tensor([4, 4],"float32"),Tensor([4, 4],"float32"),Tensor([4, 4],"float32"),Tensor([4, 4],"float32"),Tensor([4, 4],"float32"),], axis=0, )
paddle.stack(list[Tensor([0, 4],"float32"),Tensor([4, 4],"float32"),Tensor([4, 4],"float32"),Tensor([4, 4],"float32"),Tensor([4, 4],"float32"),Tensor([4, 4],"float32"),Tensor([4, 4],"float32"),Tensor([4, 4],"float32"),Tensor([4, 4],"float32"),Tensor([4, 4],"float32"),Tensor([4, 4],"float32"),], axis=0, )
paddle.stack(list[Tensor([0, 4],"float64"),Tensor([0, 4],"float64"),], 0, )
paddle.stack(list[Tensor([0, 4],"float64"),Tensor([0, 4],"float64"),Tensor([0, 4],"float64"),Tensor([0, 4],"float64"),Tensor([0, 4],"float64"),Tensor([0, 4],"float64"),Tensor([0, 4],"float64"),Tensor([0, 4],"float64"),Tensor([0, 4],"float64"),Tensor([0, 4],"float64"),Tensor([0, 4],"float64"),Tensor([0, 4],"float64"),], axis=0, )
paddle.stack(list[Tensor([0, 4],"float64"),Tensor([0, 4],"float64"),Tensor([0, 4],"float64"),Tensor([0, 4],"float64"),Tensor([0, 4],"float64"),Tensor([0, 4],"float64"),Tensor([0, 4],"float64"),Tensor([0, 4],"float64"),Tensor([0, 4],"float64"),Tensor([0, 4],"float64"),Tensor([0, 4],"float64"),Tensor([0, 4],"float64"),Tensor([0, 4],"float64"),Tensor([0, 4],"float64"),Tensor([0, 4],"float64"),Tensor([0, 4],"float64"),Tensor([0, 4],"float64"),Tensor([0, 4],"float64"),Tensor([0, 4],"float64"),Tensor([0, 4],"float64"),Tensor([0, 4],"float64"),], axis=0, )
paddle.stack(list[Tensor([0, 4],"float64"),Tensor([4, 4],"float64"),Tensor([4, 4],"float64"),Tensor([4, 4],"float64"),Tensor([4, 4],"float64"),Tensor([4, 4],"float64"),Tensor([4, 4],"float64"),Tensor([4, 4],"float64"),Tensor([4, 4],"float64"),Tensor([4, 4],"float64"),Tensor([4, 4],"float64"),Tensor([4, 4],"float64"),], axis=0, )
paddle.stack(list[Tensor([0, 4],"float64"),Tensor([5, 4],"float64"),], 0, )
paddle.stack(list[Tensor([0, 4],"float64"),Tensor([8, 4],"float64"),Tensor([8, 4],"float64"),Tensor([8, 4],"float64"),Tensor([8, 4],"float64"),Tensor([8, 4],"float64"),Tensor([8, 4],"float64"),Tensor([8, 4],"float64"),Tensor([8, 4],"float64"),Tensor([8, 4],"float64"),Tensor([8, 4],"float64"),Tensor([8, 4],"float64"),Tensor([8, 4],"float64"),Tensor([8, 4],"float64"),Tensor([8, 4],"float64"),Tensor([8, 4],"float64"),Tensor([8, 4],"float64"),Tensor([8, 4],"float64"),Tensor([8, 4],"float64"),Tensor([8, 4],"float64"),Tensor([8, 4],"float64"),], axis=0, )
paddle.stack(list[Tensor([0, 4],"int64"),Tensor([0, 4],"int64"),], axis=2, )
paddle.stack(list[Tensor([0, 4],"int64"),Tensor([0, 4],"int64"),Tensor([0, 4],"int64"),Tensor([0, 4],"int64"),Tensor([0, 4],"int64"),Tensor([0, 4],"int64"),], axis=0, )
paddle.stack(list[Tensor([0, 4],"int64"),Tensor([0, 4],"int64"),Tensor([0, 4],"int64"),Tensor([0, 4],"int64"),Tensor([0, 4],"int64"),Tensor([0, 4],"int64"),Tensor([0, 4],"int64"),Tensor([0, 4],"int64"),Tensor([0, 4],"int64"),Tensor([0, 4],"int64"),Tensor([0, 4],"int64"),], axis=0, )
paddle.stack(list[Tensor([0, 4],"int64"),Tensor([0, 4],"int64"),Tensor([0, 4],"int64"),Tensor([0, 4],"int64"),Tensor([0, 4],"int64"),Tensor([0, 4],"int64"),Tensor([0, 4],"int64"),Tensor([0, 4],"int64"),Tensor([0, 4],"int64"),Tensor([0, 4],"int64"),Tensor([0, 4],"int64"),Tensor([0, 4],"int64"),Tensor([0, 4],"int64"),Tensor([0, 4],"int64"),Tensor([0, 4],"int64"),Tensor([0, 4],"int64"),Tensor([0, 4],"int64"),Tensor([0, 4],"int64"),Tensor([0, 4],"int64"),Tensor([0, 4],"int64"),Tensor([0, 4],"int64"),], axis=0, )
paddle.stack(list[Tensor([0, 4],"int64"),Tensor([4, 4],"int64"),], axis=2, )
paddle.stack(list[Tensor([0, 4],"int64"),Tensor([4, 4],"int64"),Tensor([4, 4],"int64"),Tensor([4, 4],"int64"),Tensor([4, 4],"int64"),Tensor([4, 4],"int64"),], axis=0, )
paddle.stack(list[Tensor([0, 4],"int64"),Tensor([4, 4],"int64"),Tensor([4, 4],"int64"),Tensor([4, 4],"int64"),Tensor([4, 4],"int64"),Tensor([4, 4],"int64"),Tensor([4, 4],"int64"),Tensor([4, 4],"int64"),Tensor([4, 4],"int64"),Tensor([4, 4],"int64"),Tensor([4, 4],"int64"),], axis=0, )
paddle.stack(list[Tensor([0, 4],"int64"),Tensor([8, 4],"int64"),Tensor([8, 4],"int64"),Tensor([8, 4],"int64"),Tensor([8, 4],"int64"),Tensor([8, 4],"int64"),Tensor([8, 4],"int64"),Tensor([8, 4],"int64"),Tensor([8, 4],"int64"),Tensor([8, 4],"int64"),Tensor([8, 4],"int64"),Tensor([8, 4],"int64"),Tensor([8, 4],"int64"),Tensor([8, 4],"int64"),Tensor([8, 4],"int64"),Tensor([8, 4],"int64"),Tensor([8, 4],"int64"),Tensor([8, 4],"int64"),Tensor([8, 4],"int64"),Tensor([8, 4],"int64"),Tensor([8, 4],"int64"),], axis=0, )
paddle.stack(list[Tensor([0, 400, 176, 176],"float32"),Tensor([0, 400, 176, 176],"float32"),Tensor([0, 400, 176, 176],"float32"),Tensor([0, 400, 176, 176],"float32"),Tensor([0, 400, 176, 176],"float32"),Tensor([0, 400, 176, 176],"float32"),], )
paddle.stack(list[Tensor([0, 400, 176, 176],"float32"),Tensor([1, 400, 176, 176],"float32"),Tensor([1, 400, 176, 176],"float32"),Tensor([1, 400, 176, 176],"float32"),Tensor([1, 400, 176, 176],"float32"),Tensor([1, 400, 176, 176],"float32"),], )
paddle.stack(list[Tensor([0, 400, 184, 184],"float32"),Tensor([0, 400, 184, 184],"float32"),Tensor([0, 400, 184, 184],"float32"),Tensor([0, 400, 184, 184],"float32"),Tensor([0, 400, 184, 184],"float32"),Tensor([0, 400, 184, 184],"float32"),], )
paddle.stack(list[Tensor([0, 400, 184, 184],"float32"),Tensor([1, 400, 184, 184],"float32"),Tensor([1, 400, 184, 184],"float32"),Tensor([1, 400, 184, 184],"float32"),Tensor([1, 400, 184, 184],"float32"),Tensor([1, 400, 184, 184],"float32"),], )
paddle.stack(list[Tensor([0, 500, 4],"float32"),Tensor([0, 500, 4],"float32"),Tensor([0, 500, 4],"float32"),], )
paddle.stack(list[Tensor([0, 500, 4],"float32"),Tensor([4, 500, 4],"float32"),Tensor([4, 500, 4],"float32"),], )
paddle.stack(list[Tensor([0, 512],"float16"),Tensor([0, 512],"float16"),Tensor([0, 512],"float16"),], axis=1, )
paddle.stack(list[Tensor([0, 512],"float16"),Tensor([128, 512],"float16"),Tensor([128, 512],"float16"),], axis=1, )
paddle.stack(list[Tensor([0, 512],"int32"),Tensor([0, 512],"int32"),Tensor([0, 512],"int32"),], axis=1, )
paddle.stack(list[Tensor([0, 512],"int32"),Tensor([128, 512],"int32"),Tensor([128, 512],"int32"),], axis=1, )
paddle.stack(list[Tensor([0, 6, 3, 2, 5],"float64"),Tensor([0, 6, 3, 2, 5],"float64"),Tensor([0, 6, 3, 2, 5],"float64"),], 0, )
paddle.stack(list[Tensor([0, 6, 3, 2, 5],"float64"),Tensor([3, 6, 3, 2, 5],"float64"),Tensor([3, 6, 3, 2, 5],"float64"),], 0, )
paddle.stack(list[Tensor([0, 6, 3, 4, 5],"float64"),Tensor([0, 6, 3, 4, 5],"float64"),Tensor([0, 6, 3, 4, 5],"float64"),Tensor([0, 6, 3, 4, 5],"float64"),], 0, )
paddle.stack(list[Tensor([0, 6, 3, 4, 5],"float64"),Tensor([3, 6, 3, 4, 5],"float64"),Tensor([3, 6, 3, 4, 5],"float64"),Tensor([3, 6, 3, 4, 5],"float64"),], 0, )
paddle.stack(list[Tensor([0, 6, 8, 8],"float32"),Tensor([0, 6, 8, 8],"float32"),Tensor([0, 6, 8, 8],"float32"),], axis=-4, )
paddle.stack(list[Tensor([0, 6, 8, 8],"float32"),Tensor([2, 6, 8, 8],"float32"),Tensor([2, 6, 8, 8],"float32"),], axis=-4, )
paddle.stack(list[Tensor([0, 64, 64, 64],"float32"),Tensor([0, 64, 64, 64],"float32"),Tensor([0, 64, 64, 64],"float32"),Tensor([0, 64, 64, 64],"float32"),Tensor([0, 64, 64, 64],"float32"),], axis=1, )
paddle.stack(list[Tensor([0, 64, 64, 64],"float32"),Tensor([64, 64, 64, 64],"float32"),Tensor([64, 64, 64, 64],"float32"),Tensor([64, 64, 64, 64],"float32"),Tensor([64, 64, 64, 64],"float32"),], axis=1, )
paddle.stack(list[Tensor([0, 64],"float32"),Tensor([0, 64],"float32"),Tensor([0, 64],"float32"),], axis=-1, )
paddle.stack(list[Tensor([0, 64],"float32"),Tensor([0, 64],"float32"),Tensor([0, 64],"float32"),Tensor([0, 64],"float32"),Tensor([0, 64],"float32"),Tensor([0, 64],"float32"),Tensor([0, 64],"float32"),], axis=-1, )
paddle.stack(list[Tensor([0, 64],"float32"),Tensor([0, 64],"float32"),Tensor([0, 64],"float32"),Tensor([0, 64],"float32"),Tensor([0, 64],"float32"),Tensor([0, 64],"float32"),Tensor([0, 64],"float32"),Tensor([0, 64],"float32"),Tensor([0, 64],"float32"),Tensor([0, 64],"float32"),], axis=-1, )
paddle.stack(list[Tensor([0, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),], axis=-1, )
paddle.stack(list[Tensor([0, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),], axis=-1, )
paddle.stack(list[Tensor([0, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),Tensor([13, 64],"float32"),], axis=-1, )
paddle.stack(list[Tensor([0, 64],"float32"),Tensor([14, 64],"float32"),Tensor([14, 64],"float32"),Tensor([14, 64],"float32"),Tensor([14, 64],"float32"),Tensor([14, 64],"float32"),Tensor([14, 64],"float32"),], axis=-1, )
paddle.stack(list[Tensor([0, 640, 640],"float32"),], )
paddle.stack(list[Tensor([0, 640, 640],"float32"),Tensor([0, 640, 640],"float32"),Tensor([0, 640, 640],"float32"),Tensor([0, 640, 640],"float32"),Tensor([0, 640, 640],"float32"),Tensor([0, 640, 640],"float32"),Tensor([0, 640, 640],"float32"),Tensor([0, 640, 640],"float32"),], axis=0, )
paddle.stack(list[Tensor([0, 640, 640],"float32"),Tensor([3, 640, 640],"float32"),Tensor([3, 640, 640],"float32"),Tensor([3, 640, 640],"float32"),Tensor([3, 640, 640],"float32"),Tensor([3, 640, 640],"float32"),Tensor([3, 640, 640],"float32"),Tensor([3, 640, 640],"float32"),], axis=0, )
paddle.stack(list[Tensor([0, 7, 14],"float32"),Tensor([0, 7, 14],"float32"),Tensor([0, 7, 14],"float32"),Tensor([0, 7, 14],"float32"),], axis=1, )
paddle.stack(list[Tensor([0, 7, 14],"float32"),Tensor([13, 7, 14],"float32"),Tensor([13, 7, 14],"float32"),Tensor([13, 7, 14],"float32"),], axis=1, )
paddle.stack(list[Tensor([0, 7, 16],"float32"),Tensor([0, 7, 16],"float32"),Tensor([0, 7, 16],"float32"),], axis=-1, )
paddle.stack(list[Tensor([0, 7, 16],"float32"),Tensor([13, 7, 16],"float32"),Tensor([13, 7, 16],"float32"),], axis=-1, )
paddle.stack(list[Tensor([0, 7, 64],"float32"),Tensor([0, 7, 64],"float32"),], axis=-1, )
paddle.stack(list[Tensor([0, 7, 64],"float32"),Tensor([13, 7, 64],"float32"),], axis=-1, )
paddle.stack(list[Tensor([0, 7, 7],"int64"),Tensor([0, 7, 7],"int64"),Tensor([0, 7, 7],"int64"),], )
paddle.stack(list[Tensor([0, 7, 7],"int64"),Tensor([8, 7, 7],"int64"),Tensor([8, 7, 7],"int64"),], )
paddle.stack(list[Tensor([0, 7],"float32"),Tensor([0, 7],"float32"),Tensor([0, 7],"float32"),Tensor([0, 7],"float32"),], axis=0, )
paddle.stack(list[Tensor([0, 7],"float32"),Tensor([157920, 7],"float32"),Tensor([157920, 7],"float32"),Tensor([157920, 7],"float32"),], axis=0, )
paddle.stack(list[Tensor([0, 8, 8],"float32"),Tensor([0, 8, 8],"float32"),], )
paddle.stack(list[Tensor([0, 8, 8],"float32"),Tensor([0, 8, 8],"float32"),Tensor([0, 8, 8],"float32"),], axis=-3, )
paddle.stack(list[Tensor([0, 8, 8],"float32"),Tensor([0, 8, 8],"float32"),Tensor([0, 8, 8],"float32"),], axis=-4, )
paddle.stack(list[Tensor([0, 8, 8],"float32"),Tensor([0, 8, 8],"float32"),Tensor([0, 8, 8],"float32"),Tensor([0, 8, 8],"float32"),Tensor([0, 8, 8],"float32"),Tensor([0, 8, 8],"float32"),], axis=-3, )
paddle.stack(list[Tensor([0, 8, 8],"float32"),Tensor([2, 8, 8],"float32"),Tensor([2, 8, 8],"float32"),], axis=-3, )
paddle.stack(list[Tensor([0, 8, 8],"float32"),Tensor([2, 8, 8],"float32"),Tensor([2, 8, 8],"float32"),Tensor([2, 8, 8],"float32"),Tensor([2, 8, 8],"float32"),Tensor([2, 8, 8],"float32"),], axis=-3, )
paddle.stack(list[Tensor([0, 8, 8],"float32"),Tensor([3, 8, 8],"float32"),], )
paddle.stack(list[Tensor([0, 8, 8],"float32"),Tensor([6, 8, 8],"float32"),Tensor([6, 8, 8],"float32"),], axis=-4, )
paddle.stack(list[Tensor([0, 8],"float32"),Tensor([0, 8],"float32"),Tensor([0, 8],"float32"),], axis=-3, )
paddle.stack(list[Tensor([0, 8],"float32"),Tensor([0, 8],"float32"),Tensor([0, 8],"float32"),Tensor([0, 8],"float32"),Tensor([0, 8],"float32"),Tensor([0, 8],"float32"),], axis=-3, )
paddle.stack(list[Tensor([0, 8],"float32"),Tensor([8, 8],"float32"),Tensor([8, 8],"float32"),], axis=-3, )
paddle.stack(list[Tensor([0, 8],"float32"),Tensor([8, 8],"float32"),Tensor([8, 8],"float32"),Tensor([8, 8],"float32"),Tensor([8, 8],"float32"),Tensor([8, 8],"float32"),], axis=-3, )
paddle.stack(list[Tensor([0, 8],"float64"),Tensor([0, 8],"float64"),Tensor([0, 8],"float64"),Tensor([0, 8],"float64"),Tensor([0, 8],"float64"),Tensor([0, 8],"float64"),Tensor([0, 8],"float64"),Tensor([0, 8],"float64"),Tensor([0, 8],"float64"),Tensor([0, 8],"float64"),Tensor([0, 8],"float64"),Tensor([0, 8],"float64"),], axis=1, )
paddle.stack(list[Tensor([0, 8],"float64"),Tensor([4, 8],"float64"),Tensor([4, 8],"float64"),Tensor([4, 8],"float64"),Tensor([4, 8],"float64"),Tensor([4, 8],"float64"),Tensor([4, 8],"float64"),Tensor([4, 8],"float64"),Tensor([4, 8],"float64"),Tensor([4, 8],"float64"),Tensor([4, 8],"float64"),Tensor([4, 8],"float64"),], axis=1, )
paddle.stack(list[Tensor([0, 8],"int64"),Tensor([0, 8],"int64"),], axis=2, )
paddle.stack(list[Tensor([0, 8],"int64"),Tensor([4, 8],"int64"),], axis=2, )
paddle.stack(list[Tensor([0],"float32"),], )
paddle.stack(list[Tensor([0],"float32"),], 0, )
paddle.stack(list[Tensor([0],"float32"),Tensor([0],"float32"),], )
paddle.stack(list[Tensor([0],"float32"),Tensor([0],"float32"),], 0, )
paddle.stack(list[Tensor([0],"float32"),Tensor([0],"float32"),], 1, )
paddle.stack(list[Tensor([0],"float32"),Tensor([0],"float32"),], -1, )
paddle.stack(list[Tensor([0],"float32"),Tensor([0],"float32"),], axis=1, )
paddle.stack(list[Tensor([0],"float32"),Tensor([0],"float32"),], axis=-1, )
paddle.stack(list[Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),], )
paddle.stack(list[Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),], axis=1, )
paddle.stack(list[Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),], )
paddle.stack(list[Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),], -1, )
paddle.stack(list[Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),], axis=0, )
paddle.stack(list[Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),], axis=1, )
paddle.stack(list[Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),], )
paddle.stack(list[Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),], )
paddle.stack(list[Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),], axis=1, )
paddle.stack(list[Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),], )
paddle.stack(list[Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),], axis=0, )
paddle.stack(list[Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),], )
paddle.stack(list[Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),], )
paddle.stack(list[Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),], )
paddle.stack(list[Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),], )
paddle.stack(list[Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),], )
paddle.stack(list[Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),], )
paddle.stack(list[Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),], )
paddle.stack(list[Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),], )
paddle.stack(list[Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),], )
paddle.stack(list[Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),], )
paddle.stack(list[Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),], )
paddle.stack(list[Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),], axis=0, )
paddle.stack(list[Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),], )
paddle.stack(list[Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),], )
paddle.stack(list[Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),], axis=1, )
paddle.stack(list[Tensor([0],"float32"),Tensor([1],"float32"),], )
paddle.stack(list[Tensor([0],"float32"),Tensor([1],"float32"),], 1, )
paddle.stack(list[Tensor([0],"float32"),Tensor([1],"float32"),], -1, )
paddle.stack(list[Tensor([0],"float32"),Tensor([1],"float32"),], axis=-1, )
paddle.stack(list[Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.stack(list[Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.stack(list[Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], -1, )
paddle.stack(list[Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.stack(list[Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.stack(list[Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.stack(list[Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.stack(list[Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.stack(list[Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.stack(list[Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.stack(list[Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.stack(list[Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.stack(list[Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.stack(list[Tensor([0],"float32"),Tensor([10],"float32"),], axis=1, )
paddle.stack(list[Tensor([0],"float32"),Tensor([10],"float32"),Tensor([10],"float32"),Tensor([10],"float32"),], -1, )
paddle.stack(list[Tensor([0],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),], )
paddle.stack(list[Tensor([0],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),], )
paddle.stack(list[Tensor([0],"float32"),Tensor([15],"float32"),Tensor([15],"float32"),Tensor([15],"float32"),Tensor([15],"float32"),Tensor([15],"float32"),Tensor([15],"float32"),Tensor([15],"float32"),Tensor([15],"float32"),Tensor([15],"float32"),Tensor([15],"float32"),Tensor([15],"float32"),], )
paddle.stack(list[Tensor([0],"float32"),Tensor([157920],"float32"),Tensor([157920],"float32"),Tensor([157920],"float32"),], axis=0, )
paddle.stack(list[Tensor([0],"float32"),Tensor([2],"float32"),], 0, )
paddle.stack(list[Tensor([0],"float32"),Tensor([2],"float32"),Tensor([2],"float32"),Tensor([2],"float32"),Tensor([2],"float32"),Tensor([2],"float32"),], )
paddle.stack(list[Tensor([0],"float32"),Tensor([3],"float32"),], 1, )
paddle.stack(list[Tensor([0],"float32"),Tensor([3],"float32"),Tensor([3],"float32"),], axis=1, )
paddle.stack(list[Tensor([0],"float32"),Tensor([512],"float32"),Tensor([512],"float32"),Tensor([512],"float32"),], axis=1, )
paddle.stack(list[Tensor([0],"float32"),Tensor([512],"float32"),Tensor([512],"float32"),Tensor([512],"float32"),Tensor([512],"float32"),Tensor([512],"float32"),Tensor([512],"float32"),Tensor([512],"float32"),], axis=0, )
paddle.stack(list[Tensor([0],"float32"),Tensor([8],"float32"),Tensor([8],"float32"),Tensor([8],"float32"),Tensor([8],"float32"),Tensor([8],"float32"),], axis=1, )
paddle.stack(list[Tensor([0],"float64"),], 0, )
paddle.stack(list[Tensor([0],"float64"),Tensor([0],"float64"),], 0, )
paddle.stack(list[Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),], 1, )
paddle.stack(list[Tensor([0],"float64"),Tensor([252],"float64"),Tensor([252],"float64"),Tensor([252],"float64"),Tensor([252],"float64"),], 1, )
paddle.stack(list[Tensor([0],"float64"),Tensor([3],"float64"),], 0, )
paddle.stack(list[Tensor([0],"int32"),], 1, )
paddle.stack(list[Tensor([0],"int32"),Tensor([0],"int32"),Tensor([0],"int32"),], )
paddle.stack(list[Tensor([0],"int32"),Tensor([0],"int32"),Tensor([0],"int32"),Tensor([0],"int32"),], axis=0, )
paddle.stack(list[Tensor([0],"int32"),Tensor([157920],"int32"),Tensor([157920],"int32"),Tensor([157920],"int32"),], axis=0, )
paddle.stack(list[Tensor([0],"int32"),Tensor([832],"int32"),Tensor([832],"int32"),], )
paddle.stack(list[Tensor([0],"int64"),Tensor([0],"int64"),], )
paddle.stack(list[Tensor([0],"int64"),Tensor([0],"int64"),], axis=0, )
paddle.stack(list[Tensor([0],"int64"),Tensor([0],"int64"),], axis=1, )
paddle.stack(list[Tensor([0],"int64"),Tensor([0],"int64"),], axis=-1, )
paddle.stack(list[Tensor([0],"int64"),Tensor([0],"int64"),], axis=-2, )
paddle.stack(list[Tensor([0],"int64"),Tensor([0],"int64"),Tensor([0],"int64"),Tensor([0],"int64"),], )
paddle.stack(list[Tensor([0],"int64"),Tensor([0],"int64"),Tensor([0],"int64"),Tensor([0],"int64"),], 1, )
paddle.stack(list[Tensor([0],"int64"),Tensor([0],"int64"),Tensor([0],"int64"),Tensor([0],"int64"),Tensor([0],"int64"),], )
paddle.stack(list[Tensor([0],"int64"),Tensor([0],"int64"),Tensor([0],"int64"),Tensor([0],"int64"),Tensor([0],"int64"),Tensor([0],"int64"),Tensor([0],"int64"),], 1, )
paddle.stack(list[Tensor([0],"int64"),Tensor([1],"int64"),], axis=0, )
paddle.stack(list[Tensor([0],"int64"),Tensor([1],"int64"),], axis=1, )
paddle.stack(list[Tensor([0],"int64"),Tensor([1],"int64"),], axis=-1, )
paddle.stack(list[Tensor([0],"int64"),Tensor([10],"int64"),], axis=0, )
paddle.stack(list[Tensor([0],"int64"),Tensor([128],"int64"),], )
paddle.stack(list[Tensor([0],"int64"),Tensor([13],"int64"),Tensor([13],"int64"),Tensor([13],"int64"),Tensor([13],"int64"),Tensor([13],"int64"),Tensor([13],"int64"),], 1, )
paddle.stack(list[Tensor([0],"int64"),Tensor([2],"int64"),], axis=-2, )
paddle.stack(list[Tensor([0],"int64"),Tensor([2],"int64"),Tensor([2],"int64"),Tensor([2],"int64"),], )
paddle.stack(list[Tensor([0],"int64"),Tensor([2],"int64"),Tensor([2],"int64"),Tensor([2],"int64"),Tensor([2],"int64"),], )
paddle.stack(list[Tensor([0],"int64"),Tensor([385],"int64"),Tensor([385],"int64"),Tensor([385],"int64"),], 1, )
paddle.stack(list[Tensor([0],"int64"),Tensor([516],"int64"),Tensor([516],"int64"),Tensor([516],"int64"),], 1, )
paddle.stack(list[Tensor([1, 0, 1, 32],"float16"),Tensor([1, 0, 1, 32],"float16"),], axis=-1, )
paddle.stack(list[Tensor([1, 0, 1, 32],"float16"),Tensor([1, 1, 1, 32],"float16"),], axis=-1, )
paddle.stack(list[Tensor([1, 0, 1],"float32"),Tensor([1, 0, 1],"float32"),Tensor([1, 0, 1],"float32"),], axis=-1, )
paddle.stack(list[Tensor([1, 0, 1],"float32"),Tensor([1, 1, 1],"float32"),Tensor([1, 1, 1],"float32"),], axis=-1, )
paddle.stack(list[Tensor([1, 0, 176, 176],"float32"),Tensor([1, 0, 176, 176],"float32"),Tensor([1, 0, 176, 176],"float32"),Tensor([1, 0, 176, 176],"float32"),Tensor([1, 0, 176, 176],"float32"),Tensor([1, 0, 176, 176],"float32"),], )
paddle.stack(list[Tensor([1, 0, 176, 176],"float32"),Tensor([1, 400, 176, 176],"float32"),Tensor([1, 400, 176, 176],"float32"),Tensor([1, 400, 176, 176],"float32"),Tensor([1, 400, 176, 176],"float32"),Tensor([1, 400, 176, 176],"float32"),], )
paddle.stack(list[Tensor([1, 0, 184, 184],"float32"),Tensor([1, 0, 184, 184],"float32"),Tensor([1, 0, 184, 184],"float32"),Tensor([1, 0, 184, 184],"float32"),Tensor([1, 0, 184, 184],"float32"),Tensor([1, 0, 184, 184],"float32"),], )
paddle.stack(list[Tensor([1, 0, 184, 184],"float32"),Tensor([1, 400, 184, 184],"float32"),Tensor([1, 400, 184, 184],"float32"),Tensor([1, 400, 184, 184],"float32"),Tensor([1, 400, 184, 184],"float32"),Tensor([1, 400, 184, 184],"float32"),], )
paddle.stack(list[Tensor([1, 0, 2, 2],"float32"),Tensor([1, 0, 2, 2],"float32"),], -1, )
paddle.stack(list[Tensor([1, 0, 2, 2],"float32"),Tensor([1, 1, 2, 2],"float32"),], -1, )
paddle.stack(list[Tensor([1, 0, 2],"float32"),Tensor([1, 0, 2],"float32"),], axis=-2, )
paddle.stack(list[Tensor([1, 0, 2],"float32"),Tensor([1, 25, 2],"float32"),], axis=-2, )
paddle.stack(list[Tensor([1, 0, 256],"float32"),Tensor([1, 0, 256],"float32"),Tensor([1, 0, 256],"float32"),Tensor([1, 0, 256],"float32"),Tensor([1, 0, 256],"float32"),Tensor([1, 0, 256],"float32"),], )
paddle.stack(list[Tensor([1, 0, 256],"float32"),Tensor([1, 11, 256],"float32"),Tensor([1, 11, 256],"float32"),Tensor([1, 11, 256],"float32"),Tensor([1, 11, 256],"float32"),Tensor([1, 11, 256],"float32"),], )
paddle.stack(list[Tensor([1, 0, 32],"float32"),], axis=-1, )
paddle.stack(list[Tensor([1, 0, 4, 2],"float32"),Tensor([1, 0, 4, 2],"float32"),], -1, )
paddle.stack(list[Tensor([1, 0, 4, 2],"float32"),Tensor([1, 1, 4, 2],"float32"),], -1, )
paddle.stack(list[Tensor([1, 0, 4],"float32"),Tensor([1, 0, 4],"float32"),], axis=-1, )
paddle.stack(list[Tensor([1, 0, 4],"float32"),Tensor([1, 0, 4],"float32"),Tensor([1, 0, 4],"float32"),Tensor([1, 0, 4],"float32"),Tensor([1, 0, 4],"float32"),Tensor([1, 0, 4],"float32"),], )
paddle.stack(list[Tensor([1, 0, 4],"float32"),Tensor([1, 11, 4],"float32"),Tensor([1, 11, 4],"float32"),Tensor([1, 11, 4],"float32"),Tensor([1, 11, 4],"float32"),Tensor([1, 11, 4],"float32"),], )
paddle.stack(list[Tensor([1, 0, 4],"float32"),Tensor([1, 25, 4],"float32"),], axis=-1, )
paddle.stack(list[Tensor([1, 0, 4096],"float32"),Tensor([1, 0, 4096],"float32"),], axis=0, )
paddle.stack(list[Tensor([1, 0, 4096],"float32"),Tensor([1, 300, 4096],"float32"),], axis=0, )
paddle.stack(list[Tensor([1, 0, 64, 32],"float16"),Tensor([1, 0, 64, 32],"float16"),], axis=-1, )
paddle.stack(list[Tensor([1, 0, 64, 32],"float16"),Tensor([1, 1, 64, 32],"float16"),], axis=-1, )
paddle.stack(list[Tensor([1, 0, 64],"float32"),Tensor([1, 0, 64],"float32"),Tensor([1, 0, 64],"float32"),Tensor([1, 0, 64],"float32"),Tensor([1, 0, 64],"float32"),Tensor([1, 0, 64],"float32"),Tensor([1, 0, 64],"float32"),Tensor([1, 0, 64],"float32"),Tensor([1, 0, 64],"float32"),Tensor([1, 0, 64],"float32"),Tensor([1, 0, 64],"float32"),Tensor([1, 0, 64],"float32"),Tensor([1, 0, 64],"float32"),Tensor([1, 0, 64],"float32"),Tensor([1, 0, 64],"float32"),Tensor([1, 0, 64],"float32"),Tensor([1, 0, 64],"float32"),Tensor([1, 0, 64],"float32"),Tensor([1, 0, 64],"float32"),Tensor([1, 0, 64],"float32"),Tensor([1, 0, 64],"float32"),Tensor([1, 0, 64],"float32"),Tensor([1, 0, 64],"float32"),Tensor([1, 0, 64],"float32"),Tensor([1, 0, 64],"float32"),Tensor([1, 0, 64],"float32"),Tensor([1, 0, 64],"float32"),Tensor([1, 0, 64],"float32"),Tensor([1, 0, 64],"float32"),Tensor([1, 0, 64],"float32"),Tensor([1, 0, 64],"float32"),Tensor([1, 0, 64],"float32"),Tensor([1, 0, 64],"float32"),Tensor([1, 0, 64],"float32"),Tensor([1, 0, 64],"float32"),Tensor([1, 0, 64],"float32"),Tensor([1, 0, 64],"float32"),Tensor([1, 0, 64],"float32"),Tensor([1, 0, 64],"float32"),Tensor([1, 0, 64],"float32"),Tensor([1, 0, 64],"float32"),Tensor([1, 0, 64],"float32"),Tensor([1, 0, 64],"float32"),Tensor([1, 0, 64],"float32"),Tensor([1, 0, 64],"float32"),Tensor([1, 0, 64],"float32"),Tensor([1, 0, 64],"float32"),Tensor([1, 0, 64],"float32"),Tensor([1, 0, 64],"float32"),Tensor([1, 0, 64],"float32"),Tensor([1, 0, 64],"float32"),Tensor([1, 0, 64],"float32"),Tensor([1, 0, 64],"float32"),Tensor([1, 0, 64],"float32"),Tensor([1, 0, 64],"float32"),Tensor([1, 0, 64],"float32"),Tensor([1, 0, 64],"float32"),Tensor([1, 0, 64],"float32"),Tensor([1, 0, 64],"float32"),Tensor([1, 0, 64],"float32"),], axis=1, )
paddle.stack(list[Tensor([1, 0, 64],"float32"),Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),Tensor([1, 10, 64],"float32"),], axis=1, )
paddle.stack(list[Tensor([1, 0, 64],"float32"),Tensor([1, 2, 64],"float32"),Tensor([1, 2, 64],"float32"),Tensor([1, 2, 64],"float32"),Tensor([1, 2, 64],"float32"),Tensor([1, 2, 64],"float32"),Tensor([1, 2, 64],"float32"),Tensor([1, 2, 64],"float32"),Tensor([1, 2, 64],"float32"),Tensor([1, 2, 64],"float32"),Tensor([1, 2, 64],"float32"),Tensor([1, 2, 64],"float32"),Tensor([1, 2, 64],"float32"),Tensor([1, 2, 64],"float32"),Tensor([1, 2, 64],"float32"),Tensor([1, 2, 64],"float32"),Tensor([1, 2, 64],"float32"),Tensor([1, 2, 64],"float32"),Tensor([1, 2, 64],"float32"),Tensor([1, 2, 64],"float32"),Tensor([1, 2, 64],"float32"),Tensor([1, 2, 64],"float32"),Tensor([1, 2, 64],"float32"),Tensor([1, 2, 64],"float32"),Tensor([1, 2, 64],"float32"),Tensor([1, 2, 64],"float32"),Tensor([1, 2, 64],"float32"),Tensor([1, 2, 64],"float32"),Tensor([1, 2, 64],"float32"),Tensor([1, 2, 64],"float32"),Tensor([1, 2, 64],"float32"),Tensor([1, 2, 64],"float32"),Tensor([1, 2, 64],"float32"),Tensor([1, 2, 64],"float32"),Tensor([1, 2, 64],"float32"),Tensor([1, 2, 64],"float32"),Tensor([1, 2, 64],"float32"),Tensor([1, 2, 64],"float32"),Tensor([1, 2, 64],"float32"),Tensor([1, 2, 64],"float32"),Tensor([1, 2, 64],"float32"),Tensor([1, 2, 64],"float32"),Tensor([1, 2, 64],"float32"),Tensor([1, 2, 64],"float32"),Tensor([1, 2, 64],"float32"),Tensor([1, 2, 64],"float32"),Tensor([1, 2, 64],"float32"),Tensor([1, 2, 64],"float32"),Tensor([1, 2, 64],"float32"),Tensor([1, 2, 64],"float32"),Tensor([1, 2, 64],"float32"),Tensor([1, 2, 64],"float32"),Tensor([1, 2, 64],"float32"),Tensor([1, 2, 64],"float32"),Tensor([1, 2, 64],"float32"),Tensor([1, 2, 64],"float32"),Tensor([1, 2, 64],"float32"),Tensor([1, 2, 64],"float32"),Tensor([1, 2, 64],"float32"),Tensor([1, 2, 64],"float32"),], axis=1, )
paddle.stack(list[Tensor([1, 0, 640],"float32"),], )
paddle.stack(list[Tensor([1, 0],"float32"),], )
paddle.stack(list[Tensor([1, 0],"float32"),], axis=1, )
paddle.stack(list[Tensor([1, 0],"float32"),Tensor([1, 0],"float32"),], -1, )
paddle.stack(list[Tensor([1, 0],"float32"),Tensor([1, 0],"float32"),], axis=0, )
paddle.stack(list[Tensor([1, 0],"float32"),Tensor([1, 0],"float32"),Tensor([1, 0],"float32"),Tensor([1, 0],"float32"),], 1, )
paddle.stack(list[Tensor([1, 0],"float32"),Tensor([1, 0],"float32"),Tensor([1, 0],"float32"),Tensor([1, 0],"float32"),], axis=-1, )
paddle.stack(list[Tensor([1, 0],"float32"),Tensor([1, 0],"float32"),Tensor([1, 0],"float32"),Tensor([1, 0],"float32"),Tensor([1, 0],"float32"),], 1, )
paddle.stack(list[Tensor([1, 0],"float32"),Tensor([1, 1],"float32"),], -1, )
paddle.stack(list[Tensor([1, 0],"float32"),Tensor([1, 2],"float32"),], -1, )
paddle.stack(list[Tensor([1, 0],"float32"),Tensor([1, 2],"float32"),Tensor([1, 2],"float32"),Tensor([1, 2],"float32"),], 1, )
paddle.stack(list[Tensor([1, 0],"float32"),Tensor([1, 2],"float32"),Tensor([1, 2],"float32"),Tensor([1, 2],"float32"),Tensor([1, 2],"float32"),], 1, )
paddle.stack(list[Tensor([1, 0],"float32"),Tensor([1, 3],"float32"),], axis=0, )
paddle.stack(list[Tensor([1, 0],"float32"),Tensor([1, 300],"float32"),Tensor([1, 300],"float32"),Tensor([1, 300],"float32"),], axis=-1, )
paddle.stack(list[Tensor([1, 0],"float64"),Tensor([1, 0],"float64"),], axis=0, )
paddle.stack(list[Tensor([1, 0],"float64"),Tensor([1, 0],"float64"),Tensor([1, 0],"float64"),Tensor([1, 0],"float64"),Tensor([1, 0],"float64"),Tensor([1, 0],"float64"),Tensor([1, 0],"float64"),Tensor([1, 0],"float64"),Tensor([1, 0],"float64"),Tensor([1, 0],"float64"),], axis=1, )
paddle.stack(list[Tensor([1, 0],"float64"),Tensor([1, 32],"float64"),], axis=0, )
paddle.stack(list[Tensor([1, 0],"float64"),Tensor([1, 32],"float64"),Tensor([1, 32],"float64"),Tensor([1, 32],"float64"),Tensor([1, 32],"float64"),Tensor([1, 32],"float64"),Tensor([1, 32],"float64"),Tensor([1, 32],"float64"),Tensor([1, 32],"float64"),Tensor([1, 32],"float64"),], axis=1, )
paddle.stack(list[Tensor([1, 0],"int32"),], )
paddle.stack(list[Tensor([1, 0],"int32"),Tensor([1, 0],"int32"),], axis=-1, )
paddle.stack(list[Tensor([1, 0],"int32"),Tensor([1, 1],"int32"),], axis=-1, )
paddle.stack(list[Tensor([1, 0],"int32"),Tensor([1, 10],"int32"),], axis=-1, )
paddle.stack(list[Tensor([1, 1, 0, 2],"float32"),Tensor([1, 1, 0, 2],"float32"),], -1, )
paddle.stack(list[Tensor([1, 1, 0, 2],"float32"),Tensor([1, 1, 2, 2],"float32"),], -1, )
paddle.stack(list[Tensor([1, 1, 0, 2],"float32"),Tensor([1, 1, 4, 2],"float32"),], -1, )
paddle.stack(list[Tensor([1, 1, 0, 32],"float16"),Tensor([1, 1, 0, 32],"float16"),], axis=-1, )
paddle.stack(list[Tensor([1, 1, 0, 32],"float16"),Tensor([1, 1, 1, 32],"float16"),], axis=-1, )
paddle.stack(list[Tensor([1, 1, 0, 32],"float16"),Tensor([1, 1, 64, 32],"float16"),], axis=-1, )
paddle.stack(list[Tensor([1, 1, 0],"float32"),Tensor([1, 1, 0],"float32"),Tensor([1, 1, 0],"float32"),], axis=-1, )
paddle.stack(list[Tensor([1, 1, 0],"float32"),Tensor([1, 1, 1],"float32"),Tensor([1, 1, 1],"float32"),], axis=-1, )
paddle.stack(list[Tensor([1, 1, 1, 0],"float16"),Tensor([1, 1, 1, 0],"float16"),], axis=-1, )
paddle.stack(list[Tensor([1, 1, 1, 0],"float16"),Tensor([1, 1, 1, 32],"float16"),], axis=-1, )
paddle.stack(list[Tensor([1, 1, 1, 32],"float16"),Tensor([0, 1, 1, 32],"float16"),], axis=-1, )
paddle.stack(list[Tensor([1, 1, 1, 32],"float16"),Tensor([1, 0, 1, 32],"float16"),], axis=-1, )
paddle.stack(list[Tensor([1, 1, 1, 32],"float16"),Tensor([1, 1, 0, 32],"float16"),], axis=-1, )
paddle.stack(list[Tensor([1, 1, 1, 32],"float16"),Tensor([1, 1, 1, 0],"float16"),], axis=-1, )
paddle.stack(list[Tensor([1, 1, 1],"float32"),Tensor([0, 1, 1],"float32"),Tensor([1, 1, 1],"float32"),], axis=-1, )
paddle.stack(list[Tensor([1, 1, 1],"float32"),Tensor([1, 0, 1],"float32"),Tensor([1, 1, 1],"float32"),], axis=-1, )
paddle.stack(list[Tensor([1, 1, 1],"float32"),Tensor([1, 1, 0],"float32"),Tensor([1, 1, 1],"float32"),], axis=-1, )
paddle.stack(list[Tensor([1, 1, 1],"float32"),Tensor([1, 1, 1],"float32"),Tensor([0, 1, 1],"float32"),], axis=-1, )
paddle.stack(list[Tensor([1, 1, 1],"float32"),Tensor([1, 1, 1],"float32"),Tensor([1, 0, 1],"float32"),], axis=-1, )
paddle.stack(list[Tensor([1, 1, 1],"float32"),Tensor([1, 1, 1],"float32"),Tensor([1, 1, 0],"float32"),], axis=-1, )
paddle.stack(list[Tensor([1, 1, 2, 0],"float32"),Tensor([1, 1, 2, 0],"float32"),], -1, )
paddle.stack(list[Tensor([1, 1, 2, 0],"float32"),Tensor([1, 1, 2, 2],"float32"),], -1, )
paddle.stack(list[Tensor([1, 1, 2, 2],"float32"),Tensor([0, 1, 2, 2],"float32"),], -1, )
paddle.stack(list[Tensor([1, 1, 2, 2],"float32"),Tensor([1, 0, 2, 2],"float32"),], -1, )
paddle.stack(list[Tensor([1, 1, 2, 2],"float32"),Tensor([1, 1, 0, 2],"float32"),], -1, )
paddle.stack(list[Tensor([1, 1, 2, 2],"float32"),Tensor([1, 1, 2, 0],"float32"),], -1, )
paddle.stack(list[Tensor([1, 1, 4, 0],"float32"),Tensor([1, 1, 4, 0],"float32"),], -1, )
paddle.stack(list[Tensor([1, 1, 4, 0],"float32"),Tensor([1, 1, 4, 2],"float32"),], -1, )
paddle.stack(list[Tensor([1, 1, 4, 2],"float32"),Tensor([0, 1, 4, 2],"float32"),], -1, )
paddle.stack(list[Tensor([1, 1, 4, 2],"float32"),Tensor([1, 0, 4, 2],"float32"),], -1, )
paddle.stack(list[Tensor([1, 1, 4, 2],"float32"),Tensor([1, 1, 0, 2],"float32"),], -1, )
paddle.stack(list[Tensor([1, 1, 4, 2],"float32"),Tensor([1, 1, 4, 0],"float32"),], -1, )
paddle.stack(list[Tensor([1, 1, 64, 0],"float16"),Tensor([1, 1, 64, 0],"float16"),], axis=-1, )
paddle.stack(list[Tensor([1, 1, 64, 0],"float16"),Tensor([1, 1, 64, 32],"float16"),], axis=-1, )
paddle.stack(list[Tensor([1, 1, 64, 32],"float16"),Tensor([0, 1, 64, 32],"float16"),], axis=-1, )
paddle.stack(list[Tensor([1, 1, 64, 32],"float16"),Tensor([1, 0, 64, 32],"float16"),], axis=-1, )
paddle.stack(list[Tensor([1, 1, 64, 32],"float16"),Tensor([1, 1, 0, 32],"float16"),], axis=-1, )
paddle.stack(list[Tensor([1, 1, 64, 32],"float16"),Tensor([1, 1, 64, 0],"float16"),], axis=-1, )
paddle.stack(list[Tensor([1, 1],"float32"),Tensor([0, 1],"float32"),], -1, )
paddle.stack(list[Tensor([1, 1],"float32"),Tensor([1, 0],"float32"),], -1, )
paddle.stack(list[Tensor([1, 1],"int32"),Tensor([0, 1],"int32"),], axis=-1, )
paddle.stack(list[Tensor([1, 1],"int32"),Tensor([1, 0],"int32"),], axis=-1, )
paddle.stack(list[Tensor([1, 10],"int32"),Tensor([0, 10],"int32"),], axis=-1, )
paddle.stack(list[Tensor([1, 10],"int32"),Tensor([1, 0],"int32"),], axis=-1, )
paddle.stack(list[Tensor([1, 11, 0],"float32"),Tensor([1, 11, 0],"float32"),Tensor([1, 11, 0],"float32"),Tensor([1, 11, 0],"float32"),Tensor([1, 11, 0],"float32"),Tensor([1, 11, 0],"float32"),], )
paddle.stack(list[Tensor([1, 11, 0],"float32"),Tensor([1, 11, 256],"float32"),Tensor([1, 11, 256],"float32"),Tensor([1, 11, 256],"float32"),Tensor([1, 11, 256],"float32"),Tensor([1, 11, 256],"float32"),], )
paddle.stack(list[Tensor([1, 11, 0],"float32"),Tensor([1, 11, 4],"float32"),Tensor([1, 11, 4],"float32"),Tensor([1, 11, 4],"float32"),Tensor([1, 11, 4],"float32"),Tensor([1, 11, 4],"float32"),], )
paddle.stack(list[Tensor([1, 11, 256],"float32"),Tensor([0, 11, 256],"float32"),Tensor([1, 11, 256],"float32"),Tensor([1, 11, 256],"float32"),Tensor([1, 11, 256],"float32"),Tensor([1, 11, 256],"float32"),], )
paddle.stack(list[Tensor([1, 11, 256],"float32"),Tensor([1, 0, 256],"float32"),Tensor([1, 11, 256],"float32"),Tensor([1, 11, 256],"float32"),Tensor([1, 11, 256],"float32"),Tensor([1, 11, 256],"float32"),], )
paddle.stack(list[Tensor([1, 11, 256],"float32"),Tensor([1, 11, 0],"float32"),Tensor([1, 11, 256],"float32"),Tensor([1, 11, 256],"float32"),Tensor([1, 11, 256],"float32"),Tensor([1, 11, 256],"float32"),], )
paddle.stack(list[Tensor([1, 11, 256],"float32"),Tensor([1, 11, 256],"float32"),Tensor([0, 11, 256],"float32"),Tensor([1, 11, 256],"float32"),Tensor([1, 11, 256],"float32"),Tensor([1, 11, 256],"float32"),], )
paddle.stack(list[Tensor([1, 11, 256],"float32"),Tensor([1, 11, 256],"float32"),Tensor([1, 0, 256],"float32"),Tensor([1, 11, 256],"float32"),Tensor([1, 11, 256],"float32"),Tensor([1, 11, 256],"float32"),], )
paddle.stack(list[Tensor([1, 11, 256],"float32"),Tensor([1, 11, 256],"float32"),Tensor([1, 11, 0],"float32"),Tensor([1, 11, 256],"float32"),Tensor([1, 11, 256],"float32"),Tensor([1, 11, 256],"float32"),], )
paddle.stack(list[Tensor([1, 11, 256],"float32"),Tensor([1, 11, 256],"float32"),Tensor([1, 11, 256],"float32"),Tensor([0, 11, 256],"float32"),Tensor([1, 11, 256],"float32"),Tensor([1, 11, 256],"float32"),], )
paddle.stack(list[Tensor([1, 11, 256],"float32"),Tensor([1, 11, 256],"float32"),Tensor([1, 11, 256],"float32"),Tensor([1, 0, 256],"float32"),Tensor([1, 11, 256],"float32"),Tensor([1, 11, 256],"float32"),], )
paddle.stack(list[Tensor([1, 11, 256],"float32"),Tensor([1, 11, 256],"float32"),Tensor([1, 11, 256],"float32"),Tensor([1, 11, 0],"float32"),Tensor([1, 11, 256],"float32"),Tensor([1, 11, 256],"float32"),], )
paddle.stack(list[Tensor([1, 11, 256],"float32"),Tensor([1, 11, 256],"float32"),Tensor([1, 11, 256],"float32"),Tensor([1, 11, 256],"float32"),Tensor([0, 11, 256],"float32"),Tensor([1, 11, 256],"float32"),], )
paddle.stack(list[Tensor([1, 11, 256],"float32"),Tensor([1, 11, 256],"float32"),Tensor([1, 11, 256],"float32"),Tensor([1, 11, 256],"float32"),Tensor([1, 0, 256],"float32"),Tensor([1, 11, 256],"float32"),], )
paddle.stack(list[Tensor([1, 11, 256],"float32"),Tensor([1, 11, 256],"float32"),Tensor([1, 11, 256],"float32"),Tensor([1, 11, 256],"float32"),Tensor([1, 11, 0],"float32"),Tensor([1, 11, 256],"float32"),], )
paddle.stack(list[Tensor([1, 11, 256],"float32"),Tensor([1, 11, 256],"float32"),Tensor([1, 11, 256],"float32"),Tensor([1, 11, 256],"float32"),Tensor([1, 11, 256],"float32"),Tensor([0, 11, 256],"float32"),], )
paddle.stack(list[Tensor([1, 11, 256],"float32"),Tensor([1, 11, 256],"float32"),Tensor([1, 11, 256],"float32"),Tensor([1, 11, 256],"float32"),Tensor([1, 11, 256],"float32"),Tensor([1, 0, 256],"float32"),], )
paddle.stack(list[Tensor([1, 11, 256],"float32"),Tensor([1, 11, 256],"float32"),Tensor([1, 11, 256],"float32"),Tensor([1, 11, 256],"float32"),Tensor([1, 11, 256],"float32"),Tensor([1, 11, 0],"float32"),], )
paddle.stack(list[Tensor([1, 11, 4],"float32"),Tensor([0, 11, 4],"float32"),Tensor([1, 11, 4],"float32"),Tensor([1, 11, 4],"float32"),Tensor([1, 11, 4],"float32"),Tensor([1, 11, 4],"float32"),], )
paddle.stack(list[Tensor([1, 11, 4],"float32"),Tensor([1, 0, 4],"float32"),Tensor([1, 11, 4],"float32"),Tensor([1, 11, 4],"float32"),Tensor([1, 11, 4],"float32"),Tensor([1, 11, 4],"float32"),], )
paddle.stack(list[Tensor([1, 11, 4],"float32"),Tensor([1, 11, 0],"float32"),Tensor([1, 11, 4],"float32"),Tensor([1, 11, 4],"float32"),Tensor([1, 11, 4],"float32"),Tensor([1, 11, 4],"float32"),], )
paddle.stack(list[Tensor([1, 11, 4],"float32"),Tensor([1, 11, 4],"float32"),Tensor([0, 11, 4],"float32"),Tensor([1, 11, 4],"float32"),Tensor([1, 11, 4],"float32"),Tensor([1, 11, 4],"float32"),], )
paddle.stack(list[Tensor([1, 11, 4],"float32"),Tensor([1, 11, 4],"float32"),Tensor([1, 0, 4],"float32"),Tensor([1, 11, 4],"float32"),Tensor([1, 11, 4],"float32"),Tensor([1, 11, 4],"float32"),], )
paddle.stack(list[Tensor([1, 11, 4],"float32"),Tensor([1, 11, 4],"float32"),Tensor([1, 11, 0],"float32"),Tensor([1, 11, 4],"float32"),Tensor([1, 11, 4],"float32"),Tensor([1, 11, 4],"float32"),], )
paddle.stack(list[Tensor([1, 11, 4],"float32"),Tensor([1, 11, 4],"float32"),Tensor([1, 11, 4],"float32"),Tensor([0, 11, 4],"float32"),Tensor([1, 11, 4],"float32"),Tensor([1, 11, 4],"float32"),], )
paddle.stack(list[Tensor([1, 11, 4],"float32"),Tensor([1, 11, 4],"float32"),Tensor([1, 11, 4],"float32"),Tensor([1, 0, 4],"float32"),Tensor([1, 11, 4],"float32"),Tensor([1, 11, 4],"float32"),], )
paddle.stack(list[Tensor([1, 11, 4],"float32"),Tensor([1, 11, 4],"float32"),Tensor([1, 11, 4],"float32"),Tensor([1, 11, 0],"float32"),Tensor([1, 11, 4],"float32"),Tensor([1, 11, 4],"float32"),], )
paddle.stack(list[Tensor([1, 11, 4],"float32"),Tensor([1, 11, 4],"float32"),Tensor([1, 11, 4],"float32"),Tensor([1, 11, 4],"float32"),Tensor([0, 11, 4],"float32"),Tensor([1, 11, 4],"float32"),], )
paddle.stack(list[Tensor([1, 11, 4],"float32"),Tensor([1, 11, 4],"float32"),Tensor([1, 11, 4],"float32"),Tensor([1, 11, 4],"float32"),Tensor([1, 0, 4],"float32"),Tensor([1, 11, 4],"float32"),], )
paddle.stack(list[Tensor([1, 11, 4],"float32"),Tensor([1, 11, 4],"float32"),Tensor([1, 11, 4],"float32"),Tensor([1, 11, 4],"float32"),Tensor([1, 11, 0],"float32"),Tensor([1, 11, 4],"float32"),], )
paddle.stack(list[Tensor([1, 11, 4],"float32"),Tensor([1, 11, 4],"float32"),Tensor([1, 11, 4],"float32"),Tensor([1, 11, 4],"float32"),Tensor([1, 11, 4],"float32"),Tensor([0, 11, 4],"float32"),], )
paddle.stack(list[Tensor([1, 11, 4],"float32"),Tensor([1, 11, 4],"float32"),Tensor([1, 11, 4],"float32"),Tensor([1, 11, 4],"float32"),Tensor([1, 11, 4],"float32"),Tensor([1, 0, 4],"float32"),], )
paddle.stack(list[Tensor([1, 11, 4],"float32"),Tensor([1, 11, 4],"float32"),Tensor([1, 11, 4],"float32"),Tensor([1, 11, 4],"float32"),Tensor([1, 11, 4],"float32"),Tensor([1, 11, 0],"float32"),], )
paddle.stack(list[Tensor([1, 128, 0],"float32"),], axis=-1, )
paddle.stack(list[Tensor([1, 2],"float32"),Tensor([0, 2],"float32"),], -1, )
paddle.stack(list[Tensor([1, 2],"float32"),Tensor([0, 2],"float32"),Tensor([1, 2],"float32"),Tensor([1, 2],"float32"),], 1, )
paddle.stack(list[Tensor([1, 2],"float32"),Tensor([0, 2],"float32"),Tensor([1, 2],"float32"),Tensor([1, 2],"float32"),Tensor([1, 2],"float32"),], 1, )
paddle.stack(list[Tensor([1, 2],"float32"),Tensor([1, 0],"float32"),], -1, )
paddle.stack(list[Tensor([1, 2],"float32"),Tensor([1, 0],"float32"),Tensor([1, 2],"float32"),Tensor([1, 2],"float32"),], 1, )
paddle.stack(list[Tensor([1, 2],"float32"),Tensor([1, 0],"float32"),Tensor([1, 2],"float32"),Tensor([1, 2],"float32"),Tensor([1, 2],"float32"),], 1, )
paddle.stack(list[Tensor([1, 2],"float32"),Tensor([1, 2],"float32"),Tensor([0, 2],"float32"),Tensor([1, 2],"float32"),], 1, )
paddle.stack(list[Tensor([1, 2],"float32"),Tensor([1, 2],"float32"),Tensor([0, 2],"float32"),Tensor([1, 2],"float32"),Tensor([1, 2],"float32"),], 1, )
paddle.stack(list[Tensor([1, 2],"float32"),Tensor([1, 2],"float32"),Tensor([1, 0],"float32"),Tensor([1, 2],"float32"),], 1, )
paddle.stack(list[Tensor([1, 2],"float32"),Tensor([1, 2],"float32"),Tensor([1, 0],"float32"),Tensor([1, 2],"float32"),Tensor([1, 2],"float32"),], 1, )
paddle.stack(list[Tensor([1, 2],"float32"),Tensor([1, 2],"float32"),Tensor([1, 2],"float32"),Tensor([0, 2],"float32"),], 1, )
paddle.stack(list[Tensor([1, 2],"float32"),Tensor([1, 2],"float32"),Tensor([1, 2],"float32"),Tensor([0, 2],"float32"),Tensor([1, 2],"float32"),], 1, )
paddle.stack(list[Tensor([1, 2],"float32"),Tensor([1, 2],"float32"),Tensor([1, 2],"float32"),Tensor([1, 0],"float32"),], 1, )
paddle.stack(list[Tensor([1, 2],"float32"),Tensor([1, 2],"float32"),Tensor([1, 2],"float32"),Tensor([1, 0],"float32"),Tensor([1, 2],"float32"),], 1, )
paddle.stack(list[Tensor([1, 2],"float32"),Tensor([1, 2],"float32"),Tensor([1, 2],"float32"),Tensor([1, 2],"float32"),Tensor([0, 2],"float32"),], 1, )
paddle.stack(list[Tensor([1, 2],"float32"),Tensor([1, 2],"float32"),Tensor([1, 2],"float32"),Tensor([1, 2],"float32"),Tensor([1, 0],"float32"),], 1, )
paddle.stack(list[Tensor([1, 25, 0],"float32"),Tensor([1, 25, 0],"float32"),], axis=-1, )
paddle.stack(list[Tensor([1, 25, 0],"float32"),Tensor([1, 25, 0],"float32"),], axis=-2, )
paddle.stack(list[Tensor([1, 25, 0],"float32"),Tensor([1, 25, 2],"float32"),], axis=-2, )
paddle.stack(list[Tensor([1, 25, 0],"float32"),Tensor([1, 25, 4],"float32"),], axis=-1, )
paddle.stack(list[Tensor([1, 25, 2],"float32"),Tensor([0, 25, 2],"float32"),], axis=-2, )
paddle.stack(list[Tensor([1, 25, 2],"float32"),Tensor([1, 0, 2],"float32"),], axis=-2, )
paddle.stack(list[Tensor([1, 25, 2],"float32"),Tensor([1, 25, 0],"float32"),], axis=-2, )
paddle.stack(list[Tensor([1, 25, 4],"float32"),Tensor([0, 25, 4],"float32"),], axis=-1, )
paddle.stack(list[Tensor([1, 25, 4],"float32"),Tensor([1, 0, 4],"float32"),], axis=-1, )
paddle.stack(list[Tensor([1, 25, 4],"float32"),Tensor([1, 25, 0],"float32"),], axis=-1, )
paddle.stack(list[Tensor([1, 3],"float32"),Tensor([0, 3],"float32"),], axis=0, )
paddle.stack(list[Tensor([1, 3],"float32"),Tensor([1, 0],"float32"),], axis=0, )
paddle.stack(list[Tensor([1, 300, 0],"float32"),Tensor([1, 300, 0],"float32"),], axis=0, )
paddle.stack(list[Tensor([1, 300, 0],"float32"),Tensor([1, 300, 4096],"float32"),], axis=0, )
paddle.stack(list[Tensor([1, 300, 4096],"float32"),Tensor([0, 300, 4096],"float32"),], axis=0, )
paddle.stack(list[Tensor([1, 300, 4096],"float32"),Tensor([1, 0, 4096],"float32"),], axis=0, )
paddle.stack(list[Tensor([1, 300, 4096],"float32"),Tensor([1, 300, 0],"float32"),], axis=0, )
paddle.stack(list[Tensor([1, 300],"float32"),Tensor([0, 300],"float32"),Tensor([1, 300],"float32"),Tensor([1, 300],"float32"),], axis=-1, )
paddle.stack(list[Tensor([1, 300],"float32"),Tensor([1, 0],"float32"),Tensor([1, 300],"float32"),Tensor([1, 300],"float32"),], axis=-1, )
paddle.stack(list[Tensor([1, 300],"float32"),Tensor([1, 300],"float32"),Tensor([0, 300],"float32"),Tensor([1, 300],"float32"),], axis=-1, )
paddle.stack(list[Tensor([1, 300],"float32"),Tensor([1, 300],"float32"),Tensor([1, 0],"float32"),Tensor([1, 300],"float32"),], axis=-1, )
paddle.stack(list[Tensor([1, 300],"float32"),Tensor([1, 300],"float32"),Tensor([1, 300],"float32"),Tensor([0, 300],"float32"),], axis=-1, )
paddle.stack(list[Tensor([1, 300],"float32"),Tensor([1, 300],"float32"),Tensor([1, 300],"float32"),Tensor([1, 0],"float32"),], axis=-1, )
paddle.stack(list[Tensor([1, 32],"float64"),Tensor([0, 32],"float64"),], axis=0, )
paddle.stack(list[Tensor([1, 32],"float64"),Tensor([0, 32],"float64"),Tensor([1, 32],"float64"),Tensor([1, 32],"float64"),Tensor([1, 32],"float64"),Tensor([1, 32],"float64"),Tensor([1, 32],"float64"),Tensor([1, 32],"float64"),Tensor([1, 32],"float64"),Tensor([1, 32],"float64"),], axis=1, )
paddle.stack(list[Tensor([1, 32],"float64"),Tensor([1, 0],"float64"),], axis=0, )
paddle.stack(list[Tensor([1, 32],"float64"),Tensor([1, 0],"float64"),Tensor([1, 32],"float64"),Tensor([1, 32],"float64"),Tensor([1, 32],"float64"),Tensor([1, 32],"float64"),Tensor([1, 32],"float64"),Tensor([1, 32],"float64"),Tensor([1, 32],"float64"),Tensor([1, 32],"float64"),], axis=1, )
paddle.stack(list[Tensor([1, 32],"float64"),Tensor([1, 32],"float64"),Tensor([0, 32],"float64"),Tensor([1, 32],"float64"),Tensor([1, 32],"float64"),Tensor([1, 32],"float64"),Tensor([1, 32],"float64"),Tensor([1, 32],"float64"),Tensor([1, 32],"float64"),Tensor([1, 32],"float64"),], axis=1, )
paddle.stack(list[Tensor([1, 32],"float64"),Tensor([1, 32],"float64"),Tensor([1, 0],"float64"),Tensor([1, 32],"float64"),Tensor([1, 32],"float64"),Tensor([1, 32],"float64"),Tensor([1, 32],"float64"),Tensor([1, 32],"float64"),Tensor([1, 32],"float64"),Tensor([1, 32],"float64"),], axis=1, )
paddle.stack(list[Tensor([1, 32],"float64"),Tensor([1, 32],"float64"),Tensor([1, 32],"float64"),Tensor([0, 32],"float64"),Tensor([1, 32],"float64"),Tensor([1, 32],"float64"),Tensor([1, 32],"float64"),Tensor([1, 32],"float64"),Tensor([1, 32],"float64"),Tensor([1, 32],"float64"),], axis=1, )
paddle.stack(list[Tensor([1, 32],"float64"),Tensor([1, 32],"float64"),Tensor([1, 32],"float64"),Tensor([1, 0],"float64"),Tensor([1, 32],"float64"),Tensor([1, 32],"float64"),Tensor([1, 32],"float64"),Tensor([1, 32],"float64"),Tensor([1, 32],"float64"),Tensor([1, 32],"float64"),], axis=1, )
paddle.stack(list[Tensor([1, 32],"float64"),Tensor([1, 32],"float64"),Tensor([1, 32],"float64"),Tensor([1, 32],"float64"),Tensor([0, 32],"float64"),Tensor([1, 32],"float64"),Tensor([1, 32],"float64"),Tensor([1, 32],"float64"),Tensor([1, 32],"float64"),Tensor([1, 32],"float64"),], axis=1, )
paddle.stack(list[Tensor([1, 32],"float64"),Tensor([1, 32],"float64"),Tensor([1, 32],"float64"),Tensor([1, 32],"float64"),Tensor([1, 0],"float64"),Tensor([1, 32],"float64"),Tensor([1, 32],"float64"),Tensor([1, 32],"float64"),Tensor([1, 32],"float64"),Tensor([1, 32],"float64"),], axis=1, )
paddle.stack(list[Tensor([1, 32],"float64"),Tensor([1, 32],"float64"),Tensor([1, 32],"float64"),Tensor([1, 32],"float64"),Tensor([1, 32],"float64"),Tensor([0, 32],"float64"),Tensor([1, 32],"float64"),Tensor([1, 32],"float64"),Tensor([1, 32],"float64"),Tensor([1, 32],"float64"),], axis=1, )
paddle.stack(list[Tensor([1, 32],"float64"),Tensor([1, 32],"float64"),Tensor([1, 32],"float64"),Tensor([1, 32],"float64"),Tensor([1, 32],"float64"),Tensor([1, 0],"float64"),Tensor([1, 32],"float64"),Tensor([1, 32],"float64"),Tensor([1, 32],"float64"),Tensor([1, 32],"float64"),], axis=1, )
paddle.stack(list[Tensor([1, 32],"float64"),Tensor([1, 32],"float64"),Tensor([1, 32],"float64"),Tensor([1, 32],"float64"),Tensor([1, 32],"float64"),Tensor([1, 32],"float64"),Tensor([0, 32],"float64"),Tensor([1, 32],"float64"),Tensor([1, 32],"float64"),Tensor([1, 32],"float64"),], axis=1, )
paddle.stack(list[Tensor([1, 32],"float64"),Tensor([1, 32],"float64"),Tensor([1, 32],"float64"),Tensor([1, 32],"float64"),Tensor([1, 32],"float64"),Tensor([1, 32],"float64"),Tensor([1, 0],"float64"),Tensor([1, 32],"float64"),Tensor([1, 32],"float64"),Tensor([1, 32],"float64"),], axis=1, )
paddle.stack(list[Tensor([1, 32],"float64"),Tensor([1, 32],"float64"),Tensor([1, 32],"float64"),Tensor([1, 32],"float64"),Tensor([1, 32],"float64"),Tensor([1, 32],"float64"),Tensor([1, 32],"float64"),Tensor([0, 32],"float64"),Tensor([1, 32],"float64"),Tensor([1, 32],"float64"),], axis=1, )
paddle.stack(list[Tensor([1, 32],"float64"),Tensor([1, 32],"float64"),Tensor([1, 32],"float64"),Tensor([1, 32],"float64"),Tensor([1, 32],"float64"),Tensor([1, 32],"float64"),Tensor([1, 32],"float64"),Tensor([1, 0],"float64"),Tensor([1, 32],"float64"),Tensor([1, 32],"float64"),], axis=1, )
paddle.stack(list[Tensor([1, 32],"float64"),Tensor([1, 32],"float64"),Tensor([1, 32],"float64"),Tensor([1, 32],"float64"),Tensor([1, 32],"float64"),Tensor([1, 32],"float64"),Tensor([1, 32],"float64"),Tensor([1, 32],"float64"),Tensor([0, 32],"float64"),Tensor([1, 32],"float64"),], axis=1, )
paddle.stack(list[Tensor([1, 32],"float64"),Tensor([1, 32],"float64"),Tensor([1, 32],"float64"),Tensor([1, 32],"float64"),Tensor([1, 32],"float64"),Tensor([1, 32],"float64"),Tensor([1, 32],"float64"),Tensor([1, 32],"float64"),Tensor([1, 0],"float64"),Tensor([1, 32],"float64"),], axis=1, )
paddle.stack(list[Tensor([1, 32],"float64"),Tensor([1, 32],"float64"),Tensor([1, 32],"float64"),Tensor([1, 32],"float64"),Tensor([1, 32],"float64"),Tensor([1, 32],"float64"),Tensor([1, 32],"float64"),Tensor([1, 32],"float64"),Tensor([1, 32],"float64"),Tensor([0, 32],"float64"),], axis=1, )
paddle.stack(list[Tensor([1, 32],"float64"),Tensor([1, 32],"float64"),Tensor([1, 32],"float64"),Tensor([1, 32],"float64"),Tensor([1, 32],"float64"),Tensor([1, 32],"float64"),Tensor([1, 32],"float64"),Tensor([1, 32],"float64"),Tensor([1, 32],"float64"),Tensor([1, 0],"float64"),], axis=1, )
paddle.stack(list[Tensor([1, 400, 0, 176],"float32"),Tensor([1, 400, 0, 176],"float32"),Tensor([1, 400, 0, 176],"float32"),Tensor([1, 400, 0, 176],"float32"),Tensor([1, 400, 0, 176],"float32"),Tensor([1, 400, 0, 176],"float32"),], )
paddle.stack(list[Tensor([1, 400, 0, 176],"float32"),Tensor([1, 400, 176, 176],"float32"),Tensor([1, 400, 176, 176],"float32"),Tensor([1, 400, 176, 176],"float32"),Tensor([1, 400, 176, 176],"float32"),Tensor([1, 400, 176, 176],"float32"),], )
paddle.stack(list[Tensor([1, 400, 0, 184],"float32"),Tensor([1, 400, 0, 184],"float32"),Tensor([1, 400, 0, 184],"float32"),Tensor([1, 400, 0, 184],"float32"),Tensor([1, 400, 0, 184],"float32"),Tensor([1, 400, 0, 184],"float32"),], )
paddle.stack(list[Tensor([1, 400, 0, 184],"float32"),Tensor([1, 400, 184, 184],"float32"),Tensor([1, 400, 184, 184],"float32"),Tensor([1, 400, 184, 184],"float32"),Tensor([1, 400, 184, 184],"float32"),Tensor([1, 400, 184, 184],"float32"),], )
paddle.stack(list[Tensor([1, 400, 176, 0],"float32"),Tensor([1, 400, 176, 0],"float32"),Tensor([1, 400, 176, 0],"float32"),Tensor([1, 400, 176, 0],"float32"),Tensor([1, 400, 176, 0],"float32"),Tensor([1, 400, 176, 0],"float32"),], )
paddle.stack(list[Tensor([1, 400, 176, 0],"float32"),Tensor([1, 400, 176, 176],"float32"),Tensor([1, 400, 176, 176],"float32"),Tensor([1, 400, 176, 176],"float32"),Tensor([1, 400, 176, 176],"float32"),Tensor([1, 400, 176, 176],"float32"),], )
paddle.stack(list[Tensor([1, 400, 176, 176],"float32"),Tensor([0, 400, 176, 176],"float32"),Tensor([1, 400, 176, 176],"float32"),Tensor([1, 400, 176, 176],"float32"),Tensor([1, 400, 176, 176],"float32"),Tensor([1, 400, 176, 176],"float32"),], )
paddle.stack(list[Tensor([1, 400, 176, 176],"float32"),Tensor([1, 0, 176, 176],"float32"),Tensor([1, 400, 176, 176],"float32"),Tensor([1, 400, 176, 176],"float32"),Tensor([1, 400, 176, 176],"float32"),Tensor([1, 400, 176, 176],"float32"),], )
paddle.stack(list[Tensor([1, 400, 176, 176],"float32"),Tensor([1, 400, 0, 176],"float32"),Tensor([1, 400, 176, 176],"float32"),Tensor([1, 400, 176, 176],"float32"),Tensor([1, 400, 176, 176],"float32"),Tensor([1, 400, 176, 176],"float32"),], )
paddle.stack(list[Tensor([1, 400, 176, 176],"float32"),Tensor([1, 400, 176, 0],"float32"),Tensor([1, 400, 176, 176],"float32"),Tensor([1, 400, 176, 176],"float32"),Tensor([1, 400, 176, 176],"float32"),Tensor([1, 400, 176, 176],"float32"),], )
paddle.stack(list[Tensor([1, 400, 176, 176],"float32"),Tensor([1, 400, 176, 176],"float32"),Tensor([0, 400, 176, 176],"float32"),Tensor([1, 400, 176, 176],"float32"),Tensor([1, 400, 176, 176],"float32"),Tensor([1, 400, 176, 176],"float32"),], )
paddle.stack(list[Tensor([1, 400, 176, 176],"float32"),Tensor([1, 400, 176, 176],"float32"),Tensor([1, 0, 176, 176],"float32"),Tensor([1, 400, 176, 176],"float32"),Tensor([1, 400, 176, 176],"float32"),Tensor([1, 400, 176, 176],"float32"),], )
paddle.stack(list[Tensor([1, 400, 176, 176],"float32"),Tensor([1, 400, 176, 176],"float32"),Tensor([1, 400, 0, 176],"float32"),Tensor([1, 400, 176, 176],"float32"),Tensor([1, 400, 176, 176],"float32"),Tensor([1, 400, 176, 176],"float32"),], )
paddle.stack(list[Tensor([1, 400, 176, 176],"float32"),Tensor([1, 400, 176, 176],"float32"),Tensor([1, 400, 176, 0],"float32"),Tensor([1, 400, 176, 176],"float32"),Tensor([1, 400, 176, 176],"float32"),Tensor([1, 400, 176, 176],"float32"),], )
paddle.stack(list[Tensor([1, 400, 176, 176],"float32"),Tensor([1, 400, 176, 176],"float32"),Tensor([1, 400, 176, 176],"float32"),Tensor([0, 400, 176, 176],"float32"),Tensor([1, 400, 176, 176],"float32"),Tensor([1, 400, 176, 176],"float32"),], )
paddle.stack(list[Tensor([1, 400, 176, 176],"float32"),Tensor([1, 400, 176, 176],"float32"),Tensor([1, 400, 176, 176],"float32"),Tensor([1, 0, 176, 176],"float32"),Tensor([1, 400, 176, 176],"float32"),Tensor([1, 400, 176, 176],"float32"),], )
paddle.stack(list[Tensor([1, 400, 176, 176],"float32"),Tensor([1, 400, 176, 176],"float32"),Tensor([1, 400, 176, 176],"float32"),Tensor([1, 400, 0, 176],"float32"),Tensor([1, 400, 176, 176],"float32"),Tensor([1, 400, 176, 176],"float32"),], )
paddle.stack(list[Tensor([1, 400, 176, 176],"float32"),Tensor([1, 400, 176, 176],"float32"),Tensor([1, 400, 176, 176],"float32"),Tensor([1, 400, 176, 0],"float32"),Tensor([1, 400, 176, 176],"float32"),Tensor([1, 400, 176, 176],"float32"),], )
paddle.stack(list[Tensor([1, 400, 176, 176],"float32"),Tensor([1, 400, 176, 176],"float32"),Tensor([1, 400, 176, 176],"float32"),Tensor([1, 400, 176, 176],"float32"),Tensor([0, 400, 176, 176],"float32"),Tensor([1, 400, 176, 176],"float32"),], )
paddle.stack(list[Tensor([1, 400, 176, 176],"float32"),Tensor([1, 400, 176, 176],"float32"),Tensor([1, 400, 176, 176],"float32"),Tensor([1, 400, 176, 176],"float32"),Tensor([1, 0, 176, 176],"float32"),Tensor([1, 400, 176, 176],"float32"),], )
paddle.stack(list[Tensor([1, 400, 176, 176],"float32"),Tensor([1, 400, 176, 176],"float32"),Tensor([1, 400, 176, 176],"float32"),Tensor([1, 400, 176, 176],"float32"),Tensor([1, 400, 0, 176],"float32"),Tensor([1, 400, 176, 176],"float32"),], )
paddle.stack(list[Tensor([1, 400, 176, 176],"float32"),Tensor([1, 400, 176, 176],"float32"),Tensor([1, 400, 176, 176],"float32"),Tensor([1, 400, 176, 176],"float32"),Tensor([1, 400, 176, 0],"float32"),Tensor([1, 400, 176, 176],"float32"),], )
paddle.stack(list[Tensor([1, 400, 176, 176],"float32"),Tensor([1, 400, 176, 176],"float32"),Tensor([1, 400, 176, 176],"float32"),Tensor([1, 400, 176, 176],"float32"),Tensor([1, 400, 176, 176],"float32"),Tensor([0, 400, 176, 176],"float32"),], )
paddle.stack(list[Tensor([1, 400, 176, 176],"float32"),Tensor([1, 400, 176, 176],"float32"),Tensor([1, 400, 176, 176],"float32"),Tensor([1, 400, 176, 176],"float32"),Tensor([1, 400, 176, 176],"float32"),Tensor([1, 0, 176, 176],"float32"),], )
paddle.stack(list[Tensor([1, 400, 176, 176],"float32"),Tensor([1, 400, 176, 176],"float32"),Tensor([1, 400, 176, 176],"float32"),Tensor([1, 400, 176, 176],"float32"),Tensor([1, 400, 176, 176],"float32"),Tensor([1, 400, 0, 176],"float32"),], )
paddle.stack(list[Tensor([1, 400, 176, 176],"float32"),Tensor([1, 400, 176, 176],"float32"),Tensor([1, 400, 176, 176],"float32"),Tensor([1, 400, 176, 176],"float32"),Tensor([1, 400, 176, 176],"float32"),Tensor([1, 400, 176, 0],"float32"),], )
paddle.stack(list[Tensor([1, 400, 184, 0],"float32"),Tensor([1, 400, 184, 0],"float32"),Tensor([1, 400, 184, 0],"float32"),Tensor([1, 400, 184, 0],"float32"),Tensor([1, 400, 184, 0],"float32"),Tensor([1, 400, 184, 0],"float32"),], )
paddle.stack(list[Tensor([1, 400, 184, 0],"float32"),Tensor([1, 400, 184, 184],"float32"),Tensor([1, 400, 184, 184],"float32"),Tensor([1, 400, 184, 184],"float32"),Tensor([1, 400, 184, 184],"float32"),Tensor([1, 400, 184, 184],"float32"),], )
paddle.stack(list[Tensor([1, 400, 184, 184],"float32"),Tensor([0, 400, 184, 184],"float32"),Tensor([1, 400, 184, 184],"float32"),Tensor([1, 400, 184, 184],"float32"),Tensor([1, 400, 184, 184],"float32"),Tensor([1, 400, 184, 184],"float32"),], )
paddle.stack(list[Tensor([1, 400, 184, 184],"float32"),Tensor([1, 0, 184, 184],"float32"),Tensor([1, 400, 184, 184],"float32"),Tensor([1, 400, 184, 184],"float32"),Tensor([1, 400, 184, 184],"float32"),Tensor([1, 400, 184, 184],"float32"),], )
paddle.stack(list[Tensor([1, 400, 184, 184],"float32"),Tensor([1, 400, 0, 184],"float32"),Tensor([1, 400, 184, 184],"float32"),Tensor([1, 400, 184, 184],"float32"),Tensor([1, 400, 184, 184],"float32"),Tensor([1, 400, 184, 184],"float32"),], )
paddle.stack(list[Tensor([1, 400, 184, 184],"float32"),Tensor([1, 400, 184, 0],"float32"),Tensor([1, 400, 184, 184],"float32"),Tensor([1, 400, 184, 184],"float32"),Tensor([1, 400, 184, 184],"float32"),Tensor([1, 400, 184, 184],"float32"),], )
paddle.stack(list[Tensor([1, 400, 184, 184],"float32"),Tensor([1, 400, 184, 184],"float32"),Tensor([0, 400, 184, 184],"float32"),Tensor([1, 400, 184, 184],"float32"),Tensor([1, 400, 184, 184],"float32"),Tensor([1, 400, 184, 184],"float32"),], )
paddle.stack(list[Tensor([1, 400, 184, 184],"float32"),Tensor([1, 400, 184, 184],"float32"),Tensor([1, 0, 184, 184],"float32"),Tensor([1, 400, 184, 184],"float32"),Tensor([1, 400, 184, 184],"float32"),Tensor([1, 400, 184, 184],"float32"),], )
paddle.stack(list[Tensor([1, 400, 184, 184],"float32"),Tensor([1, 400, 184, 184],"float32"),Tensor([1, 400, 0, 184],"float32"),Tensor([1, 400, 184, 184],"float32"),Tensor([1, 400, 184, 184],"float32"),Tensor([1, 400, 184, 184],"float32"),], )
paddle.stack(list[Tensor([1, 400, 184, 184],"float32"),Tensor([1, 400, 184, 184],"float32"),Tensor([1, 400, 184, 0],"float32"),Tensor([1, 400, 184, 184],"float32"),Tensor([1, 400, 184, 184],"float32"),Tensor([1, 400, 184, 184],"float32"),], )
paddle.stack(list[Tensor([1, 400, 184, 184],"float32"),Tensor([1, 400, 184, 184],"float32"),Tensor([1, 400, 184, 184],"float32"),Tensor([0, 400, 184, 184],"float32"),Tensor([1, 400, 184, 184],"float32"),Tensor([1, 400, 184, 184],"float32"),], )
paddle.stack(list[Tensor([1, 400, 184, 184],"float32"),Tensor([1, 400, 184, 184],"float32"),Tensor([1, 400, 184, 184],"float32"),Tensor([1, 0, 184, 184],"float32"),Tensor([1, 400, 184, 184],"float32"),Tensor([1, 400, 184, 184],"float32"),], )
paddle.stack(list[Tensor([1, 400, 184, 184],"float32"),Tensor([1, 400, 184, 184],"float32"),Tensor([1, 400, 184, 184],"float32"),Tensor([1, 400, 0, 184],"float32"),Tensor([1, 400, 184, 184],"float32"),Tensor([1, 400, 184, 184],"float32"),], )
paddle.stack(list[Tensor([1, 400, 184, 184],"float32"),Tensor([1, 400, 184, 184],"float32"),Tensor([1, 400, 184, 184],"float32"),Tensor([1, 400, 184, 0],"float32"),Tensor([1, 400, 184, 184],"float32"),Tensor([1, 400, 184, 184],"float32"),], )
paddle.stack(list[Tensor([1, 400, 184, 184],"float32"),Tensor([1, 400, 184, 184],"float32"),Tensor([1, 400, 184, 184],"float32"),Tensor([1, 400, 184, 184],"float32"),Tensor([0, 400, 184, 184],"float32"),Tensor([1, 400, 184, 184],"float32"),], )
paddle.stack(list[Tensor([1, 400, 184, 184],"float32"),Tensor([1, 400, 184, 184],"float32"),Tensor([1, 400, 184, 184],"float32"),Tensor([1, 400, 184, 184],"float32"),Tensor([1, 0, 184, 184],"float32"),Tensor([1, 400, 184, 184],"float32"),], )
paddle.stack(list[Tensor([1, 400, 184, 184],"float32"),Tensor([1, 400, 184, 184],"float32"),Tensor([1, 400, 184, 184],"float32"),Tensor([1, 400, 184, 184],"float32"),Tensor([1, 400, 0, 184],"float32"),Tensor([1, 400, 184, 184],"float32"),], )
paddle.stack(list[Tensor([1, 400, 184, 184],"float32"),Tensor([1, 400, 184, 184],"float32"),Tensor([1, 400, 184, 184],"float32"),Tensor([1, 400, 184, 184],"float32"),Tensor([1, 400, 184, 0],"float32"),Tensor([1, 400, 184, 184],"float32"),], )
paddle.stack(list[Tensor([1, 400, 184, 184],"float32"),Tensor([1, 400, 184, 184],"float32"),Tensor([1, 400, 184, 184],"float32"),Tensor([1, 400, 184, 184],"float32"),Tensor([1, 400, 184, 184],"float32"),Tensor([0, 400, 184, 184],"float32"),], )
paddle.stack(list[Tensor([1, 400, 184, 184],"float32"),Tensor([1, 400, 184, 184],"float32"),Tensor([1, 400, 184, 184],"float32"),Tensor([1, 400, 184, 184],"float32"),Tensor([1, 400, 184, 184],"float32"),Tensor([1, 0, 184, 184],"float32"),], )
paddle.stack(list[Tensor([1, 400, 184, 184],"float32"),Tensor([1, 400, 184, 184],"float32"),Tensor([1, 400, 184, 184],"float32"),Tensor([1, 400, 184, 184],"float32"),Tensor([1, 400, 184, 184],"float32"),Tensor([1, 400, 0, 184],"float32"),], )
paddle.stack(list[Tensor([1, 400, 184, 184],"float32"),Tensor([1, 400, 184, 184],"float32"),Tensor([1, 400, 184, 184],"float32"),Tensor([1, 400, 184, 184],"float32"),Tensor([1, 400, 184, 184],"float32"),Tensor([1, 400, 184, 0],"float32"),], )
paddle.stack(list[Tensor([1, 640, 0],"float32"),], )
paddle.stack(list[Tensor([1],"float32"),Tensor([0],"float32"),], )
paddle.stack(list[Tensor([1],"float32"),Tensor([0],"float32"),], 1, )
paddle.stack(list[Tensor([1],"float32"),Tensor([0],"float32"),], -1, )
paddle.stack(list[Tensor([1],"float32"),Tensor([0],"float32"),], axis=-1, )
paddle.stack(list[Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),], )
paddle.stack(list[Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.stack(list[Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], -1, )
paddle.stack(list[Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.stack(list[Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.stack(list[Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.stack(list[Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.stack(list[Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.stack(list[Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.stack(list[Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.stack(list[Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.stack(list[Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.stack(list[Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.stack(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),], )
paddle.stack(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),], )
paddle.stack(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),], -1, )
paddle.stack(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.stack(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.stack(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.stack(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.stack(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.stack(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.stack(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.stack(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.stack(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.stack(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.stack(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.stack(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.stack(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.stack(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.stack(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.stack(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),], )
paddle.stack(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),], -1, )
paddle.stack(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),], )
paddle.stack(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.stack(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.stack(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.stack(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.stack(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.stack(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.stack(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.stack(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.stack(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.stack(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.stack(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.stack(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.stack(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.stack(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.stack(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),], )
paddle.stack(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),], )
paddle.stack(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.stack(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.stack(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.stack(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.stack(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.stack(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.stack(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.stack(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.stack(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),], )
paddle.stack(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.stack(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.stack(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.stack(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.stack(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.stack(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.stack(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.stack(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.stack(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),], )
paddle.stack(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.stack(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.stack(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.stack(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.stack(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.stack(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.stack(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.stack(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),], )
paddle.stack(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),], )
paddle.stack(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.stack(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.stack(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.stack(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.stack(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.stack(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.stack(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.stack(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.stack(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.stack(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.stack(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.stack(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),], )
paddle.stack(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),], )
paddle.stack(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.stack(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.stack(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.stack(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.stack(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.stack(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.stack(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.stack(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.stack(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.stack(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.stack(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),], )
paddle.stack(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.stack(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.stack(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.stack(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.stack(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.stack(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),], )
paddle.stack(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.stack(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.stack(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.stack(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.stack(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),], )
paddle.stack(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),], )
paddle.stack(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.stack(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.stack(list[Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([0],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),Tensor([1],"float32"),], )
paddle.stack(list[Tensor([1],"int64"),Tensor([0],"int64"),], axis=1, )
paddle.stack(list[Tensor([1],"int64"),Tensor([0],"int64"),], axis=-1, )
paddle.stack(list[Tensor([10, 0, 1, 4],"float32"),Tensor([10, 0, 1, 4],"float32"),], axis=0, )
paddle.stack(list[Tensor([10, 0, 1, 4],"float32"),Tensor([10, 2, 1, 4],"float32"),], axis=0, )
paddle.stack(list[Tensor([10, 0, 10],"float64"),Tensor([10, 0, 10],"float64"),], -1, )
paddle.stack(list[Tensor([10, 0, 10],"float64"),Tensor([10, 10, 10],"float64"),], -1, )
paddle.stack(list[Tensor([10, 0],"float32"),Tensor([10, 0],"float32"),Tensor([10, 0],"float32"),Tensor([10, 0],"float32"),], axis=-1, )
paddle.stack(list[Tensor([10, 0],"float32"),Tensor([10, 10],"float32"),Tensor([10, 10],"float32"),Tensor([10, 10],"float32"),], axis=-1, )
paddle.stack(list[Tensor([10, 10, 0],"float64"),Tensor([10, 10, 0],"float64"),], -1, )
paddle.stack(list[Tensor([10, 10, 0],"float64"),Tensor([10, 10, 10],"float64"),], -1, )
paddle.stack(list[Tensor([10, 10, 10],"float64"),Tensor([0, 10, 10],"float64"),], -1, )
paddle.stack(list[Tensor([10, 10, 10],"float64"),Tensor([10, 0, 10],"float64"),], -1, )
paddle.stack(list[Tensor([10, 10, 10],"float64"),Tensor([10, 10, 0],"float64"),], -1, )
paddle.stack(list[Tensor([10, 10],"float32"),Tensor([0, 10],"float32"),Tensor([10, 10],"float32"),Tensor([10, 10],"float32"),], axis=-1, )
paddle.stack(list[Tensor([10, 10],"float32"),Tensor([10, 0],"float32"),Tensor([10, 10],"float32"),Tensor([10, 10],"float32"),], axis=-1, )
paddle.stack(list[Tensor([10, 10],"float32"),Tensor([10, 10],"float32"),Tensor([0, 10],"float32"),Tensor([10, 10],"float32"),], axis=-1, )
paddle.stack(list[Tensor([10, 10],"float32"),Tensor([10, 10],"float32"),Tensor([10, 0],"float32"),Tensor([10, 10],"float32"),], axis=-1, )
paddle.stack(list[Tensor([10, 10],"float32"),Tensor([10, 10],"float32"),Tensor([10, 10],"float32"),Tensor([0, 10],"float32"),], axis=-1, )
paddle.stack(list[Tensor([10, 10],"float32"),Tensor([10, 10],"float32"),Tensor([10, 10],"float32"),Tensor([10, 0],"float32"),], axis=-1, )
paddle.stack(list[Tensor([10, 2, 0, 4],"float32"),Tensor([10, 2, 0, 4],"float32"),], axis=0, )
paddle.stack(list[Tensor([10, 2, 0, 4],"float32"),Tensor([10, 2, 1, 4],"float32"),], axis=0, )
paddle.stack(list[Tensor([10, 2, 1, 0],"float32"),Tensor([10, 2, 1, 0],"float32"),], axis=0, )
paddle.stack(list[Tensor([10, 2, 1, 0],"float32"),Tensor([10, 2, 1, 4],"float32"),], axis=0, )
paddle.stack(list[Tensor([10, 2, 1, 4],"float32"),Tensor([0, 2, 1, 4],"float32"),], axis=0, )
paddle.stack(list[Tensor([10, 2, 1, 4],"float32"),Tensor([10, 0, 1, 4],"float32"),], axis=0, )
paddle.stack(list[Tensor([10, 2, 1, 4],"float32"),Tensor([10, 2, 0, 4],"float32"),], axis=0, )
paddle.stack(list[Tensor([10, 2, 1, 4],"float32"),Tensor([10, 2, 1, 0],"float32"),], axis=0, )
paddle.stack(list[Tensor([10],"float32"),Tensor([0],"float32"),], axis=1, )
paddle.stack(list[Tensor([10],"float32"),Tensor([0],"float32"),Tensor([10],"float32"),Tensor([10],"float32"),], -1, )
paddle.stack(list[Tensor([10],"float32"),Tensor([10],"float32"),Tensor([0],"float32"),Tensor([10],"float32"),], -1, )
paddle.stack(list[Tensor([10],"float32"),Tensor([10],"float32"),Tensor([10],"float32"),Tensor([0],"float32"),], -1, )
paddle.stack(list[Tensor([10],"int64"),Tensor([0],"int64"),], axis=0, )
paddle.stack(list[Tensor([10105, 0],"float32"),Tensor([10105, 0],"float32"),Tensor([10105, 0],"float32"),Tensor([10105, 0],"float32"),], axis=1, )
paddle.stack(list[Tensor([10105, 0],"float32"),Tensor([10105, 1],"float32"),Tensor([10105, 1],"float32"),Tensor([10105, 1],"float32"),], axis=1, )
paddle.stack(list[Tensor([10105, 0],"float32"),Tensor([10105, 10],"float32"),Tensor([10105, 10],"float32"),Tensor([10105, 10],"float32"),], axis=1, )
paddle.stack(list[Tensor([10105, 1],"float32"),Tensor([0, 1],"float32"),Tensor([10105, 1],"float32"),Tensor([10105, 1],"float32"),], axis=1, )
paddle.stack(list[Tensor([10105, 1],"float32"),Tensor([10105, 0],"float32"),Tensor([10105, 1],"float32"),Tensor([10105, 1],"float32"),], axis=1, )
paddle.stack(list[Tensor([10105, 1],"float32"),Tensor([10105, 1],"float32"),Tensor([0, 1],"float32"),Tensor([10105, 1],"float32"),], axis=1, )
paddle.stack(list[Tensor([10105, 1],"float32"),Tensor([10105, 1],"float32"),Tensor([10105, 0],"float32"),Tensor([10105, 1],"float32"),], axis=1, )
paddle.stack(list[Tensor([10105, 1],"float32"),Tensor([10105, 1],"float32"),Tensor([10105, 1],"float32"),Tensor([0, 1],"float32"),], axis=1, )
paddle.stack(list[Tensor([10105, 1],"float32"),Tensor([10105, 1],"float32"),Tensor([10105, 1],"float32"),Tensor([10105, 0],"float32"),], axis=1, )
paddle.stack(list[Tensor([10105, 10],"float32"),Tensor([0, 10],"float32"),Tensor([10105, 10],"float32"),Tensor([10105, 10],"float32"),], axis=1, )
paddle.stack(list[Tensor([10105, 10],"float32"),Tensor([10105, 0],"float32"),Tensor([10105, 10],"float32"),Tensor([10105, 10],"float32"),], axis=1, )
paddle.stack(list[Tensor([10105, 10],"float32"),Tensor([10105, 10],"float32"),Tensor([0, 10],"float32"),Tensor([10105, 10],"float32"),], axis=1, )
paddle.stack(list[Tensor([10105, 10],"float32"),Tensor([10105, 10],"float32"),Tensor([10105, 0],"float32"),Tensor([10105, 10],"float32"),], axis=1, )
paddle.stack(list[Tensor([10105, 10],"float32"),Tensor([10105, 10],"float32"),Tensor([10105, 10],"float32"),Tensor([0, 10],"float32"),], axis=1, )
paddle.stack(list[Tensor([10105, 10],"float32"),Tensor([10105, 10],"float32"),Tensor([10105, 10],"float32"),Tensor([10105, 0],"float32"),], axis=1, )
paddle.stack(list[Tensor([114, 0, 1, 32],"float16"),Tensor([114, 0, 1, 32],"float16"),], axis=0, )
paddle.stack(list[Tensor([114, 0, 1, 32],"float16"),Tensor([114, 4, 1, 32],"float16"),], axis=0, )
paddle.stack(list[Tensor([114, 4, 0, 32],"float16"),Tensor([114, 4, 0, 32],"float16"),], axis=0, )
paddle.stack(list[Tensor([114, 4, 0, 32],"float16"),Tensor([114, 4, 1, 32],"float16"),], axis=0, )
paddle.stack(list[Tensor([114, 4, 1, 0],"float16"),Tensor([114, 4, 1, 0],"float16"),], axis=0, )
paddle.stack(list[Tensor([114, 4, 1, 0],"float16"),Tensor([114, 4, 1, 32],"float16"),], axis=0, )
paddle.stack(list[Tensor([114, 4, 1, 32],"float16"),Tensor([0, 4, 1, 32],"float16"),], axis=0, )
paddle.stack(list[Tensor([114, 4, 1, 32],"float16"),Tensor([114, 0, 1, 32],"float16"),], axis=0, )
paddle.stack(list[Tensor([114, 4, 1, 32],"float16"),Tensor([114, 4, 0, 32],"float16"),], axis=0, )
paddle.stack(list[Tensor([114, 4, 1, 32],"float16"),Tensor([114, 4, 1, 0],"float16"),], axis=0, )
paddle.stack(list[Tensor([12, 0],"int64"),Tensor([12, 0],"int64"),], )
paddle.stack(list[Tensor([12, 0],"int64"),Tensor([12, 12],"int64"),], )
paddle.stack(list[Tensor([12, 12],"int64"),Tensor([0, 12],"int64"),], )
paddle.stack(list[Tensor([12, 12],"int64"),Tensor([12, 0],"int64"),], )
paddle.stack(list[Tensor([12],"float32"),Tensor([0],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),], )
paddle.stack(list[Tensor([12],"float32"),Tensor([0],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),], )
paddle.stack(list[Tensor([12],"float32"),Tensor([12],"float32"),Tensor([0],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),], )
paddle.stack(list[Tensor([12],"float32"),Tensor([12],"float32"),Tensor([0],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),], )
paddle.stack(list[Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([0],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),], )
paddle.stack(list[Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([0],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),], )
paddle.stack(list[Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([0],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),], )
paddle.stack(list[Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([0],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),], )
paddle.stack(list[Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([0],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),], )
paddle.stack(list[Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([0],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),], )
paddle.stack(list[Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([0],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),], )
paddle.stack(list[Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([0],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),], )
paddle.stack(list[Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([0],"float32"),Tensor([12],"float32"),], )
paddle.stack(list[Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([0],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),], )
paddle.stack(list[Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([0],"float32"),], )
paddle.stack(list[Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([0],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),], )
paddle.stack(list[Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([0],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),], )
paddle.stack(list[Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([0],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),], )
paddle.stack(list[Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([0],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),], )
paddle.stack(list[Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([0],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),], )
paddle.stack(list[Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([0],"float32"),Tensor([12],"float32"),], )
paddle.stack(list[Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([12],"float32"),Tensor([0],"float32"),], )
paddle.stack(list[Tensor([128, 0, 476, 4],"float32"),Tensor([128, 0, 476, 4],"float32"),Tensor([128, 0, 476, 4],"float32"),], axis=-2, )
paddle.stack(list[Tensor([128, 0, 476, 4],"float32"),Tensor([128, 32, 476, 4],"float32"),Tensor([128, 32, 476, 4],"float32"),], axis=-2, )
paddle.stack(list[Tensor([128, 0],"float16"),Tensor([128, 0],"float16"),Tensor([128, 0],"float16"),], axis=1, )
paddle.stack(list[Tensor([128, 0],"float16"),Tensor([128, 512],"float16"),Tensor([128, 512],"float16"),], axis=1, )
paddle.stack(list[Tensor([128, 0],"int32"),Tensor([128, 0],"int32"),Tensor([128, 0],"int32"),], axis=1, )
paddle.stack(list[Tensor([128, 0],"int32"),Tensor([128, 512],"int32"),Tensor([128, 512],"int32"),], axis=1, )
paddle.stack(list[Tensor([128, 32, 0, 4],"float32"),Tensor([128, 32, 0, 4],"float32"),Tensor([128, 32, 0, 4],"float32"),], axis=-2, )
paddle.stack(list[Tensor([128, 32, 0, 4],"float32"),Tensor([128, 32, 476, 4],"float32"),Tensor([128, 32, 476, 4],"float32"),], axis=-2, )
paddle.stack(list[Tensor([128, 32, 476, 0],"float32"),Tensor([128, 32, 476, 0],"float32"),Tensor([128, 32, 476, 0],"float32"),], axis=-2, )
paddle.stack(list[Tensor([128, 32, 476, 0],"float32"),Tensor([128, 32, 476, 4],"float32"),Tensor([128, 32, 476, 4],"float32"),], axis=-2, )
paddle.stack(list[Tensor([128, 32, 476, 4],"float32"),Tensor([0, 32, 476, 4],"float32"),Tensor([128, 32, 476, 4],"float32"),], axis=-2, )
paddle.stack(list[Tensor([128, 32, 476, 4],"float32"),Tensor([128, 0, 476, 4],"float32"),Tensor([128, 32, 476, 4],"float32"),], axis=-2, )
paddle.stack(list[Tensor([128, 32, 476, 4],"float32"),Tensor([128, 32, 0, 4],"float32"),Tensor([128, 32, 476, 4],"float32"),], axis=-2, )
paddle.stack(list[Tensor([128, 32, 476, 4],"float32"),Tensor([128, 32, 476, 0],"float32"),Tensor([128, 32, 476, 4],"float32"),], axis=-2, )
paddle.stack(list[Tensor([128, 32, 476, 4],"float32"),Tensor([128, 32, 476, 4],"float32"),Tensor([0, 32, 476, 4],"float32"),], axis=-2, )
paddle.stack(list[Tensor([128, 32, 476, 4],"float32"),Tensor([128, 32, 476, 4],"float32"),Tensor([128, 0, 476, 4],"float32"),], axis=-2, )
paddle.stack(list[Tensor([128, 32, 476, 4],"float32"),Tensor([128, 32, 476, 4],"float32"),Tensor([128, 32, 0, 4],"float32"),], axis=-2, )
paddle.stack(list[Tensor([128, 32, 476, 4],"float32"),Tensor([128, 32, 476, 4],"float32"),Tensor([128, 32, 476, 0],"float32"),], axis=-2, )
paddle.stack(list[Tensor([128, 512],"float16"),Tensor([0, 512],"float16"),Tensor([128, 512],"float16"),], axis=1, )
paddle.stack(list[Tensor([128, 512],"float16"),Tensor([128, 0],"float16"),Tensor([128, 512],"float16"),], axis=1, )
paddle.stack(list[Tensor([128, 512],"float16"),Tensor([128, 512],"float16"),Tensor([0, 512],"float16"),], axis=1, )
paddle.stack(list[Tensor([128, 512],"float16"),Tensor([128, 512],"float16"),Tensor([128, 0],"float16"),], axis=1, )
paddle.stack(list[Tensor([128, 512],"int32"),Tensor([0, 512],"int32"),Tensor([128, 512],"int32"),], axis=1, )
paddle.stack(list[Tensor([128, 512],"int32"),Tensor([128, 0],"int32"),Tensor([128, 512],"int32"),], axis=1, )
paddle.stack(list[Tensor([128, 512],"int32"),Tensor([128, 512],"int32"),Tensor([0, 512],"int32"),], axis=1, )
paddle.stack(list[Tensor([128, 512],"int32"),Tensor([128, 512],"int32"),Tensor([128, 0],"int32"),], axis=1, )
paddle.stack(list[Tensor([128],"int64"),Tensor([0],"int64"),], )
paddle.stack(list[Tensor([13, 0, 14],"float32"),Tensor([13, 0, 14],"float32"),Tensor([13, 0, 14],"float32"),Tensor([13, 0, 14],"float32"),], axis=1, )
paddle.stack(list[Tensor([13, 0, 14],"float32"),Tensor([13, 7, 14],"float32"),Tensor([13, 7, 14],"float32"),Tensor([13, 7, 14],"float32"),], axis=1, )
