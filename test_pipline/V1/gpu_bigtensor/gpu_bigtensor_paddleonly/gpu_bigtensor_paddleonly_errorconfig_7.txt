paddle.nn.functional.max_pool2d(Tensor([7746, 384, 38, 38],"float32"), kernel_size=5, stride=1, padding=2, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([7746, 384, 38, 38],"float32"), kernel_size=9, stride=1, padding=4, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([8, 13421773, 1, 40],"float32"), kernel_size=tuple(1,1,), stride=1, padding=0, )
paddle.nn.functional.max_pool2d(Tensor([8, 512, 1, 1048576],"float32"), kernel_size=tuple(1,1,), stride=1, padding=0, )
paddle.nn.functional.max_pool2d(Tensor([8, 512, 26215, 40],"float32"), kernel_size=tuple(1,1,), stride=1, padding=0, )
paddle.nn.functional.max_pool2d(Tensor([8273, 192, 52, 52],"float32"), kernel_size=3, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([8388608, 8, 4, 16],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=True, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([83887, 512, 10, 10],"float16"), 3, stride=1, padding=1, data_format="NCHW", )
paddle.nn.functional.max_pool2d(Tensor([8631, 384, 36, 36],"float32"), kernel_size=13, stride=1, padding=6, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([8631, 384, 36, 36],"float32"), kernel_size=5, stride=1, padding=2, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([8631, 384, 36, 36],"float32"), kernel_size=9, stride=1, padding=4, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([874, 48, 320, 320],"float32"), kernel_size=2, stride=1, padding="SAME", return_mask=False, ceil_mode=True, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([9676, 384, 34, 34],"float32"), kernel_size=13, stride=1, padding=6, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([9676, 384, 34, 34],"float32"), kernel_size=5, stride=1, padding=2, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([9676, 384, 34, 34],"float32"), kernel_size=9, stride=1, padding=4, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([992, 32, 368, 368],"float32"), kernel_size=2, stride=1, padding="SAME", return_mask=False, ceil_mode=True, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([99274, 256, 13, 13],"float32"), kernel_size=3, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(x=Tensor([1398102, 3, 32, 32],"float32"), kernel_size=list[2,2,], )
paddle.nn.functional.max_pool2d(x=Tensor([16777216, 4, 8, 8],"float32"), kernel_size=2, stride=2, padding=0, )
paddle.nn.functional.max_pool2d(x=Tensor([2, 1048577, 32, 32],"float64"), kernel_size=list[2,2,], )
paddle.nn.functional.max_pool2d(x=Tensor([2, 1048577, 32, 32],"float64"), kernel_size=list[3,3,], )
paddle.nn.functional.max_pool2d(x=Tensor([2, 1048577, 32, 32],"float64"), kernel_size=list[3,3,], padding=list[1,1,], stride=list[1,1,], )
paddle.nn.functional.max_pool2d(x=Tensor([2, 1048577, 32, 32],"float64"), kernel_size=list[3,3,], stride=list[1,1,], )
paddle.nn.functional.max_pool2d(x=Tensor([2, 1048577, 32, 32],"float64"), kernel_size=list[3,3,], stride=list[1,1,], ceil_mode=True, )
paddle.nn.functional.max_pool2d(x=Tensor([2, 1048577, 32, 32],"float64"), kernel_size=list[3,3,], stride=list[1,2,], )
paddle.nn.functional.max_pool2d(x=Tensor([2, 1048577, 32, 32],"float64"), kernel_size=list[3,3,], stride=tuple(1,2,), )
paddle.nn.functional.max_pool2d(x=Tensor([2, 2, 24, 44739243],"float32"), kernel_size=2, stride=2, padding=0, )
paddle.nn.functional.max_pool2d(x=Tensor([2, 2, 44739243, 24],"float32"), kernel_size=2, stride=2, padding=0, )
paddle.nn.functional.max_pool2d(x=Tensor([2, 2097152, 32, 32],"float32"), kernel_size=list[2,2,], )
paddle.nn.functional.max_pool2d(x=Tensor([2, 3, 11184811, 32],"float64"), kernel_size=list[2,2,], )
paddle.nn.functional.max_pool2d(x=Tensor([2, 3, 11184811, 32],"float64"), kernel_size=list[3,3,], )
paddle.nn.functional.max_pool2d(x=Tensor([2, 3, 11184811, 32],"float64"), kernel_size=list[3,3,], padding=list[1,1,], stride=list[1,1,], )
paddle.nn.functional.max_pool2d(x=Tensor([2, 3, 11184811, 32],"float64"), kernel_size=list[3,3,], stride=list[1,1,], )
paddle.nn.functional.max_pool2d(x=Tensor([2, 3, 11184811, 32],"float64"), kernel_size=list[3,3,], stride=list[1,1,], ceil_mode=True, )
paddle.nn.functional.max_pool2d(x=Tensor([2, 3, 11184811, 32],"float64"), kernel_size=list[3,3,], stride=list[1,2,], )
paddle.nn.functional.max_pool2d(x=Tensor([2, 3, 11184811, 32],"float64"), kernel_size=list[3,3,], stride=tuple(1,2,), )
paddle.nn.functional.max_pool2d(x=Tensor([2, 3, 22369622, 32],"float32"), kernel_size=list[2,2,], )
paddle.nn.functional.max_pool2d(x=Tensor([2, 3, 32, 11184811],"float64"), kernel_size=list[2,2,], )
paddle.nn.functional.max_pool2d(x=Tensor([2, 3, 32, 11184811],"float64"), kernel_size=list[3,3,], )
paddle.nn.functional.max_pool2d(x=Tensor([2, 3, 32, 11184811],"float64"), kernel_size=list[3,3,], padding=list[1,1,], stride=list[1,1,], )
paddle.nn.functional.max_pool2d(x=Tensor([2, 3, 32, 11184811],"float64"), kernel_size=list[3,3,], stride=list[1,1,], )
paddle.nn.functional.max_pool2d(x=Tensor([2, 3, 32, 11184811],"float64"), kernel_size=list[3,3,], stride=list[1,1,], ceil_mode=True, )
paddle.nn.functional.max_pool2d(x=Tensor([2, 3, 32, 11184811],"float64"), kernel_size=list[3,3,], stride=list[1,2,], )
paddle.nn.functional.max_pool2d(x=Tensor([2, 3, 32, 11184811],"float64"), kernel_size=list[3,3,], stride=tuple(1,2,), )
paddle.nn.functional.max_pool2d(x=Tensor([2, 3, 32, 22369622],"float32"), kernel_size=list[2,2,], )
paddle.nn.functional.max_pool2d(x=Tensor([2, 33554432, 8, 8],"float32"), kernel_size=2, stride=2, padding=0, )
paddle.nn.functional.max_pool2d(x=Tensor([2, 3728271, 24, 24],"float32"), kernel_size=2, stride=2, padding=0, )
paddle.nn.functional.max_pool2d(x=Tensor([2, 4, 67108864, 8],"float32"), kernel_size=2, stride=2, padding=0, )
paddle.nn.functional.max_pool2d(x=Tensor([2, 4, 8, 67108864],"float32"), kernel_size=2, stride=2, padding=0, )
paddle.nn.functional.max_pool2d(x=Tensor([3728271, 2, 24, 24],"float32"), kernel_size=2, stride=2, padding=0, )
paddle.nn.functional.max_pool2d(x=Tensor([699051, 3, 32, 32],"float64"), kernel_size=list[2,2,], )
paddle.nn.functional.max_pool2d(x=Tensor([699051, 3, 32, 32],"float64"), kernel_size=list[3,3,], )
paddle.nn.functional.max_pool2d(x=Tensor([699051, 3, 32, 32],"float64"), kernel_size=list[3,3,], padding=list[1,1,], stride=list[1,1,], )
paddle.nn.functional.max_pool2d(x=Tensor([699051, 3, 32, 32],"float64"), kernel_size=list[3,3,], stride=list[1,1,], )
paddle.nn.functional.max_pool2d(x=Tensor([699051, 3, 32, 32],"float64"), kernel_size=list[3,3,], stride=list[1,1,], ceil_mode=True, )
paddle.nn.functional.max_pool2d(x=Tensor([699051, 3, 32, 32],"float64"), kernel_size=list[3,3,], stride=list[1,2,], )
paddle.nn.functional.max_pool2d(x=Tensor([699051, 3, 32, 32],"float64"), kernel_size=list[3,3,], stride=tuple(1,2,), )
paddle.nn.functional.max_pool3d(Tensor([1, 2, 1971978, 33, 33],"float32"), kernel_size=5, stride=5, padding=0, ceil_mode=True, return_mask=True, )
paddle.nn.functional.max_pool3d(Tensor([1, 2, 6, 10845878, 33],"float32"), kernel_size=5, stride=5, padding=0, ceil_mode=True, return_mask=True, )
paddle.nn.functional.max_pool3d(Tensor([1, 2, 6, 33, 10845878],"float32"), kernel_size=5, stride=5, padding=0, ceil_mode=True, return_mask=True, )
paddle.nn.functional.max_pool3d(Tensor([1, 22369622, 4, 4, 6],"float64"), kernel_size=2, stride=2, padding=0, return_mask=True, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([1, 22369622, 4, 4, 6],"float64"), kernel_size=2, stride=2, return_mask=True, )
paddle.nn.functional.max_pool3d(Tensor([1, 26512144, 9, 6, 3],"float32"), list[5,5,5,], stride=list[1,1,1,], padding=list[0,0,0,], data_format="NDHWC", )
paddle.nn.functional.max_pool3d(Tensor([1, 29826162, 6, 8, 3],"float32"), list[3,3,3,], stride=list[1,1,1,], padding=1, data_format="NDHWC", )
paddle.nn.functional.max_pool3d(Tensor([1, 3, 29826162, 4, 6],"float64"), kernel_size=2, stride=2, padding=0, return_mask=True, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([1, 3, 29826162, 4, 6],"float64"), kernel_size=2, stride=2, return_mask=True, )
paddle.nn.functional.max_pool3d(Tensor([1, 3, 4, 29826162, 6],"float64"), kernel_size=2, stride=2, padding=0, return_mask=True, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([1, 3, 4, 29826162, 6],"float64"), kernel_size=2, stride=2, return_mask=True, )
paddle.nn.functional.max_pool3d(Tensor([1, 3, 4, 4, 44739243],"float64"), kernel_size=2, stride=2, padding=0, return_mask=True, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([1, 3, 4, 4, 44739243],"float64"), kernel_size=2, stride=2, return_mask=True, )
paddle.nn.functional.max_pool3d(Tensor([1, 3, 4, 4, 89478486],"float32"), kernel_size=2, stride=2, return_mask=True, )
paddle.nn.functional.max_pool3d(Tensor([1, 3, 4, 59652324, 6],"float32"), kernel_size=2, stride=2, return_mask=True, )
paddle.nn.functional.max_pool3d(Tensor([1, 3, 59652324, 4, 6],"float32"), kernel_size=2, stride=2, return_mask=True, )
paddle.nn.functional.max_pool3d(Tensor([1, 4, 4, 4, 67108864],"float32"), list[3,3,3,], stride=1, padding=list[0,0,0,], data_format="NDHWC", )
paddle.nn.functional.max_pool3d(Tensor([1, 4, 4, 4, 67108864],"float32"), list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], data_format="NDHWC", )
paddle.nn.functional.max_pool3d(Tensor([1, 4, 4, 67108864, 4],"float32"), list[3,3,3,], stride=1, padding=list[0,0,0,], data_format="NDHWC", )
paddle.nn.functional.max_pool3d(Tensor([1, 4, 4, 67108864, 4],"float32"), list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], data_format="NDHWC", )
paddle.nn.functional.max_pool3d(Tensor([1, 4, 67108864, 4, 4],"float32"), list[3,3,3,], stride=1, padding=list[0,0,0,], data_format="NDHWC", )
paddle.nn.functional.max_pool3d(Tensor([1, 4, 67108864, 4, 4],"float32"), list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], data_format="NDHWC", )
paddle.nn.functional.max_pool3d(Tensor([1, 44739243, 4, 4, 6],"float32"), kernel_size=2, stride=2, return_mask=True, )
paddle.nn.functional.max_pool3d(Tensor([1, 5, 35791395, 8, 3],"float32"), list[3,3,3,], stride=list[1,1,1,], padding=1, data_format="NDHWC", )
paddle.nn.functional.max_pool3d(Tensor([1, 5, 6, 47721859, 3],"float32"), list[3,3,3,], stride=list[1,1,1,], padding=1, data_format="NDHWC", )
paddle.nn.functional.max_pool3d(Tensor([1, 5, 6, 8, 17895698],"float32"), list[3,3,3,], stride=list[1,1,1,], padding=1, data_format="NDHWC", )
paddle.nn.functional.max_pool3d(Tensor([1, 6, 39768216, 6, 3],"float32"), list[5,5,5,], stride=list[1,1,1,], padding=list[0,0,0,], data_format="NDHWC", )
paddle.nn.functional.max_pool3d(Tensor([1, 6, 9, 26512144, 3],"float32"), list[5,5,5,], stride=list[1,1,1,], padding=list[0,0,0,], data_format="NDHWC", )
paddle.nn.functional.max_pool3d(Tensor([1, 6, 9, 6, 13256072],"float32"), list[5,5,5,], stride=list[1,1,1,], padding=list[0,0,0,], data_format="NDHWC", )
paddle.nn.functional.max_pool3d(Tensor([1, 657326, 6, 33, 33],"float32"), kernel_size=5, stride=5, padding=0, ceil_mode=True, return_mask=True, )
paddle.nn.functional.max_pool3d(Tensor([1, 67108864, 4, 4, 4],"float32"), list[3,3,3,], stride=1, padding=list[0,0,0,], data_format="NDHWC", )
paddle.nn.functional.max_pool3d(Tensor([1, 67108864, 4, 4, 4],"float32"), list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], data_format="NDHWC", )
paddle.nn.functional.max_pool3d(Tensor([11184811, 3, 4, 4, 4],"float64"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], return_mask=False, ceil_mode=True, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([13256072, 3, 6, 6, 3],"float32"), 3, data_format="NDHWC", )
paddle.nn.functional.max_pool3d(Tensor([1398102, 3, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([1398102, 3, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([1398102, 3, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[1,2,3,], padding=list[0,0,0,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([1398102, 3, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[2,2,2,], padding=list[0,0,0,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([1398102, 3, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=1, return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([1398102, 3, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[0,0,0,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([1398102, 3, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,0,0,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([1398102, 3, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,1,1,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([1398102, 3, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,2,1,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([1398102, 3, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=tuple(3,2,1,), padding=list[1,0,0,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([1398102, 3, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=tuple(3,2,1,), padding=tuple(1,0,0,), return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([1398102, 8, 8, 8, 3],"float64"), kernel_size=list[3,3,3,], stride=list[2,2,2,], padding=list[0,0,0,], return_mask=False, ceil_mode=False, data_format="NDHWC", name=None, )
paddle.nn.functional.max_pool3d(Tensor([14913081, 3, 4, 4, 6],"float32"), kernel_size=2, stride=2, return_mask=True, )
paddle.nn.functional.max_pool3d(Tensor([16777216, 4, 4, 4, 4],"float32"), list[3,3,3,], stride=1, padding=list[0,0,0,], data_format="NDHWC", )
paddle.nn.functional.max_pool3d(Tensor([16777216, 4, 4, 4, 4],"float32"), list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], data_format="NDHWC", )
paddle.nn.functional.max_pool3d(Tensor([2, 11362348, 7, 9, 3],"float32"), list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], data_format="NDHWC", )
paddle.nn.functional.max_pool3d(Tensor([2, 16777217, 4, 4, 4],"float64"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], return_mask=False, ceil_mode=True, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 19884108, 6, 6, 3],"float32"), 3, data_format="NDHWC", )
paddle.nn.functional.max_pool3d(Tensor([2, 2097153, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 2097153, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 2097153, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[1,2,3,], padding=list[0,0,0,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 2097153, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[2,2,2,], padding=list[0,0,0,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 2097153, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=1, return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 2097153, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[0,0,0,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 2097153, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,0,0,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 2097153, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,1,1,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 2097153, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,2,1,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 2097153, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=tuple(3,2,1,), padding=list[1,0,0,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 2097153, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=tuple(3,2,1,), padding=tuple(1,0,0,), return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 11184811, 8, 8],"float32"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 22369622, 4, 4],"float64"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], return_mask=False, ceil_mode=True, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 32, 32, 699051],"float32"), kernel_size=2, stride=2, padding=0, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 32, 32, 699051],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=True, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 32, 32, 699051],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 32, 32, 699051],"float32"), kernel_size=2, stride=2, padding=list[0,0,0,0,0,0,], )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 32, 32, 699051],"float32"), kernel_size=2, stride=2, padding=list[list[0,0,],list[0,0,],list[0,0,],list[0,0,],list[0,0,],], )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 32, 32, 699051],"float32"), kernel_size=2, stride=None, padding="SAME", return_mask=True, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 32, 32, 699051],"float32"), kernel_size=2, stride=None, padding=0, return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 32, 32, 699051],"float32"), kernel_size=2, stride=None, padding=0, return_mask=False, ceil_mode=True, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 32, 699051, 32],"float32"), kernel_size=2, stride=2, padding=0, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 32, 699051, 32],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=True, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 32, 699051, 32],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 32, 699051, 32],"float32"), kernel_size=2, stride=2, padding=list[0,0,0,0,0,0,], )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 32, 699051, 32],"float32"), kernel_size=2, stride=2, padding=list[list[0,0,],list[0,0,],list[0,0,],list[0,0,],list[0,0,],], )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 32, 699051, 32],"float32"), kernel_size=2, stride=None, padding="SAME", return_mask=True, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 32, 699051, 32],"float32"), kernel_size=2, stride=None, padding=0, return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 32, 699051, 32],"float32"), kernel_size=2, stride=None, padding=0, return_mask=False, ceil_mode=True, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 39768216, 6, 3],"float32"), 3, data_format="NDHWC", )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 4, 22369622, 4],"float64"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], return_mask=False, ceil_mode=True, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 4, 4, 22369622],"float64"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], return_mask=False, ceil_mode=True, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 5592406, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 5592406, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 5592406, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[1,2,3,], padding=list[0,0,0,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 5592406, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[2,2,2,], padding=list[0,0,0,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 5592406, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=1, return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 5592406, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[0,0,0,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 5592406, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,0,0,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 5592406, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,1,1,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 5592406, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,2,1,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 5592406, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=tuple(3,2,1,), padding=list[1,0,0,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 5592406, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=tuple(3,2,1,), padding=tuple(1,0,0,), return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 6, 39768216, 3],"float32"), 3, data_format="NDHWC", )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 6, 6, 19884108],"float32"), 3, data_format="NDHWC", )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 699051, 32, 32],"float32"), kernel_size=2, stride=2, padding=0, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 699051, 32, 32],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=True, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 699051, 32, 32],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 699051, 32, 32],"float32"), kernel_size=2, stride=2, padding=list[0,0,0,0,0,0,], )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 699051, 32, 32],"float32"), kernel_size=2, stride=2, padding=list[list[0,0,],list[0,0,],list[0,0,],list[0,0,],list[0,0,],], )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 699051, 32, 32],"float32"), kernel_size=2, stride=None, padding="SAME", return_mask=True, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 699051, 32, 32],"float32"), kernel_size=2, stride=None, padding=0, return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 699051, 32, 32],"float32"), kernel_size=2, stride=None, padding=0, return_mask=False, ceil_mode=True, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 8, 11184811, 8],"float32"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 8, 5592406, 8],"float64"), kernel_size=list[3,3,3,], stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 8, 5592406, 8],"float64"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 8, 5592406, 8],"float64"), kernel_size=list[3,3,3,], stride=list[1,2,3,], padding=list[0,0,0,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 8, 5592406, 8],"float64"), kernel_size=list[3,3,3,], stride=list[2,2,2,], padding=list[0,0,0,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 8, 5592406, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=1, return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 8, 5592406, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[0,0,0,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 8, 5592406, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,0,0,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 8, 5592406, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,1,1,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 8, 5592406, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,2,1,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 8, 5592406, 8],"float64"), kernel_size=list[3,3,3,], stride=tuple(3,2,1,), padding=list[1,0,0,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 8, 5592406, 8],"float64"), kernel_size=list[3,3,3,], stride=tuple(3,2,1,), padding=tuple(1,0,0,), return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 8, 8, 11184811],"float32"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 8, 8, 5592406],"float64"), kernel_size=list[3,3,3,], stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 8, 8, 5592406],"float64"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 8, 8, 5592406],"float64"), kernel_size=list[3,3,3,], stride=list[1,2,3,], padding=list[0,0,0,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 8, 8, 5592406],"float64"), kernel_size=list[3,3,3,], stride=list[2,2,2,], padding=list[0,0,0,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 8, 8, 5592406],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=1, return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 8, 8, 5592406],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[0,0,0,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 8, 8, 5592406],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,0,0,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 8, 8, 5592406],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,1,1,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 8, 8, 5592406],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,2,1,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 8, 8, 5592406],"float64"), kernel_size=list[3,3,3,], stride=tuple(3,2,1,), padding=list[1,0,0,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 8, 8, 5592406],"float64"), kernel_size=list[3,3,3,], stride=tuple(3,2,1,), padding=tuple(1,0,0,), return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 32, 32, 32, 65536],"float32"), kernel_size=2, stride=2, padding=0, data_format="NDHWC", return_mask=False, )
paddle.nn.functional.max_pool3d(Tensor([2, 32, 32, 699051, 3],"float32"), kernel_size=2, stride=2, padding=0, data_format="NDHWC", return_mask=False, )
paddle.nn.functional.max_pool3d(Tensor([2, 32, 699051, 32, 3],"float32"), kernel_size=2, stride=2, padding=0, data_format="NDHWC", return_mask=False, )
paddle.nn.functional.max_pool3d(Tensor([2, 4194304, 8, 8, 8],"float32"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 5592406, 8, 8, 3],"float64"), kernel_size=list[3,3,3,], stride=list[2,2,2,], padding=list[0,0,0,], return_mask=False, ceil_mode=False, data_format="NDHWC", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 6, 13256072, 9, 3],"float32"), list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], data_format="NDHWC", )
paddle.nn.functional.max_pool3d(Tensor([2, 6, 7, 17043522, 3],"float32"), list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], data_format="NDHWC", )
paddle.nn.functional.max_pool3d(Tensor([2, 6, 7, 9, 5681174],"float32"), list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], data_format="NDHWC", )
paddle.nn.functional.max_pool3d(Tensor([2, 65536, 32, 32, 32],"float32"), kernel_size=2, stride=2, padding=0, )
paddle.nn.functional.max_pool3d(Tensor([2, 65536, 32, 32, 32],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=True, )
paddle.nn.functional.max_pool3d(Tensor([2, 65536, 32, 32, 32],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 65536, 32, 32, 32],"float32"), kernel_size=2, stride=2, padding=list[0,0,0,0,0,0,], )
paddle.nn.functional.max_pool3d(Tensor([2, 65536, 32, 32, 32],"float32"), kernel_size=2, stride=2, padding=list[list[0,0,],list[0,0,],list[0,0,],list[0,0,],list[0,0,],], )
paddle.nn.functional.max_pool3d(Tensor([2, 65536, 32, 32, 32],"float32"), kernel_size=2, stride=None, padding="SAME", return_mask=True, )
paddle.nn.functional.max_pool3d(Tensor([2, 65536, 32, 32, 32],"float32"), kernel_size=2, stride=None, padding=0, return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 65536, 32, 32, 32],"float32"), kernel_size=2, stride=None, padding=0, return_mask=False, ceil_mode=True, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 699051, 32, 32, 3],"float32"), kernel_size=2, stride=2, padding=0, data_format="NDHWC", return_mask=False, )
paddle.nn.functional.max_pool3d(Tensor([2, 8, 5592406, 8, 3],"float64"), kernel_size=list[3,3,3,], stride=list[2,2,2,], padding=list[0,0,0,], return_mask=False, ceil_mode=False, data_format="NDHWC", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 8, 8, 5592406, 3],"float64"), kernel_size=list[3,3,3,], stride=list[2,2,2,], padding=list[0,0,0,], return_mask=False, ceil_mode=False, data_format="NDHWC", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 8, 8, 8, 2097153],"float64"), kernel_size=list[3,3,3,], stride=list[2,2,2,], padding=list[0,0,0,], return_mask=False, ceil_mode=False, data_format="NDHWC", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2796203, 3, 8, 8, 8],"float32"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([328663, 2, 6, 33, 33],"float32"), kernel_size=5, stride=5, padding=0, ceil_mode=True, return_mask=True, )
paddle.nn.functional.max_pool3d(Tensor([3787450, 6, 7, 9, 3],"float32"), list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], data_format="NDHWC", )
paddle.nn.functional.max_pool3d(Tensor([43691, 3, 32, 32, 32],"float32"), kernel_size=2, stride=2, padding=0, )
paddle.nn.functional.max_pool3d(Tensor([43691, 3, 32, 32, 32],"float32"), kernel_size=2, stride=2, padding=0, ceil_mode=True, )
paddle.nn.functional.max_pool3d(Tensor([43691, 3, 32, 32, 32],"float32"), kernel_size=2, stride=2, padding=0, return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([43691, 3, 32, 32, 32],"float32"), kernel_size=2, stride=2, padding=list[0,0,0,0,0,0,], )
paddle.nn.functional.max_pool3d(Tensor([43691, 3, 32, 32, 32],"float32"), kernel_size=2, stride=2, padding=list[list[0,0,],list[0,0,],list[0,0,],list[0,0,],list[0,0,],], )
paddle.nn.functional.max_pool3d(Tensor([43691, 3, 32, 32, 32],"float32"), kernel_size=2, stride=None, padding="SAME", return_mask=True, )
paddle.nn.functional.max_pool3d(Tensor([43691, 3, 32, 32, 32],"float32"), kernel_size=2, stride=None, padding=0, return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([43691, 3, 32, 32, 32],"float32"), kernel_size=2, stride=None, padding=0, return_mask=False, ceil_mode=True, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([43691, 32, 32, 32, 3],"float32"), kernel_size=2, stride=2, padding=0, data_format="NDHWC", return_mask=False, )
paddle.nn.functional.max_pool3d(Tensor([4418691, 6, 9, 6, 3],"float32"), list[5,5,5,], stride=list[1,1,1,], padding=list[0,0,0,], data_format="NDHWC", )
paddle.nn.functional.max_pool3d(Tensor([5965233, 5, 6, 8, 3],"float32"), list[3,3,3,], stride=list[1,1,1,], padding=1, data_format="NDHWC", )
paddle.nn.functional.max_pool3d(Tensor([7456541, 3, 4, 4, 6],"float64"), kernel_size=2, stride=2, padding=0, return_mask=True, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([7456541, 3, 4, 4, 6],"float64"), kernel_size=2, stride=2, return_mask=True, )
paddle.nn.functional.max_pool3d(Tensor([8, 2675, 16, 112, 112],"float32"), kernel_size=tuple(3,3,3,), stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([8, 64, 16, 112, 4682],"float32"), kernel_size=tuple(3,3,3,), stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([8, 64, 16, 4682, 112],"float32"), kernel_size=tuple(3,3,3,), stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([8, 64, 669, 112, 112],"float32"), kernel_size=tuple(3,3,3,), stride=2, padding=1, return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(x=Tensor([1070, 320, 4, 56, 56],"float32"), kernel_size=list[1,1,1,], stride=list[1,1,1,], padding=list[0,0,0,], data_format="NCDHW", )
paddle.nn.functional.max_pool3d(x=Tensor([1338, 32, 32, 56, 56],"float32"), kernel_size=list[1,1,1,], stride=list[1,1,1,], padding=list[0,0,0,], data_format="NCDHW", )
paddle.nn.functional.max_pool3d(x=Tensor([1338, 64, 4, 112, 112],"float32"), kernel_size=list[1,3,3,], stride=list[1,2,2,], padding=list[0,1,1,], data_format="NCDHW", )
paddle.nn.functional.max_pool3d(x=Tensor([1338, 8, 32, 112, 112],"float32"), kernel_size=list[1,3,3,], stride=list[1,2,2,], padding=list[0,1,1,], data_format="NCDHW", )
paddle.nn.functional.max_pool3d(x=Tensor([1398102, 3, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=2, padding=1, )
paddle.nn.functional.max_pool3d(x=Tensor([1398102, 3, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], )
paddle.nn.functional.max_pool3d(x=Tensor([1398102, 3, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], ceil_mode=True, )
paddle.nn.functional.max_pool3d(x=Tensor([1398102, 3, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[1,2,3,], padding=list[0,0,0,], )
paddle.nn.functional.max_pool3d(x=Tensor([1398102, 3, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[2,2,2,], padding=list[0,0,0,], )
paddle.nn.functional.max_pool3d(x=Tensor([1398102, 3, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=1, )
paddle.nn.functional.max_pool3d(x=Tensor([1398102, 3, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[0,0,0,], )
paddle.nn.functional.max_pool3d(x=Tensor([1398102, 3, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,0,0,], )
paddle.nn.functional.max_pool3d(x=Tensor([1398102, 3, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,1,1,], )
paddle.nn.functional.max_pool3d(x=Tensor([1398102, 3, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,2,1,], )
paddle.nn.functional.max_pool3d(x=Tensor([1398102, 3, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=tuple(3,2,1,), padding=list[1,0,0,], )
paddle.nn.functional.max_pool3d(x=Tensor([1398102, 3, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=tuple(3,2,1,), padding=tuple(1,0,0,), )
paddle.nn.functional.max_pool3d(x=Tensor([1398102, 8, 8, 8, 3],"float64"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], data_format="NDHWC", )
paddle.nn.functional.max_pool3d(x=Tensor([2, 2097153, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=2, padding=1, )
paddle.nn.functional.max_pool3d(x=Tensor([2, 2097153, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], )
paddle.nn.functional.max_pool3d(x=Tensor([2, 2097153, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], ceil_mode=True, )
paddle.nn.functional.max_pool3d(x=Tensor([2, 2097153, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[1,2,3,], padding=list[0,0,0,], )
paddle.nn.functional.max_pool3d(x=Tensor([2, 2097153, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[2,2,2,], padding=list[0,0,0,], )
paddle.nn.functional.max_pool3d(x=Tensor([2, 2097153, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=1, )
paddle.nn.functional.max_pool3d(x=Tensor([2, 2097153, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[0,0,0,], )
paddle.nn.functional.max_pool3d(x=Tensor([2, 2097153, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,0,0,], )
paddle.nn.functional.max_pool3d(x=Tensor([2, 2097153, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,1,1,], )
paddle.nn.functional.max_pool3d(x=Tensor([2, 2097153, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,2,1,], )
paddle.nn.functional.max_pool3d(x=Tensor([2, 2097153, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=tuple(3,2,1,), padding=list[1,0,0,], )
paddle.nn.functional.max_pool3d(x=Tensor([2, 2097153, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=tuple(3,2,1,), padding=tuple(1,0,0,), )
paddle.nn.functional.max_pool3d(x=Tensor([2, 3, 11184811, 8, 8],"float32"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], )
paddle.nn.functional.max_pool3d(x=Tensor([2, 3, 5592406, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=2, padding=1, )
paddle.nn.functional.max_pool3d(x=Tensor([2, 3, 5592406, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], )
paddle.nn.functional.max_pool3d(x=Tensor([2, 3, 5592406, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], ceil_mode=True, )
paddle.nn.functional.max_pool3d(x=Tensor([2, 3, 5592406, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[1,2,3,], padding=list[0,0,0,], )
paddle.nn.functional.max_pool3d(x=Tensor([2, 3, 5592406, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[2,2,2,], padding=list[0,0,0,], )
paddle.nn.functional.max_pool3d(x=Tensor([2, 3, 5592406, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=1, )
paddle.nn.functional.max_pool3d(x=Tensor([2, 3, 5592406, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[0,0,0,], )
paddle.nn.functional.max_pool3d(x=Tensor([2, 3, 5592406, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,0,0,], )
paddle.nn.functional.max_pool3d(x=Tensor([2, 3, 5592406, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,1,1,], )
paddle.nn.functional.max_pool3d(x=Tensor([2, 3, 5592406, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,2,1,], )
paddle.nn.functional.max_pool3d(x=Tensor([2, 3, 5592406, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=tuple(3,2,1,), padding=list[1,0,0,], )
paddle.nn.functional.max_pool3d(x=Tensor([2, 3, 5592406, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=tuple(3,2,1,), padding=tuple(1,0,0,), )
paddle.nn.functional.max_pool3d(x=Tensor([2, 3, 8, 11184811, 8],"float32"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], )
paddle.nn.functional.max_pool3d(x=Tensor([2, 3, 8, 5592406, 8],"float64"), kernel_size=list[3,3,3,], stride=2, padding=1, )
paddle.nn.functional.max_pool3d(x=Tensor([2, 3, 8, 5592406, 8],"float64"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], )
paddle.nn.functional.max_pool3d(x=Tensor([2, 3, 8, 5592406, 8],"float64"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], ceil_mode=True, )
paddle.nn.functional.max_pool3d(x=Tensor([2, 3, 8, 5592406, 8],"float64"), kernel_size=list[3,3,3,], stride=list[1,2,3,], padding=list[0,0,0,], )
paddle.nn.functional.max_pool3d(x=Tensor([2, 3, 8, 5592406, 8],"float64"), kernel_size=list[3,3,3,], stride=list[2,2,2,], padding=list[0,0,0,], )
paddle.nn.functional.max_pool3d(x=Tensor([2, 3, 8, 5592406, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=1, )
paddle.nn.functional.max_pool3d(x=Tensor([2, 3, 8, 5592406, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[0,0,0,], )
paddle.nn.functional.max_pool3d(x=Tensor([2, 3, 8, 5592406, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,0,0,], )
paddle.nn.functional.max_pool3d(x=Tensor([2, 3, 8, 5592406, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,1,1,], )
paddle.nn.functional.max_pool3d(x=Tensor([2, 3, 8, 5592406, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,2,1,], )
paddle.nn.functional.max_pool3d(x=Tensor([2, 3, 8, 5592406, 8],"float64"), kernel_size=list[3,3,3,], stride=tuple(3,2,1,), padding=list[1,0,0,], )
paddle.nn.functional.max_pool3d(x=Tensor([2, 3, 8, 5592406, 8],"float64"), kernel_size=list[3,3,3,], stride=tuple(3,2,1,), padding=tuple(1,0,0,), )
paddle.nn.functional.max_pool3d(x=Tensor([2, 3, 8, 8, 11184811],"float32"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], )
paddle.nn.functional.max_pool3d(x=Tensor([2, 3, 8, 8, 5592406],"float64"), kernel_size=list[3,3,3,], stride=2, padding=1, )
paddle.nn.functional.max_pool3d(x=Tensor([2, 3, 8, 8, 5592406],"float64"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], )
paddle.nn.functional.max_pool3d(x=Tensor([2, 3, 8, 8, 5592406],"float64"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], ceil_mode=True, )
paddle.nn.functional.max_pool3d(x=Tensor([2, 3, 8, 8, 5592406],"float64"), kernel_size=list[3,3,3,], stride=list[1,2,3,], padding=list[0,0,0,], )
paddle.nn.functional.max_pool3d(x=Tensor([2, 3, 8, 8, 5592406],"float64"), kernel_size=list[3,3,3,], stride=list[2,2,2,], padding=list[0,0,0,], )
paddle.nn.functional.max_pool3d(x=Tensor([2, 3, 8, 8, 5592406],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=1, )
paddle.nn.functional.max_pool3d(x=Tensor([2, 3, 8, 8, 5592406],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[0,0,0,], )
paddle.nn.functional.max_pool3d(x=Tensor([2, 3, 8, 8, 5592406],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,0,0,], )
paddle.nn.functional.max_pool3d(x=Tensor([2, 3, 8, 8, 5592406],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,1,1,], )
paddle.nn.functional.max_pool3d(x=Tensor([2, 3, 8, 8, 5592406],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,2,1,], )
paddle.nn.functional.max_pool3d(x=Tensor([2, 3, 8, 8, 5592406],"float64"), kernel_size=list[3,3,3,], stride=tuple(3,2,1,), padding=list[1,0,0,], )
paddle.nn.functional.max_pool3d(x=Tensor([2, 3, 8, 8, 5592406],"float64"), kernel_size=list[3,3,3,], stride=tuple(3,2,1,), padding=tuple(1,0,0,), )
paddle.nn.functional.max_pool3d(x=Tensor([2, 4194304, 8, 8, 8],"float32"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], )
paddle.nn.functional.max_pool3d(x=Tensor([2, 5592406, 8, 8, 3],"float64"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], data_format="NDHWC", )
paddle.nn.functional.max_pool3d(x=Tensor([2, 8, 5592406, 8, 3],"float64"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], data_format="NDHWC", )
paddle.nn.functional.max_pool3d(x=Tensor([2, 8, 8, 5592406, 3],"float64"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], data_format="NDHWC", )
paddle.nn.functional.max_pool3d(x=Tensor([2, 8, 8, 8, 2097153],"float64"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], data_format="NDHWC", )
paddle.nn.functional.max_pool3d(x=Tensor([2796203, 3, 8, 8, 8],"float32"), kernel_size=list[3,3,3,], stride=list[1,1,1,], padding=list[0,0,0,], )
paddle.nn.functional.max_pool3d(x=Tensor([8, 10700, 4, 112, 112],"float32"), kernel_size=list[1,3,3,], stride=list[1,2,2,], padding=list[0,1,1,], data_format="NCDHW", )
paddle.nn.functional.max_pool3d(x=Tensor([8, 1338, 32, 112, 112],"float32"), kernel_size=list[1,3,3,], stride=list[1,2,2,], padding=list[0,1,1,], data_format="NCDHW", )
paddle.nn.functional.max_pool3d(x=Tensor([8, 32, 32, 56, 9363],"float32"), kernel_size=list[1,1,1,], stride=list[1,1,1,], padding=list[0,0,0,], data_format="NCDHW", )
paddle.nn.functional.max_pool3d(x=Tensor([8, 32, 32, 9363, 56],"float32"), kernel_size=list[1,1,1,], stride=list[1,1,1,], padding=list[0,0,0,], data_format="NCDHW", )
paddle.nn.functional.max_pool3d(x=Tensor([8, 32, 5350, 56, 56],"float32"), kernel_size=list[1,1,1,], stride=list[1,1,1,], padding=list[0,0,0,], data_format="NCDHW", )
paddle.nn.functional.max_pool3d(x=Tensor([8, 320, 4, 56, 7490],"float32"), kernel_size=list[1,1,1,], stride=list[1,1,1,], padding=list[0,0,0,], data_format="NCDHW", )
paddle.nn.functional.max_pool3d(x=Tensor([8, 320, 4, 7490, 56],"float32"), kernel_size=list[1,1,1,], stride=list[1,1,1,], padding=list[0,0,0,], data_format="NCDHW", )
paddle.nn.functional.max_pool3d(x=Tensor([8, 320, 535, 56, 56],"float32"), kernel_size=list[1,1,1,], stride=list[1,1,1,], padding=list[0,0,0,], data_format="NCDHW", )
paddle.nn.functional.max_pool3d(x=Tensor([8, 42800, 4, 56, 56],"float32"), kernel_size=list[1,1,1,], stride=list[1,1,1,], padding=list[0,0,0,], data_format="NCDHW", )
paddle.nn.functional.max_pool3d(x=Tensor([8, 5350, 32, 56, 56],"float32"), kernel_size=list[1,1,1,], stride=list[1,1,1,], padding=list[0,0,0,], data_format="NCDHW", )
paddle.nn.functional.max_pool3d(x=Tensor([8, 64, 4, 112, 18725],"float32"), kernel_size=list[1,3,3,], stride=list[1,2,2,], padding=list[0,1,1,], data_format="NCDHW", )
paddle.nn.functional.max_pool3d(x=Tensor([8, 64, 4, 18725, 112],"float32"), kernel_size=list[1,3,3,], stride=list[1,2,2,], padding=list[0,1,1,], data_format="NCDHW", )
paddle.nn.functional.max_pool3d(x=Tensor([8, 64, 669, 112, 112],"float32"), kernel_size=list[1,3,3,], stride=list[1,2,2,], padding=list[0,1,1,], data_format="NCDHW", )
paddle.nn.functional.max_pool3d(x=Tensor([8, 8, 32, 112, 18725],"float32"), kernel_size=list[1,3,3,], stride=list[1,2,2,], padding=list[0,1,1,], data_format="NCDHW", )
paddle.nn.functional.max_pool3d(x=Tensor([8, 8, 32, 18725, 112],"float32"), kernel_size=list[1,3,3,], stride=list[1,2,2,], padding=list[0,1,1,], data_format="NCDHW", )
paddle.nn.functional.max_pool3d(x=Tensor([8, 8, 5350, 112, 112],"float32"), kernel_size=list[1,3,3,], stride=list[1,2,2,], padding=list[0,1,1,], data_format="NCDHW", )
paddle.nn.functional.maxout(Tensor([10, 9, 3, 7953644],"float64"), 3, 1, None, )
paddle.nn.functional.maxout(Tensor([10, 9, 7953644, 3],"float64"), 3, 1, None, )
paddle.nn.functional.maxout(Tensor([100, 4, 1789570, 3],"float64"), 2, 1, None, )
paddle.nn.functional.maxout(Tensor([100, 4, 3, 1789570],"float64"), 2, 1, None, )
paddle.nn.functional.maxout(Tensor([100, 4, 3, 3579140],"float32"), 2, 1, None, )
paddle.nn.functional.maxout(Tensor([100, 4, 3579140, 3],"float32"), 2, 1, None, )
paddle.nn.functional.maxout(Tensor([100, 4772186, 3, 3],"float32"), 2, 1, None, )
paddle.nn.functional.maxout(Tensor([119304648, 4, 3, 3],"float32"), 2, 1, None, )
paddle.nn.functional.maxout(Tensor([17895698, 6, 5, 4],"float64"), 2, 1, )
paddle.nn.functional.maxout(Tensor([17895698, 6, 5, 4],"float64"), 2, -1, )
paddle.nn.functional.maxout(Tensor([17895698, 6, 5, 4],"float64"), 2, 1, None, )
paddle.nn.functional.maxout(Tensor([2, 53687092, 5, 4],"float64"), 2, 1, )
paddle.nn.functional.maxout(Tensor([2, 53687092, 5, 4],"float64"), 2, -1, )
paddle.nn.functional.maxout(Tensor([2, 53687092, 5, 4],"float64"), 2, 1, None, )
paddle.nn.functional.maxout(Tensor([2, 6, 44739243, 4],"float64"), 2, 1, )
paddle.nn.functional.maxout(Tensor([2, 6, 44739243, 4],"float64"), 2, -1, )
paddle.nn.functional.maxout(Tensor([2, 6, 44739243, 4],"float64"), 2, 1, None, )
paddle.nn.functional.maxout(Tensor([2, 6, 5, 35791395],"float64"), 2, 1, )
paddle.nn.functional.maxout(Tensor([2, 6, 5, 35791395],"float64"), 2, 1, None, )
paddle.nn.functional.maxout(Tensor([26512144, 9, 3, 3],"float64"), 3, 1, None, )
paddle.nn.functional.maxout(Tensor([59652324, 4, 3, 3],"float64"), 2, 1, None, )
paddle.nn.functional.maxout(Tensor([89478486, 2, 2, 6],"float64"), 2, 3, None, )
paddle.nn.functional.maxout(Tensor([9, 19884108, 2, 6],"float64"), 2, 3, None, )
paddle.nn.functional.maxout(Tensor([9, 2, 19884108, 6],"float64"), 2, 3, None, )
paddle.nn.functional.maxout(Tensor([9, 2, 2, 59652324],"float64"), 2, 3, None, )
paddle.nn.functional.maxout(x=Tensor([10, 9, 3, 7953644],"float64"), groups=3, )
paddle.nn.functional.maxout(x=Tensor([10, 9, 7953644, 3],"float64"), groups=3, )
paddle.nn.functional.maxout(x=Tensor([100, 4, 1789570, 3],"float64"), groups=2, )
paddle.nn.functional.maxout(x=Tensor([100, 4, 3, 1789570],"float64"), groups=2, )
paddle.nn.functional.maxout(x=Tensor([100, 4, 3, 3579140],"float32"), groups=2, )
paddle.nn.functional.maxout(x=Tensor([100, 4, 3579140, 3],"float32"), groups=2, )
paddle.nn.functional.maxout(x=Tensor([100, 4772186, 3, 3],"float32"), groups=2, )
paddle.nn.functional.maxout(x=Tensor([119304648, 4, 3, 3],"float32"), groups=2, )
paddle.nn.functional.maxout(x=Tensor([26512144, 9, 3, 3],"float64"), groups=3, )
paddle.nn.functional.maxout(x=Tensor([59652324, 4, 3, 3],"float64"), groups=2, )
paddle.nn.functional.maxout(x=Tensor([89478486, 2, 2, 6],"float64"), groups=2, axis=3, )
paddle.nn.functional.maxout(x=Tensor([9, 19884108, 2, 6],"float64"), groups=2, axis=3, )
paddle.nn.functional.maxout(x=Tensor([9, 2, 19884108, 6],"float64"), groups=2, axis=3, )
paddle.nn.functional.maxout(x=Tensor([9, 2, 2, 59652324],"float64"), groups=2, axis=3, )
paddle.nn.functional.mse_loss(Tensor([16, 96, 1],"float32"), Tensor([16, 96, 2796203],"float32"), )
paddle.nn.functional.mse_loss(Tensor([16, 96, 2796203],"float32"), Tensor([16, 96, 1],"float32"), )
paddle.nn.functional.mse_loss(Tensor([3, 96, 1],"float32"), Tensor([3, 96, 14913081],"float32"), )
paddle.nn.functional.mse_loss(Tensor([3, 96, 14913081],"float32"), Tensor([3, 96, 1],"float32"), )
paddle.nn.functional.multi_margin_loss(Tensor([5, 429496730],"float64"), Tensor([5],"int64"), p=1, margin=1.0, weight=None, reduction="mean", name=None, )
paddle.nn.functional.pad(Tensor([1, 1, 4294967295, 1],"float16"), pad=list[0,0,0,1,], mode="replicate", value=0.0, data_format="NCHW", name=None, )
paddle.nn.functional.pad(Tensor([13, 47197443, 7],"float32"), tuple(-3,0,), data_format="NCL", )
paddle.nn.functional.pad(Tensor([14, 43826197, 7],"float32"), tuple(-3,0,), data_format="NCL", )
paddle.nn.functional.pad(Tensor([9586981, 64, 7],"float32"), tuple(-3,0,), data_format="NCL", )
paddle.nn.functional.pad(x=Tensor([1, 1, 1, 2, 1073741825],"float64"), pad=tuple(2,2,1,1,0,0,), mode="reflect", data_format="NCDHW", )
paddle.nn.functional.poisson_nll_loss(Tensor([10, 429496730],"float16"), Tensor([10, 429496730],"float16"), log_input=True, full=False, epsilon=1e-08, reduction="mean", )
paddle.nn.functional.poisson_nll_loss(Tensor([10, 429496730],"float16"), Tensor([10, 429496730],"float16"), log_input=True, full=False, epsilon=1e-08, reduction="mean", name=None, )
paddle.nn.functional.prelu(Tensor([104, 256, 11523, 14],"float32"), Tensor([256],"float32"), data_format="NCHW", )
paddle.nn.functional.prelu(Tensor([178956971, 2, 3, 4],"float32"), Tensor([2],"float32"), )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 1024, 262144, 16],"bfloat16"), Tensor([1, 1024, 2, 16],"bfloat16"), Tensor([1, 1024, 2, 16],"bfloat16"), attn_mask=None, is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 1024, 262144, 16],"bfloat16"), Tensor([1, 1024, 262144, 16],"bfloat16"), Tensor([1, 1024, 262144, 16],"bfloat16"), attn_mask=None, is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 1024, 32, 128],"bfloat16"), Tensor([1, 1048576, 32, 128],"bfloat16"), Tensor([1, 1024, 32, 128],"bfloat16"), attn_mask=None, is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 1024, 32, 131072],"bfloat16"), Tensor([1, 1024, 32, 131072],"bfloat16"), Tensor([1, 1024, 32, 131072],"bfloat16"), attn_mask=None, is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 1024, 8, 96],"bfloat16"), Tensor([1, 5592406, 8, 96],"bfloat16"), Tensor([1, 1024, 8, 96],"bfloat16"), attn_mask=None, is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 2048, 131072, 16],"float16"), Tensor([1, 2048, 2, 16],"float16"), Tensor([1, 2048, 2, 16],"float16"), attn_mask=Tensor([1, 1, 2048, 2048],"float16"), is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 2048, 4, 524288],"float16"), Tensor([1, 2048, 4, 524288],"float16"), Tensor([1, 2048, 4, 524288],"float16"), attn_mask=Tensor([1, 1, 2048, 524288],"float16"), dropout_p=0.0, training=False, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 2048, 4, 524288],"float16"), Tensor([1, 2048, 4, 524288],"float16"), Tensor([1, 2048, 4, 524288],"float16"), attn_mask=Tensor([1, 1, 2048, 524288],"float16"), dropout_p=0.0, training=True, is_causal=False, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 2048, 8, 262144],"float16"), Tensor([1, 2048, 2, 262144],"float16"), Tensor([1, 2048, 2, 262144],"float16"), attn_mask=Tensor([1, 1, 2048, 262144],"float16"), is_causal=True, )
paddle.nn.functional.scaled_dot_product_attention(Tensor([1, 2048, 8, 262144],"float16"), Tensor([1, 2048, 8, 262144],"float16"), Tensor([1, 2048, 8, 262144],"float16"), attn_mask=Tensor([1, 1, 2048, 262144],"float16"), is_causal=True, )
paddle.nn.functional.sequence_mask(Tensor([2, 2, 3, 3, 59652324],"float64"), maxlen=5, dtype=type(numpy.int32), )
paddle.nn.functional.sequence_mask(Tensor([2, 2, 3, 59652324, 3],"float64"), maxlen=5, dtype=type(numpy.int32), )
paddle.nn.functional.sequence_mask(Tensor([2, 2, 59652324, 3, 3],"float64"), maxlen=5, dtype=type(numpy.int32), )
paddle.nn.functional.sequence_mask(Tensor([2, 39768216, 3, 3, 3],"float64"), maxlen=5, dtype=type(numpy.int32), )
paddle.nn.functional.sequence_mask(Tensor([39768216, 2, 3, 3, 3],"float64"), maxlen=5, dtype=type(numpy.int32), )
paddle.nn.functional.softmax(Tensor([1, 3, 2, 5, 143165577],"float32"), )
paddle.nn.functional.softmax(Tensor([1, 4294967295],"float32"), -1, name=None, )
paddle.nn.functional.softmax(Tensor([10, 1, 429496730],"float16"), 2, name=None, )
paddle.nn.functional.softmax(Tensor([10, 1, 429496730],"float32"), 2, name=None, )
paddle.nn.functional.softmax(Tensor([10, 429496730],"float32"), axis=1, )
paddle.nn.functional.softmax(Tensor([10, 429496730],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([10, 8, 153, 350897],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([10, 8, 154, 348618],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([100, 42949673],"float16"), axis=1, )
paddle.nn.functional.softmax(Tensor([100, 42949673],"float32"), axis=1, )
paddle.nn.functional.softmax(Tensor([1000, 4294968],"float16"), axis=1, )
paddle.nn.functional.softmax(Tensor([1008, 7, 608698],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([104, 127463, 18, 18],"float16"), )
paddle.nn.functional.softmax(Tensor([104, 16, 117324, 22],"float16"), )
paddle.nn.functional.softmax(Tensor([104, 16, 122911, 21],"float16"), )
paddle.nn.functional.softmax(Tensor([104, 16, 143396, 18],"float16"), )
paddle.nn.functional.softmax(Tensor([104, 16, 18, 143396],"float16"), )
paddle.nn.functional.softmax(Tensor([104, 16, 18, 143396],"float32"), )
paddle.nn.functional.softmax(Tensor([104, 16, 21, 122911],"float16"), )
paddle.nn.functional.softmax(Tensor([104, 16, 21, 122911],"float32"), )
paddle.nn.functional.softmax(Tensor([104, 16, 22, 117324],"float16"), )
paddle.nn.functional.softmax(Tensor([104, 85326, 22, 22],"float16"), )
paddle.nn.functional.softmax(Tensor([104, 93646, 21, 21],"float16"), )
paddle.nn.functional.softmax(Tensor([1048577, 16, 128],"float64"), 0, name=None, )
paddle.nn.functional.softmax(Tensor([1048577, 16, 128],"float64"), 1, )
paddle.nn.functional.softmax(Tensor([1048577, 16, 128],"float64"), 1, name=None, )
paddle.nn.functional.softmax(Tensor([108, 6, 49, 135267],"float32"), -1, name=None, )
paddle.nn.functional.softmax(Tensor([11, 4, 7, 13944700],"float32"), axis=3, )
paddle.nn.functional.softmax(Tensor([111802, 1, 16, 49, 49],"float16"), -1, name=None, )
paddle.nn.functional.softmax(Tensor([112, 165, 232412],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([112, 186, 206172],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([128, 1, 13976, 49, 49],"float16"), -1, name=None, )
paddle.nn.functional.softmax(Tensor([128, 1, 16, 42800, 49],"float16"), -1, name=None, )
paddle.nn.functional.softmax(Tensor([128, 16, 4, 10700, 49],"float16"), -1, name=None, )
paddle.nn.functional.softmax(Tensor([128, 16, 874, 49, 49],"float16"), -1, name=None, )
paddle.nn.functional.softmax(Tensor([128, 1747, 8, 49, 49],"float16"), -1, name=None, )
paddle.nn.functional.softmax(Tensor([128, 33554432],"float32"), )
paddle.nn.functional.softmax(Tensor([128, 3494, 4, 49, 49],"float16"), -1, name=None, )
paddle.nn.functional.softmax(Tensor([128, 4, 3494, 49, 49],"float16"), -1, name=None, )
paddle.nn.functional.softmax(Tensor([128, 4, 8, 21400, 49],"float16"), -1, name=None, )
paddle.nn.functional.softmax(Tensor([128, 874, 16, 49, 49],"float16"), -1, name=None, )
paddle.nn.functional.softmax(Tensor([13, 4, 10, 8259553],"float32"), axis=-1, dtype=Dtype(float32), )
paddle.nn.functional.softmax(Tensor([13, 4, 2, 41297763],"float32"), axis=-1, dtype=Dtype(float32), )
paddle.nn.functional.softmax(Tensor([13, 4, 3, 27531842],"float32"), axis=-1, dtype=Dtype(float32), )
paddle.nn.functional.softmax(Tensor([13, 4, 5, 1, 16519105],"float32"), )
paddle.nn.functional.softmax(Tensor([13, 4, 7, 11799361],"float32"), axis=-1, dtype="float32", )
paddle.nn.functional.softmax(Tensor([13, 7, 47197443],"float32"), )
paddle.nn.functional.softmax(Tensor([131072, 8, 64, 64],"float16"), -1, )
paddle.nn.functional.softmax(Tensor([14, 4, 7, 10956550],"float32"), axis=3, )
paddle.nn.functional.softmax(Tensor([14, 4, 8, 9586981],"float32"), axis=3, )
paddle.nn.functional.softmax(Tensor([157904, 17, 400, 4],"float32"), axis=1, )
paddle.nn.functional.softmax(Tensor([16, 10, 26843546],"float32"), axis=2, )
paddle.nn.functional.softmax(Tensor([16, 1048577, 128],"float64"), 0, name=None, )
paddle.nn.functional.softmax(Tensor([16, 1048577, 128],"float64"), 1, )
paddle.nn.functional.softmax(Tensor([16, 1048577, 128],"float64"), 1, name=None, )
paddle.nn.functional.softmax(Tensor([16, 11, 381301, 64],"float32"), axis=1, )
paddle.nn.functional.softmax(Tensor([16, 11, 64, 381301],"float32"), axis=1, )
paddle.nn.functional.softmax(Tensor([16, 134217729],"float64"), 0, name=None, )
paddle.nn.functional.softmax(Tensor([16, 16, 8388609],"float64"), 0, name=None, )
paddle.nn.functional.softmax(Tensor([16, 16, 8388609],"float64"), 1, )
paddle.nn.functional.softmax(Tensor([16, 16, 8388609],"float64"), 1, name=None, )
paddle.nn.functional.softmax(Tensor([16, 65536, 64, 64],"float32"), axis=1, )
paddle.nn.functional.softmax(Tensor([16777216, 256, 1],"float16"), axis=1, )
paddle.nn.functional.softmax(Tensor([178956971, 3, 4],"float64"), 1, name=None, )
paddle.nn.functional.softmax(Tensor([17895698, 6, 5, 4],"float64"), axis=-3, dtype=None, name=None, )
paddle.nn.functional.softmax(Tensor([1814, 1, 81, 94, 311],"float32"), axis=2, )
paddle.nn.functional.softmax(Tensor([182, 23598722, 1],"float32"), axis=1, )
paddle.nn.functional.softmax(Tensor([182, 23598722],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([182, 3, 7866241],"float32"), axis=1, )
paddle.nn.functional.softmax(Tensor([2, 1342178, 400, 4],"float32"), axis=1, )
paddle.nn.functional.softmax(Tensor([2, 16, 1, 134217728],"float32"), axis=-1, dtype="float32", )
paddle.nn.functional.softmax(Tensor([2, 16, 10, 13421773],"float32"), axis=-1, dtype="float32", )
paddle.nn.functional.softmax(Tensor([2, 16, 5, 26843546],"float32"), axis=-1, dtype="float32", )
paddle.nn.functional.softmax(Tensor([2, 16647161, 1, 129],"float16"), -1, )
paddle.nn.functional.softmax(Tensor([2, 17, 1600, 78952],"float32"), axis=1, )
paddle.nn.functional.softmax(Tensor([2, 17, 31580642, 4],"float32"), axis=1, )
paddle.nn.functional.softmax(Tensor([2, 17, 400, 315807],"float32"), axis=1, )
paddle.nn.functional.softmax(Tensor([2, 17, 6400, 19738],"float32"), axis=1, )
paddle.nn.functional.softmax(Tensor([2, 262144, 64, 128],"float16"), -1, )
paddle.nn.functional.softmax(Tensor([2, 268435457, 4],"float64"), 1, name=None, )
paddle.nn.functional.softmax(Tensor([2, 3, 2, 5, 71582789],"float16"), )
paddle.nn.functional.softmax(Tensor([2, 3, 2, 5, 71582789],"float32"), )
paddle.nn.functional.softmax(Tensor([2, 3, 2, 71582789, 5],"float16"), )
paddle.nn.functional.softmax(Tensor([2, 3, 28633116, 5, 5],"float16"), )
paddle.nn.functional.softmax(Tensor([2, 3, 357913942],"float64"), 1, name=None, )
paddle.nn.functional.softmax(Tensor([2, 3, 715827883],"float32"), -1, name=None, )
paddle.nn.functional.softmax(Tensor([2, 3, 715827883],"float32"), axis=1, dtype="float32", )
paddle.nn.functional.softmax(Tensor([2, 3, 715827883],"float32"), axis=-1, dtype="float32", )
paddle.nn.functional.softmax(Tensor([2, 33038210, 1, 65],"float16"), -1, )
paddle.nn.functional.softmax(Tensor([2, 335545, 1600, 4],"float32"), axis=1, )
paddle.nn.functional.softmax(Tensor([2, 42949673, 2, 5, 5],"float16"), )
paddle.nn.functional.softmax(Tensor([2, 524288, 64, 64],"float16"), -1, )
paddle.nn.functional.softmax(Tensor([2, 536870912, 4],"float32"), axis=1, dtype="float32", )
paddle.nn.functional.softmax(Tensor([2, 53687092, 5, 4],"float64"), axis=-3, dtype=None, name=None, )
paddle.nn.functional.softmax(Tensor([2, 6, 44739243, 4],"float64"), axis=-3, dtype=None, name=None, )
paddle.nn.functional.softmax(Tensor([2, 6, 5, 35791395],"float64"), axis=-3, dtype=None, name=None, )
paddle.nn.functional.softmax(Tensor([2, 8, 1, 268435456],"float16"), -1, )
paddle.nn.functional.softmax(Tensor([2, 8, 2080896, 129],"float16"), -1, )
paddle.nn.functional.softmax(Tensor([2, 8, 2097152, 128],"float16"), -1, )
paddle.nn.functional.softmax(Tensor([2, 8, 268435456],"float32"), )
paddle.nn.functional.softmax(Tensor([2, 8, 4129777, 65],"float16"), -1, )
paddle.nn.functional.softmax(Tensor([2, 8, 4194304, 64],"float16"), -1, )
paddle.nn.functional.softmax(Tensor([2, 8, 64, 4194304],"float16"), -1, )
paddle.nn.functional.softmax(Tensor([2, 83887, 6400, 4],"float32"), axis=1, )
paddle.nn.functional.softmax(Tensor([2147483649],"float64"), axis=-1, )
paddle.nn.functional.softmax(Tensor([24, 178956971, 1],"float32"), axis=1, )
paddle.nn.functional.softmax(Tensor([24, 256, 699051],"float32"), axis=1, )
paddle.nn.functional.softmax(Tensor([252645135, 17],"float16"), axis=1, )
paddle.nn.functional.softmax(Tensor([27951, 16, 4, 49, 49],"float16"), -1, name=None, )
paddle.nn.functional.softmax(Tensor([28633116, 3, 2, 5, 5],"float16"), )
paddle.nn.functional.softmax(Tensor([3, 16, 1398102, 64],"float16"), -1, )
paddle.nn.functional.softmax(Tensor([3, 16, 64, 1398102],"float16"), -1, )
paddle.nn.functional.softmax(Tensor([3, 349526, 64, 64],"float16"), -1, )
paddle.nn.functional.softmax(Tensor([32, 256, 524288],"float32"), axis=1, )
paddle.nn.functional.softmax(Tensor([357913942, 3, 4],"float32"), axis=0, dtype="float32", )
paddle.nn.functional.softmax(Tensor([357913942, 3, 4],"float32"), axis=1, dtype="float32", )
paddle.nn.functional.softmax(Tensor([357913942, 3, 4],"float32"), axis=-3, dtype=None, name=None, )
paddle.nn.functional.softmax(Tensor([39476, 17, 1600, 4],"float32"), axis=1, )
paddle.nn.functional.softmax(Tensor([4, 1, 36730, 94, 311],"float32"), axis=2, )
paddle.nn.functional.softmax(Tensor([4, 1, 81, 42625, 311],"float32"), axis=2, )
paddle.nn.functional.softmax(Tensor([4, 1, 81, 94, 141023],"float32"), axis=2, )
paddle.nn.functional.softmax(Tensor([4, 1073741824, 1],"float32"), axis=1, )
paddle.nn.functional.softmax(Tensor([4, 137, 7837532],"float32"), )
paddle.nn.functional.softmax(Tensor([4, 150, 13982, 512],"float32"), axis=1, )
paddle.nn.functional.softmax(Tensor([4, 150, 512, 13982],"float32"), axis=1, )
paddle.nn.functional.softmax(Tensor([4, 188, 5711393],"float32"), )
paddle.nn.functional.softmax(Tensor([4, 256, 4194304],"float32"), axis=1, )
paddle.nn.functional.softmax(Tensor([4, 4, 268435456],"float32"), )
paddle.nn.functional.softmax(Tensor([4, 4, 268435456],"float32"), -1, name=None, )
paddle.nn.functional.softmax(Tensor([4, 4, 7, 38347923],"float32"), axis=3, )
paddle.nn.functional.softmax(Tensor([4, 4096, 512, 512],"float32"), axis=1, )
paddle.nn.functional.softmax(Tensor([4, 81, 13256072],"float32"), axis=2, )
paddle.nn.functional.softmax(Tensor([4161791, 8, 1, 129],"float16"), -1, )
paddle.nn.functional.softmax(Tensor([42107523, 102],"float16"), )
paddle.nn.functional.softmax(Tensor([4294967295],"float32"), -1, name=None, )
paddle.nn.functional.softmax(Tensor([4294967295],"float32"), axis=-1, )
paddle.nn.functional.softmax(Tensor([5, 858993459],"float32"), axis=-1, dtype=VarType(float32), )
paddle.nn.functional.softmax(Tensor([52, 4, 5, 1, 4129777],"float32"), )
paddle.nn.functional.softmax(Tensor([554619, 16, 22, 22],"float16"), )
paddle.nn.functional.softmax(Tensor([55901, 4, 8, 49, 49],"float16"), -1, name=None, )
paddle.nn.functional.softmax(Tensor([608698, 16, 21, 21],"float16"), )
paddle.nn.functional.softmax(Tensor([64, 25, 2684355],"float32"), -1, name=None, )
paddle.nn.functional.softmax(Tensor([64, 256, 262144],"float16"), axis=1, )
paddle.nn.functional.softmax(Tensor([64, 40, 1677722],"float32"), -1, name=None, )
paddle.nn.functional.softmax(Tensor([64, 67108864, 1],"float16"), axis=1, )
paddle.nn.functional.softmax(Tensor([65536, 16, 64, 64],"float16"), -1, )
paddle.nn.functional.softmax(Tensor([65536, 8, 64, 128],"float16"), -1, )
paddle.nn.functional.softmax(Tensor([6991, 300, 2048],"float32"), axis=0, )
paddle.nn.functional.softmax(Tensor([71582789, 3, 4, 5],"float32"), 0, name=None, )
paddle.nn.functional.softmax(Tensor([71582789, 3, 4, 5],"float32"), axis=0, )
paddle.nn.functional.softmax(Tensor([8259553, 8, 1, 65],"float16"), -1, )
paddle.nn.functional.softmax(Tensor([828505, 16, 18, 18],"float16"), )
paddle.nn.functional.softmax(Tensor([89478486, 6, 4],"float64"), axis=-3, dtype=None, name=None, )
paddle.nn.functional.softmax(Tensor([95326, 11, 64, 64],"float32"), axis=1, )
paddle.nn.functional.softmax(Tensor([9869, 17, 6400, 4],"float32"), axis=1, )
paddle.nn.functional.softmax(x=Tensor([13, 4, 12, 6882961],"float32"), axis=-1, )
paddle.nn.functional.softmax(x=Tensor([16, 4, 12, 5592406],"float32"), axis=-1, )
paddle.nn.functional.softmax(x=Tensor([178956971, 3, 4],"float64"), axis=0, )
paddle.nn.functional.softmax(x=Tensor([178956971, 3, 4],"float64"), axis=1, )
paddle.nn.functional.softmax(x=Tensor([2, 268435457, 4],"float64"), axis=1, )
paddle.nn.functional.softmax(x=Tensor([2, 3, 357913942],"float64"), axis=1, )
paddle.nn.functional.softmax(x=Tensor([2, 3, 715827883],"float32"), )
paddle.nn.functional.softmax(x=Tensor([3, 4, 12, 29826162],"float32"), axis=-1, )
paddle.nn.functional.softmax(x=Tensor([32, 4, 12, 2796203],"float32"), axis=-1, )
paddle.nn.functional.softmax(x=Tensor([4, 4, 12, 22369622],"float32"), axis=-1, )
paddle.nn.functional.temporal_shift(x=Tensor([2, 2, 357913942, 3],"float32"), seg_num=2, )
paddle.nn.quant.weight_quantize(Tensor([128, 33554432],"float16"), algo="weight_only_int8", arch=70, group_size=-1, )
paddle.nn.quant.weight_quantize(Tensor([128, 33554432],"float16"), algo="weight_only_int8", arch=75, group_size=-1, )
paddle.nn.quant.weight_quantize(Tensor([128, 33554432],"float16"), algo="weight_only_int8", arch=80, group_size=-1, )
paddle.nn.quant.weight_quantize(Tensor([128, 33554432],"float16"), algo="weight_only_int8", arch=86, group_size=-1, )
paddle.nn.quant.weight_quantize(Tensor([128, 33554432],"float16"), algo="weight_only_int8", group_size=-1, )
paddle.nn.quant.weight_quantize(Tensor([16777216, 256],"float16"), algo="weight_only_int4", arch=70, group_size=-1, )
paddle.nn.quant.weight_quantize(Tensor([16777216, 256],"float16"), algo="weight_only_int4", arch=75, group_size=-1, )
paddle.nn.quant.weight_quantize(Tensor([16777216, 256],"float16"), algo="weight_only_int4", arch=80, group_size=-1, )
paddle.nn.quant.weight_quantize(Tensor([16777216, 256],"float16"), algo="weight_only_int4", arch=86, group_size=-1, )
paddle.nn.quant.weight_quantize(Tensor([16777216, 256],"float16"), algo="weight_only_int4", group_size=-1, )
paddle.nn.quant.weight_quantize(Tensor([16777216, 256],"float16"), algo="weight_only_int8", arch=70, group_size=-1, )
paddle.nn.quant.weight_quantize(Tensor([16777216, 256],"float16"), algo="weight_only_int8", arch=75, group_size=-1, )
paddle.nn.quant.weight_quantize(Tensor([16777216, 256],"float16"), algo="weight_only_int8", arch=80, group_size=-1, )
paddle.nn.quant.weight_quantize(Tensor([16777216, 256],"float16"), algo="weight_only_int8", arch=86, group_size=-1, )
paddle.nn.quant.weight_quantize(Tensor([16777216, 256],"float16"), algo="weight_only_int8", group_size=-1, )
paddle.nn.quant.weight_quantize(Tensor([256, 16777216],"float16"), algo="weight_only_int8", )
paddle.nn.quant.weight_quantize(Tensor([4194304, 1024],"float16"), algo="weight_only_int8", )
paddle.nn.quant.weight_quantize(Tensor([512, 8388608],"float16"), algo="weight_only_int8", )
paddle.nn.quant.weight_quantize(Tensor([64, 67108864],"float16"), algo="weight_only_int4", arch=70, group_size=-1, )
paddle.nn.quant.weight_quantize(Tensor([64, 67108864],"float16"), algo="weight_only_int4", arch=75, group_size=-1, )
paddle.nn.quant.weight_quantize(Tensor([64, 67108864],"float16"), algo="weight_only_int4", arch=80, group_size=-1, )
paddle.nn.quant.weight_quantize(Tensor([64, 67108864],"float16"), algo="weight_only_int4", arch=86, group_size=-1, )
paddle.nn.quant.weight_quantize(Tensor([64, 67108864],"float16"), algo="weight_only_int4", group_size=-1, )
paddle.nn.quant.weight_quantize(Tensor([64, 67108864],"float16"), algo="weight_only_int8", arch=70, group_size=-1, )
paddle.nn.quant.weight_quantize(Tensor([64, 67108864],"float16"), algo="weight_only_int8", arch=75, group_size=-1, )
paddle.nn.quant.weight_quantize(Tensor([64, 67108864],"float16"), algo="weight_only_int8", arch=80, group_size=-1, )
paddle.nn.quant.weight_quantize(Tensor([64, 67108864],"float16"), algo="weight_only_int8", arch=86, group_size=-1, )
paddle.nn.quant.weight_quantize(Tensor([64, 67108864],"float16"), algo="weight_only_int8", group_size=-1, )
paddle.nn.quant.weight_quantize(Tensor([67108864, 64],"float16"), algo="weight_only_int8", )
paddle.nn.quant.weight_quantize(Tensor([8388608, 512],"float16"), algo="weight_only_int8", )
paddle.nonzero(Tensor([1, 2, 28, 76695845],"float32"), )
paddle.nonzero(Tensor([1, 2, 76695845, 28],"float32"), )
paddle.nonzero(Tensor([1, 4294967295],"float32"), )
paddle.nonzero(Tensor([1, 4294967295],"int32"), )
paddle.nonzero(Tensor([1, 5478275, 28, 28],"float32"), )
paddle.nonzero(Tensor([10, 2, 28, 7669585],"float32"), )
paddle.nonzero(Tensor([10, 2, 7669585, 28],"float32"), )
paddle.nonzero(Tensor([10, 429496730],"float32"), as_tuple=False, )
paddle.nonzero(Tensor([10, 547828, 28, 28],"float32"), )
paddle.nonzero(Tensor([106, 51682, 28, 28],"float32"), )
paddle.nonzero(Tensor([106, 80, 18089, 28],"float32"), )
paddle.nonzero(Tensor([106, 80, 28, 18089],"float32"), )
paddle.nonzero(Tensor([10956550, 2, 14, 14],"float32"), )
paddle.nonzero(Tensor([11, 1992100, 14, 14],"float32"), )
paddle.nonzero(Tensor([11, 2, 13944700, 14],"float32"), )
paddle.nonzero(Tensor([11, 2, 14, 13944700],"float32"), )
paddle.nonzero(Tensor([11, 2, 28, 6972350],"float32"), )
paddle.nonzero(Tensor([11, 2, 6972350, 28],"float32"), )
paddle.nonzero(Tensor([11, 498025, 28, 28],"float32"), )
paddle.nonzero(Tensor([1431655765, 3],"float32"), True, )
paddle.nonzero(Tensor([21474837, 200],"float32"), )
paddle.nonzero(Tensor([21913099, 196],"float32"), )
paddle.nonzero(Tensor([22369622, 192],"float32"), )
paddle.nonzero(Tensor([268435457, 2, 2, 2],"float64"), True, )
paddle.nonzero(Tensor([2739138, 2, 28, 28],"float32"), )
paddle.nonzero(Tensor([3, 1431655765],"float32"), True, )
paddle.nonzero(Tensor([3, 178956971, 2, 2],"float64"), True, )
paddle.nonzero(Tensor([3, 2, 178956971, 2],"float64"), True, )
paddle.nonzero(Tensor([3, 2, 2, 178956971],"float64"), True, )
paddle.nonzero(Tensor([4294967295, 1],"int32"), )
paddle.nonzero(Tensor([4294967295],"bool"), )
paddle.nonzero(Tensor([4294967295],"bool"), as_tuple=False, )
paddle.nonzero(Tensor([4294967295],"int32"), True, )
paddle.nonzero(Tensor([42949673, 100],"float32"), )
paddle.nonzero(Tensor([429496730, 10],"float32"), as_tuple=False, )
paddle.nonzero(Tensor([68479, 80, 28, 28],"float32"), )
paddle.nonzero(x=Tensor([12, 357913942],"bfloat16"), )
paddle.nonzero(x=Tensor([1431655765, 3],"float32"), as_tuple=False, )
paddle.nonzero(x=Tensor([1431655765, 3],"int32"), as_tuple=False, )
paddle.nonzero(x=Tensor([153391690, 4, 7],"float16"), )
paddle.nonzero(x=Tensor([153391690, 4, 7],"float32"), )
paddle.nonzero(x=Tensor([2, 10, 214748365],"float32"), )
paddle.nonzero(x=Tensor([2, 1073741824, 2],"float32"), )
paddle.nonzero(x=Tensor([2147483649],"float64"), as_tuple=False, )
paddle.nonzero(x=Tensor([214748365, 10, 2],"float32"), )
paddle.nonzero(x=Tensor([268435457, 2, 2, 2],"float64"), as_tuple=False, )
paddle.nonzero(x=Tensor([268435457, 8],"float64"), )
paddle.nonzero(x=Tensor([3, 1431655765],"float32"), as_tuple=False, )
paddle.nonzero(x=Tensor([3, 1431655765],"int32"), as_tuple=False, )
paddle.nonzero(x=Tensor([3, 178956971, 2, 2],"float64"), as_tuple=False, )
paddle.nonzero(x=Tensor([3, 2, 178956971, 2],"float64"), as_tuple=False, )
paddle.nonzero(x=Tensor([3, 2, 2, 178956971],"float64"), as_tuple=False, )
paddle.nonzero(x=Tensor([3, 204522253, 7],"float16"), )
paddle.nonzero(x=Tensor([3, 204522253, 7],"float32"), )
paddle.nonzero(x=Tensor([3, 4, 357913942],"float16"), )
paddle.nonzero(x=Tensor([3, 4, 357913942],"float32"), )
paddle.nonzero(x=Tensor([3, 715827883],"float64"), as_tuple=False, )
paddle.nonzero(x=Tensor([3, 715827883],"int64"), as_tuple=False, )
paddle.nonzero(x=Tensor([477218589, 9],"bfloat16"), )
paddle.nonzero(x=Tensor([715827883, 3],"float64"), as_tuple=False, )
paddle.nonzero(x=Tensor([715827883, 3],"int64"), as_tuple=False, )
paddle.nonzero(x=Tensor([8, 268435457],"float64"), )
paddle.remainder(Tensor([1, 1, 5],"int32"), Tensor([2, 107374183, 4, 5],"int32"), )
paddle.remainder(Tensor([1, 1, 5],"int32"), Tensor([2, 3, 143165577, 5],"int32"), )
paddle.remainder(Tensor([1, 1, 5],"int32"), Tensor([71582789, 3, 4, 5],"int32"), )
paddle.remainder(Tensor([1, 1, 5],"int64"), Tensor([2, 3, 71582789, 5],"int64"), )
paddle.remainder(Tensor([1, 1, 5],"int64"), Tensor([2, 53687092, 4, 5],"int64"), )
paddle.remainder(Tensor([1, 1, 5],"int64"), Tensor([35791395, 3, 4, 5],"int64"), )
paddle.remainder(Tensor([1, 2, 107374183, 4, 5],"int32"), Tensor([1, 2, 107374183, 4, 5],"int32"), )
paddle.remainder(Tensor([1, 2, 3, 143165577, 5],"int32"), Tensor([1, 2, 3, 143165577, 5],"int32"), )
paddle.remainder(Tensor([1, 2, 3, 4, 178956971],"int32"), Tensor([1, 2, 3, 4, 178956971],"int32"), )
paddle.remainder(Tensor([1, 2, 3, 4, 5],"int32"), Tensor([35791395, 2, 3, 4, 5],"int32"), )
paddle.remainder(Tensor([1, 2, 3, 4, 5],"int64"), Tensor([17895698, 2, 3, 4, 5],"int64"), )
paddle.remainder(Tensor([1, 2, 3, 4, 89478486],"int64"), Tensor([1, 2, 3, 4, 89478486],"int64"), )
paddle.remainder(Tensor([1, 2, 3, 71582789, 5],"int64"), Tensor([1, 2, 3, 71582789, 5],"int64"), )
paddle.remainder(Tensor([1, 2, 53687092, 4, 5],"int64"), Tensor([1, 2, 53687092, 4, 5],"int64"), )
paddle.remainder(Tensor([1, 3, 143165577, 5],"int64"), Tensor([2, 1, 143165577, 1],"int64"), )
paddle.remainder(Tensor([1, 3, 286331153, 5],"int32"), Tensor([2, 1, 286331153, 1],"int32"), )
paddle.remainder(Tensor([1, 35791395, 3, 4, 5],"int64"), Tensor([1, 35791395, 3, 4, 5],"int64"), )
paddle.remainder(Tensor([1, 71582789, 3, 4, 5],"int32"), Tensor([1, 71582789, 3, 4, 5],"int32"), )
paddle.remainder(Tensor([17895698, 2, 3, 4, 5],"int64"), Tensor([17895698, 2, 3, 4, 5],"int64"), )
paddle.remainder(Tensor([2147483649],"int64"), Tensor([2147483649],"int64"), None, )
paddle.remainder(Tensor([35791395, 2, 3, 4, 5],"int32"), Tensor([35791395, 2, 3, 4, 5],"int32"), )
paddle.remainder(Tensor([4294967295],"int32"), Tensor([4294967295],"int32"), )
paddle.slice(Tensor([1, 4, 1073741824],"float32"), axes=list[0,], starts=list[0,], ends=list[1,], )
paddle.slice(Tensor([143165577, 5, 6],"float32"), axes=list[0,1,2,], starts=list[-3,0,2,], ends=list[3,2,4,], )
paddle.slice(Tensor([214749, 2, 100, 100],"float16"), axes=list[1,], starts=list[0,], ends=list[1,], )
paddle.slice(Tensor([214749, 2, 100, 100],"float16"), axes=list[1,], starts=list[1,], ends=list[2,], )
paddle.slice(Tensor([214749, 2, 100, 100],"float32"), axes=list[1,], starts=list[0,], ends=list[1,], )
paddle.slice(Tensor([214749, 2, 100, 100],"float32"), axes=list[1,], starts=list[1,], ends=list[2,], )
paddle.slice(Tensor([3, 715827883],"int64"), list[1,], list[-3,], list[2,], )
paddle.slice(Tensor([4, 107374183, 5],"int64"), list[-3,-2,-1,], list[1,-3,2,], list[3,3,4,], )
