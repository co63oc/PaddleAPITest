paddle.Tensor.__matmul__(Tensor([1, 1, 2228225, 1024],"float32"), Tensor([1, 1, 1024, 32],"float32"), )
paddle.Tensor.__matmul__(Tensor([1, 1, 65536, 34817],"float32"), Tensor([1, 1, 34817, 1024],"float32"), )
paddle.Tensor.__matmul__(Tensor([1, 1, 65536, 34817],"float32"), Tensor([1, 1, 34817, 32],"float32"), )
paddle.Tensor.__matmul__(Tensor([1, 35, 65536, 1024],"float32"), Tensor([1, 1, 1024, 32],"float32"), )
paddle.Tensor.__matmul__(Tensor([1, 35, 65536, 1024],"float32"), Tensor([1, 35, 1024, 32],"float32"), )
paddle.Tensor.__matmul__(Tensor([1035, 377, 36, 306],"float16"), Tensor([306, 306],"float16"), )
paddle.Tensor.__matmul__(Tensor([1127, 346, 36, 306],"float16"), Tensor([306, 306],"float16"), )
paddle.Tensor.__matmul__(Tensor([1283, 304, 36, 306],"float16"), Tensor([306, 306],"float16"), )
paddle.Tensor.__matmul__(Tensor([2, 1, 1114113, 1024],"float32"), Tensor([2, 1, 1024, 64],"float32"), )
paddle.Tensor.__matmul__(Tensor([2, 1, 65536, 17409],"float32"), Tensor([2, 1, 17409, 1024],"float32"), )
paddle.Tensor.__matmul__(Tensor([2, 1, 65536, 17409],"float32"), Tensor([2, 1, 17409, 64],"float32"), )
paddle.Tensor.__matmul__(Tensor([2, 18, 65536, 1024],"float32"), Tensor([2, 1, 1024, 64],"float32"), )
paddle.Tensor.__matmul__(Tensor([2, 18, 65536, 1024],"float32"), Tensor([2, 18, 1024, 64],"float32"), )
paddle.Tensor.__matmul__(Tensor([35, 1, 65536, 1024],"float32"), Tensor([1, 1, 1024, 32],"float32"), )
paddle.Tensor.__matmul__(Tensor([35, 1, 65536, 1024],"float32"), Tensor([35, 1, 1024, 32],"float32"), )
paddle.Tensor.__matmul__(Tensor([35, 1, 65536, 1024],"float32"), Tensor([35, 1, 1024, 64],"float32"), )
paddle.Tensor.__matmul__(Tensor([4, 1, 557057, 1024],"float32"), Tensor([4, 1, 1024, 32],"float32"), )
paddle.Tensor.__matmul__(Tensor([4, 1, 65536, 8705],"float32"), Tensor([4, 1, 8705, 1024],"float32"), )
paddle.Tensor.__matmul__(Tensor([4, 1, 65536, 8705],"float32"), Tensor([4, 1, 8705, 32],"float32"), )
paddle.Tensor.__matmul__(Tensor([4, 304, 11543, 306],"float16"), Tensor([306, 306],"float16"), )
paddle.Tensor.__matmul__(Tensor([4, 346, 10142, 306],"float16"), Tensor([306, 306],"float16"), )
paddle.Tensor.__matmul__(Tensor([4, 377, 9308, 306],"float16"), Tensor([306, 306],"float16"), )
paddle.Tensor.__matmul__(Tensor([4, 396, 8862, 306],"float16"), Tensor([306, 306],"float16"), )
paddle.Tensor.__matmul__(Tensor([4, 9, 65536, 1024],"float32"), Tensor([4, 1, 1024, 32],"float32"), )
paddle.Tensor.__matmul__(Tensor([4, 9, 65536, 1024],"float32"), Tensor([4, 9, 1024, 32],"float32"), )
paddle.Tensor.__matmul__(Tensor([4, 97472, 36, 306],"float16"), Tensor([306, 306],"float16"), )
paddle.Tensor.__matmul__(Tensor([5, 1, 1024],"float32"), Tensor([1024, 2228225],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 1, 1280],"float32"), Tensor([1280, 1782580],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 1, 43994],"float32"), Tensor([43994, 51865],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 1, 768],"float32"), Tensor([768, 2970966],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 3, 1024],"float32"), Tensor([1024, 2228225],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 3, 1280],"float32"), Tensor([1280, 1782580],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 3, 43994],"float32"), Tensor([43994, 51865],"float32"), )
paddle.Tensor.__matmul__(Tensor([5, 3, 768],"float32"), Tensor([768, 2970966],"float32"), )
paddle.Tensor.__matmul__(Tensor([985, 396, 36, 306],"float16"), Tensor([306, 306],"float16"), )
paddle.Tensor.cholesky_solve(x=Tensor([4, 570425345],"float32"), y=Tensor([4, 4],"float32"), )
paddle.Tensor.fill_diagonal_tensor(Tensor([1431655766, 3],"float16"), Tensor([2],"float16"), 1, 0, 1, )
paddle.Tensor.fill_diagonal_tensor(Tensor([1431655766, 3],"float16"), Tensor([2],"float16"), offset=1, dim1=0, dim2=1, )
paddle.Tensor.fill_diagonal_tensor(Tensor([1431655766, 3],"float16"), Tensor([3],"float16"), 0, 0, 1, )
paddle.Tensor.fill_diagonal_tensor(Tensor([1431655766, 3],"float16"), Tensor([3],"float16"), offset=-1, dim1=0, dim2=1, )
paddle.Tensor.fill_diagonal_tensor(Tensor([1431655766, 3],"float16"), Tensor([3],"float16"), offset=0, dim1=0, dim2=1, )
paddle.Tensor.fill_diagonal_tensor(Tensor([153391690, 4, 7],"float16"), Tensor([153391690, 4],"float16"), 0, 1, 2, )
paddle.Tensor.fill_diagonal_tensor(Tensor([2, 190141782, 3, 2],"float32"), Tensor([2, 2, 3],"float32"), offset=0, dim1=1, dim2=2, )
paddle.Tensor.fill_diagonal_tensor(Tensor([2, 285212673, 4],"float32"), Tensor([4, 2],"float32"), 0, 0, 1, )
paddle.Tensor.fill_diagonal_tensor(Tensor([2, 357913942, 3, 2],"float16"), Tensor([2, 2, 3],"float16"), offset=0, dim1=1, dim2=2, )
paddle.Tensor.fill_diagonal_tensor(Tensor([2, 4, 285212673],"float32"), Tensor([2, 4],"float32"), 0, 1, 2, )
paddle.Tensor.fill_diagonal_tensor(Tensor([2, 4, 536870913],"float16"), Tensor([2, 4],"float16"), 0, 1, 2, )
paddle.Tensor.fill_diagonal_tensor(Tensor([2, 536870913, 4],"float16"), Tensor([4, 2],"float16"), 0, 0, 1, )
paddle.Tensor.fill_diagonal_tensor(Tensor([3, 1431655766],"float16"), Tensor([1],"float16"), -2, 0, 1, )
paddle.Tensor.fill_diagonal_tensor(Tensor([3, 1431655766],"float16"), Tensor([2],"float16"), -1, 0, 1, )
paddle.Tensor.fill_diagonal_tensor(Tensor([3, 1431655766],"float16"), Tensor([3],"float16"), 0, 0, 1, )
paddle.Tensor.fill_diagonal_tensor(Tensor([3, 760567127],"float32"), Tensor([1],"float32"), -2, 0, 1, )
paddle.Tensor.fill_diagonal_tensor(Tensor([3, 760567127],"float32"), Tensor([2],"float32"), -1, 0, 1, )
paddle.Tensor.fill_diagonal_tensor(Tensor([3, 760567127],"float32"), Tensor([3],"float32"), 0, 0, 1, )
paddle.Tensor.fill_diagonal_tensor(Tensor([4, 1073741825],"float16"), Tensor([3],"float16"), offset=-1, dim1=0, dim2=1, )
paddle.Tensor.fill_diagonal_tensor(Tensor([4, 570425345],"float32"), Tensor([3],"float32"), offset=-1, dim1=0, dim2=1, )
paddle.Tensor.fill_diagonal_tensor(Tensor([760567127, 3],"float32"), Tensor([2],"float32"), 1, 0, 1, )
paddle.Tensor.fill_diagonal_tensor(Tensor([760567127, 3],"float32"), Tensor([2],"float32"), offset=1, dim1=0, dim2=1, )
paddle.Tensor.fill_diagonal_tensor(Tensor([760567127, 3],"float32"), Tensor([3],"float32"), 0, 0, 1, )
paddle.Tensor.fill_diagonal_tensor(Tensor([760567127, 3],"float32"), Tensor([3],"float32"), offset=-1, dim1=0, dim2=1, )
paddle.Tensor.fill_diagonal_tensor(Tensor([760567127, 3],"float32"), Tensor([3],"float32"), offset=0, dim1=0, dim2=1, )
paddle.Tensor.fill_diagonal_tensor(Tensor([81489335, 4, 7],"float32"), Tensor([81489335, 4],"float32"), 0, 1, 2, )
paddle.Tensor.logit(x=Tensor([143165577, 3, 2, 5],"float16"), )
paddle.Tensor.logit(x=Tensor([2147483649, 2],"float16"), )
paddle.Tensor.logit(x=Tensor([2281701379],"float32"), )
paddle.Tensor.logit(x=Tensor([4, 1073741825],"float16"), )
paddle.Tensor.logit(x=Tensor([4, 107374183, 2, 5],"float16"), )
paddle.Tensor.logit(x=Tensor([4, 3, 2, 178956971],"float16"), )
paddle.Tensor.logit(x=Tensor([4, 3, 357913942],"float16"), )
paddle.Tensor.logit(x=Tensor([4, 3, 71582789, 5],"float16"), )
paddle.Tensor.logit(x=Tensor([4, 536870913, 2],"float16"), )
paddle.Tensor.logit(x=Tensor([4294967297],"float16"), )
paddle.Tensor.logit(x=Tensor([715827883, 3, 2],"float16"), )
paddle.Tensor.mean(Tensor([17185, 132773],"int64"), )
paddle.Tensor.mean(Tensor([171888, 13275],"int64"), )
paddle.Tensor.mean(Tensor([17254, 132242],"int64"), )
paddle.Tensor.mean(Tensor([2, 1140850690],"int64"), )
paddle.Tensor.mean(Tensor([2, 28, 40744668],"int32"), )
paddle.Tensor.mean(Tensor([2, 40744668, 28],"int32"), )
paddle.Tensor.mean(Tensor([2281701379, 1],"int64"), )
paddle.Tensor.mean(Tensor([2281701379],"int32"), )
paddle.Tensor.mean(Tensor([2281701379],"int64"), )
paddle.Tensor.mean(Tensor([2910334, 28, 28],"int32"), )
paddle.Tensor.set_(Tensor([3, 1431655766],"float16"), Tensor([6, 3],"float16"), list[3,8,], list[2,2,], 0, )
paddle.Tensor.set_(Tensor([3, 8],"float16"), Tensor([1431655766, 3],"float16"), list[3,8,], list[2,2,], 0, )
paddle.Tensor.set_(Tensor([3, 8],"float16"), Tensor([6, 715827883],"float16"), list[3,8,], list[2,2,], 0, )
paddle.Tensor.set_(Tensor([536870913, 8],"float16"), Tensor([536870913, 3],"float16"), list[3,8,], list[2,2,], 0, )
paddle.Tensor.set_(Tensor([536870913, 8],"float16"), Tensor([6, 3],"float16"), list[3,8,], list[2,2,], 0, )
paddle.Tensor.set_(Tensor([536870913, 8],"float16"), Tensor([6, 536870913],"float16"), list[3,8,], list[2,2,], 0, )
paddle.clip(Tensor([10, 429496730],"float16"), min=1e-06, )
paddle.clip(Tensor([2147483649, 2],"float16"), min=0.0, )
paddle.clip(Tensor([2147483649, 2],"float16"), min=1e-06, )
paddle.clip(Tensor([4294967297],"float16"), min=0, )
paddle.clip(Tensor([4294967297],"float16"), min=0.0, )
paddle.clip(Tensor([5, 858993460],"float16"), min=0.0, )
paddle.clip(x=Tensor([1, 1431655766, 3],"float16"), min=None, max=1, )
paddle.clip(x=Tensor([1, 2, 2147483649],"float16"), min=None, max=1, )
paddle.clip(x=Tensor([1431655766, 3],"float16"), min=1.0, max=None, )
paddle.clip(x=Tensor([1431655766, 3],"float16"), min=5, max=None, )
paddle.clip(x=Tensor([1431655766, 3],"float16"), min=Tensor([1],"float16"), max=None, )
paddle.clip(x=Tensor([3, 1431655766],"float16"), min=1.0, max=None, )
paddle.clip(x=Tensor([3, 1431655766],"float16"), min=5, max=None, )
paddle.clip(x=Tensor([3, 1431655766],"float16"), min=Tensor([1],"float16"), max=None, )
paddle.clip(x=Tensor([3, 3, 477218589],"float16"), min=None, max=5, )
paddle.clip(x=Tensor([3, 3],"float16"), min=Tensor([4294967297],"float16"), max=None, )
paddle.clip(x=Tensor([3, 477218589, 3],"float16"), min=None, max=5, )
paddle.clip(x=Tensor([4294967297],"float16"), )
paddle.clip(x=Tensor([4294967297],"float16"), min=None, max=-1, )
paddle.clip(x=Tensor([477218589, 3, 3],"float16"), min=None, max=5, )
paddle.clip(x=Tensor([715827883, 2, 3],"float16"), min=None, max=1, )
paddle.copysign(Tensor([10, 429496730],"int8"), Tensor([10, 429496730],"int8"), )
paddle.copysign(Tensor([107374183, 20, 2],"int8"), Tensor([107374183, 20, 2],"int8"), )
paddle.copysign(Tensor([12, 178956971, 2],"int8"), Tensor([12, 178956971, 2],"int8"), )
paddle.copysign(Tensor([12, 20, 17895698],"int8"), Tensor([12, 20, 17895698],"int8"), )
paddle.copysign(Tensor([2, 107374183, 4, 5],"int8"), Tensor([2, 107374183, 4, 5],"int8"), )
paddle.copysign(Tensor([2, 3, 143165577, 5],"int8"), Tensor([2, 3, 143165577, 5],"int8"), )
paddle.copysign(Tensor([2, 3, 4, 178956971],"int8"), Tensor([2, 3, 4, 178956971],"int8"), )
paddle.copysign(Tensor([214748365, 20],"int8"), Tensor([214748365, 20],"int8"), )
paddle.copysign(Tensor([71582789, 3, 4, 5],"int8"), Tensor([71582789, 3, 4, 5],"int8"), )
paddle.cumsum(Tensor([1, 4294967297],"float16"), axis=-1, )
paddle.cumsum(Tensor([134218, 32000],"float16"), axis=-1, )
paddle.einsum("ak, kn-> an", Tensor([60000, 38029],"float32"), Tensor([38029, 50],"float32"), )
paddle.einsum("ij,ij->j", Tensor([10, 429496730],"float16"), Tensor([1, 429496730],"float16"), )
paddle.einsum("mixy,bmxy,kmxy->bixy", Tensor([32, 32, 1, 1],"float32"), Tensor([1228, 32, 241, 241],"float32"), Tensor([1, 32, 1, 1],"float32"), )
paddle.einsum("mixy,bmxy,kmxy->bixy", Tensor([32, 32, 1, 1],"float32"), Tensor([8, 32, 241, 241],"float32"), Tensor([1, 2281701379, 1, 1],"float32"), )
paddle.einsum("mixy,bmxy,kmxy->bixy", Tensor([32, 32, 1, 1],"float32"), Tensor([8, 32, 241, 241],"float32"), Tensor([1, 32, 1, 71303169],"float32"), )
paddle.einsum("mixy,bmxy,kmxy->bixy", Tensor([32, 32, 1, 1],"float32"), Tensor([8, 32, 241, 241],"float32"), Tensor([1, 32, 71303169, 1],"float32"), )
paddle.einsum("mixy,bmxy,kmxy->bixy", Tensor([32, 32, 1, 1],"float32"), Tensor([8, 4911, 241, 241],"float32"), Tensor([1, 32, 1, 1],"float32"), )
paddle.einsum("mixy,bmxy,kmxy->bixy", Tensor([32, 32, 1, 2228225],"float32"), Tensor([8, 32, 241, 241],"float32"), Tensor([1, 32, 1, 1],"float32"), )
paddle.einsum("mixy,bmxy,kmxy->bixy", Tensor([32, 32, 2228225, 1],"float32"), Tensor([8, 32, 241, 241],"float32"), Tensor([1, 32, 1, 1],"float32"), )
paddle.einsum("mixy,bmxy,kmxy->bixy", Tensor([71303169, 32, 1, 1],"float32"), Tensor([8, 32, 241, 241],"float32"), Tensor([1, 32, 1, 1],"float32"), )
paddle.gammaln(Tensor([10, 20, 11408507],"float32"), )
paddle.gammaln(Tensor([10, 228170138, 1],"float32"), )
paddle.gammaln(Tensor([114085069, 20, 1],"float32"), )
paddle.gammaln(Tensor([2, 107374183, 4, 5],"float16"), )
paddle.gammaln(Tensor([2, 3, 143165577, 5],"float16"), )
paddle.gammaln(Tensor([2, 3, 4, 178956971],"float16"), )
paddle.gammaln(Tensor([2, 3, 4, 95070891],"float32"), )
paddle.gammaln(Tensor([2, 3, 76056713, 5],"float32"), )
paddle.gammaln(Tensor([2, 57042535, 4, 5],"float32"), )
paddle.gammaln(Tensor([38028357, 3, 4, 5],"float32"), )
paddle.gammaln(Tensor([71582789, 3, 4, 5],"float16"), )
paddle.incubate.nn.functional.fused_bias_act(Tensor([103639, 22016],"int32"), None, act_method="swiglu", compute_dtype="fp16", dequant_scales=Tensor([22016],"float32"), shift=None, smooth=None, quant_scale=0.0009313154732808471, quant_round_type=0, quant_max_bound=127.0, quant_min_bound=-127.0, )
paddle.incubate.nn.functional.fused_bias_act(Tensor([103639, 22016],"int32"), None, act_method="swiglu", compute_dtype="fp16", dequant_scales=Tensor([22016],"float32"), shift=None, smooth=None, quant_scale=0.0009654839523136616, quant_round_type=0, quant_max_bound=127.0, quant_min_bound=-127.0, )
paddle.incubate.nn.functional.fused_bias_act(Tensor([103639, 22016],"int32"), None, act_method="swiglu", compute_dtype="fp16", dequant_scales=Tensor([22016],"float32"), shift=None, smooth=None, quant_scale=0.0009928022045642138, quant_round_type=0, quant_max_bound=127.0, quant_min_bound=-127.0, )
paddle.incubate.nn.functional.fused_bias_act(Tensor([103639, 22016],"int32"), None, act_method="swiglu", compute_dtype="fp16", dequant_scales=Tensor([22016],"float32"), shift=None, smooth=None, quant_scale=0.0010831302497535944, quant_round_type=0, quant_max_bound=127.0, quant_min_bound=-127.0, )
paddle.incubate.nn.functional.fused_bias_act(Tensor([103639, 22016],"int32"), None, act_method="swiglu", compute_dtype="fp16", dequant_scales=Tensor([22016],"float32"), shift=None, smooth=None, quant_scale=0.0010981468949466944, quant_round_type=0, quant_max_bound=127.0, quant_min_bound=-127.0, )
paddle.incubate.nn.functional.fused_bias_act(Tensor([103639, 22016],"int32"), None, act_method="swiglu", compute_dtype="fp16", dequant_scales=Tensor([22016],"float32"), shift=None, smooth=None, quant_scale=0.0014022786635905504, quant_round_type=0, quant_max_bound=127.0, quant_min_bound=-127.0, )
paddle.incubate.nn.functional.fused_bias_act(Tensor([103639, 22016],"int32"), None, act_method="swiglu", compute_dtype="fp16", dequant_scales=Tensor([22016],"float32"), shift=None, smooth=None, quant_scale=0.001479289960116148, quant_round_type=0, quant_max_bound=127.0, quant_min_bound=-127.0, )
paddle.incubate.nn.functional.fused_bias_act(Tensor([103639, 22016],"int32"), None, act_method="swiglu", compute_dtype="fp16", dequant_scales=Tensor([22016],"float32"), shift=None, smooth=None, quant_scale=0.0016999575309455395, quant_round_type=0, quant_max_bound=127.0, quant_min_bound=-127.0, )
paddle.incubate.nn.functional.fused_bias_act(Tensor([2, 1140850690],"int32"), None, act_method="swiglu", compute_dtype="fp16", dequant_scales=Tensor([1140850690],"float32"), shift=None, smooth=None, quant_scale=0.0009313154732808471, quant_round_type=0, quant_max_bound=127.0, quant_min_bound=-127.0, )
paddle.incubate.nn.functional.fused_bias_act(Tensor([2, 1140850690],"int32"), None, act_method="swiglu", compute_dtype="fp16", dequant_scales=Tensor([1140850690],"float32"), shift=None, smooth=None, quant_scale=0.0009654839523136616, quant_round_type=0, quant_max_bound=127.0, quant_min_bound=-127.0, )
paddle.incubate.nn.functional.fused_bias_act(Tensor([2, 1140850690],"int32"), None, act_method="swiglu", compute_dtype="fp16", dequant_scales=Tensor([1140850690],"float32"), shift=None, smooth=None, quant_scale=0.0009928022045642138, quant_round_type=0, quant_max_bound=127.0, quant_min_bound=-127.0, )
paddle.incubate.nn.functional.fused_bias_act(Tensor([2, 1140850690],"int32"), None, act_method="swiglu", compute_dtype="fp16", dequant_scales=Tensor([1140850690],"float32"), shift=None, smooth=None, quant_scale=0.0010831302497535944, quant_round_type=0, quant_max_bound=127.0, quant_min_bound=-127.0, )
paddle.incubate.nn.functional.fused_bias_act(Tensor([2, 1140850690],"int32"), None, act_method="swiglu", compute_dtype="fp16", dequant_scales=Tensor([1140850690],"float32"), shift=None, smooth=None, quant_scale=0.0010981468949466944, quant_round_type=0, quant_max_bound=127.0, quant_min_bound=-127.0, )
paddle.incubate.nn.functional.fused_bias_act(Tensor([2, 1140850690],"int32"), None, act_method="swiglu", compute_dtype="fp16", dequant_scales=Tensor([1140850690],"float32"), shift=None, smooth=None, quant_scale=0.0014022786635905504, quant_round_type=0, quant_max_bound=127.0, quant_min_bound=-127.0, )
paddle.incubate.nn.functional.fused_bias_act(Tensor([2, 1140850690],"int32"), None, act_method="swiglu", compute_dtype="fp16", dequant_scales=Tensor([1140850690],"float32"), shift=None, smooth=None, quant_scale=0.001479289960116148, quant_round_type=0, quant_max_bound=127.0, quant_min_bound=-127.0, )
paddle.incubate.nn.functional.fused_bias_act(Tensor([2, 1140850690],"int32"), None, act_method="swiglu", compute_dtype="fp16", dequant_scales=Tensor([1140850690],"float32"), shift=None, smooth=None, quant_scale=0.0016999575309455395, quant_round_type=0, quant_max_bound=127.0, quant_min_bound=-127.0, )
paddle.incubate.nn.functional.fused_bias_act(Tensor([2, 1140850690],"int32"), None, act_method="swiglu", compute_dtype="fp16", dequant_scales=Tensor([22016],"float32"), shift=None, smooth=None, quant_scale=0.0009313154732808471, quant_round_type=0, quant_max_bound=127.0, quant_min_bound=-127.0, )
paddle.incubate.nn.functional.fused_bias_act(Tensor([2, 1140850690],"int32"), None, act_method="swiglu", compute_dtype="fp16", dequant_scales=Tensor([22016],"float32"), shift=None, smooth=None, quant_scale=0.0009654839523136616, quant_round_type=0, quant_max_bound=127.0, quant_min_bound=-127.0, )
paddle.incubate.nn.functional.fused_bias_act(Tensor([2, 1140850690],"int32"), None, act_method="swiglu", compute_dtype="fp16", dequant_scales=Tensor([22016],"float32"), shift=None, smooth=None, quant_scale=0.0009928022045642138, quant_round_type=0, quant_max_bound=127.0, quant_min_bound=-127.0, )
paddle.incubate.nn.functional.fused_bias_act(Tensor([2, 1140850690],"int32"), None, act_method="swiglu", compute_dtype="fp16", dequant_scales=Tensor([22016],"float32"), shift=None, smooth=None, quant_scale=0.0010831302497535944, quant_round_type=0, quant_max_bound=127.0, quant_min_bound=-127.0, )
paddle.incubate.nn.functional.fused_bias_act(Tensor([2, 1140850690],"int32"), None, act_method="swiglu", compute_dtype="fp16", dequant_scales=Tensor([22016],"float32"), shift=None, smooth=None, quant_scale=0.0010981468949466944, quant_round_type=0, quant_max_bound=127.0, quant_min_bound=-127.0, )
paddle.incubate.nn.functional.fused_bias_act(Tensor([2, 1140850690],"int32"), None, act_method="swiglu", compute_dtype="fp16", dequant_scales=Tensor([22016],"float32"), shift=None, smooth=None, quant_scale=0.0014022786635905504, quant_round_type=0, quant_max_bound=127.0, quant_min_bound=-127.0, )
paddle.incubate.nn.functional.fused_bias_act(Tensor([2, 1140850690],"int32"), None, act_method="swiglu", compute_dtype="fp16", dequant_scales=Tensor([22016],"float32"), shift=None, smooth=None, quant_scale=0.001479289960116148, quant_round_type=0, quant_max_bound=127.0, quant_min_bound=-127.0, )
paddle.incubate.nn.functional.fused_bias_act(Tensor([2, 1140850690],"int32"), None, act_method="swiglu", compute_dtype="fp16", dequant_scales=Tensor([22016],"float32"), shift=None, smooth=None, quant_scale=0.0016999575309455395, quant_round_type=0, quant_max_bound=127.0, quant_min_bound=-127.0, )
paddle.incubate.nn.functional.fused_bias_act(Tensor([2, 22016],"int32"), None, act_method="swiglu", compute_dtype="fp16", dequant_scales=Tensor([2281701379],"float32"), shift=None, smooth=None, quant_scale=0.0009313154732808471, quant_round_type=0, quant_max_bound=127.0, quant_min_bound=-127.0, )
paddle.incubate.nn.functional.fused_bias_act(Tensor([2, 22016],"int32"), None, act_method="swiglu", compute_dtype="fp16", dequant_scales=Tensor([2281701379],"float32"), shift=None, smooth=None, quant_scale=0.0009654839523136616, quant_round_type=0, quant_max_bound=127.0, quant_min_bound=-127.0, )
paddle.incubate.nn.functional.fused_bias_act(Tensor([2, 22016],"int32"), None, act_method="swiglu", compute_dtype="fp16", dequant_scales=Tensor([2281701379],"float32"), shift=None, smooth=None, quant_scale=0.0009928022045642138, quant_round_type=0, quant_max_bound=127.0, quant_min_bound=-127.0, )
paddle.incubate.nn.functional.fused_bias_act(Tensor([2, 22016],"int32"), None, act_method="swiglu", compute_dtype="fp16", dequant_scales=Tensor([2281701379],"float32"), shift=None, smooth=None, quant_scale=0.0010831302497535944, quant_round_type=0, quant_max_bound=127.0, quant_min_bound=-127.0, )
paddle.incubate.nn.functional.fused_bias_act(Tensor([2, 22016],"int32"), None, act_method="swiglu", compute_dtype="fp16", dequant_scales=Tensor([2281701379],"float32"), shift=None, smooth=None, quant_scale=0.0010981468949466944, quant_round_type=0, quant_max_bound=127.0, quant_min_bound=-127.0, )
paddle.incubate.nn.functional.fused_bias_act(Tensor([2, 22016],"int32"), None, act_method="swiglu", compute_dtype="fp16", dequant_scales=Tensor([2281701379],"float32"), shift=None, smooth=None, quant_scale=0.0014022786635905504, quant_round_type=0, quant_max_bound=127.0, quant_min_bound=-127.0, )
paddle.incubate.nn.functional.fused_bias_act(Tensor([2, 22016],"int32"), None, act_method="swiglu", compute_dtype="fp16", dequant_scales=Tensor([2281701379],"float32"), shift=None, smooth=None, quant_scale=0.001479289960116148, quant_round_type=0, quant_max_bound=127.0, quant_min_bound=-127.0, )
paddle.incubate.nn.functional.fused_bias_act(Tensor([2, 22016],"int32"), None, act_method="swiglu", compute_dtype="fp16", dequant_scales=Tensor([2281701379],"float32"), shift=None, smooth=None, quant_scale=0.0016999575309455395, quant_round_type=0, quant_max_bound=127.0, quant_min_bound=-127.0, )
paddle.incubate.nn.functional.fused_bias_act(Tensor([464, 22016],"int32"), None, act_method="swiglu", compute_dtype="fp16", dequant_scales=Tensor([2281701379],"float32"), shift=None, smooth=None, quant_scale=0.0009313154732808471, quant_round_type=0, quant_max_bound=127.0, quant_min_bound=-127.0, )
paddle.incubate.nn.functional.fused_bias_act(Tensor([464, 22016],"int32"), None, act_method="swiglu", compute_dtype="fp16", dequant_scales=Tensor([2281701379],"float32"), shift=None, smooth=None, quant_scale=0.0009654839523136616, quant_round_type=0, quant_max_bound=127.0, quant_min_bound=-127.0, )
paddle.incubate.nn.functional.fused_bias_act(Tensor([464, 22016],"int32"), None, act_method="swiglu", compute_dtype="fp16", dequant_scales=Tensor([2281701379],"float32"), shift=None, smooth=None, quant_scale=0.0009928022045642138, quant_round_type=0, quant_max_bound=127.0, quant_min_bound=-127.0, )
paddle.incubate.nn.functional.fused_bias_act(Tensor([464, 22016],"int32"), None, act_method="swiglu", compute_dtype="fp16", dequant_scales=Tensor([2281701379],"float32"), shift=None, smooth=None, quant_scale=0.0010831302497535944, quant_round_type=0, quant_max_bound=127.0, quant_min_bound=-127.0, )
paddle.incubate.nn.functional.fused_bias_act(Tensor([464, 22016],"int32"), None, act_method="swiglu", compute_dtype="fp16", dequant_scales=Tensor([2281701379],"float32"), shift=None, smooth=None, quant_scale=0.0010981468949466944, quant_round_type=0, quant_max_bound=127.0, quant_min_bound=-127.0, )
paddle.incubate.nn.functional.fused_bias_act(Tensor([464, 22016],"int32"), None, act_method="swiglu", compute_dtype="fp16", dequant_scales=Tensor([2281701379],"float32"), shift=None, smooth=None, quant_scale=0.0014022786635905504, quant_round_type=0, quant_max_bound=127.0, quant_min_bound=-127.0, )
paddle.incubate.nn.functional.fused_bias_act(Tensor([464, 22016],"int32"), None, act_method="swiglu", compute_dtype="fp16", dequant_scales=Tensor([2281701379],"float32"), shift=None, smooth=None, quant_scale=0.001479289960116148, quant_round_type=0, quant_max_bound=127.0, quant_min_bound=-127.0, )
paddle.incubate.nn.functional.fused_bias_act(Tensor([464, 22016],"int32"), None, act_method="swiglu", compute_dtype="fp16", dequant_scales=Tensor([2281701379],"float32"), shift=None, smooth=None, quant_scale=0.0016999575309455395, quant_round_type=0, quant_max_bound=127.0, quant_min_bound=-127.0, )
paddle.incubate.nn.functional.fused_bias_act(Tensor([464, 4917460],"int32"), None, act_method="swiglu", compute_dtype="fp16", dequant_scales=Tensor([22016],"float32"), shift=None, smooth=None, quant_scale=0.0009313154732808471, quant_round_type=0, quant_max_bound=127.0, quant_min_bound=-127.0, )
paddle.incubate.nn.functional.fused_bias_act(Tensor([464, 4917460],"int32"), None, act_method="swiglu", compute_dtype="fp16", dequant_scales=Tensor([22016],"float32"), shift=None, smooth=None, quant_scale=0.0009654839523136616, quant_round_type=0, quant_max_bound=127.0, quant_min_bound=-127.0, )
paddle.incubate.nn.functional.fused_bias_act(Tensor([464, 4917460],"int32"), None, act_method="swiglu", compute_dtype="fp16", dequant_scales=Tensor([22016],"float32"), shift=None, smooth=None, quant_scale=0.0009928022045642138, quant_round_type=0, quant_max_bound=127.0, quant_min_bound=-127.0, )
paddle.incubate.nn.functional.fused_bias_act(Tensor([464, 4917460],"int32"), None, act_method="swiglu", compute_dtype="fp16", dequant_scales=Tensor([22016],"float32"), shift=None, smooth=None, quant_scale=0.0010831302497535944, quant_round_type=0, quant_max_bound=127.0, quant_min_bound=-127.0, )
paddle.incubate.nn.functional.fused_bias_act(Tensor([464, 4917460],"int32"), None, act_method="swiglu", compute_dtype="fp16", dequant_scales=Tensor([22016],"float32"), shift=None, smooth=None, quant_scale=0.0010981468949466944, quant_round_type=0, quant_max_bound=127.0, quant_min_bound=-127.0, )
paddle.incubate.nn.functional.fused_bias_act(Tensor([464, 4917460],"int32"), None, act_method="swiglu", compute_dtype="fp16", dequant_scales=Tensor([22016],"float32"), shift=None, smooth=None, quant_scale=0.0014022786635905504, quant_round_type=0, quant_max_bound=127.0, quant_min_bound=-127.0, )
paddle.incubate.nn.functional.fused_bias_act(Tensor([464, 4917460],"int32"), None, act_method="swiglu", compute_dtype="fp16", dequant_scales=Tensor([22016],"float32"), shift=None, smooth=None, quant_scale=0.001479289960116148, quant_round_type=0, quant_max_bound=127.0, quant_min_bound=-127.0, )
paddle.incubate.nn.functional.fused_bias_act(Tensor([464, 4917460],"int32"), None, act_method="swiglu", compute_dtype="fp16", dequant_scales=Tensor([22016],"float32"), shift=None, smooth=None, quant_scale=0.0016999575309455395, quant_round_type=0, quant_max_bound=127.0, quant_min_bound=-127.0, )
paddle.incubate.nn.functional.fused_bias_act(Tensor([464, 4917460],"int32"), None, act_method="swiglu", compute_dtype="fp16", dequant_scales=Tensor([4917460],"float32"), shift=None, smooth=None, quant_scale=0.0009313154732808471, quant_round_type=0, quant_max_bound=127.0, quant_min_bound=-127.0, )
paddle.incubate.nn.functional.fused_bias_act(Tensor([464, 4917460],"int32"), None, act_method="swiglu", compute_dtype="fp16", dequant_scales=Tensor([4917460],"float32"), shift=None, smooth=None, quant_scale=0.0009654839523136616, quant_round_type=0, quant_max_bound=127.0, quant_min_bound=-127.0, )
paddle.incubate.nn.functional.fused_bias_act(Tensor([464, 4917460],"int32"), None, act_method="swiglu", compute_dtype="fp16", dequant_scales=Tensor([4917460],"float32"), shift=None, smooth=None, quant_scale=0.0009928022045642138, quant_round_type=0, quant_max_bound=127.0, quant_min_bound=-127.0, )
paddle.incubate.nn.functional.fused_bias_act(Tensor([464, 4917460],"int32"), None, act_method="swiglu", compute_dtype="fp16", dequant_scales=Tensor([4917460],"float32"), shift=None, smooth=None, quant_scale=0.0010831302497535944, quant_round_type=0, quant_max_bound=127.0, quant_min_bound=-127.0, )
paddle.incubate.nn.functional.fused_bias_act(Tensor([464, 4917460],"int32"), None, act_method="swiglu", compute_dtype="fp16", dequant_scales=Tensor([4917460],"float32"), shift=None, smooth=None, quant_scale=0.0010981468949466944, quant_round_type=0, quant_max_bound=127.0, quant_min_bound=-127.0, )
paddle.incubate.nn.functional.fused_bias_act(Tensor([464, 4917460],"int32"), None, act_method="swiglu", compute_dtype="fp16", dequant_scales=Tensor([4917460],"float32"), shift=None, smooth=None, quant_scale=0.0014022786635905504, quant_round_type=0, quant_max_bound=127.0, quant_min_bound=-127.0, )
paddle.incubate.nn.functional.fused_bias_act(Tensor([464, 4917460],"int32"), None, act_method="swiglu", compute_dtype="fp16", dequant_scales=Tensor([4917460],"float32"), shift=None, smooth=None, quant_scale=0.001479289960116148, quant_round_type=0, quant_max_bound=127.0, quant_min_bound=-127.0, )
paddle.incubate.nn.functional.fused_bias_act(Tensor([464, 4917460],"int32"), None, act_method="swiglu", compute_dtype="fp16", dequant_scales=Tensor([4917460],"float32"), shift=None, smooth=None, quant_scale=0.0016999575309455395, quant_round_type=0, quant_max_bound=127.0, quant_min_bound=-127.0, )
paddle.incubate.nn.functional.fused_bias_act(x=Tensor([11408507, 20, 10],"int32"), bias=Tensor([10],"float16"), dequant_scales=Tensor([10],"float32"), act_method="gelu", compute_dtype="fp16", )
paddle.incubate.nn.functional.fused_bias_act(x=Tensor([2, 114085069, 10],"int32"), bias=Tensor([10],"float16"), dequant_scales=Tensor([10],"float32"), act_method="gelu", compute_dtype="fp16", )
paddle.incubate.nn.functional.fused_bias_act(x=Tensor([2, 20, 10],"int32"), bias=Tensor([10],"float16"), dequant_scales=Tensor([2281701379],"float32"), act_method="gelu", compute_dtype="fp16", )
paddle.incubate.nn.functional.fused_bias_act(x=Tensor([2, 20, 10],"int32"), bias=Tensor([4294967297],"float16"), dequant_scales=Tensor([10],"float32"), act_method="gelu", compute_dtype="fp16", )
paddle.incubate.nn.functional.fused_bias_act(x=Tensor([2, 20, 512],"int32"), bias=Tensor([2281701379],"float32"), dequant_scales=Tensor([512],"float32"), shift=Tensor([512],"float32"), smooth=Tensor([512],"float32"), act_method="gelu", compute_dtype="fp32", quant_scale=0.5, quant_round_type=1, quant_max_bound=127.0, quant_min_bound=-127.0, )
paddle.incubate.nn.functional.fused_bias_act(x=Tensor([2, 20, 512],"int32"), bias=Tensor([4294967297],"float16"), dequant_scales=Tensor([512],"float32"), shift=Tensor([256],"float16"), smooth=Tensor([256],"float16"), act_method="geglu", compute_dtype="fp16", quant_scale=0.5, quant_round_type=1, quant_max_bound=127.0, quant_min_bound=-127.0, )
paddle.incubate.nn.functional.fused_bias_act(x=Tensor([2, 20, 512],"int32"), bias=Tensor([4294967297],"float16"), dequant_scales=Tensor([512],"float32"), shift=Tensor([512],"float16"), smooth=Tensor([512],"float16"), act_method="gelu", compute_dtype="fp16", quant_scale=0.5, quant_round_type=1, quant_max_bound=127.0, quant_min_bound=-127.0, )
paddle.incubate.nn.functional.fused_bias_act(x=Tensor([2, 20, 512],"int32"), bias=Tensor([512],"float16"), dequant_scales=Tensor([2281701379],"float32"), shift=Tensor([256],"float16"), smooth=Tensor([256],"float16"), act_method="geglu", compute_dtype="fp16", quant_scale=0.5, quant_round_type=1, quant_max_bound=127.0, quant_min_bound=-127.0, )
paddle.incubate.nn.functional.fused_bias_act(x=Tensor([2, 20, 512],"int32"), bias=Tensor([512],"float16"), dequant_scales=Tensor([2281701379],"float32"), shift=Tensor([512],"float16"), smooth=Tensor([512],"float16"), act_method="gelu", compute_dtype="fp16", quant_scale=0.5, quant_round_type=1, quant_max_bound=127.0, quant_min_bound=-127.0, )
paddle.incubate.nn.functional.fused_bias_act(x=Tensor([2, 20, 512],"int32"), bias=Tensor([512],"float16"), dequant_scales=Tensor([512],"float32"), shift=Tensor([256],"float16"), smooth=Tensor([4294967297],"float16"), act_method="geglu", compute_dtype="fp16", quant_scale=0.5, quant_round_type=1, quant_max_bound=127.0, quant_min_bound=-127.0, )
paddle.incubate.nn.functional.fused_bias_act(x=Tensor([2, 20, 512],"int32"), bias=Tensor([512],"float16"), dequant_scales=Tensor([512],"float32"), shift=Tensor([4294967297],"float16"), smooth=Tensor([256],"float16"), act_method="geglu", compute_dtype="fp16", quant_scale=0.5, quant_round_type=1, quant_max_bound=127.0, quant_min_bound=-127.0, )
paddle.incubate.nn.functional.fused_bias_act(x=Tensor([2, 20, 512],"int32"), bias=Tensor([512],"float16"), dequant_scales=Tensor([512],"float32"), shift=Tensor([4294967297],"float16"), smooth=Tensor([4294967297],"float16"), act_method="geglu", compute_dtype="fp16", quant_scale=0.5, quant_round_type=1, quant_max_bound=127.0, quant_min_bound=-127.0, )
paddle.incubate.nn.functional.fused_bias_act(x=Tensor([2, 20, 512],"int32"), bias=Tensor([512],"float16"), dequant_scales=Tensor([512],"float32"), shift=Tensor([4294967297],"float16"), smooth=Tensor([512],"float16"), act_method="gelu", compute_dtype="fp16", quant_scale=0.5, quant_round_type=1, quant_max_bound=127.0, quant_min_bound=-127.0, )
paddle.incubate.nn.functional.fused_bias_act(x=Tensor([2, 20, 512],"int32"), bias=Tensor([512],"float16"), dequant_scales=Tensor([512],"float32"), shift=Tensor([512],"float16"), smooth=Tensor([4294967297],"float16"), act_method="gelu", compute_dtype="fp16", quant_scale=0.5, quant_round_type=1, quant_max_bound=127.0, quant_min_bound=-127.0, )
paddle.incubate.nn.functional.fused_bias_act(x=Tensor([2, 20, 512],"int32"), bias=Tensor([512],"float32"), dequant_scales=Tensor([2281701379],"float32"), shift=Tensor([512],"float32"), smooth=Tensor([512],"float32"), act_method="gelu", compute_dtype="fp32", quant_scale=0.5, quant_round_type=1, quant_max_bound=127.0, quant_min_bound=-127.0, )
paddle.incubate.nn.functional.fused_bias_act(x=Tensor([2, 20, 512],"int32"), bias=Tensor([512],"float32"), dequant_scales=Tensor([512],"float32"), shift=Tensor([2281701379],"float32"), smooth=Tensor([512],"float32"), act_method="gelu", compute_dtype="fp32", quant_scale=0.5, quant_round_type=1, quant_max_bound=127.0, quant_min_bound=-127.0, )
paddle.incubate.nn.functional.fused_bias_act(x=Tensor([2, 20, 512],"int32"), bias=Tensor([512],"float32"), dequant_scales=Tensor([512],"float32"), shift=Tensor([512],"float32"), smooth=Tensor([2281701379],"float32"), act_method="gelu", compute_dtype="fp32", quant_scale=0.5, quant_round_type=1, quant_max_bound=127.0, quant_min_bound=-127.0, )
paddle.incubate.nn.functional.fused_bias_act(x=Tensor([2, 20, 57042535],"int32"), bias=Tensor([10],"float16"), dequant_scales=Tensor([10],"float32"), act_method="gelu", compute_dtype="fp16", )
paddle.incubate.nn.functional.fused_bias_act(x=Tensor([2, 20, 57042535],"int32"), bias=Tensor([512],"float16"), dequant_scales=Tensor([512],"float32"), shift=Tensor([512],"float16"), smooth=Tensor([512],"float16"), act_method="gelu", compute_dtype="fp16", quant_scale=0.5, quant_round_type=1, quant_max_bound=127.0, quant_min_bound=-127.0, )
paddle.incubate.nn.functional.fused_bias_act(x=Tensor([2, 20, 57042535],"int32"), bias=Tensor([512],"float32"), dequant_scales=Tensor([512],"float32"), shift=Tensor([512],"float32"), smooth=Tensor([512],"float32"), act_method="gelu", compute_dtype="fp32", quant_scale=0.5, quant_round_type=1, quant_max_bound=127.0, quant_min_bound=-127.0, )
paddle.incubate.nn.functional.fused_bias_act(x=Tensor([2, 20, 57042535],"int32"), bias=Tensor([57042535],"float16"), dequant_scales=Tensor([57042535],"float32"), act_method="gelu", compute_dtype="fp16", )
paddle.incubate.nn.functional.fused_bias_act(x=Tensor([2, 20, 57042535],"int32"), bias=Tensor([57042535],"float16"), dequant_scales=Tensor([57042535],"float32"), shift=Tensor([57042535],"float16"), smooth=Tensor([57042535],"float16"), act_method="gelu", compute_dtype="fp16", quant_scale=0.5, quant_round_type=1, quant_max_bound=127.0, quant_min_bound=-127.0, )
paddle.incubate.nn.functional.fused_bias_act(x=Tensor([2, 20, 57042535],"int32"), bias=Tensor([57042535],"float32"), dequant_scales=Tensor([57042535],"float32"), shift=Tensor([57042535],"float32"), smooth=Tensor([57042535],"float32"), act_method="gelu", compute_dtype="fp32", quant_scale=0.5, quant_round_type=1, quant_max_bound=127.0, quant_min_bound=-127.0, )
paddle.incubate.nn.functional.fused_bias_act(x=Tensor([2, 2228225, 512],"int32"), bias=Tensor([512],"float16"), dequant_scales=Tensor([512],"float32"), shift=Tensor([256],"float16"), smooth=Tensor([256],"float16"), act_method="geglu", compute_dtype="fp16", quant_scale=0.5, quant_round_type=1, quant_max_bound=127.0, quant_min_bound=-127.0, )
paddle.incubate.nn.functional.fused_bias_act(x=Tensor([2, 2228225, 512],"int32"), bias=Tensor([512],"float16"), dequant_scales=Tensor([512],"float32"), shift=Tensor([512],"float16"), smooth=Tensor([512],"float16"), act_method="gelu", compute_dtype="fp16", quant_scale=0.5, quant_round_type=1, quant_max_bound=127.0, quant_min_bound=-127.0, )
paddle.incubate.nn.functional.fused_bias_act(x=Tensor([2, 2228225, 512],"int32"), bias=Tensor([512],"float32"), dequant_scales=Tensor([512],"float32"), shift=Tensor([512],"float32"), smooth=Tensor([512],"float32"), act_method="gelu", compute_dtype="fp32", quant_scale=0.5, quant_round_type=1, quant_max_bound=127.0, quant_min_bound=-127.0, )
paddle.incubate.nn.functional.fused_bias_act(x=Tensor([222823, 20, 512],"int32"), bias=Tensor([512],"float16"), dequant_scales=Tensor([512],"float32"), shift=Tensor([256],"float16"), smooth=Tensor([256],"float16"), act_method="geglu", compute_dtype="fp16", quant_scale=0.5, quant_round_type=1, quant_max_bound=127.0, quant_min_bound=-127.0, )
paddle.incubate.nn.functional.fused_bias_act(x=Tensor([222823, 20, 512],"int32"), bias=Tensor([512],"float16"), dequant_scales=Tensor([512],"float32"), shift=Tensor([512],"float16"), smooth=Tensor([512],"float16"), act_method="gelu", compute_dtype="fp16", quant_scale=0.5, quant_round_type=1, quant_max_bound=127.0, quant_min_bound=-127.0, )
paddle.incubate.nn.functional.fused_bias_act(x=Tensor([222823, 20, 512],"int32"), bias=Tensor([512],"float32"), dequant_scales=Tensor([512],"float32"), shift=Tensor([512],"float32"), smooth=Tensor([512],"float32"), act_method="gelu", compute_dtype="fp32", quant_scale=0.5, quant_round_type=1, quant_max_bound=127.0, quant_min_bound=-127.0, )
paddle.incubate.nn.functional.fused_bias_dropout_residual_layer_norm(Tensor([17409, 128, 1024],"float32"), Tensor([17409, 128, 1024],"float32"), None, Tensor([1024],"float32"), Tensor([1024],"float32"), 0.0, 1e-05, )
paddle.incubate.nn.functional.fused_bias_dropout_residual_layer_norm(Tensor([17409, 128, 1024],"float32"), Tensor([8, 128, 1024],"float32"), None, Tensor([1024],"float32"), Tensor([1024],"float32"), 0.0, 1e-05, )
paddle.incubate.nn.functional.fused_bias_dropout_residual_layer_norm(Tensor([8, 128, 1024],"float32"), Tensor([17409, 128, 1024],"float32"), None, Tensor([1024],"float32"), Tensor([1024],"float32"), 0.0, 1e-05, )
paddle.incubate.nn.functional.fused_bias_dropout_residual_layer_norm(Tensor([8, 128, 1024],"float32"), Tensor([8, 128, 2228225],"float32"), None, Tensor([1024],"float32"), Tensor([1024],"float32"), 0.0, 1e-05, )
paddle.incubate.nn.functional.fused_bias_dropout_residual_layer_norm(Tensor([8, 128, 1024],"float32"), Tensor([8, 278529, 1024],"float32"), None, Tensor([1024],"float32"), Tensor([1024],"float32"), 0.0, 1e-05, )
paddle.incubate.nn.functional.fused_bias_dropout_residual_layer_norm(Tensor([8, 278529, 1024],"float32"), Tensor([8, 128, 1024],"float32"), None, Tensor([1024],"float32"), Tensor([1024],"float32"), 0.0, 1e-05, )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([1, 4294967297],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-06, begin_norm_axis=1, bias=None, residual=Tensor([1, 4294967297],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([1, 4294967297],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-06, begin_norm_axis=1, bias=None, residual=Tensor([1, 64],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([1, 64],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-06, begin_norm_axis=1, bias=None, residual=Tensor([1, 4294967297],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([1, 64],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-06, begin_norm_axis=1, bias=None, residual=Tensor([67108865, 64],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([100, 42949673],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-05, begin_norm_axis=1, bias=None, residual=Tensor([100, 42949673],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([100, 42949673],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-05, begin_norm_axis=1, bias=None, residual=Tensor([100, 512],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([100, 512],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-05, begin_norm_axis=1, bias=None, residual=Tensor([100, 42949673],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([100, 512],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-05, begin_norm_axis=1, bias=None, residual=Tensor([8388609, 512],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([101, 42524429],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-05, begin_norm_axis=1, bias=Tensor([42524429],"float16"), residual=Tensor([101, 42524429],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([101, 42524429],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-05, begin_norm_axis=1, bias=Tensor([64],"float16"), residual=Tensor([101, 64],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([101, 42524429],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-06, begin_norm_axis=1, bias=None, residual=Tensor([101, 42524429],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([101, 42524429],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-06, begin_norm_axis=1, bias=None, residual=Tensor([101, 64],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([101, 64],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-05, begin_norm_axis=1, bias=Tensor([4294967297],"float16"), residual=Tensor([101, 64],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([101, 64],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-05, begin_norm_axis=1, bias=Tensor([64],"float16"), residual=Tensor([101, 42524429],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([101, 64],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-05, begin_norm_axis=1, bias=Tensor([64],"float16"), residual=Tensor([67108865, 64],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([101, 64],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-06, begin_norm_axis=1, bias=None, residual=Tensor([101, 42524429],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([101, 64],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-06, begin_norm_axis=1, bias=None, residual=Tensor([67108865, 64],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([104, 41297763],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-05, begin_norm_axis=1, bias=None, residual=Tensor([104, 41297763],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([104, 41297763],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-05, begin_norm_axis=1, bias=None, residual=Tensor([104, 512],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([104, 512],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-05, begin_norm_axis=1, bias=None, residual=Tensor([104, 41297763],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([104, 512],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-05, begin_norm_axis=1, bias=None, residual=Tensor([8388609, 512],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([123, 34918434],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-06, begin_norm_axis=1, bias=None, residual=Tensor([123, 34918434],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([123, 34918434],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-06, begin_norm_axis=1, bias=None, residual=Tensor([123, 768],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([123, 768],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-06, begin_norm_axis=1, bias=None, residual=Tensor([123, 34918434],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([123, 768],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-06, begin_norm_axis=1, bias=None, residual=Tensor([5592406, 768],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([131, 32786010],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-06, begin_norm_axis=1, bias=None, residual=Tensor([131, 32786010],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([131, 32786010],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-06, begin_norm_axis=1, bias=None, residual=Tensor([131, 768],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([131, 768],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-06, begin_norm_axis=1, bias=None, residual=Tensor([131, 32786010],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([131, 768],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-06, begin_norm_axis=1, bias=None, residual=Tensor([5592406, 768],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([136, 31580642],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-06, begin_norm_axis=1, bias=None, residual=Tensor([136, 31580642],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([136, 31580642],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-06, begin_norm_axis=1, bias=None, residual=Tensor([136, 768],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([136, 768],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-06, begin_norm_axis=1, bias=None, residual=Tensor([136, 31580642],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([136, 768],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-06, begin_norm_axis=1, bias=None, residual=Tensor([5592406, 768],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([16, 142606337],"float32"), None, None, 1e-05, begin_norm_axis=1, bias=Tensor([142606337],"float32"), residual=Tensor([16, 142606337],"float32"), residual_alpha=0.69204696, )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([16, 142606337],"float32"), None, None, 1e-05, begin_norm_axis=1, bias=Tensor([256],"float32"), residual=Tensor([16, 256],"float32"), residual_alpha=0.69204696, )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([16, 142606337],"float32"), Tensor([142606337],"float32"), Tensor([142606337],"float32"), 1e-05, begin_norm_axis=1, )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([16, 256],"float16"), None, None, 1e-05, begin_norm_axis=1, bias=Tensor([256],"float16"), residual=Tensor([16, 268435457],"float16"), residual_alpha=0.69204696, )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([16, 256],"float16"), None, None, 1e-05, begin_norm_axis=1, bias=Tensor([256],"float16"), residual=Tensor([16777217, 256],"float16"), residual_alpha=0.69204696, )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([16, 256],"float16"), None, None, 1e-05, begin_norm_axis=1, bias=Tensor([4294967297],"float16"), residual=Tensor([16, 256],"float16"), residual_alpha=0.69204696, )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([16, 256],"float32"), None, None, 1e-05, begin_norm_axis=1, bias=Tensor([2281701379],"float32"), residual=Tensor([16, 256],"float32"), residual_alpha=0.69204696, )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([16, 256],"float32"), None, None, 1e-05, begin_norm_axis=1, bias=Tensor([256],"float32"), residual=Tensor([16, 142606337],"float32"), residual_alpha=0.69204696, )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([16, 256],"float32"), None, None, 1e-05, begin_norm_axis=1, bias=Tensor([256],"float32"), residual=Tensor([8912897, 256],"float32"), residual_alpha=0.69204696, )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([16, 256],"float32"), Tensor([256],"float32"), Tensor([2281701379],"float32"), 1e-05, begin_norm_axis=1, )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([16, 268435457],"float16"), None, None, 1e-05, begin_norm_axis=1, bias=Tensor([256],"float16"), residual=Tensor([16, 256],"float16"), residual_alpha=0.69204696, )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([16, 268435457],"float16"), None, None, 1e-05, begin_norm_axis=1, bias=Tensor([268435457],"float16"), residual=Tensor([16, 268435457],"float16"), residual_alpha=0.69204696, )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([16777217, 256],"float16"), None, None, 1e-05, begin_norm_axis=1, bias=Tensor([256],"float16"), residual=Tensor([16, 256],"float16"), residual_alpha=0.69204696, )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([16777217, 256],"float16"), None, None, 1e-05, begin_norm_axis=1, bias=Tensor([256],"float16"), residual=Tensor([16777217, 256],"float16"), residual_alpha=0.69204696, )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([2, 2147483649],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-05, begin_norm_axis=1, bias=None, residual=Tensor([2, 2147483649],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([2, 2147483649],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-05, begin_norm_axis=1, bias=None, residual=Tensor([2, 512],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([2, 2147483649],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-05, begin_norm_axis=1, bias=Tensor([2147483649],"float16"), residual=Tensor([2, 2147483649],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([2, 2147483649],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-05, begin_norm_axis=1, bias=Tensor([64],"float16"), residual=Tensor([2, 64],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([2, 512],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-05, begin_norm_axis=1, bias=None, residual=Tensor([2, 2147483649],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([2, 512],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-05, begin_norm_axis=1, bias=None, residual=Tensor([8388609, 512],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([2, 64],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-05, begin_norm_axis=1, bias=Tensor([4294967297],"float16"), residual=Tensor([2, 64],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([2, 64],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-05, begin_norm_axis=1, bias=Tensor([64],"float16"), residual=Tensor([2, 2147483649],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([2, 64],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-05, begin_norm_axis=1, bias=Tensor([64],"float16"), residual=Tensor([67108865, 64],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([5592406, 768],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-06, begin_norm_axis=1, bias=None, residual=Tensor([123, 768],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([5592406, 768],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-06, begin_norm_axis=1, bias=None, residual=Tensor([131, 768],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([5592406, 768],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-06, begin_norm_axis=1, bias=None, residual=Tensor([136, 768],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([5592406, 768],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-06, begin_norm_axis=1, bias=None, residual=Tensor([5592406, 768],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([59, 64],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-05, begin_norm_axis=1, bias=Tensor([4294967297],"float16"), residual=Tensor([59, 64],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([59, 64],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-05, begin_norm_axis=1, bias=Tensor([64],"float16"), residual=Tensor([59, 72796056],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([59, 64],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-05, begin_norm_axis=1, bias=Tensor([64],"float16"), residual=Tensor([67108865, 64],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([59, 72796056],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-05, begin_norm_axis=1, bias=Tensor([64],"float16"), residual=Tensor([59, 64],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([59, 72796056],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-05, begin_norm_axis=1, bias=Tensor([72796056],"float16"), residual=Tensor([59, 72796056],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([60, 64],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-05, begin_norm_axis=1, bias=Tensor([4294967297],"float16"), residual=Tensor([60, 64],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([60, 64],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-05, begin_norm_axis=1, bias=Tensor([64],"float16"), residual=Tensor([60, 71582789],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([60, 64],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-05, begin_norm_axis=1, bias=Tensor([64],"float16"), residual=Tensor([67108865, 64],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([60, 71582789],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-05, begin_norm_axis=1, bias=Tensor([64],"float16"), residual=Tensor([60, 64],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([60, 71582789],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-05, begin_norm_axis=1, bias=Tensor([71582789],"float16"), residual=Tensor([60, 71582789],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([64, 512],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-05, begin_norm_axis=1, bias=None, residual=Tensor([64, 67108865],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([64, 512],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-05, begin_norm_axis=1, bias=None, residual=Tensor([8388609, 512],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([64, 67108865],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-05, begin_norm_axis=1, bias=None, residual=Tensor([64, 512],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([64, 67108865],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-05, begin_norm_axis=1, bias=None, residual=Tensor([64, 67108865],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([67, 64103990],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-05, begin_norm_axis=1, bias=Tensor([64103990],"float16"), residual=Tensor([67, 64103990],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([67, 64103990],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-05, begin_norm_axis=1, bias=Tensor([64],"float16"), residual=Tensor([67, 64],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([67, 64],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-05, begin_norm_axis=1, bias=Tensor([4294967297],"float16"), residual=Tensor([67, 64],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([67, 64],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-05, begin_norm_axis=1, bias=Tensor([64],"float16"), residual=Tensor([67, 64103990],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([67, 64],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-05, begin_norm_axis=1, bias=Tensor([64],"float16"), residual=Tensor([67108865, 64],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([67108865, 64],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-05, begin_norm_axis=1, bias=Tensor([64],"float16"), residual=Tensor([101, 64],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([67108865, 64],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-05, begin_norm_axis=1, bias=Tensor([64],"float16"), residual=Tensor([2, 64],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([67108865, 64],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-05, begin_norm_axis=1, bias=Tensor([64],"float16"), residual=Tensor([59, 64],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([67108865, 64],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-05, begin_norm_axis=1, bias=Tensor([64],"float16"), residual=Tensor([60, 64],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([67108865, 64],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-05, begin_norm_axis=1, bias=Tensor([64],"float16"), residual=Tensor([67, 64],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([67108865, 64],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-05, begin_norm_axis=1, bias=Tensor([64],"float16"), residual=Tensor([67108865, 64],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([67108865, 64],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-06, begin_norm_axis=1, bias=None, residual=Tensor([1, 64],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([67108865, 64],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-06, begin_norm_axis=1, bias=None, residual=Tensor([101, 64],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([67108865, 64],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-06, begin_norm_axis=1, bias=None, residual=Tensor([67108865, 64],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([71, 512],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-05, begin_norm_axis=1, bias=None, residual=Tensor([71, 60492498],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([71, 512],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-05, begin_norm_axis=1, bias=None, residual=Tensor([8388609, 512],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([71, 60492498],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-05, begin_norm_axis=1, bias=None, residual=Tensor([71, 512],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([71, 60492498],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-05, begin_norm_axis=1, bias=None, residual=Tensor([71, 60492498],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([8388609, 512],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-05, begin_norm_axis=1, bias=None, residual=Tensor([100, 512],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([8388609, 512],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-05, begin_norm_axis=1, bias=None, residual=Tensor([104, 512],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([8388609, 512],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-05, begin_norm_axis=1, bias=None, residual=Tensor([2, 512],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([8388609, 512],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-05, begin_norm_axis=1, bias=None, residual=Tensor([64, 512],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([8388609, 512],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-05, begin_norm_axis=1, bias=None, residual=Tensor([71, 512],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([8388609, 512],"float16"), norm_weight=None, norm_bias=None, epsilon=1e-05, begin_norm_axis=1, bias=None, residual=Tensor([8388609, 512],"float16"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([8912897, 256],"float32"), None, None, 1e-05, begin_norm_axis=1, bias=Tensor([256],"float32"), residual=Tensor([16, 256],"float32"), residual_alpha=0.69204696, )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([8912897, 256],"float32"), None, None, 1e-05, begin_norm_axis=1, bias=Tensor([256],"float32"), residual=Tensor([8912897, 256],"float32"), residual_alpha=0.69204696, )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([8912897, 256],"float32"), Tensor([256],"float32"), Tensor([256],"float32"), 1e-05, begin_norm_axis=1, )
paddle.incubate.nn.functional.fused_linear(Tensor([1024, 16, 262145],"float16"), Tensor([262145, 1024],"float16"), Tensor([1024],"float16"), name=None, )
paddle.incubate.nn.functional.fused_linear(Tensor([1024, 4097, 1024],"float16"), Tensor([1024, 384],"float16"), Tensor([384],"float16"), name=None, )
paddle.incubate.nn.functional.fused_linear(Tensor([1024, 4097, 1024],"float16"), Tensor([1024, 512],"float16"), Tensor([512],"float16"), name=None, )
paddle.incubate.nn.functional.fused_linear(Tensor([10700, 196, 2048],"float16"), Tensor([2048, 512],"float16"), Tensor([512],"float16"), False, None, )
paddle.incubate.nn.functional.fused_linear(Tensor([128, 16385, 2048],"float16"), Tensor([2048, 512],"float16"), Tensor([512],"float16"), False, None, )
paddle.incubate.nn.functional.fused_linear(Tensor([128, 196, 171197],"float16"), Tensor([171197, 2048],"float16"), Tensor([2048],"float16"), False, None, )
paddle.incubate.nn.functional.fused_linear(Tensor([128, 196, 171197],"float16"), Tensor([171197, 512],"float16"), Tensor([512],"float16"), False, None, )
paddle.incubate.nn.functional.fused_linear(Tensor([128, 784, 42800],"float16"), Tensor([42800, 1024],"float16"), Tensor([1024],"float16"), False, None, )
paddle.incubate.nn.functional.fused_linear(Tensor([16, 262145, 1024],"float16"), Tensor([1024, 512],"float16"), Tensor([512],"float16"), name=None, )
paddle.incubate.nn.functional.fused_linear(Tensor([2048, 8193, 256],"float16"), Tensor([256, 256],"float16"), Tensor([256],"float16"), False, None, )
paddle.incubate.nn.functional.fused_linear(Tensor([262145, 16, 1024],"float16"), Tensor([1024, 384],"float16"), Tensor([384],"float16"), name=None, )
paddle.incubate.nn.functional.fused_linear(Tensor([262145, 16, 1024],"float16"), Tensor([1024, 512],"float16"), Tensor([512],"float16"), name=None, )
paddle.incubate.nn.functional.fused_linear(Tensor([342393, 49, 256],"float16"), Tensor([256, 256],"float16"), Tensor([256],"float16"), False, None, )
paddle.incubate.nn.functional.fused_linear(Tensor([4097, 1024, 1024],"float16"), Tensor([1024, 512],"float16"), Tensor([512],"float16"), name=None, )
paddle.incubate.nn.functional.fused_linear_activation(Tensor([8, 33554433],"float16"), Tensor([33554433, 128],"float16"), Tensor([128],"float16"), False, False, "gelu", )
paddle.incubate.nn.functional.fused_linear_activation(Tensor([8, 33554433],"float16"), Tensor([33554433, 128],"float16"), Tensor([128],"float16"), False, False, "relu", )
paddle.incubate.nn.functional.fused_multi_head_attention(Tensor([8, 128, 1024],"float32"), Tensor([3, 11606, 64, 1024],"float32"), Tensor([1024, 1024],"float32"), True, Tensor([1024],"float32"), Tensor([1024],"float32"), Tensor([1024],"float32"), Tensor([1024],"float32"), 1e-05, Tensor([3, 11606, 64],"float32"), Tensor([1024],"float32"), None, None, 0.0, 0.0, 1e-05, num_heads=16, transpose_qkv_wb=False, )
paddle.incubate.nn.functional.fused_multi_head_attention(Tensor([8, 128, 1024],"float32"), Tensor([3, 11606, 64, 1024],"float32"), Tensor([1024, 1024],"float32"), True, Tensor([1024],"float32"), Tensor([1024],"float32"), Tensor([1024],"float32"), Tensor([1024],"float32"), 1e-05, Tensor([3, 11606, 64],"float32"), Tensor([1024],"float32"), None, Tensor([8, 11606, 128, 128],"float32"), 0.0, 0.0, 1e-05, num_heads=16, transpose_qkv_wb=False, )
paddle.incubate.nn.functional.fused_multi_head_attention(Tensor([8, 128, 1024],"float32"), Tensor([3, 11606, 64, 1024],"float32"), Tensor([1024, 1024],"float32"), True, Tensor([1024],"float32"), Tensor([1024],"float32"), Tensor([1024],"float32"), Tensor([1024],"float32"), 1e-05, Tensor([3, 16, 64],"float32"), Tensor([1024],"float32"), None, None, 0.0, 0.0, 1e-05, num_heads=16, transpose_qkv_wb=False, )
paddle.incubate.nn.functional.fused_multi_head_attention(Tensor([8, 128, 1024],"float32"), Tensor([3, 11606, 64, 1024],"float32"), Tensor([1024, 1024],"float32"), True, Tensor([1024],"float32"), Tensor([1024],"float32"), Tensor([1024],"float32"), Tensor([1024],"float32"), 1e-05, Tensor([3, 16, 64],"float32"), Tensor([1024],"float32"), None, Tensor([8, 16, 128, 128],"float32"), 0.0, 0.0, 1e-05, num_heads=16, transpose_qkv_wb=False, )
paddle.incubate.nn.functional.fused_multi_head_attention(Tensor([8, 128, 1024],"float32"), Tensor([3, 16, 46422, 1024],"float32"), Tensor([1024, 1024],"float32"), True, Tensor([1024],"float32"), Tensor([1024],"float32"), Tensor([1024],"float32"), Tensor([1024],"float32"), 1e-05, Tensor([3, 16, 46422],"float32"), Tensor([1024],"float32"), None, None, 0.0, 0.0, 1e-05, num_heads=16, transpose_qkv_wb=False, )
paddle.incubate.nn.functional.fused_multi_head_attention(Tensor([8, 128, 1024],"float32"), Tensor([3, 16, 46422, 1024],"float32"), Tensor([1024, 1024],"float32"), True, Tensor([1024],"float32"), Tensor([1024],"float32"), Tensor([1024],"float32"), Tensor([1024],"float32"), 1e-05, Tensor([3, 16, 46422],"float32"), Tensor([1024],"float32"), None, Tensor([8, 16, 128, 128],"float32"), 0.0, 0.0, 1e-05, num_heads=16, transpose_qkv_wb=False, )
paddle.incubate.nn.functional.fused_multi_head_attention(Tensor([8, 128, 1024],"float32"), Tensor([3, 16, 46422, 1024],"float32"), Tensor([1024, 1024],"float32"), True, Tensor([1024],"float32"), Tensor([1024],"float32"), Tensor([1024],"float32"), Tensor([1024],"float32"), 1e-05, Tensor([3, 16, 64],"float32"), Tensor([1024],"float32"), None, None, 0.0, 0.0, 1e-05, num_heads=16, transpose_qkv_wb=False, )
paddle.incubate.nn.functional.fused_multi_head_attention(Tensor([8, 128, 1024],"float32"), Tensor([3, 16, 46422, 1024],"float32"), Tensor([1024, 1024],"float32"), True, Tensor([1024],"float32"), Tensor([1024],"float32"), Tensor([1024],"float32"), Tensor([1024],"float32"), 1e-05, Tensor([3, 16, 64],"float32"), Tensor([1024],"float32"), None, Tensor([8, 16, 128, 128],"float32"), 0.0, 0.0, 1e-05, num_heads=16, transpose_qkv_wb=False, )
paddle.incubate.nn.functional.fused_multi_head_attention(Tensor([8, 128, 1024],"float32"), Tensor([3, 16, 64, 1024],"float32"), Tensor([1024, 1024],"float32"), True, Tensor([1024],"float32"), Tensor([1024],"float32"), Tensor([1024],"float32"), Tensor([1024],"float32"), 1e-05, Tensor([3, 16, 64],"float32"), Tensor([2281701379],"float32"), None, None, 0.0, 0.0, 1e-05, num_heads=16, transpose_qkv_wb=False, )
paddle.incubate.nn.functional.fused_multi_head_attention(Tensor([8, 128, 1024],"float32"), Tensor([3, 16, 64, 1024],"float32"), Tensor([1024, 1024],"float32"), True, Tensor([1024],"float32"), Tensor([1024],"float32"), Tensor([1024],"float32"), Tensor([1024],"float32"), 1e-05, Tensor([3, 16, 64],"float32"), Tensor([2281701379],"float32"), None, Tensor([8, 16, 128, 128],"float32"), 0.0, 0.0, 1e-05, num_heads=16, transpose_qkv_wb=False, )
paddle.incubate.nn.functional.fused_multi_head_attention(Tensor([8, 128, 1024],"float32"), Tensor([3, 16, 64, 1024],"float32"), Tensor([1024, 1024],"float32"), True, Tensor([1024],"float32"), Tensor([1024],"float32"), Tensor([1024],"float32"), Tensor([2281701379],"float32"), 1e-05, Tensor([3, 16, 64],"float32"), Tensor([1024],"float32"), None, None, 0.0, 0.0, 1e-05, num_heads=16, transpose_qkv_wb=False, )
paddle.incubate.nn.functional.fused_multi_head_attention(Tensor([8, 128, 1024],"float32"), Tensor([3, 16, 64, 1024],"float32"), Tensor([1024, 1024],"float32"), True, Tensor([1024],"float32"), Tensor([1024],"float32"), Tensor([1024],"float32"), Tensor([2281701379],"float32"), 1e-05, Tensor([3, 16, 64],"float32"), Tensor([1024],"float32"), None, Tensor([8, 16, 128, 128],"float32"), 0.0, 0.0, 1e-05, num_heads=16, transpose_qkv_wb=False, )
paddle.incubate.nn.functional.fused_multi_head_attention(Tensor([8, 128, 1024],"float32"), Tensor([3, 16, 64, 1024],"float32"), Tensor([1024, 1024],"float32"), True, Tensor([1024],"float32"), Tensor([1024],"float32"), Tensor([2281701379],"float32"), Tensor([1024],"float32"), 1e-05, Tensor([3, 16, 64],"float32"), Tensor([1024],"float32"), None, None, 0.0, 0.0, 1e-05, num_heads=16, transpose_qkv_wb=False, )
paddle.incubate.nn.functional.fused_multi_head_attention(Tensor([8, 128, 1024],"float32"), Tensor([3, 16, 64, 1024],"float32"), Tensor([1024, 1024],"float32"), True, Tensor([1024],"float32"), Tensor([1024],"float32"), Tensor([2281701379],"float32"), Tensor([1024],"float32"), 1e-05, Tensor([3, 16, 64],"float32"), Tensor([1024],"float32"), None, Tensor([8, 16, 128, 128],"float32"), 0.0, 0.0, 1e-05, num_heads=16, transpose_qkv_wb=False, )
paddle.incubate.nn.functional.fused_multi_head_attention(Tensor([8, 128, 1024],"float32"), Tensor([3, 16, 64, 1024],"float32"), Tensor([1024, 1024],"float32"), True, Tensor([1024],"float32"), Tensor([2281701379],"float32"), Tensor([1024],"float32"), Tensor([1024],"float32"), 1e-05, Tensor([3, 16, 64],"float32"), Tensor([1024],"float32"), None, None, 0.0, 0.0, 1e-05, num_heads=16, transpose_qkv_wb=False, )
paddle.incubate.nn.functional.fused_multi_head_attention(Tensor([8, 128, 1024],"float32"), Tensor([3, 16, 64, 1024],"float32"), Tensor([1024, 1024],"float32"), True, Tensor([1024],"float32"), Tensor([2281701379],"float32"), Tensor([1024],"float32"), Tensor([1024],"float32"), 1e-05, Tensor([3, 16, 64],"float32"), Tensor([1024],"float32"), None, Tensor([8, 16, 128, 128],"float32"), 0.0, 0.0, 1e-05, num_heads=16, transpose_qkv_wb=False, )
paddle.incubate.nn.functional.fused_multi_head_attention(Tensor([8, 128, 1024],"float32"), Tensor([3, 16, 64, 1024],"float32"), Tensor([1024, 1024],"float32"), True, Tensor([2281701379],"float32"), Tensor([1024],"float32"), Tensor([1024],"float32"), Tensor([1024],"float32"), 1e-05, Tensor([3, 16, 64],"float32"), Tensor([1024],"float32"), None, None, 0.0, 0.0, 1e-05, num_heads=16, transpose_qkv_wb=False, )
paddle.incubate.nn.functional.fused_multi_head_attention(Tensor([8, 128, 1024],"float32"), Tensor([3, 16, 64, 1024],"float32"), Tensor([1024, 1024],"float32"), True, Tensor([2281701379],"float32"), Tensor([1024],"float32"), Tensor([1024],"float32"), Tensor([1024],"float32"), 1e-05, Tensor([3, 16, 64],"float32"), Tensor([1024],"float32"), None, Tensor([8, 16, 128, 128],"float32"), 0.0, 0.0, 1e-05, num_heads=16, transpose_qkv_wb=False, )
paddle.incubate.nn.functional.fused_multi_head_attention(Tensor([8, 128, 1024],"float32"), Tensor([3, 16, 64, 1024],"float32"), Tensor([1024, 2228225],"float32"), True, Tensor([1024],"float32"), Tensor([1024],"float32"), Tensor([1024],"float32"), Tensor([1024],"float32"), 1e-05, Tensor([3, 16, 64],"float32"), Tensor([1024],"float32"), None, None, 0.0, 0.0, 1e-05, num_heads=16, transpose_qkv_wb=False, )
paddle.incubate.nn.functional.fused_multi_head_attention(Tensor([8, 128, 1024],"float32"), Tensor([3, 16, 64, 1024],"float32"), Tensor([1024, 2228225],"float32"), True, Tensor([1024],"float32"), Tensor([1024],"float32"), Tensor([1024],"float32"), Tensor([1024],"float32"), 1e-05, Tensor([3, 16, 64],"float32"), Tensor([1024],"float32"), None, Tensor([8, 16, 128, 128],"float32"), 0.0, 0.0, 1e-05, num_heads=16, transpose_qkv_wb=False, )
paddle.incubate.nn.functional.fused_multi_head_attention(Tensor([8, 128, 1024],"float32"), Tensor([3, 16, 64, 1024],"float32"), Tensor([2228225, 1024],"float32"), True, Tensor([1024],"float32"), Tensor([1024],"float32"), Tensor([1024],"float32"), Tensor([1024],"float32"), 1e-05, Tensor([3, 16, 64],"float32"), Tensor([1024],"float32"), None, None, 0.0, 0.0, 1e-05, num_heads=16, transpose_qkv_wb=False, )
paddle.incubate.nn.functional.fused_multi_head_attention(Tensor([8, 128, 1024],"float32"), Tensor([3, 16, 64, 1024],"float32"), Tensor([2228225, 1024],"float32"), True, Tensor([1024],"float32"), Tensor([1024],"float32"), Tensor([1024],"float32"), Tensor([1024],"float32"), 1e-05, Tensor([3, 16, 64],"float32"), Tensor([1024],"float32"), None, Tensor([8, 16, 128, 128],"float32"), 0.0, 0.0, 1e-05, num_heads=16, transpose_qkv_wb=False, )
paddle.incubate.nn.functional.fused_multi_head_attention(Tensor([8, 128, 1024],"float32"), Tensor([3, 17409, 64, 1024],"float32"), Tensor([1024, 1024],"float32"), True, Tensor([1024],"float32"), Tensor([1024],"float32"), Tensor([1024],"float32"), Tensor([1024],"float32"), 1e-05, Tensor([3, 17409, 64],"float32"), Tensor([1024],"float32"), None, Tensor([8, 17409, 128, 128],"float32"), 0.0, 0.0, 1e-05, num_heads=16, transpose_qkv_wb=False, )
paddle.incubate.nn.functional.fused_multi_head_attention(x=Tensor([1, 2, 4],"float32"), qkv_weight=Tensor([3, 2, 2, 4],"float32"), linear_weight=Tensor([4, 4],"float32"), pre_layer_norm=False, pre_ln_scale=None, pre_ln_bias=None, ln_scale=Tensor([2281701379],"float32"), ln_bias=None, pre_ln_epsilon=1e-05, qkv_bias=None, linear_bias=None, cache_kv=None, attn_mask=Tensor([1, 2, 2, 2],"float32"), dropout_rate=0.0, attn_dropout_rate=0.0, ln_epsilon=1e-05, training=True, ring_id=-1, num_heads=2, transpose_qkv_wb=False, name=None, )
paddle.incubate.nn.functional.fused_multi_head_attention(x=Tensor([1, 2, 4],"float32"), qkv_weight=Tensor([3, 2, 2, 4],"float32"), linear_weight=Tensor([4, 570425345],"float32"), pre_layer_norm=False, pre_ln_scale=None, pre_ln_bias=None, ln_scale=Tensor([4],"float32"), ln_bias=None, pre_ln_epsilon=1e-05, qkv_bias=None, linear_bias=None, cache_kv=None, attn_mask=Tensor([1, 2, 2, 2],"float32"), dropout_rate=0.0, attn_dropout_rate=0.0, ln_epsilon=1e-05, training=True, ring_id=-1, num_heads=2, transpose_qkv_wb=False, name=None, )
paddle.incubate.nn.functional.fused_multi_head_attention(x=Tensor([1, 2, 4],"float32"), qkv_weight=Tensor([3, 2, 2, 4],"float32"), linear_weight=Tensor([570425345, 4],"float32"), pre_layer_norm=False, pre_ln_scale=None, pre_ln_bias=None, ln_scale=Tensor([4],"float32"), ln_bias=None, pre_ln_epsilon=1e-05, qkv_bias=None, linear_bias=None, cache_kv=None, attn_mask=Tensor([1, 2, 2, 2],"float32"), dropout_rate=0.0, attn_dropout_rate=0.0, ln_epsilon=1e-05, training=True, ring_id=-1, num_heads=2, transpose_qkv_wb=False, name=None, )
paddle.incubate.nn.functional.fused_multi_head_attention(x=Tensor([1, 2, 4],"float32"), qkv_weight=Tensor([3, 2, 95070891, 4],"float32"), linear_weight=Tensor([4, 4],"float32"), pre_layer_norm=False, pre_ln_scale=None, pre_ln_bias=None, ln_scale=Tensor([4],"float32"), ln_bias=None, pre_ln_epsilon=1e-05, qkv_bias=None, linear_bias=None, cache_kv=None, attn_mask=Tensor([1, 2, 2, 2],"float32"), dropout_rate=0.0, attn_dropout_rate=0.0, ln_epsilon=1e-05, training=True, ring_id=-1, num_heads=2, transpose_qkv_wb=False, name=None, )
paddle.incubate.nn.functional.fused_multi_head_attention(x=Tensor([1, 2, 4],"float32"), qkv_weight=Tensor([3, 95070891, 2, 4],"float32"), linear_weight=Tensor([4, 4],"float32"), pre_layer_norm=False, pre_ln_scale=None, pre_ln_bias=None, ln_scale=Tensor([4],"float32"), ln_bias=None, pre_ln_epsilon=1e-05, qkv_bias=None, linear_bias=None, cache_kv=None, attn_mask=Tensor([1, 2, 2, 2],"float32"), dropout_rate=0.0, attn_dropout_rate=0.0, ln_epsilon=1e-05, training=True, ring_id=-1, num_heads=2, transpose_qkv_wb=False, name=None, )
paddle.incubate.nn.functional.fused_multi_head_attention(x=Tensor([1, 2, 4],"float32"), qkv_weight=Tensor([4, 12],"float32"), linear_weight=Tensor([4, 4],"float32"), pre_layer_norm=False, pre_ln_scale=None, pre_ln_bias=None, ln_scale=Tensor([2281701379],"float32"), ln_bias=None, pre_ln_epsilon=1e-05, qkv_bias=None, linear_bias=None, cache_kv=None, attn_mask=Tensor([1, 2, 2, 2],"float32"), dropout_rate=0.0, attn_dropout_rate=0.0, ln_epsilon=1e-05, training=True, ring_id=-1, num_heads=2, transpose_qkv_wb=True, name=None, )
paddle.incubate.nn.functional.fused_multi_head_attention(x=Tensor([1, 2, 4],"float32"), qkv_weight=Tensor([4, 12],"float32"), linear_weight=Tensor([4, 570425345],"float32"), pre_layer_norm=False, pre_ln_scale=None, pre_ln_bias=None, ln_scale=Tensor([4],"float32"), ln_bias=None, pre_ln_epsilon=1e-05, qkv_bias=None, linear_bias=None, cache_kv=None, attn_mask=Tensor([1, 2, 2, 2],"float32"), dropout_rate=0.0, attn_dropout_rate=0.0, ln_epsilon=1e-05, training=True, ring_id=-1, num_heads=2, transpose_qkv_wb=True, name=None, )
paddle.incubate.nn.functional.fused_multi_head_attention(x=Tensor([1, 2, 4],"float32"), qkv_weight=Tensor([4, 12],"float32"), linear_weight=Tensor([570425345, 4],"float32"), pre_layer_norm=False, pre_ln_scale=None, pre_ln_bias=None, ln_scale=Tensor([4],"float32"), ln_bias=None, pre_ln_epsilon=1e-05, qkv_bias=None, linear_bias=None, cache_kv=None, attn_mask=Tensor([1, 2, 2, 2],"float32"), dropout_rate=0.0, attn_dropout_rate=0.0, ln_epsilon=1e-05, training=True, ring_id=-1, num_heads=2, transpose_qkv_wb=True, name=None, )
paddle.incubate.nn.functional.fused_multi_head_attention(x=Tensor([8, 128, 256],"float32"), qkv_weight=Tensor([3, 16, 16, 256],"float32"), linear_weight=Tensor([256, 256],"float32"), pre_layer_norm=True, pre_ln_scale=Tensor([2281701379],"float32"), pre_ln_bias=Tensor([256],"float32"), ln_scale=None, ln_bias=None, pre_ln_epsilon=1e-05, qkv_bias=Tensor([3, 16, 16],"float32"), linear_bias=Tensor([256],"float32"), cache_kv=None, attn_mask=None, dropout_rate=0.0, attn_dropout_rate=0.0, ln_epsilon=1e-05, training=True, ring_id=-1, num_heads=16, transpose_qkv_wb=False, name=None, )
paddle.incubate.nn.functional.fused_multi_head_attention(x=Tensor([8, 128, 256],"float32"), qkv_weight=Tensor([3, 16, 16, 256],"float32"), linear_weight=Tensor([256, 256],"float32"), pre_layer_norm=True, pre_ln_scale=Tensor([256],"float32"), pre_ln_bias=Tensor([2281701379],"float32"), ln_scale=None, ln_bias=None, pre_ln_epsilon=1e-05, qkv_bias=Tensor([3, 16, 16],"float32"), linear_bias=Tensor([256],"float32"), cache_kv=None, attn_mask=None, dropout_rate=0.0, attn_dropout_rate=0.0, ln_epsilon=1e-05, training=True, ring_id=-1, num_heads=16, transpose_qkv_wb=False, name=None, )
paddle.incubate.nn.functional.fused_multi_head_attention(x=Tensor([8, 128, 256],"float32"), qkv_weight=Tensor([3, 16, 16, 256],"float32"), linear_weight=Tensor([256, 256],"float32"), pre_layer_norm=True, pre_ln_scale=Tensor([256],"float32"), pre_ln_bias=Tensor([256],"float32"), ln_scale=None, ln_bias=None, pre_ln_epsilon=1e-05, qkv_bias=Tensor([3, 16, 16],"float32"), linear_bias=Tensor([2281701379],"float32"), cache_kv=None, attn_mask=None, dropout_rate=0.0, attn_dropout_rate=0.0, ln_epsilon=1e-05, training=True, ring_id=-1, num_heads=16, transpose_qkv_wb=False, name=None, )
paddle.incubate.nn.functional.fused_multi_head_attention(x=Tensor([8, 128, 256],"float32"), qkv_weight=Tensor([3, 16, 16, 256],"float32"), linear_weight=Tensor([256, 8912897],"float32"), pre_layer_norm=True, pre_ln_scale=Tensor([256],"float32"), pre_ln_bias=Tensor([256],"float32"), ln_scale=None, ln_bias=None, pre_ln_epsilon=1e-05, qkv_bias=Tensor([3, 16, 16],"float32"), linear_bias=Tensor([256],"float32"), cache_kv=None, attn_mask=None, dropout_rate=0.0, attn_dropout_rate=0.0, ln_epsilon=1e-05, training=True, ring_id=-1, num_heads=16, transpose_qkv_wb=False, name=None, )
paddle.incubate.nn.functional.fused_multi_head_attention(x=Tensor([8, 128, 256],"float32"), qkv_weight=Tensor([3, 16, 16, 256],"float32"), linear_weight=Tensor([8912897, 256],"float32"), pre_layer_norm=True, pre_ln_scale=Tensor([256],"float32"), pre_ln_bias=Tensor([256],"float32"), ln_scale=None, ln_bias=None, pre_ln_epsilon=1e-05, qkv_bias=Tensor([3, 16, 16],"float32"), linear_bias=Tensor([256],"float32"), cache_kv=None, attn_mask=None, dropout_rate=0.0, attn_dropout_rate=0.0, ln_epsilon=1e-05, training=True, ring_id=-1, num_heads=16, transpose_qkv_wb=False, name=None, )
paddle.incubate.nn.functional.fused_multi_head_attention(x=Tensor([8, 128, 256],"float32"), qkv_weight=Tensor([3, 16, 185686, 256],"float32"), linear_weight=Tensor([256, 256],"float32"), pre_layer_norm=True, pre_ln_scale=Tensor([256],"float32"), pre_ln_bias=Tensor([256],"float32"), ln_scale=None, ln_bias=None, pre_ln_epsilon=1e-05, qkv_bias=Tensor([3, 16, 16],"float32"), linear_bias=Tensor([256],"float32"), cache_kv=None, attn_mask=None, dropout_rate=0.0, attn_dropout_rate=0.0, ln_epsilon=1e-05, training=True, ring_id=-1, num_heads=16, transpose_qkv_wb=False, name=None, )
paddle.incubate.nn.functional.fused_multi_head_attention(x=Tensor([8, 128, 256],"float32"), qkv_weight=Tensor([3, 185686, 16, 256],"float32"), linear_weight=Tensor([256, 256],"float32"), pre_layer_norm=True, pre_ln_scale=Tensor([256],"float32"), pre_ln_bias=Tensor([256],"float32"), ln_scale=None, ln_bias=None, pre_ln_epsilon=1e-05, qkv_bias=Tensor([3, 16, 16],"float32"), linear_bias=Tensor([256],"float32"), cache_kv=None, attn_mask=None, dropout_rate=0.0, attn_dropout_rate=0.0, ln_epsilon=1e-05, training=True, ring_id=-1, num_heads=16, transpose_qkv_wb=False, name=None, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([1, 8, 4, 8],"float32"), None, Tensor([1, 8, 2, 142606337],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([1, 8, 4, 8],"float32"), None, Tensor([1, 8, 2, 142606337],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([1, 8, 4, 8],"float32"), None, Tensor([1, 8, 2, 142606337],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([1, 8],"int64"), use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([1, 8, 4, 8],"float32"), None, Tensor([1, 8, 35651585, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([1, 8, 4, 8],"float32"), None, Tensor([1, 8, 35651585, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([1, 8, 4, 8],"float32"), None, Tensor([1, 8, 35651585, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([1, 8],"int64"), use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([1, 8, 4, 8],"float32"), None, Tensor([17825793, 8, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([1, 8, 4, 8],"float32"), None, Tensor([17825793, 8, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([1, 8, 4, 8],"float32"), None, Tensor([17825793, 8, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([1, 8],"int64"), use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([1, 8, 4, 8],"float32"), Tensor([1, 142606337, 2, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([1, 8, 4, 8],"float32"), Tensor([1, 142606337, 2, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([1, 8, 4, 8],"float32"), Tensor([1, 142606337, 2, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([1, 8],"int64"), use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([1, 8, 4, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 2, 142606337],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([1, 8, 4, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 2, 142606337],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([1, 8, 4, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 2, 142606337],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([1, 8],"int64"), use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([1, 8, 4, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 35651585, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([1, 8, 4, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 35651585, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([1, 8, 4, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 35651585, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([1, 8],"int64"), use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([1, 8, 4, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([17825793, 8, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([1, 8, 4, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([17825793, 8, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([1, 8, 4, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([17825793, 8, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([1, 8],"int64"), use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 2, 16],"float32"), None, Tensor([2, 8, 2, 71303169],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 2, 16],"float32"), None, Tensor([2, 8, 2, 71303169],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 2, 16],"float32"), None, Tensor([2, 8, 2, 71303169],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 2, 16],"float32"), None, Tensor([2, 8, 8912897, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 2, 16],"float32"), None, Tensor([2, 8, 8912897, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 2, 16],"float32"), None, Tensor([2, 8, 8912897, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 2, 16],"float32"), None, Tensor([8912897, 8, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 2, 16],"float32"), None, Tensor([8912897, 8, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 2, 16],"float32"), None, Tensor([8912897, 8, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 2, 16],"float32"), Tensor([2, 35651585, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 2, 16],"float32"), Tensor([2, 35651585, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 2, 16],"float32"), Tensor([2, 35651585, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 71303169],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 71303169],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 71303169],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 8912897, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 8912897, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 8912897, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([8912897, 8, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([8912897, 8, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([8912897, 8, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 4, 8],"float32"), None, Tensor([2, 8, 1, 142606337],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 4, 8],"float32"), None, Tensor([2, 8, 1, 142606337],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 4, 8],"float32"), None, Tensor([2, 8, 1, 142606337],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 4, 8],"float32"), None, Tensor([2, 8, 17825793, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 4, 8],"float32"), None, Tensor([2, 8, 17825793, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 4, 8],"float32"), None, Tensor([2, 8, 17825793, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 4, 8],"float32"), None, Tensor([35651585, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 4, 8],"float32"), None, Tensor([35651585, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 4, 8],"float32"), None, Tensor([35651585, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 4, 8],"float32"), Tensor([2, 142606337, 1, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 4, 8],"float32"), Tensor([2, 142606337, 1, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 4, 8],"float32"), Tensor([2, 142606337, 1, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 4, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([2, 8, 1, 142606337],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 4, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([2, 8, 1, 142606337],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 4, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([2, 8, 1, 142606337],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 4, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([2, 8, 17825793, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 4, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([2, 8, 17825793, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 4, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([2, 8, 17825793, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 4, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([35651585, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 4, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([35651585, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 4, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([35651585, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 1, 4, 8],"float32"), None, Tensor([142606337, 1, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 1, 4, 8],"float32"), None, Tensor([142606337, 1, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 1, 4, 8],"float32"), None, Tensor([142606337, 1, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([1, 8],"int64"), use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 1, 4, 8],"float32"), None, Tensor([8, 1, 2, 142606337],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 1, 4, 8],"float32"), None, Tensor([8, 1, 2, 142606337],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 1, 4, 8],"float32"), None, Tensor([8, 1, 2, 142606337],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([1, 8],"int64"), use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 1, 4, 8],"float32"), None, Tensor([8, 1, 35651585, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 1, 4, 8],"float32"), None, Tensor([8, 1, 35651585, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 1, 4, 8],"float32"), None, Tensor([8, 1, 35651585, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([1, 8],"int64"), use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 1, 4, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([142606337, 1, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 1, 4, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([142606337, 1, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 1, 4, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([142606337, 1, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([1, 8],"int64"), use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 1, 4, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([8, 1, 2, 142606337],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 1, 4, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([8, 1, 2, 142606337],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 1, 4, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([8, 1, 2, 142606337],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([1, 8],"int64"), use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 1, 4, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([8, 1, 35651585, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 1, 4, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([8, 1, 35651585, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 1, 4, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([8, 1, 35651585, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([1, 8],"int64"), use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 1, 4, 8],"float32"), Tensor([8, 17825793, 2, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 1, 4, 8],"float32"), Tensor([8, 17825793, 2, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 1, 4, 8],"float32"), Tensor([8, 17825793, 2, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([1, 8],"int64"), use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 17825793, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), None, Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 17825793, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), None, Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 17825793, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), None, Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 17825793, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 17825793, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 17825793, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 2, 16],"float32"), None, Tensor([35651585, 2, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 2, 16],"float32"), None, Tensor([35651585, 2, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 2, 16],"float32"), None, Tensor([35651585, 2, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 2, 16],"float32"), None, Tensor([8, 2, 2, 71303169],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 2, 16],"float32"), None, Tensor([8, 2, 2, 71303169],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 2, 16],"float32"), None, Tensor([8, 2, 2, 71303169],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 2, 16],"float32"), None, Tensor([8, 2, 8912897, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 2, 16],"float32"), None, Tensor([8, 2, 8912897, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 2, 16],"float32"), None, Tensor([8, 2, 8912897, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([35651585, 2, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([35651585, 2, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([35651585, 2, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 71303169],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 71303169],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 71303169],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 8912897, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 8912897, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 8912897, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 2, 16],"float32"), Tensor([8, 8912897, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 2, 16],"float32"), Tensor([8, 8912897, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 2, 16],"float32"), Tensor([8, 8912897, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 4, 8],"float32"), None, Tensor([142606337, 2, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 4, 8],"float32"), None, Tensor([142606337, 2, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 4, 8],"float32"), None, Tensor([142606337, 2, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 4, 8],"float32"), None, Tensor([8, 2, 1, 142606337],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 4, 8],"float32"), None, Tensor([8, 2, 1, 142606337],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 4, 8],"float32"), None, Tensor([8, 2, 1, 142606337],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 4, 8],"float32"), None, Tensor([8, 2, 17825793, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 4, 8],"float32"), None, Tensor([8, 2, 17825793, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 4, 8],"float32"), None, Tensor([8, 2, 17825793, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 4, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([142606337, 2, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 4, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([142606337, 2, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 4, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([142606337, 2, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 4, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([8, 2, 1, 142606337],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 4, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([8, 2, 1, 142606337],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 4, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([8, 2, 1, 142606337],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 4, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([8, 2, 17825793, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 4, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([8, 2, 17825793, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 4, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([8, 2, 17825793, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 4, 8],"float32"), Tensor([8, 35651585, 1, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 4, 8],"float32"), Tensor([8, 35651585, 1, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 4, 8],"float32"), Tensor([8, 35651585, 1, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 8912897, 2, 16],"float32"), None, Tensor([8, 2, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 8912897, 2, 16],"float32"), None, Tensor([8, 2, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 8912897, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), None, Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 8912897, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), None, Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 8912897, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 8912897, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 8912897, 4, 8],"float32"), None, Tensor([8, 1, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 8912897, 4, 8],"float32"), None, Tensor([8, 1, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 8912897, 4, 8],"float32"), None, Tensor([8, 2, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 8912897, 4, 8],"float32"), None, Tensor([8, 2, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 8912897, 4, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), None, Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 8912897, 4, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), None, Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 8912897, 4, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 8912897, 4, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 8912897, 4, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), None, Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 8912897, 4, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), None, Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 8912897, 4, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 8912897, 4, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 8912897, 4, 8],"float32"), Tensor([8, 8912897, 1, 8],"float32"), None, Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 8912897, 4, 8],"float32"), Tensor([8, 8912897, 1, 8],"float32"), None, Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 8912897, 4, 8],"float32"), Tensor([8, 8912897, 1, 8],"float32"), None, Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([8912897, 8],"int64"), use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 8912897, 4, 8],"float32"), Tensor([8, 8912897, 1, 8],"float32"), Tensor([8, 8912897, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 8912897, 4, 8],"float32"), Tensor([8, 8912897, 1, 8],"float32"), Tensor([8, 8912897, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 8912897, 4, 8],"float32"), Tensor([8, 8912897, 1, 8],"float32"), Tensor([8, 8912897, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([8912897, 8],"int64"), use_neox_rotary_style=True, time_major=True, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8912897, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), None, Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8912897, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), None, Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8912897, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8912897, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8912897, 8, 4, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), None, Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8912897, 8, 4, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), None, Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8912897, 8, 4, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8912897, 8, 4, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8912897, 8, 4, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), None, Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8912897, 8, 4, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), None, Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8912897, 8, 4, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8912897, 8, 4, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8912897, 8, 4, 8],"float32"), Tensor([8912897, 8, 1, 8],"float32"), None, Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8912897, 8, 4, 8],"float32"), Tensor([8912897, 8, 1, 8],"float32"), None, Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8912897, 8, 4, 8],"float32"), Tensor([8912897, 8, 1, 8],"float32"), None, Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([8912897, 8],"int64"), use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8912897, 8, 4, 8],"float32"), Tensor([8912897, 8, 1, 8],"float32"), Tensor([8912897, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8912897, 8, 4, 8],"float32"), Tensor([8912897, 8, 1, 8],"float32"), Tensor([8912897, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8912897, 8, 4, 8],"float32"), Tensor([8912897, 8, 1, 8],"float32"), Tensor([8912897, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([8912897, 8],"int64"), use_neox_rotary_style=True, time_major=False, )
paddle.incubate.nn.functional.variable_length_memory_efficient_attention(Tensor([1, 1, 67108865, 64],"float16"), Tensor([1, 1, 31, 64],"float16"), Tensor([1, 1, 31, 64],"float16"), Tensor([1, 1],"int32"), Tensor([1, 1],"int32"), mask=Tensor([1, 1, 50, 50],"float16"), scale=0.125, )
paddle.incubate.nn.functional.variable_length_memory_efficient_attention(Tensor([131073, 16, 64, 32],"float16"), Tensor([131073, 2, 64, 32],"float16"), Tensor([131073, 2, 64, 32],"float16"), Tensor([131073],"int32"), Tensor([131073],"int32"), Tensor([131073, 1, 64, 64],"float16"), 0.17677669529663687, )
paddle.incubate.nn.functional.variable_length_memory_efficient_attention(Tensor([2, 1, 33554433, 64],"float16"), Tensor([2, 1, 35, 64],"float16"), Tensor([2, 1, 35, 64],"float16"), Tensor([2, 1],"int32"), Tensor([2, 1],"int32"), mask=Tensor([2, 1, 4096, 4096],"float16"), scale=0.125, )
paddle.incubate.nn.functional.variable_length_memory_efficient_attention(Tensor([2, 1, 33554433, 64],"float16"), Tensor([2, 1, 39, 64],"float16"), Tensor([2, 1, 39, 64],"float16"), Tensor([2, 1],"int32"), Tensor([2, 1],"int32"), mask=Tensor([2, 1, 4096, 4096],"float16"), scale=0.125, )
paddle.incubate.nn.functional.variable_length_memory_efficient_attention(Tensor([2, 1, 51, 64],"float16"), Tensor([2, 1, 51, 64],"float16"), Tensor([2, 1, 51, 64],"float16"), Tensor([2, 1],"int32"), Tensor([2, 1],"int32"), mask=Tensor([2, 1, 524289, 4096],"float16"), scale=0.125, )
paddle.incubate.nn.functional.variable_length_memory_efficient_attention(Tensor([2, 8, 112, 96],"float16"), Tensor([2, 8, 240, 96],"float16"), Tensor([2, 8, 240, 1118482],"float16"), Tensor([2, 1],"int32"), Tensor([2, 1],"int32"), mask=Tensor([2, 1, 4096, 4096],"float16"), scale=0.10206207261596575, )
paddle.incubate.softmax_mask_fuse(Tensor([1, 8912897, 8, 32],"float32"), Tensor([1, 1, 8, 32],"float32"), )
paddle.incubate.softmax_mask_fuse(Tensor([8912897, 1, 8, 32],"float32"), Tensor([8912897, 1, 8, 32],"float32"), )
paddle.incubate.softmax_mask_fuse(x=Tensor([2, 263173, 8, 1020],"float16"), mask=Tensor([2, 1, 8, 1020],"float16"), )
paddle.incubate.softmax_mask_fuse(x=Tensor([2, 8388609, 8, 32],"float16"), mask=Tensor([2, 1, 8, 32],"float16"), )
paddle.incubate.softmax_mask_fuse(x=Tensor([2097153, 8, 8, 32],"float16"), mask=Tensor([2097153, 1, 8, 32],"float16"), )
paddle.incubate.softmax_mask_fuse(x=Tensor([2796203, 3, 16, 32],"float16"), mask=Tensor([2796203, 1, 16, 32],"float16"), )
paddle.incubate.softmax_mask_fuse(x=Tensor([6, 2796203, 8, 32],"float16"), mask=Tensor([6, 1, 8, 32],"float16"), )
paddle.incubate.softmax_mask_fuse(x=Tensor([65794, 8, 8, 1020],"float16"), mask=Tensor([65794, 1, 8, 1020],"float16"), )
paddle.incubate.softmax_mask_fuse(x=Tensor([7, 1198373, 16, 32],"float16"), mask=Tensor([7, 1, 16, 32],"float16"), )
paddle.index_put(Tensor([110, 21789, 32, 56],"float16"), tuple(Tensor([16, 16],"int32"),Tensor([16, 16],"int32"),Tensor([32],"bool"),), Tensor([16, 16, 56],"float16"), False, )
paddle.index_put(Tensor([110, 42, 16601, 56],"float16"), tuple(Tensor([16, 16],"int32"),Tensor([16, 16],"int32"),Tensor([16601],"bool"),), Tensor([16, 16, 56],"float16"), False, )
paddle.index_put(Tensor([110, 42, 16601, 56],"float16"), tuple(Tensor([16, 16],"int32"),Tensor([16, 16],"int32"),Tensor([32],"bool"),), Tensor([16, 16, 56],"float16"), False, )
paddle.index_put(Tensor([110, 42, 32, 29052],"float16"), tuple(Tensor([16, 16],"int32"),Tensor([16, 16],"int32"),Tensor([32],"bool"),), Tensor([16, 16, 29052],"float16"), False, )
paddle.index_put(Tensor([110, 42, 32, 56],"float64"), tuple(Tensor([16, 16],"int32"),Tensor([16, 16],"int32"),Tensor([2281701379],"bool"),), Tensor([16, 16, 56],"float64"), False, )
paddle.index_put(Tensor([57066, 42, 32, 56],"float16"), tuple(Tensor([16, 16],"int32"),Tensor([16, 16],"int32"),Tensor([32],"bool"),), Tensor([16, 16, 56],"float16"), False, )
paddle.linalg.cholesky_solve(x=Tensor([4, 570425345],"float32"), y=Tensor([4, 4],"float32"), )
paddle.linalg.norm(Tensor([142606337, 16],"float32"), 2.0, )
paddle.linalg.norm(Tensor([16, 142606337],"float32"), 2.0, )
paddle.linalg.norm(x=Tensor([3, 760567127],"float32"), p=2, axis=None, keepdim=False, )
paddle.linalg.norm(x=Tensor([3, 760567127],"float32"), p=2, axis=None, keepdim=True, )
paddle.linalg.norm(x=Tensor([570425345, 4],"float32"), p=2, axis=None, keepdim=False, )
paddle.linalg.norm(x=Tensor([570425345, 4],"float32"), p=2, axis=None, keepdim=True, )
paddle.logit(x=Tensor([143165577, 3, 2, 5],"float16"), )
paddle.logit(x=Tensor([2147483649, 2],"float16"), )
paddle.logit(x=Tensor([2281701379],"float32"), )
paddle.logit(x=Tensor([4, 1073741825],"float16"), )
paddle.logit(x=Tensor([4, 107374183, 2, 5],"float16"), )
paddle.logit(x=Tensor([4, 3, 2, 178956971],"float16"), )
paddle.logit(x=Tensor([4, 3, 357913942],"float16"), )
paddle.logit(x=Tensor([4, 3, 71582789, 5],"float16"), )
paddle.logit(x=Tensor([4, 536870913, 2],"float16"), )
paddle.logit(x=Tensor([4294967297],"float16"), )
paddle.logit(x=Tensor([715827883, 3, 2],"float16"), )
paddle.matmul(Tensor([1, 11, 45359],"float32"), Tensor([50304, 45359],"float32"), transpose_y=True, )
paddle.matmul(Tensor([1, 11, 512],"float32"), Tensor([4456449, 512],"float32"), transpose_y=True, )
paddle.matmul(Tensor([1, 11, 512],"float32"), Tensor([512, 4456449],"float32"), transpose_y=False, )
paddle.matmul(Tensor([1, 11, 71304],"float32"), Tensor([71304, 32000],"float32"), transpose_y=False, )
paddle.matmul(Tensor([1, 6, 256],"float32"), Tensor([1, 256, 8912897],"float32"), )
paddle.matmul(Tensor([1, 6, 256],"float32"), Tensor([147, 256, 60800],"float32"), )
paddle.matmul(Tensor([1, 6, 37528],"float32"), Tensor([1, 37528, 60800],"float32"), )
paddle.matmul(Tensor([104, 128],"float32"), Tensor([128, 17825793],"float32"), )
paddle.matmul(Tensor([104, 24422],"float32"), Tensor([24422, 93431],"float32"), )
paddle.matmul(Tensor([147, 6, 256],"float32"), Tensor([147, 256, 60800],"float32"), )
paddle.matmul(Tensor([170, 170],"float32"), Tensor([17477, 64, 170, 12],"float32"), )
paddle.matmul(Tensor([170, 170],"float32"), Tensor([64, 17477, 170, 12],"float32"), )
paddle.matmul(Tensor([170, 170],"float32"), Tensor([64, 64, 170, 3277],"float32"), )
paddle.matmul(Tensor([8, 128, 7131],"float32"), Tensor([7131, 320000],"float32"), )
paddle.matmul(x=Tensor([104, 28, 67683],"float32"), y=Tensor([33712, 67683],"float32"), transpose_y=True, )
paddle.matmul(x=Tensor([1431655766, 3],"float16"), y=Tensor([3],"float16"), transpose_x=False, transpose_y=True, )
paddle.matmul(x=Tensor([4, 1073741825],"float16"), y=Tensor([1073741825],"float16"), transpose_x=False, transpose_y=True, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 512, 2, 2228225],"float32"), output_size=tuple(7,7,), data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([1, 512, 2228225, 2],"float32"), output_size=tuple(7,7,), data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([15521779, 3, 7, 7],"float32"), list[2,5,], )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([15521779, 3, 7, 7],"float32"), output_size=5, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([15521779, 3, 7, 7],"float32"), output_size=list[2,5,], data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 23282668, 7, 7],"float32"), list[2,5,], )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 23282668, 7, 7],"float32"), output_size=5, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 23282668, 7, 7],"float32"), output_size=list[2,5,], data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 3, 54326224, 7],"float32"), list[2,5,], )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 3, 54326224, 7],"float32"), output_size=5, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 3, 54326224, 7],"float32"), output_size=list[2,5,], data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 3, 7, 54326224],"float32"), list[2,5,], )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 3, 7, 54326224],"float32"), output_size=5, data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(Tensor([2, 3, 7, 54326224],"float32"), output_size=list[2,5,], data_format="NCHW", name=None, )
paddle.nn.functional.adaptive_avg_pool2d(x=Tensor([15521779, 3, 7, 7],"float32"), output_size=5, )
paddle.nn.functional.adaptive_avg_pool2d(x=Tensor([15521779, 3, 7, 7],"float32"), output_size=list[2,5,], )
paddle.nn.functional.adaptive_avg_pool2d(x=Tensor([2, 23282668, 7, 7],"float32"), output_size=5, )
paddle.nn.functional.adaptive_avg_pool2d(x=Tensor([2, 23282668, 7, 7],"float32"), output_size=list[2,5,], )
paddle.nn.functional.adaptive_avg_pool2d(x=Tensor([2, 3, 54326224, 7],"float32"), output_size=5, )
paddle.nn.functional.adaptive_avg_pool2d(x=Tensor([2, 3, 54326224, 7],"float32"), output_size=list[2,5,], )
paddle.nn.functional.adaptive_avg_pool2d(x=Tensor([2, 3, 7, 54326224],"float32"), output_size=5, )
paddle.nn.functional.adaptive_avg_pool2d(x=Tensor([2, 3, 7, 54326224],"float32"), output_size=list[2,5,], )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 3, 5, 10865245, 7],"float32"), list[2,3,5,], )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 3, 5, 10865245, 7],"float32"), output_size=5, data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 3, 5, 10865245, 7],"float32"), output_size=list[2,3,5,], data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 3, 5, 10865245, 7],"float32"), output_size=list[3,3,3,], data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 3, 5, 10865245, 7],"float32"), output_size=list[3,3,3,], data_format="NDHWC", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 3, 5, 7, 10865245],"float32"), list[2,3,5,], )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 3, 5, 7, 10865245],"float32"), output_size=5, data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 3, 5, 7, 10865245],"float32"), output_size=list[2,3,5,], data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 3, 5, 7, 10865245],"float32"), output_size=list[3,3,3,], data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 3, 5, 7, 10865245],"float32"), output_size=list[3,3,3,], data_format="NDHWC", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 3, 7760890, 7, 7],"float32"), list[2,3,5,], )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 3, 7760890, 7, 7],"float32"), output_size=5, data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 3, 7760890, 7, 7],"float32"), output_size=list[2,3,5,], data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 3, 7760890, 7, 7],"float32"), output_size=list[3,3,3,], data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 3, 7760890, 7, 7],"float32"), output_size=list[3,3,3,], data_format="NDHWC", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 4656534, 5, 7, 7],"float32"), list[2,3,5,], )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 4656534, 5, 7, 7],"float32"), output_size=5, data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 4656534, 5, 7, 7],"float32"), output_size=list[2,3,5,], data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 4656534, 5, 7, 7],"float32"), output_size=list[3,3,3,], data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([2, 4656534, 5, 7, 7],"float32"), output_size=list[3,3,3,], data_format="NDHWC", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([3104356, 3, 5, 7, 7],"float32"), list[2,3,5,], )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([3104356, 3, 5, 7, 7],"float32"), output_size=5, data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([3104356, 3, 5, 7, 7],"float32"), output_size=list[2,3,5,], data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([3104356, 3, 5, 7, 7],"float32"), output_size=list[3,3,3,], data_format="NCDHW", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(Tensor([3104356, 3, 5, 7, 7],"float32"), output_size=list[3,3,3,], data_format="NDHWC", name=None, )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 3, 5, 10865245, 7],"float32"), output_size=5, )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 3, 5, 10865245, 7],"float32"), output_size=list[2,3,5,], )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 3, 5, 10865245, 7],"float32"), output_size=list[3,3,3,], )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 3, 5, 10865245, 7],"float32"), output_size=list[3,3,3,], data_format="NDHWC", )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 3, 5, 7, 10865245],"float32"), output_size=5, )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 3, 5, 7, 10865245],"float32"), output_size=list[2,3,5,], )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 3, 5, 7, 10865245],"float32"), output_size=list[3,3,3,], )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 3, 5, 7, 10865245],"float32"), output_size=list[3,3,3,], data_format="NDHWC", )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 3, 7760890, 7, 7],"float32"), output_size=5, )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 3, 7760890, 7, 7],"float32"), output_size=list[2,3,5,], )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 3, 7760890, 7, 7],"float32"), output_size=list[3,3,3,], )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 3, 7760890, 7, 7],"float32"), output_size=list[3,3,3,], data_format="NDHWC", )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 4656534, 5, 7, 7],"float32"), output_size=5, )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 4656534, 5, 7, 7],"float32"), output_size=list[2,3,5,], )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 4656534, 5, 7, 7],"float32"), output_size=list[3,3,3,], )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([2, 4656534, 5, 7, 7],"float32"), output_size=list[3,3,3,], data_format="NDHWC", )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([3104356, 3, 5, 7, 7],"float32"), output_size=5, )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([3104356, 3, 5, 7, 7],"float32"), output_size=list[2,3,5,], )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([3104356, 3, 5, 7, 7],"float32"), output_size=list[3,3,3,], )
paddle.nn.functional.adaptive_avg_pool3d(x=Tensor([3104356, 3, 5, 7, 7],"float32"), output_size=list[3,3,3,], data_format="NDHWC", )
paddle.nn.functional.adaptive_log_softmax_with_loss(Tensor([285212673, 8],"float32"), Tensor([285212673],"int64"), Tensor([8, 3],"float32"), list[list[Tensor([8, 4],"float32"),Tensor([4, 2],"float32"),],], list[2,4,], None, )
paddle.nn.functional.adaptive_log_softmax_with_loss(Tensor([285212673, 8],"float32"), Tensor([4],"int64"), Tensor([8, 3],"float32"), list[list[Tensor([8, 4],"float32"),Tensor([4, 2],"float32"),],], list[2,4,], None, )
paddle.nn.functional.adaptive_log_softmax_with_loss(Tensor([4, 8],"float32"), Tensor([2281701379],"int64"), Tensor([8, 3],"float32"), list[list[Tensor([8, 4],"float32"),Tensor([4, 2],"float32"),],], list[2,4,], None, )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 11184811, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,2,1,], ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 8, 11184811, 8],"float16"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,2,1,], ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2, 3, 8, 8, 11184811],"float16"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,2,1,], ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2, 4194305, 8, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,2,1,], ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(Tensor([2796203, 3, 8, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,2,1,], ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 3, 11184811, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,2,1,], exclusive=True, )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 3, 8, 11184811, 8],"float16"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,2,1,], exclusive=True, )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 3, 8, 8, 11184811],"float16"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,2,1,], exclusive=True, )
paddle.nn.functional.avg_pool3d(x=Tensor([2, 4194305, 8, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,2,1,], exclusive=True, )
paddle.nn.functional.avg_pool3d(x=Tensor([2796203, 3, 8, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,2,1,], exclusive=True, )
paddle.nn.functional.batch_norm(Tensor([119304648, 4, 3, 3],"float16"), Tensor([3],"float16"), Tensor([3],"float16"), Tensor([3],"float16"), Tensor([3],"float16"), training=False, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([119304648, 4, 3, 3],"float16"), Tensor([3],"float16"), Tensor([3],"float16"), Tensor([3],"float16"), Tensor([3],"float16"), training=True, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([1320430, 6, 12, 24],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), training=False, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([2, 1, 2, 570425345],"float32"), Tensor([1],"float32"), Tensor([1],"float32"), Tensor([1],"float32"), Tensor([1],"float32"), training=True, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([2, 1, 380283564, 3],"float32"), Tensor([1],"float32"), Tensor([1],"float32"), Tensor([1],"float32"), Tensor([1],"float32"), training=True, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([2, 190141782, 2, 3],"float32"), Tensor([190141782],"float32"), Tensor([190141782],"float32"), Tensor([190141782],"float32"), Tensor([190141782],"float32"), training=True, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([2, 238609295, 3, 3],"float16"), Tensor([3],"float16"), Tensor([3],"float16"), Tensor([3],"float16"), Tensor([3],"float16"), training=False, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([2, 238609295, 3, 3],"float16"), Tensor([3],"float16"), Tensor([3],"float16"), Tensor([3],"float16"), Tensor([3],"float16"), training=True, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([2, 4, 178956971, 3],"float16"), Tensor([3],"float16"), Tensor([3],"float16"), Tensor([3],"float16"), Tensor([3],"float16"), training=False, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([2, 4, 178956971, 3],"float16"), Tensor([3],"float16"), Tensor([3],"float16"), Tensor([3],"float16"), Tensor([3],"float16"), training=True, momentum=0.9, epsilon=1e-05, data_format="NHWC", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([380283564, 1, 2, 3],"float32"), Tensor([1],"float32"), Tensor([1],"float32"), Tensor([1],"float32"), Tensor([1],"float32"), training=True, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=True, )
paddle.nn.functional.batch_norm(Tensor([4, 1980644, 12, 24],"float32"), Tensor([1980644],"float32"), Tensor([1980644],"float32"), Tensor([1980644],"float32"), Tensor([1980644],"float32"), training=False, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([4, 6, 12, 24],"float32"), Tensor([2281701379],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), training=False, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([4, 6, 12, 24],"float32"), Tensor([6],"float32"), Tensor([2281701379],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), training=False, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([4, 6, 12, 7922575],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), training=False, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.batch_norm(Tensor([4, 6, 3961288, 24],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), Tensor([6],"float32"), training=False, momentum=0.9, epsilon=1e-05, data_format="NCHW", use_global_stats=False, )
paddle.nn.functional.binary_cross_entropy(Tensor([1, 1, 4294967297],"float16"), label=Tensor([1, 1, 4294967297],"float16"), weight=None, reduction="mean", name=None, )
paddle.nn.functional.binary_cross_entropy(Tensor([1, 2147483649, 2],"float16"), label=Tensor([1, 2147483649, 2],"float16"), weight=None, reduction="mean", name=None, )
paddle.nn.functional.binary_cross_entropy(Tensor([100, 22817014],"float32"), Tensor([100, 22817014],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy(Tensor([1000, 2281702],"float32"), Tensor([1000, 2281702],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy(Tensor([1003, 568720, 4],"float32"), Tensor([1003, 568720, 4],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy(Tensor([1003, 7, 324983],"float32"), Tensor([1003, 7, 324983],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy(Tensor([101, 22591103],"float32"), Tensor([101, 22591103],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([102, 22369622],"float32"), Tensor([102, 22369622],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([1021, 2, 1117386],"float32"), Tensor([1021, 2, 1117386],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy(Tensor([1021, 558693, 4],"float32"), Tensor([1021, 558693, 4],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy(Tensor([1038, 3, 732724],"float32"), Tensor([1038, 3, 732724],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy(Tensor([1038, 549543, 4],"float32"), Tensor([1038, 549543, 4],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy(Tensor([1041, 2, 1095919],"float32"), Tensor([1041, 2, 1095919],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy(Tensor([1041, 547960, 4],"float32"), Tensor([1041, 547960, 4],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy(Tensor([107, 21324312],"float32"), Tensor([107, 21324312],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([108, 21126865],"float32"), Tensor([108, 21126865],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([143165577, 30],"float16"), Tensor([143165577, 30],"float16"), None, "mean", None, )
paddle.nn.functional.binary_cross_entropy(Tensor([143165577, 30],"float16"), Tensor([143165577, 30],"float16"), None, "none", None, )
paddle.nn.functional.binary_cross_entropy(Tensor([143165577, 30],"float16"), Tensor([143165577, 30],"float16"), None, "sum", None, )
paddle.nn.functional.binary_cross_entropy(Tensor([143165577, 30],"float16"), Tensor([143165577, 30],"float16"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy(Tensor([190141782, 3, 4],"float32"), Tensor([190141782, 3, 4],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy(Tensor([2, 1140850690, 1],"float32"), Tensor([2, 1140850690, 1],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([2, 11408507, 10, 10, 1],"float32"), Tensor([2, 11408507, 10, 10, 1],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy(Tensor([2, 3, 10, 10, 3802836],"float32"), Tensor([2, 3, 10, 10, 3802836],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy(Tensor([2, 3, 10, 38028357, 1],"float32"), Tensor([2, 3, 10, 38028357, 1],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy(Tensor([2, 3, 11, 11, 3142840],"float32"), Tensor([2, 3, 11, 11, 3142840],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy(Tensor([2, 3, 11, 34571234, 1],"float32"), Tensor([2, 3, 11, 34571234, 1],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy(Tensor([2, 3, 12, 12, 2640859],"float32"), Tensor([2, 3, 12, 12, 2640859],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy(Tensor([2, 3, 12, 31690297, 1],"float32"), Tensor([2, 3, 12, 31690297, 1],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy(Tensor([2, 3, 13, 13, 2250199],"float32"), Tensor([2, 3, 13, 13, 2250199],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy(Tensor([2, 3, 13, 29252582, 1],"float32"), Tensor([2, 3, 13, 29252582, 1],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy(Tensor([2, 3, 29252582, 13, 1],"float32"), Tensor([2, 3, 29252582, 13, 1],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy(Tensor([2, 3, 31690297, 12, 1],"float32"), Tensor([2, 3, 31690297, 12, 1],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy(Tensor([2, 3, 34571234, 11, 1],"float32"), Tensor([2, 3, 34571234, 11, 1],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy(Tensor([2, 3, 38028357, 10, 1],"float32"), Tensor([2, 3, 38028357, 10, 1],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy(Tensor([2, 4725, 241450],"float32"), Tensor([2, 4725, 241450],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([2, 6750596, 13, 13, 1],"float32"), Tensor([2, 6750596, 13, 13, 1],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy(Tensor([2, 7922575, 12, 12, 1],"float32"), Tensor([2, 7922575, 12, 12, 1],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy(Tensor([2, 9261, 123189],"float32"), Tensor([2, 9261, 123189],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([2, 9428519, 11, 11, 1],"float32"), Tensor([2, 9428519, 11, 11, 1],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy(Tensor([20, 214748365],"float16"), Tensor([20, 214748365],"float16"), None, "mean", None, )
paddle.nn.functional.binary_cross_entropy(Tensor([20, 214748365],"float16"), Tensor([20, 214748365],"float16"), None, "none", None, )
paddle.nn.functional.binary_cross_entropy(Tensor([20, 214748365],"float16"), Tensor([20, 214748365],"float16"), None, "sum", None, )
paddle.nn.functional.binary_cross_entropy(Tensor([20, 214748365],"float16"), Tensor([20, 214748365],"float16"), reduction="mean", )
paddle.nn.functional.binary_cross_entropy(Tensor([2147483649, 1, 2],"float16"), label=Tensor([2147483649, 1, 2],"float16"), weight=None, reduction="mean", name=None, )
paddle.nn.functional.binary_cross_entropy(Tensor([2147483649, 2],"float16"), Tensor([2147483649, 2],"float16"), None, "mean", None, )
paddle.nn.functional.binary_cross_entropy(Tensor([2281701379, 1],"float32"), Tensor([2281701379, 1],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy(Tensor([246378, 9261, 1],"float32"), Tensor([246378, 9261, 1],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([285212673, 2, 4],"float32"), Tensor([285212673, 2, 4],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy(Tensor([28521268, 80],"float32"), Tensor([28521268, 80],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy(Tensor([335348, 6804, 1],"float32"), Tensor([335348, 6804, 1],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([4, 5376, 106106],"float32"), Tensor([4, 5376, 106106],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([4, 570425345, 1],"float32"), Tensor([4, 570425345, 1],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([4, 6804, 83837],"float32"), Tensor([4, 6804, 83837],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([424424, 5376, 1],"float32"), Tensor([424424, 5376, 1],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([4500398, 3, 13, 13, 1],"float32"), Tensor([4500398, 3, 13, 13, 1],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy(Tensor([482900, 4725, 1],"float32"), Tensor([482900, 4725, 1],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([5, 858993460],"float16"), Tensor([5, 858993460],"float16"), None, "mean", None, )
paddle.nn.functional.binary_cross_entropy(Tensor([5281717, 3, 12, 12, 1],"float32"), Tensor([5281717, 3, 12, 12, 1],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy(Tensor([570425345, 4],"float32"), Tensor([570425345, 4],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy(Tensor([6285679, 3, 11, 11, 1],"float32"), Tensor([6285679, 3, 11, 11, 1],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy(Tensor([7605672, 3, 10, 10, 1],"float32"), Tensor([7605672, 3, 10, 10, 1],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy(Tensor([81489335, 7, 4],"float32"), Tensor([81489335, 7, 4],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([1, 1, 30, 76056713],"float32"), Tensor([1, 1, 30, 76056713],"float32"), None, "mean", None, None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([1, 1, 76056713, 30],"float32"), Tensor([1, 1, 76056713, 30],"float32"), None, "mean", None, None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([1, 2281701379],"float32"), Tensor([1, 2281701379],"float32"), )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([1, 2281701379],"float32"), Tensor([1, 2281701379],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([1, 2535224, 30, 30],"float32"), Tensor([1, 2535224, 30, 30],"float32"), None, "mean", None, None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([100, 22817014],"float32"), Tensor([100, 22817014],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([10032, 227443],"float32"), Tensor([10032, 227443],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([100352, 22737],"float32"), Tensor([100352, 22737],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([1024, 2228225],"float32"), Tensor([1024, 2228225],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([12, 118839, 40, 40, 1],"float32"), Tensor([12, 118839, 40, 40, 1],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([12, 1901418, 10, 10, 1],"float32"), Tensor([12, 1901418, 10, 10, 1],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([12, 23768, 10, 10, 80],"float32"), Tensor([12, 23768, 10, 10, 80],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([12, 3, 10, 10, 633806],"float32"), Tensor([12, 3, 10, 10, 633806],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([12, 3, 10, 6338060, 1],"float32"), Tensor([12, 3, 10, 6338060, 1],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([12, 3, 10, 79226, 80],"float32"), Tensor([12, 3, 10, 79226, 80],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([12, 3, 1584515, 40, 1],"float32"), Tensor([12, 3, 1584515, 40, 1],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([12, 3, 20, 20, 158452],"float32"), Tensor([12, 3, 20, 20, 158452],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([12, 3, 20, 3169030, 1],"float32"), Tensor([12, 3, 20, 3169030, 1],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([12, 3, 20, 39613, 80],"float32"), Tensor([12, 3, 20, 39613, 80],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([12, 3, 3169030, 20, 1],"float32"), Tensor([12, 3, 3169030, 20, 1],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([12, 3, 39613, 20, 80],"float32"), Tensor([12, 3, 39613, 20, 80],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([12, 3, 40, 1584515, 1],"float32"), Tensor([12, 3, 40, 1584515, 1],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([12, 3, 40, 40, 39613],"float32"), Tensor([12, 3, 40, 40, 39613],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([12, 3, 6338060, 10, 1],"float32"), Tensor([12, 3, 6338060, 10, 1],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([12, 3, 79226, 10, 80],"float32"), Tensor([12, 3, 79226, 10, 80],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([12, 475355, 20, 20, 1],"float32"), Tensor([12, 475355, 20, 20, 1],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([12, 5942, 20, 20, 80],"float32"), Tensor([12, 5942, 20, 20, 80],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([13, 1096972, 160],"float32"), Tensor([13, 1096972, 160],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([13, 160, 1096972],"float32"), Tensor([13, 160, 1096972],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([13, 175515491],"float32"), Tensor([13, 175515491],"float32"), None, "mean", None, None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([142607, 200, 80],"float32"), Tensor([142607, 200, 80],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([181896, 12544],"float32"), Tensor([181896, 12544],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([1901418, 3, 20, 20, 1],"float32"), Tensor([1901418, 3, 20, 20, 1],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 14260634, 80],"float32"), Tensor([2, 14260634, 80],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 200, 5704254],"float32"), Tensor([2, 200, 5704254],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 300, 3802836],"float32"), Tensor([2, 300, 3802836],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2, 900, 1267612],"float32"), Tensor([2, 900, 1267612],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2281701379, 1],"float32"), Tensor([2281701379, 1],"float32"), )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2281701379],"float32"), Tensor([2281701379],"float32"), None, "sum", None, None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2281701379],"float32"), Tensor([2281701379],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([228170138, 10],"float32"), Tensor([228170138, 10],"float32"), )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2281702, 1000],"float32"), Tensor([2281702, 1000],"float32"), weight=None, reduction="none", pos_weight=None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([23768, 3, 20, 20, 80],"float32"), Tensor([23768, 3, 20, 20, 80],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([2535224, 1, 30, 30],"float32"), Tensor([2535224, 1, 30, 30],"float32"), None, "mean", None, None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([28521268, 80],"float32"), Tensor([28521268, 80],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([300, 7605672],"float32"), Tensor([300, 7605672],"float32"), weight=None, reduction="none", pos_weight=None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([31691, 900, 80],"float32"), Tensor([31691, 900, 80],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([459, 4971027],"float32"), Tensor([459, 4971027],"float32"), )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([465, 4906885],"float32"), Tensor([465, 4906885],"float32"), )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([475355, 3, 40, 40, 1],"float32"), Tensor([475355, 3, 40, 40, 1],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([512, 4456449],"float32"), Tensor([512, 4456449],"float32"), )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([760567127, 3],"float32"), Tensor([760567127, 3],"float32"), None, "mean", None, None, )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([7605672, 3, 10, 10, 1],"float32"), Tensor([7605672, 3, 10, 10, 1],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([89129, 160, 160],"float32"), Tensor([89129, 160, 160],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([95071, 3, 10, 10, 80],"float32"), Tensor([95071, 3, 10, 10, 80],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(Tensor([95071, 300, 80],"float32"), Tensor([95071, 300, 80],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(logit=Tensor([120089547, 19],"float32"), label=Tensor([120089547, 19],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(logit=Tensor([2, 1140850690],"float32"), label=Tensor([2, 1140850690],"float32"), )
paddle.nn.functional.binary_cross_entropy_with_logits(logit=Tensor([2281701379, 1],"float32"), label=Tensor([2281701379, 1],"float32"), )
paddle.nn.functional.binary_cross_entropy_with_logits(logit=Tensor([2281701379],"float32"), label=Tensor([2281701379],"float32"), reduction="sum", )
paddle.nn.functional.binary_cross_entropy_with_logits(logit=Tensor([64, 35651585],"float32"), label=Tensor([64, 35651585],"float32"), reduction="none", )
paddle.nn.functional.binary_cross_entropy_with_logits(logit=Tensor([87757746, 26],"float32"), label=Tensor([87757746, 26],"float32"), reduction="none", )
paddle.nn.functional.conv2d(Tensor([1, 1024, 256, 256],"float32"), Tensor([1024, 128, 3, 5803],"float32"), padding=1, groups=8, )
paddle.nn.functional.conv2d(Tensor([1, 1024, 256, 256],"float32"), Tensor([1024, 128, 5803, 3],"float32"), padding=1, groups=8, )
paddle.nn.functional.conv2d(Tensor([1, 1024, 256, 8705],"float32"), Tensor([1024, 128, 3, 3],"float32"), padding=1, groups=8, )
paddle.nn.functional.conv2d(Tensor([1, 1024, 256, 8705],"float32"), Tensor([1024, 128, 3, 8705],"float32"), padding=1, groups=8, )
paddle.nn.functional.conv2d(Tensor([1, 1024, 8705, 256],"float32"), Tensor([1024, 128, 3, 3],"float32"), padding=1, groups=8, )
paddle.nn.functional.conv2d(Tensor([1, 1024, 8705, 256],"float32"), Tensor([1024, 128, 8705, 3],"float32"), padding=1, groups=8, )
paddle.nn.functional.conv2d(Tensor([10, 1, 639133, 357],"float32"), Tensor([64, 1, 639133, 7],"float32"), None, list[2,2,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([10, 1, 69, 3306814],"float32"), Tensor([64, 1, 7, 3306814],"float32"), None, list[2,2,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([10, 1, 69, 357],"float32"), Tensor([64, 1, 5093084, 7],"float32"), None, list[2,2,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([10, 1, 69, 357],"float32"), Tensor([64, 1, 7, 5093084],"float32"), None, list[2,2,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([10, 9263, 69, 357],"float32"), Tensor([64, 9263, 7, 7],"float32"), None, list[2,2,], 0, list[1,1,], 1, )
paddle.nn.functional.conv2d(Tensor([24, 1, 1418969, 67],"float32"), Tensor([1, 1, 1418969, 4],"float32"), )
paddle.nn.functional.conv2d(Tensor([24, 1, 1418969, 67],"float32"), Tensor([1, 1, 4, 4],"float32"), )
paddle.nn.functional.conv2d(Tensor([24, 1, 67, 1418969],"float32"), Tensor([1, 1, 4, 1418969],"float32"), )
paddle.nn.functional.conv2d(Tensor([24, 1, 67, 1418969],"float32"), Tensor([1, 1, 4, 4],"float32"), )
paddle.nn.functional.conv2d(Tensor([24, 1, 67, 67],"float32"), Tensor([1, 1, 4, 570425345],"float32"), )
paddle.nn.functional.conv2d(Tensor([24, 1, 67, 67],"float32"), Tensor([1, 1, 570425345, 4],"float32"), )
paddle.nn.functional.conv2d(Tensor([24, 21179, 67, 67],"float32"), Tensor([1, 21179, 4, 4],"float32"), )
paddle.nn.functional.conv2d(Tensor([273, 128, 256, 256],"float32"), Tensor([128, 128, 3, 3],"float32"), bias=None, stride=1, padding=1, )
paddle.nn.functional.conv2d(Tensor([273, 128, 256, 256],"float32"), Tensor([273, 128, 3, 3],"float32"), bias=None, stride=1, padding=1, )
paddle.nn.functional.conv2d(Tensor([35, 1024, 256, 256],"float32"), Tensor([1024, 128, 3, 3],"float32"), padding=1, groups=8, )
paddle.nn.functional.conv2d(Tensor([508288, 1, 67, 67],"float32"), Tensor([1, 1, 4, 4],"float32"), )
paddle.nn.functional.conv2d(Tensor([8, 128, 256, 256],"float32"), Tensor([128, 128, 3, 46422],"float32"), bias=None, stride=1, padding=1, )
paddle.nn.functional.conv2d(Tensor([8, 128, 256, 256],"float32"), Tensor([128, 128, 46422, 3],"float32"), bias=None, stride=1, padding=1, )
paddle.nn.functional.conv2d(Tensor([8, 128, 256, 8705],"float32"), Tensor([128, 128, 3, 3],"float32"), bias=None, stride=1, padding=1, )
paddle.nn.functional.conv2d(Tensor([8, 128, 256, 8705],"float32"), Tensor([128, 128, 3, 8705],"float32"), bias=None, stride=1, padding=1, )
paddle.nn.functional.conv2d(Tensor([8, 128, 8705, 256],"float32"), Tensor([128, 128, 3, 3],"float32"), bias=None, stride=1, padding=1, )
paddle.nn.functional.conv2d(Tensor([8, 128, 8705, 256],"float32"), Tensor([128, 128, 8705, 3],"float32"), bias=None, stride=1, padding=1, )
paddle.nn.functional.conv2d(Tensor([8, 3, 256, 256],"float32"), Tensor([128, 3, 1, 5941931],"float32"), bias=None, stride=1, padding=0, )
paddle.nn.functional.conv2d(Tensor([8, 3, 256, 256],"float32"), Tensor([128, 3, 5941931, 1],"float32"), bias=None, stride=1, padding=0, )
paddle.nn.functional.conv2d(Tensor([8, 3, 256, 371371],"float32"), Tensor([128, 3, 1, 371371],"float32"), bias=None, stride=1, padding=0, )
paddle.nn.functional.conv2d(Tensor([8, 3, 371371, 256],"float32"), Tensor([128, 3, 371371, 1],"float32"), bias=None, stride=1, padding=0, )
paddle.nn.functional.conv2d(Tensor([8, 4353, 256, 256],"float32"), Tensor([128, 4353, 1, 1],"float32"), bias=None, stride=1, padding=0, )
paddle.nn.functional.conv2d(Tensor([8, 4353, 256, 256],"float32"), Tensor([128, 4353, 3, 3],"float32"), bias=None, stride=1, padding=1, )
paddle.nn.functional.conv2d_transpose(Tensor([10496, 16, 172, 79],"float32"), Tensor([16, 8, 5, 5],"float32"), bias=Tensor([8],"float32"), padding=2, output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([619, 64, 240, 240],"float32"), Tensor([64, 64, 2, 2],"float32"), bias=Tensor([64],"float32"), padding=0, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([64, 16, 172, 12955],"float32"), Tensor([16, 8, 5, 5],"float32"), bias=Tensor([8],"float32"), padding=2, output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([64, 16, 28206, 79],"float32"), Tensor([16, 8, 5, 5],"float32"), bias=Tensor([8],"float32"), padding=2, output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([64, 2624, 172, 79],"float32"), Tensor([2624, 8, 5, 5],"float32"), bias=Tensor([8],"float32"), padding=2, output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([8, 2048, 16, 16385],"float16"), Tensor([2048, 128, 4, 16385],"float16"), bias=None, padding=1, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([8, 2048, 16, 16385],"float16"), Tensor([2048, 128, 4, 4],"float16"), bias=None, padding=1, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([8, 2048, 16, 16],"float16"), Tensor([2048, 128, 4, 4097],"float16"), bias=None, padding=1, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([8, 2048, 16, 16],"float16"), Tensor([2048, 128, 4097, 4],"float16"), bias=None, padding=1, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([8, 2048, 16, 16],"float16"), Tensor([2048, 131073, 4, 4],"float16"), bias=None, padding=1, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([8, 2048, 16385, 16],"float16"), Tensor([2048, 128, 16385, 4],"float16"), bias=None, padding=1, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([8, 2048, 16385, 16],"float16"), Tensor([2048, 128, 4, 4],"float16"), bias=None, padding=1, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([8, 2097153, 16, 16],"float16"), Tensor([2097153, 128, 4, 4],"float16"), bias=None, padding=1, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([8, 64, 18569, 240],"float32"), Tensor([64, 64, 2, 2],"float32"), bias=Tensor([64],"float32"), padding=0, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([8, 64, 240, 18569],"float32"), Tensor([64, 64, 2, 2],"float32"), bias=Tensor([64],"float32"), padding=0, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.conv2d_transpose(Tensor([8193, 2048, 16, 16],"float16"), Tensor([2048, 128, 4, 4],"float16"), bias=None, padding=1, output_padding=0, stride=list[2,2,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.cosine_similarity(Tensor([1431655766, 1, 3],"float16"), Tensor([1, 3],"float16"), axis=0, eps=1e-08, )
paddle.nn.functional.cosine_similarity(Tensor([23, 12, 8267034],"float32"), Tensor([23, 1, 8267034],"float32"), axis=2, eps=1e-06, )
paddle.nn.functional.cosine_similarity(Tensor([5, 1, 3],"float16"), Tensor([1431655766, 3],"float16"), axis=0, eps=1e-08, )
paddle.nn.functional.cosine_similarity(Tensor([5, 1, 858993460],"float16"), Tensor([1, 858993460],"float16"), axis=0, eps=1e-08, )
paddle.nn.functional.cosine_similarity(Tensor([5, 286331154, 3],"float16"), Tensor([1, 3],"float16"), axis=0, eps=1e-08, )
paddle.nn.functional.cosine_similarity(Tensor([5, 286331154, 3],"float16"), Tensor([286331154, 3],"float16"), axis=0, eps=1e-08, )
paddle.nn.functional.cross_entropy(Tensor([1, 2281701379],"float32"), Tensor([1, 1],"int64"), reduction="none", use_softmax=False, )
paddle.nn.functional.cross_entropy(Tensor([128, 17825793],"float32"), Tensor([128, 1],"int64"), reduction="none", use_softmax=False, )
paddle.nn.functional.cross_entropy(Tensor([1431655766, 3],"float16"), Tensor([1431655766, 3],"float16"), soft_label=True, axis=-1, weight=None, reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([1431655766, 3],"float16"), Tensor([1431655766, 3],"float16"), soft_label=True, axis=-1, weight=None, reduction="none", )
paddle.nn.functional.cross_entropy(Tensor([1431655766, 3],"float16"), Tensor([1431655766, 3],"float16"), soft_label=True, axis=-1, weight=Tensor([3],"float16"), reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([1431655766, 3],"float16"), Tensor([1431655766, 3],"float16"), soft_label=True, axis=-1, weight=Tensor([3],"float16"), reduction="none", )
paddle.nn.functional.cross_entropy(Tensor([1431655766, 3],"float16"), Tensor([1431655766, 3],"float16"), soft_label=True, label_smoothing=0.5986189939413826, axis=-1, weight=None, reduction="none", )
paddle.nn.functional.cross_entropy(Tensor([1431655766, 3],"float16"), Tensor([1431655766, 3],"float16"), soft_label=True, label_smoothing=0.8211263365048883, axis=-1, weight=Tensor([3],"float16"), reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([1431655766, 3],"float16"), Tensor([1431655766],"int64"), soft_label=True, label_smoothing=0.1858912794612338, axis=-1, weight=Tensor([3],"float16"), reduction="mean", )
paddle.nn.functional.cross_entropy(Tensor([16, 142606337],"float32"), Tensor([16, 142606337],"float32"), soft_label=True, )
paddle.nn.functional.cross_entropy(Tensor([2, 114085069, 10],"float32"), Tensor([2, 114085069, 1],"int64"), soft_label=False, ignore_index=4, reduction="none", use_softmax=False, )
paddle.nn.functional.cross_entropy(Tensor([2, 30, 38028357],"float32"), Tensor([2, 30, 1],"int64"), soft_label=False, ignore_index=4, reduction="none", use_softmax=False, )
paddle.nn.functional.cross_entropy(Tensor([228170138, 10],"float32"), Tensor([228170138, 1],"int64"), reduction="none", use_softmax=False, )
paddle.nn.functional.cross_entropy(Tensor([22817014, 100],"float32"), Tensor([22817014, 1],"int64"), reduction="none", use_softmax=False, )
paddle.nn.functional.cross_entropy(Tensor([456340276, 5],"float32"), Tensor([456340276, 5],"float32"), soft_label=True, )
paddle.nn.functional.cross_entropy(Tensor([5704254, 400],"float32"), Tensor([5704254, 400],"float32"), soft_label=True, )
paddle.nn.functional.cross_entropy(Tensor([7605672, 30, 10],"float32"), Tensor([7605672, 30, 1],"int64"), soft_label=False, ignore_index=4, reduction="none", use_softmax=False, )
paddle.nn.functional.cross_entropy(Tensor([8, 285212673],"float32"), Tensor([8, 285212673],"float32"), soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([1, 2281701379],"float32"), label=Tensor([1, 1],"int64"), reduction="none", use_softmax=False, )
paddle.nn.functional.cross_entropy(input=Tensor([2, 1140850690],"float32"), label=Tensor([2, 1],"int64"), ignore_index=-1, reduction="none", use_softmax=False, )
paddle.nn.functional.cross_entropy(input=Tensor([2, 2147483649],"float16"), label=Tensor([2, 1],"int64"), reduction="none", use_softmax=False, )
paddle.nn.functional.cross_entropy(input=Tensor([22369622, 102],"float32"), label=Tensor([22369622, 1],"int64"), reduction="none", use_softmax=False, )
paddle.nn.functional.cross_entropy(input=Tensor([228170138, 10],"float32"), label=Tensor([228170138, 1],"int64"), reduction="none", use_softmax=False, )
paddle.nn.functional.cross_entropy(input=Tensor([42107523, 102],"float16"), label=Tensor([42107523, 1],"int64"), reduction="none", use_softmax=False, )
paddle.nn.functional.cross_entropy(input=Tensor([5704254, 400],"float32"), label=Tensor([5704254, 1],"int64"), ignore_index=-1, reduction="none", use_softmax=False, )
paddle.nn.functional.ctc_loss(Tensor([120445, 512, 37],"float32"), Tensor([512, 25],"int32"), Tensor([512],"int64"), Tensor([512],"int64"), 0, "none", norm_by_times=False, )
paddle.nn.functional.ctc_loss(Tensor([16777217, 4, 34],"float32"), Tensor([4, 4],"int32"), Tensor([4],"int64"), Tensor([4],"int64"), blank=33, reduction="mean", )
paddle.nn.functional.ctc_loss(Tensor([16777217, 4, 34],"float32"), Tensor([4, 4],"int32"), Tensor([4],"int64"), Tensor([4],"int64"), blank=33, reduction="sum", )
paddle.nn.functional.ctc_loss(Tensor([240890, 256, 37],"float32"), Tensor([256, 25],"int32"), Tensor([256],"int64"), Tensor([256],"int64"), 0, "none", norm_by_times=False, )
paddle.nn.functional.ctc_loss(Tensor([25, 2466705, 37],"float32"), Tensor([2466705, 25],"int32"), Tensor([2466705],"int64"), Tensor([2466705],"int64"), 0, "none", norm_by_times=False, )
paddle.nn.functional.ctc_loss(Tensor([25, 2466705, 37],"float32"), Tensor([256, 25],"int32"), Tensor([256],"int64"), Tensor([256],"int64"), 0, "none", norm_by_times=False, )
paddle.nn.functional.ctc_loss(Tensor([25, 256, 356516],"float32"), Tensor([256, 25],"int32"), Tensor([256],"int64"), Tensor([256],"int64"), 0, "none", norm_by_times=False, )
paddle.nn.functional.ctc_loss(Tensor([25, 256, 37],"float32"), Tensor([256, 25],"int32"), Tensor([2281701379],"int64"), Tensor([256],"int64"), 0, "none", norm_by_times=False, )
paddle.nn.functional.ctc_loss(Tensor([25, 256, 37],"float32"), Tensor([256, 25],"int32"), Tensor([256],"int64"), Tensor([2281701379],"int64"), 0, "none", norm_by_times=False, )
paddle.nn.functional.ctc_loss(Tensor([25, 256, 37],"float32"), Tensor([256, 8912897],"int32"), Tensor([256],"int64"), Tensor([256],"int64"), 0, "none", norm_by_times=False, )
paddle.nn.functional.ctc_loss(Tensor([25, 256, 37],"float32"), Tensor([91268056, 25],"int32"), Tensor([256],"int64"), Tensor([256],"int64"), 0, "none", norm_by_times=False, )
paddle.nn.functional.ctc_loss(Tensor([25, 256, 96],"float32"), Tensor([256, 25],"int32"), Tensor([2281701379],"int64"), Tensor([256],"int64"), 0, "none", norm_by_times=False, )
paddle.nn.functional.ctc_loss(Tensor([25, 256, 96],"float32"), Tensor([256, 25],"int32"), Tensor([256],"int64"), Tensor([2281701379],"int64"), 0, "none", norm_by_times=False, )
paddle.nn.functional.ctc_loss(Tensor([25, 256, 96],"float32"), Tensor([256, 8912897],"int32"), Tensor([256],"int64"), Tensor([256],"int64"), 0, "none", norm_by_times=False, )
paddle.nn.functional.ctc_loss(Tensor([25, 256, 96],"float32"), Tensor([91268056, 25],"int32"), Tensor([256],"int64"), Tensor([256],"int64"), 0, "none", norm_by_times=False, )
paddle.nn.functional.ctc_loss(Tensor([25, 512, 178258],"float32"), Tensor([512, 25],"int32"), Tensor([512],"int64"), Tensor([512],"int64"), 0, "none", norm_by_times=False, )
paddle.nn.functional.ctc_loss(Tensor([25, 512, 37],"float32"), Tensor([512, 25],"int32"), Tensor([2281701379],"int64"), Tensor([512],"int64"), 0, "none", norm_by_times=False, )
paddle.nn.functional.ctc_loss(Tensor([25, 512, 37],"float32"), Tensor([512, 25],"int32"), Tensor([512],"int64"), Tensor([2281701379],"int64"), 0, "none", norm_by_times=False, )
paddle.nn.functional.ctc_loss(Tensor([25, 512, 37],"float32"), Tensor([512, 4456449],"int32"), Tensor([512],"int64"), Tensor([512],"int64"), 0, "none", norm_by_times=False, )
paddle.nn.functional.ctc_loss(Tensor([25, 512, 37],"float32"), Tensor([91268056, 25],"int32"), Tensor([512],"int64"), Tensor([512],"int64"), 0, "none", norm_by_times=False, )
paddle.nn.functional.ctc_loss(Tensor([25, 950709, 96],"float32"), Tensor([256, 25],"int32"), Tensor([256],"int64"), Tensor([256],"int64"), 0, "none", norm_by_times=False, )
paddle.nn.functional.ctc_loss(Tensor([25, 950709, 96],"float32"), Tensor([950709, 25],"int32"), Tensor([950709],"int64"), Tensor([950709],"int64"), 0, "none", norm_by_times=False, )
paddle.nn.functional.ctc_loss(Tensor([2691, 128, 6625],"float32"), Tensor([128, 25],"int32"), Tensor([128],"int64"), Tensor([128],"int64"), 0, "none", norm_by_times=False, )
paddle.nn.functional.ctc_loss(Tensor([3, 3, 15],"float32"), Tensor([1140850690, 2],"int32"), Tensor([3],"int64"), Tensor([3],"int64"), 0, "none", norm_by_times=False, )
paddle.nn.functional.ctc_loss(Tensor([3, 3, 15],"float32"), Tensor([3, 2],"int32"), Tensor([2281701379],"int64"), Tensor([3],"int64"), 0, "none", norm_by_times=False, )
paddle.nn.functional.ctc_loss(Tensor([3, 3, 15],"float32"), Tensor([3, 2],"int32"), Tensor([3],"int64"), Tensor([2281701379],"int64"), 0, "none", norm_by_times=False, )
paddle.nn.functional.ctc_loss(Tensor([3, 3, 15],"float32"), Tensor([3, 760567127],"int32"), Tensor([3],"int64"), Tensor([3],"int64"), 0, "none", norm_by_times=False, )
paddle.nn.functional.ctc_loss(Tensor([3, 3, 253522376],"float32"), Tensor([3, 2],"int32"), Tensor([3],"int64"), Tensor([3],"int64"), 0, "none", norm_by_times=False, )
paddle.nn.functional.ctc_loss(Tensor([3, 50704476, 15],"float32"), Tensor([3, 2],"int32"), Tensor([3],"int64"), Tensor([3],"int64"), 0, "none", norm_by_times=False, )
paddle.nn.functional.ctc_loss(Tensor([4, 16777217, 34],"float32"), Tensor([4, 4],"int32"), Tensor([4],"int64"), Tensor([4],"int64"), blank=33, reduction="mean", )
paddle.nn.functional.ctc_loss(Tensor([4, 16777217, 34],"float32"), Tensor([4, 4],"int32"), Tensor([4],"int64"), Tensor([4],"int64"), blank=33, reduction="sum", )
paddle.nn.functional.ctc_loss(Tensor([4, 4, 142606337],"float32"), Tensor([4, 4],"int32"), Tensor([4],"int64"), Tensor([4],"int64"), blank=33, reduction="mean", )
paddle.nn.functional.ctc_loss(Tensor([4, 4, 142606337],"float32"), Tensor([4, 4],"int32"), Tensor([4],"int64"), Tensor([4],"int64"), blank=33, reduction="sum", )
paddle.nn.functional.ctc_loss(Tensor([4, 4, 34],"float32"), Tensor([4, 4],"int32"), Tensor([2281701379],"int64"), Tensor([4],"int64"), blank=33, reduction="mean", )
paddle.nn.functional.ctc_loss(Tensor([4, 4, 34],"float32"), Tensor([4, 4],"int32"), Tensor([2281701379],"int64"), Tensor([4],"int64"), blank=33, reduction="sum", )
paddle.nn.functional.ctc_loss(Tensor([4, 4, 34],"float32"), Tensor([4, 4],"int32"), Tensor([4],"int64"), Tensor([2281701379],"int64"), blank=33, reduction="sum", )
paddle.nn.functional.ctc_loss(Tensor([4, 4, 34],"float32"), Tensor([4, 570425345],"int32"), Tensor([4],"int64"), Tensor([4],"int64"), blank=33, reduction="mean", )
paddle.nn.functional.ctc_loss(Tensor([4, 4, 34],"float32"), Tensor([4, 570425345],"int32"), Tensor([4],"int64"), Tensor([4],"int64"), blank=33, reduction="sum", )
paddle.nn.functional.ctc_loss(Tensor([4, 4, 34],"float32"), Tensor([570425345, 4],"int32"), Tensor([4],"int64"), Tensor([4],"int64"), blank=33, reduction="mean", )
paddle.nn.functional.ctc_loss(Tensor([4, 4, 34],"float32"), Tensor([570425345, 4],"int32"), Tensor([4],"int64"), Tensor([4],"int64"), blank=33, reduction="sum", )
paddle.nn.functional.ctc_loss(Tensor([40, 128, 445645],"float32"), Tensor([128, 25],"int32"), Tensor([128],"int64"), Tensor([128],"int64"), 0, "none", norm_by_times=False, )
paddle.nn.functional.ctc_loss(Tensor([40, 128, 6625],"float32"), Tensor([128, 17825793],"int32"), Tensor([128],"int64"), Tensor([128],"int64"), 0, "none", norm_by_times=False, )
paddle.nn.functional.ctc_loss(Tensor([40, 128, 6625],"float32"), Tensor([128, 25],"int32"), Tensor([128],"int64"), Tensor([2281701379],"int64"), 0, "none", norm_by_times=False, )
paddle.nn.functional.ctc_loss(Tensor([40, 128, 6625],"float32"), Tensor([128, 25],"int32"), Tensor([2281701379],"int64"), Tensor([128],"int64"), 0, "none", norm_by_times=False, )
paddle.nn.functional.ctc_loss(Tensor([40, 128, 6625],"float32"), Tensor([91268056, 25],"int32"), Tensor([128],"int64"), Tensor([128],"int64"), 0, "none", norm_by_times=False, )
paddle.nn.functional.ctc_loss(Tensor([40, 8611, 6625],"float32"), Tensor([8611, 25],"int32"), Tensor([8611],"int64"), Tensor([8611],"int64"), 0, "none", norm_by_times=False, )
paddle.nn.functional.ctc_loss(Tensor([5, 2, 3],"float64"), Tensor([2, 1140850690],"int32"), Tensor([2],"int64"), Tensor([2],"int64"), 0, "mean", norm_by_times=False, )
paddle.nn.functional.ctc_loss(Tensor([5, 2, 3],"float64"), Tensor([2, 3],"int32"), Tensor([2281701379],"int64"), Tensor([2],"int64"), 0, "mean", norm_by_times=False, )
paddle.nn.functional.ctc_loss(Tensor([5, 2, 3],"float64"), Tensor([760567127, 3],"int32"), Tensor([2],"int64"), Tensor([2],"int64"), 0, "mean", norm_by_times=False, )
paddle.nn.functional.ctc_loss(Tensor([5, 2, 3],"float64"), labels=Tensor([2, 1140850690],"int32"), input_lengths=Tensor([2],"int64"), label_lengths=Tensor([2],"int64"), blank=0, reduction="mean", )
paddle.nn.functional.ctc_loss(Tensor([5, 2, 3],"float64"), labels=Tensor([2, 1140850690],"int32"), input_lengths=Tensor([2],"int64"), label_lengths=Tensor([2],"int64"), blank=0, reduction="none", )
paddle.nn.functional.ctc_loss(Tensor([5, 2, 3],"float64"), labels=Tensor([2, 3],"int32"), input_lengths=Tensor([2281701379],"int64"), label_lengths=Tensor([2],"int64"), blank=0, reduction="mean", )
paddle.nn.functional.ctc_loss(Tensor([5, 2, 3],"float64"), labels=Tensor([2, 3],"int32"), input_lengths=Tensor([2281701379],"int64"), label_lengths=Tensor([2],"int64"), blank=0, reduction="none", )
paddle.nn.functional.ctc_loss(Tensor([5, 2, 3],"float64"), labels=Tensor([2, 3],"int32"), input_lengths=Tensor([2],"int64"), label_lengths=Tensor([2281701379],"int64"), blank=0, reduction="none", )
paddle.nn.functional.ctc_loss(Tensor([5, 2, 3],"float64"), labels=Tensor([760567127, 3],"int32"), input_lengths=Tensor([2],"int64"), label_lengths=Tensor([2],"int64"), blank=0, reduction="mean", )
paddle.nn.functional.ctc_loss(Tensor([5, 2, 3],"float64"), labels=Tensor([760567127, 3],"int32"), input_lengths=Tensor([2],"int64"), label_lengths=Tensor([2],"int64"), blank=0, reduction="none", )
paddle.nn.functional.ctc_loss(Tensor([50704476, 3, 15],"float32"), Tensor([3, 2],"int32"), Tensor([3],"int64"), Tensor([3],"int64"), 0, "none", norm_by_times=False, )
paddle.nn.functional.ctc_loss(Tensor([92843, 256, 96],"float32"), Tensor([256, 25],"int32"), Tensor([256],"int64"), Tensor([256],"int64"), 0, "none", norm_by_times=False, )
paddle.nn.functional.dice_loss(Tensor([2147483649, 2],"float16"), label=Tensor([1140850690, 1],"int64"), epsilon=1e-05, )
paddle.nn.functional.dice_loss(Tensor([2147483649, 2],"float16"), label=Tensor([2147483649, 1],"int64"), epsilon=1e-05, )
paddle.nn.functional.dice_loss(Tensor([2147483649, 2],"float16"), label=Tensor([5, 1],"int64"), epsilon=1e-05, )
paddle.nn.functional.dice_loss(Tensor([5, 858993460],"float16"), label=Tensor([5, 1],"int64"), epsilon=1e-05, )
paddle.nn.functional.dice_loss(Tensor([5, 858993460],"float16"), label=Tensor([5, 456340276],"int64"), epsilon=1e-05, )
paddle.nn.functional.embedding(Tensor([1, 1],"int64"), weight=Tensor([32000, 71304],"float32"), padding_idx=3, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([1, 1],"int64"), weight=Tensor([35651585, 64],"float32"), padding_idx=3, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([1, 20],"int64"), weight=Tensor([1024, 2228225],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([1, 20],"int64"), weight=Tensor([1024, 2228225],"float32"), padding_idx=1, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([1, 20],"int64"), weight=Tensor([128001, 17826],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([1, 20],"int64"), weight=Tensor([17825793, 128],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([1, 20],"int64"), weight=Tensor([30000, 76057],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([1, 20],"int64"), weight=Tensor([71303169, 32],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([1, 20],"int64"), weight=Tensor([71303169, 32],"float32"), padding_idx=1, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([1, 300, 4096],"int64"), Tensor([760567127, 3],"float32"), padding_idx=1, )
paddle.nn.functional.embedding(Tensor([1, 44],"int64"), weight=Tensor([285212673, 8],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([1, 44],"int64"), weight=Tensor([40000, 57043],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([1, 45],"int64"), weight=Tensor([285212673, 8],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([1, 45],"int64"), weight=Tensor([40000, 57043],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([1, 46],"int64"), weight=Tensor([285212673, 8],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([1, 46],"int64"), weight=Tensor([40000, 57043],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([104, 13],"int64"), weight=Tensor([33712, 67683],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([104, 13],"int64"), weight=Tensor([4456449, 512],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([13, 3],"int32"), weight=Tensor([81, 28169153],"float32"), padding_idx=1, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([13, 3],"int32"), weight=Tensor([95070891, 24],"float32"), padding_idx=1, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([13, 4, 7],"int32"), weight=Tensor([142606337, 16],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([13, 4, 7],"int32"), weight=Tensor([71303169, 32],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([13, 7],"int32"), weight=Tensor([109, 20933041],"float32"), padding_idx=1, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([13, 7],"int32"), weight=Tensor([35651585, 64],"float32"), padding_idx=1, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([13, 7],"int32"), weight=Tensor([512, 4456449],"float32"), padding_idx=1, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([14, 209],"int64"), weight=Tensor([50000, 45635],"float32"), padding_idx=1, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([14, 209],"int64"), weight=Tensor([5941931, 384],"float32"), padding_idx=1, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([1],"int64"), weight=Tensor([19529, 116837],"float32"), padding_idx=19528, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([1],"int64"), weight=Tensor([7605672, 300],"float32"), padding_idx=19528, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([2, 10],"int64"), weight=Tensor([31985, 71337],"float32"), padding_idx=3, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([2, 10],"int64"), weight=Tensor([32000, 71304],"float32"), padding_idx=3, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([2, 10],"int64"), weight=Tensor([32010, 71281],"float32"), padding_idx=3, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([2, 10],"int64"), weight=Tensor([35651585, 64],"float32"), padding_idx=3, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([2, 1],"int64"), weight=Tensor([32000, 71304],"float32"), padding_idx=3, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([2, 1],"int64"), weight=Tensor([35651585, 64],"float32"), padding_idx=3, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([2, 3],"int64"), Tensor([10, 228170138],"float32"), padding_idx=-1, scale_grad_by_freq=False, )
paddle.nn.functional.embedding(Tensor([2, 3],"int64"), Tensor([10, 228170138],"float32"), padding_idx=-1, scale_grad_by_freq=True, )
paddle.nn.functional.embedding(Tensor([2, 3],"int64"), Tensor([570425345, 4],"float32"), padding_idx=-1, scale_grad_by_freq=False, )
paddle.nn.functional.embedding(Tensor([2, 3],"int64"), Tensor([570425345, 4],"float32"), padding_idx=-1, scale_grad_by_freq=True, )
paddle.nn.functional.embedding(Tensor([2, 4],"int64"), Tensor([10, 228170138],"float32"), padding_idx=2, scale_grad_by_freq=False, )
paddle.nn.functional.embedding(Tensor([2, 4],"int64"), Tensor([10, 228170138],"float32"), padding_idx=2, scale_grad_by_freq=True, )
paddle.nn.functional.embedding(Tensor([2, 4],"int64"), Tensor([570425345, 4],"float32"), padding_idx=2, scale_grad_by_freq=False, )
paddle.nn.functional.embedding(Tensor([2, 4],"int64"), Tensor([570425345, 4],"float32"), padding_idx=2, scale_grad_by_freq=True, )
paddle.nn.functional.embedding(Tensor([2, 5],"int64"), weight=Tensor([32000, 71304],"float32"), padding_idx=3, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([2, 5],"int64"), weight=Tensor([35651585, 64],"float32"), padding_idx=3, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([2],"int64"), weight=Tensor([100, 22817014],"float32"), padding_idx=99, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([2],"int64"), weight=Tensor([285212673, 8],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([2],"int64"), weight=Tensor([39980, 57072],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([2],"int64"), weight=Tensor([7605672, 300],"float32"), padding_idx=99, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([3, 1],"int64"), weight=Tensor([10, 228170138],"float32"), padding_idx=9, max_norm=0.5, norm_type=3.0, sparse=True, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([3, 1],"int64"), weight=Tensor([10, 228170138],"float32"), padding_idx=9, max_norm=None, norm_type=2.0, sparse=True, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([3, 1],"int64"), weight=Tensor([760567127, 3],"float32"), padding_idx=9, max_norm=0.5, norm_type=3.0, sparse=True, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([3, 1],"int64"), weight=Tensor([760567127, 3],"float32"), padding_idx=9, max_norm=None, norm_type=2.0, sparse=True, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([3, 4],"int64"), Tensor([1073741825, 4],"float16"), padding_idx=-4, )
paddle.nn.functional.embedding(Tensor([3, 4],"int64"), Tensor([1073741825, 4],"float16"), padding_idx=9, )
paddle.nn.functional.embedding(Tensor([39, 7],"int32"), weight=Tensor([71303169, 32],"float32"), padding_idx=3, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([52, 7],"int64"), weight=Tensor([35651585, 64],"float32"), padding_idx=1, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([52, 7],"int64"), weight=Tensor([512, 4456449],"float32"), padding_idx=1, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([6, 3],"int32"), Tensor([10, 228170138],"float32"), padding_idx=5, scale_grad_by_freq=False, )
paddle.nn.functional.embedding(Tensor([6, 3],"int32"), Tensor([10, 228170138],"float32"), padding_idx=5, scale_grad_by_freq=True, )
paddle.nn.functional.embedding(Tensor([6, 3],"int32"), Tensor([570425345, 4],"float32"), padding_idx=5, scale_grad_by_freq=False, )
paddle.nn.functional.embedding(Tensor([6, 3],"int32"), Tensor([570425345, 4],"float32"), padding_idx=5, scale_grad_by_freq=True, )
paddle.nn.functional.embedding(Tensor([64, 25],"int64"), weight=Tensor([4456449, 512],"float32"), padding_idx=6626, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([64, 25],"int64"), weight=Tensor([6627, 344304],"float32"), padding_idx=6626, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([64, 25],"int64"), weight=Tensor([6627, 648102],"float16"), padding_idx=6626, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([64, 25],"int64"), weight=Tensor([8388609, 512],"float16"), padding_idx=6626, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([7, 165],"int64"), weight=Tensor([2228225, 1024],"float32"), padding_idx=1, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([7, 165],"int64"), weight=Tensor([50000, 45635],"float32"), padding_idx=1, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([8, 25],"int64"), weight=Tensor([4456449, 512],"float32"), padding_idx=6626, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([8, 25],"int64"), weight=Tensor([6627, 344304],"float32"), padding_idx=6626, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.gaussian_nll_loss(Tensor([10, 2, 114085069],"float32"), Tensor([10, 2, 114085069],"float32"), Tensor([10, 2, 1],"float32"), False, 1e-06, "none", None, )
paddle.nn.functional.interpolate(Tensor([1, 1, 4753545, 480],"float32"), size=list[10,8,], )
paddle.nn.functional.interpolate(Tensor([1, 1, 640, 3565159],"float32"), size=list[10,8,], )
paddle.nn.functional.interpolate(Tensor([1, 128, 128, 139265],"float32"), list[256,256,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([1, 128, 139265, 128],"float32"), list[256,256,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([1, 128, 2, 8912897],"float32"), list[128,128,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([1, 128, 8912897, 2],"float32"), list[128,128,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([1, 17825793, 128],"float32"), size=list[64,], mode="linear", align_mode=1, align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 17825793, 128],"float32"), size=list[64,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NCW", name=None, )
paddle.nn.functional.interpolate(Tensor([1, 2, 2228225, 512],"float32"), list[Tensor([1],"int64"),Tensor([1],"int64"),], mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([1, 2, 512, 2228225],"float32"), list[Tensor([1],"int64"),Tensor([1],"int64"),], mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([1, 256, 1, 16777217],"float16"), list[64,64,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 256, 16777217, 1],"float16"), list[64,64,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 3, 760567127],"float32"), size=list[64,], mode="linear", align_mode=1, align_corners=False, )
paddle.nn.functional.interpolate(Tensor([1, 3, 760567127],"float32"), size=list[64,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NCW", name=None, )
paddle.nn.functional.interpolate(Tensor([1, 32, 2, 35651585],"float32"), list[32,32,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([1, 32, 35651585, 2],"float32"), list[32,32,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([1, 4294967297, 1, 1],"float16"), list[64,64,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([1, 7428, 640, 480],"float32"), size=list[10,8,], )
paddle.nn.functional.interpolate(Tensor([1, 8705, 512, 512],"float32"), list[Tensor([1],"int64"),Tensor([1],"int64"),], mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float16"), size=None, scale_factor=list[0.4,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float16"), size=None, scale_factor=list[0.4,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float16"), size=None, scale_factor=list[0.4,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float16"), size=None, scale_factor=list[0.4,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float16"), size=None, scale_factor=list[0.6000000000000001,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float16"), size=None, scale_factor=list[0.6000000000000001,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float16"), size=None, scale_factor=list[0.6000000000000001,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float16"), size=None, scale_factor=list[0.6000000000000001,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float16"), size=None, scale_factor=list[0.8000000000000002,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float16"), size=None, scale_factor=list[0.8000000000000002,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float16"), size=None, scale_factor=list[0.8000000000000002,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float16"), size=None, scale_factor=list[0.8000000000000002,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([107374183, 10, 4],"float16"), size=Tensor([1],"int32"), scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([1073742, 10, 10, 10, 4],"float16"), size=list[4,2,3,], scale_factor=None, mode="trilinear", align_corners=False, align_mode=1, data_format="NDHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([1073742, 10, 10, 10, 4],"float16"), size=list[4,2,3,], scale_factor=None, mode="trilinear", align_corners=True, align_mode=0, data_format="NDHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([11408507, 2, 10, 10],"float32"), size=None, scale_factor=list[0.6,0.6,], mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([11408507, 2, 10, 10],"float32"), size=None, scale_factor=list[0.6,0.6,], mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([11408507, 2, 10, 10],"float32"), size=None, scale_factor=list[0.6,0.6,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([11408507, 2, 10, 10],"float32"), size=None, scale_factor=list[0.6,0.6,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([11408507, 2, 10, 10],"float32"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([11408507, 2, 10, 10],"float32"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([11408507, 2, 10, 10],"float32"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([11408507, 2, 10, 10],"float32"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([11408507, 2, 10, 10],"float32"), size=None, scale_factor=list[0.6,2.9999999999999996,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([11408507, 2, 10, 10],"float32"), size=None, scale_factor=list[0.6,2.9999999999999996,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([11408507, 2, 10, 10],"float32"), size=None, scale_factor=list[0.6,2.9999999999999996,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([11408507, 2, 10, 10],"float32"), size=None, scale_factor=list[0.6,2.9999999999999996,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([11408507, 2, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([11408507, 2, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([11408507, 2, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([11408507, 2, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([11408507, 2, 10, 10],"float32"), size=None, scale_factor=list[2.9999999999999996,0.6,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([11408507, 2, 10, 10],"float32"), size=None, scale_factor=list[2.9999999999999996,0.6,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([11408507, 2, 10, 10],"float32"), size=None, scale_factor=list[2.9999999999999996,0.6,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([11408507, 2, 10, 10],"float32"), size=None, scale_factor=list[2.9999999999999996,0.6,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([11408507, 2, 10, 10],"float32"), size=list[13,13,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([11408507, 2, 10, 10],"float32"), size=list[13,13,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([11408507, 2, 10, 10],"float32"), size=list[13,13,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([11408507, 2, 10, 10],"float32"), size=list[13,13,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([11408507, 2, 10, 10],"float32"), size=list[13,2,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([11408507, 2, 10, 10],"float32"), size=list[13,2,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([11408507, 2, 10, 10],"float32"), size=list[13,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([11408507, 2, 10, 10],"float32"), size=list[13,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([11408507, 2, 10, 10],"float32"), size=list[2,13,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([11408507, 2, 10, 10],"float32"), size=list[2,13,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([11408507, 2, 10, 10],"float32"), size=list[2,13,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([11408507, 2, 10, 10],"float32"), size=list[2,13,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([11408507, 2, 10, 10],"float32"), size=list[2,2,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([11408507, 2, 10, 10],"float32"), size=list[2,2,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([11408507, 2, 10, 10],"float32"), size=list[2,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([11408507, 2, 10, 10],"float32"), size=list[2,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([11408507, 2, 10, 10],"float32"), size=list[2,24,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([11408507, 2, 10, 10],"float32"), size=list[2,24,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([11408507, 2, 10, 10],"float32"), size=list[24,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([11408507, 2, 10, 10],"float32"), size=list[24,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([16, 160, 148549, 6],"float32"), size=list[16,12,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([16, 160, 297097, 3],"float32"), size=list[8,6,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([16, 160, 4, 222823],"float32"), size=list[8,6,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([16, 160, 8, 111412],"float32"), size=list[16,12,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([16, 32, 19, 234550],"float32"), size=tuple(20,20,), mode="bicubic", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([16, 32, 20, 222823],"float32"), size=list[19,19,], mode="bicubic", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([16, 32, 222823, 20],"float32"), size=list[19,19,], mode="bicubic", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([16, 32, 234550, 19],"float32"), size=tuple(20,20,), mode="bicubic", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([16, 356516, 20, 20],"float32"), size=list[19,19,], mode="bicubic", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([16, 395032, 19, 19],"float32"), size=tuple(10,10,), mode="bicubic", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([16, 395032, 19, 19],"float32"), size=tuple(20,20,), mode="bicubic", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([16, 40, 148549, 24],"float32"), size=list[64,48,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([16, 40, 16, 222823],"float32"), size=list[32,24,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([16, 40, 297097, 12],"float32"), size=list[32,24,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([16, 40, 32, 111412],"float32"), size=list[64,48,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([16, 64, 117275, 19],"float32"), size=tuple(10,10,), mode="bicubic", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([16, 64, 19, 117275],"float32"), size=tuple(10,10,), mode="bicubic", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([178258, 32, 20, 20],"float32"), size=list[19,19,], mode="bicubic", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([197516, 32, 19, 19],"float32"), size=tuple(20,20,), mode="bicubic", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10, 2147484],"float16"), size=list[4,2,3,], scale_factor=None, mode="trilinear", align_corners=False, align_mode=1, data_format="NDHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 10, 2147484],"float16"), size=list[4,2,3,], scale_factor=None, mode="trilinear", align_corners=True, align_mode=0, data_format="NDHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 21474837],"float16"), size=None, scale_factor=list[0.6,0.6,], mode="bicubic", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 21474837],"float16"), size=None, scale_factor=list[0.6,0.6,], mode="bicubic", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 21474837],"float16"), size=None, scale_factor=list[0.6,0.6,], mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 21474837],"float16"), size=None, scale_factor=list[0.6,0.6,], mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 21474837],"float16"), size=list[13,2,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 21474837],"float16"), size=list[13,2,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 21474837],"float16"), size=list[14,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 21474837],"float16"), size=list[14,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 21474837],"float16"), size=list[2,12,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 21474837],"float16"), size=list[2,12,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 21474837],"float16"), size=list[2,13,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 21474837],"float16"), size=list[2,13,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 21474837],"float16"), size=list[2,2,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 21474837],"float16"), size=list[2,2,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 21474837],"float16"), size=list[2,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 21474837],"float16"), size=list[2,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 21474837],"float16"), size=list[2,22,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 21474837],"float16"), size=list[2,22,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 21474837],"float16"), size=list[26,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 21474837],"float16"), size=list[26,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 5368710, 4],"float16"), size=list[4,2,3,], scale_factor=None, mode="trilinear", align_corners=False, align_mode=1, data_format="NDHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 10, 5368710, 4],"float16"), size=list[4,2,3,], scale_factor=None, mode="trilinear", align_corners=True, align_mode=0, data_format="NDHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183, 2],"float16"), size=None, scale_factor=list[0.6,0.6,], mode="bicubic", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183, 2],"float16"), size=None, scale_factor=list[0.6,0.6,], mode="bicubic", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183, 2],"float16"), size=None, scale_factor=list[0.6,0.6,], mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183, 2],"float16"), size=None, scale_factor=list[0.6,0.6,], mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183, 2],"float16"), size=list[13,13,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183, 2],"float16"), size=list[13,13,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183, 2],"float16"), size=list[13,2,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183, 2],"float16"), size=list[13,2,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183, 2],"float16"), size=list[14,12,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183, 2],"float16"), size=list[14,12,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183, 2],"float16"), size=list[14,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183, 2],"float16"), size=list[14,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183, 2],"float16"), size=list[14,22,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183, 2],"float16"), size=list[14,22,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183, 2],"float16"), size=list[2,12,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183, 2],"float16"), size=list[2,12,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183, 2],"float16"), size=list[2,13,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183, 2],"float16"), size=list[2,13,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183, 2],"float16"), size=list[2,2,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183, 2],"float16"), size=list[2,2,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183, 2],"float16"), size=list[2,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183, 2],"float16"), size=list[2,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183, 2],"float16"), size=list[2,22,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183, 2],"float16"), size=list[2,22,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183, 2],"float16"), size=list[26,12,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183, 2],"float16"), size=list[26,12,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183, 2],"float16"), size=list[26,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183, 2],"float16"), size=list[26,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183, 2],"float16"), size=list[26,22,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 107374183, 2],"float16"), size=list[26,22,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 114085069],"float32"), size=None, scale_factor=list[0.6,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 114085069],"float32"), size=None, scale_factor=list[0.6,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 114085069],"float32"), size=None, scale_factor=list[0.6,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 114085069],"float32"), size=None, scale_factor=list[0.6,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 114085069],"float32"), size=None, scale_factor=list[0.7,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 114085069],"float32"), size=None, scale_factor=list[0.7,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 114085069],"float32"), size=None, scale_factor=list[0.7,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 114085069],"float32"), size=None, scale_factor=list[0.7,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 114085069],"float32"), size=None, scale_factor=list[0.7999999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 114085069],"float32"), size=None, scale_factor=list[0.7999999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 114085069],"float32"), size=None, scale_factor=list[0.7999999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 114085069],"float32"), size=None, scale_factor=list[0.7999999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 114085069],"float32"), size=None, scale_factor=list[0.8999999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 114085069],"float32"), size=None, scale_factor=list[0.8999999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 114085069],"float32"), size=None, scale_factor=list[0.8999999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 114085069],"float32"), size=None, scale_factor=list[0.8999999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 114085069],"float32"), size=None, scale_factor=list[0.9999999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 114085069],"float32"), size=None, scale_factor=list[0.9999999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 114085069],"float32"), size=None, scale_factor=list[0.9999999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 114085069],"float32"), size=None, scale_factor=list[0.9999999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 114085069],"float32"), size=None, scale_factor=list[1.0999999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 114085069],"float32"), size=None, scale_factor=list[1.0999999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 114085069],"float32"), size=None, scale_factor=list[1.0999999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 114085069],"float32"), size=None, scale_factor=list[1.0999999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 114085069],"float32"), size=None, scale_factor=list[1.1999999999999997,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 114085069],"float32"), size=None, scale_factor=list[1.1999999999999997,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 114085069],"float32"), size=None, scale_factor=list[1.1999999999999997,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 114085069],"float32"), size=None, scale_factor=list[1.1999999999999997,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 114085069],"float32"), size=None, scale_factor=list[1.2999999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 114085069],"float32"), size=None, scale_factor=list[1.2999999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 114085069],"float32"), size=None, scale_factor=list[1.2999999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 114085069],"float32"), size=None, scale_factor=list[1.2999999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 114085069],"float32"), size=None, scale_factor=list[1.4,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 114085069],"float32"), size=None, scale_factor=list[1.4,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 114085069],"float32"), size=None, scale_factor=list[1.4,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 114085069],"float32"), size=None, scale_factor=list[1.4,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 114085069],"float32"), size=None, scale_factor=list[1.4999999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 114085069],"float32"), size=None, scale_factor=list[1.4999999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 114085069],"float32"), size=None, scale_factor=list[1.4999999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 114085069],"float32"), size=None, scale_factor=list[1.4999999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 114085069],"float32"), size=None, scale_factor=list[1.5999999999999996,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 114085069],"float32"), size=None, scale_factor=list[1.5999999999999996,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 114085069],"float32"), size=None, scale_factor=list[1.5999999999999996,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 114085069],"float32"), size=None, scale_factor=list[1.5999999999999996,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 114085069],"float32"), size=None, scale_factor=list[1.6999999999999997,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 114085069],"float32"), size=None, scale_factor=list[1.6999999999999997,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 114085069],"float32"), size=None, scale_factor=list[1.6999999999999997,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 114085069],"float32"), size=None, scale_factor=list[1.6999999999999997,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 114085069],"float32"), size=None, scale_factor=list[1.7999999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 114085069],"float32"), size=None, scale_factor=list[1.7999999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 114085069],"float32"), size=None, scale_factor=list[1.7999999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 114085069],"float32"), size=None, scale_factor=list[1.7999999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 114085069],"float32"), size=list[11,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 114085069],"float32"), size=list[11,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 114085069],"float32"), size=list[11,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 114085069],"float32"), size=list[11,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 114085069],"float32"), size=list[14,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 114085069],"float32"), size=list[14,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 114085069],"float32"), size=list[14,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 114085069],"float32"), size=list[14,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 114085069],"float32"), size=list[17,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 114085069],"float32"), size=list[17,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 114085069],"float32"), size=list[17,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 114085069],"float32"), size=list[17,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 114085069],"float32"), size=list[2,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 114085069],"float32"), size=list[2,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 114085069],"float32"), size=list[2,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 114085069],"float32"), size=list[2,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 114085069],"float32"), size=list[5,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 114085069],"float32"), size=list[5,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 114085069],"float32"), size=list[5,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 114085069],"float32"), size=list[5,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 114085069],"float32"), size=list[8,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 114085069],"float32"), size=list[8,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 114085069],"float32"), size=list[8,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 114085069],"float32"), size=list[8,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float16"), size=None, scale_factor=list[0.4,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float16"), size=None, scale_factor=list[0.4,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float16"), size=None, scale_factor=list[0.4,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float16"), size=None, scale_factor=list[0.4,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float16"), size=None, scale_factor=list[0.6000000000000001,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float16"), size=None, scale_factor=list[0.6000000000000001,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float16"), size=None, scale_factor=list[0.6000000000000001,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float16"), size=None, scale_factor=list[0.6000000000000001,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float16"), size=None, scale_factor=list[0.8000000000000002,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float16"), size=None, scale_factor=list[0.8000000000000002,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float16"), size=None, scale_factor=list[0.8000000000000002,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 214748365],"float16"), size=None, scale_factor=list[0.8000000000000002,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 5368710, 10, 4],"float16"), size=list[4,2,3,], scale_factor=None, mode="trilinear", align_corners=False, align_mode=1, data_format="NDHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 10, 5368710, 10, 4],"float16"), size=list[4,2,3,], scale_factor=None, mode="trilinear", align_corners=True, align_mode=0, data_format="NDHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 107374183, 10, 2],"float16"), size=None, scale_factor=list[0.6,0.6,], mode="bicubic", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 107374183, 10, 2],"float16"), size=None, scale_factor=list[0.6,0.6,], mode="bicubic", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 107374183, 10, 2],"float16"), size=None, scale_factor=list[0.6,0.6,], mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 107374183, 10, 2],"float16"), size=None, scale_factor=list[0.6,0.6,], mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 107374183, 10, 2],"float16"), size=list[13,13,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 107374183, 10, 2],"float16"), size=list[13,13,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 107374183, 10, 2],"float16"), size=list[13,2,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 107374183, 10, 2],"float16"), size=list[13,2,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 107374183, 10, 2],"float16"), size=list[14,12,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 107374183, 10, 2],"float16"), size=list[14,12,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 107374183, 10, 2],"float16"), size=list[14,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 107374183, 10, 2],"float16"), size=list[14,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 107374183, 10, 2],"float16"), size=list[14,22,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 107374183, 10, 2],"float16"), size=list[14,22,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 107374183, 10, 2],"float16"), size=list[2,12,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 107374183, 10, 2],"float16"), size=list[2,12,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 107374183, 10, 2],"float16"), size=list[2,13,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 107374183, 10, 2],"float16"), size=list[2,13,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 107374183, 10, 2],"float16"), size=list[2,2,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 107374183, 10, 2],"float16"), size=list[2,2,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 107374183, 10, 2],"float16"), size=list[2,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 107374183, 10, 2],"float16"), size=list[2,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 107374183, 10, 2],"float16"), size=list[2,22,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 107374183, 10, 2],"float16"), size=list[2,22,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 107374183, 10, 2],"float16"), size=list[26,12,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 107374183, 10, 2],"float16"), size=list[26,12,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 107374183, 10, 2],"float16"), size=list[26,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 107374183, 10, 2],"float16"), size=list[26,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 107374183, 10, 2],"float16"), size=list[26,22,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 107374183, 10, 2],"float16"), size=list[26,22,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 11408507, 10, 10],"float32"), size=None, scale_factor=list[0.6,0.6,], mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 11408507, 10, 10],"float32"), size=None, scale_factor=list[0.6,0.6,], mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 11408507, 10, 10],"float32"), size=None, scale_factor=list[0.6,0.6,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 11408507, 10, 10],"float32"), size=None, scale_factor=list[0.6,0.6,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 11408507, 10, 10],"float32"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 11408507, 10, 10],"float32"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 11408507, 10, 10],"float32"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 11408507, 10, 10],"float32"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 11408507, 10, 10],"float32"), size=None, scale_factor=list[0.6,2.9999999999999996,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 11408507, 10, 10],"float32"), size=None, scale_factor=list[0.6,2.9999999999999996,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 11408507, 10, 10],"float32"), size=None, scale_factor=list[0.6,2.9999999999999996,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 11408507, 10, 10],"float32"), size=None, scale_factor=list[0.6,2.9999999999999996,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 11408507, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 11408507, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 11408507, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 11408507, 10, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 11408507, 10, 10],"float32"), size=None, scale_factor=list[2.9999999999999996,0.6,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 11408507, 10, 10],"float32"), size=None, scale_factor=list[2.9999999999999996,0.6,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 11408507, 10, 10],"float32"), size=None, scale_factor=list[2.9999999999999996,0.6,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 11408507, 10, 10],"float32"), size=None, scale_factor=list[2.9999999999999996,0.6,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 11408507, 10, 10],"float32"), size=list[13,13,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 11408507, 10, 10],"float32"), size=list[13,13,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 11408507, 10, 10],"float32"), size=list[13,13,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 11408507, 10, 10],"float32"), size=list[13,13,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 11408507, 10, 10],"float32"), size=list[13,2,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 11408507, 10, 10],"float32"), size=list[13,2,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 11408507, 10, 10],"float32"), size=list[13,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 11408507, 10, 10],"float32"), size=list[13,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 11408507, 10, 10],"float32"), size=list[2,13,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 11408507, 10, 10],"float32"), size=list[2,13,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 11408507, 10, 10],"float32"), size=list[2,13,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 11408507, 10, 10],"float32"), size=list[2,13,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 11408507, 10, 10],"float32"), size=list[2,2,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 11408507, 10, 10],"float32"), size=list[2,2,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 11408507, 10, 10],"float32"), size=list[2,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 11408507, 10, 10],"float32"), size=list[2,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 11408507, 10, 10],"float32"), size=list[2,24,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 11408507, 10, 10],"float32"), size=list[2,24,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 11408507, 10, 10],"float32"), size=list[24,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 11408507, 10, 10],"float32"), size=list[24,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 1140851, 10, 10, 10],"float32"), size=None, scale_factor=list[0.6,0.6,0.6,], mode="trilinear", align_corners=False, align_mode=1, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 1140851, 10, 10, 10],"float32"), size=None, scale_factor=list[0.6,0.6,0.6,], mode="trilinear", align_corners=True, align_mode=0, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 1140851, 10, 10, 10],"float32"), size=list[2,2,2,], scale_factor=None, mode="trilinear", align_corners=False, align_mode=1, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 1140851, 10, 10, 10],"float32"), size=list[2,2,2,], scale_factor=None, mode="trilinear", align_corners=True, align_mode=0, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 57042535],"float32"), size=None, scale_factor=list[0.6,0.6,], mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 57042535],"float32"), size=None, scale_factor=list[0.6,0.6,], mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 57042535],"float32"), size=None, scale_factor=list[0.6,0.6,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 57042535],"float32"), size=None, scale_factor=list[0.6,0.6,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 57042535],"float32"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 57042535],"float32"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 57042535],"float32"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 57042535],"float32"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 57042535],"float32"), size=None, scale_factor=list[0.6,2.9999999999999996,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 57042535],"float32"), size=None, scale_factor=list[0.6,2.9999999999999996,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 57042535],"float32"), size=None, scale_factor=list[0.6,2.9999999999999996,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 57042535],"float32"), size=None, scale_factor=list[0.6,2.9999999999999996,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 57042535],"float32"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 57042535],"float32"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 57042535],"float32"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 57042535],"float32"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 57042535],"float32"), size=None, scale_factor=list[2.9999999999999996,0.6,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 57042535],"float32"), size=None, scale_factor=list[2.9999999999999996,0.6,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 57042535],"float32"), size=None, scale_factor=list[2.9999999999999996,0.6,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 57042535],"float32"), size=None, scale_factor=list[2.9999999999999996,0.6,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 57042535],"float32"), size=list[13,13,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 57042535],"float32"), size=list[13,13,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 57042535],"float32"), size=list[13,13,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 57042535],"float32"), size=list[13,13,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 57042535],"float32"), size=list[13,2,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 57042535],"float32"), size=list[13,2,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 57042535],"float32"), size=list[13,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 57042535],"float32"), size=list[13,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 57042535],"float32"), size=list[13,24,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 57042535],"float32"), size=list[13,24,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 57042535],"float32"), size=list[2,13,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 57042535],"float32"), size=list[2,13,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 57042535],"float32"), size=list[2,13,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 57042535],"float32"), size=list[2,13,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 57042535],"float32"), size=list[2,2,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 57042535],"float32"), size=list[2,2,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 57042535],"float32"), size=list[2,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 57042535],"float32"), size=list[2,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 57042535],"float32"), size=list[2,24,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 57042535],"float32"), size=list[2,24,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 57042535],"float32"), size=list[24,13,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 57042535],"float32"), size=list[24,13,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 57042535],"float32"), size=list[24,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 57042535],"float32"), size=list[24,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 57042535],"float32"), size=list[24,24,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 10, 57042535],"float32"), size=list[24,24,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 214748365, 5],"float16"), size=list[10,11,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 4, 268435457],"float16"), size=list[10,11,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 57042535, 10],"float32"), size=None, scale_factor=list[0.6,0.6,], mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 57042535, 10],"float32"), size=None, scale_factor=list[0.6,0.6,], mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 57042535, 10],"float32"), size=None, scale_factor=list[0.6,0.6,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 57042535, 10],"float32"), size=None, scale_factor=list[0.6,0.6,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 57042535, 10],"float32"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 57042535, 10],"float32"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 57042535, 10],"float32"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 57042535, 10],"float32"), size=None, scale_factor=list[0.6,1.7999999999999998,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 57042535, 10],"float32"), size=None, scale_factor=list[0.6,2.9999999999999996,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 57042535, 10],"float32"), size=None, scale_factor=list[0.6,2.9999999999999996,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 57042535, 10],"float32"), size=None, scale_factor=list[0.6,2.9999999999999996,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 57042535, 10],"float32"), size=None, scale_factor=list[0.6,2.9999999999999996,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 57042535, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 57042535, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 57042535, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 57042535, 10],"float32"), size=None, scale_factor=list[1.7999999999999998,0.6,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 57042535, 10],"float32"), size=None, scale_factor=list[2.9999999999999996,0.6,], mode="bilinear", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 57042535, 10],"float32"), size=None, scale_factor=list[2.9999999999999996,0.6,], mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 57042535, 10],"float32"), size=None, scale_factor=list[2.9999999999999996,0.6,], mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 57042535, 10],"float32"), size=None, scale_factor=list[2.9999999999999996,0.6,], mode="bilinear", align_corners=True, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 57042535, 10],"float32"), size=list[13,13,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 57042535, 10],"float32"), size=list[13,13,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 57042535, 10],"float32"), size=list[13,13,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 57042535, 10],"float32"), size=list[13,13,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 57042535, 10],"float32"), size=list[13,2,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 57042535, 10],"float32"), size=list[13,2,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 57042535, 10],"float32"), size=list[13,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 57042535, 10],"float32"), size=list[13,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 57042535, 10],"float32"), size=list[13,24,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 57042535, 10],"float32"), size=list[13,24,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 57042535, 10],"float32"), size=list[2,13,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 57042535, 10],"float32"), size=list[2,13,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 57042535, 10],"float32"), size=list[2,13,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 57042535, 10],"float32"), size=list[2,13,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 57042535, 10],"float32"), size=list[2,2,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 57042535, 10],"float32"), size=list[2,2,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 57042535, 10],"float32"), size=list[2,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 57042535, 10],"float32"), size=list[2,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 57042535, 10],"float32"), size=list[2,24,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 57042535, 10],"float32"), size=list[2,24,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 57042535, 10],"float32"), size=list[24,13,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 57042535, 10],"float32"), size=list[24,13,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 57042535, 10],"float32"), size=list[24,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 57042535, 10],"float32"), size=list[24,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 57042535, 10],"float32"), size=list[24,24,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 2, 57042535, 10],"float32"), size=list[24,24,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 285212673, 4],"float32"), size=None, scale_factor=list[0.6,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 285212673, 4],"float32"), size=None, scale_factor=list[0.6,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 285212673, 4],"float32"), size=None, scale_factor=list[0.6,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 285212673, 4],"float32"), size=None, scale_factor=list[0.6,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 285212673, 4],"float32"), size=None, scale_factor=list[0.7,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 285212673, 4],"float32"), size=None, scale_factor=list[0.7,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 285212673, 4],"float32"), size=None, scale_factor=list[0.7,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 285212673, 4],"float32"), size=None, scale_factor=list[0.7,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 285212673, 4],"float32"), size=None, scale_factor=list[0.7999999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 285212673, 4],"float32"), size=None, scale_factor=list[0.7999999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 285212673, 4],"float32"), size=None, scale_factor=list[0.7999999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 285212673, 4],"float32"), size=None, scale_factor=list[0.7999999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 285212673, 4],"float32"), size=None, scale_factor=list[0.8999999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 285212673, 4],"float32"), size=None, scale_factor=list[0.8999999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 285212673, 4],"float32"), size=None, scale_factor=list[0.8999999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 285212673, 4],"float32"), size=None, scale_factor=list[0.8999999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 285212673, 4],"float32"), size=None, scale_factor=list[0.9999999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 285212673, 4],"float32"), size=None, scale_factor=list[0.9999999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 285212673, 4],"float32"), size=None, scale_factor=list[0.9999999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 285212673, 4],"float32"), size=None, scale_factor=list[0.9999999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 285212673, 4],"float32"), size=None, scale_factor=list[1.0999999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 285212673, 4],"float32"), size=None, scale_factor=list[1.0999999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 285212673, 4],"float32"), size=None, scale_factor=list[1.0999999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 285212673, 4],"float32"), size=None, scale_factor=list[1.0999999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 285212673, 4],"float32"), size=None, scale_factor=list[1.1999999999999997,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 285212673, 4],"float32"), size=None, scale_factor=list[1.1999999999999997,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 285212673, 4],"float32"), size=None, scale_factor=list[1.1999999999999997,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 285212673, 4],"float32"), size=None, scale_factor=list[1.1999999999999997,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 285212673, 4],"float32"), size=None, scale_factor=list[1.2999999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 285212673, 4],"float32"), size=None, scale_factor=list[1.2999999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 285212673, 4],"float32"), size=None, scale_factor=list[1.2999999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 285212673, 4],"float32"), size=None, scale_factor=list[1.2999999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 285212673, 4],"float32"), size=None, scale_factor=list[1.4,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 285212673, 4],"float32"), size=None, scale_factor=list[1.4,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 285212673, 4],"float32"), size=None, scale_factor=list[1.4,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 285212673, 4],"float32"), size=None, scale_factor=list[1.4,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 285212673, 4],"float32"), size=None, scale_factor=list[1.4999999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 285212673, 4],"float32"), size=None, scale_factor=list[1.4999999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 285212673, 4],"float32"), size=None, scale_factor=list[1.4999999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 285212673, 4],"float32"), size=None, scale_factor=list[1.4999999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 285212673, 4],"float32"), size=None, scale_factor=list[1.5999999999999996,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 285212673, 4],"float32"), size=None, scale_factor=list[1.5999999999999996,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 285212673, 4],"float32"), size=None, scale_factor=list[1.5999999999999996,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 285212673, 4],"float32"), size=None, scale_factor=list[1.5999999999999996,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 285212673, 4],"float32"), size=None, scale_factor=list[1.6999999999999997,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 285212673, 4],"float32"), size=None, scale_factor=list[1.6999999999999997,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 285212673, 4],"float32"), size=None, scale_factor=list[1.6999999999999997,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 285212673, 4],"float32"), size=None, scale_factor=list[1.6999999999999997,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 285212673, 4],"float32"), size=None, scale_factor=list[1.7999999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 285212673, 4],"float32"), size=None, scale_factor=list[1.7999999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 285212673, 4],"float32"), size=None, scale_factor=list[1.7999999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 285212673, 4],"float32"), size=None, scale_factor=list[1.7999999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 285212673, 4],"float32"), size=list[11,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 285212673, 4],"float32"), size=list[11,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 285212673, 4],"float32"), size=list[11,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 285212673, 4],"float32"), size=list[11,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 285212673, 4],"float32"), size=list[14,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 285212673, 4],"float32"), size=list[14,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 285212673, 4],"float32"), size=list[14,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 285212673, 4],"float32"), size=list[14,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 285212673, 4],"float32"), size=list[17,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 285212673, 4],"float32"), size=list[17,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 285212673, 4],"float32"), size=list[17,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 285212673, 4],"float32"), size=list[17,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 285212673, 4],"float32"), size=list[2,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 285212673, 4],"float32"), size=list[2,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 285212673, 4],"float32"), size=list[2,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 285212673, 4],"float32"), size=list[2,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 285212673, 4],"float32"), size=list[20,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 285212673, 4],"float32"), size=list[20,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 285212673, 4],"float32"), size=list[20,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 285212673, 4],"float32"), size=list[20,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 285212673, 4],"float32"), size=list[23,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 285212673, 4],"float32"), size=list[23,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 285212673, 4],"float32"), size=list[23,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 285212673, 4],"float32"), size=list[23,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 285212673, 4],"float32"), size=list[26,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 285212673, 4],"float32"), size=list[26,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 285212673, 4],"float32"), size=list[26,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 285212673, 4],"float32"), size=list[26,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 285212673, 4],"float32"), size=list[29,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 285212673, 4],"float32"), size=list[29,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 285212673, 4],"float32"), size=list[29,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 285212673, 4],"float32"), size=list[29,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 285212673, 4],"float32"), size=list[5,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 285212673, 4],"float32"), size=list[5,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 285212673, 4],"float32"), size=list[5,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 285212673, 4],"float32"), size=list[5,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 285212673, 4],"float32"), size=list[8,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 285212673, 4],"float32"), size=list[8,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 285212673, 4],"float32"), size=list[8,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 285212673, 4],"float32"), size=list[8,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 3, 143165577, 5],"float16"), size=list[3,3,], mode="bicubic", align_corners=True, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([2, 3, 5, 143165577],"float16"), size=list[3,3,], mode="bicubic", align_corners=True, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([2, 4, 10, 10, 2852127],"float32"), size=None, scale_factor=list[0.6,0.6,0.6,], mode="trilinear", align_corners=False, align_mode=1, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 4, 10, 10, 2852127],"float32"), size=None, scale_factor=list[0.6,0.6,0.6,], mode="trilinear", align_corners=True, align_mode=0, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 4, 10, 10, 2852127],"float32"), size=list[2,2,2,], scale_factor=None, mode="trilinear", align_corners=False, align_mode=1, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 4, 10, 10, 2852127],"float32"), size=list[2,2,2,], scale_factor=None, mode="trilinear", align_corners=True, align_mode=0, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 4, 10, 2852127, 10],"float32"), size=None, scale_factor=list[0.6,0.6,0.6,], mode="trilinear", align_corners=False, align_mode=1, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 4, 10, 2852127, 10],"float32"), size=None, scale_factor=list[0.6,0.6,0.6,], mode="trilinear", align_corners=True, align_mode=0, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 4, 10, 2852127, 10],"float32"), size=list[2,2,2,], scale_factor=None, mode="trilinear", align_corners=False, align_mode=1, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 4, 10, 2852127, 10],"float32"), size=list[2,2,2,], scale_factor=None, mode="trilinear", align_corners=True, align_mode=0, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 4, 2852127, 10, 10],"float32"), size=None, scale_factor=list[0.6,0.6,0.6,], mode="trilinear", align_corners=False, align_mode=1, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 4, 2852127, 10, 10],"float32"), size=None, scale_factor=list[0.6,0.6,0.6,], mode="trilinear", align_corners=True, align_mode=0, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 4, 2852127, 10, 10],"float32"), size=list[2,2,2,], scale_factor=None, mode="trilinear", align_corners=False, align_mode=1, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 4, 2852127, 10, 10],"float32"), size=list[2,2,2,], scale_factor=None, mode="trilinear", align_corners=True, align_mode=0, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870913, 4],"float16"), size=None, scale_factor=list[0.4,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870913, 4],"float16"), size=None, scale_factor=list[0.4,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870913, 4],"float16"), size=None, scale_factor=list[0.4,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870913, 4],"float16"), size=None, scale_factor=list[0.4,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870913, 4],"float16"), size=None, scale_factor=list[0.6000000000000001,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870913, 4],"float16"), size=None, scale_factor=list[0.6000000000000001,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870913, 4],"float16"), size=None, scale_factor=list[0.6000000000000001,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870913, 4],"float16"), size=None, scale_factor=list[0.6000000000000001,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870913, 4],"float16"), size=None, scale_factor=list[0.8000000000000002,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870913, 4],"float16"), size=None, scale_factor=list[0.8000000000000002,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870913, 4],"float16"), size=None, scale_factor=list[0.8000000000000002,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870913, 4],"float16"), size=None, scale_factor=list[0.8000000000000002,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 536870913, 4],"float16"), size=Tensor([1],"int32"), scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 5368710, 10, 10, 4],"float16"), size=list[4,2,3,], scale_factor=None, mode="trilinear", align_corners=False, align_mode=1, data_format="NDHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 5368710, 10, 10, 4],"float16"), size=list[4,2,3,], scale_factor=None, mode="trilinear", align_corners=True, align_mode=0, data_format="NDHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2, 85899346, 5, 5],"float16"), size=list[3,3,], mode="bicubic", align_corners=True, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([21474837, 10, 10, 2],"float16"), size=None, scale_factor=list[0.6,0.6,], mode="bicubic", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 10, 10, 2],"float16"), size=None, scale_factor=list[0.6,0.6,], mode="bicubic", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 10, 10, 2],"float16"), size=None, scale_factor=list[0.6,0.6,], mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 10, 10, 2],"float16"), size=None, scale_factor=list[0.6,0.6,], mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 10, 10, 2],"float16"), size=list[13,2,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 10, 10, 2],"float16"), size=list[13,2,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 10, 10, 2],"float16"), size=list[14,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 10, 10, 2],"float16"), size=list[14,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 10, 10, 2],"float16"), size=list[2,12,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 10, 10, 2],"float16"), size=list[2,12,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 10, 10, 2],"float16"), size=list[2,13,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 10, 10, 2],"float16"), size=list[2,13,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 10, 10, 2],"float16"), size=list[2,2,], scale_factor=None, mode="bicubic", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 10, 10, 2],"float16"), size=list[2,2,], scale_factor=None, mode="bicubic", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 10, 10, 2],"float16"), size=list[2,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 10, 10, 2],"float16"), size=list[2,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 10, 10, 2],"float16"), size=list[2,22,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 10, 10, 2],"float16"), size=list[2,22,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 10, 10, 2],"float16"), size=list[26,2,], scale_factor=None, mode="bilinear", align_corners=False, align_mode=1, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([21474837, 10, 10, 2],"float16"), size=list[26,2,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([2147484, 5, 20, 20],"float16"), size=list[10,10,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([4, 128, 1, 8388609],"float16"), list[16,32,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([4, 128, 8388609, 1],"float16"), list[16,32,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([4, 150, 111849, 64],"float16"), list[512,512,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([4, 150, 64, 111849],"float16"), list[512,512,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([4, 19, 128, 441506],"float16"), list[1024,1024,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([4, 19, 16, 3532046],"float16"), list[512,1024,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([4, 19, 1766023, 32],"float16"), list[512,1024,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([4, 19, 441506, 128],"float16"), list[1024,1024,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([4, 25565282, 6, 7],"float16"), size=list[10,10,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([4, 256, 1, 4194305],"float16"), list[64,128,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([4, 256, 131073, 32],"float16"), size=list[256,256,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([4, 256, 32, 131073],"float16"), size=list[256,256,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([4, 256, 4194305, 1],"float16"), list[64,128,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([4, 2684355, 20, 20],"float16"), size=list[10,10,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([4, 5, 10737419, 20],"float16"), size=list[10,10,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([4, 5, 20, 10737419],"float16"), size=list[10,10,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([4, 5, 30678338, 7],"float16"), size=list[10,10,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NHWC", name=None, )
paddle.nn.functional.interpolate(Tensor([4, 5, 30678338, 7],"float16"), size=list[100,50,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([4, 5, 6, 35791395],"float16"), size=list[100,50,], scale_factor=None, mode="bilinear", align_corners=True, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.interpolate(Tensor([4353, 2, 512, 512],"float32"), list[Tensor([1],"int64"),Tensor([1],"int64"),], mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([46422, 3, 64, 256],"float32"), list[32,64,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([512, 273, 64, 256],"float32"), list[32,64,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([512, 3, 5803, 256],"float32"), list[32,64,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([512, 3, 64, 23211],"float32"), list[32,64,], mode="bilinear", align_corners=True, )
paddle.nn.functional.interpolate(Tensor([57042535, 10, 4],"float32"), size=None, scale_factor=list[0.6,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([57042535, 10, 4],"float32"), size=None, scale_factor=list[0.6,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([57042535, 10, 4],"float32"), size=None, scale_factor=list[0.6,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([57042535, 10, 4],"float32"), size=None, scale_factor=list[0.6,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([57042535, 10, 4],"float32"), size=None, scale_factor=list[0.7,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([57042535, 10, 4],"float32"), size=None, scale_factor=list[0.7,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([57042535, 10, 4],"float32"), size=None, scale_factor=list[0.7,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([57042535, 10, 4],"float32"), size=None, scale_factor=list[0.7,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([57042535, 10, 4],"float32"), size=None, scale_factor=list[0.7999999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([57042535, 10, 4],"float32"), size=None, scale_factor=list[0.7999999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([57042535, 10, 4],"float32"), size=None, scale_factor=list[0.7999999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([57042535, 10, 4],"float32"), size=None, scale_factor=list[0.7999999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([57042535, 10, 4],"float32"), size=None, scale_factor=list[0.8999999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([57042535, 10, 4],"float32"), size=None, scale_factor=list[0.8999999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([57042535, 10, 4],"float32"), size=None, scale_factor=list[0.8999999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([57042535, 10, 4],"float32"), size=None, scale_factor=list[0.8999999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([57042535, 10, 4],"float32"), size=None, scale_factor=list[0.9999999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([57042535, 10, 4],"float32"), size=None, scale_factor=list[0.9999999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([57042535, 10, 4],"float32"), size=None, scale_factor=list[0.9999999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([57042535, 10, 4],"float32"), size=None, scale_factor=list[0.9999999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([57042535, 10, 4],"float32"), size=None, scale_factor=list[1.0999999999999999,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([57042535, 10, 4],"float32"), size=None, scale_factor=list[1.0999999999999999,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([57042535, 10, 4],"float32"), size=None, scale_factor=list[1.0999999999999999,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([57042535, 10, 4],"float32"), size=None, scale_factor=list[1.0999999999999999,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([57042535, 10, 4],"float32"), size=None, scale_factor=list[1.1999999999999997,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([57042535, 10, 4],"float32"), size=None, scale_factor=list[1.1999999999999997,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([57042535, 10, 4],"float32"), size=None, scale_factor=list[1.1999999999999997,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([57042535, 10, 4],"float32"), size=None, scale_factor=list[1.1999999999999997,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([57042535, 10, 4],"float32"), size=None, scale_factor=list[1.2999999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([57042535, 10, 4],"float32"), size=None, scale_factor=list[1.2999999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([57042535, 10, 4],"float32"), size=None, scale_factor=list[1.2999999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([57042535, 10, 4],"float32"), size=None, scale_factor=list[1.2999999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([57042535, 10, 4],"float32"), size=None, scale_factor=list[1.4,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([57042535, 10, 4],"float32"), size=None, scale_factor=list[1.4,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([57042535, 10, 4],"float32"), size=None, scale_factor=list[1.4,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([57042535, 10, 4],"float32"), size=None, scale_factor=list[1.4,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([57042535, 10, 4],"float32"), size=None, scale_factor=list[1.4999999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([57042535, 10, 4],"float32"), size=None, scale_factor=list[1.4999999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([57042535, 10, 4],"float32"), size=None, scale_factor=list[1.4999999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([57042535, 10, 4],"float32"), size=None, scale_factor=list[1.4999999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([57042535, 10, 4],"float32"), size=None, scale_factor=list[1.5999999999999996,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([57042535, 10, 4],"float32"), size=None, scale_factor=list[1.5999999999999996,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([57042535, 10, 4],"float32"), size=None, scale_factor=list[1.5999999999999996,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([57042535, 10, 4],"float32"), size=None, scale_factor=list[1.5999999999999996,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([57042535, 10, 4],"float32"), size=None, scale_factor=list[1.6999999999999997,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([57042535, 10, 4],"float32"), size=None, scale_factor=list[1.6999999999999997,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([57042535, 10, 4],"float32"), size=None, scale_factor=list[1.6999999999999997,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([57042535, 10, 4],"float32"), size=None, scale_factor=list[1.6999999999999997,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([57042535, 10, 4],"float32"), size=None, scale_factor=list[1.7999999999999998,], mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([57042535, 10, 4],"float32"), size=None, scale_factor=list[1.7999999999999998,], mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([57042535, 10, 4],"float32"), size=None, scale_factor=list[1.7999999999999998,], mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([57042535, 10, 4],"float32"), size=None, scale_factor=list[1.7999999999999998,], mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([57042535, 10, 4],"float32"), size=list[11,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([57042535, 10, 4],"float32"), size=list[11,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([57042535, 10, 4],"float32"), size=list[11,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([57042535, 10, 4],"float32"), size=list[11,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([57042535, 10, 4],"float32"), size=list[14,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([57042535, 10, 4],"float32"), size=list[14,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([57042535, 10, 4],"float32"), size=list[14,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([57042535, 10, 4],"float32"), size=list[14,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([57042535, 10, 4],"float32"), size=list[17,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([57042535, 10, 4],"float32"), size=list[17,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([57042535, 10, 4],"float32"), size=list[17,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([57042535, 10, 4],"float32"), size=list[17,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([57042535, 10, 4],"float32"), size=list[2,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([57042535, 10, 4],"float32"), size=list[2,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([57042535, 10, 4],"float32"), size=list[2,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([57042535, 10, 4],"float32"), size=list[2,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([57042535, 10, 4],"float32"), size=list[5,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([57042535, 10, 4],"float32"), size=list[5,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([57042535, 10, 4],"float32"), size=list[5,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([57042535, 10, 4],"float32"), size=list[5,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([57042535, 10, 4],"float32"), size=list[8,], scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([57042535, 10, 4],"float32"), size=list[8,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([57042535, 10, 4],"float32"), size=list[8,], scale_factor=None, mode="linear", align_corners=True, align_mode=0, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([57042535, 10, 4],"float32"), size=list[8,], scale_factor=None, mode="linear", align_corners=True, align_mode=1, data_format="NWC", name=None, )
paddle.nn.functional.interpolate(Tensor([570426, 4, 10, 10, 10],"float32"), size=None, scale_factor=list[0.6,0.6,0.6,], mode="trilinear", align_corners=False, align_mode=1, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([570426, 4, 10, 10, 10],"float32"), size=None, scale_factor=list[0.6,0.6,0.6,], mode="trilinear", align_corners=True, align_mode=0, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([570426, 4, 10, 10, 10],"float32"), size=list[2,2,2,], scale_factor=None, mode="trilinear", align_corners=False, align_mode=1, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([570426, 4, 10, 10, 10],"float32"), size=list[2,2,2,], scale_factor=None, mode="trilinear", align_corners=True, align_mode=0, data_format="NCDHW", name=None, )
paddle.nn.functional.interpolate(Tensor([57266231, 3, 5, 5],"float16"), size=list[3,3,], mode="bicubic", align_corners=True, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([5941931, 3, 128],"float32"), size=list[64,], mode="linear", align_mode=1, align_corners=False, )
paddle.nn.functional.interpolate(Tensor([5941931, 3, 128],"float32"), size=list[64,], scale_factor=None, mode="linear", align_corners=False, align_mode=1, data_format="NCW", name=None, )
paddle.nn.functional.interpolate(Tensor([7428, 1, 640, 480],"float32"), size=list[10,8,], )
paddle.nn.functional.interpolate(Tensor([8, 64, 20, 419431],"float16"), size=tuple(160,160,), )
paddle.nn.functional.interpolate(Tensor([8, 64, 419431, 20],"float16"), size=tuple(160,160,), )
paddle.nn.functional.interpolate(Tensor([98758, 64, 19, 19],"float32"), size=tuple(10,10,), mode="bicubic", align_corners=True, )
paddle.nn.functional.interpolate(x=Tensor([15521779, 3, 7, 7],"float32"), mode="area", size=list[2,5,], )
paddle.nn.functional.interpolate(x=Tensor([2, 23282668, 7, 7],"float32"), mode="area", size=list[2,5,], )
paddle.nn.functional.interpolate(x=Tensor([2, 3, 5, 10865245, 7],"float32"), mode="area", size=list[2,3,5,], )
paddle.nn.functional.interpolate(x=Tensor([2, 3, 5, 7, 10865245],"float32"), mode="area", size=list[2,3,5,], )
paddle.nn.functional.interpolate(x=Tensor([2, 3, 54326224, 7],"float32"), mode="area", size=list[2,5,], )
paddle.nn.functional.interpolate(x=Tensor([2, 3, 7, 54326224],"float32"), mode="area", size=list[2,5,], )
paddle.nn.functional.interpolate(x=Tensor([2, 3, 7760890, 7, 7],"float32"), mode="area", size=list[2,3,5,], )
paddle.nn.functional.interpolate(x=Tensor([2, 4656534, 5, 7, 7],"float32"), mode="area", size=list[2,3,5,], )
paddle.nn.functional.interpolate(x=Tensor([3104356, 3, 5, 7, 7],"float32"), mode="area", size=list[2,3,5,], )
paddle.nn.functional.kl_div(Tensor([114085069, 20],"float32"), Tensor([114085069, 20],"float64"), "mean", False, )
paddle.nn.functional.kl_div(Tensor([114085069, 20],"float64"), Tensor([114085069, 20],"float32"), )
paddle.nn.functional.kl_div(Tensor([1140850690, 2],"float32"), label=Tensor([1140850690, 2],"float32"), reduction="mean", name=None, )
paddle.nn.functional.kl_div(Tensor([2281702, 20, 50],"float32"), Tensor([2281702, 20, 50],"float32"), "batchmean", False, )
paddle.nn.functional.kl_div(Tensor([2281702, 20, 50],"float32"), Tensor([2281702, 20, 50],"float32"), "batchmean", True, )
paddle.nn.functional.kl_div(Tensor([2281702, 20, 50],"float32"), Tensor([2281702, 20, 50],"float32"), "none", False, )
paddle.nn.functional.kl_div(Tensor([40, 1140851, 50],"float32"), Tensor([40, 1140851, 50],"float32"), "batchmean", False, )
paddle.nn.functional.kl_div(Tensor([40, 1140851, 50],"float32"), Tensor([40, 1140851, 50],"float32"), "batchmean", True, )
paddle.nn.functional.kl_div(Tensor([40, 1140851, 50],"float32"), Tensor([40, 1140851, 50],"float32"), "none", False, )
paddle.nn.functional.kl_div(Tensor([40, 20, 2852127],"float32"), Tensor([40, 20, 2852127],"float32"), "batchmean", False, )
paddle.nn.functional.kl_div(Tensor([40, 20, 2852127],"float32"), Tensor([40, 20, 2852127],"float32"), "batchmean", True, )
paddle.nn.functional.kl_div(Tensor([40, 20, 2852127],"float32"), Tensor([40, 20, 2852127],"float32"), "none", False, )
paddle.nn.functional.kl_div(Tensor([5, 456340276],"float32"), Tensor([5, 456340276],"float64"), "mean", False, )
paddle.nn.functional.kl_div(Tensor([5, 456340276],"float32"), label=Tensor([5, 456340276],"float32"), reduction="mean", name=None, )
paddle.nn.functional.kl_div(Tensor([5, 456340276],"float64"), Tensor([5, 456340276],"float32"), )
paddle.nn.functional.kl_div(input=Tensor([139265, 128, 128],"float32"), label=Tensor([139265, 128, 128],"float32"), reduction="batchmean", )
paddle.nn.functional.kl_div(input=Tensor([32, 128, 557057],"float32"), label=Tensor([32, 128, 557057],"float32"), reduction="batchmean", )
paddle.nn.functional.kl_div(input=Tensor([32, 557057, 128],"float32"), label=Tensor([32, 557057, 128],"float32"), reduction="batchmean", )
paddle.nn.functional.linear(x=Tensor([1, 16, 10316, 36, 384],"float32"), weight=Tensor([384, 192],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([1, 16, 28, 13264, 384],"float32"), weight=Tensor([384, 192],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([1, 16, 28, 36, 141475],"float32"), weight=Tensor([141475, 192],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([1, 16, 56, 56, 45474],"float32"), weight=Tensor([45474, 96],"float32"), bias=Tensor([96],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 16, 56, 6632, 384],"float32"), weight=Tensor([384, 96],"float32"), bias=Tensor([96],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 16, 6632, 56, 384],"float32"), weight=Tensor([384, 96],"float32"), bias=Tensor([96],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 1895, 56, 56, 384],"float32"), weight=Tensor([384, 96],"float32"), bias=Tensor([96],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 207277, 11008],"float32"), weight=Tensor([11008, 4096],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([1, 27648, 82527],"float32"), weight=Tensor([82527, 768],"float32"), bias=Tensor([768],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([1, 4096, 11008],"float32"), weight=Tensor([11008, 207277],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([1, 4096, 557057],"float32"), weight=Tensor([557057, 4096],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([1, 5895, 28, 36, 384],"float32"), weight=Tensor([384, 192],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([100000, 22818],"float32"), weight=Tensor([22818, 40],"float32"), bias=Tensor([40],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([119, 16, 56, 56, 384],"float32"), weight=Tensor([384, 96],"float32"), bias=Tensor([96],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([124, 12, 12, 127784],"float32"), weight=Tensor([127784, 4096],"float32"), bias=Tensor([4096],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([128, 11847],"float32"), weight=Tensor([11847, 192612],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([128, 2, 2, 7, 7, 90948],"float32"), weight=Tensor([90948, 768],"float32"), bias=Tensor([768],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([128, 512],"float32"), weight=Tensor([512, 4456449],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([22817014, 100],"float32"), weight=Tensor([100, 40],"float32"), bias=Tensor([40],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([369, 16, 28, 36, 384],"float32"), weight=Tensor([384, 192],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([51, 4096, 11008],"float32"), weight=Tensor([11008, 4096],"float32"), bias=None, name=None, )
paddle.nn.functional.log_softmax(Tensor([2, 2, 1073741825],"float16"), 0, )
paddle.nn.functional.log_softmax(Tensor([2, 2147483649, 1],"float16"), 0, )
paddle.nn.functional.log_softmax(Tensor([2, 3, 4, 95070891],"float32"), 1, )
paddle.nn.functional.log_softmax(Tensor([2, 3, 4, 95070891],"float32"), 1, None, )
paddle.nn.functional.log_softmax(Tensor([2, 3, 715827883],"float16"), 0, )
paddle.nn.functional.log_softmax(Tensor([2, 3, 715827883],"float16"), 1, )
paddle.nn.functional.log_softmax(Tensor([2, 3, 76056713, 5],"float32"), 1, )
paddle.nn.functional.log_softmax(Tensor([2, 3, 76056713, 5],"float32"), 1, None, )
paddle.nn.functional.log_softmax(Tensor([2, 536870913, 4],"float16"), 0, )
paddle.nn.functional.log_softmax(Tensor([2, 536870913, 4],"float16"), 1, )
paddle.nn.functional.log_softmax(Tensor([2, 57042535, 4, 5],"float32"), 1, )
paddle.nn.functional.log_softmax(Tensor([2, 57042535, 4, 5],"float32"), 1, None, )
paddle.nn.functional.log_softmax(Tensor([2147483649, 2, 1],"float16"), 0, )
paddle.nn.functional.log_softmax(Tensor([357913942, 3, 4],"float16"), 0, )
paddle.nn.functional.log_softmax(Tensor([357913942, 3, 4],"float16"), 1, )
paddle.nn.functional.log_softmax(Tensor([38028357, 3, 4, 5],"float32"), 1, )
paddle.nn.functional.log_softmax(Tensor([38028357, 3, 4, 5],"float32"), 1, None, )
paddle.nn.functional.log_softmax(Tensor([5, 3, 2, 76056713],"float32"), 1, )
paddle.nn.functional.log_softmax(Tensor([5, 3, 38028357, 4],"float32"), 1, )
paddle.nn.functional.log_softmax(Tensor([5, 57042535, 2, 4],"float32"), 1, )
paddle.nn.functional.log_softmax(Tensor([95070891, 3, 2, 4],"float32"), 1, )
paddle.nn.functional.log_softmax(x=Tensor([2, 2, 1073741825],"float16"), axis=0, )
paddle.nn.functional.log_softmax(x=Tensor([2, 2147483649, 1],"float16"), axis=0, )
paddle.nn.functional.log_softmax(x=Tensor([2, 3, 715827883],"float16"), axis=0, )
paddle.nn.functional.log_softmax(x=Tensor([2, 3, 715827883],"float16"), axis=1, )
paddle.nn.functional.log_softmax(x=Tensor([2, 536870913, 4],"float16"), axis=0, )
paddle.nn.functional.log_softmax(x=Tensor([2, 536870913, 4],"float16"), axis=1, )
paddle.nn.functional.log_softmax(x=Tensor([2147483649, 2, 1],"float16"), axis=0, )
paddle.nn.functional.log_softmax(x=Tensor([357913942, 3, 4],"float16"), axis=0, )
paddle.nn.functional.log_softmax(x=Tensor([357913942, 3, 4],"float16"), axis=1, )
paddle.nn.functional.max_pool1d(Tensor([2, 3, 715827883],"float16"), 2, 1, list[1,1,], False, False, None, )
paddle.nn.functional.max_pool1d(x=Tensor([2, 3, 715827883],"float16"), kernel_size=2, stride=1, padding=list[1,1,], )
paddle.nn.functional.max_pool2d(Tensor([1, 15474, 384, 384],"float32"), kernel_size=2, stride=1, padding="SAME", return_mask=False, ceil_mode=True, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 16849, 368, 368],"float32"), kernel_size=2, stride=1, padding="SAME", return_mask=False, ceil_mode=True, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 24, 247581, 384],"float32"), kernel_size=2, stride=1, padding="SAME", return_mask=False, ceil_mode=True, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 24, 258345, 368],"float32"), kernel_size=2, stride=1, padding="SAME", return_mask=False, ceil_mode=True, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 24, 368, 258345],"float32"), kernel_size=2, stride=1, padding="SAME", return_mask=False, ceil_mode=True, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 24, 384, 247581],"float32"), kernel_size=2, stride=1, padding="SAME", return_mask=False, ceil_mode=True, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 32, 193759, 368],"float32"), kernel_size=2, stride=1, padding="SAME", return_mask=False, ceil_mode=True, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([1, 32, 368, 193759],"float32"), kernel_size=2, stride=1, padding="SAME", return_mask=False, ceil_mode=True, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([132365, 192, 13, 13],"float16"), kernel_size=13, stride=1, padding=6, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([16, 1369569, 14, 14],"float16"), kernel_size=13, stride=1, padding=6, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([16, 1864136, 12, 12],"float16"), kernel_size=13, stride=1, padding=6, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([16, 384, 12, 58255],"float16"), kernel_size=13, stride=1, padding=6, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([16, 384, 14, 49933],"float16"), kernel_size=13, stride=1, padding=6, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([16, 384, 20, 34953],"float16"), kernel_size=9, stride=1, padding=4, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([16, 384, 34953, 20],"float16"), kernel_size=9, stride=1, padding=4, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([16, 384, 49933, 14],"float16"), kernel_size=13, stride=1, padding=6, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([16, 384, 58255, 12],"float16"), kernel_size=13, stride=1, padding=6, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([16, 671089, 20, 20],"float16"), kernel_size=9, stride=1, padding=4, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([27963, 384, 20, 20],"float16"), kernel_size=9, stride=1, padding=4, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([527, 32, 368, 368],"float32"), kernel_size=2, stride=1, padding="SAME", return_mask=False, ceil_mode=True, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([57066, 384, 14, 14],"float16"), kernel_size=13, stride=1, padding=6, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([645, 24, 384, 384],"float32"), kernel_size=2, stride=1, padding="SAME", return_mask=False, ceil_mode=True, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([703, 24, 368, 368],"float32"), kernel_size=2, stride=1, padding="SAME", return_mask=False, ceil_mode=True, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([77673, 384, 12, 12],"float16"), kernel_size=13, stride=1, padding=6, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([8, 192, 13, 215093],"float16"), kernel_size=13, stride=1, padding=6, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([8, 192, 215093, 13],"float16"), kernel_size=13, stride=1, padding=6, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool2d(Tensor([8, 3176751, 13, 13],"float16"), kernel_size=13, stride=1, padding=6, return_mask=False, ceil_mode=False, data_format="NCHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 11184811, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,2,1,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 8, 11184811, 8],"float16"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,2,1,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 3, 8, 8, 11184811],"float16"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,2,1,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2, 4194305, 8, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,2,1,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(Tensor([2796203, 3, 8, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,2,1,], return_mask=False, ceil_mode=False, data_format="NCDHW", name=None, )
paddle.nn.functional.max_pool3d(x=Tensor([2, 3, 11184811, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,2,1,], )
paddle.nn.functional.max_pool3d(x=Tensor([2, 3, 8, 11184811, 8],"float16"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,2,1,], )
paddle.nn.functional.max_pool3d(x=Tensor([2, 3, 8, 8, 11184811],"float16"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,2,1,], )
paddle.nn.functional.max_pool3d(x=Tensor([2, 4194305, 8, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,2,1,], )
paddle.nn.functional.max_pool3d(x=Tensor([2796203, 3, 8, 8, 8],"float16"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,2,1,], )
paddle.nn.functional.multi_margin_loss(Tensor([2147483649, 2],"float16"), Tensor([2147483649],"int64"), p=1, margin=1.0, weight=Tensor([2],"float16"), reduction="mean", name=None, )
paddle.nn.functional.multi_margin_loss(Tensor([2281701379, 2],"float64"), Tensor([2281701379],"int64"), p=1, margin=1.0, weight=Tensor([2],"float64"), reduction="mean", name=None, )
paddle.nn.functional.multi_margin_loss(Tensor([5, 858993460],"float16"), Tensor([5],"int64"), p=1, margin=1.0, weight=Tensor([858993460],"float16"), reduction="mean", name=None, )
paddle.nn.functional.multi_margin_loss(input=Tensor([2147483649, 2],"float16"), label=Tensor([2147483649],"int64"), p=1, margin=1.0, weight=Tensor([2],"float16"), reduction="mean", )
paddle.nn.functional.multi_margin_loss(input=Tensor([2281701379, 2],"float64"), label=Tensor([2281701379],"int64"), p=1, margin=1.0, weight=Tensor([2],"float64"), reduction="mean", )
paddle.nn.functional.multi_margin_loss(input=Tensor([5, 858993460],"float16"), label=Tensor([5],"int64"), p=1, margin=1.0, weight=Tensor([858993460],"float16"), reduction="mean", )
paddle.nn.functional.rrelu(Tensor([1, 2, 3, 715827883],"float16"), lower=0.05, upper=0.25, training=True, )
paddle.nn.functional.rrelu(Tensor([1, 2, 536870913, 4],"float16"), lower=0.05, upper=0.25, training=True, )
paddle.nn.functional.rrelu(Tensor([1, 357913942, 3, 4],"float16"), lower=0.05, upper=0.25, training=True, )
paddle.nn.functional.rrelu(Tensor([178956971, 2, 3, 4],"float16"), lower=0.05, upper=0.25, training=True, )
paddle.nn.functional.softmax_with_cross_entropy(Tensor([2, 16, 1114113, 64],"float32"), Tensor([2, 1, 1114113, 64],"int64"), axis=1, )
paddle.nn.functional.softmax_with_cross_entropy(Tensor([2, 16, 32, 2228225],"float32"), Tensor([2, 1, 32, 2228225],"int64"), axis=1, )
paddle.nn.functional.softmax_with_cross_entropy(Tensor([2, 557057, 32, 64],"float32"), Tensor([2, 1, 32, 64],"int64"), axis=1, )
paddle.nn.functional.softmax_with_cross_entropy(Tensor([69633, 16, 32, 64],"float32"), Tensor([69633, 1, 32, 64],"int64"), axis=1, )
paddle.nn.functional.temporal_shift(x=Tensor([119304648, 4, 3, 3],"float16"), seg_num=2, shift_ratio=0.4, )
paddle.nn.functional.temporal_shift(x=Tensor([2, 178956971, 4, 3],"float16"), seg_num=2, )
paddle.nn.functional.temporal_shift(x=Tensor([2, 2, 190141782, 3],"float32"), seg_num=2, )
paddle.nn.functional.temporal_shift(x=Tensor([2, 2, 357913942, 3],"float16"), seg_num=2, )
paddle.nn.functional.temporal_shift(x=Tensor([2, 2, 4, 142606337],"float32"), seg_num=2, )
paddle.nn.functional.temporal_shift(x=Tensor([2, 2, 4, 268435457],"float16"), seg_num=2, )
paddle.nn.functional.temporal_shift(x=Tensor([2, 238609295, 3, 3],"float16"), seg_num=2, shift_ratio=0.4, )
paddle.nn.functional.temporal_shift(x=Tensor([2, 4, 178956971, 3],"float16"), seg_num=2, shift_ratio=0.4, )
paddle.nn.functional.temporal_shift(x=Tensor([2, 4, 3, 178956971],"float16"), seg_num=2, shift_ratio=0.4, )
paddle.nn.functional.temporal_shift(x=Tensor([2, 95070891, 4, 3],"float32"), seg_num=2, )
paddle.nn.functional.temporal_shift(x=Tensor([6, 4, 2, 47535446],"float32"), seg_num=2, shift_ratio=0.2, )
paddle.nn.functional.temporal_shift(x=Tensor([6, 4, 47535446, 2],"float32"), seg_num=2, shift_ratio=0.2, )
paddle.nn.functional.temporal_shift(x=Tensor([6, 95070891, 2, 2],"float32"), seg_num=2, shift_ratio=0.2, )
paddle.nn.functional.upsample(Tensor([24, 96, 16, 61896],"float32"), size=list[31,31,], mode="nearest", )
paddle.nn.functional.upsample(Tensor([24, 96, 16235, 61],"float32"), size=list[122,122,], mode="nearest", )
paddle.nn.functional.upsample(Tensor([24, 96, 31, 31946],"float32"), size=list[61,61,], mode="nearest", )
paddle.nn.functional.upsample(Tensor([24, 96, 31946, 31],"float32"), size=list[61,61,], mode="nearest", )
paddle.nn.functional.upsample(Tensor([24, 96, 61, 16235],"float32"), size=list[122,122,], mode="nearest", )
paddle.nn.functional.upsample(Tensor([24, 96, 61896, 16],"float32"), size=list[31,31,], mode="nearest", )
paddle.nn.functional.upsample(Tensor([4, 48, 297097, 40],"float32"), size=list[80,80,], mode="nearest", )
paddle.nn.functional.upsample(Tensor([4, 48, 40, 297097],"float32"), size=list[80,80,], mode="nearest", )
paddle.nn.functional.upsample(Tensor([64, 96, 11460, 61],"float16"), size=list[122,122,], mode="nearest", )
paddle.nn.functional.upsample(Tensor([64, 96, 16, 43691],"float16"), size=list[31,31,], mode="nearest", )
paddle.nn.functional.upsample(Tensor([64, 96, 22551, 31],"float16"), size=list[61,61,], mode="nearest", )
paddle.nn.functional.upsample(Tensor([64, 96, 31, 22551],"float16"), size=list[61,61,], mode="nearest", )
paddle.nn.functional.upsample(Tensor([64, 96, 43691, 16],"float16"), size=list[31,31,], mode="nearest", )
paddle.nn.functional.upsample(Tensor([64, 96, 61, 11460],"float16"), size=list[122,122,], mode="nearest", )
paddle.nn.functional.upsample(x=Tensor([1, 1073741825, 2, 2, 1],"float16"), size=Tensor([3],"float16"), scale_factor=None, mode="trilinear", align_corners=True, align_mode=1, data_format="NDHWC", )
paddle.nn.functional.upsample(x=Tensor([1, 2, 1073741825, 2, 1],"float16"), size=Tensor([3],"float16"), scale_factor=None, mode="trilinear", align_corners=True, align_mode=1, data_format="NDHWC", )
paddle.nn.functional.upsample(x=Tensor([1, 2, 2, 1073741825, 1],"float16"), size=Tensor([3],"float16"), scale_factor=None, mode="trilinear", align_corners=True, align_mode=1, data_format="NDHWC", )
paddle.nn.functional.upsample(x=Tensor([1, 2, 2147483649, 1],"float16"), size=Tensor([2],"float16"), scale_factor=None, mode="bicubic", align_corners=False, align_mode=0, data_format="NHWC", )
paddle.nn.functional.upsample(x=Tensor([1, 2, 2147483649, 1],"float16"), size=Tensor([2],"float16"), scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", )
paddle.nn.functional.upsample(x=Tensor([1, 2, 2147483649],"float16"), size=Tensor([1],"float16"), scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", )
paddle.nn.functional.upsample(x=Tensor([1, 2147483649, 2, 1],"float16"), size=Tensor([2],"float16"), scale_factor=None, mode="bicubic", align_corners=False, align_mode=0, data_format="NHWC", )
paddle.nn.functional.upsample(x=Tensor([1, 2147483649, 2, 1],"float16"), size=Tensor([2],"float16"), scale_factor=None, mode="bilinear", align_corners=True, align_mode=1, data_format="NHWC", )
paddle.nn.functional.upsample(x=Tensor([1, 4294967297, 1],"float16"), size=Tensor([1],"float16"), scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", )
paddle.nn.functional.upsample(x=Tensor([2, 1, 285212673, 4],"float32"), size=Tensor([2],"float32"), scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", )
paddle.nn.functional.upsample(x=Tensor([2, 1, 4, 285212673],"float32"), size=Tensor([2],"float32"), scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", )
paddle.nn.functional.upsample(x=Tensor([2, 1, 4, 536870913],"float16"), size=Tensor([2],"float16"), scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", )
paddle.nn.functional.upsample(x=Tensor([2, 1, 536870913, 4],"float16"), size=Tensor([2],"float16"), scale_factor=None, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", )
paddle.nn.functional.upsample(x=Tensor([2147483649, 2, 1],"float16"), size=Tensor([1],"float16"), scale_factor=None, mode="linear", align_corners=False, align_mode=0, data_format="NWC", )
paddle.outer(Tensor([22817014, 10, 10],"int32"), Tensor([2, 10],"int32"), )
paddle.outer(Tensor([5, 10, 10],"int32"), Tensor([2, 1140850690],"int32"), )
paddle.outer(Tensor([5, 10, 10],"int32"), Tensor([228170138, 10],"int32"), )
paddle.outer(Tensor([5, 10, 45634028],"int32"), Tensor([2, 10],"int32"), )
paddle.outer(Tensor([5, 45634028, 10],"int32"), Tensor([2, 10],"int32"), )
paddle.pow(Tensor([2281701379],"int32"), Tensor([2281701379],"int32"), )
paddle.pow(x=Tensor([2, 2, 570425345],"int32"), y=Tensor([2, 2, 570425345],"int32"), )
paddle.pow(x=Tensor([2, 570425345, 2],"int32"), y=Tensor([2, 570425345, 2],"int32"), )
paddle.pow(x=Tensor([570425345, 2, 2],"int32"), y=Tensor([570425345, 2, 2],"int32"), )
paddle.prod(Tensor([3, 760567127],"float32"), keepdim=True, )
paddle.prod(Tensor([456340276, 5],"float32"), keepdim=True, )
paddle.put_along_axis(Tensor([64, 35651585],"float32"), Tensor([64, 1327104],"int64"), Tensor([64, 1327104],"float32"), 1, )
paddle.scale(Tensor([2, 3, 12676119, 5, 6],"float32"), scale=Tensor([1],"float32"), )
paddle.scale(Tensor([2, 3, 4, 15845149, 6],"float32"), scale=Tensor([1],"float32"), )
paddle.scale(Tensor([2, 3, 4, 5, 19014179],"float32"), scale=Tensor([1],"float32"), )
paddle.scale(Tensor([2, 9507090, 4, 5, 6],"float32"), scale=Tensor([1],"float32"), )
paddle.scale(Tensor([6338060, 3, 4, 5, 6],"float32"), scale=Tensor([1],"float32"), )
paddle.scatter(Tensor([183826, 213],"float32"), Tensor([10759233],"int64"), Tensor([10759233, 213],"float32"), )
paddle.scatter(Tensor([183826, 256],"float32"), Tensor([10759233],"int64"), Tensor([10759233, 213],"float32"), )
paddle.scatter(Tensor([183826, 256],"float32"), Tensor([8912897],"int64"), Tensor([8912897, 256],"float32"), )
paddle.scatter(Tensor([8912897, 256],"float32"), Tensor([10759233],"int64"), Tensor([10759233, 256],"float32"), )
paddle.slice(Tensor([1, 11, 390451573],"float16"), axes=list[1,], starts=list[Tensor([1],"int32"),], ends=list[Tensor([1],"int32"),], )
paddle.slice(Tensor([76056713, 5, 6],"float32"), axes=list[0,1,2,], starts=Tensor([3],"int32"), ends=Tensor([3],"int32"), )
paddle.tensordot(Tensor([142606337, 4, 4],"float32"), Tensor([4, 4, 5],"float32"), list[Tensor([2],"int64"),Tensor([2],"int64"),], )
paddle.tensordot(Tensor([3, 4, 4],"float32"), Tensor([4, 4, 142606337],"float32"), list[Tensor([2],"int64"),Tensor([2],"int64"),], )
paddle.tensordot(Tensor([3, 4, 4],"float32"), Tensor([4, 4, 5],"float32"), list[Tensor([2],"int64"),Tensor([2281701379],"int64"),], )
paddle.topk(Tensor([1, 101, 22591103],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([1, 102, 22369622],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([1, 105, 21730490],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([1, 107, 21324312],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([1, 14, 162978670],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([1, 30182, 75600],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([1, 323371, 7056],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([1, 34647, 65856],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([1, 56123, 40656],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([1, 61595, 37044],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([1, 93991, 24276],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([1022, 2232585],"float32"), 10, axis=0, )
paddle.topk(Tensor([10612565, 215],"float32"), 10, axis=0, )
paddle.topk(Tensor([10737419, 400],"float16"), k=5, )
paddle.topk(Tensor([12906, 176794],"float32"), 10, axis=0, )
paddle.topk(Tensor([1302, 1752459],"float32"), 10, axis=0, )
paddle.topk(Tensor([14, 306783379],"float16"), k=5, )
paddle.topk(Tensor([14877, 153372],"float32"), 10, axis=0, )
paddle.topk(Tensor([1490, 1531344],"float32"), 10, axis=0, )
paddle.topk(Tensor([15548, 146753],"float32"), k=3, largest=True, )
paddle.topk(Tensor([16, 10, 14260634],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([16, 13, 10969719],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([16, 14, 10186167],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([16, 15474, 9216],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([16, 24690, 5776],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([16, 268435457],"float16"), k=5, )
paddle.topk(Tensor([16, 39613, 3600],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([16, 73661, 1936],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([162978670, 14],"float32"), 10, axis=0, )
paddle.topk(Tensor([1680193, 1358],"float32"), k=3, largest=True, )
paddle.topk(Tensor([23098, 14, 7056],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([24759, 10, 9216],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([26736, 85342],"float32"), k=3, largest=True, )
paddle.topk(Tensor([28217, 14, 5776],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([288, 105, 75600],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([32, 134217729],"float16"), k=5, )
paddle.topk(Tensor([325957340, 7],"float32"), 10, axis=0, )
paddle.topk(Tensor([340, 102, 65856],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([48755, 13, 3600],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([5432623, 420],"float32"), 10, axis=0, )
paddle.topk(Tensor([556, 101, 40656],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([604, 102, 37044],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([6684, 341368],"float32"), k=3, largest=True, )
paddle.topk(Tensor([753286, 3029],"float32"), k=3, largest=True, )
paddle.topk(Tensor([84184, 14, 1936],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([879, 107, 24276],"float32"), 13, axis=-1, largest=True, )
paddle.trace(x=Tensor([2, 1073741825, 2],"float16"), offset=-1, axis1=2, axis2=-2, )
paddle.trace(x=Tensor([2, 3, 715827883],"float16"), offset=-1, axis1=2, axis2=-2, )
paddle.trace(x=Tensor([715827883, 3, 2],"float16"), offset=-1, axis1=2, axis2=-2, )
paddle.vision.ops.deform_conv2d(x=Tensor([1014090, 5, 5, 5],"float32"), offset=Tensor([1014090, 90, 5, 5],"float32"), mask=Tensor([1014090, 45, 5, 5],"float32"), weight=Tensor([5, 5, 3, 3],"float32"), bias=Tensor([5],"float32"), stride=list[1,1,], padding=list[1,1,], dilation=list[1,1,], deformable_groups=5, groups=1, )
paddle.vision.ops.deform_conv2d(x=Tensor([14084577, 2, 5, 5],"float32"), offset=Tensor([14084577, 18, 3, 3],"float32"), mask=Tensor([14084577, 9, 3, 3],"float32"), weight=Tensor([5, 2, 3, 3],"float32"), bias=None, stride=list[1,1,], padding=list[0,0,], dilation=list[1,1,], deformable_groups=1, groups=1, )
paddle.vision.ops.deform_conv2d(x=Tensor([14084577, 3, 5, 5],"float32"), offset=Tensor([14084577, 18, 3, 3],"float32"), mask=Tensor([14084577, 9, 3, 3],"float32"), weight=Tensor([5, 3, 3, 3],"float32"), bias=Tensor([5],"float32"), stride=list[2,2,], padding=list[1,1,], dilation=list[1,1,], deformable_groups=1, groups=1, )
paddle.vision.ops.deform_conv2d(x=Tensor([18253612, 5, 5, 5],"float32"), offset=Tensor([4, 18, 5, 5],"float32"), mask=Tensor([4, 9, 5, 5],"float32"), weight=Tensor([5, 1, 3, 3],"float32"), bias=Tensor([5],"float32"), stride=list[1,1,], padding=list[1,1,], dilation=list[1,1,], deformable_groups=1, groups=5, )
paddle.vision.ops.deform_conv2d(x=Tensor([18253612, 5, 5, 5],"float32"), offset=Tensor([4, 90, 5, 5],"float32"), mask=Tensor([4, 45, 5, 5],"float32"), weight=Tensor([5, 5, 3, 3],"float32"), bias=Tensor([5],"float32"), stride=list[1,1,], padding=list[1,1,], dilation=list[1,1,], deformable_groups=5, groups=1, )
paddle.vision.ops.deform_conv2d(x=Tensor([20, 64, 152, 272],"float32"), offset=Tensor([20, 18, 152, 272],"float32"), weight=Tensor([64, 64, 3, 3],"float32"), bias=Tensor([64],"float32"), stride=list[1,1,], padding=list[1,1,], dilation=list[1,1,], deformable_groups=1, groups=1, mask=Tensor([6133, 9, 152, 272],"float32"), )
paddle.vision.ops.deform_conv2d(x=Tensor([20, 64, 152, 272],"float32"), offset=Tensor([3067, 18, 152, 272],"float32"), weight=Tensor([64, 64, 3, 3],"float32"), bias=Tensor([64],"float32"), stride=list[1,1,], padding=list[1,1,], dilation=list[1,1,], deformable_groups=1, groups=1, mask=Tensor([20, 9, 152, 272],"float32"), )
paddle.vision.ops.deform_conv2d(x=Tensor([2586964, 3, 5, 5],"float32"), offset=Tensor([2586964, 18, 7, 7],"float32"), mask=Tensor([2586964, 9, 7, 7],"float32"), weight=Tensor([5, 3, 3, 3],"float32"), bias=None, stride=list[1,1,], padding=list[2,2,], dilation=list[1,1,], deformable_groups=1, groups=1, )
paddle.vision.ops.deform_conv2d(x=Tensor([2586964, 3, 5, 5],"float32"), offset=Tensor([2586964, 18, 7, 7],"float32"), mask=Tensor([2586964, 9, 7, 7],"float32"), weight=Tensor([5, 3, 3, 3],"float32"), bias=Tensor([5],"float32"), stride=list[1,1,], padding=list[2,2,], dilation=list[1,1,], deformable_groups=1, groups=1, )
paddle.vision.ops.deform_conv2d(x=Tensor([30422686, 3, 5, 5],"float32"), offset=Tensor([30422686, 18, 1, 1],"float32"), mask=Tensor([30422686, 9, 1, 1],"float32"), weight=Tensor([5, 3, 3, 3],"float32"), bias=Tensor([5],"float32"), stride=list[1,1,], padding=list[1,1,], dilation=list[3,3,], deformable_groups=1, groups=1, )
paddle.vision.ops.deform_conv2d(x=Tensor([30422686, 3, 5, 5],"float32"), offset=Tensor([4, 18, 1, 1],"float32"), mask=Tensor([4, 9, 1, 1],"float32"), weight=Tensor([5, 3, 3, 3],"float32"), bias=Tensor([5],"float32"), stride=list[1,1,], padding=list[1,1,], dilation=list[3,3,], deformable_groups=1, groups=1, )
paddle.vision.ops.deform_conv2d(x=Tensor([30422686, 3, 5, 5],"float32"), offset=Tensor([4, 18, 3, 3],"float32"), mask=Tensor([4, 9, 3, 3],"float32"), weight=Tensor([5, 3, 3, 3],"float32"), bias=Tensor([5],"float32"), stride=list[2,2,], padding=list[1,1,], dilation=list[1,1,], deformable_groups=1, groups=1, )
paddle.vision.ops.deform_conv2d(x=Tensor([30422686, 3, 5, 5],"float32"), offset=Tensor([4, 18, 5, 7],"float32"), mask=Tensor([4, 9, 5, 7],"float32"), weight=Tensor([5, 3, 3, 3],"float32"), bias=Tensor([5],"float32"), stride=list[1,1,], padding=list[1,2,], dilation=list[1,1,], deformable_groups=1, groups=1, )
paddle.vision.ops.deform_conv2d(x=Tensor([30422686, 3, 5, 5],"float32"), offset=Tensor([4, 18, 7, 7],"float32"), mask=Tensor([4, 9, 7, 7],"float32"), weight=Tensor([5, 3, 3, 3],"float32"), bias=None, stride=list[1,1,], padding=list[2,2,], dilation=list[1,1,], deformable_groups=1, groups=1, )
paddle.vision.ops.deform_conv2d(x=Tensor([30422686, 3, 5, 5],"float32"), offset=Tensor([4, 18, 7, 7],"float32"), mask=Tensor([4, 9, 7, 7],"float32"), weight=Tensor([5, 3, 3, 3],"float32"), bias=Tensor([5],"float32"), stride=list[1,1,], padding=list[2,2,], dilation=list[1,1,], deformable_groups=1, groups=1, )
paddle.vision.ops.deform_conv2d(x=Tensor([3621749, 3, 5, 5],"float32"), offset=Tensor([3621749, 18, 5, 7],"float32"), mask=Tensor([3621749, 9, 5, 7],"float32"), weight=Tensor([5, 3, 3, 3],"float32"), bias=Tensor([5],"float32"), stride=list[1,1,], padding=list[1,2,], dilation=list[1,1,], deformable_groups=1, groups=1, )
paddle.vision.ops.deform_conv2d(x=Tensor([4, 2, 5, 5],"float32"), offset=Tensor([14084577, 18, 3, 3],"float32"), mask=Tensor([4, 9, 3, 3],"float32"), weight=Tensor([5, 2, 3, 3],"float32"), bias=None, stride=list[1,1,], padding=list[0,0,], dilation=list[1,1,], deformable_groups=1, groups=1, )
paddle.vision.ops.deform_conv2d(x=Tensor([4, 2, 5, 5],"float32"), offset=Tensor([4, 18, 3, 3],"float32"), mask=Tensor([28169153, 9, 3, 3],"float32"), weight=Tensor([5, 2, 3, 3],"float32"), bias=None, stride=list[1,1,], padding=list[0,0,], dilation=list[1,1,], deformable_groups=1, groups=1, )
paddle.vision.ops.deform_conv2d(x=Tensor([4, 22817014, 5, 5],"float32"), offset=Tensor([4, 18, 3, 3],"float32"), mask=Tensor([4, 9, 3, 3],"float32"), weight=Tensor([5, 22817014, 3, 3],"float32"), bias=None, stride=list[1,1,], padding=list[0,0,], dilation=list[1,1,], deformable_groups=1, groups=1, )
paddle.vision.ops.deform_conv2d(x=Tensor([4, 3, 5, 5],"float32"), offset=Tensor([126761188, 18, 1, 1],"float32"), mask=Tensor([4, 9, 1, 1],"float32"), weight=Tensor([5, 3, 3, 3],"float32"), bias=Tensor([5],"float32"), stride=list[1,1,], padding=list[1,1,], dilation=list[3,3,], deformable_groups=1, groups=1, )
paddle.vision.ops.deform_conv2d(x=Tensor([4, 3, 5, 5],"float32"), offset=Tensor([14084577, 18, 3, 3],"float32"), mask=Tensor([4, 9, 3, 3],"float32"), weight=Tensor([5, 3, 3, 3],"float32"), bias=Tensor([5],"float32"), stride=list[2,2,], padding=list[1,1,], dilation=list[1,1,], deformable_groups=1, groups=1, )
paddle.vision.ops.deform_conv2d(x=Tensor([4, 3, 5, 5],"float32"), offset=Tensor([2586964, 18, 7, 7],"float32"), mask=Tensor([4, 9, 7, 7],"float32"), weight=Tensor([5, 3, 3, 3],"float32"), bias=None, stride=list[1,1,], padding=list[2,2,], dilation=list[1,1,], deformable_groups=1, groups=1, )
paddle.vision.ops.deform_conv2d(x=Tensor([4, 3, 5, 5],"float32"), offset=Tensor([2586964, 18, 7, 7],"float32"), mask=Tensor([4, 9, 7, 7],"float32"), weight=Tensor([5, 3, 3, 3],"float32"), bias=Tensor([5],"float32"), stride=list[1,1,], padding=list[2,2,], dilation=list[1,1,], deformable_groups=1, groups=1, )
paddle.vision.ops.deform_conv2d(x=Tensor([4, 3, 5, 5],"float32"), offset=Tensor([3621749, 18, 5, 7],"float32"), mask=Tensor([4, 9, 5, 7],"float32"), weight=Tensor([5, 3, 3, 3],"float32"), bias=Tensor([5],"float32"), stride=list[1,1,], padding=list[1,2,], dilation=list[1,1,], deformable_groups=1, groups=1, )
paddle.vision.ops.deform_conv2d(x=Tensor([4, 3, 5, 5],"float32"), offset=Tensor([4, 18, 1, 1],"float32"), mask=Tensor([253522376, 9, 1, 1],"float32"), weight=Tensor([5, 3, 3, 3],"float32"), bias=Tensor([5],"float32"), stride=list[1,1,], padding=list[1,1,], dilation=list[3,3,], deformable_groups=1, groups=1, )
paddle.vision.ops.deform_conv2d(x=Tensor([4, 3, 5, 5],"float32"), offset=Tensor([4, 18, 3, 3],"float32"), mask=Tensor([28169153, 9, 3, 3],"float32"), weight=Tensor([5, 3, 3, 3],"float32"), bias=Tensor([5],"float32"), stride=list[2,2,], padding=list[1,1,], dilation=list[1,1,], deformable_groups=1, groups=1, )
paddle.vision.ops.deform_conv2d(x=Tensor([4, 3, 5, 5],"float32"), offset=Tensor([4, 18, 5, 7],"float32"), mask=Tensor([7243497, 9, 5, 7],"float32"), weight=Tensor([5, 3, 3, 3],"float32"), bias=Tensor([5],"float32"), stride=list[1,1,], padding=list[1,2,], dilation=list[1,1,], deformable_groups=1, groups=1, )
paddle.vision.ops.deform_conv2d(x=Tensor([4, 3, 5, 5],"float32"), offset=Tensor([4, 18, 7, 7],"float32"), mask=Tensor([5173927, 9, 7, 7],"float32"), weight=Tensor([5, 3, 3, 3],"float32"), bias=None, stride=list[1,1,], padding=list[2,2,], dilation=list[1,1,], deformable_groups=1, groups=1, )
paddle.vision.ops.deform_conv2d(x=Tensor([4, 3, 5, 5],"float32"), offset=Tensor([4, 18, 7, 7],"float32"), mask=Tensor([5173927, 9, 7, 7],"float32"), weight=Tensor([5, 3, 3, 3],"float32"), bias=Tensor([5],"float32"), stride=list[1,1,], padding=list[2,2,], dilation=list[1,1,], deformable_groups=1, groups=1, )
paddle.vision.ops.deform_conv2d(x=Tensor([4, 5, 5, 5],"float32"), offset=Tensor([1014090, 90, 5, 5],"float32"), mask=Tensor([4, 45, 5, 5],"float32"), weight=Tensor([5, 5, 3, 3],"float32"), bias=Tensor([5],"float32"), stride=list[1,1,], padding=list[1,1,], dilation=list[1,1,], deformable_groups=5, groups=1, )
paddle.vision.ops.deform_conv2d(x=Tensor([4, 5, 5, 5],"float32"), offset=Tensor([4, 18, 5, 5],"float32"), mask=Tensor([10140896, 9, 5, 5],"float32"), weight=Tensor([5, 1, 3, 3],"float32"), bias=Tensor([5],"float32"), stride=list[1,1,], padding=list[1,1,], dilation=list[1,1,], deformable_groups=1, groups=5, )
paddle.vision.ops.deform_conv2d(x=Tensor([4, 5, 5, 5],"float32"), offset=Tensor([4, 90, 5, 5],"float32"), mask=Tensor([2028180, 45, 5, 5],"float32"), weight=Tensor([5, 5, 3, 3],"float32"), bias=Tensor([5],"float32"), stride=list[1,1,], padding=list[1,1,], dilation=list[1,1,], deformable_groups=5, groups=1, )
paddle.vision.ops.deform_conv2d(x=Tensor([4, 5, 5, 5],"float32"), offset=Tensor([5070448, 18, 5, 5],"float32"), mask=Tensor([4, 9, 5, 5],"float32"), weight=Tensor([5, 1, 3, 3],"float32"), bias=Tensor([5],"float32"), stride=list[1,1,], padding=list[1,1,], dilation=list[1,1,], deformable_groups=1, groups=5, )
paddle.vision.ops.deform_conv2d(x=Tensor([45634028, 2, 5, 5],"float32"), offset=Tensor([4, 18, 3, 3],"float32"), mask=Tensor([4, 9, 3, 3],"float32"), weight=Tensor([5, 2, 3, 3],"float32"), bias=None, stride=list[1,1,], padding=list[0,0,], dilation=list[1,1,], deformable_groups=1, groups=1, )
paddle.vision.ops.deform_conv2d(x=Tensor([5070448, 5, 5, 5],"float32"), offset=Tensor([5070448, 18, 5, 5],"float32"), mask=Tensor([5070448, 9, 5, 5],"float32"), weight=Tensor([5, 1, 3, 3],"float32"), bias=Tensor([5],"float32"), stride=list[1,1,], padding=list[1,1,], dilation=list[1,1,], deformable_groups=1, groups=5, )
paddle.vision.ops.deform_conv2d(x=Tensor([863, 64, 152, 272],"float32"), offset=Tensor([20, 18, 152, 272],"float32"), weight=Tensor([64, 64, 3, 3],"float32"), bias=Tensor([64],"float32"), stride=list[1,1,], padding=list[1,1,], dilation=list[1,1,], deformable_groups=1, groups=1, mask=Tensor([20, 9, 152, 272],"float32"), )
paddle.vision.ops.deform_conv2d(x=Tensor([863, 64, 152, 272],"float32"), offset=Tensor([863, 18, 152, 272],"float32"), weight=Tensor([64, 64, 3, 3],"float32"), bias=Tensor([64],"float32"), stride=list[1,1,], padding=list[1,1,], dilation=list[1,1,], deformable_groups=1, groups=1, mask=Tensor([863, 9, 152, 272],"float32"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([1, 2281701379],"float32"), 2, 5, 4, 224, rois_num=Tensor([1],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([10, 228170138],"float32"), 2, 5, 4, 224, rois_num=Tensor([1],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([1024, 2228225],"float32"), 2, 5, 4, 224, rois_num=Tensor([2],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([106, 21525485],"float32"), 2, 5, 4, 224, rois_num=Tensor([4],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([11, 207427399],"float32"), 2, 5, 4, 224, rois_num=Tensor([1],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(Tensor([512, 4456449],"float32"), 2, 6, 4, 224, rois_num=Tensor([1],"int64"), )
paddle.vision.ops.distribute_fpn_proposals(fpn_rois=Tensor([10, 228170138],"float32"), min_level=2, max_level=5, refer_level=4, refer_scale=224, rois_num=Tensor([2],"int32"), )
