paddle.vision.ops.generate_proposals(Tensor([1, 15, 42, 63],"float16"), Tensor([1, 60, 42, 63],"float16"), Tensor([1, 2],"float32"), Tensor([39690, 4],"float32"), Tensor([39690, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 42, 64],"float16"), Tensor([1, 60, 42, 64],"float16"), Tensor([1, 2],"float32"), Tensor([40320, 4],"float32"), Tensor([40320, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 44, 59],"float16"), Tensor([1, 60, 44, 59],"float16"), Tensor([1, 2],"float32"), Tensor([38940, 4],"float32"), Tensor([38940, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 44, 66],"float16"), Tensor([1, 60, 44, 66],"float16"), Tensor([1, 2],"float32"), Tensor([43560, 4],"float32"), Tensor([43560, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 44, 67],"float16"), Tensor([1, 60, 44, 67],"float16"), Tensor([1, 2],"float32"), Tensor([44220, 4],"float32"), Tensor([44220, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 46, 62],"float16"), Tensor([1, 60, 46, 62],"float16"), Tensor([1, 2],"float32"), Tensor([42780, 4],"float32"), Tensor([42780, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 46, 63],"float16"), Tensor([1, 60, 46, 63],"float16"), Tensor([1, 2],"float32"), Tensor([43470, 4],"float32"), Tensor([43470, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 46, 67],"float16"), Tensor([1, 60, 46, 67],"float16"), Tensor([1, 2],"float32"), Tensor([46230, 4],"float32"), Tensor([46230, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 46, 68],"float16"), Tensor([1, 60, 46, 68],"float16"), Tensor([1, 2],"float32"), Tensor([46920, 4],"float32"), Tensor([46920, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 46, 69],"float16"), Tensor([1, 60, 46, 69],"float16"), Tensor([1, 2],"float32"), Tensor([47610, 4],"float32"), Tensor([47610, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 46, 70],"float16"), Tensor([1, 60, 46, 70],"float16"), Tensor([1, 2],"float32"), Tensor([48300, 4],"float32"), Tensor([48300, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 46, 75],"float16"), Tensor([1, 60, 46, 75],"float16"), Tensor([1, 2],"float32"), Tensor([51750, 4],"float32"), Tensor([51750, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 46, 80],"float16"), Tensor([1, 60, 46, 80],"float16"), Tensor([1, 2],"float32"), Tensor([55200, 4],"float32"), Tensor([55200, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 46, 84],"float16"), Tensor([1, 60, 46, 84],"float16"), Tensor([1, 2],"float32"), Tensor([57960, 4],"float32"), Tensor([57960, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 47, 84],"float16"), Tensor([1, 60, 47, 84],"float16"), Tensor([1, 2],"float32"), Tensor([59220, 4],"float32"), Tensor([59220, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 48, 62],"float16"), Tensor([1, 60, 48, 62],"float16"), Tensor([1, 2],"float32"), Tensor([44640, 4],"float32"), Tensor([44640, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 48, 64],"float16"), Tensor([1, 60, 48, 64],"float16"), Tensor([1, 2],"float32"), Tensor([46080, 4],"float32"), Tensor([46080, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 48, 65],"float16"), Tensor([1, 60, 48, 65],"float16"), Tensor([1, 2],"float32"), Tensor([46800, 4],"float32"), Tensor([46800, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 48, 66],"float16"), Tensor([1, 60, 48, 66],"float16"), Tensor([1, 2],"float32"), Tensor([47520, 4],"float32"), Tensor([47520, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 48, 67],"float16"), Tensor([1, 60, 48, 67],"float16"), Tensor([1, 2],"float32"), Tensor([48240, 4],"float32"), Tensor([48240, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 48, 69],"float16"), Tensor([1, 60, 48, 69],"float16"), Tensor([1, 2],"float32"), Tensor([49680, 4],"float32"), Tensor([49680, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 48, 70],"float16"), Tensor([1, 60, 48, 70],"float16"), Tensor([1, 2],"float32"), Tensor([50400, 4],"float32"), Tensor([50400, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 48, 72],"float16"), Tensor([1, 60, 48, 72],"float16"), Tensor([1, 2],"float32"), Tensor([51840, 4],"float32"), Tensor([51840, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 48, 73],"float16"), Tensor([1, 60, 48, 73],"float16"), Tensor([1, 2],"float32"), Tensor([52560, 4],"float32"), Tensor([52560, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 48, 75],"float16"), Tensor([1, 60, 48, 75],"float16"), Tensor([1, 2],"float32"), Tensor([54000, 4],"float32"), Tensor([54000, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 48, 84],"float16"), Tensor([1, 60, 48, 84],"float16"), Tensor([1, 2],"float32"), Tensor([60480, 4],"float32"), Tensor([60480, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 49, 63],"float16"), Tensor([1, 60, 49, 63],"float16"), Tensor([1, 2],"float32"), Tensor([46305, 4],"float32"), Tensor([46305, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 50, 59],"float16"), Tensor([1, 60, 50, 59],"float16"), Tensor([1, 2],"float32"), Tensor([44250, 4],"float32"), Tensor([44250, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 50, 61],"float16"), Tensor([1, 60, 50, 61],"float16"), Tensor([1, 2],"float32"), Tensor([45750, 4],"float32"), Tensor([45750, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 50, 64],"float16"), Tensor([1, 60, 50, 64],"float16"), Tensor([1, 2],"float32"), Tensor([48000, 4],"float32"), Tensor([48000, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 50, 67],"float16"), Tensor([1, 60, 50, 67],"float16"), Tensor([1, 2],"float32"), Tensor([50250, 4],"float32"), Tensor([50250, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 50, 69],"float16"), Tensor([1, 60, 50, 69],"float16"), Tensor([1, 2],"float32"), Tensor([51750, 4],"float32"), Tensor([51750, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 50, 70],"float16"), Tensor([1, 60, 50, 70],"float16"), Tensor([1, 2],"float32"), Tensor([52500, 4],"float32"), Tensor([52500, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 50, 71],"float16"), Tensor([1, 60, 50, 71],"float16"), Tensor([1, 2],"float32"), Tensor([53250, 4],"float32"), Tensor([53250, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 50, 72],"float16"), Tensor([1, 60, 50, 72],"float16"), Tensor([1, 2],"float32"), Tensor([54000, 4],"float32"), Tensor([54000, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 50, 73],"float16"), Tensor([1, 60, 50, 73],"float16"), Tensor([1, 2],"float32"), Tensor([54750, 4],"float32"), Tensor([54750, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 50, 75],"float16"), Tensor([1, 60, 50, 75],"float16"), Tensor([1, 2],"float32"), Tensor([56250, 4],"float32"), Tensor([56250, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 50, 76],"float16"), Tensor([1, 60, 50, 76],"float16"), Tensor([1, 2],"float32"), Tensor([57000, 4],"float32"), Tensor([57000, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 50, 79],"float16"), Tensor([1, 60, 50, 79],"float16"), Tensor([1, 2],"float32"), Tensor([59250, 4],"float32"), Tensor([59250, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 50, 81],"float16"), Tensor([1, 60, 50, 81],"float16"), Tensor([1, 2],"float32"), Tensor([60750, 4],"float32"), Tensor([60750, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 50, 82],"float16"), Tensor([1, 60, 50, 82],"float16"), Tensor([1, 2],"float32"), Tensor([61500, 4],"float32"), Tensor([61500, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 50, 84],"float16"), Tensor([1, 60, 50, 84],"float16"), Tensor([1, 2],"float32"), Tensor([63000, 4],"float32"), Tensor([63000, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 51, 73],"float16"), Tensor([1, 60, 51, 73],"float16"), Tensor([1, 2],"float32"), Tensor([55845, 4],"float32"), Tensor([55845, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 51, 82],"float16"), Tensor([1, 60, 51, 82],"float16"), Tensor([1, 2],"float32"), Tensor([62730, 4],"float32"), Tensor([62730, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 52, 75],"float16"), Tensor([1, 60, 52, 75],"float16"), Tensor([1, 2],"float32"), Tensor([58500, 4],"float32"), Tensor([58500, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 53, 56],"float16"), Tensor([1, 60, 53, 56],"float16"), Tensor([1, 2],"float32"), Tensor([44520, 4],"float32"), Tensor([44520, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 53, 72],"float16"), Tensor([1, 60, 53, 72],"float16"), Tensor([1, 2],"float32"), Tensor([57240, 4],"float32"), Tensor([57240, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 54, 61],"float16"), Tensor([1, 60, 54, 61],"float16"), Tensor([1, 2],"float32"), Tensor([49410, 4],"float32"), Tensor([49410, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 54, 63],"float16"), Tensor([1, 60, 54, 63],"float16"), Tensor([1, 2],"float32"), Tensor([51030, 4],"float32"), Tensor([51030, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 54, 66],"float16"), Tensor([1, 60, 54, 66],"float16"), Tensor([1, 2],"float32"), Tensor([53460, 4],"float32"), Tensor([53460, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 54, 69],"float16"), Tensor([1, 60, 54, 69],"float16"), Tensor([1, 2],"float32"), Tensor([55890, 4],"float32"), Tensor([55890, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 54, 70],"float16"), Tensor([1, 60, 54, 70],"float16"), Tensor([1, 2],"float32"), Tensor([56700, 4],"float32"), Tensor([56700, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 54, 72],"float16"), Tensor([1, 60, 54, 72],"float16"), Tensor([1, 2],"float32"), Tensor([58320, 4],"float32"), Tensor([58320, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 54, 75],"float16"), Tensor([1, 60, 54, 75],"float16"), Tensor([1, 2],"float32"), Tensor([60750, 4],"float32"), Tensor([60750, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 55, 70],"float16"), Tensor([1, 60, 55, 70],"float16"), Tensor([1, 2],"float32"), Tensor([57750, 4],"float32"), Tensor([57750, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 55, 76],"float16"), Tensor([1, 60, 55, 76],"float16"), Tensor([1, 2],"float32"), Tensor([62700, 4],"float32"), Tensor([62700, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 56, 62],"float16"), Tensor([1, 60, 56, 62],"float16"), Tensor([1, 2],"float32"), Tensor([52080, 4],"float32"), Tensor([52080, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 56, 63],"float16"), Tensor([1, 60, 56, 63],"float16"), Tensor([1, 2],"float32"), Tensor([52920, 4],"float32"), Tensor([52920, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 56, 64],"float16"), Tensor([1, 60, 56, 64],"float16"), Tensor([1, 2],"float32"), Tensor([53760, 4],"float32"), Tensor([53760, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 56, 65],"float16"), Tensor([1, 60, 56, 65],"float16"), Tensor([1, 2],"float32"), Tensor([54600, 4],"float32"), Tensor([54600, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 56, 66],"float16"), Tensor([1, 60, 56, 66],"float16"), Tensor([1, 2],"float32"), Tensor([55440, 4],"float32"), Tensor([55440, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 56, 67],"float16"), Tensor([1, 60, 56, 67],"float16"), Tensor([1, 2],"float32"), Tensor([56280, 4],"float32"), Tensor([56280, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 56, 69],"float16"), Tensor([1, 60, 56, 69],"float16"), Tensor([1, 2],"float32"), Tensor([57960, 4],"float32"), Tensor([57960, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 56, 72],"float16"), Tensor([1, 60, 56, 72],"float16"), Tensor([1, 2],"float32"), Tensor([60480, 4],"float32"), Tensor([60480, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 56, 74],"float16"), Tensor([1, 60, 56, 74],"float16"), Tensor([1, 2],"float32"), Tensor([62160, 4],"float32"), Tensor([62160, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 56, 75],"float16"), Tensor([1, 60, 56, 75],"float16"), Tensor([1, 2],"float32"), Tensor([63000, 4],"float32"), Tensor([63000, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 56, 76],"float16"), Tensor([1, 60, 56, 76],"float16"), Tensor([1, 2],"float32"), Tensor([63840, 4],"float32"), Tensor([63840, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 56, 79],"float16"), Tensor([1, 60, 56, 79],"float16"), Tensor([1, 2],"float32"), Tensor([66360, 4],"float32"), Tensor([66360, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 56, 81],"float16"), Tensor([1, 60, 56, 81],"float16"), Tensor([1, 2],"float32"), Tensor([68040, 4],"float32"), Tensor([68040, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 57, 66],"float16"), Tensor([1, 60, 57, 66],"float16"), Tensor([1, 2],"float32"), Tensor([56430, 4],"float32"), Tensor([56430, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 57, 67],"float16"), Tensor([1, 60, 57, 67],"float16"), Tensor([1, 2],"float32"), Tensor([57285, 4],"float32"), Tensor([57285, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 58, 64],"float16"), Tensor([1, 60, 58, 64],"float16"), Tensor([1, 2],"float32"), Tensor([55680, 4],"float32"), Tensor([55680, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 59, 51],"float16"), Tensor([1, 60, 59, 51],"float16"), Tensor([1, 2],"float32"), Tensor([45135, 4],"float32"), Tensor([45135, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 59, 60],"float16"), Tensor([1, 60, 59, 60],"float16"), Tensor([1, 2],"float32"), Tensor([53100, 4],"float32"), Tensor([53100, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 59, 62],"float16"), Tensor([1, 60, 59, 62],"float16"), Tensor([1, 2],"float32"), Tensor([54870, 4],"float32"), Tensor([54870, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 59, 64],"float16"), Tensor([1, 60, 59, 64],"float16"), Tensor([1, 2],"float32"), Tensor([56640, 4],"float32"), Tensor([56640, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 59, 67],"float16"), Tensor([1, 60, 59, 67],"float16"), Tensor([1, 2],"float32"), Tensor([59295, 4],"float32"), Tensor([59295, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 59, 69],"float16"), Tensor([1, 60, 59, 69],"float16"), Tensor([1, 2],"float32"), Tensor([61065, 4],"float32"), Tensor([61065, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 59, 72],"float16"), Tensor([1, 60, 59, 72],"float16"), Tensor([1, 2],"float32"), Tensor([63720, 4],"float32"), Tensor([63720, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 59, 73],"float16"), Tensor([1, 60, 59, 73],"float16"), Tensor([1, 2],"float32"), Tensor([64605, 4],"float32"), Tensor([64605, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 59, 76],"float16"), Tensor([1, 60, 59, 76],"float16"), Tensor([1, 2],"float32"), Tensor([67260, 4],"float32"), Tensor([67260, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 59, 78],"float16"), Tensor([1, 60, 59, 78],"float16"), Tensor([1, 2],"float32"), Tensor([69030, 4],"float32"), Tensor([69030, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 59, 84],"float16"), Tensor([1, 60, 59, 84],"float16"), Tensor([1, 2],"float32"), Tensor([74340, 4],"float32"), Tensor([74340, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 60, 64],"float16"), Tensor([1, 60, 60, 64],"float16"), Tensor([1, 2],"float32"), Tensor([57600, 4],"float32"), Tensor([57600, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 60, 67],"float16"), Tensor([1, 60, 60, 67],"float16"), Tensor([1, 2],"float32"), Tensor([60300, 4],"float32"), Tensor([60300, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 60, 75],"float16"), Tensor([1, 60, 60, 75],"float16"), Tensor([1, 2],"float32"), Tensor([67500, 4],"float32"), Tensor([67500, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 60, 76],"float16"), Tensor([1, 60, 60, 76],"float16"), Tensor([1, 2],"float32"), Tensor([68400, 4],"float32"), Tensor([68400, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 60, 77],"float16"), Tensor([1, 60, 60, 77],"float16"), Tensor([1, 2],"float32"), Tensor([69300, 4],"float32"), Tensor([69300, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 60, 79],"float16"), Tensor([1, 60, 60, 79],"float16"), Tensor([1, 2],"float32"), Tensor([71100, 4],"float32"), Tensor([71100, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 61, 56],"float16"), Tensor([1, 60, 61, 56],"float16"), Tensor([1, 2],"float32"), Tensor([51240, 4],"float32"), Tensor([51240, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 61, 62],"float16"), Tensor([1, 60, 61, 62],"float16"), Tensor([1, 2],"float32"), Tensor([56730, 4],"float32"), Tensor([56730, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 61, 66],"float16"), Tensor([1, 60, 61, 66],"float16"), Tensor([1, 2],"float32"), Tensor([60390, 4],"float32"), Tensor([60390, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 61, 67],"float16"), Tensor([1, 60, 61, 67],"float16"), Tensor([1, 2],"float32"), Tensor([61305, 4],"float32"), Tensor([61305, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 61, 69],"float16"), Tensor([1, 60, 61, 69],"float16"), Tensor([1, 2],"float32"), Tensor([63135, 4],"float32"), Tensor([63135, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 61, 84],"float16"), Tensor([1, 60, 61, 84],"float16"), Tensor([1, 2],"float32"), Tensor([76860, 4],"float32"), Tensor([76860, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 62, 48],"float16"), Tensor([1, 60, 62, 48],"float16"), Tensor([1, 2],"float32"), Tensor([44640, 4],"float32"), Tensor([44640, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 62, 64],"float16"), Tensor([1, 60, 62, 64],"float16"), Tensor([1, 2],"float32"), Tensor([59520, 4],"float32"), Tensor([59520, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 62, 67],"float16"), Tensor([1, 60, 62, 67],"float16"), Tensor([1, 2],"float32"), Tensor([62310, 4],"float32"), Tensor([62310, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 62, 69],"float16"), Tensor([1, 60, 62, 69],"float16"), Tensor([1, 2],"float32"), Tensor([64170, 4],"float32"), Tensor([64170, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 62, 72],"float16"), Tensor([1, 60, 62, 72],"float16"), Tensor([1, 2],"float32"), Tensor([66960, 4],"float32"), Tensor([66960, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 62, 73],"float16"), Tensor([1, 60, 62, 73],"float16"), Tensor([1, 2],"float32"), Tensor([67890, 4],"float32"), Tensor([67890, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 62, 75],"float16"), Tensor([1, 60, 62, 75],"float16"), Tensor([1, 2],"float32"), Tensor([69750, 4],"float32"), Tensor([69750, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 62, 76],"float16"), Tensor([1, 60, 62, 76],"float16"), Tensor([1, 2],"float32"), Tensor([70680, 4],"float32"), Tensor([70680, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 62, 81],"float16"), Tensor([1, 60, 62, 81],"float16"), Tensor([1, 2],"float32"), Tensor([75330, 4],"float32"), Tensor([75330, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 62, 82],"float16"), Tensor([1, 60, 62, 82],"float16"), Tensor([1, 2],"float32"), Tensor([76260, 4],"float32"), Tensor([76260, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 62, 84],"float16"), Tensor([1, 60, 62, 84],"float16"), Tensor([1, 2],"float32"), Tensor([78120, 4],"float32"), Tensor([78120, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 63, 56],"float16"), Tensor([1, 60, 63, 56],"float16"), Tensor([1, 2],"float32"), Tensor([52920, 4],"float32"), Tensor([52920, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 63, 59],"float16"), Tensor([1, 60, 63, 59],"float16"), Tensor([1, 2],"float32"), Tensor([55755, 4],"float32"), Tensor([55755, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 63, 64],"float16"), Tensor([1, 60, 63, 64],"float16"), Tensor([1, 2],"float32"), Tensor([60480, 4],"float32"), Tensor([60480, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 63, 72],"float16"), Tensor([1, 60, 63, 72],"float16"), Tensor([1, 2],"float32"), Tensor([68040, 4],"float32"), Tensor([68040, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 63, 73],"float16"), Tensor([1, 60, 63, 73],"float16"), Tensor([1, 2],"float32"), Tensor([68985, 4],"float32"), Tensor([68985, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 63, 75],"float16"), Tensor([1, 60, 63, 75],"float16"), Tensor([1, 2],"float32"), Tensor([70875, 4],"float32"), Tensor([70875, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 63, 76],"float16"), Tensor([1, 60, 63, 76],"float16"), Tensor([1, 2],"float32"), Tensor([71820, 4],"float32"), Tensor([71820, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 63, 82],"float16"), Tensor([1, 60, 63, 82],"float16"), Tensor([1, 2],"float32"), Tensor([77490, 4],"float32"), Tensor([77490, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 63, 84],"float16"), Tensor([1, 60, 63, 84],"float16"), Tensor([1, 2],"float32"), Tensor([79380, 4],"float32"), Tensor([79380, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 64, 56],"float16"), Tensor([1, 60, 64, 56],"float16"), Tensor([1, 2],"float32"), Tensor([53760, 4],"float32"), Tensor([53760, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 64, 59],"float16"), Tensor([1, 60, 64, 59],"float16"), Tensor([1, 2],"float32"), Tensor([56640, 4],"float32"), Tensor([56640, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 64, 62],"float16"), Tensor([1, 60, 64, 62],"float16"), Tensor([1, 2],"float32"), Tensor([59520, 4],"float32"), Tensor([59520, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 64, 63],"float16"), Tensor([1, 60, 64, 63],"float16"), Tensor([1, 2],"float32"), Tensor([60480, 4],"float32"), Tensor([60480, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 64, 64],"float16"), Tensor([1, 60, 64, 64],"float16"), Tensor([1, 2],"float32"), Tensor([61440, 4],"float32"), Tensor([61440, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 64, 66],"float16"), Tensor([1, 60, 64, 66],"float16"), Tensor([1, 2],"float32"), Tensor([63360, 4],"float32"), Tensor([63360, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 64, 67],"float16"), Tensor([1, 60, 64, 67],"float16"), Tensor([1, 2],"float32"), Tensor([64320, 4],"float32"), Tensor([64320, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 64, 70],"float16"), Tensor([1, 60, 64, 70],"float16"), Tensor([1, 2],"float32"), Tensor([67200, 4],"float32"), Tensor([67200, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 64, 73],"float16"), Tensor([1, 60, 64, 73],"float16"), Tensor([1, 2],"float32"), Tensor([70080, 4],"float32"), Tensor([70080, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 64, 75],"float16"), Tensor([1, 60, 64, 75],"float16"), Tensor([1, 2],"float32"), Tensor([72000, 4],"float32"), Tensor([72000, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 64, 76],"float16"), Tensor([1, 60, 64, 76],"float16"), Tensor([1, 2],"float32"), Tensor([72960, 4],"float32"), Tensor([72960, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 64, 77],"float16"), Tensor([1, 60, 64, 77],"float16"), Tensor([1, 2],"float32"), Tensor([73920, 4],"float32"), Tensor([73920, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 64, 79],"float16"), Tensor([1, 60, 64, 79],"float16"), Tensor([1, 2],"float32"), Tensor([75840, 4],"float32"), Tensor([75840, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 64, 83],"float16"), Tensor([1, 60, 64, 83],"float16"), Tensor([1, 2],"float32"), Tensor([79680, 4],"float32"), Tensor([79680, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 64, 84],"float16"), Tensor([1, 60, 64, 84],"float16"), Tensor([1, 2],"float32"), Tensor([80640, 4],"float32"), Tensor([80640, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 65, 48],"float16"), Tensor([1, 60, 65, 48],"float16"), Tensor([1, 2],"float32"), Tensor([46800, 4],"float32"), Tensor([46800, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 65, 62],"float16"), Tensor([1, 60, 65, 62],"float16"), Tensor([1, 2],"float32"), Tensor([60450, 4],"float32"), Tensor([60450, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 65, 64],"float16"), Tensor([1, 60, 65, 64],"float16"), Tensor([1, 2],"float32"), Tensor([62400, 4],"float32"), Tensor([62400, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 65, 75],"float16"), Tensor([1, 60, 65, 75],"float16"), Tensor([1, 2],"float32"), Tensor([73125, 4],"float32"), Tensor([73125, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 65, 76],"float16"), Tensor([1, 60, 65, 76],"float16"), Tensor([1, 2],"float32"), Tensor([74100, 4],"float32"), Tensor([74100, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 65, 77],"float16"), Tensor([1, 60, 65, 77],"float16"), Tensor([1, 2],"float32"), Tensor([75075, 4],"float32"), Tensor([75075, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 65, 79],"float16"), Tensor([1, 60, 65, 79],"float16"), Tensor([1, 2],"float32"), Tensor([77025, 4],"float32"), Tensor([77025, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 65, 84],"float16"), Tensor([1, 60, 65, 84],"float16"), Tensor([1, 2],"float32"), Tensor([81900, 4],"float32"), Tensor([81900, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 66, 54],"float16"), Tensor([1, 60, 66, 54],"float16"), Tensor([1, 2],"float32"), Tensor([53460, 4],"float32"), Tensor([53460, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 66, 62],"float16"), Tensor([1, 60, 66, 62],"float16"), Tensor([1, 2],"float32"), Tensor([61380, 4],"float32"), Tensor([61380, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 66, 64],"float16"), Tensor([1, 60, 66, 64],"float16"), Tensor([1, 2],"float32"), Tensor([63360, 4],"float32"), Tensor([63360, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 66, 65],"float16"), Tensor([1, 60, 66, 65],"float16"), Tensor([1, 2],"float32"), Tensor([64350, 4],"float32"), Tensor([64350, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 66, 67],"float16"), Tensor([1, 60, 66, 67],"float16"), Tensor([1, 2],"float32"), Tensor([66330, 4],"float32"), Tensor([66330, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 66, 69],"float16"), Tensor([1, 60, 66, 69],"float16"), Tensor([1, 2],"float32"), Tensor([68310, 4],"float32"), Tensor([68310, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 66, 70],"float16"), Tensor([1, 60, 66, 70],"float16"), Tensor([1, 2],"float32"), Tensor([69300, 4],"float32"), Tensor([69300, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 66, 75],"float16"), Tensor([1, 60, 66, 75],"float16"), Tensor([1, 2],"float32"), Tensor([74250, 4],"float32"), Tensor([74250, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 66, 76],"float16"), Tensor([1, 60, 66, 76],"float16"), Tensor([1, 2],"float32"), Tensor([75240, 4],"float32"), Tensor([75240, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 66, 82],"float16"), Tensor([1, 60, 66, 82],"float16"), Tensor([1, 2],"float32"), Tensor([81180, 4],"float32"), Tensor([81180, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 67, 54],"float16"), Tensor([1, 60, 67, 54],"float16"), Tensor([1, 2],"float32"), Tensor([54270, 4],"float32"), Tensor([54270, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 67, 57],"float16"), Tensor([1, 60, 67, 57],"float16"), Tensor([1, 2],"float32"), Tensor([57285, 4],"float32"), Tensor([57285, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 67, 61],"float16"), Tensor([1, 60, 67, 61],"float16"), Tensor([1, 2],"float32"), Tensor([61305, 4],"float32"), Tensor([61305, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 67, 62],"float16"), Tensor([1, 60, 67, 62],"float16"), Tensor([1, 2],"float32"), Tensor([62310, 4],"float32"), Tensor([62310, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 67, 63],"float16"), Tensor([1, 60, 67, 63],"float16"), Tensor([1, 2],"float32"), Tensor([63315, 4],"float32"), Tensor([63315, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 67, 64],"float16"), Tensor([1, 60, 67, 64],"float16"), Tensor([1, 2],"float32"), Tensor([64320, 4],"float32"), Tensor([64320, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 67, 67],"float16"), Tensor([1, 60, 67, 67],"float16"), Tensor([1, 2],"float32"), Tensor([67335, 4],"float32"), Tensor([67335, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 67, 68],"float16"), Tensor([1, 60, 67, 68],"float16"), Tensor([1, 2],"float32"), Tensor([68340, 4],"float32"), Tensor([68340, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 67, 69],"float16"), Tensor([1, 60, 67, 69],"float16"), Tensor([1, 2],"float32"), Tensor([69345, 4],"float32"), Tensor([69345, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 67, 70],"float16"), Tensor([1, 60, 67, 70],"float16"), Tensor([1, 2],"float32"), Tensor([70350, 4],"float32"), Tensor([70350, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 67, 72],"float16"), Tensor([1, 60, 67, 72],"float16"), Tensor([1, 2],"float32"), Tensor([72360, 4],"float32"), Tensor([72360, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 67, 73],"float16"), Tensor([1, 60, 67, 73],"float16"), Tensor([1, 2],"float32"), Tensor([73365, 4],"float32"), Tensor([73365, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 67, 75],"float16"), Tensor([1, 60, 67, 75],"float16"), Tensor([1, 2],"float32"), Tensor([75375, 4],"float32"), Tensor([75375, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 67, 76],"float16"), Tensor([1, 60, 67, 76],"float16"), Tensor([1, 2],"float32"), Tensor([76380, 4],"float32"), Tensor([76380, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 67, 80],"float16"), Tensor([1, 60, 67, 80],"float16"), Tensor([1, 2],"float32"), Tensor([80400, 4],"float32"), Tensor([80400, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 67, 83],"float16"), Tensor([1, 60, 67, 83],"float16"), Tensor([1, 2],"float32"), Tensor([83415, 4],"float32"), Tensor([83415, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 67, 84],"float16"), Tensor([1, 60, 67, 84],"float16"), Tensor([1, 2],"float32"), Tensor([84420, 4],"float32"), Tensor([84420, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 68, 60],"float16"), Tensor([1, 60, 68, 60],"float16"), Tensor([1, 2],"float32"), Tensor([61200, 4],"float32"), Tensor([61200, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 68, 64],"float16"), Tensor([1, 60, 68, 64],"float16"), Tensor([1, 2],"float32"), Tensor([65280, 4],"float32"), Tensor([65280, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 69, 48],"float16"), Tensor([1, 60, 69, 48],"float16"), Tensor([1, 2],"float32"), Tensor([49680, 4],"float32"), Tensor([49680, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 69, 56],"float16"), Tensor([1, 60, 69, 56],"float16"), Tensor([1, 2],"float32"), Tensor([57960, 4],"float32"), Tensor([57960, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 69, 59],"float16"), Tensor([1, 60, 69, 59],"float16"), Tensor([1, 2],"float32"), Tensor([61065, 4],"float32"), Tensor([61065, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 69, 64],"float16"), Tensor([1, 60, 69, 64],"float16"), Tensor([1, 2],"float32"), Tensor([66240, 4],"float32"), Tensor([66240, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 69, 67],"float16"), Tensor([1, 60, 69, 67],"float16"), Tensor([1, 2],"float32"), Tensor([69345, 4],"float32"), Tensor([69345, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 69, 69],"float16"), Tensor([1, 60, 69, 69],"float16"), Tensor([1, 2],"float32"), Tensor([71415, 4],"float32"), Tensor([71415, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 69, 72],"float16"), Tensor([1, 60, 69, 72],"float16"), Tensor([1, 2],"float32"), Tensor([74520, 4],"float32"), Tensor([74520, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 69, 73],"float16"), Tensor([1, 60, 69, 73],"float16"), Tensor([1, 2],"float32"), Tensor([75555, 4],"float32"), Tensor([75555, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 69, 75],"float16"), Tensor([1, 60, 69, 75],"float16"), Tensor([1, 2],"float32"), Tensor([77625, 4],"float32"), Tensor([77625, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 69, 76],"float16"), Tensor([1, 60, 69, 76],"float16"), Tensor([1, 2],"float32"), Tensor([78660, 4],"float32"), Tensor([78660, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 69, 84],"float16"), Tensor([1, 60, 69, 84],"float16"), Tensor([1, 2],"float32"), Tensor([86940, 4],"float32"), Tensor([86940, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 70, 56],"float16"), Tensor([1, 60, 70, 56],"float16"), Tensor([1, 2],"float32"), Tensor([58800, 4],"float32"), Tensor([58800, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 70, 63],"float16"), Tensor([1, 60, 70, 63],"float16"), Tensor([1, 2],"float32"), Tensor([66150, 4],"float32"), Tensor([66150, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 70, 64],"float16"), Tensor([1, 60, 70, 64],"float16"), Tensor([1, 2],"float32"), Tensor([67200, 4],"float32"), Tensor([67200, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 70, 70],"float16"), Tensor([1, 60, 70, 70],"float16"), Tensor([1, 2],"float32"), Tensor([73500, 4],"float32"), Tensor([73500, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 70, 71],"float16"), Tensor([1, 60, 70, 71],"float16"), Tensor([1, 2],"float32"), Tensor([74550, 4],"float32"), Tensor([74550, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 71, 64],"float16"), Tensor([1, 60, 71, 64],"float16"), Tensor([1, 2],"float32"), Tensor([68160, 4],"float32"), Tensor([68160, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 71, 66],"float16"), Tensor([1, 60, 71, 66],"float16"), Tensor([1, 2],"float32"), Tensor([70290, 4],"float32"), Tensor([70290, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 71, 71],"float16"), Tensor([1, 60, 71, 71],"float16"), Tensor([1, 2],"float32"), Tensor([75615, 4],"float32"), Tensor([75615, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 71, 78],"float16"), Tensor([1, 60, 71, 78],"float16"), Tensor([1, 2],"float32"), Tensor([83070, 4],"float32"), Tensor([83070, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 72, 54],"float16"), Tensor([1, 60, 72, 54],"float16"), Tensor([1, 2],"float32"), Tensor([58320, 4],"float32"), Tensor([58320, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 72, 56],"float16"), Tensor([1, 60, 72, 56],"float16"), Tensor([1, 2],"float32"), Tensor([60480, 4],"float32"), Tensor([60480, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 72, 59],"float16"), Tensor([1, 60, 72, 59],"float16"), Tensor([1, 2],"float32"), Tensor([63720, 4],"float32"), Tensor([63720, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 72, 62],"float16"), Tensor([1, 60, 72, 62],"float16"), Tensor([1, 2],"float32"), Tensor([66960, 4],"float32"), Tensor([66960, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 72, 67],"float16"), Tensor([1, 60, 72, 67],"float16"), Tensor([1, 2],"float32"), Tensor([72360, 4],"float32"), Tensor([72360, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 72, 69],"float16"), Tensor([1, 60, 72, 69],"float16"), Tensor([1, 2],"float32"), Tensor([74520, 4],"float32"), Tensor([74520, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 72, 72],"float16"), Tensor([1, 60, 72, 72],"float16"), Tensor([1, 2],"float32"), Tensor([77760, 4],"float32"), Tensor([77760, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 72, 82],"float16"), Tensor([1, 60, 72, 82],"float16"), Tensor([1, 2],"float32"), Tensor([88560, 4],"float32"), Tensor([88560, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 72, 84],"float16"), Tensor([1, 60, 72, 84],"float16"), Tensor([1, 2],"float32"), Tensor([90720, 4],"float32"), Tensor([90720, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 73, 64],"float16"), Tensor([1, 60, 73, 64],"float16"), Tensor([1, 2],"float32"), Tensor([70080, 4],"float32"), Tensor([70080, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 73, 66],"float16"), Tensor([1, 60, 73, 66],"float16"), Tensor([1, 2],"float32"), Tensor([72270, 4],"float32"), Tensor([72270, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 73, 67],"float16"), Tensor([1, 60, 73, 67],"float16"), Tensor([1, 2],"float32"), Tensor([73365, 4],"float32"), Tensor([73365, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 73, 72],"float16"), Tensor([1, 60, 73, 72],"float16"), Tensor([1, 2],"float32"), Tensor([78840, 4],"float32"), Tensor([78840, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 73, 73],"float16"), Tensor([1, 60, 73, 73],"float16"), Tensor([1, 2],"float32"), Tensor([79935, 4],"float32"), Tensor([79935, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 73, 75],"float16"), Tensor([1, 60, 73, 75],"float16"), Tensor([1, 2],"float32"), Tensor([82125, 4],"float32"), Tensor([82125, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 73, 76],"float16"), Tensor([1, 60, 73, 76],"float16"), Tensor([1, 2],"float32"), Tensor([83220, 4],"float32"), Tensor([83220, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 73, 80],"float16"), Tensor([1, 60, 73, 80],"float16"), Tensor([1, 2],"float32"), Tensor([87600, 4],"float32"), Tensor([87600, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 73, 84],"float16"), Tensor([1, 60, 73, 84],"float16"), Tensor([1, 2],"float32"), Tensor([91980, 4],"float32"), Tensor([91980, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 74, 63],"float16"), Tensor([1, 60, 74, 63],"float16"), Tensor([1, 2],"float32"), Tensor([69930, 4],"float32"), Tensor([69930, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 74, 69],"float16"), Tensor([1, 60, 74, 69],"float16"), Tensor([1, 2],"float32"), Tensor([76590, 4],"float32"), Tensor([76590, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 75, 50],"float16"), Tensor([1, 60, 75, 50],"float16"), Tensor([1, 2],"float32"), Tensor([56250, 4],"float32"), Tensor([56250, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 75, 61],"float16"), Tensor([1, 60, 75, 61],"float16"), Tensor([1, 2],"float32"), Tensor([68625, 4],"float32"), Tensor([68625, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 75, 62],"float16"), Tensor([1, 60, 75, 62],"float16"), Tensor([1, 2],"float32"), Tensor([69750, 4],"float32"), Tensor([69750, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 75, 64],"float16"), Tensor([1, 60, 75, 64],"float16"), Tensor([1, 2],"float32"), Tensor([72000, 4],"float32"), Tensor([72000, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 75, 67],"float16"), Tensor([1, 60, 75, 67],"float16"), Tensor([1, 2],"float32"), Tensor([75375, 4],"float32"), Tensor([75375, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 75, 69],"float16"), Tensor([1, 60, 75, 69],"float16"), Tensor([1, 2],"float32"), Tensor([77625, 4],"float32"), Tensor([77625, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 75, 70],"float16"), Tensor([1, 60, 75, 70],"float16"), Tensor([1, 2],"float32"), Tensor([78750, 4],"float32"), Tensor([78750, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 75, 72],"float16"), Tensor([1, 60, 75, 72],"float16"), Tensor([1, 2],"float32"), Tensor([81000, 4],"float32"), Tensor([81000, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 75, 73],"float16"), Tensor([1, 60, 75, 73],"float16"), Tensor([1, 2],"float32"), Tensor([82125, 4],"float32"), Tensor([82125, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 75, 75],"float16"), Tensor([1, 60, 75, 75],"float16"), Tensor([1, 2],"float32"), Tensor([84375, 4],"float32"), Tensor([84375, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 75, 84],"float16"), Tensor([1, 60, 75, 84],"float16"), Tensor([1, 2],"float32"), Tensor([94500, 4],"float32"), Tensor([94500, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 76, 50],"float16"), Tensor([1, 60, 76, 50],"float16"), Tensor([1, 2],"float32"), Tensor([57000, 4],"float32"), Tensor([57000, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 76, 63],"float16"), Tensor([1, 60, 76, 63],"float16"), Tensor([1, 2],"float32"), Tensor([71820, 4],"float32"), Tensor([71820, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 76, 66],"float16"), Tensor([1, 60, 76, 66],"float16"), Tensor([1, 2],"float32"), Tensor([75240, 4],"float32"), Tensor([75240, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 76, 67],"float16"), Tensor([1, 60, 76, 67],"float16"), Tensor([1, 2],"float32"), Tensor([76380, 4],"float32"), Tensor([76380, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 76, 72],"float16"), Tensor([1, 60, 76, 72],"float16"), Tensor([1, 2],"float32"), Tensor([82080, 4],"float32"), Tensor([82080, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 76, 76],"float16"), Tensor([1, 60, 76, 76],"float16"), Tensor([1, 2],"float32"), Tensor([86640, 4],"float32"), Tensor([86640, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 76, 79],"float16"), Tensor([1, 60, 76, 79],"float16"), Tensor([1, 2],"float32"), Tensor([90060, 4],"float32"), Tensor([90060, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 76, 83],"float16"), Tensor([1, 60, 76, 83],"float16"), Tensor([1, 2],"float32"), Tensor([94620, 4],"float32"), Tensor([94620, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 76, 84],"float16"), Tensor([1, 60, 76, 84],"float16"), Tensor([1, 2],"float32"), Tensor([95760, 4],"float32"), Tensor([95760, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 77, 56],"float16"), Tensor([1, 60, 77, 56],"float16"), Tensor([1, 2],"float32"), Tensor([64680, 4],"float32"), Tensor([64680, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 77, 62],"float16"), Tensor([1, 60, 77, 62],"float16"), Tensor([1, 2],"float32"), Tensor([71610, 4],"float32"), Tensor([71610, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 77, 69],"float16"), Tensor([1, 60, 77, 69],"float16"), Tensor([1, 2],"float32"), Tensor([79695, 4],"float32"), Tensor([79695, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 79, 67],"float16"), Tensor([1, 60, 79, 67],"float16"), Tensor([1, 2],"float32"), Tensor([79395, 4],"float32"), Tensor([79395, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 79, 72],"float16"), Tensor([1, 60, 79, 72],"float16"), Tensor([1, 2],"float32"), Tensor([85320, 4],"float32"), Tensor([85320, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 80, 64],"float16"), Tensor([1, 60, 80, 64],"float16"), Tensor([1, 2],"float32"), Tensor([76800, 4],"float32"), Tensor([76800, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 82, 61],"float16"), Tensor([1, 60, 82, 61],"float16"), Tensor([1, 2],"float32"), Tensor([75030, 4],"float32"), Tensor([75030, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 82, 84],"float16"), Tensor([1, 60, 82, 84],"float16"), Tensor([1, 2],"float32"), Tensor([103320, 4],"float32"), Tensor([103320, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 84, 62],"float16"), Tensor([1, 60, 84, 62],"float16"), Tensor([1, 2],"float32"), Tensor([78120, 4],"float32"), Tensor([78120, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 84, 64],"float16"), Tensor([1, 60, 84, 64],"float16"), Tensor([1, 2],"float32"), Tensor([80640, 4],"float32"), Tensor([80640, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 84, 70],"float16"), Tensor([1, 60, 84, 70],"float16"), Tensor([1, 2],"float32"), Tensor([88200, 4],"float32"), Tensor([88200, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 15, 84, 84],"float16"), Tensor([1, 60, 84, 84],"float16"), Tensor([1, 2],"float32"), Tensor([105840, 4],"float32"), Tensor([105840, 4],"float32"), pre_nms_top_n=12000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 100, 120],"float16"), Tensor([1, 12, 100, 120],"float16"), Tensor([1, 2],"float32"), Tensor([36000, 4],"float32"), Tensor([36000, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 100, 124],"float16"), Tensor([1, 12, 100, 124],"float16"), Tensor([1, 2],"float32"), Tensor([37200, 4],"float32"), Tensor([37200, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 100, 128],"float16"), Tensor([1, 12, 100, 128],"float16"), Tensor([1, 2],"float32"), Tensor([38400, 4],"float32"), Tensor([38400, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 100, 132],"float16"), Tensor([1, 12, 100, 132],"float16"), Tensor([1, 2],"float32"), Tensor([39600, 4],"float32"), Tensor([39600, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 100, 136],"float16"), Tensor([1, 12, 100, 136],"float16"), Tensor([1, 2],"float32"), Tensor([40800, 4],"float32"), Tensor([40800, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 100, 140],"float16"), Tensor([1, 12, 100, 140],"float16"), Tensor([1, 2],"float32"), Tensor([42000, 4],"float32"), Tensor([42000, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 100, 144],"float16"), Tensor([1, 12, 100, 144],"float16"), Tensor([1, 2],"float32"), Tensor([43200, 4],"float32"), Tensor([43200, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 100, 148],"float16"), Tensor([1, 12, 100, 148],"float16"), Tensor([1, 2],"float32"), Tensor([44400, 4],"float32"), Tensor([44400, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 100, 152],"float16"), Tensor([1, 12, 100, 152],"float16"), Tensor([1, 2],"float32"), Tensor([45600, 4],"float32"), Tensor([45600, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 100, 156],"float16"), Tensor([1, 12, 100, 156],"float16"), Tensor([1, 2],"float32"), Tensor([46800, 4],"float32"), Tensor([46800, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 100, 160],"float16"), Tensor([1, 12, 100, 160],"float16"), Tensor([1, 2],"float32"), Tensor([48000, 4],"float32"), Tensor([48000, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 100, 164],"float16"), Tensor([1, 12, 100, 164],"float16"), Tensor([1, 2],"float32"), Tensor([49200, 4],"float32"), Tensor([49200, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 100, 168],"float16"), Tensor([1, 12, 100, 168],"float16"), Tensor([1, 2],"float32"), Tensor([50400, 4],"float32"), Tensor([50400, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 104, 128],"float16"), Tensor([1, 12, 104, 128],"float16"), Tensor([1, 2],"float32"), Tensor([39936, 4],"float32"), Tensor([39936, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 104, 144],"float16"), Tensor([1, 12, 104, 144],"float16"), Tensor([1, 2],"float32"), Tensor([44928, 4],"float32"), Tensor([44928, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 104, 148],"float16"), Tensor([1, 12, 104, 148],"float16"), Tensor([1, 2],"float32"), Tensor([46176, 4],"float32"), Tensor([46176, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 104, 152],"float16"), Tensor([1, 12, 104, 152],"float16"), Tensor([1, 2],"float32"), Tensor([47424, 4],"float32"), Tensor([47424, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 104, 164],"float16"), Tensor([1, 12, 104, 164],"float16"), Tensor([1, 2],"float32"), Tensor([51168, 4],"float32"), Tensor([51168, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 104, 168],"float16"), Tensor([1, 12, 104, 168],"float16"), Tensor([1, 2],"float32"), Tensor([52416, 4],"float32"), Tensor([52416, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 108, 112],"float16"), Tensor([1, 12, 108, 112],"float16"), Tensor([1, 2],"float32"), Tensor([36288, 4],"float32"), Tensor([36288, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 108, 124],"float16"), Tensor([1, 12, 108, 124],"float16"), Tensor([1, 2],"float32"), Tensor([40176, 4],"float32"), Tensor([40176, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 108, 128],"float16"), Tensor([1, 12, 108, 128],"float16"), Tensor([1, 2],"float32"), Tensor([41472, 4],"float32"), Tensor([41472, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 108, 132],"float16"), Tensor([1, 12, 108, 132],"float16"), Tensor([1, 2],"float32"), Tensor([42768, 4],"float32"), Tensor([42768, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 108, 136],"float16"), Tensor([1, 12, 108, 136],"float16"), Tensor([1, 2],"float32"), Tensor([44064, 4],"float32"), Tensor([44064, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 108, 140],"float16"), Tensor([1, 12, 108, 140],"float16"), Tensor([1, 2],"float32"), Tensor([45360, 4],"float32"), Tensor([45360, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 108, 144],"float16"), Tensor([1, 12, 108, 144],"float16"), Tensor([1, 2],"float32"), Tensor([46656, 4],"float32"), Tensor([46656, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 108, 152],"float16"), Tensor([1, 12, 108, 152],"float16"), Tensor([1, 2],"float32"), Tensor([49248, 4],"float32"), Tensor([49248, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 108, 156],"float16"), Tensor([1, 12, 108, 156],"float16"), Tensor([1, 2],"float32"), Tensor([50544, 4],"float32"), Tensor([50544, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 108, 164],"float16"), Tensor([1, 12, 108, 164],"float16"), Tensor([1, 2],"float32"), Tensor([53136, 4],"float32"), Tensor([53136, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 108, 168],"float16"), Tensor([1, 12, 108, 168],"float16"), Tensor([1, 2],"float32"), Tensor([54432, 4],"float32"), Tensor([54432, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 11, 15],"float16"), Tensor([1, 12, 11, 15],"float16"), Tensor([1, 2],"float32"), Tensor([495, 4],"float32"), Tensor([495, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 11, 16],"float16"), Tensor([1, 12, 11, 16],"float16"), Tensor([1, 2],"float32"), Tensor([528, 4],"float32"), Tensor([528, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 11, 17],"float16"), Tensor([1, 12, 11, 17],"float16"), Tensor([1, 2],"float32"), Tensor([561, 4],"float32"), Tensor([561, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 11, 19],"float16"), Tensor([1, 12, 11, 19],"float16"), Tensor([1, 2],"float32"), Tensor([627, 4],"float32"), Tensor([627, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 11, 21],"float16"), Tensor([1, 12, 11, 21],"float16"), Tensor([1, 2],"float32"), Tensor([693, 4],"float32"), Tensor([693, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 112, 124],"float16"), Tensor([1, 12, 112, 124],"float16"), Tensor([1, 2],"float32"), Tensor([41664, 4],"float32"), Tensor([41664, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 112, 128],"float16"), Tensor([1, 12, 112, 128],"float16"), Tensor([1, 2],"float32"), Tensor([43008, 4],"float32"), Tensor([43008, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 112, 132],"float16"), Tensor([1, 12, 112, 132],"float16"), Tensor([1, 2],"float32"), Tensor([44352, 4],"float32"), Tensor([44352, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 112, 136],"float16"), Tensor([1, 12, 112, 136],"float16"), Tensor([1, 2],"float32"), Tensor([45696, 4],"float32"), Tensor([45696, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 112, 140],"float16"), Tensor([1, 12, 112, 140],"float16"), Tensor([1, 2],"float32"), Tensor([47040, 4],"float32"), Tensor([47040, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 112, 144],"float16"), Tensor([1, 12, 112, 144],"float16"), Tensor([1, 2],"float32"), Tensor([48384, 4],"float32"), Tensor([48384, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 112, 148],"float16"), Tensor([1, 12, 112, 148],"float16"), Tensor([1, 2],"float32"), Tensor([49728, 4],"float32"), Tensor([49728, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 112, 152],"float16"), Tensor([1, 12, 112, 152],"float16"), Tensor([1, 2],"float32"), Tensor([51072, 4],"float32"), Tensor([51072, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 112, 156],"float16"), Tensor([1, 12, 112, 156],"float16"), Tensor([1, 2],"float32"), Tensor([52416, 4],"float32"), Tensor([52416, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 112, 160],"float16"), Tensor([1, 12, 112, 160],"float16"), Tensor([1, 2],"float32"), Tensor([53760, 4],"float32"), Tensor([53760, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 112, 164],"float16"), Tensor([1, 12, 112, 164],"float16"), Tensor([1, 2],"float32"), Tensor([55104, 4],"float32"), Tensor([55104, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 112, 168],"float16"), Tensor([1, 12, 112, 168],"float16"), Tensor([1, 2],"float32"), Tensor([56448, 4],"float32"), Tensor([56448, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 116, 124],"float16"), Tensor([1, 12, 116, 124],"float16"), Tensor([1, 2],"float32"), Tensor([43152, 4],"float32"), Tensor([43152, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 116, 128],"float16"), Tensor([1, 12, 116, 128],"float16"), Tensor([1, 2],"float32"), Tensor([44544, 4],"float32"), Tensor([44544, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 116, 132],"float16"), Tensor([1, 12, 116, 132],"float16"), Tensor([1, 2],"float32"), Tensor([45936, 4],"float32"), Tensor([45936, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 116, 136],"float16"), Tensor([1, 12, 116, 136],"float16"), Tensor([1, 2],"float32"), Tensor([47328, 4],"float32"), Tensor([47328, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 116, 160],"float16"), Tensor([1, 12, 116, 160],"float16"), Tensor([1, 2],"float32"), Tensor([55680, 4],"float32"), Tensor([55680, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 116, 168],"float16"), Tensor([1, 12, 116, 168],"float16"), Tensor([1, 2],"float32"), Tensor([58464, 4],"float32"), Tensor([58464, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 12, 15],"float16"), Tensor([1, 12, 12, 15],"float16"), Tensor([1, 2],"float32"), Tensor([540, 4],"float32"), Tensor([540, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 12, 16],"float16"), Tensor([1, 12, 12, 16],"float16"), Tensor([1, 2],"float32"), Tensor([576, 4],"float32"), Tensor([576, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 12, 17],"float16"), Tensor([1, 12, 12, 17],"float16"), Tensor([1, 2],"float32"), Tensor([612, 4],"float32"), Tensor([612, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 12, 18],"float16"), Tensor([1, 12, 12, 18],"float16"), Tensor([1, 2],"float32"), Tensor([648, 4],"float32"), Tensor([648, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 12, 19],"float16"), Tensor([1, 12, 12, 19],"float16"), Tensor([1, 2],"float32"), Tensor([684, 4],"float32"), Tensor([684, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 12, 20],"float16"), Tensor([1, 12, 12, 20],"float16"), Tensor([1, 2],"float32"), Tensor([720, 4],"float32"), Tensor([720, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 12, 21],"float16"), Tensor([1, 12, 12, 21],"float16"), Tensor([1, 2],"float32"), Tensor([756, 4],"float32"), Tensor([756, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 120, 104],"float16"), Tensor([1, 12, 120, 104],"float16"), Tensor([1, 2],"float32"), Tensor([37440, 4],"float32"), Tensor([37440, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 120, 120],"float16"), Tensor([1, 12, 120, 120],"float16"), Tensor([1, 2],"float32"), Tensor([43200, 4],"float32"), Tensor([43200, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 120, 124],"float16"), Tensor([1, 12, 120, 124],"float16"), Tensor([1, 2],"float32"), Tensor([44640, 4],"float32"), Tensor([44640, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 120, 128],"float16"), Tensor([1, 12, 120, 128],"float16"), Tensor([1, 2],"float32"), Tensor([46080, 4],"float32"), Tensor([46080, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 120, 136],"float16"), Tensor([1, 12, 120, 136],"float16"), Tensor([1, 2],"float32"), Tensor([48960, 4],"float32"), Tensor([48960, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 120, 140],"float16"), Tensor([1, 12, 120, 140],"float16"), Tensor([1, 2],"float32"), Tensor([50400, 4],"float32"), Tensor([50400, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 120, 144],"float16"), Tensor([1, 12, 120, 144],"float16"), Tensor([1, 2],"float32"), Tensor([51840, 4],"float32"), Tensor([51840, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 120, 148],"float16"), Tensor([1, 12, 120, 148],"float16"), Tensor([1, 2],"float32"), Tensor([53280, 4],"float32"), Tensor([53280, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 120, 152],"float16"), Tensor([1, 12, 120, 152],"float16"), Tensor([1, 2],"float32"), Tensor([54720, 4],"float32"), Tensor([54720, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 120, 156],"float16"), Tensor([1, 12, 120, 156],"float16"), Tensor([1, 2],"float32"), Tensor([56160, 4],"float32"), Tensor([56160, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 120, 160],"float16"), Tensor([1, 12, 120, 160],"float16"), Tensor([1, 2],"float32"), Tensor([57600, 4],"float32"), Tensor([57600, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 120, 164],"float16"), Tensor([1, 12, 120, 164],"float16"), Tensor([1, 2],"float32"), Tensor([59040, 4],"float32"), Tensor([59040, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 120, 168],"float16"), Tensor([1, 12, 120, 168],"float16"), Tensor([1, 2],"float32"), Tensor([60480, 4],"float32"), Tensor([60480, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 124, 112],"float16"), Tensor([1, 12, 124, 112],"float16"), Tensor([1, 2],"float32"), Tensor([41664, 4],"float32"), Tensor([41664, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 124, 124],"float16"), Tensor([1, 12, 124, 124],"float16"), Tensor([1, 2],"float32"), Tensor([46128, 4],"float32"), Tensor([46128, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 124, 128],"float16"), Tensor([1, 12, 124, 128],"float16"), Tensor([1, 2],"float32"), Tensor([47616, 4],"float32"), Tensor([47616, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 124, 132],"float16"), Tensor([1, 12, 124, 132],"float16"), Tensor([1, 2],"float32"), Tensor([49104, 4],"float32"), Tensor([49104, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 124, 136],"float16"), Tensor([1, 12, 124, 136],"float16"), Tensor([1, 2],"float32"), Tensor([50592, 4],"float32"), Tensor([50592, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 124, 140],"float16"), Tensor([1, 12, 124, 140],"float16"), Tensor([1, 2],"float32"), Tensor([52080, 4],"float32"), Tensor([52080, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 124, 144],"float16"), Tensor([1, 12, 124, 144],"float16"), Tensor([1, 2],"float32"), Tensor([53568, 4],"float32"), Tensor([53568, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 124, 148],"float16"), Tensor([1, 12, 124, 148],"float16"), Tensor([1, 2],"float32"), Tensor([55056, 4],"float32"), Tensor([55056, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 124, 152],"float16"), Tensor([1, 12, 124, 152],"float16"), Tensor([1, 2],"float32"), Tensor([56544, 4],"float32"), Tensor([56544, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 124, 156],"float16"), Tensor([1, 12, 124, 156],"float16"), Tensor([1, 2],"float32"), Tensor([58032, 4],"float32"), Tensor([58032, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 124, 160],"float16"), Tensor([1, 12, 124, 160],"float16"), Tensor([1, 2],"float32"), Tensor([59520, 4],"float32"), Tensor([59520, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 124, 164],"float16"), Tensor([1, 12, 124, 164],"float16"), Tensor([1, 2],"float32"), Tensor([61008, 4],"float32"), Tensor([61008, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 124, 168],"float16"), Tensor([1, 12, 124, 168],"float16"), Tensor([1, 2],"float32"), Tensor([62496, 4],"float32"), Tensor([62496, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 124, 96],"float16"), Tensor([1, 12, 124, 96],"float16"), Tensor([1, 2],"float32"), Tensor([35712, 4],"float32"), Tensor([35712, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 128, 108],"float16"), Tensor([1, 12, 128, 108],"float16"), Tensor([1, 2],"float32"), Tensor([41472, 4],"float32"), Tensor([41472, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 128, 112],"float16"), Tensor([1, 12, 128, 112],"float16"), Tensor([1, 2],"float32"), Tensor([43008, 4],"float32"), Tensor([43008, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 128, 120],"float16"), Tensor([1, 12, 128, 120],"float16"), Tensor([1, 2],"float32"), Tensor([46080, 4],"float32"), Tensor([46080, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 128, 124],"float16"), Tensor([1, 12, 128, 124],"float16"), Tensor([1, 2],"float32"), Tensor([47616, 4],"float32"), Tensor([47616, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 128, 128],"float16"), Tensor([1, 12, 128, 128],"float16"), Tensor([1, 2],"float32"), Tensor([49152, 4],"float32"), Tensor([49152, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 128, 132],"float16"), Tensor([1, 12, 128, 132],"float16"), Tensor([1, 2],"float32"), Tensor([50688, 4],"float32"), Tensor([50688, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 128, 136],"float16"), Tensor([1, 12, 128, 136],"float16"), Tensor([1, 2],"float32"), Tensor([52224, 4],"float32"), Tensor([52224, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 128, 140],"float16"), Tensor([1, 12, 128, 140],"float16"), Tensor([1, 2],"float32"), Tensor([53760, 4],"float32"), Tensor([53760, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 128, 144],"float16"), Tensor([1, 12, 128, 144],"float16"), Tensor([1, 2],"float32"), Tensor([55296, 4],"float32"), Tensor([55296, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 128, 148],"float16"), Tensor([1, 12, 128, 148],"float16"), Tensor([1, 2],"float32"), Tensor([56832, 4],"float32"), Tensor([56832, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 128, 152],"float16"), Tensor([1, 12, 128, 152],"float16"), Tensor([1, 2],"float32"), Tensor([58368, 4],"float32"), Tensor([58368, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 128, 156],"float16"), Tensor([1, 12, 128, 156],"float16"), Tensor([1, 2],"float32"), Tensor([59904, 4],"float32"), Tensor([59904, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 128, 160],"float16"), Tensor([1, 12, 128, 160],"float16"), Tensor([1, 2],"float32"), Tensor([61440, 4],"float32"), Tensor([61440, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 128, 164],"float16"), Tensor([1, 12, 128, 164],"float16"), Tensor([1, 2],"float32"), Tensor([62976, 4],"float32"), Tensor([62976, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 128, 168],"float16"), Tensor([1, 12, 128, 168],"float16"), Tensor([1, 2],"float32"), Tensor([64512, 4],"float32"), Tensor([64512, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 13, 15],"float16"), Tensor([1, 12, 13, 15],"float16"), Tensor([1, 2],"float32"), Tensor([585, 4],"float32"), Tensor([585, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 13, 16],"float16"), Tensor([1, 12, 13, 16],"float16"), Tensor([1, 2],"float32"), Tensor([624, 4],"float32"), Tensor([624, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 13, 17],"float16"), Tensor([1, 12, 13, 17],"float16"), Tensor([1, 2],"float32"), Tensor([663, 4],"float32"), Tensor([663, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 13, 18],"float16"), Tensor([1, 12, 13, 18],"float16"), Tensor([1, 2],"float32"), Tensor([702, 4],"float32"), Tensor([702, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 13, 19],"float16"), Tensor([1, 12, 13, 19],"float16"), Tensor([1, 2],"float32"), Tensor([741, 4],"float32"), Tensor([741, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 13, 20],"float16"), Tensor([1, 12, 13, 20],"float16"), Tensor([1, 2],"float32"), Tensor([780, 4],"float32"), Tensor([780, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 13, 21],"float16"), Tensor([1, 12, 13, 21],"float16"), Tensor([1, 2],"float32"), Tensor([819, 4],"float32"), Tensor([819, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 132, 104],"float16"), Tensor([1, 12, 132, 104],"float16"), Tensor([1, 2],"float32"), Tensor([41184, 4],"float32"), Tensor([41184, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 132, 108],"float16"), Tensor([1, 12, 132, 108],"float16"), Tensor([1, 2],"float32"), Tensor([42768, 4],"float32"), Tensor([42768, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 132, 124],"float16"), Tensor([1, 12, 132, 124],"float16"), Tensor([1, 2],"float32"), Tensor([49104, 4],"float32"), Tensor([49104, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 132, 128],"float16"), Tensor([1, 12, 132, 128],"float16"), Tensor([1, 2],"float32"), Tensor([50688, 4],"float32"), Tensor([50688, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 132, 132],"float16"), Tensor([1, 12, 132, 132],"float16"), Tensor([1, 2],"float32"), Tensor([52272, 4],"float32"), Tensor([52272, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 132, 136],"float16"), Tensor([1, 12, 132, 136],"float16"), Tensor([1, 2],"float32"), Tensor([53856, 4],"float32"), Tensor([53856, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 132, 140],"float16"), Tensor([1, 12, 132, 140],"float16"), Tensor([1, 2],"float32"), Tensor([55440, 4],"float32"), Tensor([55440, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 132, 144],"float16"), Tensor([1, 12, 132, 144],"float16"), Tensor([1, 2],"float32"), Tensor([57024, 4],"float32"), Tensor([57024, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 132, 148],"float16"), Tensor([1, 12, 132, 148],"float16"), Tensor([1, 2],"float32"), Tensor([58608, 4],"float32"), Tensor([58608, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 132, 152],"float16"), Tensor([1, 12, 132, 152],"float16"), Tensor([1, 2],"float32"), Tensor([60192, 4],"float32"), Tensor([60192, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 132, 156],"float16"), Tensor([1, 12, 132, 156],"float16"), Tensor([1, 2],"float32"), Tensor([61776, 4],"float32"), Tensor([61776, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 132, 160],"float16"), Tensor([1, 12, 132, 160],"float16"), Tensor([1, 2],"float32"), Tensor([63360, 4],"float32"), Tensor([63360, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 132, 164],"float16"), Tensor([1, 12, 132, 164],"float16"), Tensor([1, 2],"float32"), Tensor([64944, 4],"float32"), Tensor([64944, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 132, 168],"float16"), Tensor([1, 12, 132, 168],"float16"), Tensor([1, 2],"float32"), Tensor([66528, 4],"float32"), Tensor([66528, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 132, 96],"float16"), Tensor([1, 12, 132, 96],"float16"), Tensor([1, 2],"float32"), Tensor([38016, 4],"float32"), Tensor([38016, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 136, 108],"float16"), Tensor([1, 12, 136, 108],"float16"), Tensor([1, 2],"float32"), Tensor([44064, 4],"float32"), Tensor([44064, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 136, 112],"float16"), Tensor([1, 12, 136, 112],"float16"), Tensor([1, 2],"float32"), Tensor([45696, 4],"float32"), Tensor([45696, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 136, 116],"float16"), Tensor([1, 12, 136, 116],"float16"), Tensor([1, 2],"float32"), Tensor([47328, 4],"float32"), Tensor([47328, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 136, 120],"float16"), Tensor([1, 12, 136, 120],"float16"), Tensor([1, 2],"float32"), Tensor([48960, 4],"float32"), Tensor([48960, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 136, 124],"float16"), Tensor([1, 12, 136, 124],"float16"), Tensor([1, 2],"float32"), Tensor([50592, 4],"float32"), Tensor([50592, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 136, 128],"float16"), Tensor([1, 12, 136, 128],"float16"), Tensor([1, 2],"float32"), Tensor([52224, 4],"float32"), Tensor([52224, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 136, 132],"float16"), Tensor([1, 12, 136, 132],"float16"), Tensor([1, 2],"float32"), Tensor([53856, 4],"float32"), Tensor([53856, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 136, 136],"float16"), Tensor([1, 12, 136, 136],"float16"), Tensor([1, 2],"float32"), Tensor([55488, 4],"float32"), Tensor([55488, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 136, 140],"float16"), Tensor([1, 12, 136, 140],"float16"), Tensor([1, 2],"float32"), Tensor([57120, 4],"float32"), Tensor([57120, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 136, 144],"float16"), Tensor([1, 12, 136, 144],"float16"), Tensor([1, 2],"float32"), Tensor([58752, 4],"float32"), Tensor([58752, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 136, 148],"float16"), Tensor([1, 12, 136, 148],"float16"), Tensor([1, 2],"float32"), Tensor([60384, 4],"float32"), Tensor([60384, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 136, 152],"float16"), Tensor([1, 12, 136, 152],"float16"), Tensor([1, 2],"float32"), Tensor([62016, 4],"float32"), Tensor([62016, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 136, 156],"float16"), Tensor([1, 12, 136, 156],"float16"), Tensor([1, 2],"float32"), Tensor([63648, 4],"float32"), Tensor([63648, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 136, 160],"float16"), Tensor([1, 12, 136, 160],"float16"), Tensor([1, 2],"float32"), Tensor([65280, 4],"float32"), Tensor([65280, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 136, 164],"float16"), Tensor([1, 12, 136, 164],"float16"), Tensor([1, 2],"float32"), Tensor([66912, 4],"float32"), Tensor([66912, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 136, 168],"float16"), Tensor([1, 12, 136, 168],"float16"), Tensor([1, 2],"float32"), Tensor([68544, 4],"float32"), Tensor([68544, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 136, 88],"float16"), Tensor([1, 12, 136, 88],"float16"), Tensor([1, 2],"float32"), Tensor([35904, 4],"float32"), Tensor([35904, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 136, 96],"float16"), Tensor([1, 12, 136, 96],"float16"), Tensor([1, 2],"float32"), Tensor([39168, 4],"float32"), Tensor([39168, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 14, 14],"float16"), Tensor([1, 12, 14, 14],"float16"), Tensor([1, 2],"float32"), Tensor([588, 4],"float32"), Tensor([588, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 14, 16],"float16"), Tensor([1, 12, 14, 16],"float16"), Tensor([1, 2],"float32"), Tensor([672, 4],"float32"), Tensor([672, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 14, 17],"float16"), Tensor([1, 12, 14, 17],"float16"), Tensor([1, 2],"float32"), Tensor([714, 4],"float32"), Tensor([714, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 14, 18],"float16"), Tensor([1, 12, 14, 18],"float16"), Tensor([1, 2],"float32"), Tensor([756, 4],"float32"), Tensor([756, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 14, 19],"float16"), Tensor([1, 12, 14, 19],"float16"), Tensor([1, 2],"float32"), Tensor([798, 4],"float32"), Tensor([798, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 14, 20],"float16"), Tensor([1, 12, 14, 20],"float16"), Tensor([1, 2],"float32"), Tensor([840, 4],"float32"), Tensor([840, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 14, 21],"float16"), Tensor([1, 12, 14, 21],"float16"), Tensor([1, 2],"float32"), Tensor([882, 4],"float32"), Tensor([882, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 140, 112],"float16"), Tensor([1, 12, 140, 112],"float16"), Tensor([1, 2],"float32"), Tensor([47040, 4],"float32"), Tensor([47040, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 140, 120],"float16"), Tensor([1, 12, 140, 120],"float16"), Tensor([1, 2],"float32"), Tensor([50400, 4],"float32"), Tensor([50400, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 140, 124],"float16"), Tensor([1, 12, 140, 124],"float16"), Tensor([1, 2],"float32"), Tensor([52080, 4],"float32"), Tensor([52080, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 140, 128],"float16"), Tensor([1, 12, 140, 128],"float16"), Tensor([1, 2],"float32"), Tensor([53760, 4],"float32"), Tensor([53760, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 140, 132],"float16"), Tensor([1, 12, 140, 132],"float16"), Tensor([1, 2],"float32"), Tensor([55440, 4],"float32"), Tensor([55440, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 140, 136],"float16"), Tensor([1, 12, 140, 136],"float16"), Tensor([1, 2],"float32"), Tensor([57120, 4],"float32"), Tensor([57120, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 140, 140],"float16"), Tensor([1, 12, 140, 140],"float16"), Tensor([1, 2],"float32"), Tensor([58800, 4],"float32"), Tensor([58800, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 140, 144],"float16"), Tensor([1, 12, 140, 144],"float16"), Tensor([1, 2],"float32"), Tensor([60480, 4],"float32"), Tensor([60480, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 140, 148],"float16"), Tensor([1, 12, 140, 148],"float16"), Tensor([1, 2],"float32"), Tensor([62160, 4],"float32"), Tensor([62160, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 140, 152],"float16"), Tensor([1, 12, 140, 152],"float16"), Tensor([1, 2],"float32"), Tensor([63840, 4],"float32"), Tensor([63840, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 140, 156],"float16"), Tensor([1, 12, 140, 156],"float16"), Tensor([1, 2],"float32"), Tensor([65520, 4],"float32"), Tensor([65520, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 140, 164],"float16"), Tensor([1, 12, 140, 164],"float16"), Tensor([1, 2],"float32"), Tensor([68880, 4],"float32"), Tensor([68880, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 140, 168],"float16"), Tensor([1, 12, 140, 168],"float16"), Tensor([1, 2],"float32"), Tensor([70560, 4],"float32"), Tensor([70560, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 140, 96],"float16"), Tensor([1, 12, 140, 96],"float16"), Tensor([1, 2],"float32"), Tensor([40320, 4],"float32"), Tensor([40320, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 144, 108],"float16"), Tensor([1, 12, 144, 108],"float16"), Tensor([1, 2],"float32"), Tensor([46656, 4],"float32"), Tensor([46656, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 144, 112],"float16"), Tensor([1, 12, 144, 112],"float16"), Tensor([1, 2],"float32"), Tensor([48384, 4],"float32"), Tensor([48384, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 144, 120],"float16"), Tensor([1, 12, 144, 120],"float16"), Tensor([1, 2],"float32"), Tensor([51840, 4],"float32"), Tensor([51840, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 144, 124],"float16"), Tensor([1, 12, 144, 124],"float16"), Tensor([1, 2],"float32"), Tensor([53568, 4],"float32"), Tensor([53568, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 144, 128],"float16"), Tensor([1, 12, 144, 128],"float16"), Tensor([1, 2],"float32"), Tensor([55296, 4],"float32"), Tensor([55296, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 144, 132],"float16"), Tensor([1, 12, 144, 132],"float16"), Tensor([1, 2],"float32"), Tensor([57024, 4],"float32"), Tensor([57024, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 144, 136],"float16"), Tensor([1, 12, 144, 136],"float16"), Tensor([1, 2],"float32"), Tensor([58752, 4],"float32"), Tensor([58752, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 144, 140],"float16"), Tensor([1, 12, 144, 140],"float16"), Tensor([1, 2],"float32"), Tensor([60480, 4],"float32"), Tensor([60480, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 144, 144],"float16"), Tensor([1, 12, 144, 144],"float16"), Tensor([1, 2],"float32"), Tensor([62208, 4],"float32"), Tensor([62208, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 144, 148],"float16"), Tensor([1, 12, 144, 148],"float16"), Tensor([1, 2],"float32"), Tensor([63936, 4],"float32"), Tensor([63936, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 144, 152],"float16"), Tensor([1, 12, 144, 152],"float16"), Tensor([1, 2],"float32"), Tensor([65664, 4],"float32"), Tensor([65664, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 144, 156],"float16"), Tensor([1, 12, 144, 156],"float16"), Tensor([1, 2],"float32"), Tensor([67392, 4],"float32"), Tensor([67392, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 144, 160],"float16"), Tensor([1, 12, 144, 160],"float16"), Tensor([1, 2],"float32"), Tensor([69120, 4],"float32"), Tensor([69120, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 144, 164],"float16"), Tensor([1, 12, 144, 164],"float16"), Tensor([1, 2],"float32"), Tensor([70848, 4],"float32"), Tensor([70848, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 144, 168],"float16"), Tensor([1, 12, 144, 168],"float16"), Tensor([1, 2],"float32"), Tensor([72576, 4],"float32"), Tensor([72576, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 148, 120],"float16"), Tensor([1, 12, 148, 120],"float16"), Tensor([1, 2],"float32"), Tensor([53280, 4],"float32"), Tensor([53280, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 148, 128],"float16"), Tensor([1, 12, 148, 128],"float16"), Tensor([1, 2],"float32"), Tensor([56832, 4],"float32"), Tensor([56832, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 148, 132],"float16"), Tensor([1, 12, 148, 132],"float16"), Tensor([1, 2],"float32"), Tensor([58608, 4],"float32"), Tensor([58608, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 148, 136],"float16"), Tensor([1, 12, 148, 136],"float16"), Tensor([1, 2],"float32"), Tensor([60384, 4],"float32"), Tensor([60384, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 148, 140],"float16"), Tensor([1, 12, 148, 140],"float16"), Tensor([1, 2],"float32"), Tensor([62160, 4],"float32"), Tensor([62160, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 148, 144],"float16"), Tensor([1, 12, 148, 144],"float16"), Tensor([1, 2],"float32"), Tensor([63936, 4],"float32"), Tensor([63936, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 148, 148],"float16"), Tensor([1, 12, 148, 148],"float16"), Tensor([1, 2],"float32"), Tensor([65712, 4],"float32"), Tensor([65712, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 148, 152],"float16"), Tensor([1, 12, 148, 152],"float16"), Tensor([1, 2],"float32"), Tensor([67488, 4],"float32"), Tensor([67488, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 148, 156],"float16"), Tensor([1, 12, 148, 156],"float16"), Tensor([1, 2],"float32"), Tensor([69264, 4],"float32"), Tensor([69264, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 148, 160],"float16"), Tensor([1, 12, 148, 160],"float16"), Tensor([1, 2],"float32"), Tensor([71040, 4],"float32"), Tensor([71040, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 148, 164],"float16"), Tensor([1, 12, 148, 164],"float16"), Tensor([1, 2],"float32"), Tensor([72816, 4],"float32"), Tensor([72816, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 148, 168],"float16"), Tensor([1, 12, 148, 168],"float16"), Tensor([1, 2],"float32"), Tensor([74592, 4],"float32"), Tensor([74592, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 15, 13],"float16"), Tensor([1, 12, 15, 13],"float16"), Tensor([1, 2],"float32"), Tensor([585, 4],"float32"), Tensor([585, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 15, 15],"float16"), Tensor([1, 12, 15, 15],"float16"), Tensor([1, 2],"float32"), Tensor([675, 4],"float32"), Tensor([675, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 15, 16],"float16"), Tensor([1, 12, 15, 16],"float16"), Tensor([1, 2],"float32"), Tensor([720, 4],"float32"), Tensor([720, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 15, 17],"float16"), Tensor([1, 12, 15, 17],"float16"), Tensor([1, 2],"float32"), Tensor([765, 4],"float32"), Tensor([765, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 15, 18],"float16"), Tensor([1, 12, 15, 18],"float16"), Tensor([1, 2],"float32"), Tensor([810, 4],"float32"), Tensor([810, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 15, 19],"float16"), Tensor([1, 12, 15, 19],"float16"), Tensor([1, 2],"float32"), Tensor([855, 4],"float32"), Tensor([855, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 15, 20],"float16"), Tensor([1, 12, 15, 20],"float16"), Tensor([1, 2],"float32"), Tensor([900, 4],"float32"), Tensor([900, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 15, 21],"float16"), Tensor([1, 12, 15, 21],"float16"), Tensor([1, 2],"float32"), Tensor([945, 4],"float32"), Tensor([945, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 152, 100],"float16"), Tensor([1, 12, 152, 100],"float16"), Tensor([1, 2],"float32"), Tensor([45600, 4],"float32"), Tensor([45600, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 152, 112],"float16"), Tensor([1, 12, 152, 112],"float16"), Tensor([1, 2],"float32"), Tensor([51072, 4],"float32"), Tensor([51072, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 152, 120],"float16"), Tensor([1, 12, 152, 120],"float16"), Tensor([1, 2],"float32"), Tensor([54720, 4],"float32"), Tensor([54720, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 152, 124],"float16"), Tensor([1, 12, 152, 124],"float16"), Tensor([1, 2],"float32"), Tensor([56544, 4],"float32"), Tensor([56544, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 152, 128],"float16"), Tensor([1, 12, 152, 128],"float16"), Tensor([1, 2],"float32"), Tensor([58368, 4],"float32"), Tensor([58368, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 152, 132],"float16"), Tensor([1, 12, 152, 132],"float16"), Tensor([1, 2],"float32"), Tensor([60192, 4],"float32"), Tensor([60192, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 152, 136],"float16"), Tensor([1, 12, 152, 136],"float16"), Tensor([1, 2],"float32"), Tensor([62016, 4],"float32"), Tensor([62016, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 152, 140],"float16"), Tensor([1, 12, 152, 140],"float16"), Tensor([1, 2],"float32"), Tensor([63840, 4],"float32"), Tensor([63840, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 152, 144],"float16"), Tensor([1, 12, 152, 144],"float16"), Tensor([1, 2],"float32"), Tensor([65664, 4],"float32"), Tensor([65664, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 152, 148],"float16"), Tensor([1, 12, 152, 148],"float16"), Tensor([1, 2],"float32"), Tensor([67488, 4],"float32"), Tensor([67488, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 152, 152],"float16"), Tensor([1, 12, 152, 152],"float16"), Tensor([1, 2],"float32"), Tensor([69312, 4],"float32"), Tensor([69312, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 152, 156],"float16"), Tensor([1, 12, 152, 156],"float16"), Tensor([1, 2],"float32"), Tensor([71136, 4],"float32"), Tensor([71136, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 152, 160],"float16"), Tensor([1, 12, 152, 160],"float16"), Tensor([1, 2],"float32"), Tensor([72960, 4],"float32"), Tensor([72960, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 152, 164],"float16"), Tensor([1, 12, 152, 164],"float16"), Tensor([1, 2],"float32"), Tensor([74784, 4],"float32"), Tensor([74784, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 152, 168],"float16"), Tensor([1, 12, 152, 168],"float16"), Tensor([1, 2],"float32"), Tensor([76608, 4],"float32"), Tensor([76608, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 156, 112],"float16"), Tensor([1, 12, 156, 112],"float16"), Tensor([1, 2],"float32"), Tensor([52416, 4],"float32"), Tensor([52416, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 156, 120],"float16"), Tensor([1, 12, 156, 120],"float16"), Tensor([1, 2],"float32"), Tensor([56160, 4],"float32"), Tensor([56160, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 156, 124],"float16"), Tensor([1, 12, 156, 124],"float16"), Tensor([1, 2],"float32"), Tensor([58032, 4],"float32"), Tensor([58032, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 156, 140],"float16"), Tensor([1, 12, 156, 140],"float16"), Tensor([1, 2],"float32"), Tensor([65520, 4],"float32"), Tensor([65520, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 156, 148],"float16"), Tensor([1, 12, 156, 148],"float16"), Tensor([1, 2],"float32"), Tensor([69264, 4],"float32"), Tensor([69264, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 156, 152],"float16"), Tensor([1, 12, 156, 152],"float16"), Tensor([1, 2],"float32"), Tensor([71136, 4],"float32"), Tensor([71136, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 16, 12],"float16"), Tensor([1, 12, 16, 12],"float16"), Tensor([1, 2],"float32"), Tensor([576, 4],"float32"), Tensor([576, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 16, 14],"float16"), Tensor([1, 12, 16, 14],"float16"), Tensor([1, 2],"float32"), Tensor([672, 4],"float32"), Tensor([672, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 16, 15],"float16"), Tensor([1, 12, 16, 15],"float16"), Tensor([1, 2],"float32"), Tensor([720, 4],"float32"), Tensor([720, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 16, 16],"float16"), Tensor([1, 12, 16, 16],"float16"), Tensor([1, 2],"float32"), Tensor([768, 4],"float32"), Tensor([768, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 16, 17],"float16"), Tensor([1, 12, 16, 17],"float16"), Tensor([1, 2],"float32"), Tensor([816, 4],"float32"), Tensor([816, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 16, 18],"float16"), Tensor([1, 12, 16, 18],"float16"), Tensor([1, 2],"float32"), Tensor([864, 4],"float32"), Tensor([864, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 16, 19],"float16"), Tensor([1, 12, 16, 19],"float16"), Tensor([1, 2],"float32"), Tensor([912, 4],"float32"), Tensor([912, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 16, 20],"float16"), Tensor([1, 12, 16, 20],"float16"), Tensor([1, 2],"float32"), Tensor([960, 4],"float32"), Tensor([960, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 16, 21],"float16"), Tensor([1, 12, 16, 21],"float16"), Tensor([1, 2],"float32"), Tensor([1008, 4],"float32"), Tensor([1008, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 160, 128],"float16"), Tensor([1, 12, 160, 128],"float16"), Tensor([1, 2],"float32"), Tensor([61440, 4],"float32"), Tensor([61440, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 160, 136],"float16"), Tensor([1, 12, 160, 136],"float16"), Tensor([1, 2],"float32"), Tensor([65280, 4],"float32"), Tensor([65280, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 160, 144],"float16"), Tensor([1, 12, 160, 144],"float16"), Tensor([1, 2],"float32"), Tensor([69120, 4],"float32"), Tensor([69120, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 160, 152],"float16"), Tensor([1, 12, 160, 152],"float16"), Tensor([1, 2],"float32"), Tensor([72960, 4],"float32"), Tensor([72960, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 160, 168],"float16"), Tensor([1, 12, 160, 168],"float16"), Tensor([1, 2],"float32"), Tensor([80640, 4],"float32"), Tensor([80640, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 164, 100],"float16"), Tensor([1, 12, 164, 100],"float16"), Tensor([1, 2],"float32"), Tensor([49200, 4],"float32"), Tensor([49200, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 164, 124],"float16"), Tensor([1, 12, 164, 124],"float16"), Tensor([1, 2],"float32"), Tensor([61008, 4],"float32"), Tensor([61008, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 164, 128],"float16"), Tensor([1, 12, 164, 128],"float16"), Tensor([1, 2],"float32"), Tensor([62976, 4],"float32"), Tensor([62976, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 164, 136],"float16"), Tensor([1, 12, 164, 136],"float16"), Tensor([1, 2],"float32"), Tensor([66912, 4],"float32"), Tensor([66912, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 164, 140],"float16"), Tensor([1, 12, 164, 140],"float16"), Tensor([1, 2],"float32"), Tensor([68880, 4],"float32"), Tensor([68880, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 164, 144],"float16"), Tensor([1, 12, 164, 144],"float16"), Tensor([1, 2],"float32"), Tensor([70848, 4],"float32"), Tensor([70848, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 164, 168],"float16"), Tensor([1, 12, 164, 168],"float16"), Tensor([1, 2],"float32"), Tensor([82656, 4],"float32"), Tensor([82656, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 168, 120],"float16"), Tensor([1, 12, 168, 120],"float16"), Tensor([1, 2],"float32"), Tensor([60480, 4],"float32"), Tensor([60480, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 168, 124],"float16"), Tensor([1, 12, 168, 124],"float16"), Tensor([1, 2],"float32"), Tensor([62496, 4],"float32"), Tensor([62496, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 168, 128],"float16"), Tensor([1, 12, 168, 128],"float16"), Tensor([1, 2],"float32"), Tensor([64512, 4],"float32"), Tensor([64512, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 168, 132],"float16"), Tensor([1, 12, 168, 132],"float16"), Tensor([1, 2],"float32"), Tensor([66528, 4],"float32"), Tensor([66528, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 168, 140],"float16"), Tensor([1, 12, 168, 140],"float16"), Tensor([1, 2],"float32"), Tensor([70560, 4],"float32"), Tensor([70560, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 168, 144],"float16"), Tensor([1, 12, 168, 144],"float16"), Tensor([1, 2],"float32"), Tensor([72576, 4],"float32"), Tensor([72576, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 168, 148],"float16"), Tensor([1, 12, 168, 148],"float16"), Tensor([1, 2],"float32"), Tensor([74592, 4],"float32"), Tensor([74592, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 168, 152],"float16"), Tensor([1, 12, 168, 152],"float16"), Tensor([1, 2],"float32"), Tensor([76608, 4],"float32"), Tensor([76608, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 168, 168],"float16"), Tensor([1, 12, 168, 168],"float16"), Tensor([1, 2],"float32"), Tensor([84672, 4],"float32"), Tensor([84672, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 168, 248],"float16"), Tensor([1, 12, 168, 248],"float16"), Tensor([1, 2],"float32"), Tensor([124992, 4],"float32"), Tensor([124992, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 168, 256],"float16"), Tensor([1, 12, 168, 256],"float16"), Tensor([1, 2],"float32"), Tensor([129024, 4],"float32"), Tensor([129024, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 17, 11],"float16"), Tensor([1, 12, 17, 11],"float16"), Tensor([1, 2],"float32"), Tensor([561, 4],"float32"), Tensor([561, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 17, 12],"float16"), Tensor([1, 12, 17, 12],"float16"), Tensor([1, 2],"float32"), Tensor([612, 4],"float32"), Tensor([612, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 17, 13],"float16"), Tensor([1, 12, 17, 13],"float16"), Tensor([1, 2],"float32"), Tensor([663, 4],"float32"), Tensor([663, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 17, 14],"float16"), Tensor([1, 12, 17, 14],"float16"), Tensor([1, 2],"float32"), Tensor([714, 4],"float32"), Tensor([714, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 17, 15],"float16"), Tensor([1, 12, 17, 15],"float16"), Tensor([1, 2],"float32"), Tensor([765, 4],"float32"), Tensor([765, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 17, 16],"float16"), Tensor([1, 12, 17, 16],"float16"), Tensor([1, 2],"float32"), Tensor([816, 4],"float32"), Tensor([816, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 17, 17],"float16"), Tensor([1, 12, 17, 17],"float16"), Tensor([1, 2],"float32"), Tensor([867, 4],"float32"), Tensor([867, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 17, 18],"float16"), Tensor([1, 12, 17, 18],"float16"), Tensor([1, 2],"float32"), Tensor([918, 4],"float32"), Tensor([918, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 17, 19],"float16"), Tensor([1, 12, 17, 19],"float16"), Tensor([1, 2],"float32"), Tensor([969, 4],"float32"), Tensor([969, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 17, 20],"float16"), Tensor([1, 12, 17, 20],"float16"), Tensor([1, 2],"float32"), Tensor([1020, 4],"float32"), Tensor([1020, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 17, 21],"float16"), Tensor([1, 12, 17, 21],"float16"), Tensor([1, 2],"float32"), Tensor([1071, 4],"float32"), Tensor([1071, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 176, 240],"float16"), Tensor([1, 12, 176, 240],"float16"), Tensor([1, 2],"float32"), Tensor([126720, 4],"float32"), Tensor([126720, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 176, 256],"float16"), Tensor([1, 12, 176, 256],"float16"), Tensor([1, 2],"float32"), Tensor([135168, 4],"float32"), Tensor([135168, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 176, 264],"float16"), Tensor([1, 12, 176, 264],"float16"), Tensor([1, 2],"float32"), Tensor([139392, 4],"float32"), Tensor([139392, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 176, 272],"float16"), Tensor([1, 12, 176, 272],"float16"), Tensor([1, 2],"float32"), Tensor([143616, 4],"float32"), Tensor([143616, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 176, 296],"float16"), Tensor([1, 12, 176, 296],"float16"), Tensor([1, 2],"float32"), Tensor([156288, 4],"float32"), Tensor([156288, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 176, 336],"float16"), Tensor([1, 12, 176, 336],"float16"), Tensor([1, 2],"float32"), Tensor([177408, 4],"float32"), Tensor([177408, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 18, 12],"float16"), Tensor([1, 12, 18, 12],"float16"), Tensor([1, 2],"float32"), Tensor([648, 4],"float32"), Tensor([648, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 18, 14],"float16"), Tensor([1, 12, 18, 14],"float16"), Tensor([1, 2],"float32"), Tensor([756, 4],"float32"), Tensor([756, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 18, 15],"float16"), Tensor([1, 12, 18, 15],"float16"), Tensor([1, 2],"float32"), Tensor([810, 4],"float32"), Tensor([810, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 18, 16],"float16"), Tensor([1, 12, 18, 16],"float16"), Tensor([1, 2],"float32"), Tensor([864, 4],"float32"), Tensor([864, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 18, 17],"float16"), Tensor([1, 12, 18, 17],"float16"), Tensor([1, 2],"float32"), Tensor([918, 4],"float32"), Tensor([918, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 18, 18],"float16"), Tensor([1, 12, 18, 18],"float16"), Tensor([1, 2],"float32"), Tensor([972, 4],"float32"), Tensor([972, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 18, 19],"float16"), Tensor([1, 12, 18, 19],"float16"), Tensor([1, 2],"float32"), Tensor([1026, 4],"float32"), Tensor([1026, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 18, 20],"float16"), Tensor([1, 12, 18, 20],"float16"), Tensor([1, 2],"float32"), Tensor([1080, 4],"float32"), Tensor([1080, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 18, 21],"float16"), Tensor([1, 12, 18, 21],"float16"), Tensor([1, 2],"float32"), Tensor([1134, 4],"float32"), Tensor([1134, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 184, 240],"float16"), Tensor([1, 12, 184, 240],"float16"), Tensor([1, 2],"float32"), Tensor([132480, 4],"float32"), Tensor([132480, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 184, 248],"float16"), Tensor([1, 12, 184, 248],"float16"), Tensor([1, 2],"float32"), Tensor([136896, 4],"float32"), Tensor([136896, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 184, 256],"float16"), Tensor([1, 12, 184, 256],"float16"), Tensor([1, 2],"float32"), Tensor([141312, 4],"float32"), Tensor([141312, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 184, 264],"float16"), Tensor([1, 12, 184, 264],"float16"), Tensor([1, 2],"float32"), Tensor([145728, 4],"float32"), Tensor([145728, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 184, 272],"float16"), Tensor([1, 12, 184, 272],"float16"), Tensor([1, 2],"float32"), Tensor([150144, 4],"float32"), Tensor([150144, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 184, 280],"float16"), Tensor([1, 12, 184, 280],"float16"), Tensor([1, 2],"float32"), Tensor([154560, 4],"float32"), Tensor([154560, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 184, 296],"float16"), Tensor([1, 12, 184, 296],"float16"), Tensor([1, 2],"float32"), Tensor([163392, 4],"float32"), Tensor([163392, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 184, 304],"float16"), Tensor([1, 12, 184, 304],"float16"), Tensor([1, 2],"float32"), Tensor([167808, 4],"float32"), Tensor([167808, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 184, 312],"float16"), Tensor([1, 12, 184, 312],"float16"), Tensor([1, 2],"float32"), Tensor([172224, 4],"float32"), Tensor([172224, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 184, 320],"float16"), Tensor([1, 12, 184, 320],"float16"), Tensor([1, 2],"float32"), Tensor([176640, 4],"float32"), Tensor([176640, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 184, 328],"float16"), Tensor([1, 12, 184, 328],"float16"), Tensor([1, 2],"float32"), Tensor([181056, 4],"float32"), Tensor([181056, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 184, 336],"float16"), Tensor([1, 12, 184, 336],"float16"), Tensor([1, 2],"float32"), Tensor([185472, 4],"float32"), Tensor([185472, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 19, 13],"float16"), Tensor([1, 12, 19, 13],"float16"), Tensor([1, 2],"float32"), Tensor([741, 4],"float32"), Tensor([741, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 19, 14],"float16"), Tensor([1, 12, 19, 14],"float16"), Tensor([1, 2],"float32"), Tensor([798, 4],"float32"), Tensor([798, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 19, 15],"float16"), Tensor([1, 12, 19, 15],"float16"), Tensor([1, 2],"float32"), Tensor([855, 4],"float32"), Tensor([855, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 19, 16],"float16"), Tensor([1, 12, 19, 16],"float16"), Tensor([1, 2],"float32"), Tensor([912, 4],"float32"), Tensor([912, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 19, 17],"float16"), Tensor([1, 12, 19, 17],"float16"), Tensor([1, 2],"float32"), Tensor([969, 4],"float32"), Tensor([969, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 19, 18],"float16"), Tensor([1, 12, 19, 18],"float16"), Tensor([1, 2],"float32"), Tensor([1026, 4],"float32"), Tensor([1026, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 19, 19],"float16"), Tensor([1, 12, 19, 19],"float16"), Tensor([1, 2],"float32"), Tensor([1083, 4],"float32"), Tensor([1083, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 19, 20],"float16"), Tensor([1, 12, 19, 20],"float16"), Tensor([1, 2],"float32"), Tensor([1140, 4],"float32"), Tensor([1140, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 19, 21],"float16"), Tensor([1, 12, 19, 21],"float16"), Tensor([1, 2],"float32"), Tensor([1197, 4],"float32"), Tensor([1197, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 192, 240],"float16"), Tensor([1, 12, 192, 240],"float16"), Tensor([1, 2],"float32"), Tensor([138240, 4],"float32"), Tensor([138240, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 192, 248],"float16"), Tensor([1, 12, 192, 248],"float16"), Tensor([1, 2],"float32"), Tensor([142848, 4],"float32"), Tensor([142848, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 192, 256],"float16"), Tensor([1, 12, 192, 256],"float16"), Tensor([1, 2],"float32"), Tensor([147456, 4],"float32"), Tensor([147456, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 192, 264],"float16"), Tensor([1, 12, 192, 264],"float16"), Tensor([1, 2],"float32"), Tensor([152064, 4],"float32"), Tensor([152064, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 192, 272],"float16"), Tensor([1, 12, 192, 272],"float16"), Tensor([1, 2],"float32"), Tensor([156672, 4],"float32"), Tensor([156672, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 192, 280],"float16"), Tensor([1, 12, 192, 280],"float16"), Tensor([1, 2],"float32"), Tensor([161280, 4],"float32"), Tensor([161280, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 192, 288],"float16"), Tensor([1, 12, 192, 288],"float16"), Tensor([1, 2],"float32"), Tensor([165888, 4],"float32"), Tensor([165888, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 192, 296],"float16"), Tensor([1, 12, 192, 296],"float16"), Tensor([1, 2],"float32"), Tensor([170496, 4],"float32"), Tensor([170496, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 192, 304],"float16"), Tensor([1, 12, 192, 304],"float16"), Tensor([1, 2],"float32"), Tensor([175104, 4],"float32"), Tensor([175104, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 192, 320],"float16"), Tensor([1, 12, 192, 320],"float16"), Tensor([1, 2],"float32"), Tensor([184320, 4],"float32"), Tensor([184320, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 192, 328],"float16"), Tensor([1, 12, 192, 328],"float16"), Tensor([1, 2],"float32"), Tensor([188928, 4],"float32"), Tensor([188928, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 192, 336],"float16"), Tensor([1, 12, 192, 336],"float16"), Tensor([1, 2],"float32"), Tensor([193536, 4],"float32"), Tensor([193536, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 20, 14],"float16"), Tensor([1, 12, 20, 14],"float16"), Tensor([1, 2],"float32"), Tensor([840, 4],"float32"), Tensor([840, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 20, 15],"float16"), Tensor([1, 12, 20, 15],"float16"), Tensor([1, 2],"float32"), Tensor([900, 4],"float32"), Tensor([900, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 20, 16],"float16"), Tensor([1, 12, 20, 16],"float16"), Tensor([1, 2],"float32"), Tensor([960, 4],"float32"), Tensor([960, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 20, 17],"float16"), Tensor([1, 12, 20, 17],"float16"), Tensor([1, 2],"float32"), Tensor([1020, 4],"float32"), Tensor([1020, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 20, 18],"float16"), Tensor([1, 12, 20, 18],"float16"), Tensor([1, 2],"float32"), Tensor([1080, 4],"float32"), Tensor([1080, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 20, 19],"float16"), Tensor([1, 12, 20, 19],"float16"), Tensor([1, 2],"float32"), Tensor([1140, 4],"float32"), Tensor([1140, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 20, 21],"float16"), Tensor([1, 12, 20, 21],"float16"), Tensor([1, 2],"float32"), Tensor([1260, 4],"float32"), Tensor([1260, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 200, 240],"float16"), Tensor([1, 12, 200, 240],"float16"), Tensor([1, 2],"float32"), Tensor([144000, 4],"float32"), Tensor([144000, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 200, 248],"float16"), Tensor([1, 12, 200, 248],"float16"), Tensor([1, 2],"float32"), Tensor([148800, 4],"float32"), Tensor([148800, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 200, 256],"float16"), Tensor([1, 12, 200, 256],"float16"), Tensor([1, 2],"float32"), Tensor([153600, 4],"float32"), Tensor([153600, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 200, 264],"float16"), Tensor([1, 12, 200, 264],"float16"), Tensor([1, 2],"float32"), Tensor([158400, 4],"float32"), Tensor([158400, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 200, 272],"float16"), Tensor([1, 12, 200, 272],"float16"), Tensor([1, 2],"float32"), Tensor([163200, 4],"float32"), Tensor([163200, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 200, 280],"float16"), Tensor([1, 12, 200, 280],"float16"), Tensor([1, 2],"float32"), Tensor([168000, 4],"float32"), Tensor([168000, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 200, 288],"float16"), Tensor([1, 12, 200, 288],"float16"), Tensor([1, 2],"float32"), Tensor([172800, 4],"float32"), Tensor([172800, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 200, 296],"float16"), Tensor([1, 12, 200, 296],"float16"), Tensor([1, 2],"float32"), Tensor([177600, 4],"float32"), Tensor([177600, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 200, 304],"float16"), Tensor([1, 12, 200, 304],"float16"), Tensor([1, 2],"float32"), Tensor([182400, 4],"float32"), Tensor([182400, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 200, 312],"float16"), Tensor([1, 12, 200, 312],"float16"), Tensor([1, 2],"float32"), Tensor([187200, 4],"float32"), Tensor([187200, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 200, 320],"float16"), Tensor([1, 12, 200, 320],"float16"), Tensor([1, 2],"float32"), Tensor([192000, 4],"float32"), Tensor([192000, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 200, 328],"float16"), Tensor([1, 12, 200, 328],"float16"), Tensor([1, 2],"float32"), Tensor([196800, 4],"float32"), Tensor([196800, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 200, 336],"float16"), Tensor([1, 12, 200, 336],"float16"), Tensor([1, 2],"float32"), Tensor([201600, 4],"float32"), Tensor([201600, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 208, 256],"float16"), Tensor([1, 12, 208, 256],"float16"), Tensor([1, 2],"float32"), Tensor([159744, 4],"float32"), Tensor([159744, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 208, 288],"float16"), Tensor([1, 12, 208, 288],"float16"), Tensor([1, 2],"float32"), Tensor([179712, 4],"float32"), Tensor([179712, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 208, 296],"float16"), Tensor([1, 12, 208, 296],"float16"), Tensor([1, 2],"float32"), Tensor([184704, 4],"float32"), Tensor([184704, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 208, 304],"float16"), Tensor([1, 12, 208, 304],"float16"), Tensor([1, 2],"float32"), Tensor([189696, 4],"float32"), Tensor([189696, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 208, 328],"float16"), Tensor([1, 12, 208, 328],"float16"), Tensor([1, 2],"float32"), Tensor([204672, 4],"float32"), Tensor([204672, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 208, 336],"float16"), Tensor([1, 12, 208, 336],"float16"), Tensor([1, 2],"float32"), Tensor([209664, 4],"float32"), Tensor([209664, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 21, 13],"float16"), Tensor([1, 12, 21, 13],"float16"), Tensor([1, 2],"float32"), Tensor([819, 4],"float32"), Tensor([819, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 21, 15],"float16"), Tensor([1, 12, 21, 15],"float16"), Tensor([1, 2],"float32"), Tensor([945, 4],"float32"), Tensor([945, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 21, 16],"float16"), Tensor([1, 12, 21, 16],"float16"), Tensor([1, 2],"float32"), Tensor([1008, 4],"float32"), Tensor([1008, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 21, 17],"float16"), Tensor([1, 12, 21, 17],"float16"), Tensor([1, 2],"float32"), Tensor([1071, 4],"float32"), Tensor([1071, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 21, 18],"float16"), Tensor([1, 12, 21, 18],"float16"), Tensor([1, 2],"float32"), Tensor([1134, 4],"float32"), Tensor([1134, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 21, 19],"float16"), Tensor([1, 12, 21, 19],"float16"), Tensor([1, 2],"float32"), Tensor([1197, 4],"float32"), Tensor([1197, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 21, 21],"float16"), Tensor([1, 12, 21, 21],"float16"), Tensor([1, 2],"float32"), Tensor([1323, 4],"float32"), Tensor([1323, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 21, 31],"float16"), Tensor([1, 12, 21, 31],"float16"), Tensor([1, 2],"float32"), Tensor([1953, 4],"float32"), Tensor([1953, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 21, 32],"float16"), Tensor([1, 12, 21, 32],"float16"), Tensor([1, 2],"float32"), Tensor([2016, 4],"float32"), Tensor([2016, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 216, 224],"float16"), Tensor([1, 12, 216, 224],"float16"), Tensor([1, 2],"float32"), Tensor([145152, 4],"float32"), Tensor([145152, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 216, 248],"float16"), Tensor([1, 12, 216, 248],"float16"), Tensor([1, 2],"float32"), Tensor([160704, 4],"float32"), Tensor([160704, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 216, 256],"float16"), Tensor([1, 12, 216, 256],"float16"), Tensor([1, 2],"float32"), Tensor([165888, 4],"float32"), Tensor([165888, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 216, 264],"float16"), Tensor([1, 12, 216, 264],"float16"), Tensor([1, 2],"float32"), Tensor([171072, 4],"float32"), Tensor([171072, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 216, 272],"float16"), Tensor([1, 12, 216, 272],"float16"), Tensor([1, 2],"float32"), Tensor([176256, 4],"float32"), Tensor([176256, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 216, 280],"float16"), Tensor([1, 12, 216, 280],"float16"), Tensor([1, 2],"float32"), Tensor([181440, 4],"float32"), Tensor([181440, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 216, 288],"float16"), Tensor([1, 12, 216, 288],"float16"), Tensor([1, 2],"float32"), Tensor([186624, 4],"float32"), Tensor([186624, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 216, 304],"float16"), Tensor([1, 12, 216, 304],"float16"), Tensor([1, 2],"float32"), Tensor([196992, 4],"float32"), Tensor([196992, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 216, 312],"float16"), Tensor([1, 12, 216, 312],"float16"), Tensor([1, 2],"float32"), Tensor([202176, 4],"float32"), Tensor([202176, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 216, 328],"float16"), Tensor([1, 12, 216, 328],"float16"), Tensor([1, 2],"float32"), Tensor([212544, 4],"float32"), Tensor([212544, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 216, 336],"float16"), Tensor([1, 12, 216, 336],"float16"), Tensor([1, 2],"float32"), Tensor([217728, 4],"float32"), Tensor([217728, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 22, 30],"float16"), Tensor([1, 12, 22, 30],"float16"), Tensor([1, 2],"float32"), Tensor([1980, 4],"float32"), Tensor([1980, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 22, 32],"float16"), Tensor([1, 12, 22, 32],"float16"), Tensor([1, 2],"float32"), Tensor([2112, 4],"float32"), Tensor([2112, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 22, 33],"float16"), Tensor([1, 12, 22, 33],"float16"), Tensor([1, 2],"float32"), Tensor([2178, 4],"float32"), Tensor([2178, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 22, 34],"float16"), Tensor([1, 12, 22, 34],"float16"), Tensor([1, 2],"float32"), Tensor([2244, 4],"float32"), Tensor([2244, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 22, 37],"float16"), Tensor([1, 12, 22, 37],"float16"), Tensor([1, 2],"float32"), Tensor([2442, 4],"float32"), Tensor([2442, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 22, 42],"float16"), Tensor([1, 12, 22, 42],"float16"), Tensor([1, 2],"float32"), Tensor([2772, 4],"float32"), Tensor([2772, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 224, 248],"float16"), Tensor([1, 12, 224, 248],"float16"), Tensor([1, 2],"float32"), Tensor([166656, 4],"float32"), Tensor([166656, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 224, 256],"float16"), Tensor([1, 12, 224, 256],"float16"), Tensor([1, 2],"float32"), Tensor([172032, 4],"float32"), Tensor([172032, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 224, 264],"float16"), Tensor([1, 12, 224, 264],"float16"), Tensor([1, 2],"float32"), Tensor([177408, 4],"float32"), Tensor([177408, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 224, 272],"float16"), Tensor([1, 12, 224, 272],"float16"), Tensor([1, 2],"float32"), Tensor([182784, 4],"float32"), Tensor([182784, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 224, 280],"float16"), Tensor([1, 12, 224, 280],"float16"), Tensor([1, 2],"float32"), Tensor([188160, 4],"float32"), Tensor([188160, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 224, 288],"float16"), Tensor([1, 12, 224, 288],"float16"), Tensor([1, 2],"float32"), Tensor([193536, 4],"float32"), Tensor([193536, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 224, 296],"float16"), Tensor([1, 12, 224, 296],"float16"), Tensor([1, 2],"float32"), Tensor([198912, 4],"float32"), Tensor([198912, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 224, 304],"float16"), Tensor([1, 12, 224, 304],"float16"), Tensor([1, 2],"float32"), Tensor([204288, 4],"float32"), Tensor([204288, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 224, 312],"float16"), Tensor([1, 12, 224, 312],"float16"), Tensor([1, 2],"float32"), Tensor([209664, 4],"float32"), Tensor([209664, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 224, 320],"float16"), Tensor([1, 12, 224, 320],"float16"), Tensor([1, 2],"float32"), Tensor([215040, 4],"float32"), Tensor([215040, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 224, 328],"float16"), Tensor([1, 12, 224, 328],"float16"), Tensor([1, 2],"float32"), Tensor([220416, 4],"float32"), Tensor([220416, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 224, 336],"float16"), Tensor([1, 12, 224, 336],"float16"), Tensor([1, 2],"float32"), Tensor([225792, 4],"float32"), Tensor([225792, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 23, 30],"float16"), Tensor([1, 12, 23, 30],"float16"), Tensor([1, 2],"float32"), Tensor([2070, 4],"float32"), Tensor([2070, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 23, 31],"float16"), Tensor([1, 12, 23, 31],"float16"), Tensor([1, 2],"float32"), Tensor([2139, 4],"float32"), Tensor([2139, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 23, 32],"float16"), Tensor([1, 12, 23, 32],"float16"), Tensor([1, 2],"float32"), Tensor([2208, 4],"float32"), Tensor([2208, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 23, 33],"float16"), Tensor([1, 12, 23, 33],"float16"), Tensor([1, 2],"float32"), Tensor([2277, 4],"float32"), Tensor([2277, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 23, 34],"float16"), Tensor([1, 12, 23, 34],"float16"), Tensor([1, 2],"float32"), Tensor([2346, 4],"float32"), Tensor([2346, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 23, 35],"float16"), Tensor([1, 12, 23, 35],"float16"), Tensor([1, 2],"float32"), Tensor([2415, 4],"float32"), Tensor([2415, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 23, 37],"float16"), Tensor([1, 12, 23, 37],"float16"), Tensor([1, 2],"float32"), Tensor([2553, 4],"float32"), Tensor([2553, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 23, 38],"float16"), Tensor([1, 12, 23, 38],"float16"), Tensor([1, 2],"float32"), Tensor([2622, 4],"float32"), Tensor([2622, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 23, 39],"float16"), Tensor([1, 12, 23, 39],"float16"), Tensor([1, 2],"float32"), Tensor([2691, 4],"float32"), Tensor([2691, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 23, 40],"float16"), Tensor([1, 12, 23, 40],"float16"), Tensor([1, 2],"float32"), Tensor([2760, 4],"float32"), Tensor([2760, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 23, 41],"float16"), Tensor([1, 12, 23, 41],"float16"), Tensor([1, 2],"float32"), Tensor([2829, 4],"float32"), Tensor([2829, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 23, 42],"float16"), Tensor([1, 12, 23, 42],"float16"), Tensor([1, 2],"float32"), Tensor([2898, 4],"float32"), Tensor([2898, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 232, 248],"float16"), Tensor([1, 12, 232, 248],"float16"), Tensor([1, 2],"float32"), Tensor([172608, 4],"float32"), Tensor([172608, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 232, 256],"float16"), Tensor([1, 12, 232, 256],"float16"), Tensor([1, 2],"float32"), Tensor([178176, 4],"float32"), Tensor([178176, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 232, 264],"float16"), Tensor([1, 12, 232, 264],"float16"), Tensor([1, 2],"float32"), Tensor([183744, 4],"float32"), Tensor([183744, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 232, 272],"float16"), Tensor([1, 12, 232, 272],"float16"), Tensor([1, 2],"float32"), Tensor([189312, 4],"float32"), Tensor([189312, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 232, 320],"float16"), Tensor([1, 12, 232, 320],"float16"), Tensor([1, 2],"float32"), Tensor([222720, 4],"float32"), Tensor([222720, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 232, 336],"float16"), Tensor([1, 12, 232, 336],"float16"), Tensor([1, 2],"float32"), Tensor([233856, 4],"float32"), Tensor([233856, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 24, 30],"float16"), Tensor([1, 12, 24, 30],"float16"), Tensor([1, 2],"float32"), Tensor([2160, 4],"float32"), Tensor([2160, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 24, 31],"float16"), Tensor([1, 12, 24, 31],"float16"), Tensor([1, 2],"float32"), Tensor([2232, 4],"float32"), Tensor([2232, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 24, 32],"float16"), Tensor([1, 12, 24, 32],"float16"), Tensor([1, 2],"float32"), Tensor([2304, 4],"float32"), Tensor([2304, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 24, 33],"float16"), Tensor([1, 12, 24, 33],"float16"), Tensor([1, 2],"float32"), Tensor([2376, 4],"float32"), Tensor([2376, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 24, 34],"float16"), Tensor([1, 12, 24, 34],"float16"), Tensor([1, 2],"float32"), Tensor([2448, 4],"float32"), Tensor([2448, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 24, 35],"float16"), Tensor([1, 12, 24, 35],"float16"), Tensor([1, 2],"float32"), Tensor([2520, 4],"float32"), Tensor([2520, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 24, 36],"float16"), Tensor([1, 12, 24, 36],"float16"), Tensor([1, 2],"float32"), Tensor([2592, 4],"float32"), Tensor([2592, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 24, 37],"float16"), Tensor([1, 12, 24, 37],"float16"), Tensor([1, 2],"float32"), Tensor([2664, 4],"float32"), Tensor([2664, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 24, 38],"float16"), Tensor([1, 12, 24, 38],"float16"), Tensor([1, 2],"float32"), Tensor([2736, 4],"float32"), Tensor([2736, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 24, 40],"float16"), Tensor([1, 12, 24, 40],"float16"), Tensor([1, 2],"float32"), Tensor([2880, 4],"float32"), Tensor([2880, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 24, 41],"float16"), Tensor([1, 12, 24, 41],"float16"), Tensor([1, 2],"float32"), Tensor([2952, 4],"float32"), Tensor([2952, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 24, 42],"float16"), Tensor([1, 12, 24, 42],"float16"), Tensor([1, 2],"float32"), Tensor([3024, 4],"float32"), Tensor([3024, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 240, 208],"float16"), Tensor([1, 12, 240, 208],"float16"), Tensor([1, 2],"float32"), Tensor([149760, 4],"float32"), Tensor([149760, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 240, 240],"float16"), Tensor([1, 12, 240, 240],"float16"), Tensor([1, 2],"float32"), Tensor([172800, 4],"float32"), Tensor([172800, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 240, 248],"float16"), Tensor([1, 12, 240, 248],"float16"), Tensor([1, 2],"float32"), Tensor([178560, 4],"float32"), Tensor([178560, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 240, 256],"float16"), Tensor([1, 12, 240, 256],"float16"), Tensor([1, 2],"float32"), Tensor([184320, 4],"float32"), Tensor([184320, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 240, 272],"float16"), Tensor([1, 12, 240, 272],"float16"), Tensor([1, 2],"float32"), Tensor([195840, 4],"float32"), Tensor([195840, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 240, 280],"float16"), Tensor([1, 12, 240, 280],"float16"), Tensor([1, 2],"float32"), Tensor([201600, 4],"float32"), Tensor([201600, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 240, 288],"float16"), Tensor([1, 12, 240, 288],"float16"), Tensor([1, 2],"float32"), Tensor([207360, 4],"float32"), Tensor([207360, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 240, 296],"float16"), Tensor([1, 12, 240, 296],"float16"), Tensor([1, 2],"float32"), Tensor([213120, 4],"float32"), Tensor([213120, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 240, 304],"float16"), Tensor([1, 12, 240, 304],"float16"), Tensor([1, 2],"float32"), Tensor([218880, 4],"float32"), Tensor([218880, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 240, 312],"float16"), Tensor([1, 12, 240, 312],"float16"), Tensor([1, 2],"float32"), Tensor([224640, 4],"float32"), Tensor([224640, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 240, 320],"float16"), Tensor([1, 12, 240, 320],"float16"), Tensor([1, 2],"float32"), Tensor([230400, 4],"float32"), Tensor([230400, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 240, 328],"float16"), Tensor([1, 12, 240, 328],"float16"), Tensor([1, 2],"float32"), Tensor([236160, 4],"float32"), Tensor([236160, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 240, 336],"float16"), Tensor([1, 12, 240, 336],"float16"), Tensor([1, 2],"float32"), Tensor([241920, 4],"float32"), Tensor([241920, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 248, 192],"float16"), Tensor([1, 12, 248, 192],"float16"), Tensor([1, 2],"float32"), Tensor([142848, 4],"float32"), Tensor([142848, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 248, 224],"float16"), Tensor([1, 12, 248, 224],"float16"), Tensor([1, 2],"float32"), Tensor([166656, 4],"float32"), Tensor([166656, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 248, 248],"float16"), Tensor([1, 12, 248, 248],"float16"), Tensor([1, 2],"float32"), Tensor([184512, 4],"float32"), Tensor([184512, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 248, 256],"float16"), Tensor([1, 12, 248, 256],"float16"), Tensor([1, 2],"float32"), Tensor([190464, 4],"float32"), Tensor([190464, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 248, 264],"float16"), Tensor([1, 12, 248, 264],"float16"), Tensor([1, 2],"float32"), Tensor([196416, 4],"float32"), Tensor([196416, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 248, 272],"float16"), Tensor([1, 12, 248, 272],"float16"), Tensor([1, 2],"float32"), Tensor([202368, 4],"float32"), Tensor([202368, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 248, 280],"float16"), Tensor([1, 12, 248, 280],"float16"), Tensor([1, 2],"float32"), Tensor([208320, 4],"float32"), Tensor([208320, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 248, 288],"float16"), Tensor([1, 12, 248, 288],"float16"), Tensor([1, 2],"float32"), Tensor([214272, 4],"float32"), Tensor([214272, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 248, 296],"float16"), Tensor([1, 12, 248, 296],"float16"), Tensor([1, 2],"float32"), Tensor([220224, 4],"float32"), Tensor([220224, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 248, 304],"float16"), Tensor([1, 12, 248, 304],"float16"), Tensor([1, 2],"float32"), Tensor([226176, 4],"float32"), Tensor([226176, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 248, 312],"float16"), Tensor([1, 12, 248, 312],"float16"), Tensor([1, 2],"float32"), Tensor([232128, 4],"float32"), Tensor([232128, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 248, 320],"float16"), Tensor([1, 12, 248, 320],"float16"), Tensor([1, 2],"float32"), Tensor([238080, 4],"float32"), Tensor([238080, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 248, 328],"float16"), Tensor([1, 12, 248, 328],"float16"), Tensor([1, 2],"float32"), Tensor([244032, 4],"float32"), Tensor([244032, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 248, 336],"float16"), Tensor([1, 12, 248, 336],"float16"), Tensor([1, 2],"float32"), Tensor([249984, 4],"float32"), Tensor([249984, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 25, 30],"float16"), Tensor([1, 12, 25, 30],"float16"), Tensor([1, 2],"float32"), Tensor([2250, 4],"float32"), Tensor([2250, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 25, 31],"float16"), Tensor([1, 12, 25, 31],"float16"), Tensor([1, 2],"float32"), Tensor([2325, 4],"float32"), Tensor([2325, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 25, 32],"float16"), Tensor([1, 12, 25, 32],"float16"), Tensor([1, 2],"float32"), Tensor([2400, 4],"float32"), Tensor([2400, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 25, 33],"float16"), Tensor([1, 12, 25, 33],"float16"), Tensor([1, 2],"float32"), Tensor([2475, 4],"float32"), Tensor([2475, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 25, 34],"float16"), Tensor([1, 12, 25, 34],"float16"), Tensor([1, 2],"float32"), Tensor([2550, 4],"float32"), Tensor([2550, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 25, 35],"float16"), Tensor([1, 12, 25, 35],"float16"), Tensor([1, 2],"float32"), Tensor([2625, 4],"float32"), Tensor([2625, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 25, 36],"float16"), Tensor([1, 12, 25, 36],"float16"), Tensor([1, 2],"float32"), Tensor([2700, 4],"float32"), Tensor([2700, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 25, 37],"float16"), Tensor([1, 12, 25, 37],"float16"), Tensor([1, 2],"float32"), Tensor([2775, 4],"float32"), Tensor([2775, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 25, 38],"float16"), Tensor([1, 12, 25, 38],"float16"), Tensor([1, 2],"float32"), Tensor([2850, 4],"float32"), Tensor([2850, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 25, 39],"float16"), Tensor([1, 12, 25, 39],"float16"), Tensor([1, 2],"float32"), Tensor([2925, 4],"float32"), Tensor([2925, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 25, 40],"float16"), Tensor([1, 12, 25, 40],"float16"), Tensor([1, 2],"float32"), Tensor([3000, 4],"float32"), Tensor([3000, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 25, 41],"float16"), Tensor([1, 12, 25, 41],"float16"), Tensor([1, 2],"float32"), Tensor([3075, 4],"float32"), Tensor([3075, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 25, 42],"float16"), Tensor([1, 12, 25, 42],"float16"), Tensor([1, 2],"float32"), Tensor([3150, 4],"float32"), Tensor([3150, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 256, 216],"float16"), Tensor([1, 12, 256, 216],"float16"), Tensor([1, 2],"float32"), Tensor([165888, 4],"float32"), Tensor([165888, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 256, 224],"float16"), Tensor([1, 12, 256, 224],"float16"), Tensor([1, 2],"float32"), Tensor([172032, 4],"float32"), Tensor([172032, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 256, 240],"float16"), Tensor([1, 12, 256, 240],"float16"), Tensor([1, 2],"float32"), Tensor([184320, 4],"float32"), Tensor([184320, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 256, 248],"float16"), Tensor([1, 12, 256, 248],"float16"), Tensor([1, 2],"float32"), Tensor([190464, 4],"float32"), Tensor([190464, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 256, 256],"float16"), Tensor([1, 12, 256, 256],"float16"), Tensor([1, 2],"float32"), Tensor([196608, 4],"float32"), Tensor([196608, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 256, 264],"float16"), Tensor([1, 12, 256, 264],"float16"), Tensor([1, 2],"float32"), Tensor([202752, 4],"float32"), Tensor([202752, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 256, 272],"float16"), Tensor([1, 12, 256, 272],"float16"), Tensor([1, 2],"float32"), Tensor([208896, 4],"float32"), Tensor([208896, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 256, 280],"float16"), Tensor([1, 12, 256, 280],"float16"), Tensor([1, 2],"float32"), Tensor([215040, 4],"float32"), Tensor([215040, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 256, 288],"float16"), Tensor([1, 12, 256, 288],"float16"), Tensor([1, 2],"float32"), Tensor([221184, 4],"float32"), Tensor([221184, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 256, 296],"float16"), Tensor([1, 12, 256, 296],"float16"), Tensor([1, 2],"float32"), Tensor([227328, 4],"float32"), Tensor([227328, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 256, 304],"float16"), Tensor([1, 12, 256, 304],"float16"), Tensor([1, 2],"float32"), Tensor([233472, 4],"float32"), Tensor([233472, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 256, 312],"float16"), Tensor([1, 12, 256, 312],"float16"), Tensor([1, 2],"float32"), Tensor([239616, 4],"float32"), Tensor([239616, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 256, 320],"float16"), Tensor([1, 12, 256, 320],"float16"), Tensor([1, 2],"float32"), Tensor([245760, 4],"float32"), Tensor([245760, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 256, 328],"float16"), Tensor([1, 12, 256, 328],"float16"), Tensor([1, 2],"float32"), Tensor([251904, 4],"float32"), Tensor([251904, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 256, 336],"float16"), Tensor([1, 12, 256, 336],"float16"), Tensor([1, 2],"float32"), Tensor([258048, 4],"float32"), Tensor([258048, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 26, 32],"float16"), Tensor([1, 12, 26, 32],"float16"), Tensor([1, 2],"float32"), Tensor([2496, 4],"float32"), Tensor([2496, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 26, 36],"float16"), Tensor([1, 12, 26, 36],"float16"), Tensor([1, 2],"float32"), Tensor([2808, 4],"float32"), Tensor([2808, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 26, 37],"float16"), Tensor([1, 12, 26, 37],"float16"), Tensor([1, 2],"float32"), Tensor([2886, 4],"float32"), Tensor([2886, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 26, 38],"float16"), Tensor([1, 12, 26, 38],"float16"), Tensor([1, 2],"float32"), Tensor([2964, 4],"float32"), Tensor([2964, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 26, 41],"float16"), Tensor([1, 12, 26, 41],"float16"), Tensor([1, 2],"float32"), Tensor([3198, 4],"float32"), Tensor([3198, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 26, 42],"float16"), Tensor([1, 12, 26, 42],"float16"), Tensor([1, 2],"float32"), Tensor([3276, 4],"float32"), Tensor([3276, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 264, 192],"float16"), Tensor([1, 12, 264, 192],"float16"), Tensor([1, 2],"float32"), Tensor([152064, 4],"float32"), Tensor([152064, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 264, 208],"float16"), Tensor([1, 12, 264, 208],"float16"), Tensor([1, 2],"float32"), Tensor([164736, 4],"float32"), Tensor([164736, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 264, 216],"float16"), Tensor([1, 12, 264, 216],"float16"), Tensor([1, 2],"float32"), Tensor([171072, 4],"float32"), Tensor([171072, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 264, 248],"float16"), Tensor([1, 12, 264, 248],"float16"), Tensor([1, 2],"float32"), Tensor([196416, 4],"float32"), Tensor([196416, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 264, 256],"float16"), Tensor([1, 12, 264, 256],"float16"), Tensor([1, 2],"float32"), Tensor([202752, 4],"float32"), Tensor([202752, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 264, 264],"float16"), Tensor([1, 12, 264, 264],"float16"), Tensor([1, 2],"float32"), Tensor([209088, 4],"float32"), Tensor([209088, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 264, 272],"float16"), Tensor([1, 12, 264, 272],"float16"), Tensor([1, 2],"float32"), Tensor([215424, 4],"float32"), Tensor([215424, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 264, 280],"float16"), Tensor([1, 12, 264, 280],"float16"), Tensor([1, 2],"float32"), Tensor([221760, 4],"float32"), Tensor([221760, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 264, 288],"float16"), Tensor([1, 12, 264, 288],"float16"), Tensor([1, 2],"float32"), Tensor([228096, 4],"float32"), Tensor([228096, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 264, 296],"float16"), Tensor([1, 12, 264, 296],"float16"), Tensor([1, 2],"float32"), Tensor([234432, 4],"float32"), Tensor([234432, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 264, 304],"float16"), Tensor([1, 12, 264, 304],"float16"), Tensor([1, 2],"float32"), Tensor([240768, 4],"float32"), Tensor([240768, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 264, 312],"float16"), Tensor([1, 12, 264, 312],"float16"), Tensor([1, 2],"float32"), Tensor([247104, 4],"float32"), Tensor([247104, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 264, 320],"float16"), Tensor([1, 12, 264, 320],"float16"), Tensor([1, 2],"float32"), Tensor([253440, 4],"float32"), Tensor([253440, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 264, 328],"float16"), Tensor([1, 12, 264, 328],"float16"), Tensor([1, 2],"float32"), Tensor([259776, 4],"float32"), Tensor([259776, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 264, 336],"float16"), Tensor([1, 12, 264, 336],"float16"), Tensor([1, 2],"float32"), Tensor([266112, 4],"float32"), Tensor([266112, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 27, 28],"float16"), Tensor([1, 12, 27, 28],"float16"), Tensor([1, 2],"float32"), Tensor([2268, 4],"float32"), Tensor([2268, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 27, 31],"float16"), Tensor([1, 12, 27, 31],"float16"), Tensor([1, 2],"float32"), Tensor([2511, 4],"float32"), Tensor([2511, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 27, 32],"float16"), Tensor([1, 12, 27, 32],"float16"), Tensor([1, 2],"float32"), Tensor([2592, 4],"float32"), Tensor([2592, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 27, 33],"float16"), Tensor([1, 12, 27, 33],"float16"), Tensor([1, 2],"float32"), Tensor([2673, 4],"float32"), Tensor([2673, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 27, 34],"float16"), Tensor([1, 12, 27, 34],"float16"), Tensor([1, 2],"float32"), Tensor([2754, 4],"float32"), Tensor([2754, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 27, 35],"float16"), Tensor([1, 12, 27, 35],"float16"), Tensor([1, 2],"float32"), Tensor([2835, 4],"float32"), Tensor([2835, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 27, 36],"float16"), Tensor([1, 12, 27, 36],"float16"), Tensor([1, 2],"float32"), Tensor([2916, 4],"float32"), Tensor([2916, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 27, 38],"float16"), Tensor([1, 12, 27, 38],"float16"), Tensor([1, 2],"float32"), Tensor([3078, 4],"float32"), Tensor([3078, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 27, 39],"float16"), Tensor([1, 12, 27, 39],"float16"), Tensor([1, 2],"float32"), Tensor([3159, 4],"float32"), Tensor([3159, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 27, 41],"float16"), Tensor([1, 12, 27, 41],"float16"), Tensor([1, 2],"float32"), Tensor([3321, 4],"float32"), Tensor([3321, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 27, 42],"float16"), Tensor([1, 12, 27, 42],"float16"), Tensor([1, 2],"float32"), Tensor([3402, 4],"float32"), Tensor([3402, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 272, 176],"float16"), Tensor([1, 12, 272, 176],"float16"), Tensor([1, 2],"float32"), Tensor([143616, 4],"float32"), Tensor([143616, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 272, 192],"float16"), Tensor([1, 12, 272, 192],"float16"), Tensor([1, 2],"float32"), Tensor([156672, 4],"float32"), Tensor([156672, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 272, 216],"float16"), Tensor([1, 12, 272, 216],"float16"), Tensor([1, 2],"float32"), Tensor([176256, 4],"float32"), Tensor([176256, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 272, 224],"float16"), Tensor([1, 12, 272, 224],"float16"), Tensor([1, 2],"float32"), Tensor([182784, 4],"float32"), Tensor([182784, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 272, 232],"float16"), Tensor([1, 12, 272, 232],"float16"), Tensor([1, 2],"float32"), Tensor([189312, 4],"float32"), Tensor([189312, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 272, 240],"float16"), Tensor([1, 12, 272, 240],"float16"), Tensor([1, 2],"float32"), Tensor([195840, 4],"float32"), Tensor([195840, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 272, 248],"float16"), Tensor([1, 12, 272, 248],"float16"), Tensor([1, 2],"float32"), Tensor([202368, 4],"float32"), Tensor([202368, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 272, 256],"float16"), Tensor([1, 12, 272, 256],"float16"), Tensor([1, 2],"float32"), Tensor([208896, 4],"float32"), Tensor([208896, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 272, 264],"float16"), Tensor([1, 12, 272, 264],"float16"), Tensor([1, 2],"float32"), Tensor([215424, 4],"float32"), Tensor([215424, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 272, 272],"float16"), Tensor([1, 12, 272, 272],"float16"), Tensor([1, 2],"float32"), Tensor([221952, 4],"float32"), Tensor([221952, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 272, 280],"float16"), Tensor([1, 12, 272, 280],"float16"), Tensor([1, 2],"float32"), Tensor([228480, 4],"float32"), Tensor([228480, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 272, 288],"float16"), Tensor([1, 12, 272, 288],"float16"), Tensor([1, 2],"float32"), Tensor([235008, 4],"float32"), Tensor([235008, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 272, 296],"float16"), Tensor([1, 12, 272, 296],"float16"), Tensor([1, 2],"float32"), Tensor([241536, 4],"float32"), Tensor([241536, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 272, 304],"float16"), Tensor([1, 12, 272, 304],"float16"), Tensor([1, 2],"float32"), Tensor([248064, 4],"float32"), Tensor([248064, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 272, 312],"float16"), Tensor([1, 12, 272, 312],"float16"), Tensor([1, 2],"float32"), Tensor([254592, 4],"float32"), Tensor([254592, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 272, 320],"float16"), Tensor([1, 12, 272, 320],"float16"), Tensor([1, 2],"float32"), Tensor([261120, 4],"float32"), Tensor([261120, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 272, 328],"float16"), Tensor([1, 12, 272, 328],"float16"), Tensor([1, 2],"float32"), Tensor([267648, 4],"float32"), Tensor([267648, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 272, 336],"float16"), Tensor([1, 12, 272, 336],"float16"), Tensor([1, 2],"float32"), Tensor([274176, 4],"float32"), Tensor([274176, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 28, 31],"float16"), Tensor([1, 12, 28, 31],"float16"), Tensor([1, 2],"float32"), Tensor([2604, 4],"float32"), Tensor([2604, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 28, 32],"float16"), Tensor([1, 12, 28, 32],"float16"), Tensor([1, 2],"float32"), Tensor([2688, 4],"float32"), Tensor([2688, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 28, 33],"float16"), Tensor([1, 12, 28, 33],"float16"), Tensor([1, 2],"float32"), Tensor([2772, 4],"float32"), Tensor([2772, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 28, 34],"float16"), Tensor([1, 12, 28, 34],"float16"), Tensor([1, 2],"float32"), Tensor([2856, 4],"float32"), Tensor([2856, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 28, 35],"float16"), Tensor([1, 12, 28, 35],"float16"), Tensor([1, 2],"float32"), Tensor([2940, 4],"float32"), Tensor([2940, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 28, 36],"float16"), Tensor([1, 12, 28, 36],"float16"), Tensor([1, 2],"float32"), Tensor([3024, 4],"float32"), Tensor([3024, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 28, 37],"float16"), Tensor([1, 12, 28, 37],"float16"), Tensor([1, 2],"float32"), Tensor([3108, 4],"float32"), Tensor([3108, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 28, 38],"float16"), Tensor([1, 12, 28, 38],"float16"), Tensor([1, 2],"float32"), Tensor([3192, 4],"float32"), Tensor([3192, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 28, 39],"float16"), Tensor([1, 12, 28, 39],"float16"), Tensor([1, 2],"float32"), Tensor([3276, 4],"float32"), Tensor([3276, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 28, 40],"float16"), Tensor([1, 12, 28, 40],"float16"), Tensor([1, 2],"float32"), Tensor([3360, 4],"float32"), Tensor([3360, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 28, 41],"float16"), Tensor([1, 12, 28, 41],"float16"), Tensor([1, 2],"float32"), Tensor([3444, 4],"float32"), Tensor([3444, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 28, 42],"float16"), Tensor([1, 12, 28, 42],"float16"), Tensor([1, 2],"float32"), Tensor([3528, 4],"float32"), Tensor([3528, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 280, 192],"float16"), Tensor([1, 12, 280, 192],"float16"), Tensor([1, 2],"float32"), Tensor([161280, 4],"float32"), Tensor([161280, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 280, 224],"float16"), Tensor([1, 12, 280, 224],"float16"), Tensor([1, 2],"float32"), Tensor([188160, 4],"float32"), Tensor([188160, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 280, 240],"float16"), Tensor([1, 12, 280, 240],"float16"), Tensor([1, 2],"float32"), Tensor([201600, 4],"float32"), Tensor([201600, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 280, 248],"float16"), Tensor([1, 12, 280, 248],"float16"), Tensor([1, 2],"float32"), Tensor([208320, 4],"float32"), Tensor([208320, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 280, 256],"float16"), Tensor([1, 12, 280, 256],"float16"), Tensor([1, 2],"float32"), Tensor([215040, 4],"float32"), Tensor([215040, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 280, 264],"float16"), Tensor([1, 12, 280, 264],"float16"), Tensor([1, 2],"float32"), Tensor([221760, 4],"float32"), Tensor([221760, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 280, 272],"float16"), Tensor([1, 12, 280, 272],"float16"), Tensor([1, 2],"float32"), Tensor([228480, 4],"float32"), Tensor([228480, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 280, 280],"float16"), Tensor([1, 12, 280, 280],"float16"), Tensor([1, 2],"float32"), Tensor([235200, 4],"float32"), Tensor([235200, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 280, 288],"float16"), Tensor([1, 12, 280, 288],"float16"), Tensor([1, 2],"float32"), Tensor([241920, 4],"float32"), Tensor([241920, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 280, 296],"float16"), Tensor([1, 12, 280, 296],"float16"), Tensor([1, 2],"float32"), Tensor([248640, 4],"float32"), Tensor([248640, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 280, 304],"float16"), Tensor([1, 12, 280, 304],"float16"), Tensor([1, 2],"float32"), Tensor([255360, 4],"float32"), Tensor([255360, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 280, 312],"float16"), Tensor([1, 12, 280, 312],"float16"), Tensor([1, 2],"float32"), Tensor([262080, 4],"float32"), Tensor([262080, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 280, 328],"float16"), Tensor([1, 12, 280, 328],"float16"), Tensor([1, 2],"float32"), Tensor([275520, 4],"float32"), Tensor([275520, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 280, 336],"float16"), Tensor([1, 12, 280, 336],"float16"), Tensor([1, 2],"float32"), Tensor([282240, 4],"float32"), Tensor([282240, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 288, 216],"float16"), Tensor([1, 12, 288, 216],"float16"), Tensor([1, 2],"float32"), Tensor([186624, 4],"float32"), Tensor([186624, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 288, 224],"float16"), Tensor([1, 12, 288, 224],"float16"), Tensor([1, 2],"float32"), Tensor([193536, 4],"float32"), Tensor([193536, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 288, 240],"float16"), Tensor([1, 12, 288, 240],"float16"), Tensor([1, 2],"float32"), Tensor([207360, 4],"float32"), Tensor([207360, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 288, 248],"float16"), Tensor([1, 12, 288, 248],"float16"), Tensor([1, 2],"float32"), Tensor([214272, 4],"float32"), Tensor([214272, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 288, 256],"float16"), Tensor([1, 12, 288, 256],"float16"), Tensor([1, 2],"float32"), Tensor([221184, 4],"float32"), Tensor([221184, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 288, 264],"float16"), Tensor([1, 12, 288, 264],"float16"), Tensor([1, 2],"float32"), Tensor([228096, 4],"float32"), Tensor([228096, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 288, 272],"float16"), Tensor([1, 12, 288, 272],"float16"), Tensor([1, 2],"float32"), Tensor([235008, 4],"float32"), Tensor([235008, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 288, 280],"float16"), Tensor([1, 12, 288, 280],"float16"), Tensor([1, 2],"float32"), Tensor([241920, 4],"float32"), Tensor([241920, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 288, 288],"float16"), Tensor([1, 12, 288, 288],"float16"), Tensor([1, 2],"float32"), Tensor([248832, 4],"float32"), Tensor([248832, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 288, 296],"float16"), Tensor([1, 12, 288, 296],"float16"), Tensor([1, 2],"float32"), Tensor([255744, 4],"float32"), Tensor([255744, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 288, 304],"float16"), Tensor([1, 12, 288, 304],"float16"), Tensor([1, 2],"float32"), Tensor([262656, 4],"float32"), Tensor([262656, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 288, 312],"float16"), Tensor([1, 12, 288, 312],"float16"), Tensor([1, 2],"float32"), Tensor([269568, 4],"float32"), Tensor([269568, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 288, 320],"float16"), Tensor([1, 12, 288, 320],"float16"), Tensor([1, 2],"float32"), Tensor([276480, 4],"float32"), Tensor([276480, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 288, 328],"float16"), Tensor([1, 12, 288, 328],"float16"), Tensor([1, 2],"float32"), Tensor([283392, 4],"float32"), Tensor([283392, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 288, 336],"float16"), Tensor([1, 12, 288, 336],"float16"), Tensor([1, 2],"float32"), Tensor([290304, 4],"float32"), Tensor([290304, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 29, 31],"float16"), Tensor([1, 12, 29, 31],"float16"), Tensor([1, 2],"float32"), Tensor([2697, 4],"float32"), Tensor([2697, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 29, 32],"float16"), Tensor([1, 12, 29, 32],"float16"), Tensor([1, 2],"float32"), Tensor([2784, 4],"float32"), Tensor([2784, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 29, 33],"float16"), Tensor([1, 12, 29, 33],"float16"), Tensor([1, 2],"float32"), Tensor([2871, 4],"float32"), Tensor([2871, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 29, 34],"float16"), Tensor([1, 12, 29, 34],"float16"), Tensor([1, 2],"float32"), Tensor([2958, 4],"float32"), Tensor([2958, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 29, 40],"float16"), Tensor([1, 12, 29, 40],"float16"), Tensor([1, 2],"float32"), Tensor([3480, 4],"float32"), Tensor([3480, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 29, 42],"float16"), Tensor([1, 12, 29, 42],"float16"), Tensor([1, 2],"float32"), Tensor([3654, 4],"float32"), Tensor([3654, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 296, 240],"float16"), Tensor([1, 12, 296, 240],"float16"), Tensor([1, 2],"float32"), Tensor([213120, 4],"float32"), Tensor([213120, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 296, 256],"float16"), Tensor([1, 12, 296, 256],"float16"), Tensor([1, 2],"float32"), Tensor([227328, 4],"float32"), Tensor([227328, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 296, 264],"float16"), Tensor([1, 12, 296, 264],"float16"), Tensor([1, 2],"float32"), Tensor([234432, 4],"float32"), Tensor([234432, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 296, 272],"float16"), Tensor([1, 12, 296, 272],"float16"), Tensor([1, 2],"float32"), Tensor([241536, 4],"float32"), Tensor([241536, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 296, 280],"float16"), Tensor([1, 12, 296, 280],"float16"), Tensor([1, 2],"float32"), Tensor([248640, 4],"float32"), Tensor([248640, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 296, 288],"float16"), Tensor([1, 12, 296, 288],"float16"), Tensor([1, 2],"float32"), Tensor([255744, 4],"float32"), Tensor([255744, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 296, 296],"float16"), Tensor([1, 12, 296, 296],"float16"), Tensor([1, 2],"float32"), Tensor([262848, 4],"float32"), Tensor([262848, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 296, 304],"float16"), Tensor([1, 12, 296, 304],"float16"), Tensor([1, 2],"float32"), Tensor([269952, 4],"float32"), Tensor([269952, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 296, 312],"float16"), Tensor([1, 12, 296, 312],"float16"), Tensor([1, 2],"float32"), Tensor([277056, 4],"float32"), Tensor([277056, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 296, 320],"float16"), Tensor([1, 12, 296, 320],"float16"), Tensor([1, 2],"float32"), Tensor([284160, 4],"float32"), Tensor([284160, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 296, 328],"float16"), Tensor([1, 12, 296, 328],"float16"), Tensor([1, 2],"float32"), Tensor([291264, 4],"float32"), Tensor([291264, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 296, 336],"float16"), Tensor([1, 12, 296, 336],"float16"), Tensor([1, 2],"float32"), Tensor([298368, 4],"float32"), Tensor([298368, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 30, 26],"float16"), Tensor([1, 12, 30, 26],"float16"), Tensor([1, 2],"float32"), Tensor([2340, 4],"float32"), Tensor([2340, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 30, 30],"float16"), Tensor([1, 12, 30, 30],"float16"), Tensor([1, 2],"float32"), Tensor([2700, 4],"float32"), Tensor([2700, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 30, 31],"float16"), Tensor([1, 12, 30, 31],"float16"), Tensor([1, 2],"float32"), Tensor([2790, 4],"float32"), Tensor([2790, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 30, 32],"float16"), Tensor([1, 12, 30, 32],"float16"), Tensor([1, 2],"float32"), Tensor([2880, 4],"float32"), Tensor([2880, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 30, 34],"float16"), Tensor([1, 12, 30, 34],"float16"), Tensor([1, 2],"float32"), Tensor([3060, 4],"float32"), Tensor([3060, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 30, 35],"float16"), Tensor([1, 12, 30, 35],"float16"), Tensor([1, 2],"float32"), Tensor([3150, 4],"float32"), Tensor([3150, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 30, 36],"float16"), Tensor([1, 12, 30, 36],"float16"), Tensor([1, 2],"float32"), Tensor([3240, 4],"float32"), Tensor([3240, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 30, 37],"float16"), Tensor([1, 12, 30, 37],"float16"), Tensor([1, 2],"float32"), Tensor([3330, 4],"float32"), Tensor([3330, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 30, 38],"float16"), Tensor([1, 12, 30, 38],"float16"), Tensor([1, 2],"float32"), Tensor([3420, 4],"float32"), Tensor([3420, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 30, 39],"float16"), Tensor([1, 12, 30, 39],"float16"), Tensor([1, 2],"float32"), Tensor([3510, 4],"float32"), Tensor([3510, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 30, 40],"float16"), Tensor([1, 12, 30, 40],"float16"), Tensor([1, 2],"float32"), Tensor([3600, 4],"float32"), Tensor([3600, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 30, 41],"float16"), Tensor([1, 12, 30, 41],"float16"), Tensor([1, 2],"float32"), Tensor([3690, 4],"float32"), Tensor([3690, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 30, 42],"float16"), Tensor([1, 12, 30, 42],"float16"), Tensor([1, 2],"float32"), Tensor([3780, 4],"float32"), Tensor([3780, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 304, 200],"float16"), Tensor([1, 12, 304, 200],"float16"), Tensor([1, 2],"float32"), Tensor([182400, 4],"float32"), Tensor([182400, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 304, 224],"float16"), Tensor([1, 12, 304, 224],"float16"), Tensor([1, 2],"float32"), Tensor([204288, 4],"float32"), Tensor([204288, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 304, 240],"float16"), Tensor([1, 12, 304, 240],"float16"), Tensor([1, 2],"float32"), Tensor([218880, 4],"float32"), Tensor([218880, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 304, 248],"float16"), Tensor([1, 12, 304, 248],"float16"), Tensor([1, 2],"float32"), Tensor([226176, 4],"float32"), Tensor([226176, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 304, 256],"float16"), Tensor([1, 12, 304, 256],"float16"), Tensor([1, 2],"float32"), Tensor([233472, 4],"float32"), Tensor([233472, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 304, 264],"float16"), Tensor([1, 12, 304, 264],"float16"), Tensor([1, 2],"float32"), Tensor([240768, 4],"float32"), Tensor([240768, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 304, 272],"float16"), Tensor([1, 12, 304, 272],"float16"), Tensor([1, 2],"float32"), Tensor([248064, 4],"float32"), Tensor([248064, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 304, 280],"float16"), Tensor([1, 12, 304, 280],"float16"), Tensor([1, 2],"float32"), Tensor([255360, 4],"float32"), Tensor([255360, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 304, 288],"float16"), Tensor([1, 12, 304, 288],"float16"), Tensor([1, 2],"float32"), Tensor([262656, 4],"float32"), Tensor([262656, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 304, 296],"float16"), Tensor([1, 12, 304, 296],"float16"), Tensor([1, 2],"float32"), Tensor([269952, 4],"float32"), Tensor([269952, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 304, 304],"float16"), Tensor([1, 12, 304, 304],"float16"), Tensor([1, 2],"float32"), Tensor([277248, 4],"float32"), Tensor([277248, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 304, 312],"float16"), Tensor([1, 12, 304, 312],"float16"), Tensor([1, 2],"float32"), Tensor([284544, 4],"float32"), Tensor([284544, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 304, 320],"float16"), Tensor([1, 12, 304, 320],"float16"), Tensor([1, 2],"float32"), Tensor([291840, 4],"float32"), Tensor([291840, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 304, 328],"float16"), Tensor([1, 12, 304, 328],"float16"), Tensor([1, 2],"float32"), Tensor([299136, 4],"float32"), Tensor([299136, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 304, 336],"float16"), Tensor([1, 12, 304, 336],"float16"), Tensor([1, 2],"float32"), Tensor([306432, 4],"float32"), Tensor([306432, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 31, 24],"float16"), Tensor([1, 12, 31, 24],"float16"), Tensor([1, 2],"float32"), Tensor([2232, 4],"float32"), Tensor([2232, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 31, 28],"float16"), Tensor([1, 12, 31, 28],"float16"), Tensor([1, 2],"float32"), Tensor([2604, 4],"float32"), Tensor([2604, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 31, 31],"float16"), Tensor([1, 12, 31, 31],"float16"), Tensor([1, 2],"float32"), Tensor([2883, 4],"float32"), Tensor([2883, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 31, 32],"float16"), Tensor([1, 12, 31, 32],"float16"), Tensor([1, 2],"float32"), Tensor([2976, 4],"float32"), Tensor([2976, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 31, 33],"float16"), Tensor([1, 12, 31, 33],"float16"), Tensor([1, 2],"float32"), Tensor([3069, 4],"float32"), Tensor([3069, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 31, 34],"float16"), Tensor([1, 12, 31, 34],"float16"), Tensor([1, 2],"float32"), Tensor([3162, 4],"float32"), Tensor([3162, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 31, 35],"float16"), Tensor([1, 12, 31, 35],"float16"), Tensor([1, 2],"float32"), Tensor([3255, 4],"float32"), Tensor([3255, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 31, 36],"float16"), Tensor([1, 12, 31, 36],"float16"), Tensor([1, 2],"float32"), Tensor([3348, 4],"float32"), Tensor([3348, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 31, 37],"float16"), Tensor([1, 12, 31, 37],"float16"), Tensor([1, 2],"float32"), Tensor([3441, 4],"float32"), Tensor([3441, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 31, 38],"float16"), Tensor([1, 12, 31, 38],"float16"), Tensor([1, 2],"float32"), Tensor([3534, 4],"float32"), Tensor([3534, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 31, 39],"float16"), Tensor([1, 12, 31, 39],"float16"), Tensor([1, 2],"float32"), Tensor([3627, 4],"float32"), Tensor([3627, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 31, 40],"float16"), Tensor([1, 12, 31, 40],"float16"), Tensor([1, 2],"float32"), Tensor([3720, 4],"float32"), Tensor([3720, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 31, 41],"float16"), Tensor([1, 12, 31, 41],"float16"), Tensor([1, 2],"float32"), Tensor([3813, 4],"float32"), Tensor([3813, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 31, 42],"float16"), Tensor([1, 12, 31, 42],"float16"), Tensor([1, 2],"float32"), Tensor([3906, 4],"float32"), Tensor([3906, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 312, 224],"float16"), Tensor([1, 12, 312, 224],"float16"), Tensor([1, 2],"float32"), Tensor([209664, 4],"float32"), Tensor([209664, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 312, 240],"float16"), Tensor([1, 12, 312, 240],"float16"), Tensor([1, 2],"float32"), Tensor([224640, 4],"float32"), Tensor([224640, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 312, 248],"float16"), Tensor([1, 12, 312, 248],"float16"), Tensor([1, 2],"float32"), Tensor([232128, 4],"float32"), Tensor([232128, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 312, 280],"float16"), Tensor([1, 12, 312, 280],"float16"), Tensor([1, 2],"float32"), Tensor([262080, 4],"float32"), Tensor([262080, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 312, 296],"float16"), Tensor([1, 12, 312, 296],"float16"), Tensor([1, 2],"float32"), Tensor([277056, 4],"float32"), Tensor([277056, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 312, 304],"float16"), Tensor([1, 12, 312, 304],"float16"), Tensor([1, 2],"float32"), Tensor([284544, 4],"float32"), Tensor([284544, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 32, 27],"float16"), Tensor([1, 12, 32, 27],"float16"), Tensor([1, 2],"float32"), Tensor([2592, 4],"float32"), Tensor([2592, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 32, 28],"float16"), Tensor([1, 12, 32, 28],"float16"), Tensor([1, 2],"float32"), Tensor([2688, 4],"float32"), Tensor([2688, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 32, 30],"float16"), Tensor([1, 12, 32, 30],"float16"), Tensor([1, 2],"float32"), Tensor([2880, 4],"float32"), Tensor([2880, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 32, 31],"float16"), Tensor([1, 12, 32, 31],"float16"), Tensor([1, 2],"float32"), Tensor([2976, 4],"float32"), Tensor([2976, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 32, 32],"float16"), Tensor([1, 12, 32, 32],"float16"), Tensor([1, 2],"float32"), Tensor([3072, 4],"float32"), Tensor([3072, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 32, 33],"float16"), Tensor([1, 12, 32, 33],"float16"), Tensor([1, 2],"float32"), Tensor([3168, 4],"float32"), Tensor([3168, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 32, 34],"float16"), Tensor([1, 12, 32, 34],"float16"), Tensor([1, 2],"float32"), Tensor([3264, 4],"float32"), Tensor([3264, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 32, 35],"float16"), Tensor([1, 12, 32, 35],"float16"), Tensor([1, 2],"float32"), Tensor([3360, 4],"float32"), Tensor([3360, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 32, 36],"float16"), Tensor([1, 12, 32, 36],"float16"), Tensor([1, 2],"float32"), Tensor([3456, 4],"float32"), Tensor([3456, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 32, 37],"float16"), Tensor([1, 12, 32, 37],"float16"), Tensor([1, 2],"float32"), Tensor([3552, 4],"float32"), Tensor([3552, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 32, 38],"float16"), Tensor([1, 12, 32, 38],"float16"), Tensor([1, 2],"float32"), Tensor([3648, 4],"float32"), Tensor([3648, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 32, 39],"float16"), Tensor([1, 12, 32, 39],"float16"), Tensor([1, 2],"float32"), Tensor([3744, 4],"float32"), Tensor([3744, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 32, 40],"float16"), Tensor([1, 12, 32, 40],"float16"), Tensor([1, 2],"float32"), Tensor([3840, 4],"float32"), Tensor([3840, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 32, 41],"float16"), Tensor([1, 12, 32, 41],"float16"), Tensor([1, 2],"float32"), Tensor([3936, 4],"float32"), Tensor([3936, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 32, 42],"float16"), Tensor([1, 12, 32, 42],"float16"), Tensor([1, 2],"float32"), Tensor([4032, 4],"float32"), Tensor([4032, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 320, 256],"float16"), Tensor([1, 12, 320, 256],"float16"), Tensor([1, 2],"float32"), Tensor([245760, 4],"float32"), Tensor([245760, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 320, 272],"float16"), Tensor([1, 12, 320, 272],"float16"), Tensor([1, 2],"float32"), Tensor([261120, 4],"float32"), Tensor([261120, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 320, 288],"float16"), Tensor([1, 12, 320, 288],"float16"), Tensor([1, 2],"float32"), Tensor([276480, 4],"float32"), Tensor([276480, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 320, 304],"float16"), Tensor([1, 12, 320, 304],"float16"), Tensor([1, 2],"float32"), Tensor([291840, 4],"float32"), Tensor([291840, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 320, 336],"float16"), Tensor([1, 12, 320, 336],"float16"), Tensor([1, 2],"float32"), Tensor([322560, 4],"float32"), Tensor([322560, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 328, 200],"float16"), Tensor([1, 12, 328, 200],"float16"), Tensor([1, 2],"float32"), Tensor([196800, 4],"float32"), Tensor([196800, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 328, 248],"float16"), Tensor([1, 12, 328, 248],"float16"), Tensor([1, 2],"float32"), Tensor([244032, 4],"float32"), Tensor([244032, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 328, 256],"float16"), Tensor([1, 12, 328, 256],"float16"), Tensor([1, 2],"float32"), Tensor([251904, 4],"float32"), Tensor([251904, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 328, 272],"float16"), Tensor([1, 12, 328, 272],"float16"), Tensor([1, 2],"float32"), Tensor([267648, 4],"float32"), Tensor([267648, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 328, 280],"float16"), Tensor([1, 12, 328, 280],"float16"), Tensor([1, 2],"float32"), Tensor([275520, 4],"float32"), Tensor([275520, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 328, 288],"float16"), Tensor([1, 12, 328, 288],"float16"), Tensor([1, 2],"float32"), Tensor([283392, 4],"float32"), Tensor([283392, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 328, 336],"float16"), Tensor([1, 12, 328, 336],"float16"), Tensor([1, 2],"float32"), Tensor([330624, 4],"float32"), Tensor([330624, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 33, 24],"float16"), Tensor([1, 12, 33, 24],"float16"), Tensor([1, 2],"float32"), Tensor([2376, 4],"float32"), Tensor([2376, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 33, 26],"float16"), Tensor([1, 12, 33, 26],"float16"), Tensor([1, 2],"float32"), Tensor([2574, 4],"float32"), Tensor([2574, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 33, 27],"float16"), Tensor([1, 12, 33, 27],"float16"), Tensor([1, 2],"float32"), Tensor([2673, 4],"float32"), Tensor([2673, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 33, 31],"float16"), Tensor([1, 12, 33, 31],"float16"), Tensor([1, 2],"float32"), Tensor([3069, 4],"float32"), Tensor([3069, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 33, 32],"float16"), Tensor([1, 12, 33, 32],"float16"), Tensor([1, 2],"float32"), Tensor([3168, 4],"float32"), Tensor([3168, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 33, 33],"float16"), Tensor([1, 12, 33, 33],"float16"), Tensor([1, 2],"float32"), Tensor([3267, 4],"float32"), Tensor([3267, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 33, 34],"float16"), Tensor([1, 12, 33, 34],"float16"), Tensor([1, 2],"float32"), Tensor([3366, 4],"float32"), Tensor([3366, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 33, 35],"float16"), Tensor([1, 12, 33, 35],"float16"), Tensor([1, 2],"float32"), Tensor([3465, 4],"float32"), Tensor([3465, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 33, 36],"float16"), Tensor([1, 12, 33, 36],"float16"), Tensor([1, 2],"float32"), Tensor([3564, 4],"float32"), Tensor([3564, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 33, 37],"float16"), Tensor([1, 12, 33, 37],"float16"), Tensor([1, 2],"float32"), Tensor([3663, 4],"float32"), Tensor([3663, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 33, 38],"float16"), Tensor([1, 12, 33, 38],"float16"), Tensor([1, 2],"float32"), Tensor([3762, 4],"float32"), Tensor([3762, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 33, 39],"float16"), Tensor([1, 12, 33, 39],"float16"), Tensor([1, 2],"float32"), Tensor([3861, 4],"float32"), Tensor([3861, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 33, 40],"float16"), Tensor([1, 12, 33, 40],"float16"), Tensor([1, 2],"float32"), Tensor([3960, 4],"float32"), Tensor([3960, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 33, 41],"float16"), Tensor([1, 12, 33, 41],"float16"), Tensor([1, 2],"float32"), Tensor([4059, 4],"float32"), Tensor([4059, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 33, 42],"float16"), Tensor([1, 12, 33, 42],"float16"), Tensor([1, 2],"float32"), Tensor([4158, 4],"float32"), Tensor([4158, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 336, 240],"float16"), Tensor([1, 12, 336, 240],"float16"), Tensor([1, 2],"float32"), Tensor([241920, 4],"float32"), Tensor([241920, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 336, 248],"float16"), Tensor([1, 12, 336, 248],"float16"), Tensor([1, 2],"float32"), Tensor([249984, 4],"float32"), Tensor([249984, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 336, 256],"float16"), Tensor([1, 12, 336, 256],"float16"), Tensor([1, 2],"float32"), Tensor([258048, 4],"float32"), Tensor([258048, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 336, 264],"float16"), Tensor([1, 12, 336, 264],"float16"), Tensor([1, 2],"float32"), Tensor([266112, 4],"float32"), Tensor([266112, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 336, 280],"float16"), Tensor([1, 12, 336, 280],"float16"), Tensor([1, 2],"float32"), Tensor([282240, 4],"float32"), Tensor([282240, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 336, 288],"float16"), Tensor([1, 12, 336, 288],"float16"), Tensor([1, 2],"float32"), Tensor([290304, 4],"float32"), Tensor([290304, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 336, 296],"float16"), Tensor([1, 12, 336, 296],"float16"), Tensor([1, 2],"float32"), Tensor([298368, 4],"float32"), Tensor([298368, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 336, 304],"float16"), Tensor([1, 12, 336, 304],"float16"), Tensor([1, 2],"float32"), Tensor([306432, 4],"float32"), Tensor([306432, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 336, 336],"float16"), Tensor([1, 12, 336, 336],"float16"), Tensor([1, 2],"float32"), Tensor([338688, 4],"float32"), Tensor([338688, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 34, 22],"float16"), Tensor([1, 12, 34, 22],"float16"), Tensor([1, 2],"float32"), Tensor([2244, 4],"float32"), Tensor([2244, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 34, 24],"float16"), Tensor([1, 12, 34, 24],"float16"), Tensor([1, 2],"float32"), Tensor([2448, 4],"float32"), Tensor([2448, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 34, 27],"float16"), Tensor([1, 12, 34, 27],"float16"), Tensor([1, 2],"float32"), Tensor([2754, 4],"float32"), Tensor([2754, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 34, 28],"float16"), Tensor([1, 12, 34, 28],"float16"), Tensor([1, 2],"float32"), Tensor([2856, 4],"float32"), Tensor([2856, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 34, 29],"float16"), Tensor([1, 12, 34, 29],"float16"), Tensor([1, 2],"float32"), Tensor([2958, 4],"float32"), Tensor([2958, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 34, 30],"float16"), Tensor([1, 12, 34, 30],"float16"), Tensor([1, 2],"float32"), Tensor([3060, 4],"float32"), Tensor([3060, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 34, 31],"float16"), Tensor([1, 12, 34, 31],"float16"), Tensor([1, 2],"float32"), Tensor([3162, 4],"float32"), Tensor([3162, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 34, 32],"float16"), Tensor([1, 12, 34, 32],"float16"), Tensor([1, 2],"float32"), Tensor([3264, 4],"float32"), Tensor([3264, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 34, 33],"float16"), Tensor([1, 12, 34, 33],"float16"), Tensor([1, 2],"float32"), Tensor([3366, 4],"float32"), Tensor([3366, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 34, 34],"float16"), Tensor([1, 12, 34, 34],"float16"), Tensor([1, 2],"float32"), Tensor([3468, 4],"float32"), Tensor([3468, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 34, 35],"float16"), Tensor([1, 12, 34, 35],"float16"), Tensor([1, 2],"float32"), Tensor([3570, 4],"float32"), Tensor([3570, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 34, 36],"float16"), Tensor([1, 12, 34, 36],"float16"), Tensor([1, 2],"float32"), Tensor([3672, 4],"float32"), Tensor([3672, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 34, 37],"float16"), Tensor([1, 12, 34, 37],"float16"), Tensor([1, 2],"float32"), Tensor([3774, 4],"float32"), Tensor([3774, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 34, 38],"float16"), Tensor([1, 12, 34, 38],"float16"), Tensor([1, 2],"float32"), Tensor([3876, 4],"float32"), Tensor([3876, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 34, 39],"float16"), Tensor([1, 12, 34, 39],"float16"), Tensor([1, 2],"float32"), Tensor([3978, 4],"float32"), Tensor([3978, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 34, 40],"float16"), Tensor([1, 12, 34, 40],"float16"), Tensor([1, 2],"float32"), Tensor([4080, 4],"float32"), Tensor([4080, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 34, 41],"float16"), Tensor([1, 12, 34, 41],"float16"), Tensor([1, 2],"float32"), Tensor([4182, 4],"float32"), Tensor([4182, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 34, 42],"float16"), Tensor([1, 12, 34, 42],"float16"), Tensor([1, 2],"float32"), Tensor([4284, 4],"float32"), Tensor([4284, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 35, 24],"float16"), Tensor([1, 12, 35, 24],"float16"), Tensor([1, 2],"float32"), Tensor([2520, 4],"float32"), Tensor([2520, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 35, 28],"float16"), Tensor([1, 12, 35, 28],"float16"), Tensor([1, 2],"float32"), Tensor([2940, 4],"float32"), Tensor([2940, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 35, 30],"float16"), Tensor([1, 12, 35, 30],"float16"), Tensor([1, 2],"float32"), Tensor([3150, 4],"float32"), Tensor([3150, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 35, 31],"float16"), Tensor([1, 12, 35, 31],"float16"), Tensor([1, 2],"float32"), Tensor([3255, 4],"float32"), Tensor([3255, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 35, 32],"float16"), Tensor([1, 12, 35, 32],"float16"), Tensor([1, 2],"float32"), Tensor([3360, 4],"float32"), Tensor([3360, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 35, 33],"float16"), Tensor([1, 12, 35, 33],"float16"), Tensor([1, 2],"float32"), Tensor([3465, 4],"float32"), Tensor([3465, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 35, 34],"float16"), Tensor([1, 12, 35, 34],"float16"), Tensor([1, 2],"float32"), Tensor([3570, 4],"float32"), Tensor([3570, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 35, 35],"float16"), Tensor([1, 12, 35, 35],"float16"), Tensor([1, 2],"float32"), Tensor([3675, 4],"float32"), Tensor([3675, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 35, 36],"float16"), Tensor([1, 12, 35, 36],"float16"), Tensor([1, 2],"float32"), Tensor([3780, 4],"float32"), Tensor([3780, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 35, 37],"float16"), Tensor([1, 12, 35, 37],"float16"), Tensor([1, 2],"float32"), Tensor([3885, 4],"float32"), Tensor([3885, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 35, 38],"float16"), Tensor([1, 12, 35, 38],"float16"), Tensor([1, 2],"float32"), Tensor([3990, 4],"float32"), Tensor([3990, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 35, 39],"float16"), Tensor([1, 12, 35, 39],"float16"), Tensor([1, 2],"float32"), Tensor([4095, 4],"float32"), Tensor([4095, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 35, 41],"float16"), Tensor([1, 12, 35, 41],"float16"), Tensor([1, 2],"float32"), Tensor([4305, 4],"float32"), Tensor([4305, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 35, 42],"float16"), Tensor([1, 12, 35, 42],"float16"), Tensor([1, 2],"float32"), Tensor([4410, 4],"float32"), Tensor([4410, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 36, 27],"float16"), Tensor([1, 12, 36, 27],"float16"), Tensor([1, 2],"float32"), Tensor([2916, 4],"float32"), Tensor([2916, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 36, 28],"float16"), Tensor([1, 12, 36, 28],"float16"), Tensor([1, 2],"float32"), Tensor([3024, 4],"float32"), Tensor([3024, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 36, 30],"float16"), Tensor([1, 12, 36, 30],"float16"), Tensor([1, 2],"float32"), Tensor([3240, 4],"float32"), Tensor([3240, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 36, 31],"float16"), Tensor([1, 12, 36, 31],"float16"), Tensor([1, 2],"float32"), Tensor([3348, 4],"float32"), Tensor([3348, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 36, 32],"float16"), Tensor([1, 12, 36, 32],"float16"), Tensor([1, 2],"float32"), Tensor([3456, 4],"float32"), Tensor([3456, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 36, 33],"float16"), Tensor([1, 12, 36, 33],"float16"), Tensor([1, 2],"float32"), Tensor([3564, 4],"float32"), Tensor([3564, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 36, 34],"float16"), Tensor([1, 12, 36, 34],"float16"), Tensor([1, 2],"float32"), Tensor([3672, 4],"float32"), Tensor([3672, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 36, 35],"float16"), Tensor([1, 12, 36, 35],"float16"), Tensor([1, 2],"float32"), Tensor([3780, 4],"float32"), Tensor([3780, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 36, 36],"float16"), Tensor([1, 12, 36, 36],"float16"), Tensor([1, 2],"float32"), Tensor([3888, 4],"float32"), Tensor([3888, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 36, 37],"float16"), Tensor([1, 12, 36, 37],"float16"), Tensor([1, 2],"float32"), Tensor([3996, 4],"float32"), Tensor([3996, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 36, 38],"float16"), Tensor([1, 12, 36, 38],"float16"), Tensor([1, 2],"float32"), Tensor([4104, 4],"float32"), Tensor([4104, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 36, 39],"float16"), Tensor([1, 12, 36, 39],"float16"), Tensor([1, 2],"float32"), Tensor([4212, 4],"float32"), Tensor([4212, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 36, 40],"float16"), Tensor([1, 12, 36, 40],"float16"), Tensor([1, 2],"float32"), Tensor([4320, 4],"float32"), Tensor([4320, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 36, 41],"float16"), Tensor([1, 12, 36, 41],"float16"), Tensor([1, 2],"float32"), Tensor([4428, 4],"float32"), Tensor([4428, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 36, 42],"float16"), Tensor([1, 12, 36, 42],"float16"), Tensor([1, 2],"float32"), Tensor([4536, 4],"float32"), Tensor([4536, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 37, 30],"float16"), Tensor([1, 12, 37, 30],"float16"), Tensor([1, 2],"float32"), Tensor([3330, 4],"float32"), Tensor([3330, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 37, 32],"float16"), Tensor([1, 12, 37, 32],"float16"), Tensor([1, 2],"float32"), Tensor([3552, 4],"float32"), Tensor([3552, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 37, 33],"float16"), Tensor([1, 12, 37, 33],"float16"), Tensor([1, 2],"float32"), Tensor([3663, 4],"float32"), Tensor([3663, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 37, 34],"float16"), Tensor([1, 12, 37, 34],"float16"), Tensor([1, 2],"float32"), Tensor([3774, 4],"float32"), Tensor([3774, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 37, 35],"float16"), Tensor([1, 12, 37, 35],"float16"), Tensor([1, 2],"float32"), Tensor([3885, 4],"float32"), Tensor([3885, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 37, 36],"float16"), Tensor([1, 12, 37, 36],"float16"), Tensor([1, 2],"float32"), Tensor([3996, 4],"float32"), Tensor([3996, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 37, 37],"float16"), Tensor([1, 12, 37, 37],"float16"), Tensor([1, 2],"float32"), Tensor([4107, 4],"float32"), Tensor([4107, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 37, 38],"float16"), Tensor([1, 12, 37, 38],"float16"), Tensor([1, 2],"float32"), Tensor([4218, 4],"float32"), Tensor([4218, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 37, 39],"float16"), Tensor([1, 12, 37, 39],"float16"), Tensor([1, 2],"float32"), Tensor([4329, 4],"float32"), Tensor([4329, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 37, 40],"float16"), Tensor([1, 12, 37, 40],"float16"), Tensor([1, 2],"float32"), Tensor([4440, 4],"float32"), Tensor([4440, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 37, 41],"float16"), Tensor([1, 12, 37, 41],"float16"), Tensor([1, 2],"float32"), Tensor([4551, 4],"float32"), Tensor([4551, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 37, 42],"float16"), Tensor([1, 12, 37, 42],"float16"), Tensor([1, 2],"float32"), Tensor([4662, 4],"float32"), Tensor([4662, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 38, 25],"float16"), Tensor([1, 12, 38, 25],"float16"), Tensor([1, 2],"float32"), Tensor([2850, 4],"float32"), Tensor([2850, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 38, 28],"float16"), Tensor([1, 12, 38, 28],"float16"), Tensor([1, 2],"float32"), Tensor([3192, 4],"float32"), Tensor([3192, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 38, 30],"float16"), Tensor([1, 12, 38, 30],"float16"), Tensor([1, 2],"float32"), Tensor([3420, 4],"float32"), Tensor([3420, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 38, 31],"float16"), Tensor([1, 12, 38, 31],"float16"), Tensor([1, 2],"float32"), Tensor([3534, 4],"float32"), Tensor([3534, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 38, 32],"float16"), Tensor([1, 12, 38, 32],"float16"), Tensor([1, 2],"float32"), Tensor([3648, 4],"float32"), Tensor([3648, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 38, 33],"float16"), Tensor([1, 12, 38, 33],"float16"), Tensor([1, 2],"float32"), Tensor([3762, 4],"float32"), Tensor([3762, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 38, 34],"float16"), Tensor([1, 12, 38, 34],"float16"), Tensor([1, 2],"float32"), Tensor([3876, 4],"float32"), Tensor([3876, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 38, 35],"float16"), Tensor([1, 12, 38, 35],"float16"), Tensor([1, 2],"float32"), Tensor([3990, 4],"float32"), Tensor([3990, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 38, 36],"float16"), Tensor([1, 12, 38, 36],"float16"), Tensor([1, 2],"float32"), Tensor([4104, 4],"float32"), Tensor([4104, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 38, 37],"float16"), Tensor([1, 12, 38, 37],"float16"), Tensor([1, 2],"float32"), Tensor([4218, 4],"float32"), Tensor([4218, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 38, 38],"float16"), Tensor([1, 12, 38, 38],"float16"), Tensor([1, 2],"float32"), Tensor([4332, 4],"float32"), Tensor([4332, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 38, 39],"float16"), Tensor([1, 12, 38, 39],"float16"), Tensor([1, 2],"float32"), Tensor([4446, 4],"float32"), Tensor([4446, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 38, 40],"float16"), Tensor([1, 12, 38, 40],"float16"), Tensor([1, 2],"float32"), Tensor([4560, 4],"float32"), Tensor([4560, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 38, 41],"float16"), Tensor([1, 12, 38, 41],"float16"), Tensor([1, 2],"float32"), Tensor([4674, 4],"float32"), Tensor([4674, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 38, 42],"float16"), Tensor([1, 12, 38, 42],"float16"), Tensor([1, 2],"float32"), Tensor([4788, 4],"float32"), Tensor([4788, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 39, 28],"float16"), Tensor([1, 12, 39, 28],"float16"), Tensor([1, 2],"float32"), Tensor([3276, 4],"float32"), Tensor([3276, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 39, 30],"float16"), Tensor([1, 12, 39, 30],"float16"), Tensor([1, 2],"float32"), Tensor([3510, 4],"float32"), Tensor([3510, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 39, 31],"float16"), Tensor([1, 12, 39, 31],"float16"), Tensor([1, 2],"float32"), Tensor([3627, 4],"float32"), Tensor([3627, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 39, 35],"float16"), Tensor([1, 12, 39, 35],"float16"), Tensor([1, 2],"float32"), Tensor([4095, 4],"float32"), Tensor([4095, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 39, 37],"float16"), Tensor([1, 12, 39, 37],"float16"), Tensor([1, 2],"float32"), Tensor([4329, 4],"float32"), Tensor([4329, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 39, 38],"float16"), Tensor([1, 12, 39, 38],"float16"), Tensor([1, 2],"float32"), Tensor([4446, 4],"float32"), Tensor([4446, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 40, 32],"float16"), Tensor([1, 12, 40, 32],"float16"), Tensor([1, 2],"float32"), Tensor([3840, 4],"float32"), Tensor([3840, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 40, 34],"float16"), Tensor([1, 12, 40, 34],"float16"), Tensor([1, 2],"float32"), Tensor([4080, 4],"float32"), Tensor([4080, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 40, 36],"float16"), Tensor([1, 12, 40, 36],"float16"), Tensor([1, 2],"float32"), Tensor([4320, 4],"float32"), Tensor([4320, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 40, 38],"float16"), Tensor([1, 12, 40, 38],"float16"), Tensor([1, 2],"float32"), Tensor([4560, 4],"float32"), Tensor([4560, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 40, 42],"float16"), Tensor([1, 12, 40, 42],"float16"), Tensor([1, 2],"float32"), Tensor([5040, 4],"float32"), Tensor([5040, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 41, 25],"float16"), Tensor([1, 12, 41, 25],"float16"), Tensor([1, 2],"float32"), Tensor([3075, 4],"float32"), Tensor([3075, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 41, 31],"float16"), Tensor([1, 12, 41, 31],"float16"), Tensor([1, 2],"float32"), Tensor([3813, 4],"float32"), Tensor([3813, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 41, 32],"float16"), Tensor([1, 12, 41, 32],"float16"), Tensor([1, 2],"float32"), Tensor([3936, 4],"float32"), Tensor([3936, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 41, 34],"float16"), Tensor([1, 12, 41, 34],"float16"), Tensor([1, 2],"float32"), Tensor([4182, 4],"float32"), Tensor([4182, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 41, 35],"float16"), Tensor([1, 12, 41, 35],"float16"), Tensor([1, 2],"float32"), Tensor([4305, 4],"float32"), Tensor([4305, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 41, 36],"float16"), Tensor([1, 12, 41, 36],"float16"), Tensor([1, 2],"float32"), Tensor([4428, 4],"float32"), Tensor([4428, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 41, 42],"float16"), Tensor([1, 12, 41, 42],"float16"), Tensor([1, 2],"float32"), Tensor([5166, 4],"float32"), Tensor([5166, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 42, 30],"float16"), Tensor([1, 12, 42, 30],"float16"), Tensor([1, 2],"float32"), Tensor([3780, 4],"float32"), Tensor([3780, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 42, 31],"float16"), Tensor([1, 12, 42, 31],"float16"), Tensor([1, 2],"float32"), Tensor([3906, 4],"float32"), Tensor([3906, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 42, 32],"float16"), Tensor([1, 12, 42, 32],"float16"), Tensor([1, 2],"float32"), Tensor([4032, 4],"float32"), Tensor([4032, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 42, 33],"float16"), Tensor([1, 12, 42, 33],"float16"), Tensor([1, 2],"float32"), Tensor([4158, 4],"float32"), Tensor([4158, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 42, 35],"float16"), Tensor([1, 12, 42, 35],"float16"), Tensor([1, 2],"float32"), Tensor([4410, 4],"float32"), Tensor([4410, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 42, 36],"float16"), Tensor([1, 12, 42, 36],"float16"), Tensor([1, 2],"float32"), Tensor([4536, 4],"float32"), Tensor([4536, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 42, 37],"float16"), Tensor([1, 12, 42, 37],"float16"), Tensor([1, 2],"float32"), Tensor([4662, 4],"float32"), Tensor([4662, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 42, 38],"float16"), Tensor([1, 12, 42, 38],"float16"), Tensor([1, 2],"float32"), Tensor([4788, 4],"float32"), Tensor([4788, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 42, 42],"float16"), Tensor([1, 12, 42, 42],"float16"), Tensor([1, 2],"float32"), Tensor([5292, 4],"float32"), Tensor([5292, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 42, 62],"float16"), Tensor([1, 12, 42, 62],"float16"), Tensor([1, 2],"float32"), Tensor([7812, 4],"float32"), Tensor([7812, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 42, 64],"float16"), Tensor([1, 12, 42, 64],"float16"), Tensor([1, 2],"float32"), Tensor([8064, 4],"float32"), Tensor([8064, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 44, 60],"float16"), Tensor([1, 12, 44, 60],"float16"), Tensor([1, 2],"float32"), Tensor([7920, 4],"float32"), Tensor([7920, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 44, 64],"float16"), Tensor([1, 12, 44, 64],"float16"), Tensor([1, 2],"float32"), Tensor([8448, 4],"float32"), Tensor([8448, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 44, 66],"float16"), Tensor([1, 12, 44, 66],"float16"), Tensor([1, 2],"float32"), Tensor([8712, 4],"float32"), Tensor([8712, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 44, 68],"float16"), Tensor([1, 12, 44, 68],"float16"), Tensor([1, 2],"float32"), Tensor([8976, 4],"float32"), Tensor([8976, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 44, 74],"float16"), Tensor([1, 12, 44, 74],"float16"), Tensor([1, 2],"float32"), Tensor([9768, 4],"float32"), Tensor([9768, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 44, 84],"float16"), Tensor([1, 12, 44, 84],"float16"), Tensor([1, 2],"float32"), Tensor([11088, 4],"float32"), Tensor([11088, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 46, 60],"float16"), Tensor([1, 12, 46, 60],"float16"), Tensor([1, 2],"float32"), Tensor([8280, 4],"float32"), Tensor([8280, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 46, 62],"float16"), Tensor([1, 12, 46, 62],"float16"), Tensor([1, 2],"float32"), Tensor([8556, 4],"float32"), Tensor([8556, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 46, 64],"float16"), Tensor([1, 12, 46, 64],"float16"), Tensor([1, 2],"float32"), Tensor([8832, 4],"float32"), Tensor([8832, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 46, 66],"float16"), Tensor([1, 12, 46, 66],"float16"), Tensor([1, 2],"float32"), Tensor([9108, 4],"float32"), Tensor([9108, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 46, 68],"float16"), Tensor([1, 12, 46, 68],"float16"), Tensor([1, 2],"float32"), Tensor([9384, 4],"float32"), Tensor([9384, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 46, 70],"float16"), Tensor([1, 12, 46, 70],"float16"), Tensor([1, 2],"float32"), Tensor([9660, 4],"float32"), Tensor([9660, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 46, 74],"float16"), Tensor([1, 12, 46, 74],"float16"), Tensor([1, 2],"float32"), Tensor([10212, 4],"float32"), Tensor([10212, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 46, 76],"float16"), Tensor([1, 12, 46, 76],"float16"), Tensor([1, 2],"float32"), Tensor([10488, 4],"float32"), Tensor([10488, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 46, 78],"float16"), Tensor([1, 12, 46, 78],"float16"), Tensor([1, 2],"float32"), Tensor([10764, 4],"float32"), Tensor([10764, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 46, 80],"float16"), Tensor([1, 12, 46, 80],"float16"), Tensor([1, 2],"float32"), Tensor([11040, 4],"float32"), Tensor([11040, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 46, 82],"float16"), Tensor([1, 12, 46, 82],"float16"), Tensor([1, 2],"float32"), Tensor([11316, 4],"float32"), Tensor([11316, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 46, 84],"float16"), Tensor([1, 12, 46, 84],"float16"), Tensor([1, 2],"float32"), Tensor([11592, 4],"float32"), Tensor([11592, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 48, 60],"float16"), Tensor([1, 12, 48, 60],"float16"), Tensor([1, 2],"float32"), Tensor([8640, 4],"float32"), Tensor([8640, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 48, 62],"float16"), Tensor([1, 12, 48, 62],"float16"), Tensor([1, 2],"float32"), Tensor([8928, 4],"float32"), Tensor([8928, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 48, 64],"float16"), Tensor([1, 12, 48, 64],"float16"), Tensor([1, 2],"float32"), Tensor([9216, 4],"float32"), Tensor([9216, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 48, 66],"float16"), Tensor([1, 12, 48, 66],"float16"), Tensor([1, 2],"float32"), Tensor([9504, 4],"float32"), Tensor([9504, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 48, 68],"float16"), Tensor([1, 12, 48, 68],"float16"), Tensor([1, 2],"float32"), Tensor([9792, 4],"float32"), Tensor([9792, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 48, 70],"float16"), Tensor([1, 12, 48, 70],"float16"), Tensor([1, 2],"float32"), Tensor([10080, 4],"float32"), Tensor([10080, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 48, 72],"float16"), Tensor([1, 12, 48, 72],"float16"), Tensor([1, 2],"float32"), Tensor([10368, 4],"float32"), Tensor([10368, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 48, 74],"float16"), Tensor([1, 12, 48, 74],"float16"), Tensor([1, 2],"float32"), Tensor([10656, 4],"float32"), Tensor([10656, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 48, 76],"float16"), Tensor([1, 12, 48, 76],"float16"), Tensor([1, 2],"float32"), Tensor([10944, 4],"float32"), Tensor([10944, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 48, 80],"float16"), Tensor([1, 12, 48, 80],"float16"), Tensor([1, 2],"float32"), Tensor([11520, 4],"float32"), Tensor([11520, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 48, 82],"float16"), Tensor([1, 12, 48, 82],"float16"), Tensor([1, 2],"float32"), Tensor([11808, 4],"float32"), Tensor([11808, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 48, 84],"float16"), Tensor([1, 12, 48, 84],"float16"), Tensor([1, 2],"float32"), Tensor([12096, 4],"float32"), Tensor([12096, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 50, 60],"float16"), Tensor([1, 12, 50, 60],"float16"), Tensor([1, 2],"float32"), Tensor([9000, 4],"float32"), Tensor([9000, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 50, 62],"float16"), Tensor([1, 12, 50, 62],"float16"), Tensor([1, 2],"float32"), Tensor([9300, 4],"float32"), Tensor([9300, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 50, 64],"float16"), Tensor([1, 12, 50, 64],"float16"), Tensor([1, 2],"float32"), Tensor([9600, 4],"float32"), Tensor([9600, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 50, 66],"float16"), Tensor([1, 12, 50, 66],"float16"), Tensor([1, 2],"float32"), Tensor([9900, 4],"float32"), Tensor([9900, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 50, 68],"float16"), Tensor([1, 12, 50, 68],"float16"), Tensor([1, 2],"float32"), Tensor([10200, 4],"float32"), Tensor([10200, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 50, 70],"float16"), Tensor([1, 12, 50, 70],"float16"), Tensor([1, 2],"float32"), Tensor([10500, 4],"float32"), Tensor([10500, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 50, 72],"float16"), Tensor([1, 12, 50, 72],"float16"), Tensor([1, 2],"float32"), Tensor([10800, 4],"float32"), Tensor([10800, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 50, 74],"float16"), Tensor([1, 12, 50, 74],"float16"), Tensor([1, 2],"float32"), Tensor([11100, 4],"float32"), Tensor([11100, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 50, 76],"float16"), Tensor([1, 12, 50, 76],"float16"), Tensor([1, 2],"float32"), Tensor([11400, 4],"float32"), Tensor([11400, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 50, 78],"float16"), Tensor([1, 12, 50, 78],"float16"), Tensor([1, 2],"float32"), Tensor([11700, 4],"float32"), Tensor([11700, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 50, 80],"float16"), Tensor([1, 12, 50, 80],"float16"), Tensor([1, 2],"float32"), Tensor([12000, 4],"float32"), Tensor([12000, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 50, 82],"float16"), Tensor([1, 12, 50, 82],"float16"), Tensor([1, 2],"float32"), Tensor([12300, 4],"float32"), Tensor([12300, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 50, 84],"float16"), Tensor([1, 12, 50, 84],"float16"), Tensor([1, 2],"float32"), Tensor([12600, 4],"float32"), Tensor([12600, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 52, 64],"float16"), Tensor([1, 12, 52, 64],"float16"), Tensor([1, 2],"float32"), Tensor([9984, 4],"float32"), Tensor([9984, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 52, 72],"float16"), Tensor([1, 12, 52, 72],"float16"), Tensor([1, 2],"float32"), Tensor([11232, 4],"float32"), Tensor([11232, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 52, 74],"float16"), Tensor([1, 12, 52, 74],"float16"), Tensor([1, 2],"float32"), Tensor([11544, 4],"float32"), Tensor([11544, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 52, 76],"float16"), Tensor([1, 12, 52, 76],"float16"), Tensor([1, 2],"float32"), Tensor([11856, 4],"float32"), Tensor([11856, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 52, 82],"float16"), Tensor([1, 12, 52, 82],"float16"), Tensor([1, 2],"float32"), Tensor([12792, 4],"float32"), Tensor([12792, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 52, 84],"float16"), Tensor([1, 12, 52, 84],"float16"), Tensor([1, 2],"float32"), Tensor([13104, 4],"float32"), Tensor([13104, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 54, 56],"float16"), Tensor([1, 12, 54, 56],"float16"), Tensor([1, 2],"float32"), Tensor([9072, 4],"float32"), Tensor([9072, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 54, 62],"float16"), Tensor([1, 12, 54, 62],"float16"), Tensor([1, 2],"float32"), Tensor([10044, 4],"float32"), Tensor([10044, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 54, 64],"float16"), Tensor([1, 12, 54, 64],"float16"), Tensor([1, 2],"float32"), Tensor([10368, 4],"float32"), Tensor([10368, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 54, 66],"float16"), Tensor([1, 12, 54, 66],"float16"), Tensor([1, 2],"float32"), Tensor([10692, 4],"float32"), Tensor([10692, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 54, 68],"float16"), Tensor([1, 12, 54, 68],"float16"), Tensor([1, 2],"float32"), Tensor([11016, 4],"float32"), Tensor([11016, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 54, 70],"float16"), Tensor([1, 12, 54, 70],"float16"), Tensor([1, 2],"float32"), Tensor([11340, 4],"float32"), Tensor([11340, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 54, 72],"float16"), Tensor([1, 12, 54, 72],"float16"), Tensor([1, 2],"float32"), Tensor([11664, 4],"float32"), Tensor([11664, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 54, 76],"float16"), Tensor([1, 12, 54, 76],"float16"), Tensor([1, 2],"float32"), Tensor([12312, 4],"float32"), Tensor([12312, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 54, 78],"float16"), Tensor([1, 12, 54, 78],"float16"), Tensor([1, 2],"float32"), Tensor([12636, 4],"float32"), Tensor([12636, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 54, 82],"float16"), Tensor([1, 12, 54, 82],"float16"), Tensor([1, 2],"float32"), Tensor([13284, 4],"float32"), Tensor([13284, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 54, 84],"float16"), Tensor([1, 12, 54, 84],"float16"), Tensor([1, 2],"float32"), Tensor([13608, 4],"float32"), Tensor([13608, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 56, 62],"float16"), Tensor([1, 12, 56, 62],"float16"), Tensor([1, 2],"float32"), Tensor([10416, 4],"float32"), Tensor([10416, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 56, 64],"float16"), Tensor([1, 12, 56, 64],"float16"), Tensor([1, 2],"float32"), Tensor([10752, 4],"float32"), Tensor([10752, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 56, 66],"float16"), Tensor([1, 12, 56, 66],"float16"), Tensor([1, 2],"float32"), Tensor([11088, 4],"float32"), Tensor([11088, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 56, 68],"float16"), Tensor([1, 12, 56, 68],"float16"), Tensor([1, 2],"float32"), Tensor([11424, 4],"float32"), Tensor([11424, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 56, 70],"float16"), Tensor([1, 12, 56, 70],"float16"), Tensor([1, 2],"float32"), Tensor([11760, 4],"float32"), Tensor([11760, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 56, 72],"float16"), Tensor([1, 12, 56, 72],"float16"), Tensor([1, 2],"float32"), Tensor([12096, 4],"float32"), Tensor([12096, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 56, 74],"float16"), Tensor([1, 12, 56, 74],"float16"), Tensor([1, 2],"float32"), Tensor([12432, 4],"float32"), Tensor([12432, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 56, 76],"float16"), Tensor([1, 12, 56, 76],"float16"), Tensor([1, 2],"float32"), Tensor([12768, 4],"float32"), Tensor([12768, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 56, 78],"float16"), Tensor([1, 12, 56, 78],"float16"), Tensor([1, 2],"float32"), Tensor([13104, 4],"float32"), Tensor([13104, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 56, 80],"float16"), Tensor([1, 12, 56, 80],"float16"), Tensor([1, 2],"float32"), Tensor([13440, 4],"float32"), Tensor([13440, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 56, 82],"float16"), Tensor([1, 12, 56, 82],"float16"), Tensor([1, 2],"float32"), Tensor([13776, 4],"float32"), Tensor([13776, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 56, 84],"float16"), Tensor([1, 12, 56, 84],"float16"), Tensor([1, 2],"float32"), Tensor([14112, 4],"float32"), Tensor([14112, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 58, 62],"float16"), Tensor([1, 12, 58, 62],"float16"), Tensor([1, 2],"float32"), Tensor([10788, 4],"float32"), Tensor([10788, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 58, 64],"float16"), Tensor([1, 12, 58, 64],"float16"), Tensor([1, 2],"float32"), Tensor([11136, 4],"float32"), Tensor([11136, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 58, 66],"float16"), Tensor([1, 12, 58, 66],"float16"), Tensor([1, 2],"float32"), Tensor([11484, 4],"float32"), Tensor([11484, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 58, 68],"float16"), Tensor([1, 12, 58, 68],"float16"), Tensor([1, 2],"float32"), Tensor([11832, 4],"float32"), Tensor([11832, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 58, 80],"float16"), Tensor([1, 12, 58, 80],"float16"), Tensor([1, 2],"float32"), Tensor([13920, 4],"float32"), Tensor([13920, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 58, 84],"float16"), Tensor([1, 12, 58, 84],"float16"), Tensor([1, 2],"float32"), Tensor([14616, 4],"float32"), Tensor([14616, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 60, 52],"float16"), Tensor([1, 12, 60, 52],"float16"), Tensor([1, 2],"float32"), Tensor([9360, 4],"float32"), Tensor([9360, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 60, 60],"float16"), Tensor([1, 12, 60, 60],"float16"), Tensor([1, 2],"float32"), Tensor([10800, 4],"float32"), Tensor([10800, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 60, 62],"float16"), Tensor([1, 12, 60, 62],"float16"), Tensor([1, 2],"float32"), Tensor([11160, 4],"float32"), Tensor([11160, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 60, 64],"float16"), Tensor([1, 12, 60, 64],"float16"), Tensor([1, 2],"float32"), Tensor([11520, 4],"float32"), Tensor([11520, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 60, 68],"float16"), Tensor([1, 12, 60, 68],"float16"), Tensor([1, 2],"float32"), Tensor([12240, 4],"float32"), Tensor([12240, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 60, 70],"float16"), Tensor([1, 12, 60, 70],"float16"), Tensor([1, 2],"float32"), Tensor([12600, 4],"float32"), Tensor([12600, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 60, 72],"float16"), Tensor([1, 12, 60, 72],"float16"), Tensor([1, 2],"float32"), Tensor([12960, 4],"float32"), Tensor([12960, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 60, 74],"float16"), Tensor([1, 12, 60, 74],"float16"), Tensor([1, 2],"float32"), Tensor([13320, 4],"float32"), Tensor([13320, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 60, 76],"float16"), Tensor([1, 12, 60, 76],"float16"), Tensor([1, 2],"float32"), Tensor([13680, 4],"float32"), Tensor([13680, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 60, 78],"float16"), Tensor([1, 12, 60, 78],"float16"), Tensor([1, 2],"float32"), Tensor([14040, 4],"float32"), Tensor([14040, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 60, 80],"float16"), Tensor([1, 12, 60, 80],"float16"), Tensor([1, 2],"float32"), Tensor([14400, 4],"float32"), Tensor([14400, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 60, 82],"float16"), Tensor([1, 12, 60, 82],"float16"), Tensor([1, 2],"float32"), Tensor([14760, 4],"float32"), Tensor([14760, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 60, 84],"float16"), Tensor([1, 12, 60, 84],"float16"), Tensor([1, 2],"float32"), Tensor([15120, 4],"float32"), Tensor([15120, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 62, 48],"float16"), Tensor([1, 12, 62, 48],"float16"), Tensor([1, 2],"float32"), Tensor([8928, 4],"float32"), Tensor([8928, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 62, 56],"float16"), Tensor([1, 12, 62, 56],"float16"), Tensor([1, 2],"float32"), Tensor([10416, 4],"float32"), Tensor([10416, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 62, 62],"float16"), Tensor([1, 12, 62, 62],"float16"), Tensor([1, 2],"float32"), Tensor([11532, 4],"float32"), Tensor([11532, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 62, 64],"float16"), Tensor([1, 12, 62, 64],"float16"), Tensor([1, 2],"float32"), Tensor([11904, 4],"float32"), Tensor([11904, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 62, 66],"float16"), Tensor([1, 12, 62, 66],"float16"), Tensor([1, 2],"float32"), Tensor([12276, 4],"float32"), Tensor([12276, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 62, 68],"float16"), Tensor([1, 12, 62, 68],"float16"), Tensor([1, 2],"float32"), Tensor([12648, 4],"float32"), Tensor([12648, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 62, 70],"float16"), Tensor([1, 12, 62, 70],"float16"), Tensor([1, 2],"float32"), Tensor([13020, 4],"float32"), Tensor([13020, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 62, 72],"float16"), Tensor([1, 12, 62, 72],"float16"), Tensor([1, 2],"float32"), Tensor([13392, 4],"float32"), Tensor([13392, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 62, 74],"float16"), Tensor([1, 12, 62, 74],"float16"), Tensor([1, 2],"float32"), Tensor([13764, 4],"float32"), Tensor([13764, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 62, 76],"float16"), Tensor([1, 12, 62, 76],"float16"), Tensor([1, 2],"float32"), Tensor([14136, 4],"float32"), Tensor([14136, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 62, 78],"float16"), Tensor([1, 12, 62, 78],"float16"), Tensor([1, 2],"float32"), Tensor([14508, 4],"float32"), Tensor([14508, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 62, 80],"float16"), Tensor([1, 12, 62, 80],"float16"), Tensor([1, 2],"float32"), Tensor([14880, 4],"float32"), Tensor([14880, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 62, 82],"float16"), Tensor([1, 12, 62, 82],"float16"), Tensor([1, 2],"float32"), Tensor([15252, 4],"float32"), Tensor([15252, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 62, 84],"float16"), Tensor([1, 12, 62, 84],"float16"), Tensor([1, 2],"float32"), Tensor([15624, 4],"float32"), Tensor([15624, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 64, 54],"float16"), Tensor([1, 12, 64, 54],"float16"), Tensor([1, 2],"float32"), Tensor([10368, 4],"float32"), Tensor([10368, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 64, 56],"float16"), Tensor([1, 12, 64, 56],"float16"), Tensor([1, 2],"float32"), Tensor([10752, 4],"float32"), Tensor([10752, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 64, 60],"float16"), Tensor([1, 12, 64, 60],"float16"), Tensor([1, 2],"float32"), Tensor([11520, 4],"float32"), Tensor([11520, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 64, 62],"float16"), Tensor([1, 12, 64, 62],"float16"), Tensor([1, 2],"float32"), Tensor([11904, 4],"float32"), Tensor([11904, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 64, 64],"float16"), Tensor([1, 12, 64, 64],"float16"), Tensor([1, 2],"float32"), Tensor([12288, 4],"float32"), Tensor([12288, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 64, 66],"float16"), Tensor([1, 12, 64, 66],"float16"), Tensor([1, 2],"float32"), Tensor([12672, 4],"float32"), Tensor([12672, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 64, 68],"float16"), Tensor([1, 12, 64, 68],"float16"), Tensor([1, 2],"float32"), Tensor([13056, 4],"float32"), Tensor([13056, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 64, 70],"float16"), Tensor([1, 12, 64, 70],"float16"), Tensor([1, 2],"float32"), Tensor([13440, 4],"float32"), Tensor([13440, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 64, 72],"float16"), Tensor([1, 12, 64, 72],"float16"), Tensor([1, 2],"float32"), Tensor([13824, 4],"float32"), Tensor([13824, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 64, 74],"float16"), Tensor([1, 12, 64, 74],"float16"), Tensor([1, 2],"float32"), Tensor([14208, 4],"float32"), Tensor([14208, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 64, 76],"float16"), Tensor([1, 12, 64, 76],"float16"), Tensor([1, 2],"float32"), Tensor([14592, 4],"float32"), Tensor([14592, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 64, 78],"float16"), Tensor([1, 12, 64, 78],"float16"), Tensor([1, 2],"float32"), Tensor([14976, 4],"float32"), Tensor([14976, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 64, 80],"float16"), Tensor([1, 12, 64, 80],"float16"), Tensor([1, 2],"float32"), Tensor([15360, 4],"float32"), Tensor([15360, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 64, 82],"float16"), Tensor([1, 12, 64, 82],"float16"), Tensor([1, 2],"float32"), Tensor([15744, 4],"float32"), Tensor([15744, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 64, 84],"float16"), Tensor([1, 12, 64, 84],"float16"), Tensor([1, 2],"float32"), Tensor([16128, 4],"float32"), Tensor([16128, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 66, 48],"float16"), Tensor([1, 12, 66, 48],"float16"), Tensor([1, 2],"float32"), Tensor([9504, 4],"float32"), Tensor([9504, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 66, 52],"float16"), Tensor([1, 12, 66, 52],"float16"), Tensor([1, 2],"float32"), Tensor([10296, 4],"float32"), Tensor([10296, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 66, 54],"float16"), Tensor([1, 12, 66, 54],"float16"), Tensor([1, 2],"float32"), Tensor([10692, 4],"float32"), Tensor([10692, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 66, 62],"float16"), Tensor([1, 12, 66, 62],"float16"), Tensor([1, 2],"float32"), Tensor([12276, 4],"float32"), Tensor([12276, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 66, 64],"float16"), Tensor([1, 12, 66, 64],"float16"), Tensor([1, 2],"float32"), Tensor([12672, 4],"float32"), Tensor([12672, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 66, 66],"float16"), Tensor([1, 12, 66, 66],"float16"), Tensor([1, 2],"float32"), Tensor([13068, 4],"float32"), Tensor([13068, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 66, 68],"float16"), Tensor([1, 12, 66, 68],"float16"), Tensor([1, 2],"float32"), Tensor([13464, 4],"float32"), Tensor([13464, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 66, 70],"float16"), Tensor([1, 12, 66, 70],"float16"), Tensor([1, 2],"float32"), Tensor([13860, 4],"float32"), Tensor([13860, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 66, 72],"float16"), Tensor([1, 12, 66, 72],"float16"), Tensor([1, 2],"float32"), Tensor([14256, 4],"float32"), Tensor([14256, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 66, 74],"float16"), Tensor([1, 12, 66, 74],"float16"), Tensor([1, 2],"float32"), Tensor([14652, 4],"float32"), Tensor([14652, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 66, 76],"float16"), Tensor([1, 12, 66, 76],"float16"), Tensor([1, 2],"float32"), Tensor([15048, 4],"float32"), Tensor([15048, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 66, 78],"float16"), Tensor([1, 12, 66, 78],"float16"), Tensor([1, 2],"float32"), Tensor([15444, 4],"float32"), Tensor([15444, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 66, 80],"float16"), Tensor([1, 12, 66, 80],"float16"), Tensor([1, 2],"float32"), Tensor([15840, 4],"float32"), Tensor([15840, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 66, 82],"float16"), Tensor([1, 12, 66, 82],"float16"), Tensor([1, 2],"float32"), Tensor([16236, 4],"float32"), Tensor([16236, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 66, 84],"float16"), Tensor([1, 12, 66, 84],"float16"), Tensor([1, 2],"float32"), Tensor([16632, 4],"float32"), Tensor([16632, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 68, 44],"float16"), Tensor([1, 12, 68, 44],"float16"), Tensor([1, 2],"float32"), Tensor([8976, 4],"float32"), Tensor([8976, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 68, 48],"float16"), Tensor([1, 12, 68, 48],"float16"), Tensor([1, 2],"float32"), Tensor([9792, 4],"float32"), Tensor([9792, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 68, 54],"float16"), Tensor([1, 12, 68, 54],"float16"), Tensor([1, 2],"float32"), Tensor([11016, 4],"float32"), Tensor([11016, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 68, 56],"float16"), Tensor([1, 12, 68, 56],"float16"), Tensor([1, 2],"float32"), Tensor([11424, 4],"float32"), Tensor([11424, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 68, 58],"float16"), Tensor([1, 12, 68, 58],"float16"), Tensor([1, 2],"float32"), Tensor([11832, 4],"float32"), Tensor([11832, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 68, 60],"float16"), Tensor([1, 12, 68, 60],"float16"), Tensor([1, 2],"float32"), Tensor([12240, 4],"float32"), Tensor([12240, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 68, 62],"float16"), Tensor([1, 12, 68, 62],"float16"), Tensor([1, 2],"float32"), Tensor([12648, 4],"float32"), Tensor([12648, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 68, 64],"float16"), Tensor([1, 12, 68, 64],"float16"), Tensor([1, 2],"float32"), Tensor([13056, 4],"float32"), Tensor([13056, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 68, 66],"float16"), Tensor([1, 12, 68, 66],"float16"), Tensor([1, 2],"float32"), Tensor([13464, 4],"float32"), Tensor([13464, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 68, 68],"float16"), Tensor([1, 12, 68, 68],"float16"), Tensor([1, 2],"float32"), Tensor([13872, 4],"float32"), Tensor([13872, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 68, 70],"float16"), Tensor([1, 12, 68, 70],"float16"), Tensor([1, 2],"float32"), Tensor([14280, 4],"float32"), Tensor([14280, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 68, 72],"float16"), Tensor([1, 12, 68, 72],"float16"), Tensor([1, 2],"float32"), Tensor([14688, 4],"float32"), Tensor([14688, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 68, 74],"float16"), Tensor([1, 12, 68, 74],"float16"), Tensor([1, 2],"float32"), Tensor([15096, 4],"float32"), Tensor([15096, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 68, 76],"float16"), Tensor([1, 12, 68, 76],"float16"), Tensor([1, 2],"float32"), Tensor([15504, 4],"float32"), Tensor([15504, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 68, 78],"float16"), Tensor([1, 12, 68, 78],"float16"), Tensor([1, 2],"float32"), Tensor([15912, 4],"float32"), Tensor([15912, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 68, 80],"float16"), Tensor([1, 12, 68, 80],"float16"), Tensor([1, 2],"float32"), Tensor([16320, 4],"float32"), Tensor([16320, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 68, 82],"float16"), Tensor([1, 12, 68, 82],"float16"), Tensor([1, 2],"float32"), Tensor([16728, 4],"float32"), Tensor([16728, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 68, 84],"float16"), Tensor([1, 12, 68, 84],"float16"), Tensor([1, 2],"float32"), Tensor([17136, 4],"float32"), Tensor([17136, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 70, 48],"float16"), Tensor([1, 12, 70, 48],"float16"), Tensor([1, 2],"float32"), Tensor([10080, 4],"float32"), Tensor([10080, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 70, 56],"float16"), Tensor([1, 12, 70, 56],"float16"), Tensor([1, 2],"float32"), Tensor([11760, 4],"float32"), Tensor([11760, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 70, 60],"float16"), Tensor([1, 12, 70, 60],"float16"), Tensor([1, 2],"float32"), Tensor([12600, 4],"float32"), Tensor([12600, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 70, 62],"float16"), Tensor([1, 12, 70, 62],"float16"), Tensor([1, 2],"float32"), Tensor([13020, 4],"float32"), Tensor([13020, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 70, 64],"float16"), Tensor([1, 12, 70, 64],"float16"), Tensor([1, 2],"float32"), Tensor([13440, 4],"float32"), Tensor([13440, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 70, 66],"float16"), Tensor([1, 12, 70, 66],"float16"), Tensor([1, 2],"float32"), Tensor([13860, 4],"float32"), Tensor([13860, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 70, 68],"float16"), Tensor([1, 12, 70, 68],"float16"), Tensor([1, 2],"float32"), Tensor([14280, 4],"float32"), Tensor([14280, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 70, 70],"float16"), Tensor([1, 12, 70, 70],"float16"), Tensor([1, 2],"float32"), Tensor([14700, 4],"float32"), Tensor([14700, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 70, 72],"float16"), Tensor([1, 12, 70, 72],"float16"), Tensor([1, 2],"float32"), Tensor([15120, 4],"float32"), Tensor([15120, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 70, 74],"float16"), Tensor([1, 12, 70, 74],"float16"), Tensor([1, 2],"float32"), Tensor([15540, 4],"float32"), Tensor([15540, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 70, 76],"float16"), Tensor([1, 12, 70, 76],"float16"), Tensor([1, 2],"float32"), Tensor([15960, 4],"float32"), Tensor([15960, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 70, 78],"float16"), Tensor([1, 12, 70, 78],"float16"), Tensor([1, 2],"float32"), Tensor([16380, 4],"float32"), Tensor([16380, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 70, 82],"float16"), Tensor([1, 12, 70, 82],"float16"), Tensor([1, 2],"float32"), Tensor([17220, 4],"float32"), Tensor([17220, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 70, 84],"float16"), Tensor([1, 12, 70, 84],"float16"), Tensor([1, 2],"float32"), Tensor([17640, 4],"float32"), Tensor([17640, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 72, 54],"float16"), Tensor([1, 12, 72, 54],"float16"), Tensor([1, 2],"float32"), Tensor([11664, 4],"float32"), Tensor([11664, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 72, 56],"float16"), Tensor([1, 12, 72, 56],"float16"), Tensor([1, 2],"float32"), Tensor([12096, 4],"float32"), Tensor([12096, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 72, 60],"float16"), Tensor([1, 12, 72, 60],"float16"), Tensor([1, 2],"float32"), Tensor([12960, 4],"float32"), Tensor([12960, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 72, 62],"float16"), Tensor([1, 12, 72, 62],"float16"), Tensor([1, 2],"float32"), Tensor([13392, 4],"float32"), Tensor([13392, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 72, 64],"float16"), Tensor([1, 12, 72, 64],"float16"), Tensor([1, 2],"float32"), Tensor([13824, 4],"float32"), Tensor([13824, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 72, 66],"float16"), Tensor([1, 12, 72, 66],"float16"), Tensor([1, 2],"float32"), Tensor([14256, 4],"float32"), Tensor([14256, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 72, 68],"float16"), Tensor([1, 12, 72, 68],"float16"), Tensor([1, 2],"float32"), Tensor([14688, 4],"float32"), Tensor([14688, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 72, 70],"float16"), Tensor([1, 12, 72, 70],"float16"), Tensor([1, 2],"float32"), Tensor([15120, 4],"float32"), Tensor([15120, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 72, 72],"float16"), Tensor([1, 12, 72, 72],"float16"), Tensor([1, 2],"float32"), Tensor([15552, 4],"float32"), Tensor([15552, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 72, 74],"float16"), Tensor([1, 12, 72, 74],"float16"), Tensor([1, 2],"float32"), Tensor([15984, 4],"float32"), Tensor([15984, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 72, 76],"float16"), Tensor([1, 12, 72, 76],"float16"), Tensor([1, 2],"float32"), Tensor([16416, 4],"float32"), Tensor([16416, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 72, 78],"float16"), Tensor([1, 12, 72, 78],"float16"), Tensor([1, 2],"float32"), Tensor([16848, 4],"float32"), Tensor([16848, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 72, 80],"float16"), Tensor([1, 12, 72, 80],"float16"), Tensor([1, 2],"float32"), Tensor([17280, 4],"float32"), Tensor([17280, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 72, 82],"float16"), Tensor([1, 12, 72, 82],"float16"), Tensor([1, 2],"float32"), Tensor([17712, 4],"float32"), Tensor([17712, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 72, 84],"float16"), Tensor([1, 12, 72, 84],"float16"), Tensor([1, 2],"float32"), Tensor([18144, 4],"float32"), Tensor([18144, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 74, 60],"float16"), Tensor([1, 12, 74, 60],"float16"), Tensor([1, 2],"float32"), Tensor([13320, 4],"float32"), Tensor([13320, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 74, 64],"float16"), Tensor([1, 12, 74, 64],"float16"), Tensor([1, 2],"float32"), Tensor([14208, 4],"float32"), Tensor([14208, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 74, 66],"float16"), Tensor([1, 12, 74, 66],"float16"), Tensor([1, 2],"float32"), Tensor([14652, 4],"float32"), Tensor([14652, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 74, 68],"float16"), Tensor([1, 12, 74, 68],"float16"), Tensor([1, 2],"float32"), Tensor([15096, 4],"float32"), Tensor([15096, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 74, 70],"float16"), Tensor([1, 12, 74, 70],"float16"), Tensor([1, 2],"float32"), Tensor([15540, 4],"float32"), Tensor([15540, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 74, 72],"float16"), Tensor([1, 12, 74, 72],"float16"), Tensor([1, 2],"float32"), Tensor([15984, 4],"float32"), Tensor([15984, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 74, 74],"float16"), Tensor([1, 12, 74, 74],"float16"), Tensor([1, 2],"float32"), Tensor([16428, 4],"float32"), Tensor([16428, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 74, 76],"float16"), Tensor([1, 12, 74, 76],"float16"), Tensor([1, 2],"float32"), Tensor([16872, 4],"float32"), Tensor([16872, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 74, 78],"float16"), Tensor([1, 12, 74, 78],"float16"), Tensor([1, 2],"float32"), Tensor([17316, 4],"float32"), Tensor([17316, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 74, 80],"float16"), Tensor([1, 12, 74, 80],"float16"), Tensor([1, 2],"float32"), Tensor([17760, 4],"float32"), Tensor([17760, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 74, 82],"float16"), Tensor([1, 12, 74, 82],"float16"), Tensor([1, 2],"float32"), Tensor([18204, 4],"float32"), Tensor([18204, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 74, 84],"float16"), Tensor([1, 12, 74, 84],"float16"), Tensor([1, 2],"float32"), Tensor([18648, 4],"float32"), Tensor([18648, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 76, 50],"float16"), Tensor([1, 12, 76, 50],"float16"), Tensor([1, 2],"float32"), Tensor([11400, 4],"float32"), Tensor([11400, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 76, 56],"float16"), Tensor([1, 12, 76, 56],"float16"), Tensor([1, 2],"float32"), Tensor([12768, 4],"float32"), Tensor([12768, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 76, 60],"float16"), Tensor([1, 12, 76, 60],"float16"), Tensor([1, 2],"float32"), Tensor([13680, 4],"float32"), Tensor([13680, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 76, 62],"float16"), Tensor([1, 12, 76, 62],"float16"), Tensor([1, 2],"float32"), Tensor([14136, 4],"float32"), Tensor([14136, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 76, 64],"float16"), Tensor([1, 12, 76, 64],"float16"), Tensor([1, 2],"float32"), Tensor([14592, 4],"float32"), Tensor([14592, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 76, 66],"float16"), Tensor([1, 12, 76, 66],"float16"), Tensor([1, 2],"float32"), Tensor([15048, 4],"float32"), Tensor([15048, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 76, 68],"float16"), Tensor([1, 12, 76, 68],"float16"), Tensor([1, 2],"float32"), Tensor([15504, 4],"float32"), Tensor([15504, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 76, 70],"float16"), Tensor([1, 12, 76, 70],"float16"), Tensor([1, 2],"float32"), Tensor([15960, 4],"float32"), Tensor([15960, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 76, 72],"float16"), Tensor([1, 12, 76, 72],"float16"), Tensor([1, 2],"float32"), Tensor([16416, 4],"float32"), Tensor([16416, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 76, 74],"float16"), Tensor([1, 12, 76, 74],"float16"), Tensor([1, 2],"float32"), Tensor([16872, 4],"float32"), Tensor([16872, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 76, 76],"float16"), Tensor([1, 12, 76, 76],"float16"), Tensor([1, 2],"float32"), Tensor([17328, 4],"float32"), Tensor([17328, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 76, 78],"float16"), Tensor([1, 12, 76, 78],"float16"), Tensor([1, 2],"float32"), Tensor([17784, 4],"float32"), Tensor([17784, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 76, 80],"float16"), Tensor([1, 12, 76, 80],"float16"), Tensor([1, 2],"float32"), Tensor([18240, 4],"float32"), Tensor([18240, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 76, 82],"float16"), Tensor([1, 12, 76, 82],"float16"), Tensor([1, 2],"float32"), Tensor([18696, 4],"float32"), Tensor([18696, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 76, 84],"float16"), Tensor([1, 12, 76, 84],"float16"), Tensor([1, 2],"float32"), Tensor([19152, 4],"float32"), Tensor([19152, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 78, 56],"float16"), Tensor([1, 12, 78, 56],"float16"), Tensor([1, 2],"float32"), Tensor([13104, 4],"float32"), Tensor([13104, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 78, 60],"float16"), Tensor([1, 12, 78, 60],"float16"), Tensor([1, 2],"float32"), Tensor([14040, 4],"float32"), Tensor([14040, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 78, 62],"float16"), Tensor([1, 12, 78, 62],"float16"), Tensor([1, 2],"float32"), Tensor([14508, 4],"float32"), Tensor([14508, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 78, 70],"float16"), Tensor([1, 12, 78, 70],"float16"), Tensor([1, 2],"float32"), Tensor([16380, 4],"float32"), Tensor([16380, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 78, 74],"float16"), Tensor([1, 12, 78, 74],"float16"), Tensor([1, 2],"float32"), Tensor([17316, 4],"float32"), Tensor([17316, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 78, 76],"float16"), Tensor([1, 12, 78, 76],"float16"), Tensor([1, 2],"float32"), Tensor([17784, 4],"float32"), Tensor([17784, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 80, 64],"float16"), Tensor([1, 12, 80, 64],"float16"), Tensor([1, 2],"float32"), Tensor([15360, 4],"float32"), Tensor([15360, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 80, 68],"float16"), Tensor([1, 12, 80, 68],"float16"), Tensor([1, 2],"float32"), Tensor([16320, 4],"float32"), Tensor([16320, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 80, 72],"float16"), Tensor([1, 12, 80, 72],"float16"), Tensor([1, 2],"float32"), Tensor([17280, 4],"float32"), Tensor([17280, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 80, 76],"float16"), Tensor([1, 12, 80, 76],"float16"), Tensor([1, 2],"float32"), Tensor([18240, 4],"float32"), Tensor([18240, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 80, 84],"float16"), Tensor([1, 12, 80, 84],"float16"), Tensor([1, 2],"float32"), Tensor([20160, 4],"float32"), Tensor([20160, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 82, 50],"float16"), Tensor([1, 12, 82, 50],"float16"), Tensor([1, 2],"float32"), Tensor([12300, 4],"float32"), Tensor([12300, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 82, 62],"float16"), Tensor([1, 12, 82, 62],"float16"), Tensor([1, 2],"float32"), Tensor([15252, 4],"float32"), Tensor([15252, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 82, 64],"float16"), Tensor([1, 12, 82, 64],"float16"), Tensor([1, 2],"float32"), Tensor([15744, 4],"float32"), Tensor([15744, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 82, 68],"float16"), Tensor([1, 12, 82, 68],"float16"), Tensor([1, 2],"float32"), Tensor([16728, 4],"float32"), Tensor([16728, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 82, 70],"float16"), Tensor([1, 12, 82, 70],"float16"), Tensor([1, 2],"float32"), Tensor([17220, 4],"float32"), Tensor([17220, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 82, 72],"float16"), Tensor([1, 12, 82, 72],"float16"), Tensor([1, 2],"float32"), Tensor([17712, 4],"float32"), Tensor([17712, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 82, 84],"float16"), Tensor([1, 12, 82, 84],"float16"), Tensor([1, 2],"float32"), Tensor([20664, 4],"float32"), Tensor([20664, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 84, 124],"float16"), Tensor([1, 12, 84, 124],"float16"), Tensor([1, 2],"float32"), Tensor([31248, 4],"float32"), Tensor([31248, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 84, 128],"float16"), Tensor([1, 12, 84, 128],"float16"), Tensor([1, 2],"float32"), Tensor([32256, 4],"float32"), Tensor([32256, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 84, 60],"float16"), Tensor([1, 12, 84, 60],"float16"), Tensor([1, 2],"float32"), Tensor([15120, 4],"float32"), Tensor([15120, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 84, 62],"float16"), Tensor([1, 12, 84, 62],"float16"), Tensor([1, 2],"float32"), Tensor([15624, 4],"float32"), Tensor([15624, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 84, 64],"float16"), Tensor([1, 12, 84, 64],"float16"), Tensor([1, 2],"float32"), Tensor([16128, 4],"float32"), Tensor([16128, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 84, 66],"float16"), Tensor([1, 12, 84, 66],"float16"), Tensor([1, 2],"float32"), Tensor([16632, 4],"float32"), Tensor([16632, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 84, 70],"float16"), Tensor([1, 12, 84, 70],"float16"), Tensor([1, 2],"float32"), Tensor([17640, 4],"float32"), Tensor([17640, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 84, 72],"float16"), Tensor([1, 12, 84, 72],"float16"), Tensor([1, 2],"float32"), Tensor([18144, 4],"float32"), Tensor([18144, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 84, 74],"float16"), Tensor([1, 12, 84, 74],"float16"), Tensor([1, 2],"float32"), Tensor([18648, 4],"float32"), Tensor([18648, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 84, 76],"float16"), Tensor([1, 12, 84, 76],"float16"), Tensor([1, 2],"float32"), Tensor([19152, 4],"float32"), Tensor([19152, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 84, 84],"float16"), Tensor([1, 12, 84, 84],"float16"), Tensor([1, 2],"float32"), Tensor([21168, 4],"float32"), Tensor([21168, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 88, 120],"float16"), Tensor([1, 12, 88, 120],"float16"), Tensor([1, 2],"float32"), Tensor([31680, 4],"float32"), Tensor([31680, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 88, 128],"float16"), Tensor([1, 12, 88, 128],"float16"), Tensor([1, 2],"float32"), Tensor([33792, 4],"float32"), Tensor([33792, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 88, 132],"float16"), Tensor([1, 12, 88, 132],"float16"), Tensor([1, 2],"float32"), Tensor([34848, 4],"float32"), Tensor([34848, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 88, 136],"float16"), Tensor([1, 12, 88, 136],"float16"), Tensor([1, 2],"float32"), Tensor([35904, 4],"float32"), Tensor([35904, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 88, 148],"float16"), Tensor([1, 12, 88, 148],"float16"), Tensor([1, 2],"float32"), Tensor([39072, 4],"float32"), Tensor([39072, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 88, 168],"float16"), Tensor([1, 12, 88, 168],"float16"), Tensor([1, 2],"float32"), Tensor([44352, 4],"float32"), Tensor([44352, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 92, 120],"float16"), Tensor([1, 12, 92, 120],"float16"), Tensor([1, 2],"float32"), Tensor([33120, 4],"float32"), Tensor([33120, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 92, 124],"float16"), Tensor([1, 12, 92, 124],"float16"), Tensor([1, 2],"float32"), Tensor([34224, 4],"float32"), Tensor([34224, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 92, 128],"float16"), Tensor([1, 12, 92, 128],"float16"), Tensor([1, 2],"float32"), Tensor([35328, 4],"float32"), Tensor([35328, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 92, 132],"float16"), Tensor([1, 12, 92, 132],"float16"), Tensor([1, 2],"float32"), Tensor([36432, 4],"float32"), Tensor([36432, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 92, 136],"float16"), Tensor([1, 12, 92, 136],"float16"), Tensor([1, 2],"float32"), Tensor([37536, 4],"float32"), Tensor([37536, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 92, 140],"float16"), Tensor([1, 12, 92, 140],"float16"), Tensor([1, 2],"float32"), Tensor([38640, 4],"float32"), Tensor([38640, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 92, 148],"float16"), Tensor([1, 12, 92, 148],"float16"), Tensor([1, 2],"float32"), Tensor([40848, 4],"float32"), Tensor([40848, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 92, 152],"float16"), Tensor([1, 12, 92, 152],"float16"), Tensor([1, 2],"float32"), Tensor([41952, 4],"float32"), Tensor([41952, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 92, 156],"float16"), Tensor([1, 12, 92, 156],"float16"), Tensor([1, 2],"float32"), Tensor([43056, 4],"float32"), Tensor([43056, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 92, 160],"float16"), Tensor([1, 12, 92, 160],"float16"), Tensor([1, 2],"float32"), Tensor([44160, 4],"float32"), Tensor([44160, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 92, 164],"float16"), Tensor([1, 12, 92, 164],"float16"), Tensor([1, 2],"float32"), Tensor([45264, 4],"float32"), Tensor([45264, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 92, 168],"float16"), Tensor([1, 12, 92, 168],"float16"), Tensor([1, 2],"float32"), Tensor([46368, 4],"float32"), Tensor([46368, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 96, 120],"float16"), Tensor([1, 12, 96, 120],"float16"), Tensor([1, 2],"float32"), Tensor([34560, 4],"float32"), Tensor([34560, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 96, 124],"float16"), Tensor([1, 12, 96, 124],"float16"), Tensor([1, 2],"float32"), Tensor([35712, 4],"float32"), Tensor([35712, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 96, 128],"float16"), Tensor([1, 12, 96, 128],"float16"), Tensor([1, 2],"float32"), Tensor([36864, 4],"float32"), Tensor([36864, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 96, 132],"float16"), Tensor([1, 12, 96, 132],"float16"), Tensor([1, 2],"float32"), Tensor([38016, 4],"float32"), Tensor([38016, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 96, 136],"float16"), Tensor([1, 12, 96, 136],"float16"), Tensor([1, 2],"float32"), Tensor([39168, 4],"float32"), Tensor([39168, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 96, 140],"float16"), Tensor([1, 12, 96, 140],"float16"), Tensor([1, 2],"float32"), Tensor([40320, 4],"float32"), Tensor([40320, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 96, 144],"float16"), Tensor([1, 12, 96, 144],"float16"), Tensor([1, 2],"float32"), Tensor([41472, 4],"float32"), Tensor([41472, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 96, 148],"float16"), Tensor([1, 12, 96, 148],"float16"), Tensor([1, 2],"float32"), Tensor([42624, 4],"float32"), Tensor([42624, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 96, 152],"float16"), Tensor([1, 12, 96, 152],"float16"), Tensor([1, 2],"float32"), Tensor([43776, 4],"float32"), Tensor([43776, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 96, 160],"float16"), Tensor([1, 12, 96, 160],"float16"), Tensor([1, 2],"float32"), Tensor([46080, 4],"float32"), Tensor([46080, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 96, 164],"float16"), Tensor([1, 12, 96, 164],"float16"), Tensor([1, 2],"float32"), Tensor([47232, 4],"float32"), Tensor([47232, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.vision.ops.generate_proposals(Tensor([1, 3, 96, 168],"float16"), Tensor([1, 12, 96, 168],"float16"), Tensor([1, 2],"float32"), Tensor([48384, 4],"float32"), Tensor([48384, 4],"float32"), pre_nms_top_n=2000, post_nms_top_n=2000, nms_thresh=0.7, min_size=0.0, eta=1.0, return_rois_num=True, )
paddle.nn.functional.cross_entropy(input=Tensor([104, 28, 33712],"float16"), label=Tensor([104, 28, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([104, 29, 33712],"float16"), label=Tensor([104, 29, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([104, 30, 33712],"float16"), label=Tensor([104, 30, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([104, 31, 33712],"float16"), label=Tensor([104, 31, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([104, 32, 33712],"float16"), label=Tensor([104, 32, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([104, 33, 33712],"float16"), label=Tensor([104, 33, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([104, 34, 33712],"float16"), label=Tensor([104, 34, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([104, 35, 33712],"float16"), label=Tensor([104, 35, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([104, 36, 33712],"float16"), label=Tensor([104, 36, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([104, 37, 33712],"float16"), label=Tensor([104, 37, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([104, 38, 33712],"float16"), label=Tensor([104, 38, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([104, 39, 33712],"float16"), label=Tensor([104, 39, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([104, 40, 33712],"float16"), label=Tensor([104, 40, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([104, 41, 33712],"float16"), label=Tensor([104, 41, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([104, 42, 33712],"float16"), label=Tensor([104, 42, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([104, 43, 33712],"float16"), label=Tensor([104, 43, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([104, 44, 33712],"float16"), label=Tensor([104, 44, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([104, 45, 33712],"float16"), label=Tensor([104, 45, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([104, 46, 33712],"float16"), label=Tensor([104, 46, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([104, 47, 33712],"float16"), label=Tensor([104, 47, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([104, 48, 33712],"float16"), label=Tensor([104, 48, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([104, 49, 33712],"float16"), label=Tensor([104, 49, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([112, 26, 33712],"float16"), label=Tensor([112, 26, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([112, 27, 33712],"float16"), label=Tensor([112, 27, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([112, 28, 33712],"float16"), label=Tensor([112, 28, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([112, 29, 33712],"float16"), label=Tensor([112, 29, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([112, 30, 33712],"float16"), label=Tensor([112, 30, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([112, 31, 33712],"float16"), label=Tensor([112, 31, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([112, 32, 33712],"float16"), label=Tensor([112, 32, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([112, 33, 33712],"float16"), label=Tensor([112, 33, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([112, 34, 33712],"float16"), label=Tensor([112, 34, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([112, 35, 33712],"float16"), label=Tensor([112, 35, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([112, 36, 33712],"float16"), label=Tensor([112, 36, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([112, 37, 33712],"float16"), label=Tensor([112, 37, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([112, 38, 33712],"float16"), label=Tensor([112, 38, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([112, 39, 33712],"float16"), label=Tensor([112, 39, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([112, 40, 33712],"float16"), label=Tensor([112, 40, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([112, 41, 33712],"float16"), label=Tensor([112, 41, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([112, 42, 33712],"float16"), label=Tensor([112, 42, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([112, 43, 33712],"float16"), label=Tensor([112, 43, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([112, 44, 33712],"float16"), label=Tensor([112, 44, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([112, 45, 33712],"float16"), label=Tensor([112, 45, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([120, 24, 33712],"float16"), label=Tensor([120, 24, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([120, 25, 33712],"float16"), label=Tensor([120, 25, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([120, 26, 33712],"float16"), label=Tensor([120, 26, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([120, 27, 33712],"float16"), label=Tensor([120, 27, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([120, 28, 33712],"float16"), label=Tensor([120, 28, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([120, 29, 33712],"float16"), label=Tensor([120, 29, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([120, 30, 33712],"float16"), label=Tensor([120, 30, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([120, 31, 33712],"float16"), label=Tensor([120, 31, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([120, 32, 33712],"float16"), label=Tensor([120, 32, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([120, 33, 33712],"float16"), label=Tensor([120, 33, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([120, 34, 33712],"float16"), label=Tensor([120, 34, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([120, 35, 33712],"float16"), label=Tensor([120, 35, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([120, 36, 33712],"float16"), label=Tensor([120, 36, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([120, 37, 33712],"float16"), label=Tensor([120, 37, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([120, 38, 33712],"float16"), label=Tensor([120, 38, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([120, 39, 33712],"float16"), label=Tensor([120, 39, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([120, 40, 33712],"float16"), label=Tensor([120, 40, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([120, 41, 33712],"float16"), label=Tensor([120, 41, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([120, 42, 33712],"float16"), label=Tensor([120, 42, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([128, 23, 33712],"float16"), label=Tensor([128, 23, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([128, 24, 33712],"float16"), label=Tensor([128, 24, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([128, 25, 33712],"float16"), label=Tensor([128, 25, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([128, 26, 33712],"float16"), label=Tensor([128, 26, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([128, 27, 33712],"float16"), label=Tensor([128, 27, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([128, 28, 33712],"float16"), label=Tensor([128, 28, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([128, 29, 33712],"float16"), label=Tensor([128, 29, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([128, 30, 33712],"float16"), label=Tensor([128, 30, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([128, 31, 33712],"float16"), label=Tensor([128, 31, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([128, 32, 33712],"float16"), label=Tensor([128, 32, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([128, 33, 33712],"float16"), label=Tensor([128, 33, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([128, 34, 33712],"float16"), label=Tensor([128, 34, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([128, 35, 33712],"float16"), label=Tensor([128, 35, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([128, 36, 33712],"float16"), label=Tensor([128, 36, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([128, 37, 33712],"float16"), label=Tensor([128, 37, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([128, 38, 33712],"float16"), label=Tensor([128, 38, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([128, 39, 33712],"float16"), label=Tensor([128, 39, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([128, 40, 33712],"float16"), label=Tensor([128, 40, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([136, 21, 33712],"float16"), label=Tensor([136, 21, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([136, 22, 33712],"float16"), label=Tensor([136, 22, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([136, 23, 33712],"float16"), label=Tensor([136, 23, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([136, 24, 33712],"float16"), label=Tensor([136, 24, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([136, 25, 33712],"float16"), label=Tensor([136, 25, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([136, 26, 33712],"float16"), label=Tensor([136, 26, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([136, 27, 33712],"float16"), label=Tensor([136, 27, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([136, 28, 33712],"float16"), label=Tensor([136, 28, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([136, 29, 33712],"float16"), label=Tensor([136, 29, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([136, 30, 33712],"float16"), label=Tensor([136, 30, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([136, 31, 33712],"float16"), label=Tensor([136, 31, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([136, 32, 33712],"float16"), label=Tensor([136, 32, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([136, 33, 33712],"float16"), label=Tensor([136, 33, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([136, 34, 33712],"float16"), label=Tensor([136, 34, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([136, 35, 33712],"float16"), label=Tensor([136, 35, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([136, 36, 33712],"float16"), label=Tensor([136, 36, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([136, 37, 33712],"float16"), label=Tensor([136, 37, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([144, 20, 33712],"float16"), label=Tensor([144, 20, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([144, 21, 33712],"float16"), label=Tensor([144, 21, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([144, 22, 33712],"float16"), label=Tensor([144, 22, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([144, 23, 33712],"float16"), label=Tensor([144, 23, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([144, 24, 33712],"float16"), label=Tensor([144, 24, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([144, 25, 33712],"float16"), label=Tensor([144, 25, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([144, 26, 33712],"float16"), label=Tensor([144, 26, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([144, 27, 33712],"float16"), label=Tensor([144, 27, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([144, 28, 33712],"float16"), label=Tensor([144, 28, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([144, 29, 33712],"float16"), label=Tensor([144, 29, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([144, 30, 33712],"float16"), label=Tensor([144, 30, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([144, 31, 33712],"float16"), label=Tensor([144, 31, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([144, 32, 33712],"float16"), label=Tensor([144, 32, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([144, 33, 33712],"float16"), label=Tensor([144, 33, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([144, 34, 33712],"float16"), label=Tensor([144, 34, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([144, 35, 33712],"float16"), label=Tensor([144, 35, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([15, 244, 33712],"float16"), label=Tensor([15, 244, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([152, 19, 33712],"float16"), label=Tensor([152, 19, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([152, 20, 33712],"float16"), label=Tensor([152, 20, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([152, 21, 33712],"float16"), label=Tensor([152, 21, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([152, 22, 33712],"float16"), label=Tensor([152, 22, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([152, 23, 33712],"float16"), label=Tensor([152, 23, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([152, 24, 33712],"float16"), label=Tensor([152, 24, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([152, 25, 33712],"float16"), label=Tensor([152, 25, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([152, 26, 33712],"float16"), label=Tensor([152, 26, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([152, 27, 33712],"float16"), label=Tensor([152, 27, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([152, 28, 33712],"float16"), label=Tensor([152, 28, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([152, 29, 33712],"float16"), label=Tensor([152, 29, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([152, 30, 33712],"float16"), label=Tensor([152, 30, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([152, 31, 33712],"float16"), label=Tensor([152, 31, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([152, 32, 33712],"float16"), label=Tensor([152, 32, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([152, 33, 33712],"float16"), label=Tensor([152, 33, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([16, 109, 33712],"float16"), label=Tensor([16, 109, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([16, 149, 33712],"float16"), label=Tensor([16, 149, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([16, 171, 33712],"float16"), label=Tensor([16, 171, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([16, 173, 33712],"float16"), label=Tensor([16, 173, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([16, 174, 33712],"float16"), label=Tensor([16, 174, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([16, 176, 33712],"float16"), label=Tensor([16, 176, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([16, 178, 33712],"float16"), label=Tensor([16, 178, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([16, 182, 33712],"float16"), label=Tensor([16, 182, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([16, 205, 33712],"float16"), label=Tensor([16, 205, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([16, 217, 33712],"float16"), label=Tensor([16, 217, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([16, 227, 33712],"float16"), label=Tensor([16, 227, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([16, 264, 33712],"float16"), label=Tensor([16, 264, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([160, 17, 33712],"float16"), label=Tensor([160, 17, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([160, 19, 33712],"float16"), label=Tensor([160, 19, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([160, 20, 33712],"float16"), label=Tensor([160, 20, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([160, 21, 33712],"float16"), label=Tensor([160, 21, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([160, 22, 33712],"float16"), label=Tensor([160, 22, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([160, 23, 33712],"float16"), label=Tensor([160, 23, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([160, 24, 33712],"float16"), label=Tensor([160, 24, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([160, 25, 33712],"float16"), label=Tensor([160, 25, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([160, 26, 33712],"float16"), label=Tensor([160, 26, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([160, 27, 33712],"float16"), label=Tensor([160, 27, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([160, 28, 33712],"float16"), label=Tensor([160, 28, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([160, 29, 33712],"float16"), label=Tensor([160, 29, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([160, 30, 33712],"float16"), label=Tensor([160, 30, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([160, 31, 33712],"float16"), label=Tensor([160, 31, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([160, 32, 33712],"float16"), label=Tensor([160, 32, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([168, 17, 33712],"float16"), label=Tensor([168, 17, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([168, 18, 33712],"float16"), label=Tensor([168, 18, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([168, 19, 33712],"float16"), label=Tensor([168, 19, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([168, 20, 33712],"float16"), label=Tensor([168, 20, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([168, 21, 33712],"float16"), label=Tensor([168, 21, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([168, 22, 33712],"float16"), label=Tensor([168, 22, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([168, 23, 33712],"float16"), label=Tensor([168, 23, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([168, 24, 33712],"float16"), label=Tensor([168, 24, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([168, 25, 33712],"float16"), label=Tensor([168, 25, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([168, 26, 33712],"float16"), label=Tensor([168, 26, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([168, 27, 33712],"float16"), label=Tensor([168, 27, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([168, 28, 33712],"float16"), label=Tensor([168, 28, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([168, 29, 33712],"float16"), label=Tensor([168, 29, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([168, 30, 33712],"float16"), label=Tensor([168, 30, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([176, 16, 33712],"float16"), label=Tensor([176, 16, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([176, 17, 33712],"float16"), label=Tensor([176, 17, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([176, 18, 33712],"float16"), label=Tensor([176, 18, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([176, 19, 33712],"float16"), label=Tensor([176, 19, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([176, 20, 33712],"float16"), label=Tensor([176, 20, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([176, 21, 33712],"float16"), label=Tensor([176, 21, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([176, 22, 33712],"float16"), label=Tensor([176, 22, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([176, 23, 33712],"float16"), label=Tensor([176, 23, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([176, 24, 33712],"float16"), label=Tensor([176, 24, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([176, 25, 33712],"float16"), label=Tensor([176, 25, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([176, 26, 33712],"float16"), label=Tensor([176, 26, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([176, 27, 33712],"float16"), label=Tensor([176, 27, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([176, 28, 33712],"float16"), label=Tensor([176, 28, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([176, 29, 33712],"float16"), label=Tensor([176, 29, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([184, 16, 33712],"float16"), label=Tensor([184, 16, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([184, 17, 33712],"float16"), label=Tensor([184, 17, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([184, 18, 33712],"float16"), label=Tensor([184, 18, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([184, 19, 33712],"float16"), label=Tensor([184, 19, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([184, 20, 33712],"float16"), label=Tensor([184, 20, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([184, 21, 33712],"float16"), label=Tensor([184, 21, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([184, 22, 33712],"float16"), label=Tensor([184, 22, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([184, 23, 33712],"float16"), label=Tensor([184, 23, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([184, 24, 33712],"float16"), label=Tensor([184, 24, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([184, 25, 33712],"float16"), label=Tensor([184, 25, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([184, 26, 33712],"float16"), label=Tensor([184, 26, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([184, 27, 33712],"float16"), label=Tensor([184, 27, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([192, 15, 33712],"float16"), label=Tensor([192, 15, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([192, 16, 33712],"float16"), label=Tensor([192, 16, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([192, 17, 33712],"float16"), label=Tensor([192, 17, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([192, 18, 33712],"float16"), label=Tensor([192, 18, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([192, 19, 33712],"float16"), label=Tensor([192, 19, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([192, 20, 33712],"float16"), label=Tensor([192, 20, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([192, 21, 33712],"float16"), label=Tensor([192, 21, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([192, 22, 33712],"float16"), label=Tensor([192, 22, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([192, 23, 33712],"float16"), label=Tensor([192, 23, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([192, 24, 33712],"float16"), label=Tensor([192, 24, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([192, 25, 33712],"float16"), label=Tensor([192, 25, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([192, 26, 33712],"float16"), label=Tensor([192, 26, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([200, 14, 33712],"float16"), label=Tensor([200, 14, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([200, 15, 33712],"float16"), label=Tensor([200, 15, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([200, 16, 33712],"float16"), label=Tensor([200, 16, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([200, 17, 33712],"float16"), label=Tensor([200, 17, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([200, 18, 33712],"float16"), label=Tensor([200, 18, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([200, 19, 33712],"float16"), label=Tensor([200, 19, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([200, 20, 33712],"float16"), label=Tensor([200, 20, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([200, 21, 33712],"float16"), label=Tensor([200, 21, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([200, 22, 33712],"float16"), label=Tensor([200, 22, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([200, 23, 33712],"float16"), label=Tensor([200, 23, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([200, 24, 33712],"float16"), label=Tensor([200, 24, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([200, 25, 33712],"float16"), label=Tensor([200, 25, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([208, 14, 33712],"float16"), label=Tensor([208, 14, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([208, 15, 33712],"float16"), label=Tensor([208, 15, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([208, 16, 33712],"float16"), label=Tensor([208, 16, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([208, 17, 33712],"float16"), label=Tensor([208, 17, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([208, 18, 33712],"float16"), label=Tensor([208, 18, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([208, 19, 33712],"float16"), label=Tensor([208, 19, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([208, 20, 33712],"float16"), label=Tensor([208, 20, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([208, 21, 33712],"float16"), label=Tensor([208, 21, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([208, 22, 33712],"float16"), label=Tensor([208, 22, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([208, 23, 33712],"float16"), label=Tensor([208, 23, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([208, 24, 33712],"float16"), label=Tensor([208, 24, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([216, 17, 33712],"float16"), label=Tensor([216, 17, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([216, 18, 33712],"float16"), label=Tensor([216, 18, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([216, 19, 33712],"float16"), label=Tensor([216, 19, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([216, 20, 33712],"float16"), label=Tensor([216, 20, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([216, 21, 33712],"float16"), label=Tensor([216, 21, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([216, 22, 33712],"float16"), label=Tensor([216, 22, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([216, 23, 33712],"float16"), label=Tensor([216, 23, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([224, 13, 33712],"float16"), label=Tensor([224, 13, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([224, 14, 33712],"float16"), label=Tensor([224, 14, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([224, 15, 33712],"float16"), label=Tensor([224, 15, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([224, 16, 33712],"float16"), label=Tensor([224, 16, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([224, 17, 33712],"float16"), label=Tensor([224, 17, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([224, 18, 33712],"float16"), label=Tensor([224, 18, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([232, 16, 33712],"float16"), label=Tensor([232, 16, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([232, 17, 33712],"float16"), label=Tensor([232, 17, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([232, 18, 33712],"float16"), label=Tensor([232, 18, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([232, 19, 33712],"float16"), label=Tensor([232, 19, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([232, 20, 33712],"float16"), label=Tensor([232, 20, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([232, 21, 33712],"float16"), label=Tensor([232, 21, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([232, 22, 33712],"float16"), label=Tensor([232, 22, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([24, 113, 33712],"float16"), label=Tensor([24, 113, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([24, 114, 33712],"float16"), label=Tensor([24, 114, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([24, 116, 33712],"float16"), label=Tensor([24, 116, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([24, 117, 33712],"float16"), label=Tensor([24, 117, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([24, 122, 33712],"float16"), label=Tensor([24, 122, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([24, 129, 33712],"float16"), label=Tensor([24, 129, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([24, 130, 33712],"float16"), label=Tensor([24, 130, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([24, 131, 33712],"float16"), label=Tensor([24, 131, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([24, 132, 33712],"float16"), label=Tensor([24, 132, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([24, 133, 33712],"float16"), label=Tensor([24, 133, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([24, 135, 33712],"float16"), label=Tensor([24, 135, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([24, 136, 33712],"float16"), label=Tensor([24, 136, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([24, 137, 33712],"float16"), label=Tensor([24, 137, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([24, 139, 33712],"float16"), label=Tensor([24, 139, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([24, 140, 33712],"float16"), label=Tensor([24, 140, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([24, 141, 33712],"float16"), label=Tensor([24, 141, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([24, 142, 33712],"float16"), label=Tensor([24, 142, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([24, 144, 33712],"float16"), label=Tensor([24, 144, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([24, 146, 33712],"float16"), label=Tensor([24, 146, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([24, 149, 33712],"float16"), label=Tensor([24, 149, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([24, 150, 33712],"float16"), label=Tensor([24, 150, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([24, 151, 33712],"float16"), label=Tensor([24, 151, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([24, 153, 33712],"float16"), label=Tensor([24, 153, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([24, 154, 33712],"float16"), label=Tensor([24, 154, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([24, 157, 33712],"float16"), label=Tensor([24, 157, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([24, 158, 33712],"float16"), label=Tensor([24, 158, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([24, 159, 33712],"float16"), label=Tensor([24, 159, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([24, 162, 33712],"float16"), label=Tensor([24, 162, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([24, 163, 33712],"float16"), label=Tensor([24, 163, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([24, 171, 33712],"float16"), label=Tensor([24, 171, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([24, 173, 33712],"float16"), label=Tensor([24, 173, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([24, 174, 33712],"float16"), label=Tensor([24, 174, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([24, 176, 33712],"float16"), label=Tensor([24, 176, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([24, 178, 33712],"float16"), label=Tensor([24, 178, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([24, 182, 33712],"float16"), label=Tensor([24, 182, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([24, 205, 33712],"float16"), label=Tensor([24, 205, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([240, 12, 33712],"float16"), label=Tensor([240, 12, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([240, 13, 33712],"float16"), label=Tensor([240, 13, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([240, 14, 33712],"float16"), label=Tensor([240, 14, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([240, 15, 33712],"float16"), label=Tensor([240, 15, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([240, 16, 33712],"float16"), label=Tensor([240, 16, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([240, 17, 33712],"float16"), label=Tensor([240, 17, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([240, 18, 33712],"float16"), label=Tensor([240, 18, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([240, 19, 33712],"float16"), label=Tensor([240, 19, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([240, 20, 33712],"float16"), label=Tensor([240, 20, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([240, 21, 33712],"float16"), label=Tensor([240, 21, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([256, 12, 33712],"float16"), label=Tensor([256, 12, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([256, 13, 33712],"float16"), label=Tensor([256, 13, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([256, 14, 33712],"float16"), label=Tensor([256, 14, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([256, 15, 33712],"float16"), label=Tensor([256, 15, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([256, 16, 33712],"float16"), label=Tensor([256, 16, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([256, 17, 33712],"float16"), label=Tensor([256, 17, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([256, 18, 33712],"float16"), label=Tensor([256, 18, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([256, 19, 33712],"float16"), label=Tensor([256, 19, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([256, 20, 33712],"float16"), label=Tensor([256, 20, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([264, 14, 33712],"float16"), label=Tensor([264, 14, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([264, 15, 33712],"float16"), label=Tensor([264, 15, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([264, 16, 33712],"float16"), label=Tensor([264, 16, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([264, 17, 33712],"float16"), label=Tensor([264, 17, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([264, 18, 33712],"float16"), label=Tensor([264, 18, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([264, 19, 33712],"float16"), label=Tensor([264, 19, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([272, 11, 33712],"float16"), label=Tensor([272, 11, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([272, 12, 33712],"float16"), label=Tensor([272, 12, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([272, 13, 33712],"float16"), label=Tensor([272, 13, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([272, 14, 33712],"float16"), label=Tensor([272, 14, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([272, 15, 33712],"float16"), label=Tensor([272, 15, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([280, 14, 33712],"float16"), label=Tensor([280, 14, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([280, 15, 33712],"float16"), label=Tensor([280, 15, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([280, 16, 33712],"float16"), label=Tensor([280, 16, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([280, 17, 33712],"float16"), label=Tensor([280, 17, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([280, 18, 33712],"float16"), label=Tensor([280, 18, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([288, 10, 33712],"float16"), label=Tensor([288, 10, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([288, 11, 33712],"float16"), label=Tensor([288, 11, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([288, 12, 33712],"float16"), label=Tensor([288, 12, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([288, 13, 33712],"float16"), label=Tensor([288, 13, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([288, 14, 33712],"float16"), label=Tensor([288, 14, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([296, 13, 33712],"float16"), label=Tensor([296, 13, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([296, 14, 33712],"float16"), label=Tensor([296, 14, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([296, 15, 33712],"float16"), label=Tensor([296, 15, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([296, 16, 33712],"float16"), label=Tensor([296, 16, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([296, 17, 33712],"float16"), label=Tensor([296, 17, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([312, 10, 33712],"float16"), label=Tensor([312, 10, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([312, 11, 33712],"float16"), label=Tensor([312, 11, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([312, 12, 33712],"float16"), label=Tensor([312, 12, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([312, 13, 33712],"float16"), label=Tensor([312, 13, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([312, 14, 33712],"float16"), label=Tensor([312, 14, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([312, 16, 33712],"float16"), label=Tensor([312, 16, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([32, 100, 33712],"float16"), label=Tensor([32, 100, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([32, 101, 33712],"float16"), label=Tensor([32, 101, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([32, 103, 33712],"float16"), label=Tensor([32, 103, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([32, 104, 33712],"float16"), label=Tensor([32, 104, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([32, 105, 33712],"float16"), label=Tensor([32, 105, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([32, 106, 33712],"float16"), label=Tensor([32, 106, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([32, 107, 33712],"float16"), label=Tensor([32, 107, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([32, 108, 33712],"float16"), label=Tensor([32, 108, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([32, 109, 33712],"float16"), label=Tensor([32, 109, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([32, 110, 33712],"float16"), label=Tensor([32, 110, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([32, 111, 33712],"float16"), label=Tensor([32, 111, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([32, 112, 33712],"float16"), label=Tensor([32, 112, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([32, 113, 33712],"float16"), label=Tensor([32, 113, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([32, 114, 33712],"float16"), label=Tensor([32, 114, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([32, 115, 33712],"float16"), label=Tensor([32, 115, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([32, 117, 33712],"float16"), label=Tensor([32, 117, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([32, 118, 33712],"float16"), label=Tensor([32, 118, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([32, 121, 33712],"float16"), label=Tensor([32, 121, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([32, 122, 33712],"float16"), label=Tensor([32, 122, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([32, 123, 33712],"float16"), label=Tensor([32, 123, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([32, 124, 33712],"float16"), label=Tensor([32, 124, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([32, 125, 33712],"float16"), label=Tensor([32, 125, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([32, 126, 33712],"float16"), label=Tensor([32, 126, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([32, 127, 33712],"float16"), label=Tensor([32, 127, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([32, 128, 33712],"float16"), label=Tensor([32, 128, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([32, 129, 33712],"float16"), label=Tensor([32, 129, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([32, 130, 33712],"float16"), label=Tensor([32, 130, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([32, 131, 33712],"float16"), label=Tensor([32, 131, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([32, 132, 33712],"float16"), label=Tensor([32, 132, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([32, 133, 33712],"float16"), label=Tensor([32, 133, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([32, 135, 33712],"float16"), label=Tensor([32, 135, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([32, 137, 33712],"float16"), label=Tensor([32, 137, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([32, 139, 33712],"float16"), label=Tensor([32, 139, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([32, 140, 33712],"float16"), label=Tensor([32, 140, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([32, 141, 33712],"float16"), label=Tensor([32, 141, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([32, 142, 33712],"float16"), label=Tensor([32, 142, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([32, 144, 33712],"float16"), label=Tensor([32, 144, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([32, 146, 33712],"float16"), label=Tensor([32, 146, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([32, 150, 33712],"float16"), label=Tensor([32, 150, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([32, 151, 33712],"float16"), label=Tensor([32, 151, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([32, 153, 33712],"float16"), label=Tensor([32, 153, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([32, 154, 33712],"float16"), label=Tensor([32, 154, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([32, 157, 33712],"float16"), label=Tensor([32, 157, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([32, 158, 33712],"float16"), label=Tensor([32, 158, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([32, 159, 33712],"float16"), label=Tensor([32, 159, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([32, 87, 33712],"float16"), label=Tensor([32, 87, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([32, 90, 33712],"float16"), label=Tensor([32, 90, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([32, 91, 33712],"float16"), label=Tensor([32, 91, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([32, 92, 33712],"float16"), label=Tensor([32, 92, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([32, 96, 33712],"float16"), label=Tensor([32, 96, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([32, 97, 33712],"float16"), label=Tensor([32, 97, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([320, 12, 33712],"float16"), label=Tensor([320, 12, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([320, 13, 33712],"float16"), label=Tensor([320, 13, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([320, 14, 33712],"float16"), label=Tensor([320, 14, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([320, 15, 33712],"float16"), label=Tensor([320, 15, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([320, 16, 33712],"float16"), label=Tensor([320, 16, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([336, 10, 33712],"float16"), label=Tensor([336, 10, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([336, 11, 33712],"float16"), label=Tensor([336, 11, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([336, 12, 33712],"float16"), label=Tensor([336, 12, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([336, 13, 33712],"float16"), label=Tensor([336, 13, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([336, 14, 33712],"float16"), label=Tensor([336, 14, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([336, 15, 33712],"float16"), label=Tensor([336, 15, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([336, 9, 33712],"float16"), label=Tensor([336, 9, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([352, 14, 33712],"float16"), label=Tensor([352, 14, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([360, 11, 33712],"float16"), label=Tensor([360, 11, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([360, 12, 33712],"float16"), label=Tensor([360, 12, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([360, 13, 33712],"float16"), label=Tensor([360, 13, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([360, 14, 33712],"float16"), label=Tensor([360, 14, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([368, 10, 33712],"float16"), label=Tensor([368, 10, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([368, 11, 33712],"float16"), label=Tensor([368, 11, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([368, 9, 33712],"float16"), label=Tensor([368, 9, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([392, 10, 33712],"float16"), label=Tensor([392, 10, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([392, 11, 33712],"float16"), label=Tensor([392, 11, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([392, 12, 33712],"float16"), label=Tensor([392, 12, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([392, 13, 33712],"float16"), label=Tensor([392, 13, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([40, 100, 33712],"float16"), label=Tensor([40, 100, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([40, 102, 33712],"float16"), label=Tensor([40, 102, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([40, 104, 33712],"float16"), label=Tensor([40, 104, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([40, 105, 33712],"float16"), label=Tensor([40, 105, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([40, 107, 33712],"float16"), label=Tensor([40, 107, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([40, 110, 33712],"float16"), label=Tensor([40, 110, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([40, 111, 33712],"float16"), label=Tensor([40, 111, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([40, 113, 33712],"float16"), label=Tensor([40, 113, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([40, 114, 33712],"float16"), label=Tensor([40, 114, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([40, 115, 33712],"float16"), label=Tensor([40, 115, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([40, 117, 33712],"float16"), label=Tensor([40, 117, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([40, 118, 33712],"float16"), label=Tensor([40, 118, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([40, 122, 33712],"float16"), label=Tensor([40, 122, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([40, 123, 33712],"float16"), label=Tensor([40, 123, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([40, 124, 33712],"float16"), label=Tensor([40, 124, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([40, 125, 33712],"float16"), label=Tensor([40, 125, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([40, 127, 33712],"float16"), label=Tensor([40, 127, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([40, 128, 33712],"float16"), label=Tensor([40, 128, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([40, 76, 33712],"float16"), label=Tensor([40, 76, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([40, 77, 33712],"float16"), label=Tensor([40, 77, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([40, 80, 33712],"float16"), label=Tensor([40, 80, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([40, 82, 33712],"float16"), label=Tensor([40, 82, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([40, 83, 33712],"float16"), label=Tensor([40, 83, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([40, 85, 33712],"float16"), label=Tensor([40, 85, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([40, 86, 33712],"float16"), label=Tensor([40, 86, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([40, 87, 33712],"float16"), label=Tensor([40, 87, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([40, 88, 33712],"float16"), label=Tensor([40, 88, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([40, 89, 33712],"float16"), label=Tensor([40, 89, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([40, 90, 33712],"float16"), label=Tensor([40, 90, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([40, 91, 33712],"float16"), label=Tensor([40, 91, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([40, 92, 33712],"float16"), label=Tensor([40, 92, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([40, 93, 33712],"float16"), label=Tensor([40, 93, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([40, 94, 33712],"float16"), label=Tensor([40, 94, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([40, 95, 33712],"float16"), label=Tensor([40, 95, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([40, 96, 33712],"float16"), label=Tensor([40, 96, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([40, 97, 33712],"float16"), label=Tensor([40, 97, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([40, 98, 33712],"float16"), label=Tensor([40, 98, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([40, 99, 33712],"float16"), label=Tensor([40, 99, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([408, 10, 33712],"float16"), label=Tensor([408, 10, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([408, 12, 33712],"float16"), label=Tensor([408, 12, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([408, 8, 33712],"float16"), label=Tensor([408, 8, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([408, 9, 33712],"float16"), label=Tensor([408, 9, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([424, 10, 33712],"float16"), label=Tensor([424, 10, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([424, 11, 33712],"float16"), label=Tensor([424, 11, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([424, 12, 33712],"float16"), label=Tensor([424, 12, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([424, 9, 33712],"float16"), label=Tensor([424, 9, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([448, 8, 33712],"float16"), label=Tensor([448, 8, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([448, 9, 33712],"float16"), label=Tensor([448, 9, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([464, 10, 33712],"float16"), label=Tensor([464, 10, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([464, 11, 33712],"float16"), label=Tensor([464, 11, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([464, 9, 33712],"float16"), label=Tensor([464, 9, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([48, 100, 33712],"float16"), label=Tensor([48, 100, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([48, 101, 33712],"float16"), label=Tensor([48, 101, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([48, 102, 33712],"float16"), label=Tensor([48, 102, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([48, 103, 33712],"float16"), label=Tensor([48, 103, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([48, 104, 33712],"float16"), label=Tensor([48, 104, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([48, 105, 33712],"float16"), label=Tensor([48, 105, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([48, 106, 33712],"float16"), label=Tensor([48, 106, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([48, 63, 33712],"float16"), label=Tensor([48, 63, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([48, 64, 33712],"float16"), label=Tensor([48, 64, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([48, 65, 33712],"float16"), label=Tensor([48, 65, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([48, 67, 33712],"float16"), label=Tensor([48, 67, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([48, 68, 33712],"float16"), label=Tensor([48, 68, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([48, 69, 33712],"float16"), label=Tensor([48, 69, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([48, 71, 33712],"float16"), label=Tensor([48, 71, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([48, 72, 33712],"float16"), label=Tensor([48, 72, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([48, 73, 33712],"float16"), label=Tensor([48, 73, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([48, 74, 33712],"float16"), label=Tensor([48, 74, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([48, 75, 33712],"float16"), label=Tensor([48, 75, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([48, 76, 33712],"float16"), label=Tensor([48, 76, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([48, 77, 33712],"float16"), label=Tensor([48, 77, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([48, 78, 33712],"float16"), label=Tensor([48, 78, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([48, 79, 33712],"float16"), label=Tensor([48, 79, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([48, 80, 33712],"float16"), label=Tensor([48, 80, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([48, 81, 33712],"float16"), label=Tensor([48, 81, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([48, 82, 33712],"float16"), label=Tensor([48, 82, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([48, 83, 33712],"float16"), label=Tensor([48, 83, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([48, 84, 33712],"float16"), label=Tensor([48, 84, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([48, 85, 33712],"float16"), label=Tensor([48, 85, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([48, 87, 33712],"float16"), label=Tensor([48, 87, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([48, 88, 33712],"float16"), label=Tensor([48, 88, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([48, 90, 33712],"float16"), label=Tensor([48, 90, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([48, 91, 33712],"float16"), label=Tensor([48, 91, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([48, 92, 33712],"float16"), label=Tensor([48, 92, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([48, 93, 33712],"float16"), label=Tensor([48, 93, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([48, 94, 33712],"float16"), label=Tensor([48, 94, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([48, 95, 33712],"float16"), label=Tensor([48, 95, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([48, 96, 33712],"float16"), label=Tensor([48, 96, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([48, 97, 33712],"float16"), label=Tensor([48, 97, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([48, 98, 33712],"float16"), label=Tensor([48, 98, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([480, 8, 33712],"float16"), label=Tensor([480, 8, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([512, 10, 33712],"float16"), label=Tensor([512, 10, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([512, 7, 33712],"float16"), label=Tensor([512, 7, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([512, 8, 33712],"float16"), label=Tensor([512, 8, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([512, 9, 33712],"float16"), label=Tensor([512, 9, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([528, 9, 33712],"float16"), label=Tensor([528, 9, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([56, 54, 33712],"float16"), label=Tensor([56, 54, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([56, 56, 33712],"float16"), label=Tensor([56, 56, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([56, 57, 33712],"float16"), label=Tensor([56, 57, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([56, 58, 33712],"float16"), label=Tensor([56, 58, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([56, 59, 33712],"float16"), label=Tensor([56, 59, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([56, 60, 33712],"float16"), label=Tensor([56, 60, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([56, 61, 33712],"float16"), label=Tensor([56, 61, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([56, 62, 33712],"float16"), label=Tensor([56, 62, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([56, 63, 33712],"float16"), label=Tensor([56, 63, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([56, 64, 33712],"float16"), label=Tensor([56, 64, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([56, 65, 33712],"float16"), label=Tensor([56, 65, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([56, 66, 33712],"float16"), label=Tensor([56, 66, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([56, 67, 33712],"float16"), label=Tensor([56, 67, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([56, 68, 33712],"float16"), label=Tensor([56, 68, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([56, 69, 33712],"float16"), label=Tensor([56, 69, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([56, 70, 33712],"float16"), label=Tensor([56, 70, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([56, 71, 33712],"float16"), label=Tensor([56, 71, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([56, 72, 33712],"float16"), label=Tensor([56, 72, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([56, 73, 33712],"float16"), label=Tensor([56, 73, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([56, 76, 33712],"float16"), label=Tensor([56, 76, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([56, 77, 33712],"float16"), label=Tensor([56, 77, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([56, 78, 33712],"float16"), label=Tensor([56, 78, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([56, 79, 33712],"float16"), label=Tensor([56, 79, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([56, 80, 33712],"float16"), label=Tensor([56, 80, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([56, 81, 33712],"float16"), label=Tensor([56, 81, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([56, 82, 33712],"float16"), label=Tensor([56, 82, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([56, 83, 33712],"float16"), label=Tensor([56, 83, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([56, 84, 33712],"float16"), label=Tensor([56, 84, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([56, 85, 33712],"float16"), label=Tensor([56, 85, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([56, 86, 33712],"float16"), label=Tensor([56, 86, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([56, 87, 33712],"float16"), label=Tensor([56, 87, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([56, 88, 33712],"float16"), label=Tensor([56, 88, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([56, 90, 33712],"float16"), label=Tensor([56, 90, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([56, 91, 33712],"float16"), label=Tensor([56, 91, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([568, 8, 33712],"float16"), label=Tensor([568, 8, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([568, 9, 33712],"float16"), label=Tensor([568, 9, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([584, 7, 33712],"float16"), label=Tensor([584, 7, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([624, 8, 33712],"float16"), label=Tensor([624, 8, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([64, 45, 33712],"float16"), label=Tensor([64, 45, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([64, 46, 33712],"float16"), label=Tensor([64, 46, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([64, 48, 33712],"float16"), label=Tensor([64, 48, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([64, 49, 33712],"float16"), label=Tensor([64, 49, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([64, 50, 33712],"float16"), label=Tensor([64, 50, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([64, 51, 33712],"float16"), label=Tensor([64, 51, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([64, 52, 33712],"float16"), label=Tensor([64, 52, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([64, 53, 33712],"float16"), label=Tensor([64, 53, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([64, 54, 33712],"float16"), label=Tensor([64, 54, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([64, 55, 33712],"float16"), label=Tensor([64, 55, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([64, 56, 33712],"float16"), label=Tensor([64, 56, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([64, 57, 33712],"float16"), label=Tensor([64, 57, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([64, 58, 33712],"float16"), label=Tensor([64, 58, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([64, 59, 33712],"float16"), label=Tensor([64, 59, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([64, 60, 33712],"float16"), label=Tensor([64, 60, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([64, 61, 33712],"float16"), label=Tensor([64, 61, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([64, 62, 33712],"float16"), label=Tensor([64, 62, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([64, 63, 33712],"float16"), label=Tensor([64, 63, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([64, 64, 33712],"float16"), label=Tensor([64, 64, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([64, 66, 33712],"float16"), label=Tensor([64, 66, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([64, 67, 33712],"float16"), label=Tensor([64, 67, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([64, 68, 33712],"float16"), label=Tensor([64, 68, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([64, 69, 33712],"float16"), label=Tensor([64, 69, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([64, 70, 33712],"float16"), label=Tensor([64, 70, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([64, 71, 33712],"float16"), label=Tensor([64, 71, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([64, 72, 33712],"float16"), label=Tensor([64, 72, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([64, 73, 33712],"float16"), label=Tensor([64, 73, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([64, 74, 33712],"float16"), label=Tensor([64, 74, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([64, 75, 33712],"float16"), label=Tensor([64, 75, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([64, 76, 33712],"float16"), label=Tensor([64, 76, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([64, 77, 33712],"float16"), label=Tensor([64, 77, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([64, 78, 33712],"float16"), label=Tensor([64, 78, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([64, 79, 33712],"float16"), label=Tensor([64, 79, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([64, 80, 33712],"float16"), label=Tensor([64, 80, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([640, 7, 33712],"float16"), label=Tensor([640, 7, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([640, 8, 33712],"float16"), label=Tensor([640, 8, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([680, 6, 33712],"float16"), label=Tensor([680, 6, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([72, 41, 33712],"float16"), label=Tensor([72, 41, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([72, 43, 33712],"float16"), label=Tensor([72, 43, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([72, 44, 33712],"float16"), label=Tensor([72, 44, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([72, 45, 33712],"float16"), label=Tensor([72, 45, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([72, 46, 33712],"float16"), label=Tensor([72, 46, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([72, 47, 33712],"float16"), label=Tensor([72, 47, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([72, 48, 33712],"float16"), label=Tensor([72, 48, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([72, 49, 33712],"float16"), label=Tensor([72, 49, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([72, 50, 33712],"float16"), label=Tensor([72, 50, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([72, 51, 33712],"float16"), label=Tensor([72, 51, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([72, 52, 33712],"float16"), label=Tensor([72, 52, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([72, 53, 33712],"float16"), label=Tensor([72, 53, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([72, 54, 33712],"float16"), label=Tensor([72, 54, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([72, 55, 33712],"float16"), label=Tensor([72, 55, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([72, 56, 33712],"float16"), label=Tensor([72, 56, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([72, 57, 33712],"float16"), label=Tensor([72, 57, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([72, 58, 33712],"float16"), label=Tensor([72, 58, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([72, 59, 33712],"float16"), label=Tensor([72, 59, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([72, 60, 33712],"float16"), label=Tensor([72, 60, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([72, 61, 33712],"float16"), label=Tensor([72, 61, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([72, 62, 33712],"float16"), label=Tensor([72, 62, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([72, 63, 33712],"float16"), label=Tensor([72, 63, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([72, 64, 33712],"float16"), label=Tensor([72, 64, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([72, 65, 33712],"float16"), label=Tensor([72, 65, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([72, 66, 33712],"float16"), label=Tensor([72, 66, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([72, 67, 33712],"float16"), label=Tensor([72, 67, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([72, 68, 33712],"float16"), label=Tensor([72, 68, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([72, 69, 33712],"float16"), label=Tensor([72, 69, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([72, 70, 33712],"float16"), label=Tensor([72, 70, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([72, 71, 33712],"float16"), label=Tensor([72, 71, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([728, 7, 33712],"float16"), label=Tensor([728, 7, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([8, 244, 33712],"float16"), label=Tensor([8, 244, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([80, 37, 33712],"float16"), label=Tensor([80, 37, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([80, 38, 33712],"float16"), label=Tensor([80, 38, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([80, 39, 33712],"float16"), label=Tensor([80, 39, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([80, 40, 33712],"float16"), label=Tensor([80, 40, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([80, 41, 33712],"float16"), label=Tensor([80, 41, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([80, 42, 33712],"float16"), label=Tensor([80, 42, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([80, 43, 33712],"float16"), label=Tensor([80, 43, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([80, 44, 33712],"float16"), label=Tensor([80, 44, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([80, 45, 33712],"float16"), label=Tensor([80, 45, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([80, 46, 33712],"float16"), label=Tensor([80, 46, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([80, 47, 33712],"float16"), label=Tensor([80, 47, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([80, 48, 33712],"float16"), label=Tensor([80, 48, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([80, 49, 33712],"float16"), label=Tensor([80, 49, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([80, 50, 33712],"float16"), label=Tensor([80, 50, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([80, 51, 33712],"float16"), label=Tensor([80, 51, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([80, 52, 33712],"float16"), label=Tensor([80, 52, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([80, 53, 33712],"float16"), label=Tensor([80, 53, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([80, 54, 33712],"float16"), label=Tensor([80, 54, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([80, 55, 33712],"float16"), label=Tensor([80, 55, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([80, 56, 33712],"float16"), label=Tensor([80, 56, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([80, 57, 33712],"float16"), label=Tensor([80, 57, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([80, 58, 33712],"float16"), label=Tensor([80, 58, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([80, 59, 33712],"float16"), label=Tensor([80, 59, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([80, 60, 33712],"float16"), label=Tensor([80, 60, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([80, 61, 33712],"float16"), label=Tensor([80, 61, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([80, 62, 33712],"float16"), label=Tensor([80, 62, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([80, 63, 33712],"float16"), label=Tensor([80, 63, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([80, 64, 33712],"float16"), label=Tensor([80, 64, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([848, 6, 33712],"float16"), label=Tensor([848, 6, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([88, 31, 33712],"float16"), label=Tensor([88, 31, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([88, 33, 33712],"float16"), label=Tensor([88, 33, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([88, 34, 33712],"float16"), label=Tensor([88, 34, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([88, 35, 33712],"float16"), label=Tensor([88, 35, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([88, 36, 33712],"float16"), label=Tensor([88, 36, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([88, 37, 33712],"float16"), label=Tensor([88, 37, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([88, 38, 33712],"float16"), label=Tensor([88, 38, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([88, 39, 33712],"float16"), label=Tensor([88, 39, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([88, 40, 33712],"float16"), label=Tensor([88, 40, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([88, 41, 33712],"float16"), label=Tensor([88, 41, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([88, 42, 33712],"float16"), label=Tensor([88, 42, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([88, 43, 33712],"float16"), label=Tensor([88, 43, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([88, 44, 33712],"float16"), label=Tensor([88, 44, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([88, 45, 33712],"float16"), label=Tensor([88, 45, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([88, 46, 33712],"float16"), label=Tensor([88, 46, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([88, 47, 33712],"float16"), label=Tensor([88, 47, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([88, 48, 33712],"float16"), label=Tensor([88, 48, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([88, 49, 33712],"float16"), label=Tensor([88, 49, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([88, 50, 33712],"float16"), label=Tensor([88, 50, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([88, 51, 33712],"float16"), label=Tensor([88, 51, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([88, 52, 33712],"float16"), label=Tensor([88, 52, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([88, 53, 33712],"float16"), label=Tensor([88, 53, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([88, 54, 33712],"float16"), label=Tensor([88, 54, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([88, 55, 33712],"float16"), label=Tensor([88, 55, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([88, 56, 33712],"float16"), label=Tensor([88, 56, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([88, 57, 33712],"float16"), label=Tensor([88, 57, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([88, 58, 33712],"float16"), label=Tensor([88, 58, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([96, 27, 33712],"float16"), label=Tensor([96, 27, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([96, 29, 33712],"float16"), label=Tensor([96, 29, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([96, 30, 33712],"float16"), label=Tensor([96, 30, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([96, 31, 33712],"float16"), label=Tensor([96, 31, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([96, 32, 33712],"float16"), label=Tensor([96, 32, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([96, 33, 33712],"float16"), label=Tensor([96, 33, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([96, 34, 33712],"float16"), label=Tensor([96, 34, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([96, 35, 33712],"float16"), label=Tensor([96, 35, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([96, 36, 33712],"float16"), label=Tensor([96, 36, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([96, 37, 33712],"float16"), label=Tensor([96, 37, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([96, 38, 33712],"float16"), label=Tensor([96, 38, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([96, 39, 33712],"float16"), label=Tensor([96, 39, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([96, 40, 33712],"float16"), label=Tensor([96, 40, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([96, 41, 33712],"float16"), label=Tensor([96, 41, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([96, 42, 33712],"float16"), label=Tensor([96, 42, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([96, 43, 33712],"float16"), label=Tensor([96, 43, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([96, 44, 33712],"float16"), label=Tensor([96, 44, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([96, 45, 33712],"float16"), label=Tensor([96, 45, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([96, 46, 33712],"float16"), label=Tensor([96, 46, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([96, 47, 33712],"float16"), label=Tensor([96, 47, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([96, 48, 33712],"float16"), label=Tensor([96, 48, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([96, 49, 33712],"float16"), label=Tensor([96, 49, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([96, 50, 33712],"float16"), label=Tensor([96, 50, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([96, 52, 33712],"float16"), label=Tensor([96, 52, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(input=Tensor([96, 53, 33712],"float16"), label=Tensor([96, 53, 33712],"float32"), reduction="none", soft_label=True, )
paddle.nn.functional.cross_entropy(Tensor([16, 400],"float16"), Tensor([16, 400],"float32"), soft_label=True, )