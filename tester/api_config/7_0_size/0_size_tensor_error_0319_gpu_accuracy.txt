paddle.dot(Tensor([0],"float32"), Tensor([0],"float32"), )
paddle.dot(x=Tensor([0],"float32"), y=Tensor([0],"float32"), )
paddle.linalg.cov(Tensor([0],"float32"), )
paddle.linalg.cov(Tensor([3, 0],"float32"), )
paddle.linalg.cov(x=Tensor([4, 0],"float32"), )
paddle.linalg.cov(x=Tensor([4, 0],"float64"), )
paddle.linalg.lstsq(Tensor([3, 2, 8],"float32"), Tensor([3, 2, 0],"float32"), rcond=None, driver="gels", )
paddle.maximum(Tensor([0, 1, 1, 2],"float32"), Tensor([0, 1, 10285, 2],"float32"), )
paddle.maximum(Tensor([0, 1, 1, 2],"float32"), Tensor([0, 1, 24276, 2],"float32"), )
paddle.maximum(Tensor([0, 1, 1, 2],"float32"), Tensor([1, 1, 10285, 2],"float32"), )
paddle.maximum(Tensor([0, 1, 1, 2],"float32"), Tensor([1, 1, 24276, 2],"float32"), )
paddle.maximum(Tensor([0, 1, 2],"float32"), Tensor([0, 10285, 2],"float32"), )
paddle.maximum(Tensor([0, 1, 2],"float32"), Tensor([0, 3598, 2],"float32"), )
paddle.maximum(Tensor([0, 1, 2],"float32"), Tensor([1, 10285, 2],"float32"), )
paddle.maximum(Tensor([0, 1, 2],"float32"), Tensor([1, 3598, 2],"float32"), )
paddle.maximum(Tensor([0, 1, 2],"float32"), Tensor([1001, 2],"float32"), )
paddle.maximum(Tensor([0, 1, 2],"float32"), Tensor([1002, 2],"float32"), )
paddle.maximum(Tensor([0, 1],"float32"), Tensor([1, 1],"float32"), )
paddle.maximum(Tensor([1, 0, 1, 2],"float32"), Tensor([1, 0, 10285, 2],"float32"), )
paddle.maximum(Tensor([1, 0, 1, 2],"float32"), Tensor([1, 0, 24276, 2],"float32"), )
paddle.maximum(Tensor([1, 0, 1, 2],"float32"), Tensor([1, 1, 10285, 2],"float32"), )
paddle.maximum(Tensor([1, 0, 1, 2],"float32"), Tensor([1, 1, 24276, 2],"float32"), )
paddle.maximum(Tensor([1, 0],"float32"), Tensor([1, 1],"float32"), )
paddle.maximum(Tensor([1, 1, 0],"float32"), Tensor([1, 10285, 0],"float32"), )
paddle.maximum(Tensor([1, 1, 0],"float32"), Tensor([1, 3598, 0],"float32"), )
paddle.maximum(Tensor([1, 1, 1, 0],"float32"), Tensor([1, 1, 10285, 0],"float32"), )
paddle.maximum(Tensor([1, 1, 1, 0],"float32"), Tensor([1, 1, 24276, 0],"float32"), )
paddle.maximum(Tensor([1, 1, 1, 2],"float32"), Tensor([0, 1, 10285, 2],"float32"), )
paddle.maximum(Tensor([1, 1, 1, 2],"float32"), Tensor([0, 1, 24276, 2],"float32"), )
paddle.maximum(Tensor([1, 1, 1, 2],"float32"), Tensor([1, 0, 10285, 2],"float32"), )
paddle.maximum(Tensor([1, 1, 1, 2],"float32"), Tensor([1, 0, 24276, 2],"float32"), )
paddle.maximum(Tensor([1, 1, 1, 2],"float32"), Tensor([1, 1, 0, 2],"float32"), )
paddle.maximum(Tensor([1, 1, 2],"float32"), Tensor([0, 10285, 2],"float32"), )
paddle.maximum(Tensor([1, 1, 2],"float32"), Tensor([0, 2],"float32"), )
paddle.maximum(Tensor([1, 1, 2],"float32"), Tensor([0, 3598, 2],"float32"), )
paddle.maximum(Tensor([1, 1, 2],"float32"), Tensor([1, 0, 2],"float32"), )
paddle.maximum(Tensor([1, 1],"float32"), Tensor([0, 1],"float32"), )
paddle.maximum(Tensor([1, 1],"float32"), Tensor([1, 0],"float32"), )
paddle.maximum(Tensor([10, 0],"float32"), Tensor([10, 1],"float32"), )
paddle.maximum(Tensor([10, 1],"float32"), Tensor([10, 0],"float32"), )
paddle.maximum(Tensor([100, 1],"float32"), Tensor([0],"float32"), )
paddle.maximum(Tensor([12, 3, 10, 10, 0],"float32"), Tensor([12, 3, 10, 10, 1],"float32"), )
paddle.maximum(Tensor([12, 3, 10, 10, 1],"float32"), Tensor([12, 3, 10, 10, 0],"float32"), )
paddle.maximum(Tensor([12, 3, 20, 20, 0],"float32"), Tensor([12, 3, 20, 20, 1],"float32"), )
paddle.maximum(Tensor([12, 3, 20, 20, 1],"float32"), Tensor([12, 3, 20, 20, 0],"float32"), )
paddle.maximum(x=Tensor([0, 2, 1, 3],"float64"), y=Tensor([1, 2, 3],"float64"), )
paddle.maximum(x=Tensor([1, 0, 1, 3],"float64"), y=Tensor([1, 2, 3],"float64"), )
paddle.maximum(x=Tensor([1, 0],"float64"), y=Tensor([2, 0],"float64"), )
paddle.maximum(x=Tensor([1, 2, 1, 3],"float64"), y=Tensor([1, 0, 3],"float64"), )
paddle.maximum(x=Tensor([1, 2],"float64"), y=Tensor([0, 2],"float64"), )
paddle.minimum(Tensor([0, 1, 1, 2],"float32"), Tensor([0, 1, 10285, 2],"float32"), )
paddle.minimum(Tensor([0, 1, 1, 2],"float32"), Tensor([0, 1, 24276, 2],"float32"), )
paddle.minimum(Tensor([0, 1, 1, 2],"float32"), Tensor([1, 1, 10285, 2],"float32"), )
paddle.minimum(Tensor([0, 1, 1, 2],"float32"), Tensor([1, 1, 24276, 2],"float32"), )
paddle.minimum(Tensor([0, 1, 2],"float32"), Tensor([0, 10285, 2],"float32"), )
paddle.minimum(Tensor([0, 1, 2],"float32"), Tensor([0, 3598, 2],"float32"), )
paddle.minimum(Tensor([0, 1, 2],"float32"), Tensor([1, 10285, 2],"float32"), )
paddle.minimum(Tensor([0, 1, 2],"float32"), Tensor([1, 3598, 2],"float32"), )
paddle.minimum(Tensor([0, 1, 2],"float32"), Tensor([1001, 2],"float32"), )
paddle.minimum(Tensor([0, 1, 2],"float32"), Tensor([1002, 2],"float32"), )
paddle.minimum(Tensor([0, 1],"float32"), Tensor([1, 1],"float32"), )
paddle.minimum(Tensor([1, 0, 1, 2],"float32"), Tensor([1, 0, 10285, 2],"float32"), )
paddle.minimum(Tensor([1, 0, 1, 2],"float32"), Tensor([1, 0, 24276, 2],"float32"), )
paddle.minimum(Tensor([1, 0, 1, 2],"float32"), Tensor([1, 1, 10285, 2],"float32"), )
paddle.minimum(Tensor([1, 0, 1, 2],"float32"), Tensor([1, 1, 24276, 2],"float32"), )
paddle.minimum(Tensor([1, 0],"float32"), Tensor([1, 1],"float32"), )
paddle.minimum(Tensor([1, 1, 0],"float32"), Tensor([1, 10285, 0],"float32"), )
paddle.minimum(Tensor([1, 1, 0],"float32"), Tensor([1, 3598, 0],"float32"), )
paddle.minimum(Tensor([1, 1, 1, 0],"float32"), Tensor([1, 1, 10285, 0],"float32"), )
paddle.minimum(Tensor([1, 1, 1, 0],"float32"), Tensor([1, 1, 24276, 0],"float32"), )
paddle.minimum(Tensor([1, 1, 1, 2],"float32"), Tensor([0, 1, 10285, 2],"float32"), )
paddle.minimum(Tensor([1, 1, 1, 2],"float32"), Tensor([0, 1, 24276, 2],"float32"), )
paddle.minimum(Tensor([1, 1, 1, 2],"float32"), Tensor([1, 0, 10285, 2],"float32"), )
paddle.minimum(Tensor([1, 1, 1, 2],"float32"), Tensor([1, 0, 24276, 2],"float32"), )
paddle.minimum(Tensor([1, 1, 1, 2],"float32"), Tensor([1, 1, 0, 2],"float32"), )
paddle.minimum(Tensor([1, 1, 2],"float32"), Tensor([0, 10285, 2],"float32"), )
paddle.minimum(Tensor([1, 1, 2],"float32"), Tensor([0, 2],"float32"), )
paddle.minimum(Tensor([1, 1, 2],"float32"), Tensor([0, 3598, 2],"float32"), )
paddle.minimum(Tensor([1, 1, 2],"float32"), Tensor([1, 0, 2],"float32"), )
paddle.minimum(Tensor([1, 1],"float32"), Tensor([0, 1],"float32"), )
paddle.minimum(Tensor([1, 1],"float32"), Tensor([1, 0],"float32"), )
paddle.minimum(Tensor([12, 3, 10, 10, 0],"float32"), Tensor([12, 3, 10, 10, 1],"float32"), )
paddle.minimum(Tensor([12, 3, 10, 10, 1],"float32"), Tensor([12, 3, 10, 10, 0],"float32"), )
paddle.minimum(Tensor([12, 3, 20, 20, 0],"float32"), Tensor([12, 3, 20, 20, 1],"float32"), )
paddle.minimum(Tensor([12, 3, 20, 20, 1],"float32"), Tensor([12, 3, 20, 20, 0],"float32"), )
paddle.minimum(x=Tensor([0, 2, 1, 3],"float64"), y=Tensor([1, 2, 3],"float64"), )
paddle.minimum(x=Tensor([1, 0, 1, 3],"float64"), y=Tensor([1, 2, 3],"float64"), )
paddle.minimum(x=Tensor([1, 0],"float64"), y=Tensor([2, 0],"float64"), )
paddle.minimum(x=Tensor([1, 2, 1, 3],"float64"), y=Tensor([1, 0, 3],"float64"), )
paddle.minimum(x=Tensor([1, 2],"float64"), y=Tensor([0, 2],"float64"), )
paddle.nn.functional.cosine_similarity(Tensor([0, 5, 2],"float64"), Tensor([1, 5, 2],"float64"), axis=0, eps=1e-08, )
paddle.nn.functional.cosine_similarity(Tensor([1, 5, 2],"float64"), Tensor([0, 5, 2],"float64"), axis=0, eps=1e-08, )
paddle.nn.functional.cosine_similarity(Tensor([10, 12, 0],"float32"), Tensor([10, 1, 0],"float32"), axis=2, eps=1e-06, )
paddle.nn.functional.cosine_similarity(x1=Tensor([2, 0, 4],"float64"), x2=Tensor([2, 0, 4],"float64"), axis=1, eps=0, )
paddle.Tensor.dot(Tensor([0],"float32"), Tensor([0],"float32"), )
paddle.Tensor.matmul(Tensor([0, 100, 1],"float64"), Tensor([0, 1, 4],"float64"), )
paddle.Tensor.matmul(Tensor([0, 100, 1],"float64"), Tensor([0, 1, 40],"float64"), )
paddle.Tensor.matmul(Tensor([0, 100, 1],"float64"), Tensor([1, 1, 4],"float64"), )
paddle.Tensor.matmul(Tensor([0, 100, 1],"float64"), Tensor([1, 1, 40],"float64"), )
paddle.Tensor.matmul(Tensor([0, 12, 197, 197],"float16"), Tensor([0, 12, 197, 64],"float16"), )
paddle.Tensor.matmul(Tensor([0, 12, 197, 197],"float32"), Tensor([0, 12, 197, 64],"float32"), )
paddle.Tensor.matmul(Tensor([1, 0, 1],"float64"), Tensor([1, 1, 4],"float64"), )
paddle.Tensor.matmul(Tensor([1, 0, 1],"float64"), Tensor([1, 1, 40],"float64"), )
paddle.Tensor.matmul(Tensor([1, 100, 1],"float64"), Tensor([0, 1, 4],"float64"), )
paddle.Tensor.matmul(Tensor([1, 100, 1],"float64"), Tensor([0, 1, 40],"float64"), )
paddle.Tensor.matmul(Tensor([1, 100, 1],"float64"), Tensor([1, 1, 0],"float64"), )
paddle.Tensor.matmul(Tensor([112, 0, 197, 197],"float16"), Tensor([112, 0, 197, 64],"float16"), )
paddle.Tensor.matmul(Tensor([112, 0, 197, 197],"float32"), Tensor([112, 0, 197, 64],"float32"), )
paddle.Tensor.matmul(Tensor([112, 12, 0, 197],"float16"), Tensor([112, 12, 197, 64],"float16"), )
paddle.Tensor.matmul(Tensor([112, 12, 0, 197],"float32"), Tensor([112, 12, 197, 64],"float32"), )
paddle.Tensor.matmul(Tensor([112, 12, 197, 197],"float16"), Tensor([112, 12, 197, 0],"float16"), )
paddle.Tensor.matmul(Tensor([112, 12, 197, 197],"float32"), Tensor([112, 12, 197, 0],"float32"), )
paddle.abs(Tensor([0, 1, 32, 32],"float32"), )
paddle.abs(Tensor([0, 1],"float64"), )
paddle.abs(Tensor([0, 1],"int64"), )
paddle.abs(Tensor([0, 14, 5, 14],"complex128"), )
paddle.abs(Tensor([0, 2, 5],"float32"), )
paddle.abs(Tensor([0, 20, 1],"float32"), )
paddle.abs(Tensor([0, 3, 10, 10, 1],"float32"), )
paddle.abs(Tensor([0, 3, 20, 20, 1],"float32"), )
paddle.abs(Tensor([0],"float32"), )
paddle.abs(Tensor([0],"float64"), )
paddle.abs(Tensor([1, 0, 32, 32],"float32"), )
paddle.abs(Tensor([1, 0, 5, 14],"complex128"), )
paddle.abs(Tensor([1, 0],"float64"), )
paddle.abs(Tensor([1, 0],"int64"), )
paddle.abs(Tensor([1, 1, 0, 32],"float32"), )
paddle.abs(Tensor([1, 1, 32, 0],"float32"), )
paddle.abs(Tensor([1, 14, 0, 14],"complex128"), )
paddle.abs(Tensor([1, 14, 5, 0],"complex128"), )
paddle.abs(Tensor([10, 0, 1],"float32"), )
paddle.abs(Tensor([10, 0, 5],"float32"), )
paddle.abs(Tensor([10, 2, 0],"float32"), )
paddle.abs(Tensor([10, 20, 0],"float32"), )
paddle.abs(Tensor([12, 0, 10, 10, 1],"float32"), )
paddle.abs(Tensor([12, 0, 20, 20, 1],"float32"), )
paddle.abs(Tensor([12, 3, 0, 10, 1],"float32"), )
paddle.abs(Tensor([12, 3, 0, 20, 1],"float32"), )
paddle.abs(Tensor([12, 3, 10, 0, 1],"float32"), )
paddle.abs(Tensor([12, 3, 10, 10, 0],"float32"), )
paddle.abs(Tensor([12, 3, 20, 0, 1],"float32"), )
paddle.abs(Tensor([12, 3, 20, 20, 0],"float32"), )
paddle.abs(x=Tensor([0, 3, 3],"float32"), )
paddle.abs(x=Tensor([0, 3, 3],"float64"), )
paddle.abs(x=Tensor([0, 3],"float64"), )
paddle.abs(x=Tensor([0],"float64"), )
paddle.abs(x=Tensor([3, 0, 3],"float32"), )
paddle.abs(x=Tensor([3, 0, 3],"float64"), )
paddle.abs(x=Tensor([3, 3, 0],"float32"), )
paddle.abs(x=Tensor([3, 3, 0],"float64"), )
paddle.abs(x=Tensor([5, 0],"float64"), )
paddle.acos(Tensor([0, 10],"float32"), )
paddle.acos(Tensor([0, 20, 1],"float32"), )
paddle.acos(Tensor([0, 4],"float64"), )
paddle.acos(Tensor([10, 0, 1],"float32"), )
paddle.acos(Tensor([10, 0],"float32"), )
paddle.acos(Tensor([10, 20, 0],"float32"), )
paddle.acos(Tensor([2, 0],"float64"), )
paddle.acos(x=Tensor([0, 3, 3],"float32"), )
paddle.acos(x=Tensor([0, 3, 3],"float64"), )
paddle.acos(x=Tensor([3, 0, 3],"float32"), )
paddle.acos(x=Tensor([3, 0, 3],"float64"), )
paddle.acos(x=Tensor([3, 3, 0],"float32"), )
paddle.acos(x=Tensor([3, 3, 0],"float64"), )
paddle.acosh(Tensor([0, 20, 1],"float32"), )
paddle.acosh(Tensor([10, 0, 1],"float32"), )
paddle.acosh(Tensor([10, 20, 0],"float32"), )
paddle.angle(Tensor([0, 3],"complex128"), )
paddle.angle(Tensor([2, 0],"complex128"), )
paddle.argsort(Tensor([0, 10],"float32"), descending=True, )
paddle.argsort(Tensor([0, 100],"int64"), axis=1, stable=True, )
paddle.argsort(Tensor([0, 10000],"float64"), axis=1, )
paddle.argsort(Tensor([0, 10000],"float64"), axis=1, descending=True, )
paddle.argsort(Tensor([0, 3, 4],"float64"), axis=1, )
paddle.argsort(Tensor([0, 3, 4],"float64"), axis=1, descending=True, )
paddle.argsort(Tensor([0, 3, 4],"float64"), descending=True, )
paddle.argsort(Tensor([0, 30],"float64"), axis=1, descending=True, stable=True, )
paddle.argsort(Tensor([0, 30],"float64"), axis=1, stable=True, )
paddle.argsort(Tensor([0, 4, 2],"int64"), axis=1, stable=True, )
paddle.argsort(Tensor([0, 4, 2],"int64"), axis=2, stable=True, )
paddle.argsort(Tensor([0, 5],"float32"), descending=True, )
paddle.argsort(Tensor([0, 64],"int64"), axis=-1, )
paddle.argsort(Tensor([10000, 0],"float64"), axis=0, )
paddle.argsort(Tensor([10000, 0],"float64"), axis=0, descending=True, )
paddle.argsort(Tensor([2, 0, 4],"float64"), descending=True, )
paddle.argsort(Tensor([2, 3, 0],"float64"), axis=1, )
paddle.argsort(Tensor([2, 3, 0],"float64"), axis=1, descending=True, )
paddle.argsort(Tensor([3, 0, 2],"int64"), axis=0, stable=True, )
paddle.argsort(Tensor([3, 0, 2],"int64"), axis=2, stable=True, )
paddle.argsort(Tensor([3, 0],"int64"), axis=0, stable=True, )
paddle.argsort(Tensor([3, 4, 0],"int64"), axis=0, stable=True, )
paddle.argsort(Tensor([3, 4, 0],"int64"), axis=1, stable=True, )
paddle.argsort(Tensor([30, 0],"float64"), axis=0, descending=True, stable=True, )
paddle.argsort(Tensor([30, 0],"float64"), axis=0, stable=True, )
paddle.asin(Tensor([0, 16, 32],"complex128"), )
paddle.asin(Tensor([0, 20, 1],"float32"), )
paddle.asin(Tensor([10, 0, 1],"float32"), )
paddle.asin(Tensor([10, 20, 0],"float32"), )
paddle.asin(Tensor([8, 0, 32],"complex128"), )
paddle.asin(Tensor([8, 16, 0],"complex128"), )
paddle.asin(x=Tensor([0, 3, 3],"float32"), )
paddle.asin(x=Tensor([0, 3, 3],"float64"), )
paddle.asin(x=Tensor([3, 0, 3],"float32"), )
paddle.asin(x=Tensor([3, 0, 3],"float64"), )
paddle.asin(x=Tensor([3, 3, 0],"float32"), )
paddle.asin(x=Tensor([3, 3, 0],"float64"), )
paddle.asinh(Tensor([0, 16, 32],"complex128"), )
paddle.asinh(Tensor([0, 20, 1],"float32"), )
paddle.asinh(Tensor([10, 0, 1],"float32"), )
paddle.asinh(Tensor([10, 20, 0],"float32"), )
paddle.asinh(Tensor([8, 0, 32],"complex128"), )
paddle.asinh(Tensor([8, 16, 0],"complex128"), )
paddle.atan(Tensor([0, 16, 32],"complex128"), )
paddle.atan(Tensor([0, 20, 1],"float32"), )
paddle.atan(Tensor([0],"float32"), name="Cauchy_cdf", )
paddle.atan(Tensor([0],"float64"), name="Cauchy_cdf", )
paddle.atan(Tensor([10, 0, 1],"float32"), )
paddle.atan(Tensor([10, 20, 0],"float32"), )
paddle.atan(Tensor([8, 0, 32],"complex128"), )
paddle.atan(Tensor([8, 16, 0],"complex128"), )
paddle.atan(x=Tensor([0, 3, 3],"float32"), )
paddle.atan(x=Tensor([0, 3, 3],"float64"), )
paddle.atan(x=Tensor([3, 0, 3],"float32"), )
paddle.atan(x=Tensor([3, 0, 3],"float64"), )
paddle.atan(x=Tensor([3, 3, 0],"float32"), )
paddle.atan(x=Tensor([3, 3, 0],"float64"), )
paddle.atan2(Tensor([0, 17],"float64"), Tensor([0, 17],"float64"), )
paddle.atan2(Tensor([0, 222, 333],"float64"), Tensor([222, 333],"float64"), )
paddle.atan2(Tensor([0, 3, 2],"float16"), Tensor([0, 3, 2],"float32"), )
paddle.atan2(Tensor([0, 3, 2],"float16"), Tensor([0, 3, 2],"float64"), )
paddle.atan2(Tensor([100],"float64"), Tensor([0, 100],"float64"), )
paddle.atan2(Tensor([11, 0],"float64"), Tensor([11, 0],"float64"), )
paddle.atan2(Tensor([4, 0, 2],"float16"), Tensor([4, 0, 2],"float32"), )
paddle.atan2(Tensor([4, 0, 2],"float16"), Tensor([4, 0, 2],"float64"), )
paddle.atan2(Tensor([4, 3, 0],"float16"), Tensor([4, 3, 0],"float32"), )
paddle.atan2(Tensor([4, 3, 0],"float16"), Tensor([4, 3, 0],"float64"), )
paddle.atan2(x=Tensor([0, 6, 6, 6, 6],"float64"), y=Tensor([0, 6, 6, 6, 6],"float64"), )
paddle.atan2(x=Tensor([0, 6, 6, 6],"float64"), y=Tensor([0, 6, 6, 6],"float64"), )
paddle.atan2(x=Tensor([0, 6, 6],"float64"), y=Tensor([0, 6, 6],"float64"), )
paddle.atan2(x=Tensor([0, 6],"float16"), y=Tensor([0, 6],"float16"), )
paddle.atan2(x=Tensor([0, 6],"float32"), y=Tensor([0, 6],"float32"), )
paddle.atan2(x=Tensor([3, 0, 6, 6, 6],"float64"), y=Tensor([3, 0, 6, 6, 6],"float64"), )
paddle.atan2(x=Tensor([3, 6, 0, 6, 6],"float64"), y=Tensor([3, 6, 0, 6, 6],"float64"), )
paddle.atan2(x=Tensor([3, 6, 6, 0, 6],"float64"), y=Tensor([3, 6, 6, 0, 6],"float64"), )
paddle.atan2(x=Tensor([3, 6, 6, 6, 0],"float64"), y=Tensor([3, 6, 6, 6, 0],"float64"), )
paddle.atan2(x=Tensor([6, 0, 6, 6],"float64"), y=Tensor([6, 0, 6, 6],"float64"), )
paddle.atan2(x=Tensor([6, 0, 6],"float64"), y=Tensor([6, 0, 6],"float64"), )
paddle.atan2(x=Tensor([6, 0],"float16"), y=Tensor([6, 0],"float16"), )
paddle.atan2(x=Tensor([6, 0],"float32"), y=Tensor([6, 0],"float32"), )
paddle.atan2(x=Tensor([6, 6, 0, 6],"float64"), y=Tensor([6, 6, 0, 6],"float64"), )
paddle.atan2(x=Tensor([6, 6, 0],"float64"), y=Tensor([6, 6, 0],"float64"), )
paddle.atan2(x=Tensor([6, 6, 6, 0],"float64"), y=Tensor([6, 6, 6, 0],"float64"), )
paddle.atanh(Tensor([0, 16, 32],"complex128"), )
paddle.atanh(Tensor([0, 20, 1],"float32"), )
paddle.atanh(Tensor([10, 0, 1],"float32"), )
paddle.atanh(Tensor([10, 20, 0],"float32"), )
paddle.atanh(Tensor([8, 0, 32],"complex128"), )
paddle.atanh(Tensor([8, 16, 0],"complex128"), )
paddle.bitwise_not(Tensor([0, 3, 3, 3, 4, 1, 5, 2],"bool"), )
paddle.bitwise_not(Tensor([0, 3, 3, 3, 4, 1, 5, 2],"int16"), )
paddle.bitwise_not(Tensor([0, 3, 5],"int32"), )
paddle.bitwise_not(Tensor([0, 4, 1],"int32"), )
paddle.bitwise_not(Tensor([0],"int32"), )
paddle.bitwise_not(Tensor([2, 0, 3, 3, 4, 1, 5, 2],"bool"), )
paddle.bitwise_not(Tensor([2, 0, 3, 3, 4, 1, 5, 2],"int16"), )
paddle.bitwise_not(Tensor([2, 0, 5],"int32"), )
paddle.bitwise_not(Tensor([2, 3, 0, 3, 4, 1, 5, 2],"bool"), )
paddle.bitwise_not(Tensor([2, 3, 0, 3, 4, 1, 5, 2],"int16"), )
paddle.bitwise_not(Tensor([2, 3, 0],"int32"), )
paddle.bitwise_not(Tensor([2, 3, 3, 0, 4, 1, 5, 2],"bool"), )
paddle.bitwise_not(Tensor([2, 3, 3, 0, 4, 1, 5, 2],"int16"), )
paddle.bitwise_not(Tensor([2, 3, 3, 3, 0, 1, 5, 2],"bool"), )
paddle.bitwise_not(Tensor([2, 3, 3, 3, 0, 1, 5, 2],"int16"), )
paddle.bitwise_not(Tensor([2, 3, 3, 3, 4, 0, 5, 2],"bool"), )
paddle.bitwise_not(Tensor([2, 3, 3, 3, 4, 0, 5, 2],"int16"), )
paddle.bitwise_not(Tensor([2, 3, 3, 3, 4, 1, 0, 2],"bool"), )
paddle.bitwise_not(Tensor([2, 3, 3, 3, 4, 1, 0, 2],"int16"), )
paddle.bitwise_not(Tensor([2, 3, 3, 3, 4, 1, 5, 0],"bool"), )
paddle.bitwise_not(Tensor([2, 3, 3, 3, 4, 1, 5, 0],"int16"), )
paddle.bitwise_not(Tensor([3, 0, 1],"int32"), )
paddle.bitwise_not(Tensor([3, 4, 0],"int32"), )
paddle.bucketize(Tensor([0, 4],"float64"), Tensor([4],"float64"), )
paddle.bucketize(Tensor([0, 4],"float64"), Tensor([4],"float64"), out_int32=True, )
paddle.bucketize(Tensor([0, 4],"float64"), Tensor([4],"float64"), right=True, )
paddle.bucketize(Tensor([2, 0],"float64"), Tensor([4],"float64"), )
paddle.bucketize(Tensor([2, 0],"float64"), Tensor([4],"float64"), out_int32=True, )
paddle.bucketize(Tensor([2, 0],"float64"), Tensor([4],"float64"), right=True, )
paddle.ceil(Tensor([0, 1],"float32"), )
paddle.ceil(Tensor([0, 3, 3],"float32"), )
paddle.ceil(Tensor([0, 3, 3],"float64"), )
paddle.ceil(Tensor([0, 3],"float64"), )
paddle.ceil(Tensor([0, 6, 3, 1, 2, 5],"float64"), )
paddle.ceil(Tensor([0, 6, 3, 4, 1, 5],"float64"), )
paddle.ceil(Tensor([0],"float32"), )
paddle.ceil(Tensor([0],"float64"), )
paddle.ceil(Tensor([1, 0, 3],"float32"), )
paddle.ceil(Tensor([1, 0, 3],"float64"), )
paddle.ceil(Tensor([1, 0],"float64"), )
paddle.ceil(Tensor([1, 3, 0],"float32"), )
paddle.ceil(Tensor([1, 3, 0],"float64"), )
paddle.ceil(Tensor([2, 0],"float32"), )
paddle.ceil(Tensor([3, 0, 3, 1, 2, 5],"float64"), )
paddle.ceil(Tensor([3, 0, 3, 4, 1, 5],"float64"), )
paddle.ceil(Tensor([3, 6, 0, 1, 2, 5],"float64"), )
paddle.ceil(Tensor([3, 6, 0, 4, 1, 5],"float64"), )
paddle.ceil(Tensor([3, 6, 3, 0, 1, 5],"float64"), )
paddle.ceil(Tensor([3, 6, 3, 0, 2, 5],"float64"), )
paddle.ceil(Tensor([3, 6, 3, 1, 0, 5],"float64"), )
paddle.ceil(Tensor([3, 6, 3, 1, 2, 0],"float64"), )
paddle.ceil(Tensor([3, 6, 3, 4, 0, 5],"float64"), )
paddle.ceil(Tensor([3, 6, 3, 4, 1, 0],"float64"), )
paddle.ceil(x=Tensor([0, 3, 3],"float32"), )
paddle.ceil(x=Tensor([0, 3, 3],"float64"), )
paddle.ceil(x=Tensor([3, 0, 3],"float32"), )
paddle.ceil(x=Tensor([3, 0, 3],"float64"), )
paddle.ceil(x=Tensor([3, 3, 0],"float32"), )
paddle.ceil(x=Tensor([3, 3, 0],"float64"), )
paddle.chunk(Tensor([0, 1, 1, 64],"float16"), 2, axis=-1, )
paddle.chunk(Tensor([0, 1, 64, 64],"float16"), 2, axis=-1, )
paddle.chunk(Tensor([0, 108, 64, 64],"float16"), 3, axis=1, )
paddle.chunk(Tensor([0, 108, 64, 64],"float32"), 3, axis=1, )
paddle.chunk(Tensor([0, 11, 1024],"float32"), chunks=2, axis=-1, )
paddle.chunk(Tensor([0, 128, 25500],"float32"), 2, axis=1, )
paddle.chunk(Tensor([0, 16, 128],"float32"), chunks=2, axis=-1, )
paddle.chunk(Tensor([0, 21, 32],"float32"), 3, axis=1, )
paddle.chunk(Tensor([0, 21, 8],"float32"), 3, axis=1, )
paddle.chunk(Tensor([0, 4, 1],"float32"), 4, axis=1, )
paddle.chunk(Tensor([0, 4, 20, 24],"float32"), 3, axis=-1, )
paddle.chunk(Tensor([0, 4, 7, 24],"float32"), 3, axis=-1, )
paddle.chunk(Tensor([0, 4],"float32"), 2, axis=-1, )
paddle.chunk(Tensor([0, 56, 72],"float32"), 3, axis=-1, )
paddle.chunk(Tensor([1, 0, 1, 64],"float16"), 2, axis=-1, )
paddle.chunk(Tensor([1, 0, 1024],"float32"), chunks=2, axis=-1, )
paddle.chunk(Tensor([1, 0, 20, 24],"float32"), 3, axis=-1, )
paddle.chunk(Tensor([1, 0, 64, 64],"float16"), 2, axis=-1, )
paddle.chunk(Tensor([1, 1, 0, 64],"float16"), 2, axis=-1, )
paddle.chunk(Tensor([1, 1, 1, 0],"float16"), 2, axis=-1, )
paddle.chunk(Tensor([1, 1, 64, 0],"float16"), 2, axis=-1, )
paddle.chunk(Tensor([1, 11, 0],"float32"), chunks=2, axis=-1, )
paddle.chunk(Tensor([1, 4, 0, 24],"float32"), 3, axis=-1, )
paddle.chunk(Tensor([1, 4, 20, 0],"float32"), 3, axis=-1, )
paddle.chunk(Tensor([13, 0, 1],"float32"), 4, axis=1, )
paddle.chunk(Tensor([13, 0, 128],"float32"), chunks=2, axis=-1, )
paddle.chunk(Tensor([13, 0, 32],"float32"), 3, axis=1, )
paddle.chunk(Tensor([13, 0, 7, 24],"float32"), 3, axis=-1, )
paddle.chunk(Tensor([13, 0, 72],"float32"), 3, axis=-1, )
paddle.chunk(Tensor([13, 16, 0],"float32"), chunks=2, axis=-1, )
paddle.chunk(Tensor([13, 21, 0],"float32"), 3, axis=1, )
paddle.chunk(Tensor([13, 4, 0, 24],"float32"), 3, axis=-1, )
paddle.chunk(Tensor([13, 4, 0],"float32"), 4, axis=1, )
paddle.chunk(Tensor([13, 4, 7, 0],"float32"), 3, axis=-1, )
paddle.chunk(Tensor([13, 56, 0],"float32"), 3, axis=-1, )
paddle.chunk(Tensor([16, 0, 25500],"float32"), 2, axis=1, )
paddle.chunk(Tensor([16, 128, 0],"float32"), 2, axis=1, )
paddle.chunk(Tensor([2048, 0],"float32"), 2, axis=-1, )
paddle.chunk(Tensor([4, 0, 64, 64],"float16"), 3, axis=1, )
paddle.chunk(Tensor([4, 0, 64, 64],"float32"), 3, axis=1, )
paddle.chunk(Tensor([4, 108, 0, 64],"float16"), 3, axis=1, )
paddle.chunk(Tensor([4, 108, 0, 64],"float32"), 3, axis=1, )
paddle.chunk(Tensor([4, 108, 64, 0],"float16"), 3, axis=1, )
paddle.chunk(Tensor([4, 108, 64, 0],"float32"), 3, axis=1, )
paddle.chunk(Tensor([52, 0, 8],"float32"), 3, axis=1, )
paddle.chunk(Tensor([52, 21, 0],"float32"), 3, axis=1, )
paddle.chunk(Tensor([8192, 0],"float32"), 2, axis=-1, )
paddle.chunk(x=Tensor([0, 3],"float16"), chunks=3, axis=-1, )
paddle.chunk(x=Tensor([0, 3],"float32"), chunks=3, axis=-1, )
paddle.chunk(x=Tensor([3, 0],"float16"), chunks=3, axis=-1, )
paddle.chunk(x=Tensor([3, 0],"float32"), chunks=3, axis=-1, )
paddle.clip(Tensor([0, 1, 1],"float32"), -10000000000.0, 4.135166556742356, )
paddle.clip(Tensor([0, 1, 1024],"float32"), min=-2, max=2, )
paddle.clip(Tensor([0, 1, 128, 128],"float32"), min=0.0001, max=0.9999, )
paddle.clip(Tensor([0, 1, 1408],"float32"), min=-2, max=2, )
paddle.clip(Tensor([0, 1, 152, 272],"float16"), 0.0001, 0.9999, )
paddle.clip(Tensor([0, 1, 152, 272],"float32"), 0.0001, 0.9999, )
paddle.clip(Tensor([0, 1, 248, 216],"float32"), min=0.0001, max=0.9999, )
paddle.clip(Tensor([0, 1, 7, 7],"int64"), 0, 13, )
paddle.clip(Tensor([0, 1],"float32"), max=4.135166556742356, )
paddle.clip(Tensor([0, 1],"float32"), min=0, )
paddle.clip(Tensor([0, 1],"float32"), min=1.0, )
paddle.clip(Tensor([0, 1],"float32"), min=1.1920928955078125e-07, )
paddle.clip(Tensor([0, 10],"float32"), min=0, )
paddle.clip(Tensor([0, 10],"int64"), max=107, )
paddle.clip(Tensor([0, 10],"int64"), max=255984, )
paddle.clip(Tensor([0, 10],"int64"), max=31984, )
paddle.clip(Tensor([0, 1024],"float32"), min=-2, max=2, )
paddle.clip(Tensor([0, 1025, 107],"float32"), min=1e-07, )
paddle.clip(Tensor([0, 107, 1025],"float32"), min=1e-07, )
paddle.clip(Tensor([0, 107136, 1],"float32"), min=0, )
paddle.clip(Tensor([0, 128],"float32"), -8, 7, )
paddle.clip(Tensor([0, 13],"int32"), max=16, )
paddle.clip(Tensor([0, 157920, 3],"float32"), min=0, )
paddle.clip(Tensor([0, 157920],"int64"), min=0, max=1, )
paddle.clip(Tensor([0, 17, 128, 128],"float64"), min=0, max=2, )
paddle.clip(Tensor([0, 17, 256, 256],"float64"), min=0, max=2, )
paddle.clip(Tensor([0, 2, 1],"float32"), min=1e-06, )
paddle.clip(Tensor([0, 2, 2],"float32"), min=-1.0, max=1.0, )
paddle.clip(Tensor([0, 2],"float32"), min=1.1754943508222875e-38, )
paddle.clip(Tensor([0, 2],"float32"), min=1e-06, )
paddle.clip(Tensor([0, 2],"float64"), min=0.0, )
paddle.clip(Tensor([0, 2],"float64"), min=1e-06, )
paddle.clip(Tensor([0, 256],"float16"), -127, 127, )
paddle.clip(Tensor([0, 256],"float64"), -127, 127, )
paddle.clip(Tensor([0, 2730],"float32"), min=-2, max=2, )
paddle.clip(Tensor([0, 28],"float32"), 0.0, 1.0, )
paddle.clip(Tensor([0, 3, 14, 14],"float32"), min=-2, max=2, )
paddle.clip(Tensor([0, 3],"float32"), min=1e-05, )
paddle.clip(Tensor([0, 300, 4096],"float32"), 0, 1, )
paddle.clip(Tensor([0, 32, 100, 2],"float16"), 0, 1, )
paddle.clip(Tensor([0, 32, 100, 2],"float32"), 0, 1, )
paddle.clip(Tensor([0, 32],"int32"), max=16, )
paddle.clip(Tensor([0, 4],"float32"), -1, 1, )
paddle.clip(Tensor([0, 4],"float64"), -1, 1, )
paddle.clip(Tensor([0, 4096],"float16"), -126, 126, )
paddle.clip(Tensor([0, 499],"float32"), min=1e-10, )
paddle.clip(Tensor([0, 512],"float32"), -64, 64, )
paddle.clip(Tensor([0, 7, 1],"int32"), max=83, )
paddle.clip(Tensor([0, 7],"int32"), max=184, )
paddle.clip(Tensor([0, 7],"int32"), max=50248, )
paddle.clip(Tensor([0, 7],"int32"), max=65, )
paddle.clip(Tensor([0, 7],"int32"), max=83, )
paddle.clip(Tensor([0, 7],"int32"), max=84, )
paddle.clip(Tensor([0, 7],"int64"), 3, )
paddle.clip(Tensor([0, 7],"int64"), max=240, )
paddle.clip(Tensor([0, 7],"int64"), max=83, )
paddle.clip(Tensor([0, 7],"int64"), min=0, max=127, )
paddle.clip(Tensor([0, 8, 8],"float32"), 0.0, 1.0, )
paddle.clip(Tensor([0, 8],"float32"), 0.0, 1.0, )
paddle.clip(Tensor([0],"float32"), 0, 1, )
paddle.clip(Tensor([0],"float32"), max=22400, )
paddle.clip(Tensor([0],"float32"), min=0, )
paddle.clip(Tensor([0],"float32"), min=0.001, max=100.0, )
paddle.clip(Tensor([0],"float32"), min=1, )
paddle.clip(Tensor([0],"float32"), min=1.0, )
paddle.clip(Tensor([0],"float32"), min=1.1754943508222875e-38, )
paddle.clip(Tensor([0],"float64"), min=0.0, )
paddle.clip(Tensor([0],"int64"), min=1, )
paddle.clip(Tensor([1, 0, 1024],"float32"), min=-2, max=2, )
paddle.clip(Tensor([1, 0, 1408],"float32"), min=-2, max=2, )
paddle.clip(Tensor([1, 0, 2],"float32"), min=-1.0, max=1.0, )
paddle.clip(Tensor([1, 0, 4096],"float32"), 0, 1, )
paddle.clip(Tensor([1, 0, 7, 7],"int64"), 0, 13, )
paddle.clip(Tensor([1, 0],"float32"), min=1.1754943508222875e-38, )
paddle.clip(Tensor([1, 0],"float32"), min=1e-05, )
paddle.clip(Tensor([1, 1, 0, 7],"int64"), 0, 13, )
paddle.clip(Tensor([1, 1, 0],"float32"), min=-2, max=2, )
paddle.clip(Tensor([1, 1, 7, 0],"int64"), 0, 13, )
paddle.clip(Tensor([1, 2, 0],"float32"), min=-1.0, max=1.0, )
paddle.clip(Tensor([1, 300, 0],"float32"), 0, 1, )
paddle.clip(Tensor([10, 0, 1],"float32"), min=1e-06, )
paddle.clip(Tensor([10, 0],"float32"), min=1e-05, )
paddle.clip(Tensor([10, 0],"float32"), min=1e-06, )
paddle.clip(Tensor([10, 0],"float64"), min=1e-06, )
paddle.clip(Tensor([10, 2, 0],"float32"), min=1e-06, )
paddle.clip(Tensor([1024, 0],"float32"), min=-2, max=2, )
paddle.clip(Tensor([11, 0, 1],"float32"), -10000000000.0, 4.135166556742356, )
paddle.clip(Tensor([11, 1, 0],"float32"), -10000000000.0, 4.135166556742356, )
paddle.clip(Tensor([12, 0],"int32"), max=83, )
paddle.clip(Tensor([12, 0],"int64"), max=83, )
paddle.clip(Tensor([128, 0],"float32"), -8, 7, )
paddle.clip(Tensor([13, 0, 1],"int32"), max=83, )
paddle.clip(Tensor([13, 0],"int32"), max=16, )
paddle.clip(Tensor([13, 0],"int32"), max=50248, )
paddle.clip(Tensor([13, 0],"int32"), max=65, )
paddle.clip(Tensor([13, 0],"int32"), max=84, )
paddle.clip(Tensor([13, 0],"int64"), 3, )
paddle.clip(Tensor([13, 0],"int64"), min=0, max=127, )
paddle.clip(Tensor([13, 7, 0],"int32"), max=83, )
paddle.clip(Tensor([14, 0],"int64"), max=240, )
paddle.clip(Tensor([16, 0, 1025],"float32"), min=1e-07, )
paddle.clip(Tensor([16, 0, 107],"float32"), min=1e-07, )
paddle.clip(Tensor([16, 0],"float16"), -127, 127, )
paddle.clip(Tensor([16, 0],"float64"), -127, 127, )
paddle.clip(Tensor([16, 1025, 0],"float32"), min=1e-07, )
paddle.clip(Tensor([16, 107, 0],"float32"), min=1e-07, )
paddle.clip(Tensor([192, 0, 14, 14],"float32"), min=-2, max=2, )
paddle.clip(Tensor([192, 3, 0, 14],"float32"), min=-2, max=2, )
paddle.clip(Tensor([192, 3, 14, 0],"float32"), min=-2, max=2, )
paddle.clip(Tensor([2, 0, 1],"float32"), min=0, )
paddle.clip(Tensor([2, 0, 2],"float32"), min=-1.0, max=1.0, )
paddle.clip(Tensor([2, 0, 8],"float32"), 0.0, 1.0, )
paddle.clip(Tensor([2, 0],"float16"), -126, 126, )
paddle.clip(Tensor([2, 0],"float32"), min=1.0, )
paddle.clip(Tensor([2, 0],"float32"), min=1.1754943508222875e-38, )
paddle.clip(Tensor([2, 0],"int32"), max=184, )
paddle.clip(Tensor([2, 0],"int64"), max=107, )
paddle.clip(Tensor([2, 0],"int64"), max=255984, )
paddle.clip(Tensor([2, 0],"int64"), max=31984, )
paddle.clip(Tensor([2, 107136, 0],"float32"), min=0, )
paddle.clip(Tensor([2, 2, 0],"float32"), min=-1.0, max=1.0, )
paddle.clip(Tensor([2, 8, 0],"float32"), 0.0, 1.0, )
paddle.clip(Tensor([20, 0, 152, 272],"float16"), 0.0001, 0.9999, )
paddle.clip(Tensor([20, 0, 152, 272],"float32"), 0.0001, 0.9999, )
paddle.clip(Tensor([20, 0],"float32"), min=1.1920928955078125e-07, )
paddle.clip(Tensor([20, 1, 0, 272],"float16"), 0.0001, 0.9999, )
paddle.clip(Tensor([20, 1, 0, 272],"float32"), 0.0001, 0.9999, )
paddle.clip(Tensor([20, 1, 152, 0],"float16"), 0.0001, 0.9999, )
paddle.clip(Tensor([20, 1, 152, 0],"float32"), 0.0001, 0.9999, )
paddle.clip(Tensor([2048, 0],"float32"), max=4.135166556742356, )
paddle.clip(Tensor([21, 0, 1],"float32"), -10000000000.0, 4.135166556742356, )
paddle.clip(Tensor([21, 1, 0],"float32"), -10000000000.0, 4.135166556742356, )
paddle.clip(Tensor([24, 0, 128, 128],"float64"), min=0, max=2, )
paddle.clip(Tensor([24, 0, 256, 256],"float64"), min=0, max=2, )
paddle.clip(Tensor([24, 17, 0, 128],"float64"), min=0, max=2, )
paddle.clip(Tensor([24, 17, 0, 256],"float64"), min=0, max=2, )
paddle.clip(Tensor([24, 17, 128, 0],"float64"), min=0, max=2, )
paddle.clip(Tensor([24, 17, 256, 0],"float64"), min=0, max=2, )
paddle.clip(Tensor([28, 0],"float32"), 0.0, 1.0, )
paddle.clip(Tensor([4, 0, 128, 128],"float32"), min=0.0001, max=0.9999, )
paddle.clip(Tensor([4, 0, 248, 216],"float32"), min=0.0001, max=0.9999, )
paddle.clip(Tensor([4, 0, 3],"float32"), min=0, )
paddle.clip(Tensor([4, 0],"float32"), -1, 1, )
paddle.clip(Tensor([4, 0],"float32"), min=1.0, )
paddle.clip(Tensor([4, 0],"float64"), -1, 1, )
paddle.clip(Tensor([4, 0],"int64"), min=0, max=1, )
paddle.clip(Tensor([4, 1, 0, 128],"float32"), min=0.0001, max=0.9999, )
paddle.clip(Tensor([4, 1, 0, 216],"float32"), min=0.0001, max=0.9999, )
paddle.clip(Tensor([4, 1, 128, 0],"float32"), min=0.0001, max=0.9999, )
paddle.clip(Tensor([4, 1, 248, 0],"float32"), min=0.0001, max=0.9999, )
paddle.clip(Tensor([4, 157920, 0],"float32"), min=0, )
paddle.clip(Tensor([5, 0],"float64"), min=0.0, )
paddle.clip(Tensor([512, 0, 100, 2],"float16"), 0, 1, )
paddle.clip(Tensor([512, 0, 100, 2],"float32"), 0, 1, )
paddle.clip(Tensor([512, 0],"float32"), -64, 64, )
paddle.clip(Tensor([512, 0],"float32"), max=4.135166556742356, )
paddle.clip(Tensor([512, 32, 0, 2],"float16"), 0, 1, )
paddle.clip(Tensor([512, 32, 0, 2],"float32"), 0, 1, )
paddle.clip(Tensor([512, 32, 100, 0],"float16"), 0, 1, )
paddle.clip(Tensor([512, 32, 100, 0],"float32"), 0, 1, )
paddle.clip(Tensor([52640, 0],"float32"), min=0, )
paddle.clip(Tensor([8, 0],"float32"), 0.0, 1.0, )
paddle.clip(Tensor([80, 0],"float32"), min=1e-10, )
paddle.clip(x=Tensor([0, 10, 10],"float64"), min=-1.0, max=1.0, )
paddle.clip(x=Tensor([0, 10],"float32"), min=-0.1, max=0.8, )
paddle.clip(x=Tensor([0, 10],"float32"), min=-0.6, max=0.6, )
paddle.clip(x=Tensor([0, 10],"float64"), min=-1.0, max=1.0, )
paddle.clip(x=Tensor([0, 10],"float64"), min=-2.0, max=-1.0, )
paddle.clip(x=Tensor([0, 10],"float64"), min=2.0, max=2.0, )
paddle.clip(x=Tensor([0, 1248],"float16"), min=0, max=1, )
paddle.clip(x=Tensor([0, 1248],"float32"), min=0, max=1, )
paddle.clip(x=Tensor([0, 16],"float32"), min=-1.0, max=1.0, )
paddle.clip(x=Tensor([0, 2, 3],"float32"), min=None, max=1, )
paddle.clip(x=Tensor([0, 2, 3],"float64"), min=None, max=1, )
paddle.clip(x=Tensor([0, 3, 3],"float32"), min=None, max=5, )
paddle.clip(x=Tensor([0, 3, 3],"float64"), min=None, max=5, )
paddle.clip(x=Tensor([0, 3],"float32"), min=-5.0, max=5.0, )
paddle.clip(x=Tensor([0, 3],"float64"), min=0.0, max=5, )
paddle.clip(x=Tensor([0, 3],"float64"), min=1.0, max=None, )
paddle.clip(x=Tensor([0, 3],"float64"), min=5, max=None, )
paddle.clip(x=Tensor([0, 3],"float64"), min=-5.0, max=5.0, )
paddle.clip(x=Tensor([0, 8, 16],"float32"), min=0.0, max=0.0, )
paddle.clip(x=Tensor([0],"float32"), min=-0.1, max=0.1, )
paddle.clip(x=Tensor([0],"float64"), min=2.0, max=2.0, )
paddle.clip(x=Tensor([0],"float64"), min=None, max=-1, )
paddle.clip(x=Tensor([1, 0, 3],"float32"), min=None, max=1, )
paddle.clip(x=Tensor([1, 0, 3],"float64"), min=None, max=1, )
paddle.clip(x=Tensor([1, 2, 0],"float32"), min=None, max=1, )
paddle.clip(x=Tensor([1, 2, 0],"float64"), min=None, max=1, )
paddle.clip(x=Tensor([10, 0],"float32"), min=-0.1, max=0.8, )
paddle.clip(x=Tensor([10, 0],"float32"), min=-0.6, max=0.6, )
paddle.clip(x=Tensor([10, 0],"float64"), min=-1.0, max=1.0, )
paddle.clip(x=Tensor([10, 0],"float64"), min=-2.0, max=-1.0, )
paddle.clip(x=Tensor([10, 0],"float64"), min=2.0, max=2.0, )
paddle.clip(x=Tensor([16, 0],"float32"), min=-1.0, max=1.0, )
paddle.clip(x=Tensor([3, 0, 3],"float32"), min=None, max=5, )
paddle.clip(x=Tensor([3, 0, 3],"float64"), min=None, max=5, )
paddle.clip(x=Tensor([3, 0],"float32"), min=-5.0, max=5.0, )
paddle.clip(x=Tensor([3, 0],"float64"), min=0.0, max=5, )
paddle.clip(x=Tensor([3, 0],"float64"), min=1.0, max=None, )
paddle.clip(x=Tensor([3, 0],"float64"), min=5, max=None, )
paddle.clip(x=Tensor([3, 0],"float64"), min=-5.0, max=5.0, )
paddle.clip(x=Tensor([3, 3, 0],"float32"), min=None, max=5, )
paddle.clip(x=Tensor([3, 3, 0],"float64"), min=None, max=5, )
paddle.clip(x=Tensor([4, 0, 10],"float64"), min=-1.0, max=1.0, )
paddle.clip(x=Tensor([4, 0, 16],"float32"), min=0.0, max=0.0, )
paddle.clip(x=Tensor([4, 10, 0],"float64"), min=-1.0, max=1.0, )
paddle.clip(x=Tensor([4, 8, 0],"float32"), min=0.0, max=0.0, )
paddle.clip(x=Tensor([512, 0],"float16"), min=0, max=1, )
paddle.clip(x=Tensor([512, 0],"float32"), min=0, max=1, )
paddle.complex(real=Tensor([0, 2, 3],"float32"), imag=Tensor([0, 2, 3],"float32"), )
paddle.complex(real=Tensor([0, 2, 3],"float64"), imag=Tensor([0, 2, 3],"float64"), )
paddle.complex(real=Tensor([0, 2],"float32"), imag=Tensor([0, 2],"float32"), )
paddle.complex(real=Tensor([0, 2],"float64"), imag=Tensor([0, 2],"float64"), )
paddle.complex(real=Tensor([0],"float32"), imag=Tensor([0],"float32"), )
paddle.complex(real=Tensor([0],"float64"), imag=Tensor([0],"float64"), )
paddle.complex(real=Tensor([3, 0],"float32"), imag=Tensor([3, 0],"float32"), )
paddle.complex(real=Tensor([3, 0],"float64"), imag=Tensor([3, 0],"float64"), )
paddle.complex(real=Tensor([9, 0, 3],"float32"), imag=Tensor([9, 0, 3],"float32"), )
paddle.complex(real=Tensor([9, 0, 3],"float64"), imag=Tensor([9, 0, 3],"float64"), )
paddle.complex(real=Tensor([9, 2, 0],"float32"), imag=Tensor([9, 2, 0],"float32"), )
paddle.complex(real=Tensor([9, 2, 0],"float64"), imag=Tensor([9, 2, 0],"float64"), )
paddle.complex(Tensor([0, 10],"float64"), Tensor([0, 10],"float64"), )
paddle.complex(Tensor([0, 3, 4],"float32"), Tensor([0, 3, 4],"float32"), )
paddle.complex(Tensor([0, 3],"float32"), Tensor([0, 3],"float32"), )
paddle.complex(Tensor([0],"float32"), Tensor([0],"float32"), )
paddle.complex(Tensor([0],"float64"), Tensor([0],"float64"), )
paddle.complex(Tensor([10, 0],"float64"), Tensor([10, 0],"float64"), )
paddle.complex(Tensor([2, 0, 4],"float32"), Tensor([2, 0, 4],"float32"), )
paddle.complex(Tensor([2, 0],"float32"), Tensor([2, 0],"float32"), )
paddle.complex(Tensor([2, 3, 0],"float32"), Tensor([2, 3, 0],"float32"), )
paddle.cos(Tensor([0, 128, 1, 32],"float32"), )
paddle.cos(Tensor([0, 2],"float32"), )
paddle.cos(Tensor([0, 25, 1],"float32"), )
paddle.cos(Tensor([0],"float64"), )
paddle.cos(Tensor([1, 0, 1, 32],"float32"), )
paddle.cos(Tensor([1, 0, 1],"float32"), )
paddle.cos(Tensor([1, 0],"float32"), )
paddle.cos(Tensor([1, 128, 0, 32],"float32"), )
paddle.cos(Tensor([1, 128, 1, 0],"float32"), )
paddle.cos(Tensor([1, 25, 0],"float32"), )
paddle.cos(x=Tensor([0, 3, 3],"float32"), )
paddle.cos(x=Tensor([3, 0, 3],"float32"), )
paddle.cos(x=Tensor([3, 3, 0],"float32"), )
paddle.cosh(Tensor([0, 20, 1],"float32"), )
paddle.cosh(Tensor([10, 0, 1],"float32"), )
paddle.cosh(Tensor([10, 20, 0],"float32"), )
paddle.cosh(x=Tensor([0, 3, 3],"float32"), )
paddle.cosh(x=Tensor([3, 0, 3],"float32"), )
paddle.cosh(x=Tensor([3, 3, 0],"float32"), )
paddle.cross(x=Tensor([0, 3, 3],"float64"), y=Tensor([0, 3, 3],"float64"), axis=1, )
paddle.cross(x=Tensor([0, 3, 3],"float64"), y=Tensor([0, 3, 3],"float64"), axis=2, )
paddle.cross(x=Tensor([0, 3],"float32"), y=Tensor([0, 3],"float32"), )
paddle.cross(x=Tensor([0, 3],"float64"), y=Tensor([0, 3],"float64"), axis=1, )
paddle.cross(x=Tensor([0, 3],"float64"), y=Tensor([0, 3],"float64"), axis=-1, )
paddle.cross(x=Tensor([3, 0, 3],"float64"), y=Tensor([3, 0, 3],"float64"), axis=0, )
paddle.cross(x=Tensor([3, 0, 3],"float64"), y=Tensor([3, 0, 3],"float64"), axis=2, )
paddle.cross(x=Tensor([3, 0],"float32"), y=Tensor([3, 0],"float32"), )
paddle.cross(x=Tensor([3, 0],"float64"), y=Tensor([3, 0],"float64"), axis=0, )
paddle.cross(x=Tensor([3, 3, 0],"float64"), y=Tensor([3, 3, 0],"float64"), axis=0, )
paddle.cross(x=Tensor([3, 3, 0],"float64"), y=Tensor([3, 3, 0],"float64"), axis=1, )
paddle.cumsum(Tensor([0, 1],"int64"), axis=-1, )
paddle.cumsum(Tensor([0, 10],"int64"), 1, )
paddle.cumsum(Tensor([0, 2, 4],"float32"), axis=1, )
paddle.cumsum(Tensor([0, 20],"int64"), axis=1, )
paddle.cumsum(Tensor([1, 0],"float32"), axis=0, )
paddle.cumsum(Tensor([3, 0],"int64"), axis=-2, )
paddle.cumsum(Tensor([3, 2, 0],"float32"), axis=1, )
paddle.cumsum(x=Tensor([0, 16, 96, 32],"float64"), axis=2, )
paddle.cumsum(x=Tensor([0, 2, 1, 3],"float64"), axis=3, )
paddle.cumsum(x=Tensor([1, 0, 1, 3],"float64"), axis=3, )
paddle.cumsum(x=Tensor([1, 0, 1, 3],"float64"), axis=-4, )
paddle.cumsum(x=Tensor([1, 0, 96, 32],"float64"), axis=2, )
paddle.cumsum(x=Tensor([1, 16, 96, 0],"float64"), axis=2, )
paddle.cumsum(x=Tensor([1, 2, 0, 3],"float64"), axis=3, )
paddle.cumsum(x=Tensor([1, 2, 0, 3],"float64"), axis=-4, )
paddle.cumsum(x=Tensor([1, 2, 1, 0],"float64"), axis=-4, )
paddle.diag_embed(Tensor([0, 12],"float64"), )
paddle.diag_embed(Tensor([0, 3, 12],"float64"), )
paddle.diag_embed(Tensor([0],"float64"), )
paddle.diag_embed(Tensor([1, 0],"float64"), )
paddle.diag_embed(Tensor([2, 0, 12],"float64"), )
paddle.diag_embed(Tensor([2, 3, 0],"float64"), )
paddle.diagonal(Tensor([10, 3, 0],"float32"), offset=1, axis1=0, axis2=1, )
paddle.diff(Tensor([0, 4],"float32"), n=1, axis=-1, prepend=None, append=Tensor([0, 3],"float32"), )
paddle.diff(Tensor([0, 4],"float32"), n=1, axis=-1, prepend=Tensor([0, 2],"float32"), append=Tensor([0, 3],"float32"), )
paddle.diff(Tensor([0, 4],"float32"), n=1, axis=-1, prepend=Tensor([0, 3],"float32"), append=None, )
paddle.diff(Tensor([0, 4],"float32"), n=2, axis=-1, prepend=None, append=Tensor([0, 4],"float32"), )
paddle.diff(Tensor([0, 4],"float32"), n=2, axis=-1, prepend=Tensor([0, 4],"float32"), append=None, )
paddle.diff(Tensor([0, 4],"float32"), n=2, axis=-1, prepend=Tensor([0, 4],"float32"), append=Tensor([0, 4],"float32"), )
paddle.diff(Tensor([2, 0],"float32"), n=1, axis=-1, prepend=None, append=Tensor([2, 0],"float32"), )
paddle.diff(Tensor([2, 0],"float32"), n=1, axis=-1, prepend=Tensor([2, 0],"float32"), append=None, )
paddle.diff(Tensor([2, 0],"float32"), n=1, axis=-1, prepend=Tensor([2, 0],"float32"), append=Tensor([2, 0],"float32"), )
paddle.diff(Tensor([2, 0],"float32"), n=2, axis=-1, prepend=None, append=Tensor([2, 0],"float32"), )
paddle.diff(Tensor([2, 0],"float32"), n=2, axis=-1, prepend=Tensor([2, 0],"float32"), append=None, )
paddle.diff(Tensor([2, 0],"float32"), n=2, axis=-1, prepend=Tensor([2, 0],"float32"), append=Tensor([2, 0],"float32"), )
paddle.digamma(Tensor([0, 10, 10, 2],"float64"), )
paddle.digamma(Tensor([0, 2, 2],"float32"), )
paddle.digamma(Tensor([0, 2],"float32"), )
paddle.digamma(Tensor([0],"float32"), )
paddle.digamma(Tensor([1, 0, 2],"float32"), )
paddle.digamma(Tensor([1, 0],"float32"), )
paddle.digamma(Tensor([1, 2, 0],"float32"), )
paddle.digamma(Tensor([10, 0, 10, 2],"float64"), )
paddle.digamma(Tensor([10, 10, 0, 2],"float64"), )
paddle.digamma(Tensor([10, 10, 10, 0],"float64"), )
paddle.digamma(x=Tensor([0, 3],"float32"), )
paddle.digamma(x=Tensor([0, 6, 6, 6, 6],"float64"), )
paddle.digamma(x=Tensor([0, 6, 6, 6],"float64"), )
paddle.digamma(x=Tensor([0, 6, 6],"float64"), )
paddle.digamma(x=Tensor([3, 0, 6, 6, 6],"float64"), )
paddle.digamma(x=Tensor([3, 0],"float32"), )
paddle.digamma(x=Tensor([3, 6, 0, 6, 6],"float64"), )
paddle.digamma(x=Tensor([3, 6, 6, 0, 6],"float64"), )
paddle.digamma(x=Tensor([3, 6, 6, 6, 0],"float64"), )
paddle.digamma(x=Tensor([6, 0, 6, 6],"float64"), )
paddle.digamma(x=Tensor([6, 0, 6],"float64"), )
paddle.digamma(x=Tensor([6, 6, 0, 6],"float64"), )
paddle.digamma(x=Tensor([6, 6, 0],"float64"), )
paddle.digamma(x=Tensor([6, 6, 6, 0],"float64"), )
paddle.erfinv(Tensor([0],"float32"), )
paddle.erfinv(x=Tensor([0, 2, 3, 5, 4],"float64"), )
paddle.erfinv(x=Tensor([0, 2, 3, 5],"float64"), )
paddle.erfinv(x=Tensor([0, 2, 3],"float64"), )
paddle.erfinv(x=Tensor([0, 2],"float64"), )
paddle.erfinv(x=Tensor([0],"float32"), )
paddle.erfinv(x=Tensor([4, 0, 3, 5, 4],"float64"), )
paddle.erfinv(x=Tensor([4, 0, 3, 5],"float64"), )
paddle.erfinv(x=Tensor([4, 0, 3],"float64"), )
paddle.erfinv(x=Tensor([4, 0],"float64"), )
paddle.erfinv(x=Tensor([4, 2, 0, 5, 4],"float64"), )
paddle.erfinv(x=Tensor([4, 2, 0, 5],"float64"), )
paddle.erfinv(x=Tensor([4, 2, 0],"float64"), )
paddle.erfinv(x=Tensor([4, 2, 3, 0, 4],"float64"), )
paddle.erfinv(x=Tensor([4, 2, 3, 0],"float64"), )
paddle.erfinv(x=Tensor([4, 2, 3, 5, 0],"float64"), )
paddle.exp(Tensor([0, 1],"float32"), )
paddle.exp(Tensor([0, 2, 3, 4],"float32"), )
paddle.exp(Tensor([0, 2, 3],"float32"), )
paddle.exp(Tensor([0, 3, 10, 10, 1],"float32"), )
paddle.exp(Tensor([0],"complex64"), )
paddle.exp(Tensor([1, 0, 3, 4],"float32"), )
paddle.exp(Tensor([1, 0, 3],"float32"), )
paddle.exp(Tensor([1, 0],"float32"), )
paddle.exp(Tensor([1, 2, 0, 4],"float32"), )
paddle.exp(Tensor([1, 2, 0],"float32"), )
paddle.exp(Tensor([1, 2, 3, 0],"float32"), )
paddle.exp(Tensor([12, 0, 10, 10, 1],"float32"), )
paddle.exp(Tensor([12, 3, 0, 10, 1],"float32"), )
paddle.exp(Tensor([12, 3, 10, 0, 1],"float32"), )
paddle.exp(Tensor([12, 3, 10, 10, 0],"float32"), )
paddle.exp(x=Tensor([0, 3, 3],"float32"), )
paddle.exp(x=Tensor([3, 0, 3],"float32"), )
paddle.exp(x=Tensor([3, 3, 0],"float32"), )
paddle.expm1(Tensor([0, 16, 32],"complex128"), )
paddle.expm1(Tensor([0, 2],"float64"), )
paddle.expm1(Tensor([0],"float32"), )
paddle.expm1(Tensor([2, 0],"float64"), )
paddle.expm1(Tensor([8, 0, 32],"complex128"), )
paddle.expm1(Tensor([8, 16, 0],"complex128"), )
paddle.expm1(x=Tensor([0, 3, 3],"float16"), )
paddle.expm1(x=Tensor([0, 6, 6, 6, 6],"float64"), )
paddle.expm1(x=Tensor([0, 6, 6, 6],"float64"), )
paddle.expm1(x=Tensor([0, 6],"float32"), )
paddle.expm1(x=Tensor([3, 0, 3],"float16"), )
paddle.expm1(x=Tensor([3, 0, 6, 6, 6],"float64"), )
paddle.expm1(x=Tensor([3, 3, 0],"float16"), )
paddle.expm1(x=Tensor([3, 6, 0, 6, 6],"float64"), )
paddle.expm1(x=Tensor([3, 6, 6, 0, 6],"float64"), )
paddle.expm1(x=Tensor([3, 6, 6, 6, 0],"float64"), )
paddle.expm1(x=Tensor([6, 0, 6, 6],"float64"), )
paddle.expm1(x=Tensor([6, 0],"float32"), )
paddle.expm1(x=Tensor([6, 6, 0, 6],"float64"), )
paddle.expm1(x=Tensor([6, 6, 6, 0],"float64"), )
paddle.fft.fftshift(x=Tensor([0, 4, 2],"float64"), )
paddle.fft.fftshift(x=Tensor([0, 5, 4, 4],"complex128"), )
paddle.fft.fftshift(x=Tensor([0, 5, 4, 4],"complex128"), axes=3, )
paddle.fft.fftshift(x=Tensor([0, 5, 4, 4],"complex128"), axes=tuple(1,3,), )
paddle.fft.fftshift(x=Tensor([0],"float32"), )
paddle.fft.fftshift(x=Tensor([2, 0, 2],"float64"), )
paddle.fft.fftshift(x=Tensor([2, 4, 0],"float64"), )
paddle.fft.fftshift(x=Tensor([4, 0, 4, 4],"complex128"), )
paddle.fft.fftshift(x=Tensor([4, 0, 4, 4],"complex128"), axes=3, )
paddle.fft.fftshift(x=Tensor([4, 0, 4, 4],"complex128"), axes=tuple(1,3,), )
paddle.fft.fftshift(x=Tensor([4, 5, 0, 4],"complex128"), )
paddle.fft.fftshift(x=Tensor([4, 5, 0, 4],"complex128"), axes=3, )
paddle.fft.fftshift(x=Tensor([4, 5, 0, 4],"complex128"), axes=tuple(1,3,), )
paddle.fft.fftshift(x=Tensor([4, 5, 4, 0],"complex128"), )
paddle.fft.fftshift(x=Tensor([4, 5, 4, 0],"complex128"), axes=3, )
paddle.fft.fftshift(x=Tensor([4, 5, 4, 0],"complex128"), axes=tuple(1,3,), )
paddle.fft.ifftshift(x=Tensor([0, 4, 2],"float64"), )
paddle.fft.ifftshift(x=Tensor([0, 5, 4, 4],"complex128"), )
paddle.fft.ifftshift(x=Tensor([0, 5, 4, 4],"complex128"), axes=3, )
paddle.fft.ifftshift(x=Tensor([0, 5, 4, 4],"complex128"), axes=tuple(0,3,), )
paddle.fft.ifftshift(x=Tensor([0],"float32"), )
paddle.fft.ifftshift(x=Tensor([2, 0, 2],"float64"), )
paddle.fft.ifftshift(x=Tensor([2, 4, 0],"float64"), )
paddle.fft.ifftshift(x=Tensor([4, 0, 4, 4],"complex128"), )
paddle.fft.ifftshift(x=Tensor([4, 0, 4, 4],"complex128"), axes=3, )
paddle.fft.ifftshift(x=Tensor([4, 0, 4, 4],"complex128"), axes=tuple(0,3,), )
paddle.fft.ifftshift(x=Tensor([4, 5, 0, 4],"complex128"), )
paddle.fft.ifftshift(x=Tensor([4, 5, 0, 4],"complex128"), axes=3, )
paddle.fft.ifftshift(x=Tensor([4, 5, 0, 4],"complex128"), axes=tuple(0,3,), )
paddle.fft.ifftshift(x=Tensor([4, 5, 4, 0],"complex128"), )
paddle.fft.ifftshift(x=Tensor([4, 5, 4, 0],"complex128"), axes=3, )
paddle.fft.ifftshift(x=Tensor([4, 5, 4, 0],"complex128"), axes=tuple(0,3,), )
paddle.flip(Tensor([0, 2, 2],"float32"), list[0,1,], )
paddle.flip(Tensor([0, 2],"float32"), tuple(-2,-1,), )
paddle.flip(Tensor([0, 3],"float32"), list[0,], )
paddle.flip(Tensor([0, 4],"float32"), list[0,1,], )
paddle.flip(Tensor([0, 8, 224, 224],"float32"), axis=list[3,], )
paddle.flip(Tensor([0],"int32"), axis=list[0,], )
paddle.flip(Tensor([2, 0],"float32"), list[0,], )
paddle.flip(Tensor([2, 0],"float32"), tuple(-2,-1,), )
paddle.flip(Tensor([3, 0, 2],"float32"), list[0,1,], )
paddle.flip(Tensor([3, 0, 224, 224],"float32"), axis=list[3,], )
paddle.flip(Tensor([3, 2, 0],"float32"), list[0,1,], )
paddle.flip(Tensor([3, 8, 0, 224],"float32"), axis=list[3,], )
paddle.flip(Tensor([3, 8, 224, 0],"float32"), axis=list[3,], )
paddle.flip(Tensor([4, 0],"float32"), list[0,1,], )
paddle.flip(x=Tensor([0, 3, 3, 3, 3, 3],"float64"), axis=list[-1,0,3,4,2,], )
paddle.flip(x=Tensor([0, 3, 3],"bool"), axis=list[0,], )
paddle.flip(x=Tensor([0, 3, 3],"float64"), axis=list[0,1,2,], )
paddle.flip(x=Tensor([0, 3, 3],"float64"), axis=list[-1,0,1,], )
paddle.flip(x=Tensor([3, 0, 3, 3, 3, 3],"float64"), axis=list[-1,0,3,4,2,], )
paddle.flip(x=Tensor([3, 0, 3],"bool"), axis=list[0,], )
paddle.flip(x=Tensor([3, 0, 3],"float64"), axis=list[0,1,2,], )
paddle.flip(x=Tensor([3, 0, 3],"float64"), axis=list[-1,0,1,], )
paddle.flip(x=Tensor([3, 3, 0, 3, 3, 3],"float64"), axis=list[-1,0,3,4,2,], )
paddle.flip(x=Tensor([3, 3, 0],"bool"), axis=list[0,], )
paddle.flip(x=Tensor([3, 3, 0],"float64"), axis=list[0,1,2,], )
paddle.flip(x=Tensor([3, 3, 0],"float64"), axis=list[-1,0,1,], )
paddle.flip(x=Tensor([3, 3, 3, 0, 3, 3],"float64"), axis=list[-1,0,3,4,2,], )
paddle.flip(x=Tensor([3, 3, 3, 3, 0, 3],"float64"), axis=list[-1,0,3,4,2,], )
paddle.flip(x=Tensor([3, 3, 3, 3, 3, 0],"float64"), axis=list[-1,0,3,4,2,], )
paddle.floor(Tensor([0, 1, 1, 1, 1],"float32"), )
paddle.floor(Tensor([0, 1, 1, 1],"float32"), )
paddle.floor(Tensor([0, 1, 1],"float32"), )
paddle.floor(Tensor([0, 3],"float64"), )
paddle.floor(Tensor([0, 6, 3, 1, 2, 5],"float64"), )
paddle.floor(Tensor([0],"float32"), )
paddle.floor(Tensor([1, 0, 1, 1, 1],"float32"), )
paddle.floor(Tensor([1, 0, 1],"float32"), )
paddle.floor(Tensor([1, 0],"float64"), )
paddle.floor(Tensor([1, 1, 0, 1, 1],"float32"), )
paddle.floor(Tensor([1, 1, 0],"float32"), )
paddle.floor(Tensor([1, 1, 1, 0, 1],"float32"), )
paddle.floor(Tensor([1, 1, 1, 1, 0],"float32"), )
paddle.floor(Tensor([124, 0, 1, 1],"float32"), )
paddle.floor(Tensor([124, 1, 0, 1],"float32"), )
paddle.floor(Tensor([124, 1, 1, 0],"float32"), )
paddle.floor(Tensor([3, 0, 3, 1, 2, 5],"float64"), )
paddle.floor(Tensor([3, 6, 0, 1, 2, 5],"float64"), )
paddle.floor(Tensor([3, 6, 3, 0, 2, 5],"float64"), )
paddle.floor(Tensor([3, 6, 3, 1, 0, 5],"float64"), )
paddle.floor(Tensor([3, 6, 3, 1, 2, 0],"float64"), )
paddle.floor(x=Tensor([0, 3, 3],"float32"), )
paddle.floor(x=Tensor([3, 0, 3],"float32"), )
paddle.floor(x=Tensor([3, 3, 0],"float32"), )
paddle.fmax(Tensor([0, 15],"float32"), Tensor([0, 15],"float32"), )
paddle.fmax(Tensor([0, 15],"float32"), Tensor([15],"float32"), )
paddle.fmax(Tensor([0, 200, 40],"float32"), Tensor([0, 200, 40],"float32"), )
paddle.fmax(Tensor([10, 0],"float32"), Tensor([10, 0],"float32"), )
paddle.fmax(Tensor([30, 0, 40],"float32"), Tensor([30, 0, 40],"float32"), )
paddle.fmax(Tensor([30, 200, 0],"float32"), Tensor([30, 200, 0],"float32"), )
paddle.fmin(Tensor([0, 15],"float32"), Tensor([0, 15],"float32"), )
paddle.fmin(Tensor([0, 15],"float32"), Tensor([15],"float32"), )
paddle.fmin(Tensor([0, 200, 40],"float32"), Tensor([0, 200, 40],"float32"), )
paddle.fmin(Tensor([10, 0],"float32"), Tensor([10, 0],"float32"), )
paddle.fmin(Tensor([30, 0, 40],"float32"), Tensor([30, 0, 40],"float32"), )
paddle.fmin(Tensor([30, 200, 0],"float32"), Tensor([30, 200, 0],"float32"), )
paddle.frac(Tensor([0, 20, 1],"float32"), )
paddle.frac(Tensor([0, 3],"float32"), )
paddle.frac(Tensor([10, 0, 1],"float32"), )
paddle.frac(Tensor([10, 20, 0],"float32"), )
paddle.frac(Tensor([2, 0],"float32"), )
paddle.gcd(Tensor([0, 20],"int32"), Tensor([0, 20],"int32"), )
paddle.gcd(Tensor([0],"int64"), Tensor([0],"int64"), )
paddle.gcd(Tensor([0],"int64"), Tensor([1],"int64"), )
paddle.gcd(Tensor([1],"int64"), Tensor([0],"int64"), )
paddle.gcd(Tensor([10, 0],"int32"), Tensor([10, 0],"int32"), )
paddle.gcd(x=Tensor([0, 1, 4, 5],"int32"), y=Tensor([2, 1, 5],"int32"), )
paddle.gcd(x=Tensor([0, 2, 4, 5],"int32"), y=Tensor([0, 2, 4, 5],"int32"), )
paddle.gcd(x=Tensor([0, 4, 5],"int32"), y=Tensor([0, 4, 5],"int32"), )
paddle.gcd(x=Tensor([0, 5],"int32"), y=Tensor([0, 5],"int32"), )
paddle.gcd(x=Tensor([0],"int32"), y=Tensor([0],"int32"), )
paddle.gcd(x=Tensor([0],"int32"), y=Tensor([1],"int32"), )
paddle.gcd(x=Tensor([1],"int32"), y=Tensor([0],"int32"), )
paddle.gcd(x=Tensor([2, 0, 5],"int32"), y=Tensor([2, 0, 5],"int32"), )
paddle.gcd(x=Tensor([2, 4, 0],"int32"), y=Tensor([2, 4, 0],"int32"), )
paddle.gcd(x=Tensor([4, 0],"int32"), y=Tensor([4, 0],"int32"), )
paddle.gcd(x=Tensor([6, 0, 4, 5],"int32"), y=Tensor([6, 0, 4, 5],"int32"), )
paddle.gcd(x=Tensor([6, 1, 0, 5],"int32"), y=Tensor([2, 1, 5],"int32"), )
paddle.gcd(x=Tensor([6, 1, 4, 5],"int32"), y=Tensor([0, 1, 5],"int32"), )
paddle.gcd(x=Tensor([6, 2, 0, 5],"int32"), y=Tensor([6, 2, 0, 5],"int32"), )
paddle.gcd(x=Tensor([6, 2, 4, 0],"int32"), y=Tensor([6, 2, 4, 0],"int32"), )
paddle.hypot(Tensor([0, 10],"float32"), Tensor([0, 1],"float32"), )
paddle.hypot(Tensor([0],"float32"), Tensor([0],"float32"), )
paddle.hypot(Tensor([0],"float32"), Tensor([1],"float32"), )
paddle.hypot(Tensor([1],"float32"), Tensor([0],"float32"), )
paddle.hypot(Tensor([10, 0],"float32"), Tensor([10, 0],"float32"), )
paddle.hypot(Tensor([10, 0],"float32"), Tensor([10, 1],"float32"), )
paddle.i0(Tensor([0, 20, 1],"float32"), )
paddle.i0(Tensor([0],"float32"), )
paddle.i0(Tensor([10, 0, 1],"float32"), )
paddle.i0(Tensor([10, 20, 0],"float32"), )
paddle.i0e(Tensor([0],"float32"), )
paddle.i1(Tensor([0],"float64"), )
paddle.i1e(Tensor([0],"float64"), )
paddle.imag(Tensor([0, 10, 10, 20],"complex128"), )
paddle.imag(Tensor([0, 3],"complex128"), )
paddle.imag(Tensor([10, 0, 10, 20],"complex128"), )
paddle.imag(Tensor([10, 10, 0, 20],"complex128"), )
paddle.imag(Tensor([10, 10, 10, 0],"complex128"), )
paddle.imag(Tensor([2, 0],"complex128"), )
paddle.imag(x=Tensor([0, 10],"complex64"), )
paddle.imag(x=Tensor([1, 0],"complex64"), )
paddle.isclose(Tensor([0, 10],"float64"), Tensor([0, 10],"float64"), rtol=1e-05, atol=1e-08, )
paddle.isclose(Tensor([10, 0],"float64"), Tensor([10, 0],"float64"), rtol=1e-05, atol=1e-08, )
paddle.isclose(x=Tensor([0, 4, 5],"float64"), y=Tensor([0, 4, 5],"float64"), )
paddle.isclose(x=Tensor([0],"float32"), y=Tensor([0],"float32"), )
paddle.isclose(x=Tensor([0],"float64"), y=Tensor([0],"float64"), )
paddle.isclose(x=Tensor([3, 0, 5],"float64"), y=Tensor([3, 0, 5],"float64"), )
paddle.isclose(x=Tensor([3, 4, 0],"float64"), y=Tensor([3, 4, 0],"float64"), )
paddle.isfinite(Tensor([0, 17, 10],"int32"), )
paddle.isfinite(Tensor([0, 17, 5, 6, 7],"float16"), )
paddle.isfinite(Tensor([0, 17],"float32"), )
paddle.isfinite(Tensor([0, 280, 376, 25, 3],"float32"), )
paddle.isfinite(Tensor([0, 3, 4, 5],"float64"), )
paddle.isfinite(Tensor([0, 94, 311],"float32"), )
paddle.isfinite(Tensor([0],"int64"), )
paddle.isfinite(Tensor([11, 0, 10],"int32"), )
paddle.isfinite(Tensor([11, 0],"float32"), )
paddle.isfinite(Tensor([11, 17, 0],"int32"), )
paddle.isfinite(Tensor([2, 0, 4, 5],"float64"), )
paddle.isfinite(Tensor([2, 3, 0, 5],"float64"), )
paddle.isfinite(Tensor([2, 3, 4, 0],"float64"), )
paddle.isfinite(Tensor([4, 0, 311],"float32"), )
paddle.isfinite(Tensor([4, 0, 376, 25, 3],"float32"), )
paddle.isfinite(Tensor([4, 280, 0, 25, 3],"float32"), )
paddle.isfinite(Tensor([4, 280, 376, 0, 3],"float32"), )
paddle.isfinite(Tensor([4, 280, 376, 25, 0],"float32"), )
paddle.isfinite(Tensor([4, 94, 0],"float32"), )
paddle.isfinite(Tensor([8, 0, 5, 6, 7],"float16"), )
paddle.isfinite(Tensor([8, 17, 0, 6, 7],"float16"), )
paddle.isfinite(Tensor([8, 17, 5, 0, 7],"float16"), )
paddle.isfinite(Tensor([8, 17, 5, 6, 0],"float16"), )
paddle.isfinite(x=Tensor([0],"float64"), )
paddle.isin(Tensor([0, 8],"float16"), Tensor([0, 3],"float16"), False, False, )
paddle.isin(Tensor([0, 8],"float16"), Tensor([0, 3],"float16"), False, True, )
paddle.isin(Tensor([0, 8],"float16"), Tensor([2, 3],"float16"), False, False, )
paddle.isin(Tensor([0, 8],"float16"), Tensor([2, 3],"float16"), False, True, )
paddle.isin(Tensor([0, 8],"float32"), Tensor([0, 3],"float32"), False, False, )
paddle.isin(Tensor([0, 8],"float32"), Tensor([0, 3],"float32"), False, True, )
paddle.isin(Tensor([0, 8],"float32"), Tensor([2, 3],"float32"), False, False, )
paddle.isin(Tensor([0, 8],"float32"), Tensor([2, 3],"float32"), False, True, )
paddle.isin(Tensor([4, 0],"float16"), Tensor([2, 0],"float16"), False, False, )
paddle.isin(Tensor([4, 0],"float16"), Tensor([2, 0],"float16"), False, True, )
paddle.isin(Tensor([4, 0],"float16"), Tensor([2, 3],"float16"), False, False, )
paddle.isin(Tensor([4, 0],"float16"), Tensor([2, 3],"float16"), False, True, )
paddle.isin(Tensor([4, 0],"float32"), Tensor([2, 0],"float32"), False, False, )
paddle.isin(Tensor([4, 0],"float32"), Tensor([2, 0],"float32"), False, True, )
paddle.isin(Tensor([4, 0],"float32"), Tensor([2, 3],"float32"), False, False, )
paddle.isin(Tensor([4, 0],"float32"), Tensor([2, 3],"float32"), False, True, )
paddle.isinf(Tensor([0, 12],"float32"), )
paddle.isinf(Tensor([0, 12],"float64"), )
paddle.isinf(Tensor([0, 17, 10],"int16"), )
paddle.isinf(Tensor([0, 17, 10],"int32"), )
paddle.isinf(Tensor([0, 17, 5, 6, 7],"float16"), )
paddle.isinf(Tensor([0, 3, 4, 5],"float64"), )
paddle.isinf(Tensor([0, 3, 4, 5],"int8"), )
paddle.isinf(Tensor([0],"int64"), )
paddle.isinf(Tensor([0],"uint8"), )
paddle.isinf(Tensor([10, 0],"float32"), )
paddle.isinf(Tensor([10, 0],"float64"), )
paddle.isinf(Tensor([11, 0, 10],"int16"), )
paddle.isinf(Tensor([11, 0, 10],"int32"), )
paddle.isinf(Tensor([11, 17, 0],"int16"), )
paddle.isinf(Tensor([11, 17, 0],"int32"), )
paddle.isinf(Tensor([2, 0, 4, 5],"float64"), )
paddle.isinf(Tensor([2, 0, 4, 5],"int8"), )
paddle.isinf(Tensor([2, 3, 0, 5],"float64"), )
paddle.isinf(Tensor([2, 3, 0, 5],"int8"), )
paddle.isinf(Tensor([2, 3, 4, 0],"float64"), )
paddle.isinf(Tensor([2, 3, 4, 0],"int8"), )
paddle.isinf(Tensor([8, 0, 5, 6, 7],"float16"), )
paddle.isinf(Tensor([8, 17, 0, 6, 7],"float16"), )
paddle.isinf(Tensor([8, 17, 5, 0, 7],"float16"), )
paddle.isinf(Tensor([8, 17, 5, 6, 0],"float16"), )
paddle.isinf(x=Tensor([0],"float64"), )
paddle.isnan(Tensor([0, 17, 10],"int32"), )
paddle.isnan(Tensor([0, 17, 5, 6, 7],"float16"), )
paddle.isnan(Tensor([0, 17],"float32"), )
paddle.isnan(Tensor([0, 3, 4, 5],"float32"), )
paddle.isnan(Tensor([0, 3, 4, 5],"float64"), )
paddle.isnan(Tensor([0, 512],"float16"), )
paddle.isnan(Tensor([0, 64, 16],"float32"), )
paddle.isnan(Tensor([0],"float16"), )
paddle.isnan(Tensor([0],"float32"), )
paddle.isnan(Tensor([1024, 0],"float16"), )
paddle.isnan(Tensor([11, 0, 10],"int32"), )
paddle.isnan(Tensor([11, 0],"float32"), )
paddle.isnan(Tensor([11, 17, 0],"int32"), )
paddle.isnan(Tensor([14, 0, 16],"float32"), )
paddle.isnan(Tensor([14, 64, 0],"float32"), )
paddle.isnan(Tensor([2, 0, 4, 5],"float32"), )
paddle.isnan(Tensor([2, 0, 4, 5],"float64"), )
paddle.isnan(Tensor([2, 3, 0, 5],"float32"), )
paddle.isnan(Tensor([2, 3, 0, 5],"float64"), )
paddle.isnan(Tensor([2, 3, 4, 0],"float32"), )
paddle.isnan(Tensor([2, 3, 4, 0],"float64"), )
paddle.isnan(Tensor([8, 0, 5, 6, 7],"float16"), )
paddle.isnan(Tensor([8, 17, 0, 6, 7],"float16"), )
paddle.isnan(Tensor([8, 17, 5, 0, 7],"float16"), )
paddle.isnan(Tensor([8, 17, 5, 6, 0],"float16"), )
paddle.isnan(x=Tensor([0],"float64"), )
paddle.isneginf(Tensor([0, 17, 10],"int16"), )
paddle.isneginf(Tensor([0, 17, 10],"int32"), )
paddle.isneginf(Tensor([0, 17, 5, 6, 7],"float16"), )
paddle.isneginf(Tensor([0, 17],"float32"), )
paddle.isneginf(Tensor([0, 3, 4, 5],"float64"), )
paddle.isneginf(Tensor([0, 3, 4, 5],"int8"), )
paddle.isneginf(Tensor([0],"int64"), )
paddle.isneginf(Tensor([0],"uint8"), )
paddle.isneginf(Tensor([11, 0, 10],"int16"), )
paddle.isneginf(Tensor([11, 0, 10],"int32"), )
paddle.isneginf(Tensor([11, 0],"float32"), )
paddle.isneginf(Tensor([11, 17, 0],"int16"), )
paddle.isneginf(Tensor([11, 17, 0],"int32"), )
paddle.isneginf(Tensor([2, 0, 4, 5],"float64"), )
paddle.isneginf(Tensor([2, 0, 4, 5],"int8"), )
paddle.isneginf(Tensor([2, 3, 0, 5],"float64"), )
paddle.isneginf(Tensor([2, 3, 0, 5],"int8"), )
paddle.isneginf(Tensor([2, 3, 4, 0],"float64"), )
paddle.isneginf(Tensor([2, 3, 4, 0],"int8"), )
paddle.isneginf(Tensor([8, 0, 5, 6, 7],"float16"), )
paddle.isneginf(Tensor([8, 17, 0, 6, 7],"float16"), )
paddle.isneginf(Tensor([8, 17, 5, 0, 7],"float16"), )
paddle.isneginf(Tensor([8, 17, 5, 6, 0],"float16"), )
paddle.isposinf(Tensor([0, 17, 10],"int16"), )
paddle.isposinf(Tensor([0, 17, 10],"int32"), )
paddle.isposinf(Tensor([0, 17, 5, 6, 7],"float16"), )
paddle.isposinf(Tensor([0, 17],"float32"), )
paddle.isposinf(Tensor([0, 3, 4, 5],"float64"), )
paddle.isposinf(Tensor([0, 3, 4, 5],"int8"), )
paddle.isposinf(Tensor([0],"int64"), )
paddle.isposinf(Tensor([0],"uint8"), )
paddle.isposinf(Tensor([11, 0, 10],"int16"), )
paddle.isposinf(Tensor([11, 0, 10],"int32"), )
paddle.isposinf(Tensor([11, 0],"float32"), )
paddle.isposinf(Tensor([11, 17, 0],"int16"), )
paddle.isposinf(Tensor([11, 17, 0],"int32"), )
paddle.isposinf(Tensor([2, 0, 4, 5],"float64"), )
paddle.isposinf(Tensor([2, 0, 4, 5],"int8"), )
paddle.isposinf(Tensor([2, 3, 0, 5],"float64"), )
paddle.isposinf(Tensor([2, 3, 0, 5],"int8"), )
paddle.isposinf(Tensor([2, 3, 4, 0],"float64"), )
paddle.isposinf(Tensor([2, 3, 4, 0],"int8"), )
paddle.isposinf(Tensor([8, 0, 5, 6, 7],"float16"), )
paddle.isposinf(Tensor([8, 17, 0, 6, 7],"float16"), )
paddle.isposinf(Tensor([8, 17, 5, 0, 7],"float16"), )
paddle.isposinf(Tensor([8, 17, 5, 6, 0],"float16"), )
paddle.kron(Tensor([0, 10],"float32"), Tensor([5, 5, 4, 3, 2],"float32"), )
paddle.kron(Tensor([0, 10],"float32"), Tensor([5, 5, 4],"float32"), )
paddle.kron(Tensor([0, 10],"float64"), Tensor([0, 10],"float64"), )
paddle.kron(Tensor([0, 10],"float64"), Tensor([10, 10],"float64"), )
paddle.kron(Tensor([0, 2],"complex128"), Tensor([2, 2, 3],"float64"), )
paddle.kron(Tensor([0, 5, 4, 3, 5, 6],"float32"), Tensor([3, 5, 4],"float32"), )
paddle.kron(Tensor([0, 8],"float16"), Tensor([0, 8],"float16"), )
paddle.kron(Tensor([0, 8],"float16"), Tensor([16, 8],"float16"), )
paddle.kron(Tensor([10, 0],"float32"), Tensor([5, 5, 4, 3, 2],"float32"), )
paddle.kron(Tensor([10, 0],"float32"), Tensor([5, 5, 4],"float32"), )
paddle.kron(Tensor([10, 0],"float64"), Tensor([10, 0],"float64"), )
paddle.kron(Tensor([10, 0],"float64"), Tensor([10, 10],"float64"), )
paddle.kron(Tensor([10, 10],"float32"), Tensor([0, 5, 4, 3, 2],"float32"), )
paddle.kron(Tensor([10, 10],"float32"), Tensor([0, 5, 4],"float32"), )
paddle.kron(Tensor([10, 10],"float32"), Tensor([5, 0, 4, 3, 2],"float32"), )
paddle.kron(Tensor([10, 10],"float32"), Tensor([5, 0, 4],"float32"), )
paddle.kron(Tensor([10, 10],"float32"), Tensor([5, 5, 0, 3, 2],"float32"), )
paddle.kron(Tensor([10, 10],"float32"), Tensor([5, 5, 0],"float32"), )
paddle.kron(Tensor([10, 10],"float32"), Tensor([5, 5, 4, 0, 2],"float32"), )
paddle.kron(Tensor([10, 10],"float32"), Tensor([5, 5, 4, 3, 0],"float32"), )
paddle.kron(Tensor([10, 10],"float64"), Tensor([0, 10],"float64"), )
paddle.kron(Tensor([10, 10],"float64"), Tensor([10, 0],"float64"), )
paddle.kron(Tensor([12, 0],"float16"), Tensor([16, 0],"float16"), )
paddle.kron(Tensor([12, 0],"float16"), Tensor([16, 8],"float16"), )
paddle.kron(Tensor([12, 8],"float16"), Tensor([0, 8],"float16"), )
paddle.kron(Tensor([12, 8],"float16"), Tensor([16, 0],"float16"), )
paddle.kron(Tensor([2, 0],"complex128"), Tensor([2, 2, 3],"float64"), )
paddle.kron(Tensor([5, 0, 4, 3, 5, 6],"float32"), Tensor([3, 5, 4],"float32"), )
paddle.kron(Tensor([5, 5, 0, 3, 5, 6],"float32"), Tensor([3, 5, 4],"float32"), )
paddle.kron(Tensor([5, 5, 4, 0, 5, 6],"float32"), Tensor([3, 5, 4],"float32"), )
paddle.kron(Tensor([5, 5, 4, 3, 0, 6],"float32"), Tensor([3, 5, 4],"float32"), )
paddle.kron(Tensor([5, 5, 4, 3, 5, 0],"float32"), Tensor([3, 5, 4],"float32"), )
paddle.kron(Tensor([5, 5, 4, 3, 5, 6],"float32"), Tensor([0, 5, 4],"float32"), )
paddle.kron(Tensor([5, 5, 4, 3, 5, 6],"float32"), Tensor([3, 0, 4],"float32"), )
paddle.kron(Tensor([5, 5, 4, 3, 5, 6],"float32"), Tensor([3, 5, 0],"float32"), )
paddle.kron(x=Tensor([0, 2],"float64"), y=Tensor([0, 3],"float64"), )
paddle.kron(x=Tensor([0, 2],"float64"), y=Tensor([3, 3, 2],"float64"), )
paddle.kron(x=Tensor([0, 2],"float64"), y=Tensor([3, 3],"float64"), )
paddle.kron(x=Tensor([0, 3],"float32"), y=Tensor([0, 3],"float32"), )
paddle.kron(x=Tensor([0, 3],"float32"), y=Tensor([3, 3],"float32"), )
paddle.kron(x=Tensor([0],"float64"), y=Tensor([3, 3],"float64"), )
paddle.kron(x=Tensor([1],"float64"), y=Tensor([0, 3],"float64"), )
paddle.kron(x=Tensor([1],"float64"), y=Tensor([3, 0],"float64"), )
paddle.kron(x=Tensor([2, 0],"float32"), y=Tensor([3, 0],"float32"), )
paddle.kron(x=Tensor([2, 0],"float32"), y=Tensor([3, 3],"float32"), )
paddle.kron(x=Tensor([2, 0],"float64"), y=Tensor([3, 0],"float64"), )
paddle.kron(x=Tensor([2, 0],"float64"), y=Tensor([3, 3, 2],"float64"), )
paddle.kron(x=Tensor([2, 0],"float64"), y=Tensor([3, 3],"float64"), )
paddle.kron(x=Tensor([2, 2],"float64"), y=Tensor([0, 3, 2],"float64"), )
paddle.kron(x=Tensor([2, 2],"float64"), y=Tensor([0, 3],"float64"), )
paddle.kron(x=Tensor([2, 2],"float64"), y=Tensor([3, 0, 2],"float64"), )
paddle.kron(x=Tensor([2, 2],"float64"), y=Tensor([3, 0],"float64"), )
paddle.kron(x=Tensor([2, 2],"float64"), y=Tensor([3, 3, 0],"float64"), )
paddle.kron(x=Tensor([2, 3],"float32"), y=Tensor([0, 3],"float32"), )
paddle.kron(x=Tensor([2, 3],"float32"), y=Tensor([3, 0],"float32"), )
paddle.lerp(Tensor([1, 3, 3],"float32"), Tensor([1, 3, 3],"float32"), Tensor([0, 3, 3],"float32"), )
paddle.lerp(Tensor([1, 3, 3],"float64"), Tensor([1, 3, 3],"float64"), Tensor([0, 3, 3],"float64"), )
paddle.lerp(Tensor([1, 3],"float64"), Tensor([1, 3],"float64"), Tensor([0, 3],"float64"), )
paddle.lerp(Tensor([1],"float32"), Tensor([1],"float32"), Tensor([0],"float32"), )
paddle.lerp(Tensor([1],"float64"), Tensor([1],"float64"), Tensor([0],"float64"), )
paddle.lerp(Tensor([2, 1],"float32"), Tensor([2, 1],"float32"), Tensor([2, 0],"float32"), )
paddle.lerp(Tensor([2, 5],"float32"), Tensor([2, 2, 5],"float32"), Tensor([0, 2, 2, 5],"float32"), )
paddle.lerp(Tensor([3, 6, 3, 1, 2, 5],"float64"), Tensor([3, 6, 3, 1, 2, 5],"float64"), Tensor([3, 6, 3, 0, 2, 5],"float64"), )
paddle.lerp(Tensor([3, 6, 3, 4, 1, 5],"float64"), Tensor([3, 6, 3, 4, 1, 5],"float64"), Tensor([3, 6, 3, 4, 0, 5],"float64"), )
paddle.lgamma(Tensor([0, 1, 1, 1],"float32"), )
paddle.lgamma(Tensor([0, 1, 1],"float32"), )
paddle.lgamma(Tensor([0, 1],"float32"), )
paddle.lgamma(Tensor([0, 10, 10, 2],"float64"), )
paddle.lgamma(Tensor([0, 2, 2],"float32"), )
paddle.lgamma(Tensor([0, 2],"float32"), )
paddle.lgamma(Tensor([0],"float32"), )
paddle.lgamma(Tensor([0],"float64"), )
paddle.lgamma(Tensor([1, 0, 2],"float32"), )
paddle.lgamma(Tensor([1, 0],"float32"), )
paddle.lgamma(Tensor([1, 2, 0],"float32"), )
paddle.lgamma(Tensor([10, 0, 1, 1],"float32"), )
paddle.lgamma(Tensor([10, 0, 1],"float32"), )
paddle.lgamma(Tensor([10, 0, 10, 2],"float64"), )
paddle.lgamma(Tensor([10, 1, 0, 1],"float32"), )
paddle.lgamma(Tensor([10, 1, 0],"float32"), )
paddle.lgamma(Tensor([10, 1, 1, 0],"float32"), )
paddle.lgamma(Tensor([10, 10, 0, 2],"float64"), )
paddle.lgamma(Tensor([10, 10, 10, 0],"float64"), )
paddle.lgamma(x=Tensor([0, 3],"float32"), )
paddle.lgamma(x=Tensor([0, 3],"float64"), )
paddle.lgamma(x=Tensor([0, 6, 6],"float64"), )
paddle.lgamma(x=Tensor([3, 0],"float32"), )
paddle.lgamma(x=Tensor([3, 0],"float64"), )
paddle.lgamma(x=Tensor([6, 0, 6],"float64"), )
paddle.lgamma(x=Tensor([6, 6, 0],"float64"), )
paddle.linalg.det(Tensor([0, 1, 4, 3, 6, 6],"complex64"), )
paddle.linalg.det(Tensor([0, 3, 5, 5],"complex128"), )
paddle.linalg.det(Tensor([2, 0, 4, 3, 6, 6],"complex64"), )
paddle.linalg.det(Tensor([2, 1, 0, 3, 6, 6],"complex64"), )
paddle.linalg.det(Tensor([2, 1, 4, 0, 6, 6],"complex64"), )
paddle.linalg.det(Tensor([3, 0, 5, 5],"complex128"), )
paddle.linalg.lstsq(Tensor([0, 2, 8],"float32"), Tensor([0, 2, 15],"float32"), rcond=None, driver="gels", )
paddle.linalg.lstsq(Tensor([10, 5],"float32"), Tensor([10, 0],"float32"), rcond=None, driver="gels", )
paddle.linalg.matrix_norm(x=Tensor([2, 3, 0],"float64"), p="nuc", axis=list[0,1,], keepdim=False, )
paddle.linalg.matrix_norm(x=Tensor([2, 3, 0],"float64"), p="nuc", axis=list[0,1,], keepdim=True, )
paddle.linalg.vector_norm(x=Tensor([0, 14, 5, 14],"complex128"), p=0, axis=list[1,3,], keepdim=False, )
paddle.linalg.vector_norm(x=Tensor([0, 14, 5, 14],"complex128"), p=0, axis=list[1,3,], keepdim=True, )
paddle.linalg.vector_norm(x=Tensor([0, 14, 5, 14],"complex128"), p=math.inf, axis=2, keepdim=False, )
paddle.linalg.vector_norm(x=Tensor([0, 14, 5, 14],"complex128"), p=math.inf, axis=2, keepdim=True, )
paddle.linalg.vector_norm(x=Tensor([0, 3, 4, 5],"float64"), p=1, axis=list[0,1,], keepdim=False, )
paddle.linalg.vector_norm(x=Tensor([0, 3, 4, 5],"float64"), p=1, axis=list[0,1,], keepdim=True, )
paddle.linalg.vector_norm(x=Tensor([0, 3, 4],"float64"), p=2, axis=list[0,1,], keepdim=False, )
paddle.linalg.vector_norm(x=Tensor([0, 3, 4],"float64"), p=2, axis=list[0,1,], keepdim=True, )
paddle.linalg.vector_norm(x=Tensor([1, 0, 5, 14],"complex128"), p=0, axis=list[1,3,], keepdim=False, )
paddle.linalg.vector_norm(x=Tensor([1, 0, 5, 14],"complex128"), p=0, axis=list[1,3,], keepdim=True, )
paddle.linalg.vector_norm(x=Tensor([1, 0, 5, 14],"complex128"), p=math.inf, axis=2, keepdim=False, )
paddle.linalg.vector_norm(x=Tensor([1, 0, 5, 14],"complex128"), p=math.inf, axis=2, keepdim=True, )
paddle.linalg.vector_norm(x=Tensor([1, 14, 0, 14],"complex128"), p=0, axis=list[1,3,], keepdim=False, )
paddle.linalg.vector_norm(x=Tensor([1, 14, 0, 14],"complex128"), p=0, axis=list[1,3,], keepdim=True, )
paddle.linalg.vector_norm(x=Tensor([1, 14, 5, 0],"complex128"), p=0, axis=list[1,3,], keepdim=False, )
paddle.linalg.vector_norm(x=Tensor([1, 14, 5, 0],"complex128"), p=0, axis=list[1,3,], keepdim=True, )
paddle.linalg.vector_norm(x=Tensor([1, 14, 5, 0],"complex128"), p=math.inf, axis=2, keepdim=False, )
paddle.linalg.vector_norm(x=Tensor([1, 14, 5, 0],"complex128"), p=math.inf, axis=2, keepdim=True, )
paddle.linalg.vector_norm(x=Tensor([2, 0, 4, 5],"float64"), p=1, axis=list[0,1,], keepdim=False, )
paddle.linalg.vector_norm(x=Tensor([2, 0, 4, 5],"float64"), p=1, axis=list[0,1,], keepdim=True, )
paddle.linalg.vector_norm(x=Tensor([2, 0, 4],"float64"), p=2, axis=list[0,1,], keepdim=False, )
paddle.linalg.vector_norm(x=Tensor([2, 0, 4],"float64"), p=2, axis=list[0,1,], keepdim=True, )
paddle.linalg.vector_norm(x=Tensor([2, 3, 0, 5],"float64"), p=1, axis=list[0,1,], keepdim=False, )
paddle.linalg.vector_norm(x=Tensor([2, 3, 0, 5],"float64"), p=1, axis=list[0,1,], keepdim=True, )
paddle.linalg.vector_norm(x=Tensor([2, 3, 0],"float64"), p=2, axis=list[0,1,], keepdim=False, )
paddle.linalg.vector_norm(x=Tensor([2, 3, 0],"float64"), p=2, axis=list[0,1,], keepdim=True, )
paddle.linalg.vector_norm(x=Tensor([2, 3, 4, 0],"float64"), p=1, axis=list[0,1,], keepdim=False, )
paddle.linalg.vector_norm(x=Tensor([2, 3, 4, 0],"float64"), p=1, axis=list[0,1,], keepdim=True, )
paddle.log(Tensor([0, 1],"float32"), )
paddle.log(Tensor([0, 100, 4],"float32"), )
paddle.log(Tensor([0, 10164, 4],"float32"), )
paddle.log(Tensor([0, 16],"float32"), )
paddle.log(Tensor([0, 2, 3],"float32"), name="Categorical_log_prob", )
paddle.log(Tensor([0, 2, 300, 2],"float16"), )
paddle.log(Tensor([0, 2, 300, 2],"float32"), )
paddle.log(Tensor([0, 2],"float32"), name="Categorical_log_prob", )
paddle.log(Tensor([0, 3],"float32"), name="Categorical_log_prob", )
paddle.log(Tensor([0, 6],"float32"), name="Uniform_entropy", )
paddle.log(Tensor([0, 6],"float64"), name="Uniform_entropy", )
paddle.log(Tensor([0],"float32"), )
paddle.log(Tensor([0],"float32"), name="Categorical_log_prob", )
paddle.log(Tensor([0],"float64"), )
paddle.log(Tensor([1, 0, 300, 2],"float16"), )
paddle.log(Tensor([1, 0, 300, 2],"float32"), )
paddle.log(Tensor([1, 0, 4],"float32"), )
paddle.log(Tensor([1, 0],"float32"), )
paddle.log(Tensor([1, 100, 0],"float32"), )
paddle.log(Tensor([1, 10164, 0],"float32"), )
paddle.log(Tensor([1, 2, 0, 2],"float16"), )
paddle.log(Tensor([1, 2, 0, 2],"float32"), )
paddle.log(Tensor([1, 2, 300, 0],"float16"), )
paddle.log(Tensor([1, 2, 300, 0],"float32"), )
paddle.log(Tensor([3, 0, 3],"float32"), name="Categorical_log_prob", )
paddle.log(Tensor([3, 0],"float32"), name="Categorical_log_prob", )
paddle.log(Tensor([3, 2, 0],"float32"), name="Categorical_log_prob", )
paddle.log(Tensor([5, 0],"float32"), name="Uniform_entropy", )
paddle.log(Tensor([5, 0],"float64"), name="Uniform_entropy", )
paddle.log(x=Tensor([0, 2, 3],"float64"), )
paddle.log(x=Tensor([0, 2, 3],"float64"), name="test_log", )
paddle.log(x=Tensor([0, 2],"float32"), )
paddle.log(x=Tensor([0, 2],"float64"), )
paddle.log(x=Tensor([0],"float64"), )
paddle.log(x=Tensor([2, 0, 3],"float64"), )
paddle.log(x=Tensor([2, 0, 3],"float64"), name="test_log", )
paddle.log(x=Tensor([2, 0],"float32"), )
paddle.log(x=Tensor([2, 0],"float64"), )
paddle.log(x=Tensor([2, 2, 0],"float64"), )
paddle.log(x=Tensor([2, 2, 0],"float64"), name="test_log", )
paddle.log10(Tensor([0, 20, 1],"float32"), )
paddle.log10(Tensor([10, 0, 1],"float32"), )
paddle.log10(Tensor([10, 20, 0],"float32"), )
paddle.log10(x=Tensor([0, 2],"float32"), )
paddle.log10(x=Tensor([0, 2],"float64"), )
paddle.log10(x=Tensor([0, 3, 2, 2],"float64"), )
paddle.log10(x=Tensor([0],"float64"), )
paddle.log10(x=Tensor([1, 0],"float32"), )
paddle.log10(x=Tensor([1, 0],"float64"), )
paddle.log10(x=Tensor([2, 0, 2, 2],"float64"), )
paddle.log10(x=Tensor([2, 3, 0, 2],"float64"), )
paddle.log10(x=Tensor([2, 3, 2, 0],"float64"), )
paddle.log1p(Tensor([0, 12],"float64"), )
paddle.log1p(Tensor([0, 2, 3, 4],"float32"), )
paddle.log1p(Tensor([0, 2, 3, 4],"float64"), )
paddle.log1p(Tensor([0, 20, 1],"float32"), )
paddle.log1p(Tensor([0, 20],"float64"), )
paddle.log1p(Tensor([0, 200, 300],"float32"), )
paddle.log1p(Tensor([0],"float32"), )
paddle.log1p(Tensor([0],"float64"), )
paddle.log1p(Tensor([1, 0, 3, 4],"float32"), )
paddle.log1p(Tensor([1, 0, 3, 4],"float64"), )
paddle.log1p(Tensor([1, 2, 0, 4],"float32"), )
paddle.log1p(Tensor([1, 2, 0, 4],"float64"), )
paddle.log1p(Tensor([1, 2, 3, 0],"float32"), )
paddle.log1p(Tensor([1, 2, 3, 0],"float64"), )
paddle.log1p(Tensor([10, 0, 1],"float32"), )
paddle.log1p(Tensor([10, 0, 300],"float32"), )
paddle.log1p(Tensor([10, 0],"float64"), )
paddle.log1p(Tensor([10, 20, 0],"float32"), )
paddle.log1p(Tensor([10, 200, 0],"float32"), )
paddle.log1p(x=Tensor([0, 2],"float32"), )
paddle.log1p(x=Tensor([0, 2],"float64"), )
paddle.log1p(x=Tensor([0, 3, 2, 2],"float64"), )
paddle.log1p(x=Tensor([0],"float64"), )
paddle.log1p(x=Tensor([1, 0],"float32"), )
paddle.log1p(x=Tensor([1, 0],"float64"), )
paddle.log1p(x=Tensor([2, 0, 2, 2],"float64"), )
paddle.log1p(x=Tensor([2, 3, 0, 2],"float64"), )
paddle.log1p(x=Tensor([2, 3, 2, 0],"float64"), )
paddle.log2(Tensor([0, 12],"float32"), )
paddle.log2(Tensor([0, 12],"float64"), )
paddle.log2(Tensor([0, 20, 1],"float32"), )
paddle.log2(Tensor([0, 5, 2],"float32"), )
paddle.log2(Tensor([10, 0, 1],"float32"), )
paddle.log2(Tensor([10, 0],"float32"), )
paddle.log2(Tensor([10, 0],"float64"), )
paddle.log2(Tensor([10, 20, 0],"float32"), )
paddle.log2(Tensor([4, 0, 2],"float32"), )
paddle.log2(Tensor([4, 5, 0],"float32"), )
paddle.log2(x=Tensor([0, 2],"float32"), )
paddle.log2(x=Tensor([0, 2],"float64"), )
paddle.log2(x=Tensor([0, 3, 2, 2],"float64"), )
paddle.log2(x=Tensor([0],"float64"), )
paddle.log2(x=Tensor([1, 0],"float32"), )
paddle.log2(x=Tensor([1, 0],"float64"), )
paddle.log2(x=Tensor([2, 0, 2, 2],"float64"), )
paddle.log2(x=Tensor([2, 3, 0, 2],"float64"), )
paddle.log2(x=Tensor([2, 3, 2, 0],"float64"), )
paddle.logcumsumexp(Tensor([0, 10, 10],"float32"), axis=0, )
paddle.logcumsumexp(Tensor([0, 10, 10],"float32"), axis=-1, )
paddle.logcumsumexp(Tensor([0, 4],"float32"), axis=0, )
paddle.logcumsumexp(Tensor([0, 4],"float32"), axis=-1, )
paddle.logcumsumexp(Tensor([0, 4],"float32"), axis=-2, )
paddle.logcumsumexp(Tensor([10, 0, 10],"float32"), axis=0, )
paddle.logcumsumexp(Tensor([10, 0, 10],"float32"), axis=-1, )
paddle.logcumsumexp(Tensor([10, 10, 0],"float32"), axis=0, )
paddle.logcumsumexp(Tensor([10, 10, 0],"float32"), axis=-1, )
paddle.logcumsumexp(Tensor([3, 0],"float32"), axis=0, )
paddle.logcumsumexp(Tensor([3, 0],"float32"), axis=-1, )
paddle.logcumsumexp(Tensor([3, 0],"float32"), axis=-2, )
paddle.logit(Tensor([0, 20, 1],"float32"), 0.001, )
paddle.logit(Tensor([0],"float32"), 1e-08, )
paddle.logit(Tensor([10, 0, 1],"float32"), 0.001, )
paddle.logit(Tensor([10, 20, 0],"float32"), 0.001, )
paddle.logit(x=Tensor([0, 2],"float64"), )
paddle.logit(x=Tensor([0, 3, 2, 5],"float64"), )
paddle.logit(x=Tensor([0, 3, 2, 5],"float64"), eps=0.2, )
paddle.logit(x=Tensor([0, 3, 2],"float64"), )
paddle.logit(x=Tensor([0],"float32"), )
paddle.logit(x=Tensor([0],"float64"), )
paddle.logit(x=Tensor([4, 0, 2, 5],"float64"), )
paddle.logit(x=Tensor([4, 0, 2, 5],"float64"), eps=0.2, )
paddle.logit(x=Tensor([4, 0, 2],"float64"), )
paddle.logit(x=Tensor([4, 0],"float64"), )
paddle.logit(x=Tensor([4, 3, 0, 5],"float64"), )
paddle.logit(x=Tensor([4, 3, 0, 5],"float64"), eps=0.2, )
paddle.logit(x=Tensor([4, 3, 0],"float64"), )
paddle.logit(x=Tensor([4, 3, 2, 0],"float64"), )
paddle.logit(x=Tensor([4, 3, 2, 0],"float64"), eps=0.2, )
paddle.masked_fill(Tensor([0, 1],"float16"), Tensor([0, 40],"bool"), -0.54931640625, )
paddle.masked_fill(Tensor([0, 1],"float16"), Tensor([0, 40],"bool"), 1.3017578125, )
paddle.masked_fill(Tensor([0, 40],"float32"), Tensor([40],"bool"), -0.29328805208206177, )
paddle.masked_fill(Tensor([0, 40],"float32"), Tensor([40],"bool"), 0.9238947033882141, )
paddle.masked_fill(Tensor([0, 60, 10],"int32"), Tensor([0, 60, 10],"bool"), 0, )
paddle.masked_fill(Tensor([0, 60, 2],"int32"), Tensor([0, 60, 2],"bool"), 0, )
paddle.masked_fill(Tensor([0, 60],"int32"), Tensor([0, 60],"bool"), 0, )
paddle.masked_fill(Tensor([0, 8, 9, 18],"float32"), Tensor([0, 8, 9, 18],"bool"), -0.40675103664398193, )
paddle.masked_fill(Tensor([0, 8, 9, 18],"float32"), Tensor([0, 8, 9, 18],"bool"), 0.5797171592712402, )
paddle.masked_fill(Tensor([0],"float16"), Tensor([0],"bool"), 0.7587890625, )
paddle.masked_fill(Tensor([0],"float16"), Tensor([0],"bool"), -1.7802734375, )
paddle.masked_fill(Tensor([10, 0, 10],"int32"), Tensor([10, 0, 10],"bool"), 0, )
paddle.masked_fill(Tensor([10, 0],"int32"), Tensor([10, 0],"bool"), 0, )
paddle.masked_fill(Tensor([10, 60, 0],"int32"), Tensor([10, 60, 0],"bool"), 0, )
paddle.masked_fill(Tensor([2, 0, 2],"int32"), Tensor([2, 0, 2],"bool"), 0, )
paddle.masked_fill(Tensor([2, 0],"int32"), Tensor([2, 0],"bool"), 0, )
paddle.masked_fill(Tensor([2, 60, 0],"int32"), Tensor([2, 60, 0],"bool"), 0, )
paddle.masked_fill(Tensor([300, 0],"float16"), Tensor([300, 0],"bool"), -0.54931640625, )
paddle.masked_fill(Tensor([300, 0],"float16"), Tensor([300, 0],"bool"), 1.3017578125, )
paddle.masked_fill(Tensor([300, 1],"float16"), Tensor([300, 0],"bool"), -0.54931640625, )
paddle.masked_fill(Tensor([300, 1],"float16"), Tensor([300, 0],"bool"), 1.3017578125, )
paddle.masked_fill(Tensor([6, 0, 9, 18],"float32"), Tensor([6, 0, 9, 18],"bool"), -0.40675103664398193, )
paddle.masked_fill(Tensor([6, 0, 9, 18],"float32"), Tensor([6, 0, 9, 18],"bool"), 0.5797171592712402, )
paddle.masked_fill(Tensor([6, 8, 0, 18],"float32"), Tensor([6, 8, 0, 18],"bool"), -0.40675103664398193, )
paddle.masked_fill(Tensor([6, 8, 0, 18],"float32"), Tensor([6, 8, 0, 18],"bool"), 0.5797171592712402, )
paddle.masked_fill(Tensor([6, 8, 9, 0],"float32"), Tensor([6, 8, 9, 0],"bool"), -0.40675103664398193, )
paddle.masked_fill(Tensor([6, 8, 9, 0],"float32"), Tensor([6, 8, 9, 0],"bool"), 0.5797171592712402, )
paddle.masked_select(Tensor([0, 1],"float32"), Tensor([0, 1],"bool"), )
paddle.masked_select(Tensor([0, 1],"float32"), Tensor([1, 1],"bool"), )
paddle.masked_select(Tensor([0, 2, 2],"float32"), Tensor([0, 2, 2],"bool"), )
paddle.masked_select(Tensor([0, 2, 2],"float32"), Tensor([1, 2, 2],"bool"), )
paddle.masked_select(Tensor([0, 21504, 4],"float32"), Tensor([0, 21504, 4],"bool"), )
paddle.masked_select(Tensor([0, 21504, 4],"float32"), Tensor([1, 21504, 4],"bool"), )
paddle.masked_select(Tensor([0, 21504],"float32"), Tensor([0, 21504],"bool"), )
paddle.masked_select(Tensor([0, 21504],"float32"), Tensor([1, 21504],"bool"), )
paddle.masked_select(Tensor([1, 0, 2],"float32"), Tensor([1, 0, 2],"bool"), )
paddle.masked_select(Tensor([1, 0, 4],"float32"), Tensor([1, 0, 4],"bool"), )
paddle.masked_select(Tensor([1, 0],"float32"), Tensor([1, 0],"bool"), )
paddle.masked_select(Tensor([1, 0],"float32"), Tensor([1, 1],"bool"), )
paddle.masked_select(Tensor([1, 1],"float32"), Tensor([0, 1],"bool"), )
paddle.masked_select(Tensor([1, 1],"float32"), Tensor([1, 0],"bool"), )
paddle.masked_select(Tensor([1, 2, 0],"float32"), Tensor([1, 2, 0],"bool"), )
paddle.masked_select(Tensor([1, 2, 2],"float32"), Tensor([0, 2, 2],"bool"), )
paddle.masked_select(Tensor([1, 21504, 0],"float32"), Tensor([1, 21504, 0],"bool"), )
paddle.masked_select(Tensor([1, 21504, 4],"float32"), Tensor([0, 21504, 4],"bool"), )
paddle.masked_select(Tensor([1, 21504],"float32"), Tensor([0, 21504],"bool"), )
paddle.masked_select(x=Tensor([0, 3],"float32"), mask=Tensor([0, 3],"bool"), )
paddle.masked_select(x=Tensor([0, 3],"float64"), mask=Tensor([0, 3],"bool"), )
paddle.masked_select(x=Tensor([2, 0],"float32"), mask=Tensor([2, 0],"bool"), )
paddle.masked_select(x=Tensor([2, 0],"float64"), mask=Tensor([2, 0],"bool"), )
paddle.multigammaln(Tensor([0, 20],"float32"), 2, )
paddle.multigammaln(Tensor([0, 20],"float64"), 2, )
paddle.multigammaln(Tensor([10, 0],"float32"), 2, )
paddle.multigammaln(Tensor([10, 0],"float64"), 2, )
paddle.mv(Tensor([0, 12],"float32"), Tensor([12],"float32"), )
paddle.mv(Tensor([0, 18],"float32"), Tensor([18],"float32"), )
paddle.mv(x=Tensor([0, 1],"float64"), vec=Tensor([1],"float64"), )
paddle.mv(x=Tensor([0, 2],"float64"), vec=Tensor([2],"float64"), )
paddle.nan_to_num(Tensor([0, 1],"float64"), neginf=-2.220446049250313e-16, )
paddle.nan_to_num(Tensor([0, 2],"float32"), neginf=-1.1920928955078125e-07, )
paddle.nan_to_num(Tensor([0, 3],"float32"), )
paddle.nan_to_num(Tensor([0, 3],"float32"), 1.0, 100.0, -10.0, )
paddle.nan_to_num(Tensor([0, 3],"float32"), 1.0, 2.0, None, )
paddle.nan_to_num(Tensor([0, 3],"float32"), 1.0, None, -10.0, )
paddle.nan_to_num(Tensor([0, 3],"float32"), 1.0, None, None, )
paddle.nan_to_num(Tensor([0, 4],"float32"), )
paddle.nan_to_num(Tensor([0, 5, 3],"float32"), neginf=-1.1920928955078125e-07, )
paddle.nan_to_num(Tensor([0],"float64"), neginf=-2.220446049250313e-16, )
paddle.nan_to_num(Tensor([114, 0],"float64"), neginf=-2.220446049250313e-16, )
paddle.nan_to_num(Tensor([148, 0, 3],"float32"), neginf=-1.1920928955078125e-07, )
paddle.nan_to_num(Tensor([148, 5, 0],"float32"), neginf=-1.1920928955078125e-07, )
paddle.nan_to_num(Tensor([1948, 0],"float32"), neginf=-1.1920928955078125e-07, )
paddle.nan_to_num(Tensor([2, 0],"float32"), )
paddle.nan_to_num(Tensor([2, 0],"float32"), 1.0, 100.0, -10.0, )
paddle.nan_to_num(Tensor([2, 0],"float32"), 1.0, 2.0, None, )
paddle.nan_to_num(Tensor([2, 0],"float32"), 1.0, None, -10.0, )
paddle.nan_to_num(Tensor([2, 0],"float32"), 1.0, None, None, )
paddle.nan_to_num(Tensor([400, 0],"float64"), neginf=-2.220446049250313e-16, )
paddle.nanmean(Tensor([0, 3, 4, 5],"float32"), -1, False, )
paddle.nanmean(Tensor([0, 3, 4, 5],"float32"), 2, True, )
paddle.nanmean(Tensor([0, 3, 4, 5],"float32"), list[], False, )
paddle.nanmean(Tensor([0, 3, 4, 5],"float32"), list[0,1,2,3,], False, )
paddle.nanmean(Tensor([0, 3, 4, 5],"float32"), list[0,2,], False, )
paddle.nanmean(Tensor([0, 3, 4, 5],"float32"), None, False, )
paddle.nanmean(Tensor([0, 3, 4, 5],"float32"), None, True, )
paddle.nanmean(Tensor([0, 3, 4, 5],"float32"), tuple(0,2,), False, )
paddle.nanmean(Tensor([0, 3],"float32"), 0, True, )
paddle.nanmean(Tensor([0, 3],"float32"), 1, False, )
paddle.nanmean(Tensor([0, 3],"float32"), -1, False, )
paddle.nanmean(Tensor([0, 3],"float32"), None, False, )
paddle.nanmean(Tensor([0, 3],"float32"), None, True, )
paddle.nanmean(Tensor([0, 3],"float32"), tuple(0,1,), False, )
paddle.nanmean(Tensor([0, 5],"float32"), axis=None, )
paddle.nanmean(Tensor([0, 5],"float32"), keepdim=True, )
paddle.nanmean(Tensor([0],"float32"), axis=0, )
paddle.nanmean(Tensor([2, 0, 4, 5],"float32"), -1, False, )
paddle.nanmean(Tensor([2, 0, 4, 5],"float32"), 2, True, )
paddle.nanmean(Tensor([2, 0, 4, 5],"float32"), list[], False, )
paddle.nanmean(Tensor([2, 0, 4, 5],"float32"), list[0,1,2,3,], False, )
paddle.nanmean(Tensor([2, 0, 4, 5],"float32"), list[0,2,], False, )
paddle.nanmean(Tensor([2, 0, 4, 5],"float32"), None, False, )
paddle.nanmean(Tensor([2, 0, 4, 5],"float32"), None, True, )
paddle.nanmean(Tensor([2, 0, 4, 5],"float32"), tuple(0,2,), False, )
paddle.nanmean(Tensor([2, 0],"float32"), 0, True, )
paddle.nanmean(Tensor([2, 0],"float32"), 1, False, )
paddle.nanmean(Tensor([2, 0],"float32"), -1, False, )
paddle.nanmean(Tensor([2, 0],"float32"), None, False, )
paddle.nanmean(Tensor([2, 0],"float32"), None, True, )
paddle.nanmean(Tensor([2, 0],"float32"), tuple(0,1,), False, )
paddle.nanmean(Tensor([2, 3, 0, 5],"float32"), -1, False, )
paddle.nanmean(Tensor([2, 3, 0, 5],"float32"), 2, True, )
paddle.nanmean(Tensor([2, 3, 0, 5],"float32"), list[], False, )
paddle.nanmean(Tensor([2, 3, 0, 5],"float32"), list[0,1,2,3,], False, )
paddle.nanmean(Tensor([2, 3, 0, 5],"float32"), list[0,2,], False, )
paddle.nanmean(Tensor([2, 3, 0, 5],"float32"), None, False, )
paddle.nanmean(Tensor([2, 3, 0, 5],"float32"), None, True, )
paddle.nanmean(Tensor([2, 3, 0, 5],"float32"), tuple(0,2,), False, )
paddle.nanmean(Tensor([2, 3, 4, 0],"float32"), -1, False, )
paddle.nanmean(Tensor([2, 3, 4, 0],"float32"), 2, True, )
paddle.nanmean(Tensor([2, 3, 4, 0],"float32"), list[], False, )
paddle.nanmean(Tensor([2, 3, 4, 0],"float32"), list[0,1,2,3,], False, )
paddle.nanmean(Tensor([2, 3, 4, 0],"float32"), list[0,2,], False, )
paddle.nanmean(Tensor([2, 3, 4, 0],"float32"), None, False, )
paddle.nanmean(Tensor([2, 3, 4, 0],"float32"), None, True, )
paddle.nanmean(Tensor([2, 3, 4, 0],"float32"), tuple(0,2,), False, )
paddle.nanmean(Tensor([3, 0],"float32"), axis=None, )
paddle.nanmean(Tensor([3, 0],"float32"), keepdim=True, )
paddle.nansum(Tensor([0, 3, 4, 5],"float32"), axis=list[], keepdim=False, name=None, )
paddle.nansum(Tensor([0, 3, 4, 5],"float32"), axis=list[0,1,2,3,], keepdim=False, name=None, )
paddle.nansum(Tensor([0, 3, 4, 5],"float32"), axis=list[0,2,], keepdim=False, name=None, )
paddle.nansum(Tensor([0, 3, 4, 5],"float32"), axis=list[-1,], keepdim=False, name=None, )
paddle.nansum(Tensor([0, 3, 4, 5],"float32"), axis=list[2,], keepdim=True, name=None, )
paddle.nansum(Tensor([0, 3, 4, 5],"float32"), axis=None, keepdim=False, name=None, )
paddle.nansum(Tensor([0, 3, 4, 5],"float32"), axis=None, keepdim=True, name=None, )
paddle.nansum(Tensor([0, 3, 4, 5],"float32"), axis=tuple(0,2,), keepdim=False, name=None, )
paddle.nansum(Tensor([0, 3],"float32"), axis=list[0,], keepdim=True, name=None, )
paddle.nansum(Tensor([0, 3],"float32"), axis=list[1,], keepdim=False, name=None, )
paddle.nansum(Tensor([0, 3],"float32"), axis=list[-1,], keepdim=False, name=None, )
paddle.nansum(Tensor([0, 3],"float32"), axis=None, keepdim=False, name=None, )
paddle.nansum(Tensor([0, 3],"float32"), axis=None, keepdim=True, name=None, )
paddle.nansum(Tensor([0, 3],"float32"), axis=tuple(0,1,), keepdim=False, name=None, )
paddle.nansum(Tensor([0, 4],"float32"), )
paddle.nansum(Tensor([0, 5],"float32"), axis=None, )
paddle.nansum(Tensor([0, 5],"float32"), axis=None, keepdim=False, name=None, )
paddle.nansum(Tensor([0, 5],"float32"), axis=None, keepdim=True, name=None, )
paddle.nansum(Tensor([0, 5],"float32"), keepdim=True, )
paddle.nansum(Tensor([0],"float32"), axis=0, )
paddle.nansum(Tensor([0],"float32"), axis=list[0,], keepdim=False, name=None, )
paddle.nansum(Tensor([2, 0, 4, 5],"float32"), axis=list[], keepdim=False, name=None, )
paddle.nansum(Tensor([2, 0, 4, 5],"float32"), axis=list[0,1,2,3,], keepdim=False, name=None, )
paddle.nansum(Tensor([2, 0, 4, 5],"float32"), axis=list[0,2,], keepdim=False, name=None, )
paddle.nansum(Tensor([2, 0, 4, 5],"float32"), axis=list[-1,], keepdim=False, name=None, )
paddle.nansum(Tensor([2, 0, 4, 5],"float32"), axis=list[2,], keepdim=True, name=None, )
paddle.nansum(Tensor([2, 0, 4, 5],"float32"), axis=None, keepdim=False, name=None, )
paddle.nansum(Tensor([2, 0, 4, 5],"float32"), axis=None, keepdim=True, name=None, )
paddle.nansum(Tensor([2, 0, 4, 5],"float32"), axis=tuple(0,2,), keepdim=False, name=None, )
paddle.nansum(Tensor([2, 0],"float32"), )
paddle.nansum(Tensor([2, 0],"float32"), axis=list[0,], keepdim=True, name=None, )
paddle.nansum(Tensor([2, 0],"float32"), axis=list[1,], keepdim=False, name=None, )
paddle.nansum(Tensor([2, 0],"float32"), axis=list[-1,], keepdim=False, name=None, )
paddle.nansum(Tensor([2, 0],"float32"), axis=None, keepdim=False, name=None, )
paddle.nansum(Tensor([2, 0],"float32"), axis=None, keepdim=True, name=None, )
paddle.nansum(Tensor([2, 0],"float32"), axis=tuple(0,1,), keepdim=False, name=None, )
paddle.nansum(Tensor([2, 3, 0, 5],"float32"), axis=list[], keepdim=False, name=None, )
paddle.nansum(Tensor([2, 3, 0, 5],"float32"), axis=list[0,1,2,3,], keepdim=False, name=None, )
paddle.nansum(Tensor([2, 3, 0, 5],"float32"), axis=list[0,2,], keepdim=False, name=None, )
paddle.nansum(Tensor([2, 3, 0, 5],"float32"), axis=list[-1,], keepdim=False, name=None, )
paddle.nansum(Tensor([2, 3, 0, 5],"float32"), axis=list[2,], keepdim=True, name=None, )
paddle.nansum(Tensor([2, 3, 0, 5],"float32"), axis=None, keepdim=False, name=None, )
paddle.nansum(Tensor([2, 3, 0, 5],"float32"), axis=None, keepdim=True, name=None, )
paddle.nansum(Tensor([2, 3, 0, 5],"float32"), axis=tuple(0,2,), keepdim=False, name=None, )
paddle.nansum(Tensor([2, 3, 4, 0],"float32"), axis=list[], keepdim=False, name=None, )
paddle.nansum(Tensor([2, 3, 4, 0],"float32"), axis=list[0,1,2,3,], keepdim=False, name=None, )
paddle.nansum(Tensor([2, 3, 4, 0],"float32"), axis=list[0,2,], keepdim=False, name=None, )
paddle.nansum(Tensor([2, 3, 4, 0],"float32"), axis=list[-1,], keepdim=False, name=None, )
paddle.nansum(Tensor([2, 3, 4, 0],"float32"), axis=list[2,], keepdim=True, name=None, )
paddle.nansum(Tensor([2, 3, 4, 0],"float32"), axis=None, keepdim=False, name=None, )
paddle.nansum(Tensor([2, 3, 4, 0],"float32"), axis=None, keepdim=True, name=None, )
paddle.nansum(Tensor([2, 3, 4, 0],"float32"), axis=tuple(0,2,), keepdim=False, name=None, )
paddle.nansum(Tensor([3, 0],"float32"), axis=None, )
paddle.nansum(Tensor([3, 0],"float32"), axis=None, keepdim=False, name=None, )
paddle.nansum(Tensor([3, 0],"float32"), axis=None, keepdim=True, name=None, )
paddle.nansum(Tensor([3, 0],"float32"), keepdim=True, )
paddle.nansum(x=Tensor([0, 2, 3, 4, 5, 1, 2],"float64"), axis=3, keepdim=True, )
paddle.nansum(x=Tensor([0, 3, 3],"float64"), )
paddle.nansum(x=Tensor([0, 3, 3],"float64"), axis=0, )
paddle.nansum(x=Tensor([0, 3, 3],"float64"), axis=0, keepdim=True, )
paddle.nansum(x=Tensor([0, 3, 3],"float64"), axis=-1, )
paddle.nansum(x=Tensor([3, 0, 3, 4, 5, 1, 2],"float64"), axis=3, keepdim=True, )
paddle.nansum(x=Tensor([3, 0, 3],"float64"), )
paddle.nansum(x=Tensor([3, 0, 3],"float64"), axis=0, )
paddle.nansum(x=Tensor([3, 0, 3],"float64"), axis=0, keepdim=True, )
paddle.nansum(x=Tensor([3, 0, 3],"float64"), axis=-1, )
paddle.nansum(x=Tensor([3, 2, 0, 4, 5, 1, 2],"float64"), axis=3, keepdim=True, )
paddle.nansum(x=Tensor([3, 2, 3, 0, 5, 1, 2],"float64"), axis=3, keepdim=True, )
paddle.nansum(x=Tensor([3, 2, 3, 4, 0, 1, 2],"float64"), axis=3, keepdim=True, )
paddle.nansum(x=Tensor([3, 2, 3, 4, 5, 0, 2],"float64"), axis=3, keepdim=True, )
paddle.nansum(x=Tensor([3, 2, 3, 4, 5, 1, 0],"float64"), axis=3, keepdim=True, )
paddle.nansum(x=Tensor([3, 3, 0],"float64"), )
paddle.nansum(x=Tensor([3, 3, 0],"float64"), axis=0, )
paddle.nansum(x=Tensor([3, 3, 0],"float64"), axis=0, keepdim=True, )
paddle.nansum(x=Tensor([3, 3, 0],"float64"), axis=-1, )
paddle.nextafter(Tensor([0, 3, 2],"float32"), Tensor([0, 3, 2],"float64"), )
paddle.nextafter(Tensor([0, 3, 2],"float64"), Tensor([0, 3, 2],"float32"), )
paddle.nextafter(Tensor([0, 3, 4, 5],"float32"), Tensor([0, 3, 4, 5],"float32"), )
paddle.nextafter(Tensor([2, 0, 4, 5],"float32"), Tensor([2, 0, 4, 5],"float32"), )
paddle.nextafter(Tensor([2, 3, 0, 5],"float32"), Tensor([2, 3, 0, 5],"float32"), )
paddle.nextafter(Tensor([2, 3, 4, 0],"float32"), Tensor([2, 3, 4, 0],"float32"), )
paddle.nextafter(Tensor([4, 0, 2],"float32"), Tensor([4, 0, 2],"float64"), )
paddle.nextafter(Tensor([4, 0, 2],"float64"), Tensor([4, 0, 2],"float32"), )
paddle.nextafter(Tensor([4, 3, 0],"float32"), Tensor([4, 3, 0],"float64"), )
paddle.nextafter(Tensor([4, 3, 0],"float64"), Tensor([4, 3, 0],"float32"), )
paddle.nn.functional.adaptive_avg_pool1d(Tensor([0, 3, 32],"float32"), 16, )
paddle.nn.functional.adaptive_avg_pool1d(Tensor([0, 3, 32],"float32"), 16, None, )
paddle.nn.functional.adaptive_avg_pool1d(Tensor([0, 3, 32],"float32"), output_size=16, )
paddle.nn.functional.adaptive_avg_pool1d(Tensor([0, 3, 8],"float32"), 2, None, )
paddle.nn.functional.adaptive_avg_pool1d(Tensor([0, 3, 8],"float64"), 2, None, )
paddle.nn.functional.adaptive_avg_pool1d(Tensor([0, 3, 8],"float64"), 4, None, )
paddle.nn.functional.adaptive_avg_pool1d(Tensor([0, 3, 8],"float64"), 8, None, )
paddle.nn.functional.adaptive_avg_pool1d(Tensor([12, 1024, 0],"float32"), 1, None, )
paddle.nn.functional.adaptive_avg_pool1d(Tensor([12, 256, 0],"float32"), 1, None, )
paddle.nn.functional.adaptive_avg_pool1d(Tensor([2, 0, 32],"float32"), 16, )
paddle.nn.functional.adaptive_avg_pool1d(Tensor([2, 0, 32],"float32"), 16, None, )
paddle.nn.functional.adaptive_avg_pool1d(Tensor([2, 0, 32],"float32"), output_size=16, )
paddle.nn.functional.adaptive_avg_pool1d(Tensor([2, 0, 8],"float32"), 2, None, )
paddle.nn.functional.adaptive_avg_pool1d(Tensor([2, 0, 8],"float64"), 2, None, )
paddle.nn.functional.adaptive_avg_pool1d(Tensor([2, 0, 8],"float64"), 4, None, )
paddle.nn.functional.adaptive_avg_pool1d(Tensor([2, 0, 8],"float64"), 8, None, )
paddle.nn.functional.adaptive_avg_pool1d(x=Tensor([0, 3, 8],"float32"), output_size=2, )
paddle.nn.functional.adaptive_avg_pool1d(x=Tensor([0, 3, 8],"float64"), output_size=2, )
paddle.nn.functional.adaptive_avg_pool1d(x=Tensor([0, 3, 8],"float64"), output_size=4, )
paddle.nn.functional.adaptive_avg_pool1d(x=Tensor([0, 3, 8],"float64"), output_size=8, )
paddle.nn.functional.adaptive_avg_pool1d(x=Tensor([2, 0, 8],"float32"), output_size=2, )
paddle.nn.functional.adaptive_avg_pool1d(x=Tensor([2, 0, 8],"float64"), output_size=2, )
paddle.nn.functional.adaptive_avg_pool1d(x=Tensor([2, 0, 8],"float64"), output_size=4, )
paddle.nn.functional.adaptive_avg_pool1d(x=Tensor([2, 0, 8],"float64"), output_size=8, )
paddle.nn.functional.adaptive_max_pool1d(Tensor([0, 1, 4],"float64"), 4, True, None, )
paddle.nn.functional.adaptive_max_pool1d(Tensor([0, 3, 32],"float32"), 16, False, None, )
paddle.nn.functional.adaptive_max_pool1d(Tensor([0, 3, 32],"float32"), output_size=16, )
paddle.nn.functional.adaptive_max_pool1d(Tensor([0, 3, 32],"float64"), 8, False, None, )
paddle.nn.functional.adaptive_max_pool1d(Tensor([0, 3, 8],"float32"), 4, False, None, )
paddle.nn.functional.adaptive_max_pool1d(Tensor([0, 3, 8],"float64"), 4, False, None, )
paddle.nn.functional.adaptive_max_pool1d(x=Tensor([0, 1, 4],"float64"), output_size=4, return_mask=True, )
paddle.nn.functional.adaptive_max_pool1d(x=Tensor([0, 3, 32],"float64"), output_size=8, )
paddle.nn.functional.adaptive_max_pool1d(x=Tensor([0, 3, 8],"float32"), output_size=4, )
paddle.nn.functional.adaptive_max_pool1d(x=Tensor([0, 3, 8],"float64"), output_size=4, )
paddle.nn.functional.adaptive_max_pool2d(Tensor([0, 1, 5, 5],"float32"), output_size=3, return_mask=True, name=None, )
paddle.nn.functional.adaptive_max_pool2d(Tensor([0, 1, 5, 5],"float64"), output_size=3, return_mask=True, name=None, )
paddle.nn.functional.adaptive_max_pool2d(Tensor([0, 1, 8, 8],"float32"), output_size=3, return_mask=False, name=None, )
paddle.nn.functional.adaptive_max_pool2d(Tensor([0, 1, 8, 8],"float64"), output_size=3, return_mask=False, name=None, )
paddle.nn.functional.adaptive_max_pool2d(Tensor([0, 2, 8, 8],"float64"), output_size=4, return_mask=False, name=None, )
paddle.nn.functional.adaptive_max_pool2d(Tensor([0, 3, 7, 7],"float32"), output_size=5, return_mask=False, name=None, )
paddle.nn.functional.adaptive_max_pool2d(Tensor([0, 3, 7, 7],"float32"), output_size=list[2,5,], return_mask=False, name=None, )
paddle.nn.functional.adaptive_max_pool2d(Tensor([0, 3, 7, 7],"float32"), output_size=list[3,3,], return_mask=False, name=None, )
paddle.nn.functional.adaptive_max_pool2d(Tensor([0, 3, 7, 7],"float32"), output_size=list[None,3,], return_mask=False, name=None, )
paddle.nn.functional.adaptive_max_pool2d(x=Tensor([0, 1, 5, 5],"float32"), output_size=3, return_mask=True, )
paddle.nn.functional.adaptive_max_pool2d(x=Tensor([0, 1, 5, 5],"float64"), output_size=3, return_mask=True, )
paddle.nn.functional.adaptive_max_pool2d(x=Tensor([0, 1, 8, 8],"float32"), output_size=3, )
paddle.nn.functional.adaptive_max_pool2d(x=Tensor([0, 1, 8, 8],"float64"), output_size=3, )
paddle.nn.functional.adaptive_max_pool2d(x=Tensor([0, 2, 8, 8],"float64"), output_size=4, )
paddle.nn.functional.adaptive_max_pool2d(x=Tensor([0, 3, 7, 7],"float32"), output_size=5, )
paddle.nn.functional.adaptive_max_pool2d(x=Tensor([0, 3, 7, 7],"float32"), output_size=list[2,5,], )
paddle.nn.functional.adaptive_max_pool2d(x=Tensor([0, 3, 7, 7],"float32"), output_size=list[None,3,], )
paddle.nn.functional.adaptive_max_pool2d(x=Tensor([0, 3, 7, 7],"float32"), return_mask=False, output_size=list[3,3,], )
paddle.nn.functional.adaptive_max_pool3d(Tensor([0, 1, 5, 5, 5],"float32"), output_size=3, return_mask=True, name=None, )
paddle.nn.functional.adaptive_max_pool3d(Tensor([0, 1, 5, 5, 5],"float64"), output_size=3, return_mask=True, name=None, )
paddle.nn.functional.adaptive_max_pool3d(Tensor([0, 2, 8, 8, 8],"float32"), output_size=4, return_mask=False, name=None, )
paddle.nn.functional.adaptive_max_pool3d(Tensor([0, 2, 8, 8, 8],"float64"), output_size=4, return_mask=False, name=None, )
paddle.nn.functional.adaptive_max_pool3d(Tensor([0, 3, 5, 7, 7],"float32"), output_size=5, return_mask=False, name=None, )
paddle.nn.functional.adaptive_max_pool3d(Tensor([0, 3, 5, 7, 7],"float32"), output_size=list[2,3,5,], return_mask=False, name=None, )
paddle.nn.functional.adaptive_max_pool3d(Tensor([0, 3, 5, 7, 7],"float32"), output_size=list[3,3,3,], return_mask=False, name=None, )
paddle.nn.functional.adaptive_max_pool3d(Tensor([0, 3, 5, 7, 7],"float32"), output_size=list[None,3,None,], return_mask=False, name=None, )
paddle.nn.functional.adaptive_max_pool3d(x=Tensor([0, 1, 5, 5, 5],"float32"), output_size=3, return_mask=True, )
paddle.nn.functional.adaptive_max_pool3d(x=Tensor([0, 1, 5, 5, 5],"float64"), output_size=3, return_mask=True, )
paddle.nn.functional.adaptive_max_pool3d(x=Tensor([0, 2, 8, 8, 8],"float32"), output_size=4, )
paddle.nn.functional.adaptive_max_pool3d(x=Tensor([0, 2, 8, 8, 8],"float64"), output_size=4, )
paddle.nn.functional.adaptive_max_pool3d(x=Tensor([0, 3, 5, 7, 7],"float32"), output_size=5, )
paddle.nn.functional.adaptive_max_pool3d(x=Tensor([0, 3, 5, 7, 7],"float32"), output_size=list[2,3,5,], )
paddle.nn.functional.adaptive_max_pool3d(x=Tensor([0, 3, 5, 7, 7],"float32"), output_size=list[3,3,3,], )
paddle.nn.functional.adaptive_max_pool3d(x=Tensor([0, 3, 5, 7, 7],"float32"), output_size=list[None,3,None,], )
paddle.nn.functional.celu(Tensor([0, 2],"float64"), -0.4, None, )
paddle.nn.functional.celu(Tensor([0, 3, 4],"float32"), 1.0, None, )
paddle.nn.functional.celu(Tensor([0, 3, 4],"float64"), 1.0, None, )
paddle.nn.functional.celu(Tensor([0, 4, 4],"float64"), 0.2, None, )
paddle.nn.functional.celu(Tensor([2, 0, 4],"float32"), 1.0, None, )
paddle.nn.functional.celu(Tensor([2, 0, 4],"float64"), 0.2, None, )
paddle.nn.functional.celu(Tensor([2, 0, 4],"float64"), 1.0, None, )
paddle.nn.functional.celu(Tensor([2, 0],"float64"), -0.4, None, )
paddle.nn.functional.celu(Tensor([2, 3, 0],"float32"), 1.0, None, )
paddle.nn.functional.celu(Tensor([2, 3, 0],"float64"), 1.0, None, )
paddle.nn.functional.celu(Tensor([2, 4, 0],"float64"), 0.2, None, )
paddle.nn.functional.celu(x=Tensor([0, 2],"float64"), alpha=-0.4, )
paddle.nn.functional.celu(x=Tensor([0, 3, 4],"float32"), )
paddle.nn.functional.celu(x=Tensor([0, 3, 4],"float64"), )
paddle.nn.functional.celu(x=Tensor([0, 4, 4],"float64"), alpha=0.2, )
paddle.nn.functional.celu(x=Tensor([2, 0, 4],"float32"), )
paddle.nn.functional.celu(x=Tensor([2, 0, 4],"float64"), )
paddle.nn.functional.celu(x=Tensor([2, 0, 4],"float64"), alpha=0.2, )
paddle.nn.functional.celu(x=Tensor([2, 0],"float64"), alpha=-0.4, )
paddle.nn.functional.celu(x=Tensor([2, 3, 0],"float32"), )
paddle.nn.functional.celu(x=Tensor([2, 3, 0],"float64"), )
paddle.nn.functional.celu(x=Tensor([2, 4, 0],"float64"), alpha=0.2, )
paddle.nn.functional.cosine_similarity(Tensor([0, 1024],"float32"), Tensor([0, 1024],"float32"), axis=-1, eps=1e-08, )
paddle.nn.functional.cosine_similarity(Tensor([0, 12, 10],"float32"), Tensor([0, 1, 10],"float32"), axis=2, eps=1e-06, )
paddle.nn.functional.cosine_similarity(Tensor([0, 128],"float32"), Tensor([0, 128],"float32"), )
paddle.nn.functional.cosine_similarity(Tensor([0, 15],"float32"), Tensor([0, 15],"float32"), axis=1, eps=1e-08, )
paddle.nn.functional.cosine_similarity(Tensor([0, 2, 3, 4],"float64"), Tensor([2, 3, 4],"float64"), axis=-1, eps=1e-08, )
paddle.nn.functional.cosine_similarity(Tensor([0, 5, 2],"float64"), Tensor([0, 5, 2],"float64"), axis=1, eps=1e-08, )
paddle.nn.functional.cosine_similarity(Tensor([0, 5, 2],"float64"), Tensor([0, 5, 2],"float64"), axis=-1, eps=1e-08, )
paddle.nn.functional.cosine_similarity(Tensor([0, 5, 2],"float64"), Tensor([0, 5, 2],"float64"), axis=2, eps=1e-08, )
paddle.nn.functional.cosine_similarity(Tensor([0, 5, 2],"float64"), Tensor([0, 5, 2],"float64"), axis=-2, eps=1e-08, )
paddle.nn.functional.cosine_similarity(Tensor([0, 5, 2],"float64"), Tensor([1, 5, 2],"float64"), axis=1, eps=1e-08, )
paddle.nn.functional.cosine_similarity(Tensor([0, 5, 2],"float64"), Tensor([1, 5, 2],"float64"), axis=-1, eps=1e-08, )
paddle.nn.functional.cosine_similarity(Tensor([0, 5, 2],"float64"), Tensor([1, 5, 2],"float64"), axis=2, eps=1e-08, )
paddle.nn.functional.cosine_similarity(Tensor([0, 5, 2],"float64"), Tensor([1, 5, 2],"float64"), axis=-2, eps=1e-08, )
paddle.nn.functional.cosine_similarity(Tensor([0, 5],"float64"), Tensor([0, 5],"float64"), )
paddle.nn.functional.cosine_similarity(Tensor([0, 5],"float64"), Tensor([0, 5],"float64"), axis=1, eps=1e-06, )
paddle.nn.functional.cosine_similarity(Tensor([0, 5],"float64"), Tensor([0, 5],"float64"), axis=1, eps=1e-07, )
paddle.nn.functional.cosine_similarity(Tensor([0, 5],"float64"), Tensor([0, 5],"float64"), axis=1, eps=1e-08, )
paddle.nn.functional.cosine_similarity(Tensor([0, 5],"float64"), Tensor([0, 5],"float64"), axis=1, eps=1e-09, )
paddle.nn.functional.cosine_similarity(Tensor([0, 5],"float64"), Tensor([1, 5],"float64"), axis=1, eps=1e-06, )
paddle.nn.functional.cosine_similarity(Tensor([0, 5],"float64"), Tensor([1, 5],"float64"), axis=1, eps=1e-07, )
paddle.nn.functional.cosine_similarity(Tensor([0, 5],"float64"), Tensor([1, 5],"float64"), axis=1, eps=1e-08, )
paddle.nn.functional.cosine_similarity(Tensor([0, 5],"float64"), Tensor([1, 5],"float64"), axis=1, eps=1e-09, )
paddle.nn.functional.cosine_similarity(Tensor([0, 8, 2],"float64"), Tensor([0, 8, 2],"float64"), axis=1, eps=1e-08, )
paddle.nn.functional.cosine_similarity(Tensor([1, 0, 2],"float64"), Tensor([1, 0, 2],"float64"), axis=0, eps=1e-08, )
paddle.nn.functional.cosine_similarity(Tensor([1, 0, 2],"float64"), Tensor([1, 0, 2],"float64"), axis=-1, eps=1e-08, )
paddle.nn.functional.cosine_similarity(Tensor([1, 0, 2],"float64"), Tensor([1, 0, 2],"float64"), axis=2, eps=1e-08, )
paddle.nn.functional.cosine_similarity(Tensor([1, 5, 0],"float64"), Tensor([1, 5, 0],"float64"), axis=0, eps=1e-08, )
paddle.nn.functional.cosine_similarity(Tensor([1, 5, 0],"float64"), Tensor([1, 5, 0],"float64"), axis=1, eps=1e-08, )
paddle.nn.functional.cosine_similarity(Tensor([1, 5, 0],"float64"), Tensor([1, 5, 0],"float64"), axis=-2, eps=1e-08, )
paddle.nn.functional.cosine_similarity(Tensor([1, 5, 2],"float64"), Tensor([0, 5, 2],"float64"), axis=1, eps=1e-08, )
paddle.nn.functional.cosine_similarity(Tensor([1, 5, 2],"float64"), Tensor([0, 5, 2],"float64"), axis=-1, eps=1e-08, )
paddle.nn.functional.cosine_similarity(Tensor([1, 5, 2],"float64"), Tensor([0, 5, 2],"float64"), axis=2, eps=1e-08, )
paddle.nn.functional.cosine_similarity(Tensor([1, 5, 2],"float64"), Tensor([0, 5, 2],"float64"), axis=-2, eps=1e-08, )
paddle.nn.functional.cosine_similarity(Tensor([1, 5],"float64"), Tensor([0, 5],"float64"), axis=1, eps=1e-06, )
paddle.nn.functional.cosine_similarity(Tensor([1, 5],"float64"), Tensor([0, 5],"float64"), axis=1, eps=1e-07, )
paddle.nn.functional.cosine_similarity(Tensor([1, 5],"float64"), Tensor([0, 5],"float64"), axis=1, eps=1e-08, )
paddle.nn.functional.cosine_similarity(Tensor([1, 5],"float64"), Tensor([0, 5],"float64"), axis=1, eps=1e-09, )
paddle.nn.functional.cosine_similarity(Tensor([10, 0, 10],"float32"), Tensor([10, 0, 10],"float32"), axis=2, eps=1e-06, )
paddle.nn.functional.cosine_similarity(Tensor([10, 0, 10],"float32"), Tensor([10, 1, 10],"float32"), axis=2, eps=1e-06, )
paddle.nn.functional.cosine_similarity(Tensor([12, 0],"float32"), Tensor([12, 0],"float32"), axis=0, eps=1e-06, )
paddle.nn.functional.cosine_similarity(Tensor([3, 8, 0],"float64"), Tensor([3, 8, 0],"float64"), axis=1, eps=1e-08, )
paddle.nn.functional.cosine_similarity(x1=Tensor([0, 3, 4],"float64"), x2=Tensor([0, 3, 4],"float64"), axis=1, eps=0, )
paddle.nn.functional.cosine_similarity(x1=Tensor([0, 3],"float32"), x2=Tensor([0, 3],"float32"), )
paddle.nn.functional.cosine_similarity(x1=Tensor([0, 3],"float64"), x2=Tensor([0, 3],"float64"), )
paddle.nn.functional.cosine_similarity(x1=Tensor([0, 3],"float64"), x2=Tensor([0, 3],"float64"), axis=1, )
paddle.nn.functional.cosine_similarity(x1=Tensor([2, 0],"float64"), x2=Tensor([2, 0],"float64"), axis=0, )
paddle.nn.functional.cosine_similarity(x1=Tensor([2, 3, 0],"float64"), x2=Tensor([2, 3, 0],"float64"), axis=1, eps=0, )
paddle.nn.functional.elu(Tensor([0, 2],"float64"), 0.2, None, )
paddle.nn.functional.elu(Tensor([0, 20, 1],"float32"), )
paddle.nn.functional.elu(Tensor([0, 20],"float32"), 1.0, )
paddle.nn.functional.elu(Tensor([0, 21504, 2],"float32"), )
paddle.nn.functional.elu(Tensor([0, 3, 3],"float32"), 1.0, None, )
paddle.nn.functional.elu(Tensor([0, 3, 3],"float64"), 0, None, )
paddle.nn.functional.elu(Tensor([0, 3, 3],"float64"), 1.0, None, )
paddle.nn.functional.elu(Tensor([0, 3, 3],"float64"), 2, None, )
paddle.nn.functional.elu(Tensor([0, 32],"float32"), )
paddle.nn.functional.elu(Tensor([0, 64],"float32"), )
paddle.nn.functional.elu(Tensor([1, 0, 2],"float32"), )
paddle.nn.functional.elu(Tensor([1, 21504, 0],"float32"), )
paddle.nn.functional.elu(Tensor([10, 0, 1],"float32"), )
paddle.nn.functional.elu(Tensor([10, 20, 0],"float32"), )
paddle.nn.functional.elu(Tensor([15, 0],"float32"), 1.0, )
paddle.nn.functional.elu(Tensor([2, 0],"float32"), )
paddle.nn.functional.elu(Tensor([2, 0],"float64"), 0.2, None, )
paddle.nn.functional.elu(Tensor([3, 0, 3],"float32"), 1.0, None, )
paddle.nn.functional.elu(Tensor([3, 0, 3],"float64"), 0, None, )
paddle.nn.functional.elu(Tensor([3, 0, 3],"float64"), 1.0, None, )
paddle.nn.functional.elu(Tensor([3, 0, 3],"float64"), 2, None, )
paddle.nn.functional.elu(Tensor([3, 3, 0],"float32"), 1.0, None, )
paddle.nn.functional.elu(Tensor([3, 3, 0],"float64"), 0, None, )
paddle.nn.functional.elu(Tensor([3, 3, 0],"float64"), 1.0, None, )
paddle.nn.functional.elu(Tensor([3, 3, 0],"float64"), 2, None, )
paddle.nn.functional.elu(x=Tensor([0, 2],"float64"), alpha=0.2, )
paddle.nn.functional.elu(x=Tensor([0, 3, 3],"float32"), )
paddle.nn.functional.elu(x=Tensor([0, 3, 3],"float64"), )
paddle.nn.functional.elu(x=Tensor([0, 3, 3],"float64"), alpha=0, )
paddle.nn.functional.elu(x=Tensor([0, 3, 3],"float64"), alpha=2, )
paddle.nn.functional.elu(x=Tensor([2, 0],"float64"), alpha=0.2, )
paddle.nn.functional.elu(x=Tensor([3, 0, 3],"float32"), )
paddle.nn.functional.elu(x=Tensor([3, 0, 3],"float64"), )
paddle.nn.functional.elu(x=Tensor([3, 0, 3],"float64"), alpha=0, )
paddle.nn.functional.elu(x=Tensor([3, 0, 3],"float64"), alpha=2, )
paddle.nn.functional.elu(x=Tensor([3, 3, 0],"float32"), )
paddle.nn.functional.elu(x=Tensor([3, 3, 0],"float64"), )
paddle.nn.functional.elu(x=Tensor([3, 3, 0],"float64"), alpha=0, )
paddle.nn.functional.elu(x=Tensor([3, 3, 0],"float64"), alpha=2, )
paddle.nn.functional.glu(Tensor([0, 1, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([0, 10, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([0, 20],"float64"), 0, None, )
paddle.nn.functional.glu(Tensor([0, 20],"float64"), -1, )
paddle.nn.functional.glu(Tensor([0, 20],"float64"), 1, None, )
paddle.nn.functional.glu(Tensor([0, 20],"float64"), -1, None, )
paddle.nn.functional.glu(Tensor([1, 0, 512],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([1, 1, 0],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([1, 10, 0],"float32"), -1, None, )
paddle.nn.functional.glu(Tensor([5, 0],"float64"), -1, )
paddle.nn.functional.glu(Tensor([6, 0],"float64"), 0, None, )
paddle.nn.functional.glu(Tensor([6, 0],"float64"), 1, None, )
paddle.nn.functional.glu(Tensor([6, 0],"float64"), -1, None, )
paddle.nn.functional.glu(x=Tensor([0, 2, 8],"float32"), )
paddle.nn.functional.glu(x=Tensor([0, 2, 8],"float64"), )
paddle.nn.functional.glu(x=Tensor([0, 4],"float32"), )
paddle.nn.functional.glu(x=Tensor([0, 4],"float64"), )
paddle.nn.functional.glu(x=Tensor([0, 6, 2, 8],"float32"), )
paddle.nn.functional.glu(x=Tensor([0, 6, 2, 8],"float32"), axis=0, )
paddle.nn.functional.glu(x=Tensor([0, 6, 2, 8],"float32"), axis=2, )
paddle.nn.functional.glu(x=Tensor([0, 6, 2, 8],"float64"), )
paddle.nn.functional.glu(x=Tensor([0, 6, 2, 8],"float64"), axis=0, )
paddle.nn.functional.glu(x=Tensor([0, 6, 2, 8],"float64"), axis=2, )
paddle.nn.functional.glu(x=Tensor([0],"float32"), )
paddle.nn.functional.glu(x=Tensor([0],"float64"), )
paddle.nn.functional.glu(x=Tensor([10, 0, 8],"float32"), )
paddle.nn.functional.glu(x=Tensor([10, 0, 8],"float64"), )
paddle.nn.functional.glu(x=Tensor([10, 2, 0],"float32"), )
paddle.nn.functional.glu(x=Tensor([10, 2, 0],"float64"), )
paddle.nn.functional.glu(x=Tensor([2, 0],"float32"), )
paddle.nn.functional.glu(x=Tensor([2, 0],"float64"), )
paddle.nn.functional.glu(x=Tensor([4, 0, 2, 8],"float32"), )
paddle.nn.functional.glu(x=Tensor([4, 0, 2, 8],"float32"), axis=0, )
paddle.nn.functional.glu(x=Tensor([4, 0, 2, 8],"float32"), axis=2, )
paddle.nn.functional.glu(x=Tensor([4, 0, 2, 8],"float64"), )
paddle.nn.functional.glu(x=Tensor([4, 0, 2, 8],"float64"), axis=0, )
paddle.nn.functional.glu(x=Tensor([4, 0, 2, 8],"float64"), axis=2, )
paddle.nn.functional.glu(x=Tensor([4, 6, 0, 8],"float32"), )
paddle.nn.functional.glu(x=Tensor([4, 6, 0, 8],"float32"), axis=0, )
paddle.nn.functional.glu(x=Tensor([4, 6, 0, 8],"float32"), axis=2, )
paddle.nn.functional.glu(x=Tensor([4, 6, 0, 8],"float64"), )
paddle.nn.functional.glu(x=Tensor([4, 6, 0, 8],"float64"), axis=0, )
paddle.nn.functional.glu(x=Tensor([4, 6, 0, 8],"float64"), axis=2, )
paddle.nn.functional.glu(x=Tensor([4, 6, 2, 0],"float32"), )
paddle.nn.functional.glu(x=Tensor([4, 6, 2, 0],"float32"), axis=0, )
paddle.nn.functional.glu(x=Tensor([4, 6, 2, 0],"float32"), axis=2, )
paddle.nn.functional.glu(x=Tensor([4, 6, 2, 0],"float64"), )
paddle.nn.functional.glu(x=Tensor([4, 6, 2, 0],"float64"), axis=0, )
paddle.nn.functional.glu(x=Tensor([4, 6, 2, 0],"float64"), axis=2, )
paddle.nn.functional.grid_sample(Tensor([0, 1, 176, 176],"float32"), Tensor([0, 1, 12544, 2],"float32"), align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([0, 1, 176, 176],"float32"), Tensor([0, 1, 37632, 2],"float32"), align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([0, 2, 3, 3],"float64"), Tensor([0, 3, 3, 2],"float64"), mode="bilinear", padding_mode="reflection", align_corners=True, )
paddle.nn.functional.grid_sample(Tensor([0, 256, 64, 64],"float32"), Tensor([0, 64, 64, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=True, )
paddle.nn.functional.grid_sample(Tensor([0, 3, 16, 16],"float32"), Tensor([0, 16, 16, 2],"float32"), mode="bilinear", padding_mode="border", align_corners=True, )
paddle.nn.functional.grid_sample(Tensor([0, 3, 2, 2],"float32"), Tensor([0, 2, 2, 2],"float32"), mode="bilinear", padding_mode="border", align_corners=True, )
paddle.nn.functional.grid_sample(Tensor([0, 3, 256, 256],"float32"), Tensor([0, 256, 256, 2],"float32"), mode="bilinear", padding_mode="reflection", align_corners=True, )
paddle.nn.functional.grid_sample(Tensor([0, 3, 256, 256],"float32"), Tensor([0, 256, 256, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=True, )
paddle.nn.functional.grid_sample(Tensor([0, 32, 20, 20],"float32"), Tensor([0, 476, 4, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([0, 4, 28, 28],"float32"), Tensor([0, 28, 28, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([0, 4, 28, 28],"float32"), Tensor([0, 34, 34, 2],"float32"), mode="nearest", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([0, 4, 280, 350],"float32"), Tensor([0, 280, 350, 2],"float32"), mode="nearest", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([1, 0, 176, 176],"float32"), Tensor([1, 0, 12544, 2],"float32"), align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([1, 0, 176, 176],"float32"), Tensor([1, 0, 37632, 2],"float32"), align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([1, 0, 28, 28],"float32"), Tensor([1, 0, 28, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([1, 0, 28, 28],"float32"), Tensor([1, 0, 34, 2],"float32"), mode="nearest", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([1, 0, 280, 350],"float32"), Tensor([1, 0, 350, 2],"float32"), mode="nearest", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([1, 1, 176, 176],"float32"), Tensor([1, 0, 12544, 2],"float32"), align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([1, 1, 176, 176],"float32"), Tensor([1, 0, 37632, 2],"float32"), align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([1, 1, 176, 176],"float32"), Tensor([1, 1, 0, 2],"float32"), align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([1, 4, 28, 28],"float32"), Tensor([1, 0, 28, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([1, 4, 28, 28],"float32"), Tensor([1, 0, 34, 2],"float32"), mode="nearest", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([1, 4, 28, 28],"float32"), Tensor([1, 28, 0, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([1, 4, 28, 28],"float32"), Tensor([1, 34, 0, 2],"float32"), mode="nearest", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([1, 4, 280, 350],"float32"), Tensor([1, 0, 350, 2],"float32"), mode="nearest", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([1, 4, 280, 350],"float32"), Tensor([1, 280, 0, 2],"float32"), mode="nearest", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([128, 0, 20, 20],"float32"), Tensor([128, 0, 4, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([128, 32, 20, 20],"float32"), Tensor([128, 0, 4, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([128, 32, 20, 20],"float32"), Tensor([128, 476, 0, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([16, 0, 256, 256],"float32"), Tensor([16, 0, 256, 2],"float32"), mode="bilinear", padding_mode="reflection", align_corners=True, )
paddle.nn.functional.grid_sample(Tensor([16, 0, 256, 256],"float32"), Tensor([16, 0, 256, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=True, )
paddle.nn.functional.grid_sample(Tensor([16, 0, 64, 64],"float32"), Tensor([16, 0, 64, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=True, )
paddle.nn.functional.grid_sample(Tensor([16, 256, 64, 64],"float32"), Tensor([16, 0, 64, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=True, )
paddle.nn.functional.grid_sample(Tensor([16, 256, 64, 64],"float32"), Tensor([16, 64, 0, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=True, )
paddle.nn.functional.grid_sample(Tensor([16, 3, 256, 256],"float32"), Tensor([16, 0, 256, 2],"float32"), mode="bilinear", padding_mode="reflection", align_corners=True, )
paddle.nn.functional.grid_sample(Tensor([16, 3, 256, 256],"float32"), Tensor([16, 0, 256, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=True, )
paddle.nn.functional.grid_sample(Tensor([16, 3, 256, 256],"float32"), Tensor([16, 256, 0, 2],"float32"), mode="bilinear", padding_mode="reflection", align_corners=True, )
paddle.nn.functional.grid_sample(Tensor([16, 3, 256, 256],"float32"), Tensor([16, 256, 0, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=True, )
paddle.nn.functional.grid_sample(Tensor([2, 0, 3, 3],"float64"), Tensor([2, 0, 3, 2],"float64"), mode="bilinear", padding_mode="reflection", align_corners=True, )
paddle.nn.functional.grid_sample(Tensor([2, 2, 3, 3],"float64"), Tensor([2, 0, 3, 2],"float64"), mode="bilinear", padding_mode="reflection", align_corners=True, )
paddle.nn.functional.grid_sample(Tensor([2, 2, 3, 3],"float64"), Tensor([2, 3, 0, 2],"float64"), mode="bilinear", padding_mode="reflection", align_corners=True, )
paddle.nn.functional.grid_sample(Tensor([56, 0, 16, 16],"float32"), Tensor([56, 0, 16, 2],"float32"), mode="bilinear", padding_mode="border", align_corners=True, )
paddle.nn.functional.grid_sample(Tensor([56, 0, 2, 2],"float32"), Tensor([56, 0, 2, 2],"float32"), mode="bilinear", padding_mode="border", align_corners=True, )
paddle.nn.functional.grid_sample(Tensor([56, 3, 16, 16],"float32"), Tensor([56, 0, 16, 2],"float32"), mode="bilinear", padding_mode="border", align_corners=True, )
paddle.nn.functional.grid_sample(Tensor([56, 3, 16, 16],"float32"), Tensor([56, 16, 0, 2],"float32"), mode="bilinear", padding_mode="border", align_corners=True, )
paddle.nn.functional.grid_sample(Tensor([56, 3, 2, 2],"float32"), Tensor([56, 0, 2, 2],"float32"), mode="bilinear", padding_mode="border", align_corners=True, )
paddle.nn.functional.grid_sample(Tensor([56, 3, 2, 2],"float32"), Tensor([56, 2, 0, 2],"float32"), mode="bilinear", padding_mode="border", align_corners=True, )
paddle.nn.functional.grid_sample(x=Tensor([0, 64, 80, 94, 311],"float32"), grid=Tensor([0, 280, 376, 25, 3],"float32"), mode="bilinear", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(x=Tensor([4, 0, 80, 94, 311],"float32"), grid=Tensor([4, 0, 376, 25, 3],"float32"), mode="bilinear", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(x=Tensor([4, 64, 80, 94, 311],"float32"), grid=Tensor([4, 0, 376, 25, 3],"float32"), mode="bilinear", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(x=Tensor([4, 64, 80, 94, 311],"float32"), grid=Tensor([4, 280, 0, 25, 3],"float32"), mode="bilinear", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(x=Tensor([4, 64, 80, 94, 311],"float32"), grid=Tensor([4, 280, 376, 0, 3],"float32"), mode="bilinear", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.hardshrink(Tensor([0],"float32"), 0.5, None, )
paddle.nn.functional.hardshrink(Tensor([0],"float32"), -1, None, )
paddle.nn.functional.hardshrink(Tensor([0],"float64"), 0, None, )
paddle.nn.functional.hardshrink(Tensor([0],"float64"), 0.5, None, )
paddle.nn.functional.hardshrink(Tensor([0],"float64"), -1, None, )
paddle.nn.functional.hardshrink(x=Tensor([0],"float32"), )
paddle.nn.functional.hardshrink(x=Tensor([0],"float64"), )
paddle.nn.functional.hardshrink(x=Tensor([0],"float64"), threshold=0, )
paddle.nn.functional.hardshrink(x=Tensor([0],"float64"), threshold=-1, )
paddle.nn.functional.hardsigmoid(Tensor([0, 1024, 1, 1],"float32"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([0, 120, 1, 1],"float32"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([0, 192, 1, 1],"float32"), )
paddle.nn.functional.hardsigmoid(Tensor([0, 2],"float32"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([0, 2],"float64"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([0, 200, 40],"float32"), )
paddle.nn.functional.hardsigmoid(Tensor([0, 384, 1, 1],"float32"), )
paddle.nn.functional.hardsigmoid(Tensor([0, 4096],"float32"), )
paddle.nn.functional.hardsigmoid(Tensor([1, 0, 1, 1],"float32"), )
paddle.nn.functional.hardsigmoid(Tensor([1, 0, 1, 1],"float32"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([1, 1024, 0, 1],"float32"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([1, 1024, 1, 0],"float32"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([1, 120, 0, 1],"float32"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([1, 120, 1, 0],"float32"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([1, 192, 0, 1],"float32"), )
paddle.nn.functional.hardsigmoid(Tensor([1, 192, 1, 0],"float32"), )
paddle.nn.functional.hardsigmoid(Tensor([1, 384, 0, 1],"float32"), )
paddle.nn.functional.hardsigmoid(Tensor([1, 384, 1, 0],"float32"), )
paddle.nn.functional.hardsigmoid(Tensor([2, 0],"float32"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([2, 0],"float64"), name=None, )
paddle.nn.functional.hardsigmoid(Tensor([30, 0, 40],"float32"), )
paddle.nn.functional.hardsigmoid(Tensor([30, 200, 0],"float32"), )
paddle.nn.functional.hardsigmoid(Tensor([300, 0],"float32"), )
paddle.nn.functional.hardswish(Tensor([0, 1, 10, 10],"float32"), )
paddle.nn.functional.hardswish(Tensor([0, 1, 11, 11],"float32"), )
paddle.nn.functional.hardswish(Tensor([0, 1024, 18, 18],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([0, 1024, 19, 19],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([0, 1024],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([0, 200, 40],"float32"), )
paddle.nn.functional.hardswish(Tensor([0, 3, 3],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([0, 3, 3],"float64"), None, )
paddle.nn.functional.hardswish(Tensor([0, 300, 2048],"float32"), )
paddle.nn.functional.hardswish(Tensor([1, 0, 10, 10],"float32"), )
paddle.nn.functional.hardswish(Tensor([1, 0, 11, 11],"float32"), )
paddle.nn.functional.hardswish(Tensor([1, 0, 18, 18],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([1, 0, 19, 19],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([1, 0],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([1, 1, 0, 10],"float32"), )
paddle.nn.functional.hardswish(Tensor([1, 1, 0, 11],"float32"), )
paddle.nn.functional.hardswish(Tensor([1, 1, 10, 0],"float32"), )
paddle.nn.functional.hardswish(Tensor([1, 1, 11, 0],"float32"), )
paddle.nn.functional.hardswish(Tensor([1, 1024, 0, 18],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([1, 1024, 0, 19],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([1, 1024, 18, 0],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([1, 1024, 19, 0],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([2, 0, 2048],"float32"), )
paddle.nn.functional.hardswish(Tensor([2, 0],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([2, 300, 0],"float32"), )
paddle.nn.functional.hardswish(Tensor([3, 0, 3],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([3, 0, 3],"float64"), None, )
paddle.nn.functional.hardswish(Tensor([3, 3, 0],"float32"), None, )
paddle.nn.functional.hardswish(Tensor([3, 3, 0],"float64"), None, )
paddle.nn.functional.hardswish(Tensor([30, 0, 40],"float32"), )
paddle.nn.functional.hardswish(Tensor([30, 200, 0],"float32"), )
paddle.nn.functional.hardswish(x=Tensor([0, 2, 4],"float64"), )
paddle.nn.functional.hardswish(x=Tensor([0, 4],"float32"), )
paddle.nn.functional.hardswish(x=Tensor([0, 4],"float64"), )
paddle.nn.functional.hardswish(x=Tensor([2, 0],"float32"), )
paddle.nn.functional.hardswish(x=Tensor([2, 0],"float64"), )
paddle.nn.functional.hardswish(x=Tensor([4, 0, 4],"float64"), )
paddle.nn.functional.hardswish(x=Tensor([4, 2, 0],"float64"), )
paddle.nn.functional.hardtanh(Tensor([0, 20, 1],"float32"), -1.0, 1.0, )
paddle.nn.functional.hardtanh(Tensor([0, 3, 3],"float64"), 0, 0, None, )
paddle.nn.functional.hardtanh(Tensor([0, 3, 3],"float64"), 0, 1.3, None, )
paddle.nn.functional.hardtanh(Tensor([0, 3, 3],"float64"), 1, 1, None, )
paddle.nn.functional.hardtanh(Tensor([0, 3, 3],"float64"), 2.3, 3.5, None, )
paddle.nn.functional.hardtanh(Tensor([0, 3, 3],"float64"), -3.2, -3.2, None, )
paddle.nn.functional.hardtanh(Tensor([0, 3, 3],"float64"), -3.4, 0, None, )
paddle.nn.functional.hardtanh(Tensor([0],"float32"), -1.0, 1.0, None, )
paddle.nn.functional.hardtanh(Tensor([0],"float64"), -1.0, 1.0, None, )
paddle.nn.functional.hardtanh(Tensor([10, 0, 1],"float32"), -1.0, 1.0, )
paddle.nn.functional.hardtanh(Tensor([10, 20, 0],"float32"), -1.0, 1.0, )
paddle.nn.functional.hardtanh(Tensor([3, 0, 3],"float64"), 0, 0, None, )
paddle.nn.functional.hardtanh(Tensor([3, 0, 3],"float64"), 0, 1.3, None, )
paddle.nn.functional.hardtanh(Tensor([3, 0, 3],"float64"), 1, 1, None, )
paddle.nn.functional.hardtanh(Tensor([3, 0, 3],"float64"), 2.3, 3.5, None, )
paddle.nn.functional.hardtanh(Tensor([3, 0, 3],"float64"), -3.2, -3.2, None, )
paddle.nn.functional.hardtanh(Tensor([3, 0, 3],"float64"), -3.4, 0, None, )
paddle.nn.functional.hardtanh(Tensor([3, 3, 0],"float64"), 0, 0, None, )
paddle.nn.functional.hardtanh(Tensor([3, 3, 0],"float64"), 0, 1.3, None, )
paddle.nn.functional.hardtanh(Tensor([3, 3, 0],"float64"), 1, 1, None, )
paddle.nn.functional.hardtanh(Tensor([3, 3, 0],"float64"), 2.3, 3.5, None, )
paddle.nn.functional.hardtanh(Tensor([3, 3, 0],"float64"), -3.2, -3.2, None, )
paddle.nn.functional.hardtanh(Tensor([3, 3, 0],"float64"), -3.4, 0, None, )
paddle.nn.functional.hardtanh(x=Tensor([0, 3, 3],"float64"), max=0, min=0, )
paddle.nn.functional.hardtanh(x=Tensor([0, 3, 3],"float64"), max=0, min=-3.4, )
paddle.nn.functional.hardtanh(x=Tensor([0, 3, 3],"float64"), max=1, min=1, )
paddle.nn.functional.hardtanh(x=Tensor([0, 3, 3],"float64"), max=1.3, min=0, )
paddle.nn.functional.hardtanh(x=Tensor([0, 3, 3],"float64"), max=-3.2, min=-3.2, )
paddle.nn.functional.hardtanh(x=Tensor([0, 3, 3],"float64"), max=3.5, min=2.3, )
paddle.nn.functional.hardtanh(x=Tensor([0],"float32"), )
paddle.nn.functional.hardtanh(x=Tensor([0],"float64"), )
paddle.nn.functional.hardtanh(x=Tensor([3, 0, 3],"float64"), max=0, min=0, )
paddle.nn.functional.hardtanh(x=Tensor([3, 0, 3],"float64"), max=0, min=-3.4, )
paddle.nn.functional.hardtanh(x=Tensor([3, 0, 3],"float64"), max=1, min=1, )
paddle.nn.functional.hardtanh(x=Tensor([3, 0, 3],"float64"), max=1.3, min=0, )
paddle.nn.functional.hardtanh(x=Tensor([3, 0, 3],"float64"), max=-3.2, min=-3.2, )
paddle.nn.functional.hardtanh(x=Tensor([3, 0, 3],"float64"), max=3.5, min=2.3, )
paddle.nn.functional.hardtanh(x=Tensor([3, 3, 0],"float64"), max=0, min=0, )
paddle.nn.functional.hardtanh(x=Tensor([3, 3, 0],"float64"), max=0, min=-3.4, )
paddle.nn.functional.hardtanh(x=Tensor([3, 3, 0],"float64"), max=1, min=1, )
paddle.nn.functional.hardtanh(x=Tensor([3, 3, 0],"float64"), max=1.3, min=0, )
paddle.nn.functional.hardtanh(x=Tensor([3, 3, 0],"float64"), max=-3.2, min=-3.2, )
paddle.nn.functional.hardtanh(x=Tensor([3, 3, 0],"float64"), max=3.5, min=2.3, )
paddle.nn.functional.layer_norm(normalized_shape=tuple(2,2,3,), x=Tensor([0, 2, 2, 3],"float32"), )
paddle.nn.functional.layer_norm(normalized_shape=tuple(2,2,3,), x=Tensor([0, 2, 2, 3],"float32"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(normalized_shape=tuple(2,2,3,), x=Tensor([0, 2, 2, 3],"float32"), epsilon=1e-05, weight=None, bias=None, )
paddle.nn.functional.layer_norm(normalized_shape=tuple(2,2,3,), x=Tensor([0, 2, 2, 3],"float64"), )
paddle.nn.functional.layer_norm(normalized_shape=tuple(2,2,3,), x=Tensor([0, 2, 2, 3],"float64"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(normalized_shape=tuple(2,2,3,), x=Tensor([0, 2, 2, 3],"float64"), epsilon=1e-05, weight=None, bias=None, )
paddle.nn.functional.layer_norm(normalized_shape=tuple(2,3,), x=Tensor([0, 2, 3],"float32"), )
paddle.nn.functional.layer_norm(normalized_shape=tuple(2,3,), x=Tensor([0, 2, 3],"float32"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(normalized_shape=tuple(2,3,), x=Tensor([0, 2, 3],"float64"), )
paddle.nn.functional.layer_norm(normalized_shape=tuple(2,3,), x=Tensor([0, 2, 3],"float64"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(normalized_shape=tuple(3,), x=Tensor([0, 3],"float32"), )
paddle.nn.functional.layer_norm(normalized_shape=tuple(3,), x=Tensor([0, 3],"float32"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(normalized_shape=tuple(3,), x=Tensor([0, 3],"float64"), )
paddle.nn.functional.layer_norm(normalized_shape=tuple(3,), x=Tensor([0, 3],"float64"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([0, 10, 4, 4],"float32"), list[10,4,4,], )
paddle.nn.functional.layer_norm(Tensor([0, 10, 4, 4],"float32"), tuple(10,4,4,), )
paddle.nn.functional.layer_norm(Tensor([0, 10, 60, 30],"float32"), list[10,60,30,], weight=None, bias=None, epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([0, 10, 60, 70],"float32"), list[10,60,70,], weight=None, bias=None, epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([0, 100],"float32"), list[100,], weight=Tensor([100],"float32"), bias=Tensor([100],"float32"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([0, 128, 256],"float32"), list[256,], weight=Tensor([256],"float32"), bias=Tensor([256],"float32"), epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([0, 129],"float32"), list[129,], Tensor([129],"float32"), None, )
paddle.nn.functional.layer_norm(Tensor([0, 20],"float16"), list[20,], Tensor([20],"float16"), Tensor([20],"float16"), )
paddle.nn.functional.layer_norm(Tensor([0, 32, 128],"float32"), list[32,128,], )
paddle.nn.functional.layer_norm(Tensor([0, 4],"float32"), list[4,], None, None, )
paddle.nn.functional.layer_norm(Tensor([0, 4],"float32"), list[4,], Tensor([4],"float32"), Tensor([4],"float32"), )
paddle.nn.functional.layer_norm(Tensor([0, 512],"float32"), list[512,], None, None, )
paddle.nn.functional.layer_norm(Tensor([0, 6, 6, 3],"float32"), list[6,6,3,], weight=None, bias=None, epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([0, 6, 6, 3],"float64"), list[6,6,3,], weight=None, bias=None, epsilon=1e-05, )
paddle.nn.functional.layer_norm(Tensor([0, 64, 128],"float32"), list[64,128,], None, None, )
paddle.nn.functional.layer_norm(Tensor([0, 64, 64],"float32"), list[64,], None, None, )
paddle.nn.functional.layer_norm(Tensor([0, 64, 64],"float32"), list[64,], Tensor([64],"float32"), Tensor([64],"float32"), )
paddle.nn.functional.layer_norm(Tensor([0, 768],"float32"), list[768,], None, None, )
paddle.nn.functional.layer_norm(Tensor([128, 0, 64],"float32"), list[64,], None, None, )
paddle.nn.functional.layer_norm(Tensor([128, 0, 64],"float32"), list[64,], Tensor([64],"float32"), Tensor([64],"float32"), )
paddle.nn.functional.layer_norm(Tensor([8, 0, 256],"float32"), list[256,], weight=Tensor([256],"float32"), bias=Tensor([256],"float32"), epsilon=1e-05, )
paddle.nn.functional.leaky_relu(Tensor([0, 1, 16, 16],"float32"), 0.2, )
paddle.nn.functional.leaky_relu(Tensor([0, 1, 32, 32],"float32"), 0, )
paddle.nn.functional.leaky_relu(Tensor([0, 1024, 14, 14],"float16"), )
paddle.nn.functional.leaky_relu(Tensor([0, 1024, 14, 14],"float32"), )
paddle.nn.functional.leaky_relu(Tensor([0, 1024, 19, 34],"float16"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([0, 1024, 19, 34],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([0, 1024, 7, 7],"float32"), 0.01, None, )
paddle.nn.functional.leaky_relu(Tensor([0, 1024, 8, 8],"float32"), 0.2, )
paddle.nn.functional.leaky_relu(Tensor([0, 128, 112],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([0, 128, 128, 128],"float32"), 0, )
paddle.nn.functional.leaky_relu(Tensor([0, 128, 256, 256],"float32"), negative_slope=0.2, )
paddle.nn.functional.leaky_relu(Tensor([0, 128, 28, 28],"float32"), 0.01, None, )
paddle.nn.functional.leaky_relu(Tensor([0, 128, 64, 64],"float32"), 0.2, None, )
paddle.nn.functional.leaky_relu(Tensor([0, 16, 32],"float32"), 0.1, None, )
paddle.nn.functional.leaky_relu(Tensor([0, 20, 1],"float32"), 0.01, )
paddle.nn.functional.leaky_relu(Tensor([0, 256, 128, 128],"float32"), negative_slope=0.2, )
paddle.nn.functional.leaky_relu(Tensor([0, 256, 28],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([0, 256, 32, 32],"float32"), 0.2, None, )
paddle.nn.functional.leaky_relu(Tensor([0, 3, 3],"float32"), 0.01, None, )
paddle.nn.functional.leaky_relu(Tensor([0, 3, 3],"float64"), 0, None, )
paddle.nn.functional.leaky_relu(Tensor([0, 3, 3],"float64"), 0.01, None, )
paddle.nn.functional.leaky_relu(Tensor([0, 3, 3],"float64"), -1, None, )
paddle.nn.functional.leaky_relu(Tensor([0, 32, 1792],"float32"), )
paddle.nn.functional.leaky_relu(Tensor([0, 512],"float32"), negative_slope=0.2, )
paddle.nn.functional.leaky_relu(Tensor([0, 64, 16, 16],"float16"), 0.1, None, )
paddle.nn.functional.leaky_relu(Tensor([0, 64, 16, 16],"float32"), 0.1, None, )
paddle.nn.functional.leaky_relu(Tensor([0],"float32"), 0.2, )
paddle.nn.functional.leaky_relu(Tensor([1, 0, 112],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([1, 0, 128, 128],"float32"), 0, )
paddle.nn.functional.leaky_relu(Tensor([1, 0, 128, 128],"float32"), negative_slope=0.2, )
paddle.nn.functional.leaky_relu(Tensor([1, 0, 16, 16],"float32"), 0.2, )
paddle.nn.functional.leaky_relu(Tensor([1, 0, 1792],"float32"), )
paddle.nn.functional.leaky_relu(Tensor([1, 0, 256, 256],"float32"), negative_slope=0.2, )
paddle.nn.functional.leaky_relu(Tensor([1, 0, 28],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([1, 0, 32, 32],"float32"), 0, )
paddle.nn.functional.leaky_relu(Tensor([1, 0, 32, 32],"float32"), 0.2, None, )
paddle.nn.functional.leaky_relu(Tensor([1, 0, 64, 64],"float32"), 0.2, None, )
paddle.nn.functional.leaky_relu(Tensor([1, 0, 8, 8],"float32"), 0.2, )
paddle.nn.functional.leaky_relu(Tensor([1, 0],"float32"), negative_slope=0.2, )
paddle.nn.functional.leaky_relu(Tensor([1, 1, 0, 16],"float32"), 0.2, )
paddle.nn.functional.leaky_relu(Tensor([1, 1, 0, 32],"float32"), 0, )
paddle.nn.functional.leaky_relu(Tensor([1, 1, 16, 0],"float32"), 0.2, )
paddle.nn.functional.leaky_relu(Tensor([1, 1, 32, 0],"float32"), 0, )
paddle.nn.functional.leaky_relu(Tensor([1, 1024, 0, 8],"float32"), 0.2, )
paddle.nn.functional.leaky_relu(Tensor([1, 1024, 8, 0],"float32"), 0.2, )
paddle.nn.functional.leaky_relu(Tensor([1, 128, 0, 128],"float32"), 0, )
paddle.nn.functional.leaky_relu(Tensor([1, 128, 0, 256],"float32"), negative_slope=0.2, )
paddle.nn.functional.leaky_relu(Tensor([1, 128, 0, 64],"float32"), 0.2, None, )
paddle.nn.functional.leaky_relu(Tensor([1, 128, 0],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([1, 128, 128, 0],"float32"), 0, )
paddle.nn.functional.leaky_relu(Tensor([1, 128, 256, 0],"float32"), negative_slope=0.2, )
paddle.nn.functional.leaky_relu(Tensor([1, 128, 64, 0],"float32"), 0.2, None, )
paddle.nn.functional.leaky_relu(Tensor([1, 256, 0, 128],"float32"), negative_slope=0.2, )
paddle.nn.functional.leaky_relu(Tensor([1, 256, 0, 32],"float32"), 0.2, None, )
paddle.nn.functional.leaky_relu(Tensor([1, 256, 0],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([1, 256, 128, 0],"float32"), negative_slope=0.2, )
paddle.nn.functional.leaky_relu(Tensor([1, 256, 32, 0],"float32"), 0.2, None, )
paddle.nn.functional.leaky_relu(Tensor([1, 32, 0],"float32"), )
paddle.nn.functional.leaky_relu(Tensor([10, 0, 1],"float32"), 0.01, )
paddle.nn.functional.leaky_relu(Tensor([10, 0, 3],"float64"), -1, None, )
paddle.nn.functional.leaky_relu(Tensor([10, 20, 0],"float32"), 0.01, )
paddle.nn.functional.leaky_relu(Tensor([10, 3, 0],"float64"), -1, None, )
paddle.nn.functional.leaky_relu(Tensor([12, 0, 19, 34],"float16"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([12, 0, 19, 34],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([12, 1024, 0, 34],"float16"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([12, 1024, 0, 34],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([12, 1024, 19, 0],"float16"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([12, 1024, 19, 0],"float32"), 0.1, )
paddle.nn.functional.leaky_relu(Tensor([128, 0, 14, 14],"float16"), )
paddle.nn.functional.leaky_relu(Tensor([128, 0, 14, 14],"float32"), )
paddle.nn.functional.leaky_relu(Tensor([128, 1024, 0, 14],"float16"), )
paddle.nn.functional.leaky_relu(Tensor([128, 1024, 0, 14],"float32"), )
paddle.nn.functional.leaky_relu(Tensor([128, 1024, 14, 0],"float16"), )
paddle.nn.functional.leaky_relu(Tensor([128, 1024, 14, 0],"float32"), )
paddle.nn.functional.leaky_relu(Tensor([2, 0, 1792],"float32"), )
paddle.nn.functional.leaky_relu(Tensor([2, 32, 0],"float32"), )
paddle.nn.functional.leaky_relu(Tensor([3, 0, 3],"float32"), 0.01, None, )
paddle.nn.functional.leaky_relu(Tensor([3, 0, 3],"float64"), 0, None, )
paddle.nn.functional.leaky_relu(Tensor([3, 0, 3],"float64"), 0.01, None, )
paddle.nn.functional.leaky_relu(Tensor([3, 3, 0],"float32"), 0.01, None, )
paddle.nn.functional.leaky_relu(Tensor([3, 3, 0],"float64"), 0, None, )
paddle.nn.functional.leaky_relu(Tensor([3, 3, 0],"float64"), 0.01, None, )
paddle.nn.functional.leaky_relu(Tensor([320, 0, 16, 16],"float16"), 0.1, None, )
paddle.nn.functional.leaky_relu(Tensor([320, 0, 16, 16],"float32"), 0.1, None, )
paddle.nn.functional.leaky_relu(Tensor([320, 64, 0, 16],"float16"), 0.1, None, )
paddle.nn.functional.leaky_relu(Tensor([320, 64, 0, 16],"float32"), 0.1, None, )
paddle.nn.functional.leaky_relu(Tensor([320, 64, 16, 0],"float16"), 0.1, None, )
paddle.nn.functional.leaky_relu(Tensor([320, 64, 16, 0],"float32"), 0.1, None, )
paddle.nn.functional.leaky_relu(Tensor([4, 0],"float32"), negative_slope=0.2, )
paddle.nn.functional.leaky_relu(Tensor([8, 0, 28, 28],"float32"), 0.01, None, )
paddle.nn.functional.leaky_relu(Tensor([8, 0, 32],"float32"), 0.1, None, )
paddle.nn.functional.leaky_relu(Tensor([8, 0, 7, 7],"float32"), 0.01, None, )
paddle.nn.functional.leaky_relu(Tensor([8, 1024, 0, 7],"float32"), 0.01, None, )
paddle.nn.functional.leaky_relu(Tensor([8, 1024, 7, 0],"float32"), 0.01, None, )
paddle.nn.functional.leaky_relu(Tensor([8, 128, 0, 28],"float32"), 0.01, None, )
paddle.nn.functional.leaky_relu(Tensor([8, 128, 28, 0],"float32"), 0.01, None, )
paddle.nn.functional.leaky_relu(Tensor([8, 16, 0],"float32"), 0.1, None, )
paddle.nn.functional.leaky_relu(x=Tensor([0],"float32"), )
paddle.nn.functional.leaky_relu(x=Tensor([0],"float64"), )
paddle.nn.functional.leaky_relu(x=Tensor([0],"float64"), negative_slope=0, )
paddle.nn.functional.leaky_relu(x=Tensor([0],"float64"), negative_slope=-100, )
paddle.nn.functional.log_sigmoid(Tensor([0, 1],"float16"), )
paddle.nn.functional.log_sigmoid(Tensor([0, 10, 10],"float32"), None, )
paddle.nn.functional.log_sigmoid(Tensor([0, 10, 10],"float64"), None, )
paddle.nn.functional.log_sigmoid(Tensor([0, 5],"float64"), )
paddle.nn.functional.log_sigmoid(Tensor([0],"float32"), )
paddle.nn.functional.log_sigmoid(Tensor([0],"float64"), )
paddle.nn.functional.log_sigmoid(Tensor([10, 0, 10],"float32"), None, )
paddle.nn.functional.log_sigmoid(Tensor([10, 0, 10],"float64"), None, )
paddle.nn.functional.log_sigmoid(Tensor([10, 10, 0],"float32"), None, )
paddle.nn.functional.log_sigmoid(Tensor([10, 10, 0],"float64"), None, )
paddle.nn.functional.log_sigmoid(Tensor([2, 0],"float16"), )
paddle.nn.functional.log_sigmoid(Tensor([5, 0],"float64"), )
paddle.nn.functional.log_sigmoid(x=Tensor([0, 10, 10],"float32"), )
paddle.nn.functional.log_sigmoid(x=Tensor([0, 10, 10],"float64"), )
paddle.nn.functional.log_sigmoid(x=Tensor([0],"float32"), )
paddle.nn.functional.log_sigmoid(x=Tensor([0],"float64"), )
paddle.nn.functional.log_sigmoid(x=Tensor([10, 0, 10],"float32"), )
paddle.nn.functional.log_sigmoid(x=Tensor([10, 0, 10],"float64"), )
paddle.nn.functional.log_sigmoid(x=Tensor([10, 10, 0],"float32"), )
paddle.nn.functional.log_sigmoid(x=Tensor([10, 10, 0],"float64"), )
paddle.nn.functional.mish(Tensor([0, 1024, 10, 10],"float16"), )
paddle.nn.functional.mish(Tensor([0, 1024, 10, 10],"float32"), )
paddle.nn.functional.mish(Tensor([0, 16],"float32"), name="mish", )
paddle.nn.functional.mish(Tensor([12, 0, 10, 10],"float16"), )
paddle.nn.functional.mish(Tensor([12, 0, 10, 10],"float32"), )
paddle.nn.functional.mish(Tensor([12, 1024, 0, 10],"float16"), )
paddle.nn.functional.mish(Tensor([12, 1024, 0, 10],"float32"), )
paddle.nn.functional.mish(Tensor([12, 1024, 10, 0],"float16"), )
paddle.nn.functional.mish(Tensor([12, 1024, 10, 0],"float32"), )
paddle.nn.functional.mish(Tensor([2, 0],"float32"), name="mish", )
paddle.nn.functional.normalize(Tensor([1, 0, 16, 16],"float32"), axis=1, )
paddle.nn.functional.normalize(Tensor([1, 0, 32, 32],"float32"), axis=1, )
paddle.nn.functional.normalize(x=Tensor([4, 5, 6, 0],"float64"), p=4, axis=3, )
paddle.nn.functional.pairwise_distance(Tensor([0, 100],"float32"), Tensor([0, 100],"float32"), 1, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([0, 100],"float32"), Tensor([0, 100],"float32"), -1, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([0, 100],"float32"), Tensor([0, 100],"float32"), 1, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([0, 100],"float32"), Tensor([0, 100],"float32"), -1, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([0, 100],"float32"), Tensor([0, 100],"float32"), 2, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([0, 100],"float32"), Tensor([0, 100],"float32"), 2, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([0, 100],"float32"), Tensor([0, 100],"float32"), math.inf, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([0, 100],"float32"), Tensor([0, 100],"float32"), -math.inf, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([0, 100],"float32"), Tensor([0, 100],"float32"), math.inf, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([0, 100],"float32"), Tensor([0, 100],"float32"), -math.inf, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([0, 100],"float64"), Tensor([0, 100],"float64"), 1, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([0, 100],"float64"), Tensor([0, 100],"float64"), -1, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([0, 100],"float64"), Tensor([0, 100],"float64"), 1, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([0, 100],"float64"), Tensor([0, 100],"float64"), -1, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([0, 100],"float64"), Tensor([0, 100],"float64"), 2, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([0, 100],"float64"), Tensor([0, 100],"float64"), 2, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([0, 100],"float64"), Tensor([0, 100],"float64"), math.inf, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([0, 100],"float64"), Tensor([0, 100],"float64"), -math.inf, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([0, 100],"float64"), Tensor([0, 100],"float64"), math.inf, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([0, 100],"float64"), Tensor([0, 100],"float64"), -math.inf, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([0],"float32"), Tensor([0],"float32"), )
paddle.nn.functional.pairwise_distance(Tensor([0],"float32"), Tensor([0],"float32"), 1, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([0],"float32"), Tensor([0],"float32"), 1, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([0],"float32"), Tensor([0],"float32"), 2, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([0],"float32"), Tensor([0],"float32"), 2, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([0],"float64"), Tensor([0],"float64"), 1, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([0],"float64"), Tensor([0],"float64"), 1, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([0],"float64"), Tensor([0],"float64"), 2, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([0],"float64"), Tensor([0],"float64"), 2, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([100, 0],"float32"), Tensor([100, 0],"float32"), 1, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([100, 0],"float32"), Tensor([100, 0],"float32"), 1, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([100, 0],"float32"), Tensor([100, 0],"float32"), 2, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([100, 0],"float32"), Tensor([100, 0],"float32"), 2, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([100, 0],"float32"), Tensor([100, 0],"float32"), 2.0, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([100, 0],"float64"), Tensor([100, 0],"float64"), 1, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([100, 0],"float64"), Tensor([100, 0],"float64"), 1, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([100, 0],"float64"), Tensor([100, 0],"float64"), 2, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([100, 0],"float64"), Tensor([100, 0],"float64"), 2, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(x=Tensor([100, 0],"float32"), y=Tensor([100, 0],"float32"), p=2.0, epsilon=1e-06, keepdim=False, )
paddle.nn.functional.relu(Tensor([0, 1, 37],"float32"), )
paddle.nn.functional.relu(Tensor([0, 1, 4],"float32"), )
paddle.nn.functional.relu(Tensor([0, 1],"float32"), )
paddle.nn.functional.relu(Tensor([0, 10],"float16"), None, )
paddle.nn.functional.relu(Tensor([0, 10],"float32"), )
paddle.nn.functional.relu(Tensor([0, 1024, 1, 7, 7],"float32"), None, )
paddle.nn.functional.relu(Tensor([0, 1024, 10, 26],"float32"), None, )
paddle.nn.functional.relu(Tensor([0, 1024, 100, 152],"float32"), )
paddle.nn.functional.relu(Tensor([0, 1024, 12, 32],"float32"), None, )
paddle.nn.functional.relu(Tensor([0, 1024, 136, 88],"float32"), )
paddle.nn.functional.relu(Tensor([0, 1024, 2, 14, 14],"float32"), None, )
paddle.nn.functional.relu(Tensor([0, 1024, 4, 14, 14],"float32"), )
paddle.nn.functional.relu(Tensor([0, 11, 256],"float32"), None, )
paddle.nn.functional.relu(Tensor([0, 1100, 256],"float32"), None, )
paddle.nn.functional.relu(Tensor([0, 128, 32, 14, 14],"float32"), )
paddle.nn.functional.relu(Tensor([0, 32],"float32"), None, )
paddle.nn.functional.relu(Tensor([0],"float32"), )
paddle.nn.functional.relu(Tensor([1, 0, 10, 26],"float32"), None, )
paddle.nn.functional.relu(Tensor([1, 0, 100, 152],"float32"), )
paddle.nn.functional.relu(Tensor([1, 0, 12, 32],"float32"), None, )
paddle.nn.functional.relu(Tensor([1, 0, 136, 88],"float32"), )
paddle.nn.functional.relu(Tensor([1, 0, 256],"float32"), None, )
paddle.nn.functional.relu(Tensor([1, 0, 37],"float32"), )
paddle.nn.functional.relu(Tensor([1, 0, 4],"float32"), )
paddle.nn.functional.relu(Tensor([1, 0],"float16"), None, )
paddle.nn.functional.relu(Tensor([1, 0],"float32"), )
paddle.nn.functional.relu(Tensor([1, 0],"float32"), None, )
paddle.nn.functional.relu(Tensor([1, 1, 0],"float32"), )
paddle.nn.functional.relu(Tensor([1, 1024, 0, 152],"float32"), )
paddle.nn.functional.relu(Tensor([1, 1024, 0, 26],"float32"), None, )
paddle.nn.functional.relu(Tensor([1, 1024, 0, 32],"float32"), None, )
paddle.nn.functional.relu(Tensor([1, 1024, 0, 88],"float32"), )
paddle.nn.functional.relu(Tensor([1, 1024, 10, 0],"float32"), None, )
paddle.nn.functional.relu(Tensor([1, 1024, 100, 0],"float32"), )
paddle.nn.functional.relu(Tensor([1, 1024, 12, 0],"float32"), None, )
paddle.nn.functional.relu(Tensor([1, 1024, 136, 0],"float32"), )
paddle.nn.functional.relu(Tensor([1, 11, 0],"float32"), None, )
paddle.nn.functional.relu(Tensor([1, 1100, 0],"float32"), None, )
paddle.nn.functional.relu(Tensor([8, 0, 1, 7, 7],"float32"), None, )
paddle.nn.functional.relu(Tensor([8, 0, 2, 14, 14],"float32"), None, )
paddle.nn.functional.relu(Tensor([8, 0, 32, 14, 14],"float32"), )
paddle.nn.functional.relu(Tensor([8, 0, 4, 14, 14],"float32"), )
paddle.nn.functional.relu(Tensor([8, 1024, 0, 14, 14],"float32"), )
paddle.nn.functional.relu(Tensor([8, 1024, 0, 14, 14],"float32"), None, )
paddle.nn.functional.relu(Tensor([8, 1024, 0, 7, 7],"float32"), None, )
paddle.nn.functional.relu(Tensor([8, 1024, 1, 0, 7],"float32"), None, )
paddle.nn.functional.relu(Tensor([8, 1024, 1, 7, 0],"float32"), None, )
paddle.nn.functional.relu(Tensor([8, 1024, 2, 0, 14],"float32"), None, )
paddle.nn.functional.relu(Tensor([8, 1024, 2, 14, 0],"float32"), None, )
paddle.nn.functional.relu(Tensor([8, 1024, 4, 0, 14],"float32"), )
paddle.nn.functional.relu(Tensor([8, 1024, 4, 14, 0],"float32"), )
paddle.nn.functional.relu(Tensor([8, 128, 0, 14, 14],"float32"), )
paddle.nn.functional.relu(Tensor([8, 128, 32, 0, 14],"float32"), )
paddle.nn.functional.relu(Tensor([8, 128, 32, 14, 0],"float32"), )
paddle.nn.functional.relu(x=Tensor([0, 10, 10],"float64"), )
paddle.nn.functional.relu(x=Tensor([0, 3, 3],"float32"), )
paddle.nn.functional.relu(x=Tensor([10, 0, 10],"float64"), )
paddle.nn.functional.relu(x=Tensor([10, 10, 0],"float64"), )
paddle.nn.functional.relu(x=Tensor([3, 0, 3],"float32"), )
paddle.nn.functional.relu(x=Tensor([3, 3, 0],"float32"), )
paddle.nn.functional.relu6(Tensor([0, 1280, 7, 7],"float32"), )
paddle.nn.functional.relu6(Tensor([0, 1280, 7, 7],"float32"), None, )
paddle.nn.functional.relu6(Tensor([0, 144, 28, 28],"float32"), )
paddle.nn.functional.relu6(Tensor([0, 144, 28, 28],"float32"), None, )
paddle.nn.functional.relu6(Tensor([0, 16, 32],"float32"), None, )
paddle.nn.functional.relu6(Tensor([0, 3, 3],"float64"), None, )
paddle.nn.functional.relu6(Tensor([0, 300, 2048],"float32"), )
paddle.nn.functional.relu6(Tensor([0],"float32"), None, )
paddle.nn.functional.relu6(Tensor([0],"float64"), None, )
paddle.nn.functional.relu6(Tensor([1, 0, 28, 28],"float32"), )
paddle.nn.functional.relu6(Tensor([1, 0, 28, 28],"float32"), None, )
paddle.nn.functional.relu6(Tensor([1, 0, 7, 7],"float32"), )
paddle.nn.functional.relu6(Tensor([1, 0, 7, 7],"float32"), None, )
paddle.nn.functional.relu6(Tensor([1, 1280, 0, 7],"float32"), )
paddle.nn.functional.relu6(Tensor([1, 1280, 0, 7],"float32"), None, )
paddle.nn.functional.relu6(Tensor([1, 1280, 7, 0],"float32"), )
paddle.nn.functional.relu6(Tensor([1, 1280, 7, 0],"float32"), None, )
paddle.nn.functional.relu6(Tensor([1, 144, 0, 28],"float32"), )
paddle.nn.functional.relu6(Tensor([1, 144, 0, 28],"float32"), None, )
paddle.nn.functional.relu6(Tensor([1, 144, 28, 0],"float32"), )
paddle.nn.functional.relu6(Tensor([1, 144, 28, 0],"float32"), None, )
paddle.nn.functional.relu6(Tensor([2, 0, 2048],"float32"), )
paddle.nn.functional.relu6(Tensor([2, 300, 0],"float32"), )
paddle.nn.functional.relu6(Tensor([3, 0, 3],"float64"), None, )
paddle.nn.functional.relu6(Tensor([3, 3, 0],"float64"), None, )
paddle.nn.functional.relu6(Tensor([8, 0, 32],"float32"), None, )
paddle.nn.functional.relu6(Tensor([8, 16, 0],"float32"), None, )
paddle.nn.functional.relu6(x=Tensor([0, 3, 3],"float64"), )
paddle.nn.functional.relu6(x=Tensor([0],"float32"), )
paddle.nn.functional.relu6(x=Tensor([0],"float64"), )
paddle.nn.functional.relu6(x=Tensor([3, 0, 3],"float64"), )
paddle.nn.functional.relu6(x=Tensor([3, 3, 0],"float64"), )
paddle.nn.functional.rrelu(Tensor([0, 2, 3, 4],"float64"), 0.05, 0.25, training=False, )
paddle.nn.functional.rrelu(Tensor([0, 2, 3, 4],"float64"), 0.1, 0.33, training=False, )
paddle.nn.functional.rrelu(Tensor([0, 3, 4, 5],"float16"), 0.1, 0.3, training=False, )
paddle.nn.functional.rrelu(Tensor([0, 3, 4, 5],"float16"), 0.3, 0.300000009, training=True, )
paddle.nn.functional.rrelu(Tensor([0, 3, 4, 5],"float32"), 0.1, 0.3, training=False, )
paddle.nn.functional.rrelu(Tensor([0, 3, 4, 5],"float32"), 0.3, 0.300000009, training=True, )
paddle.nn.functional.rrelu(Tensor([1, 0, 3, 4],"float64"), 0.05, 0.25, training=False, )
paddle.nn.functional.rrelu(Tensor([1, 0, 3, 4],"float64"), 0.1, 0.33, training=False, )
paddle.nn.functional.rrelu(Tensor([1, 2, 0, 4],"float64"), 0.05, 0.25, training=False, )
paddle.nn.functional.rrelu(Tensor([1, 2, 0, 4],"float64"), 0.1, 0.33, training=False, )
paddle.nn.functional.rrelu(Tensor([1, 2, 3, 0],"float64"), 0.05, 0.25, training=False, )
paddle.nn.functional.rrelu(Tensor([1, 2, 3, 0],"float64"), 0.1, 0.33, training=False, )
paddle.nn.functional.rrelu(Tensor([2, 0, 4, 5],"float16"), 0.1, 0.3, training=False, )
paddle.nn.functional.rrelu(Tensor([2, 0, 4, 5],"float16"), 0.3, 0.300000009, training=True, )
paddle.nn.functional.rrelu(Tensor([2, 0, 4, 5],"float32"), 0.1, 0.3, training=False, )
paddle.nn.functional.rrelu(Tensor([2, 0, 4, 5],"float32"), 0.3, 0.300000009, training=True, )
paddle.nn.functional.rrelu(Tensor([2, 3, 0, 5],"float16"), 0.1, 0.3, training=False, )
paddle.nn.functional.rrelu(Tensor([2, 3, 0, 5],"float16"), 0.3, 0.300000009, training=True, )
paddle.nn.functional.rrelu(Tensor([2, 3, 0, 5],"float32"), 0.1, 0.3, training=False, )
paddle.nn.functional.rrelu(Tensor([2, 3, 0, 5],"float32"), 0.3, 0.300000009, training=True, )
paddle.nn.functional.rrelu(Tensor([2, 3, 4, 0],"float16"), 0.1, 0.3, training=False, )
paddle.nn.functional.rrelu(Tensor([2, 3, 4, 0],"float16"), 0.3, 0.300000009, training=True, )
paddle.nn.functional.rrelu(Tensor([2, 3, 4, 0],"float32"), 0.1, 0.3, training=False, )
paddle.nn.functional.rrelu(Tensor([2, 3, 4, 0],"float32"), 0.3, 0.300000009, training=True, )
paddle.nn.functional.sigmoid(Tensor([0, 1, 10, 10],"float32"), )
paddle.nn.functional.sigmoid(Tensor([0, 1, 11, 11],"float32"), )
paddle.nn.functional.sigmoid(Tensor([0, 100, 2],"float32"), )
paddle.nn.functional.sigmoid(Tensor([0, 1024, 1, 1],"float16"), None, )
paddle.nn.functional.sigmoid(Tensor([0, 1024, 1, 1],"float32"), None, )
paddle.nn.functional.sigmoid(Tensor([0, 1024],"float32"), )
paddle.nn.functional.sigmoid(Tensor([0, 11, 4],"float32"), )
paddle.nn.functional.sigmoid(Tensor([0, 123904],"float32"), )
paddle.nn.functional.sigmoid(Tensor([0, 15],"float32"), None, )
paddle.nn.functional.sigmoid(Tensor([0, 3, 5, 2, 4],"float16"), )
paddle.nn.functional.sigmoid(Tensor([0, 3, 5, 2, 4],"float32"), )
paddle.nn.functional.sigmoid(Tensor([0, 499, 4],"float16"), None, )
paddle.nn.functional.sigmoid(Tensor([0, 499, 4],"float32"), None, )
paddle.nn.functional.sigmoid(Tensor([0, 7],"float32"), None, )
paddle.nn.functional.sigmoid(Tensor([0],"float32"), )
paddle.nn.functional.sigmoid(Tensor([0],"float32"), None, )
paddle.nn.functional.sigmoid(Tensor([0],"float64"), )
paddle.nn.functional.sigmoid(Tensor([0],"float64"), None, )
paddle.nn.functional.sigmoid(Tensor([1, 0, 10, 10],"float32"), )
paddle.nn.functional.sigmoid(Tensor([1, 0, 11, 11],"float32"), )
paddle.nn.functional.sigmoid(Tensor([1, 0, 2],"float32"), )
paddle.nn.functional.sigmoid(Tensor([1, 0, 4],"float32"), )
paddle.nn.functional.sigmoid(Tensor([1, 0, 5, 2, 4],"float16"), )
paddle.nn.functional.sigmoid(Tensor([1, 0, 5, 2, 4],"float32"), )
paddle.nn.functional.sigmoid(Tensor([1, 0],"float32"), )
paddle.nn.functional.sigmoid(Tensor([1, 1, 0, 10],"float32"), )
paddle.nn.functional.sigmoid(Tensor([1, 1, 0, 11],"float32"), )
paddle.nn.functional.sigmoid(Tensor([1, 1, 10, 0],"float32"), )
paddle.nn.functional.sigmoid(Tensor([1, 1, 11, 0],"float32"), )
paddle.nn.functional.sigmoid(Tensor([1, 100, 0],"float32"), )
paddle.nn.functional.sigmoid(Tensor([1, 11, 0],"float32"), )
paddle.nn.functional.sigmoid(Tensor([1, 3, 0, 2, 4],"float16"), )
paddle.nn.functional.sigmoid(Tensor([1, 3, 0, 2, 4],"float32"), )
paddle.nn.functional.sigmoid(Tensor([1, 3, 5, 0, 4],"float16"), )
paddle.nn.functional.sigmoid(Tensor([1, 3, 5, 0, 4],"float32"), )
paddle.nn.functional.sigmoid(Tensor([1, 3, 5, 2, 0],"float16"), )
paddle.nn.functional.sigmoid(Tensor([1, 3, 5, 2, 0],"float32"), )
paddle.nn.functional.sigmoid(Tensor([10, 0, 4],"float16"), None, )
paddle.nn.functional.sigmoid(Tensor([10, 0, 4],"float32"), None, )
paddle.nn.functional.sigmoid(Tensor([10, 0],"float32"), None, )
paddle.nn.functional.sigmoid(Tensor([10, 499, 0],"float16"), None, )
paddle.nn.functional.sigmoid(Tensor([10, 499, 0],"float32"), None, )
paddle.nn.functional.sigmoid(Tensor([128, 0, 1, 1],"float16"), None, )
paddle.nn.functional.sigmoid(Tensor([128, 0, 1, 1],"float32"), None, )
paddle.nn.functional.sigmoid(Tensor([128, 1024, 0, 1],"float16"), None, )
paddle.nn.functional.sigmoid(Tensor([128, 1024, 0, 1],"float32"), None, )
paddle.nn.functional.sigmoid(Tensor([128, 1024, 1, 0],"float16"), None, )
paddle.nn.functional.sigmoid(Tensor([128, 1024, 1, 0],"float32"), None, )
paddle.nn.functional.sigmoid(Tensor([13, 0],"float32"), None, )
paddle.nn.functional.sigmoid(x=Tensor([0],"float32"), )
paddle.nn.functional.sigmoid(x=Tensor([0],"float64"), )
paddle.nn.functional.silu(Tensor([0, 1, 13696],"float32"), )
paddle.nn.functional.silu(Tensor([0, 1, 14336],"float32"), )
paddle.nn.functional.silu(Tensor([0, 10],"float32"), None, )
paddle.nn.functional.silu(Tensor([0, 100],"float32"), )
paddle.nn.functional.silu(Tensor([0, 128, 128, 128],"float16"), None, )
paddle.nn.functional.silu(Tensor([0, 128, 128, 128],"float32"), None, )
paddle.nn.functional.silu(Tensor([0, 128, 23, 23],"float32"), )
paddle.nn.functional.silu(Tensor([0, 128, 24, 24],"float32"), )
paddle.nn.functional.silu(Tensor([0, 14336],"float32"), )
paddle.nn.functional.silu(Tensor([0, 257, 2730],"float32"), None, )
paddle.nn.functional.silu(Tensor([0, 577, 512],"float32"), None, )
paddle.nn.functional.silu(Tensor([0],"float32"), )
paddle.nn.functional.silu(Tensor([1, 0, 13696],"float32"), )
paddle.nn.functional.silu(Tensor([1, 0, 14336],"float32"), )
paddle.nn.functional.silu(Tensor([1, 0, 23, 23],"float32"), )
paddle.nn.functional.silu(Tensor([1, 0, 24, 24],"float32"), )
paddle.nn.functional.silu(Tensor([1, 0, 2730],"float32"), None, )
paddle.nn.functional.silu(Tensor([1, 1, 0],"float32"), )
paddle.nn.functional.silu(Tensor([1, 128, 0, 23],"float32"), )
paddle.nn.functional.silu(Tensor([1, 128, 0, 24],"float32"), )
paddle.nn.functional.silu(Tensor([1, 128, 23, 0],"float32"), )
paddle.nn.functional.silu(Tensor([1, 128, 24, 0],"float32"), )
paddle.nn.functional.silu(Tensor([1, 257, 0],"float32"), None, )
paddle.nn.functional.silu(Tensor([10, 0],"float32"), )
paddle.nn.functional.silu(Tensor([10, 0],"float32"), None, )
paddle.nn.functional.silu(Tensor([100, 0],"float32"), )
paddle.nn.functional.silu(Tensor([128, 0, 128, 128],"float16"), None, )
paddle.nn.functional.silu(Tensor([128, 0, 128, 128],"float32"), None, )
paddle.nn.functional.silu(Tensor([128, 0, 512],"float32"), None, )
paddle.nn.functional.silu(Tensor([128, 128, 0, 128],"float16"), None, )
paddle.nn.functional.silu(Tensor([128, 128, 0, 128],"float32"), None, )
paddle.nn.functional.silu(Tensor([128, 128, 128, 0],"float16"), None, )
paddle.nn.functional.silu(Tensor([128, 128, 128, 0],"float32"), None, )
paddle.nn.functional.silu(Tensor([128, 577, 0],"float32"), None, )
paddle.nn.functional.silu(x=Tensor([0, 10, 3, 3],"float32"), )
paddle.nn.functional.silu(x=Tensor([0, 10, 3, 3],"float64"), )
paddle.nn.functional.silu(x=Tensor([3, 0, 3, 3],"float32"), )
paddle.nn.functional.silu(x=Tensor([3, 0, 3, 3],"float64"), )
paddle.nn.functional.silu(x=Tensor([3, 10, 0, 3],"float32"), )
paddle.nn.functional.silu(x=Tensor([3, 10, 0, 3],"float64"), )
paddle.nn.functional.silu(x=Tensor([3, 10, 3, 0],"float32"), )
paddle.nn.functional.silu(x=Tensor([3, 10, 3, 0],"float64"), )
paddle.nn.functional.softplus(Tensor([0, 2, 3],"float32"), )
paddle.nn.functional.softplus(Tensor([0, 2, 3],"float64"), )
paddle.nn.functional.softplus(Tensor([0, 3, 3],"float64"), 1e-06, 20, None, )
paddle.nn.functional.softplus(Tensor([0, 3, 3],"float64"), -1e-06, 20, None, )
paddle.nn.functional.softplus(Tensor([0, 3, 3],"float64"), 2, 20, None, )
paddle.nn.functional.softplus(Tensor([0, 3, 3],"float64"), -3, 20, None, )
paddle.nn.functional.softplus(Tensor([0, 3, 3],"float64"), 3, 5, None, )
paddle.nn.functional.softplus(Tensor([0, 3, 3],"float64"), 3, -5, None, )
paddle.nn.functional.softplus(Tensor([0, 3],"float32"), )
paddle.nn.functional.softplus(Tensor([0, 3],"float64"), )
paddle.nn.functional.softplus(Tensor([0],"float32"), )
paddle.nn.functional.softplus(Tensor([0],"float32"), 1, 15, None, )
paddle.nn.functional.softplus(Tensor([0],"float64"), )
paddle.nn.functional.softplus(Tensor([0],"float64"), 1, 15, None, )
paddle.nn.functional.softplus(Tensor([1, 0, 3],"float32"), )
paddle.nn.functional.softplus(Tensor([1, 0, 3],"float64"), )
paddle.nn.functional.softplus(Tensor([1, 2, 0],"float32"), )
paddle.nn.functional.softplus(Tensor([1, 2, 0],"float64"), )
paddle.nn.functional.softplus(Tensor([2, 0],"float32"), )
paddle.nn.functional.softplus(Tensor([2, 0],"float64"), )
paddle.nn.functional.softplus(Tensor([3, 0, 3],"float64"), 1e-06, 20, None, )
paddle.nn.functional.softplus(Tensor([3, 0, 3],"float64"), -1e-06, 20, None, )
paddle.nn.functional.softplus(Tensor([3, 0, 3],"float64"), 2, 20, None, )
paddle.nn.functional.softplus(Tensor([3, 0, 3],"float64"), -3, 20, None, )
paddle.nn.functional.softplus(Tensor([3, 0, 3],"float64"), 3, 5, None, )
paddle.nn.functional.softplus(Tensor([3, 0, 3],"float64"), 3, -5, None, )
paddle.nn.functional.softplus(Tensor([3, 3, 0],"float64"), 1e-06, 20, None, )
paddle.nn.functional.softplus(Tensor([3, 3, 0],"float64"), -1e-06, 20, None, )
paddle.nn.functional.softplus(Tensor([3, 3, 0],"float64"), 2, 20, None, )
paddle.nn.functional.softplus(Tensor([3, 3, 0],"float64"), -3, 20, None, )
paddle.nn.functional.softplus(Tensor([3, 3, 0],"float64"), 3, 5, None, )
paddle.nn.functional.softplus(Tensor([3, 3, 0],"float64"), 3, -5, None, )
paddle.nn.functional.softplus(x=Tensor([0, 3, 3],"float64"), beta=1e-06, threshold=20, )
paddle.nn.functional.softplus(x=Tensor([0, 3, 3],"float64"), beta=-1e-06, threshold=20, )
paddle.nn.functional.softplus(x=Tensor([0, 3, 3],"float64"), beta=2, threshold=20, )
paddle.nn.functional.softplus(x=Tensor([0, 3, 3],"float64"), beta=-3, threshold=20, )
paddle.nn.functional.softplus(x=Tensor([0, 3, 3],"float64"), beta=3, threshold=5, )
paddle.nn.functional.softplus(x=Tensor([0, 3, 3],"float64"), beta=3, threshold=-5, )
paddle.nn.functional.softplus(x=Tensor([0],"float32"), beta=1, threshold=15, )
paddle.nn.functional.softplus(x=Tensor([0],"float64"), beta=1, threshold=15, )
paddle.nn.functional.softplus(x=Tensor([3, 0, 3],"float64"), beta=1e-06, threshold=20, )
paddle.nn.functional.softplus(x=Tensor([3, 0, 3],"float64"), beta=-1e-06, threshold=20, )
paddle.nn.functional.softplus(x=Tensor([3, 0, 3],"float64"), beta=2, threshold=20, )
paddle.nn.functional.softplus(x=Tensor([3, 0, 3],"float64"), beta=-3, threshold=20, )
paddle.nn.functional.softplus(x=Tensor([3, 0, 3],"float64"), beta=3, threshold=5, )
paddle.nn.functional.softplus(x=Tensor([3, 0, 3],"float64"), beta=3, threshold=-5, )
paddle.nn.functional.softplus(x=Tensor([3, 3, 0],"float64"), beta=1e-06, threshold=20, )
paddle.nn.functional.softplus(x=Tensor([3, 3, 0],"float64"), beta=-1e-06, threshold=20, )
paddle.nn.functional.softplus(x=Tensor([3, 3, 0],"float64"), beta=2, threshold=20, )
paddle.nn.functional.softplus(x=Tensor([3, 3, 0],"float64"), beta=-3, threshold=20, )
paddle.nn.functional.softplus(x=Tensor([3, 3, 0],"float64"), beta=3, threshold=5, )
paddle.nn.functional.softplus(x=Tensor([3, 3, 0],"float64"), beta=3, threshold=-5, )
paddle.nn.functional.softshrink(Tensor([0, 3, 3],"float64"), 0, None, )
paddle.nn.functional.softshrink(Tensor([0, 3, 3],"float64"), 5, None, )
paddle.nn.functional.softshrink(Tensor([0],"float32"), 0.5, None, )
paddle.nn.functional.softshrink(Tensor([0],"float64"), 0.5, None, )
paddle.nn.functional.softshrink(Tensor([3, 0, 3],"float64"), 0, None, )
paddle.nn.functional.softshrink(Tensor([3, 0, 3],"float64"), 5, None, )
paddle.nn.functional.softshrink(Tensor([3, 3, 0],"float64"), 0, None, )
paddle.nn.functional.softshrink(Tensor([3, 3, 0],"float64"), 5, None, )
paddle.nn.functional.softshrink(x=Tensor([0, 3, 3],"float64"), threshold=0, )
paddle.nn.functional.softshrink(x=Tensor([0, 3, 3],"float64"), threshold=5, )
paddle.nn.functional.softshrink(x=Tensor([0],"float32"), threshold=0.5, )
paddle.nn.functional.softshrink(x=Tensor([0],"float64"), threshold=0.5, )
paddle.nn.functional.softshrink(x=Tensor([3, 0, 3],"float64"), threshold=0, )
paddle.nn.functional.softshrink(x=Tensor([3, 0, 3],"float64"), threshold=5, )
paddle.nn.functional.softshrink(x=Tensor([3, 3, 0],"float64"), threshold=0, )
paddle.nn.functional.softshrink(x=Tensor([3, 3, 0],"float64"), threshold=5, )
paddle.nn.functional.softsign(Tensor([0, 128],"float32"), )
paddle.nn.functional.softsign(Tensor([0, 3, 3],"float64"), None, )
paddle.nn.functional.softsign(Tensor([0, 4096],"float32"), )
paddle.nn.functional.softsign(Tensor([0],"float32"), None, )
paddle.nn.functional.softsign(Tensor([0],"float64"), None, )
paddle.nn.functional.softsign(Tensor([3, 0, 3],"float64"), None, )
paddle.nn.functional.softsign(Tensor([3, 3, 0],"float64"), None, )
paddle.nn.functional.softsign(Tensor([300, 0],"float32"), )
paddle.nn.functional.softsign(Tensor([32, 0],"float32"), )
paddle.nn.functional.softsign(x=Tensor([0, 3, 3],"float64"), )
paddle.nn.functional.softsign(x=Tensor([0],"float32"), )
paddle.nn.functional.softsign(x=Tensor([0],"float64"), )
paddle.nn.functional.softsign(x=Tensor([3, 0, 3],"float64"), )
paddle.nn.functional.softsign(x=Tensor([3, 3, 0],"float64"), )
paddle.nn.functional.tanh(Tensor([0, 16],"float32"), )
paddle.nn.functional.tanh(Tensor([0, 256, 2048],"float32"), None, )
paddle.nn.functional.tanh(Tensor([0, 3, 256, 256],"float32"), None, )
paddle.nn.functional.tanh(Tensor([0, 32],"float32"), None, )
paddle.nn.functional.tanh(Tensor([0, 36],"float32"), None, )
paddle.nn.functional.tanh(Tensor([1, 0, 256, 256],"float32"), None, )
paddle.nn.functional.tanh(Tensor([1, 0],"float32"), )
paddle.nn.functional.tanh(Tensor([1, 0],"float32"), None, )
paddle.nn.functional.tanh(Tensor([1, 3, 0, 256],"float32"), None, )
paddle.nn.functional.tanh(Tensor([1, 3, 256, 0],"float32"), None, )
paddle.nn.functional.tanh(Tensor([13, 0, 2048],"float32"), None, )
paddle.nn.functional.tanh(Tensor([13, 0],"float32"), )
paddle.nn.functional.tanh(Tensor([13, 256, 0],"float32"), None, )
paddle.nn.functional.tanhshrink(Tensor([0, 3, 3],"float64"), None, )
paddle.nn.functional.tanhshrink(Tensor([0],"float32"), None, )
paddle.nn.functional.tanhshrink(Tensor([0],"float64"), None, )
paddle.nn.functional.tanhshrink(Tensor([3, 0, 3],"float64"), None, )
paddle.nn.functional.tanhshrink(Tensor([3, 3, 0],"float64"), None, )
paddle.nn.functional.tanhshrink(x=Tensor([0, 3, 3],"float64"), )
paddle.nn.functional.tanhshrink(x=Tensor([0],"float32"), )
paddle.nn.functional.tanhshrink(x=Tensor([0],"float64"), )
paddle.nn.functional.tanhshrink(x=Tensor([3, 0, 3],"float64"), )
paddle.nn.functional.tanhshrink(x=Tensor([3, 3, 0],"float64"), )
paddle.nn.functional.thresholded_relu(Tensor([0, 1, 4, 3],"float64"), 0, 0.0, None, )
paddle.nn.functional.thresholded_relu(Tensor([0, 1, 4, 3],"float64"), -1, 0.0, None, )
paddle.nn.functional.thresholded_relu(Tensor([0, 4, 3, 3],"float32"), 1.0, 0.0, None, )
paddle.nn.functional.thresholded_relu(Tensor([0, 4, 3, 3],"float64"), 1.0, 0.0, None, )
paddle.nn.functional.thresholded_relu(Tensor([10, 0, 4, 3],"float64"), 0, 0.0, None, )
paddle.nn.functional.thresholded_relu(Tensor([10, 0, 4, 3],"float64"), -1, 0.0, None, )
paddle.nn.functional.thresholded_relu(Tensor([10, 1, 0, 3],"float64"), 0, 0.0, None, )
paddle.nn.functional.thresholded_relu(Tensor([10, 1, 0, 3],"float64"), -1, 0.0, None, )
paddle.nn.functional.thresholded_relu(Tensor([10, 1, 4, 0],"float64"), 0, 0.0, None, )
paddle.nn.functional.thresholded_relu(Tensor([10, 1, 4, 0],"float64"), -1, 0.0, None, )
paddle.nn.functional.thresholded_relu(Tensor([100, 0, 3, 3],"float32"), 1.0, 0.0, None, )
paddle.nn.functional.thresholded_relu(Tensor([100, 0, 3, 3],"float64"), 1.0, 0.0, None, )
paddle.nn.functional.thresholded_relu(Tensor([100, 4, 0, 3],"float32"), 1.0, 0.0, None, )
paddle.nn.functional.thresholded_relu(Tensor([100, 4, 0, 3],"float64"), 1.0, 0.0, None, )
paddle.nn.functional.thresholded_relu(Tensor([100, 4, 3, 0],"float32"), 1.0, 0.0, None, )
paddle.nn.functional.thresholded_relu(Tensor([100, 4, 3, 0],"float64"), 1.0, 0.0, None, )
paddle.nn.functional.triplet_margin_with_distance_loss(input=Tensor([0, 5],"float64"), positive=Tensor([0, 5],"float64"), negative=Tensor([0, 5],"float64"), distance_function=None, margin=0.3, swap=False, reduction="none", )
paddle.nn.functional.triplet_margin_with_distance_loss(input=Tensor([0, 5],"float64"), positive=Tensor([0, 5],"float64"), negative=Tensor([0, 5],"float64"), distance_function=None, margin=0.3, swap=False, reduction="sum", )
paddle.nn.functional.triplet_margin_with_distance_loss(Tensor([0, 5],"float64"), Tensor([0, 5],"float64"), Tensor([0, 5],"float64"), margin=0.3, swap=False, reduction="none", name=None, )
paddle.nn.functional.triplet_margin_with_distance_loss(Tensor([0, 5],"float64"), Tensor([0, 5],"float64"), Tensor([0, 5],"float64"), margin=0.3, swap=False, reduction="sum", name=None, )
paddle.nn.utils.parameters_to_vector(list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Ten ...
paddle.pdist(Tensor([0, 20],"float32"), 0, )
paddle.pdist(Tensor([0, 20],"float32"), 1.0, )
paddle.pdist(Tensor([0, 20],"float32"), 1.5, )
paddle.pdist(Tensor([0, 20],"float32"), 2.0, )
paddle.pdist(Tensor([0, 20],"float32"), 2.5, )
paddle.pdist(Tensor([0, 20],"float32"), 3.0, )
paddle.pdist(Tensor([0, 20],"float32"), math.inf, )
paddle.pdist(Tensor([0, 20],"float64"), 2.0, )
paddle.polygamma(Tensor([0, 2, 6],"float64"), 2, )
paddle.polygamma(Tensor([0, 20, 1],"float32"), 1, )
paddle.polygamma(Tensor([0, 6],"float64"), 1, )
paddle.polygamma(Tensor([0],"float32"), 1, )
paddle.polygamma(Tensor([0],"float32"), 2, )
paddle.polygamma(Tensor([0],"float32"), 3, )
paddle.polygamma(Tensor([0],"float64"), 1, )
paddle.polygamma(Tensor([0],"float64"), 2, )
paddle.polygamma(Tensor([0],"float64"), 3, )
paddle.polygamma(Tensor([10, 0, 1],"float32"), 1, )
paddle.polygamma(Tensor([10, 20, 0],"float32"), 1, )
paddle.polygamma(Tensor([2, 0, 6],"float64"), 2, )
paddle.polygamma(Tensor([2, 0],"float64"), 1, )
paddle.polygamma(Tensor([2, 2, 0],"float64"), 2, )
paddle.reciprocal(Tensor([0, 1, 640, 640],"float16"), )
paddle.reciprocal(Tensor([0, 1, 640, 640],"float32"), )
paddle.reciprocal(Tensor([0, 300, 2048],"float32"), )
paddle.reciprocal(Tensor([16, 0, 640, 640],"float16"), )
paddle.reciprocal(Tensor([16, 0, 640, 640],"float32"), )
paddle.reciprocal(Tensor([16, 1, 0, 640],"float16"), )
paddle.reciprocal(Tensor([16, 1, 0, 640],"float32"), )
paddle.reciprocal(Tensor([16, 1, 640, 0],"float16"), )
paddle.reciprocal(Tensor([16, 1, 640, 0],"float32"), )
paddle.reciprocal(Tensor([2, 0, 2048],"float32"), )
paddle.reciprocal(Tensor([2, 300, 0],"float32"), )
paddle.reciprocal(x=Tensor([0, 3, 3],"float32"), )
paddle.reciprocal(x=Tensor([0, 3, 3],"float64"), )
paddle.reciprocal(x=Tensor([3, 0, 3],"float32"), )
paddle.reciprocal(x=Tensor([3, 0, 3],"float64"), )
paddle.reciprocal(x=Tensor([3, 3, 0],"float32"), )
paddle.reciprocal(x=Tensor([3, 3, 0],"float64"), )
paddle.renorm(Tensor([0, 2, 3],"float32"), 1.0, -1, 2.05, )
paddle.renorm(Tensor([0, 2, 3],"float32"), 1.0, 2, 2.05, )
paddle.renorm(Tensor([0, 20, 1],"float32"), 1.0, -1, 2.05, )
paddle.renorm(Tensor([10, 0, 1],"float32"), 1.0, -1, 2.05, )
paddle.renorm(Tensor([10, 20, 0],"float32"), 1.0, -1, 2.05, )
paddle.renorm(Tensor([2, 0, 3],"float32"), 1.0, -1, 2.05, )
paddle.renorm(Tensor([2, 0, 3],"float32"), 1.0, 2, 2.05, )
paddle.renorm(Tensor([2, 2, 0],"float32"), 1.0, -1, 2.05, )
paddle.renorm(Tensor([2, 2, 0],"float32"), 1.0, 2, 2.05, )
paddle.renorm(x=Tensor([0, 2, 3],"float32"), p=1, axis=0, max_norm=5, )
paddle.renorm(x=Tensor([0, 2, 3],"float64"), p=1, axis=0, max_norm=5, )
paddle.renorm(x=Tensor([0, 2, 3],"float64"), p=1.2, axis=2, max_norm=6.5, )
paddle.renorm(x=Tensor([0, 2, 3],"float64"), p=1.5, axis=2, max_norm=20, )
paddle.renorm(x=Tensor([0, 2, 3],"float64"), p=2, axis=1, max_norm=20, )
paddle.renorm(x=Tensor([0, 2, 3],"float64"), p=2, axis=1, max_norm=40, )
paddle.renorm(x=Tensor([0, 2, 3],"float64"), p=2, axis=1, max_norm=50, )
paddle.renorm(x=Tensor([3, 0, 3],"float32"), p=1, axis=0, max_norm=5, )
paddle.renorm(x=Tensor([3, 0, 3],"float64"), p=1, axis=0, max_norm=5, )
paddle.renorm(x=Tensor([3, 0, 3],"float64"), p=1.2, axis=2, max_norm=6.5, )
paddle.renorm(x=Tensor([3, 0, 3],"float64"), p=1.5, axis=2, max_norm=20, )
paddle.renorm(x=Tensor([3, 0, 3],"float64"), p=2, axis=1, max_norm=20, )
paddle.renorm(x=Tensor([3, 0, 3],"float64"), p=2, axis=1, max_norm=40, )
paddle.renorm(x=Tensor([3, 0, 3],"float64"), p=2, axis=1, max_norm=50, )
paddle.renorm(x=Tensor([3, 2, 0],"float32"), p=1, axis=0, max_norm=5, )
paddle.renorm(x=Tensor([3, 2, 0],"float64"), p=1, axis=0, max_norm=5, )
paddle.renorm(x=Tensor([3, 2, 0],"float64"), p=1.2, axis=2, max_norm=6.5, )
paddle.renorm(x=Tensor([3, 2, 0],"float64"), p=1.5, axis=2, max_norm=20, )
paddle.renorm(x=Tensor([3, 2, 0],"float64"), p=2, axis=1, max_norm=20, )
paddle.renorm(x=Tensor([3, 2, 0],"float64"), p=2, axis=1, max_norm=40, )
paddle.renorm(x=Tensor([3, 2, 0],"float64"), p=2, axis=1, max_norm=50, )
paddle.repeat_interleave(Tensor([0, 1, 384, 384],"float32"), repeats=3, axis=1, )
paddle.repeat_interleave(Tensor([0, 1, 768, 768],"float32"), repeats=3, axis=1, )
paddle.repeat_interleave(Tensor([0, 128],"float32"), 128, 0, )
paddle.repeat_interleave(Tensor([0, 1500, 1024],"float32"), 5, axis=0, )
paddle.repeat_interleave(Tensor([0, 1500, 1280],"float32"), 5, axis=0, )
paddle.repeat_interleave(Tensor([0, 2],"float32"), 2, axis=1, )
paddle.repeat_interleave(Tensor([0, 2],"int64"), 1, axis=0, )
paddle.repeat_interleave(Tensor([0, 2],"int64"), 2, axis=0, )
paddle.repeat_interleave(Tensor([0, 3],"bfloat16"), 2, None, )
paddle.repeat_interleave(Tensor([0, 3],"int32"), 2, None, )
paddle.repeat_interleave(Tensor([0, 3],"int64"), 5, axis=0, )
paddle.repeat_interleave(Tensor([0, 384, 1],"float32"), 1, 2, )
paddle.repeat_interleave(Tensor([0, 70],"int64"), 3, 1, )
paddle.repeat_interleave(Tensor([1, 0, 1024],"float32"), 5, axis=0, )
paddle.repeat_interleave(Tensor([1, 0, 1280],"float32"), 5, axis=0, )
paddle.repeat_interleave(Tensor([1, 0],"float32"), 128, 0, )
paddle.repeat_interleave(Tensor([1, 0],"float32"), 2, axis=1, )
paddle.repeat_interleave(Tensor([1, 0],"int64"), 1, axis=0, )
paddle.repeat_interleave(Tensor([1, 0],"int64"), 2, axis=0, )
paddle.repeat_interleave(Tensor([1, 0],"int64"), 3, 1, )
paddle.repeat_interleave(Tensor([1, 0],"int64"), 5, axis=0, )
paddle.repeat_interleave(Tensor([1, 1500, 0],"float32"), 5, axis=0, )
paddle.repeat_interleave(Tensor([10, 0],"float32"), 2, axis=1, )
paddle.repeat_interleave(Tensor([13, 0, 1],"float32"), 1, 2, )
paddle.repeat_interleave(Tensor([13, 384, 0],"float32"), 1, 2, )
paddle.repeat_interleave(Tensor([14, 0, 384, 384],"float32"), repeats=3, axis=1, )
paddle.repeat_interleave(Tensor([14, 1, 0, 384],"float32"), repeats=3, axis=1, )
paddle.repeat_interleave(Tensor([14, 1, 384, 0],"float32"), repeats=3, axis=1, )
paddle.repeat_interleave(Tensor([16, 0, 1],"float32"), 1, 2, )
paddle.repeat_interleave(Tensor([16, 384, 0],"float32"), 1, 2, )
paddle.repeat_interleave(Tensor([2, 0],"bfloat16"), 2, None, )
paddle.repeat_interleave(Tensor([2, 0],"int32"), 2, None, )
paddle.repeat_interleave(Tensor([5, 0, 768, 768],"float32"), repeats=3, axis=1, )
paddle.repeat_interleave(Tensor([5, 1, 0, 768],"float32"), repeats=3, axis=1, )
paddle.repeat_interleave(Tensor([5, 1, 768, 0],"float32"), repeats=3, axis=1, )
paddle.repeat_interleave(x=Tensor([0, 2, 4, 4, 5],"float64"), repeats=2, )
paddle.repeat_interleave(x=Tensor([0, 2, 4, 4, 5],"float64"), repeats=2, axis=1, )
paddle.repeat_interleave(x=Tensor([0, 2, 4, 4, 5],"int32"), repeats=2, axis=3, )
paddle.repeat_interleave(x=Tensor([0, 2, 4, 5],"float64"), repeats=2, )
paddle.repeat_interleave(x=Tensor([0, 2, 4],"float64"), repeats=2, )
paddle.repeat_interleave(x=Tensor([0, 2],"float64"), repeats=2, )
paddle.repeat_interleave(x=Tensor([0],"float32"), repeats=3, )
paddle.repeat_interleave(x=Tensor([0],"float64"), repeats=3, )
paddle.repeat_interleave(x=Tensor([4, 0, 4, 4, 5],"float64"), repeats=2, )
paddle.repeat_interleave(x=Tensor([4, 0, 4, 4, 5],"float64"), repeats=2, axis=1, )
paddle.repeat_interleave(x=Tensor([4, 0, 4, 4, 5],"int32"), repeats=2, axis=3, )
paddle.repeat_interleave(x=Tensor([4, 0, 4, 5],"float64"), repeats=2, )
paddle.repeat_interleave(x=Tensor([4, 0, 4],"float64"), repeats=2, )
paddle.repeat_interleave(x=Tensor([4, 0],"float64"), repeats=2, )
paddle.repeat_interleave(x=Tensor([4, 2, 0, 4, 5],"float64"), repeats=2, )
paddle.repeat_interleave(x=Tensor([4, 2, 0, 4, 5],"float64"), repeats=2, axis=1, )
paddle.repeat_interleave(x=Tensor([4, 2, 0, 4, 5],"int32"), repeats=2, axis=3, )
paddle.repeat_interleave(x=Tensor([4, 2, 0, 5],"float64"), repeats=2, )
paddle.repeat_interleave(x=Tensor([4, 2, 0],"float64"), repeats=2, )
paddle.repeat_interleave(x=Tensor([4, 2, 4, 0, 5],"float64"), repeats=2, )
paddle.repeat_interleave(x=Tensor([4, 2, 4, 0, 5],"float64"), repeats=2, axis=1, )
paddle.repeat_interleave(x=Tensor([4, 2, 4, 0, 5],"int32"), repeats=2, axis=3, )
paddle.repeat_interleave(x=Tensor([4, 2, 4, 0],"float64"), repeats=2, )
paddle.repeat_interleave(x=Tensor([4, 2, 4, 4, 0],"float64"), repeats=2, )
paddle.repeat_interleave(x=Tensor([4, 2, 4, 4, 0],"float64"), repeats=2, axis=1, )
paddle.repeat_interleave(x=Tensor([4, 2, 4, 4, 0],"int32"), repeats=2, axis=3, )
paddle.roll(Tensor([0, 16, 14, 14, 384],"float16"), shifts=tuple(4,3,3,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([0, 16, 14, 14, 384],"float16"), shifts=tuple(-4,-3,-3,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([0, 16, 14, 14, 384],"float32"), shifts=tuple(4,3,3,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([0, 16, 14, 14, 384],"float32"), shifts=tuple(-4,-3,-3,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([0, 16, 14, 7, 768],"float16"), shifts=tuple(4,3,0,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([0, 16, 14, 7, 768],"float16"), shifts=tuple(-4,-3,0,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([0, 16, 14, 7, 768],"float32"), shifts=tuple(4,3,0,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([0, 16, 14, 7, 768],"float32"), shifts=tuple(-4,-3,0,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([0, 16, 16, 64],"float32"), shifts=tuple(2,2,), axis=tuple(1,2,), )
paddle.roll(Tensor([0, 16, 16, 64],"float32"), shifts=tuple(-2,-2,), axis=tuple(1,2,), )
paddle.roll(Tensor([0, 16, 7, 14, 768],"float16"), shifts=tuple(4,0,3,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([0, 16, 7, 14, 768],"float16"), shifts=tuple(-4,0,-3,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([0, 16, 7, 14, 768],"float32"), shifts=tuple(4,0,3,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([0, 16, 7, 14, 768],"float32"), shifts=tuple(-4,0,-3,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([0, 16, 7, 7, 768],"float16"), shifts=tuple(4,0,0,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([0, 16, 7, 7, 768],"float16"), shifts=tuple(-4,0,0,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([0, 16, 7, 7, 768],"float32"), shifts=tuple(4,0,0,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([0, 16, 7, 7, 768],"float32"), shifts=tuple(-4,0,0,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([0, 161, 126, 96],"float32"), shifts=tuple(3,3,), axis=tuple(1,2,), )
paddle.roll(Tensor([0, 161, 126, 96],"float32"), shifts=tuple(-3,-3,), axis=tuple(1,2,), )
paddle.roll(Tensor([0, 192, 144, 192],"float32"), shifts=tuple(6,6,), axis=tuple(1,2,), )
paddle.roll(Tensor([0, 192, 144, 192],"float32"), shifts=tuple(-6,-6,), axis=tuple(1,2,), )
paddle.roll(Tensor([0, 21, 21, 768],"float32"), shifts=tuple(3,3,), axis=tuple(1,2,), )
paddle.roll(Tensor([0, 21, 21, 768],"float32"), shifts=tuple(-3,-3,), axis=tuple(1,2,), )
paddle.roll(Tensor([0, 24, 24, 1536],"float32"), shifts=tuple(6,6,), axis=tuple(1,2,), )
paddle.roll(Tensor([0, 24, 24, 1536],"float32"), shifts=tuple(-6,-6,), axis=tuple(1,2,), )
paddle.roll(Tensor([0, 3],"float64"), shifts=1, )
paddle.roll(Tensor([0, 3],"float64"), shifts=1, axis=0, )
paddle.roll(Tensor([0, 32, 32, 32],"float32"), shifts=tuple(2,2,), axis=tuple(1,2,), )
paddle.roll(Tensor([0, 32, 32, 32],"float32"), shifts=tuple(-2,-2,), axis=tuple(1,2,), )
paddle.roll(Tensor([0],"float32"), -2, name=None, )
paddle.roll(Tensor([0],"float32"), -5, name=None, )
paddle.roll(Tensor([1, 0, 126, 96],"float32"), shifts=tuple(3,3,), axis=tuple(1,2,), )
paddle.roll(Tensor([1, 0, 126, 96],"float32"), shifts=tuple(-3,-3,), axis=tuple(1,2,), )
paddle.roll(Tensor([1, 0, 14, 14, 384],"float16"), shifts=tuple(4,3,3,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 0, 14, 14, 384],"float16"), shifts=tuple(-4,-3,-3,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 0, 14, 14, 384],"float32"), shifts=tuple(4,3,3,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 0, 14, 14, 384],"float32"), shifts=tuple(-4,-3,-3,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 0, 14, 7, 768],"float16"), shifts=tuple(4,3,0,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 0, 14, 7, 768],"float16"), shifts=tuple(-4,-3,0,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 0, 14, 7, 768],"float32"), shifts=tuple(4,3,0,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 0, 14, 7, 768],"float32"), shifts=tuple(-4,-3,0,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 0, 144, 192],"float32"), shifts=tuple(6,6,), axis=tuple(1,2,), )
paddle.roll(Tensor([1, 0, 144, 192],"float32"), shifts=tuple(-6,-6,), axis=tuple(1,2,), )
paddle.roll(Tensor([1, 0, 21, 768],"float32"), shifts=tuple(3,3,), axis=tuple(1,2,), )
paddle.roll(Tensor([1, 0, 21, 768],"float32"), shifts=tuple(-3,-3,), axis=tuple(1,2,), )
paddle.roll(Tensor([1, 0, 24, 1536],"float32"), shifts=tuple(6,6,), axis=tuple(1,2,), )
paddle.roll(Tensor([1, 0, 24, 1536],"float32"), shifts=tuple(-6,-6,), axis=tuple(1,2,), )
paddle.roll(Tensor([1, 0, 7, 14, 768],"float16"), shifts=tuple(4,0,3,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 0, 7, 14, 768],"float16"), shifts=tuple(-4,0,-3,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 0, 7, 14, 768],"float32"), shifts=tuple(4,0,3,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 0, 7, 14, 768],"float32"), shifts=tuple(-4,0,-3,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 0, 7, 7, 768],"float16"), shifts=tuple(4,0,0,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 0, 7, 7, 768],"float16"), shifts=tuple(-4,0,0,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 0, 7, 7, 768],"float32"), shifts=tuple(4,0,0,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 0, 7, 7, 768],"float32"), shifts=tuple(-4,0,0,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 16, 0, 14, 384],"float16"), shifts=tuple(4,3,3,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 16, 0, 14, 384],"float16"), shifts=tuple(-4,-3,-3,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 16, 0, 14, 384],"float32"), shifts=tuple(4,3,3,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 16, 0, 14, 384],"float32"), shifts=tuple(-4,-3,-3,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 16, 0, 14, 768],"float16"), shifts=tuple(4,0,3,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 16, 0, 14, 768],"float16"), shifts=tuple(-4,0,-3,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 16, 0, 14, 768],"float32"), shifts=tuple(4,0,3,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 16, 0, 14, 768],"float32"), shifts=tuple(-4,0,-3,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 16, 0, 7, 768],"float16"), shifts=tuple(4,0,0,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 16, 0, 7, 768],"float16"), shifts=tuple(-4,0,0,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 16, 0, 7, 768],"float16"), shifts=tuple(4,3,0,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 16, 0, 7, 768],"float16"), shifts=tuple(-4,-3,0,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 16, 0, 7, 768],"float32"), shifts=tuple(4,0,0,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 16, 0, 7, 768],"float32"), shifts=tuple(-4,0,0,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 16, 0, 7, 768],"float32"), shifts=tuple(4,3,0,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 16, 0, 7, 768],"float32"), shifts=tuple(-4,-3,0,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 16, 14, 0, 384],"float16"), shifts=tuple(4,3,3,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 16, 14, 0, 384],"float16"), shifts=tuple(-4,-3,-3,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 16, 14, 0, 384],"float32"), shifts=tuple(4,3,3,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 16, 14, 0, 384],"float32"), shifts=tuple(-4,-3,-3,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 16, 14, 0, 768],"float16"), shifts=tuple(4,3,0,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 16, 14, 0, 768],"float16"), shifts=tuple(-4,-3,0,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 16, 14, 0, 768],"float32"), shifts=tuple(4,3,0,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 16, 14, 0, 768],"float32"), shifts=tuple(-4,-3,0,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 16, 14, 14, 0],"float16"), shifts=tuple(4,3,3,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 16, 14, 14, 0],"float16"), shifts=tuple(-4,-3,-3,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 16, 14, 14, 0],"float32"), shifts=tuple(4,3,3,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 16, 14, 14, 0],"float32"), shifts=tuple(-4,-3,-3,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 16, 14, 7, 0],"float16"), shifts=tuple(4,3,0,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 16, 14, 7, 0],"float16"), shifts=tuple(-4,-3,0,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 16, 14, 7, 0],"float32"), shifts=tuple(4,3,0,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 16, 14, 7, 0],"float32"), shifts=tuple(-4,-3,0,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 16, 7, 0, 768],"float16"), shifts=tuple(4,0,0,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 16, 7, 0, 768],"float16"), shifts=tuple(-4,0,0,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 16, 7, 0, 768],"float16"), shifts=tuple(4,0,3,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 16, 7, 0, 768],"float16"), shifts=tuple(-4,0,-3,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 16, 7, 0, 768],"float32"), shifts=tuple(4,0,0,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 16, 7, 0, 768],"float32"), shifts=tuple(-4,0,0,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 16, 7, 0, 768],"float32"), shifts=tuple(4,0,3,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 16, 7, 0, 768],"float32"), shifts=tuple(-4,0,-3,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 16, 7, 14, 0],"float16"), shifts=tuple(4,0,3,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 16, 7, 14, 0],"float16"), shifts=tuple(-4,0,-3,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 16, 7, 14, 0],"float32"), shifts=tuple(4,0,3,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 16, 7, 14, 0],"float32"), shifts=tuple(-4,0,-3,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 16, 7, 7, 0],"float16"), shifts=tuple(4,0,0,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 16, 7, 7, 0],"float16"), shifts=tuple(-4,0,0,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 16, 7, 7, 0],"float32"), shifts=tuple(4,0,0,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 16, 7, 7, 0],"float32"), shifts=tuple(-4,0,0,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 161, 0, 96],"float32"), shifts=tuple(3,3,), axis=tuple(1,2,), )
paddle.roll(Tensor([1, 161, 0, 96],"float32"), shifts=tuple(-3,-3,), axis=tuple(1,2,), )
paddle.roll(Tensor([1, 161, 126, 0],"float32"), shifts=tuple(3,3,), axis=tuple(1,2,), )
paddle.roll(Tensor([1, 161, 126, 0],"float32"), shifts=tuple(-3,-3,), axis=tuple(1,2,), )
paddle.roll(Tensor([1, 192, 0, 192],"float32"), shifts=tuple(6,6,), axis=tuple(1,2,), )
paddle.roll(Tensor([1, 192, 0, 192],"float32"), shifts=tuple(-6,-6,), axis=tuple(1,2,), )
paddle.roll(Tensor([1, 192, 144, 0],"float32"), shifts=tuple(6,6,), axis=tuple(1,2,), )
paddle.roll(Tensor([1, 192, 144, 0],"float32"), shifts=tuple(-6,-6,), axis=tuple(1,2,), )
paddle.roll(Tensor([1, 21, 0, 768],"float32"), shifts=tuple(3,3,), axis=tuple(1,2,), )
paddle.roll(Tensor([1, 21, 0, 768],"float32"), shifts=tuple(-3,-3,), axis=tuple(1,2,), )
paddle.roll(Tensor([1, 21, 21, 0],"float32"), shifts=tuple(3,3,), axis=tuple(1,2,), )
paddle.roll(Tensor([1, 21, 21, 0],"float32"), shifts=tuple(-3,-3,), axis=tuple(1,2,), )
paddle.roll(Tensor([1, 24, 0, 1536],"float32"), shifts=tuple(6,6,), axis=tuple(1,2,), )
paddle.roll(Tensor([1, 24, 0, 1536],"float32"), shifts=tuple(-6,-6,), axis=tuple(1,2,), )
paddle.roll(Tensor([1, 24, 24, 0],"float32"), shifts=tuple(6,6,), axis=tuple(1,2,), )
paddle.roll(Tensor([1, 24, 24, 0],"float32"), shifts=tuple(-6,-6,), axis=tuple(1,2,), )
paddle.roll(Tensor([12, 0, 16, 64],"float32"), shifts=tuple(2,2,), axis=tuple(1,2,), )
paddle.roll(Tensor([12, 0, 16, 64],"float32"), shifts=tuple(-2,-2,), axis=tuple(1,2,), )
paddle.roll(Tensor([12, 0, 32, 32],"float32"), shifts=tuple(2,2,), axis=tuple(1,2,), )
paddle.roll(Tensor([12, 0, 32, 32],"float32"), shifts=tuple(-2,-2,), axis=tuple(1,2,), )
paddle.roll(Tensor([12, 16, 0, 64],"float32"), shifts=tuple(2,2,), axis=tuple(1,2,), )
paddle.roll(Tensor([12, 16, 0, 64],"float32"), shifts=tuple(-2,-2,), axis=tuple(1,2,), )
paddle.roll(Tensor([12, 16, 16, 0],"float32"), shifts=tuple(2,2,), axis=tuple(1,2,), )
paddle.roll(Tensor([12, 16, 16, 0],"float32"), shifts=tuple(-2,-2,), axis=tuple(1,2,), )
paddle.roll(Tensor([12, 32, 0, 32],"float32"), shifts=tuple(2,2,), axis=tuple(1,2,), )
paddle.roll(Tensor([12, 32, 0, 32],"float32"), shifts=tuple(-2,-2,), axis=tuple(1,2,), )
paddle.roll(Tensor([12, 32, 32, 0],"float32"), shifts=tuple(2,2,), axis=tuple(1,2,), )
paddle.roll(Tensor([12, 32, 32, 0],"float32"), shifts=tuple(-2,-2,), axis=tuple(1,2,), )
paddle.roll(Tensor([3, 0],"float64"), shifts=1, )
paddle.roll(Tensor([3, 0],"float64"), shifts=1, axis=0, )
paddle.roll(x=Tensor([0, 3],"float32"), shifts=0, axis=None, )
paddle.roll(x=Tensor([0, 3],"float64"), shifts=0, axis=None, )
paddle.roll(x=Tensor([0, 3],"float64"), shifts=-1, axis=0, )
paddle.roll(x=Tensor([0, 3],"float64"), shifts=1, axis=None, )
paddle.roll(x=Tensor([0, 3],"float64"), shifts=list[-1,1,], axis=list[0,1,], )
paddle.roll(x=Tensor([0, 3],"float64"), shifts=tuple(-1,1,), axis=tuple(0,1,), )
paddle.roll(x=Tensor([3, 0],"float32"), shifts=0, axis=None, )
paddle.roll(x=Tensor([3, 0],"float64"), shifts=0, axis=None, )
paddle.roll(x=Tensor([3, 0],"float64"), shifts=-1, axis=0, )
paddle.roll(x=Tensor([3, 0],"float64"), shifts=1, axis=None, )
paddle.roll(x=Tensor([3, 0],"float64"), shifts=list[-1,1,], axis=list[0,1,], )
paddle.roll(x=Tensor([3, 0],"float64"), shifts=tuple(-1,1,), axis=tuple(0,1,), )
paddle.rot90(Tensor([0, 3],"float32"), k=1, axes=list[0,1,], )
paddle.rot90(Tensor([2, 0],"float32"), k=1, axes=list[0,1,], )
paddle.rot90(x=Tensor([0, 4, 4, 4],"float64"), )
paddle.rot90(x=Tensor([0, 4, 4, 4],"float64"), k=-1, axes=list[1,2,], )
paddle.rot90(x=Tensor([0, 4, 4, 4],"float64"), k=-1, axes=tuple(2,3,), )
paddle.rot90(x=Tensor([0, 4, 4],"float64"), )
paddle.rot90(x=Tensor([0, 4],"float32"), )
paddle.rot90(x=Tensor([0, 4],"float64"), )
paddle.rot90(x=Tensor([0, 4],"float64"), k=-1, )
paddle.rot90(x=Tensor([3, 0],"float64"), )
paddle.rot90(x=Tensor([4, 0, 4, 4],"float64"), )
paddle.rot90(x=Tensor([4, 0, 4, 4],"float64"), k=-1, axes=list[1,2,], )
paddle.rot90(x=Tensor([4, 0, 4, 4],"float64"), k=-1, axes=tuple(2,3,), )
paddle.rot90(x=Tensor([4, 0, 4],"float64"), )
paddle.rot90(x=Tensor([4, 0],"float32"), )
paddle.rot90(x=Tensor([4, 0],"float64"), k=-1, )
paddle.rot90(x=Tensor([4, 4, 0, 4],"float64"), )
paddle.rot90(x=Tensor([4, 4, 0, 4],"float64"), k=-1, axes=list[1,2,], )
paddle.rot90(x=Tensor([4, 4, 0, 4],"float64"), k=-1, axes=tuple(2,3,), )
paddle.rot90(x=Tensor([4, 4, 0],"float64"), )
paddle.rot90(x=Tensor([4, 4, 4, 0],"float64"), )
paddle.rot90(x=Tensor([4, 4, 4, 0],"float64"), k=-1, axes=list[1,2,], )
paddle.rot90(x=Tensor([4, 4, 4, 0],"float64"), k=-1, axes=tuple(2,3,), )
paddle.rsqrt(Tensor([0, 1, 1],"float32"), )
paddle.rsqrt(Tensor([0, 1, 4096],"float32"), )
paddle.rsqrt(Tensor([0, 1],"float32"), )
paddle.rsqrt(Tensor([0, 128],"float32"), )
paddle.rsqrt(Tensor([0, 2, 16, 4, 1],"float32"), )
paddle.rsqrt(Tensor([0],"float32"), )
paddle.rsqrt(Tensor([1, 0, 1],"float32"), )
paddle.rsqrt(Tensor([1, 0, 4096],"float32"), )
paddle.rsqrt(Tensor([1, 0],"float32"), )
paddle.rsqrt(Tensor([1, 1, 0],"float32"), )
paddle.rsqrt(Tensor([13, 0, 16, 4, 1],"float32"), )
paddle.rsqrt(Tensor([13, 2, 0, 4, 1],"float32"), )
paddle.rsqrt(Tensor([13, 2, 16, 0, 1],"float32"), )
paddle.rsqrt(Tensor([13, 2, 16, 4, 0],"float32"), )
paddle.rsqrt(x=Tensor([0, 3, 2],"float32"), )
paddle.rsqrt(x=Tensor([0, 3, 2],"float64"), )
paddle.rsqrt(x=Tensor([2, 0, 2],"float32"), )
paddle.rsqrt(x=Tensor([2, 0, 2],"float64"), )
paddle.rsqrt(x=Tensor([2, 3, 0],"float32"), )
paddle.rsqrt(x=Tensor([2, 3, 0],"float64"), )
paddle.sin(Tensor([0, 10],"float32"), )
paddle.sin(Tensor([0, 128, 1, 32],"float32"), )
paddle.sin(Tensor([0, 2],"float32"), )
paddle.sin(Tensor([0, 20, 1],"float32"), )
paddle.sin(Tensor([0, 25, 1],"float32"), )
paddle.sin(Tensor([0, 4096, 1, 128],"float32"), )
paddle.sin(Tensor([0],"float32"), )
paddle.sin(Tensor([0],"float64"), )
paddle.sin(Tensor([1, 0, 1, 128],"float32"), )
paddle.sin(Tensor([1, 0, 1, 32],"float32"), )
paddle.sin(Tensor([1, 0, 1],"float32"), )
paddle.sin(Tensor([1, 0],"float32"), )
paddle.sin(Tensor([1, 128, 0, 32],"float32"), )
paddle.sin(Tensor([1, 128, 1, 0],"float32"), )
paddle.sin(Tensor([1, 25, 0],"float32"), )
paddle.sin(Tensor([1, 4096, 0, 128],"float32"), )
paddle.sin(Tensor([1, 4096, 1, 0],"float32"), )
paddle.sin(Tensor([10, 0, 1],"float32"), )
paddle.sin(Tensor([10, 0],"float32"), )
paddle.sin(Tensor([10, 20, 0],"float32"), )
paddle.sin(x=Tensor([0, 2, 3],"float64"), )
paddle.sin(x=Tensor([0, 2, 3],"float64"), name="test_sin", )
paddle.sin(x=Tensor([0],"float32"), )
paddle.sin(x=Tensor([0],"float64"), )
paddle.sin(x=Tensor([2, 0, 3],"float64"), )
paddle.sin(x=Tensor([2, 0, 3],"float64"), name="test_sin", )
paddle.sin(x=Tensor([2, 2, 0],"float64"), )
paddle.sin(x=Tensor([2, 2, 0],"float64"), name="test_sin", )
paddle.sinc(Tensor([0, 64],"float32"), )
paddle.sinc(Tensor([0, 64],"float64"), )
paddle.sinc(Tensor([0],"float32"), )
paddle.sinc(Tensor([0],"float64"), )
paddle.sinc(Tensor([16, 0],"float32"), )
paddle.sinc(Tensor([16, 0],"float64"), )
paddle.sinh(Tensor([0, 16, 32],"complex128"), )
paddle.sinh(Tensor([0, 20, 1],"float32"), )
paddle.sinh(Tensor([10, 0, 1],"float32"), )
paddle.sinh(Tensor([10, 20, 0],"float32"), )
paddle.sinh(Tensor([8, 0, 32],"complex128"), )
paddle.sinh(Tensor([8, 16, 0],"complex128"), )
paddle.sinh(x=Tensor([0, 2],"float32"), )
paddle.sinh(x=Tensor([0, 2],"float64"), )
paddle.sinh(x=Tensor([0, 3, 2, 2],"float64"), )
paddle.sinh(x=Tensor([0],"float64"), )
paddle.sinh(x=Tensor([1, 0],"float32"), )
paddle.sinh(x=Tensor([1, 0],"float64"), )
paddle.sinh(x=Tensor([2, 0, 2, 2],"float64"), )
paddle.sinh(x=Tensor([2, 3, 0, 2],"float64"), )
paddle.sinh(x=Tensor([2, 3, 2, 0],"float64"), )
paddle.sqrt(Tensor([0, 1, 1],"float32"), )
paddle.sqrt(Tensor([0, 1, 14, 14],"float32"), )
paddle.sqrt(Tensor([0, 1, 24, 24],"float32"), )
paddle.sqrt(Tensor([0, 1, 3],"float64"), )
paddle.sqrt(Tensor([0, 1, 512, 4, 4],"float32"), )
paddle.sqrt(Tensor([0, 1],"float32"), )
paddle.sqrt(Tensor([0, 10],"float64"), )
paddle.sqrt(Tensor([0, 15, 3, 256, 256],"float32"), )
paddle.sqrt(Tensor([0],"float32"), )
paddle.sqrt(Tensor([0],"float64"), )
paddle.sqrt(Tensor([1, 0, 1],"float32"), )
paddle.sqrt(Tensor([1, 0, 3],"float64"), )
paddle.sqrt(Tensor([1, 0],"float32"), )
paddle.sqrt(Tensor([1, 0],"float64"), )
paddle.sqrt(Tensor([1, 1, 0],"float32"), )
paddle.sqrt(Tensor([1, 1, 0],"float64"), )
paddle.sqrt(Tensor([124, 0, 14, 14],"float32"), )
paddle.sqrt(Tensor([124, 0, 24, 24],"float32"), )
paddle.sqrt(Tensor([124, 1, 0, 14],"float32"), )
paddle.sqrt(Tensor([124, 1, 0, 24],"float32"), )
paddle.sqrt(Tensor([124, 1, 14, 0],"float32"), )
paddle.sqrt(Tensor([124, 1, 24, 0],"float32"), )
paddle.sqrt(Tensor([2, 0, 512, 4, 4],"float32"), )
paddle.sqrt(Tensor([2, 1, 0, 4, 4],"float32"), )
paddle.sqrt(Tensor([2, 1, 512, 0, 4],"float32"), )
paddle.sqrt(Tensor([2, 1, 512, 4, 0],"float32"), )
paddle.sqrt(Tensor([4, 0, 3, 256, 256],"float32"), )
paddle.sqrt(Tensor([4, 15, 0, 256, 256],"float32"), )
paddle.sqrt(Tensor([4, 15, 3, 0, 256],"float32"), )
paddle.sqrt(Tensor([4, 15, 3, 256, 0],"float32"), )
paddle.sqrt(x=Tensor([0, 1, 1],"float32"), )
paddle.sqrt(x=Tensor([0, 3],"float64"), )
paddle.sqrt(x=Tensor([0],"float64"), )
paddle.sqrt(x=Tensor([0],"float64"), name=None, )
paddle.sqrt(x=Tensor([13, 0, 1],"float32"), )
paddle.sqrt(x=Tensor([13, 1, 0],"float32"), )
paddle.sqrt(x=Tensor([16, 0, 1],"float32"), )
paddle.sqrt(x=Tensor([16, 1, 0],"float32"), )
paddle.sqrt(x=Tensor([3, 0],"float64"), )
paddle.square(Tensor([0, 1, 1],"float32"), )
paddle.square(Tensor([0, 1],"float32"), )
paddle.square(Tensor([0, 1],"float32"), name=None, )
paddle.square(Tensor([0, 10, 10],"float32"), name=None, )
paddle.square(Tensor([0, 10],"float32"), name=None, )
paddle.square(Tensor([0, 196608],"float32"), )
paddle.square(Tensor([0, 2, 3, 3],"float32"), )
paddle.square(Tensor([0, 2, 3],"float32"), )
paddle.square(Tensor([0, 3, 10, 10],"float32"), )
paddle.square(Tensor([0, 3, 10, 10],"float32"), name=None, )
paddle.square(Tensor([0, 96, 2],"float32"), name=None, )
paddle.square(Tensor([0],"float64"), )
paddle.square(Tensor([1, 0, 1],"float32"), )
paddle.square(Tensor([1, 0],"float32"), )
paddle.square(Tensor([1, 1, 0],"float32"), )
paddle.square(Tensor([10, 0, 3],"float32"), )
paddle.square(Tensor([10, 0],"float32"), name=None, )
paddle.square(Tensor([10, 2, 0],"float32"), )
paddle.square(Tensor([100, 0],"float32"), name=None, )
paddle.square(Tensor([16, 0, 2],"float32"), name=None, )
paddle.square(Tensor([16, 96, 0],"float32"), name=None, )
paddle.square(Tensor([2, 0, 10],"float32"), name=None, )
paddle.square(Tensor([2, 10, 0],"float32"), name=None, )
paddle.square(Tensor([3, 0, 10, 10],"float32"), )
paddle.square(Tensor([3, 0, 10, 10],"float32"), name=None, )
paddle.square(Tensor([3, 0, 3, 3],"float32"), )
paddle.square(Tensor([3, 2, 0, 3],"float32"), )
paddle.square(Tensor([3, 2, 3, 0],"float32"), )
paddle.square(Tensor([3, 3, 0, 10],"float32"), )
paddle.square(Tensor([3, 3, 0, 10],"float32"), name=None, )
paddle.square(Tensor([3, 3, 10, 0],"float32"), )
paddle.square(Tensor([3, 3, 10, 0],"float32"), name=None, )
paddle.square(x=Tensor([0],"float32"), )
paddle.square(x=Tensor([0],"float64"), )
paddle.tan(Tensor([0, 1, 2, 2],"float32"), )
paddle.tan(Tensor([0, 1, 2],"float32"), )
paddle.tan(Tensor([0, 1],"float32"), )
paddle.tan(Tensor([0, 1],"float64"), )
paddle.tan(Tensor([0, 2, 3, 1],"float32"), )
paddle.tan(Tensor([0, 20, 1],"float32"), )
paddle.tan(Tensor([0],"float32"), )
paddle.tan(Tensor([10, 0, 1],"float32"), )
paddle.tan(Tensor([10, 20, 0],"float32"), )
paddle.tan(Tensor([100, 0, 2, 2],"float32"), )
paddle.tan(Tensor([100, 0, 2],"float32"), )
paddle.tan(Tensor([100, 0, 3, 1],"float32"), )
paddle.tan(Tensor([100, 0],"float32"), )
paddle.tan(Tensor([100, 0],"float64"), )
paddle.tan(Tensor([100, 1, 0, 2],"float32"), )
paddle.tan(Tensor([100, 1, 0],"float32"), )
paddle.tan(Tensor([100, 1, 2, 0],"float32"), )
paddle.tan(Tensor([100, 2, 0, 1],"float32"), )
paddle.tan(Tensor([100, 2, 3, 0],"float32"), )
paddle.tan(x=Tensor([0, 3, 3],"float32"), )
paddle.tan(x=Tensor([0, 3, 3],"float64"), )
paddle.tan(x=Tensor([3, 0, 3],"float32"), )
paddle.tan(x=Tensor([3, 0, 3],"float64"), )
paddle.tan(x=Tensor([3, 3, 0],"float32"), )
paddle.tan(x=Tensor([3, 3, 0],"float64"), )
paddle.Tensor.argsort(Tensor([0, 22400],"float32"), axis=1, descending=True, )
paddle.Tensor.argsort(Tensor([0, 22400],"int64"), axis=1, )
paddle.Tensor.chunk(Tensor([0, 1, 1, 4],"float32"), 4, axis=-1, )
paddle.Tensor.chunk(Tensor([0, 1, 10164, 2],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([0, 1, 10285, 2],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([0, 1, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([0, 10, 1, 4],"float32"), 4, axis=-1, )
paddle.Tensor.chunk(Tensor([0, 10, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([0, 128, 10],"float32"), 2, axis=1, )
paddle.Tensor.chunk(Tensor([0, 128, 1007],"float32"), 2, axis=1, )
paddle.Tensor.chunk(Tensor([0, 160, 16, 12],"float32"), 2, axis=1, )
paddle.Tensor.chunk(Tensor([0, 160, 8, 6],"float32"), 2, axis=1, )
paddle.Tensor.chunk(Tensor([0, 196, 768],"float32"), 3, axis=-1, )
paddle.Tensor.chunk(Tensor([0, 300, 101],"float32"), 16, )
paddle.Tensor.chunk(Tensor([0, 3136, 192],"float32"), 3, axis=-1, )
paddle.Tensor.chunk(Tensor([0, 4],"float32"), 2, axis=1, )
paddle.Tensor.chunk(Tensor([0, 8, 32],"float32"), 8, axis=1, )
paddle.Tensor.chunk(Tensor([1, 0, 1, 4],"float32"), 4, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 0, 10164, 2],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 0, 10285, 2],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 0, 2048],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 0],"float32"), 2, axis=1, )
paddle.Tensor.chunk(Tensor([1, 1, 0, 2],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 1, 0, 4],"float32"), 4, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 1, 0],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 1, 1, 0],"float32"), 4, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 1, 10164, 0],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 1, 10285, 0],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 10, 0, 4],"float32"), 4, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 10, 0],"float32"), 2, axis=-1, )
paddle.Tensor.chunk(Tensor([1, 10, 1, 0],"float32"), 4, axis=-1, )
paddle.Tensor.chunk(Tensor([128, 0, 192],"float32"), 3, axis=-1, )
paddle.Tensor.chunk(Tensor([128, 0, 768],"float32"), 3, axis=-1, )
paddle.Tensor.chunk(Tensor([128, 196, 0],"float32"), 3, axis=-1, )
paddle.Tensor.chunk(Tensor([128, 3136, 0],"float32"), 3, axis=-1, )
paddle.Tensor.chunk(Tensor([13, 0, 10],"float32"), 2, axis=1, )
paddle.Tensor.chunk(Tensor([13, 0, 1007],"float32"), 2, axis=1, )
paddle.Tensor.chunk(Tensor([13, 0, 32],"float32"), 8, axis=1, )
paddle.Tensor.chunk(Tensor([13, 128, 0],"float32"), 2, axis=1, )
paddle.Tensor.chunk(Tensor([13, 8, 0],"float32"), 8, axis=1, )
paddle.Tensor.chunk(Tensor([16, 0, 101],"float32"), 16, )
paddle.Tensor.chunk(Tensor([16, 0, 16, 12],"float32"), 2, axis=1, )
paddle.Tensor.chunk(Tensor([16, 0, 8, 6],"float32"), 2, axis=1, )
paddle.Tensor.chunk(Tensor([16, 160, 0, 12],"float32"), 2, axis=1, )
paddle.Tensor.chunk(Tensor([16, 160, 0, 6],"float32"), 2, axis=1, )
paddle.Tensor.chunk(Tensor([16, 160, 16, 0],"float32"), 2, axis=1, )
paddle.Tensor.chunk(Tensor([16, 160, 8, 0],"float32"), 2, axis=1, )
paddle.Tensor.chunk(Tensor([16, 300, 0],"float32"), 16, )
paddle.Tensor.clip(Tensor([0, 1, 1, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([0, 1, 10285, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([0, 1, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([0, 1, 2],"float32"), max=0, )
paddle.Tensor.clip(Tensor([0, 1, 28, 28],"float32"), -128, 127, )
paddle.Tensor.clip(Tensor([0, 1, 3, 3],"float32"), -448, 448, )
paddle.Tensor.clip(Tensor([0, 1, 32, 32],"float32"), -57344, 57344, )
paddle.Tensor.clip(Tensor([0, 1],"float32"), 0, )
paddle.Tensor.clip(Tensor([0, 100, 4],"float32"), min=0.0, max=1.0, )
paddle.Tensor.clip(Tensor([0, 100, 4],"float32"), min=1e-05, )
paddle.Tensor.clip(Tensor([0, 1001, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([0, 1002, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([0, 10164, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([0, 10164, 4],"float32"), 0, 15.99, )
paddle.Tensor.clip(Tensor([0, 10164, 4],"float32"), -2, 6.99, )
paddle.Tensor.clip(Tensor([0, 11, 4],"float32"), min=0, max=1, )
paddle.Tensor.clip(Tensor([0, 11, 4],"float32"), min=0.0, max=1.0, )
paddle.Tensor.clip(Tensor([0, 11, 4],"float32"), min=1e-05, )
paddle.Tensor.clip(Tensor([0, 1100, 4],"float32"), min=0.001, )
paddle.Tensor.clip(Tensor([0, 11109, 4],"float32"), -2, 6.99, )
paddle.Tensor.clip(Tensor([0, 120],"float32"), -448, 448, )
paddle.Tensor.clip(Tensor([0, 120],"float32"), -57344, 57344, )
paddle.Tensor.clip(Tensor([0, 16, 12, 12],"float32"), -57344, 57344, )
paddle.Tensor.clip(Tensor([0, 18, 4],"float32"), min=0.001, )
paddle.Tensor.clip(Tensor([0, 2, 1],"float32"), min=1e-07, )
paddle.Tensor.clip(Tensor([0, 2, 300, 2],"float16"), min=0.0, max=1.0, )
paddle.Tensor.clip(Tensor([0, 2, 300, 2],"float16"), min=1e-05, )
paddle.Tensor.clip(Tensor([0, 2, 300, 2],"float32"), min=0.0, max=1.0, )
paddle.Tensor.clip(Tensor([0, 2, 300, 2],"float32"), min=1e-05, )
paddle.Tensor.clip(Tensor([0, 2],"float32"), max=0, )
paddle.Tensor.clip(Tensor([0, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([0, 2],"int64"), 1, 2, )
paddle.Tensor.clip(Tensor([0, 20, 1],"float32"), 0.6, 1.5, )
paddle.Tensor.clip(Tensor([0, 20],"float64"), max=0, )
paddle.Tensor.clip(Tensor([0, 20],"float64"), min=0, )
paddle.Tensor.clip(Tensor([0, 21504, 4],"float32"), -2, 18.99, )
paddle.Tensor.clip(Tensor([0, 24276, 4],"float32"), -2, 18.99, )
paddle.Tensor.clip(Tensor([0, 28, 28],"float32"), 0, 1.0, )
paddle.Tensor.clip(Tensor([0, 3, 10, 10, 1],"float32"), 0, )
paddle.Tensor.clip(Tensor([0, 3, 20, 20, 1],"float32"), 0, )
paddle.Tensor.clip(Tensor([0, 3, 8, 8],"float32"), 0, 1.0, )
paddle.Tensor.clip(Tensor([0, 3],"int32"), 2, )
paddle.Tensor.clip(Tensor([0, 300, 4],"float32"), min=0, max=1, )
paddle.Tensor.clip(Tensor([0, 33],"float32"), max=1, )
paddle.Tensor.clip(Tensor([0, 33],"float32"), min=1e-08, )
paddle.Tensor.clip(Tensor([0, 576],"float32"), -57344, 57344, )
paddle.Tensor.clip(Tensor([0, 6, 5, 5],"float32"), -448, 448, )
paddle.Tensor.clip(Tensor([0, 6],"float32"), -128, 127, )
paddle.Tensor.clip(Tensor([0, 7],"int32"), 2, )
paddle.Tensor.clip(Tensor([0, 7],"int64"), 3, )
paddle.Tensor.clip(Tensor([0, 8, 8],"float32"), 0, 1.0, )
paddle.Tensor.clip(Tensor([0, 84],"float32"), -448, 448, )
paddle.Tensor.clip(Tensor([0, 8400, 4],"float32"), 0, 15.99, )
paddle.Tensor.clip(Tensor([0],"float32"), 0, )
paddle.Tensor.clip(Tensor([0],"float32"), 0, 4.605170185988092, )
paddle.Tensor.clip(Tensor([0],"float32"), 0, 89.99, )
paddle.Tensor.clip(Tensor([0],"float32"), -100.0, 100.0, )
paddle.Tensor.clip(Tensor([0],"float32"), max=0, )
paddle.Tensor.clip(Tensor([0],"float32"), min=0, )
paddle.Tensor.clip(Tensor([0],"float32"), min=0, max=15.9, )
paddle.Tensor.clip(Tensor([0],"float32"), min=0, max=6.9, )
paddle.Tensor.clip(Tensor([0],"float32"), min=0.0001, )
paddle.Tensor.clip(Tensor([0],"float64"), max=0, )
paddle.Tensor.clip(Tensor([0],"float64"), min=0, )
paddle.Tensor.clip(Tensor([0],"int32"), 0, 7, )
paddle.Tensor.clip(Tensor([0],"int32"), 0, 8, )
paddle.Tensor.clip(Tensor([0],"int64"), 0, 512, )
paddle.Tensor.clip(Tensor([1, 0, 1, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([1, 0, 10285, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([1, 0, 12, 12],"float32"), -57344, 57344, )
paddle.Tensor.clip(Tensor([1, 0, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([1, 0, 2],"float32"), min=0, )
paddle.Tensor.clip(Tensor([1, 0, 300, 2],"float16"), min=0.0, max=1.0, )
paddle.Tensor.clip(Tensor([1, 0, 300, 2],"float16"), min=1e-05, )
paddle.Tensor.clip(Tensor([1, 0, 300, 2],"float32"), min=0.0, max=1.0, )
paddle.Tensor.clip(Tensor([1, 0, 300, 2],"float32"), min=1e-05, )
paddle.Tensor.clip(Tensor([1, 0, 32, 32],"float32"), -57344, 57344, )
paddle.Tensor.clip(Tensor([1, 0, 4],"float32"), 0, 15.99, )
paddle.Tensor.clip(Tensor([1, 0, 4],"float32"), -2, 18.99, )
paddle.Tensor.clip(Tensor([1, 0, 4],"float32"), min=0, max=1, )
paddle.Tensor.clip(Tensor([1, 0, 4],"float32"), min=0.0, max=1.0, )
paddle.Tensor.clip(Tensor([1, 0, 4],"float32"), min=0.001, )
paddle.Tensor.clip(Tensor([1, 0, 4],"float32"), min=1e-05, )
paddle.Tensor.clip(Tensor([1, 0],"float32"), 0, )
paddle.Tensor.clip(Tensor([1, 0],"float32"), -57344, 57344, )
paddle.Tensor.clip(Tensor([1, 1, 0, 2],"float32"), 0, )
paddle.Tensor.clip(Tensor([1, 1, 0, 32],"float32"), -57344, 57344, )
paddle.Tensor.clip(Tensor([1, 1, 0],"float32"), 0, )
paddle.Tensor.clip(Tensor([1, 1, 1, 0],"float32"), 0, )
paddle.Tensor.clip(Tensor([1, 1, 10285, 0],"float32"), 0, )
paddle.Tensor.clip(Tensor([1, 1, 32, 0],"float32"), -57344, 57344, )
paddle.Tensor.clip(Tensor([1, 100, 0],"float32"), min=0.0, max=1.0, )
paddle.Tensor.clip(Tensor([1, 100, 0],"float32"), min=1e-05, )
paddle.Tensor.clip(Tensor([1, 1001, 0],"float32"), min=0, )
paddle.Tensor.clip(Tensor([1, 1002, 0],"float32"), min=0, )
paddle.Tensor.clip(Tensor([1, 10164, 0],"float32"), 0, )
paddle.Tensor.clip(Tensor([1, 11, 0],"float32"), min=0, max=1, )
paddle.Tensor.clip(Tensor([1, 11, 0],"float32"), min=0.0, max=1.0, )
paddle.Tensor.clip(Tensor([1, 11, 0],"float32"), min=1e-05, )
paddle.Tensor.clip(Tensor([1, 1100, 0],"float32"), min=0.001, )
paddle.Tensor.clip(Tensor([1, 16, 0, 12],"float32"), -57344, 57344, )
paddle.Tensor.clip(Tensor([1, 16, 12, 0],"float32"), -57344, 57344, )
paddle.Tensor.clip(Tensor([1, 18, 0],"float32"), min=0.001, )
paddle.Tensor.clip(Tensor([1, 2, 0, 2],"float16"), min=0.0, max=1.0, )
paddle.Tensor.clip(Tensor([1, 2, 0, 2],"float16"), min=1e-05, )
paddle.Tensor.clip(Tensor([1, 2, 0, 2],"float32"), min=0.0, max=1.0, )
paddle.Tensor.clip(Tensor([1, 2, 0, 2],"float32"), min=1e-05, )
paddle.Tensor.clip(Tensor([1, 2, 300, 0],"float16"), min=0.0, max=1.0, )
paddle.Tensor.clip(Tensor([1, 2, 300, 0],"float16"), min=1e-05, )
paddle.Tensor.clip(Tensor([1, 2, 300, 0],"float32"), min=0.0, max=1.0, )
paddle.Tensor.clip(Tensor([1, 2, 300, 0],"float32"), min=1e-05, )
paddle.Tensor.clip(Tensor([1, 21504, 0],"float32"), -2, 18.99, )
paddle.Tensor.clip(Tensor([1, 24276, 0],"float32"), -2, 18.99, )
paddle.Tensor.clip(Tensor([1, 300, 0],"float32"), min=0, max=1, )
paddle.Tensor.clip(Tensor([1, 8400, 0],"float32"), 0, 15.99, )
paddle.Tensor.clip(Tensor([10, 0, 1],"float32"), 0.6, 1.5, )
paddle.Tensor.clip(Tensor([10, 0],"float32"), 0, )
paddle.Tensor.clip(Tensor([10, 0],"float64"), max=0, )
paddle.Tensor.clip(Tensor([10, 0],"float64"), min=0, )
paddle.Tensor.clip(Tensor([10, 20, 0],"float32"), 0.6, 1.5, )
paddle.Tensor.clip(Tensor([12, 0, 10, 10, 1],"float32"), 0, )
paddle.Tensor.clip(Tensor([12, 0, 20, 20, 1],"float32"), 0, )
paddle.Tensor.clip(Tensor([12, 0],"int64"), 3, )
paddle.Tensor.clip(Tensor([12, 3, 0, 10, 1],"float32"), 0, )
paddle.Tensor.clip(Tensor([12, 3, 0, 20, 1],"float32"), 0, )
paddle.Tensor.clip(Tensor([12, 3, 10, 0, 1],"float32"), 0, )
paddle.Tensor.clip(Tensor([12, 3, 10, 10, 0],"float32"), 0, )
paddle.Tensor.clip(Tensor([12, 3, 20, 0, 1],"float32"), 0, )
paddle.Tensor.clip(Tensor([12, 3, 20, 20, 0],"float32"), 0, )
paddle.Tensor.clip(Tensor([120, 0],"float32"), -448, 448, )
paddle.Tensor.clip(Tensor([13, 0, 1],"float32"), min=1e-07, )
paddle.Tensor.clip(Tensor([13, 0],"int32"), 2, )
paddle.Tensor.clip(Tensor([13, 2, 0],"float32"), min=1e-07, )
paddle.Tensor.clip(Tensor([16, 0, 4],"float32"), 0, 15.99, )
paddle.Tensor.clip(Tensor([16, 0, 5, 5],"float32"), -448, 448, )
paddle.Tensor.clip(Tensor([16, 0],"float32"), max=1, )
paddle.Tensor.clip(Tensor([16, 0],"float32"), min=1e-08, )
paddle.Tensor.clip(Tensor([16, 10164, 0],"float32"), 0, 15.99, )
paddle.Tensor.clip(Tensor([16, 6, 0, 5],"float32"), -448, 448, )
paddle.Tensor.clip(Tensor([16, 6, 5, 0],"float32"), -448, 448, )
paddle.Tensor.clip(Tensor([2, 0, 2],"float32"), max=0, )
paddle.Tensor.clip(Tensor([2, 0, 4],"float32"), -2, 6.99, )
paddle.Tensor.clip(Tensor([2, 0, 8, 8],"float32"), 0, 1.0, )
paddle.Tensor.clip(Tensor([2, 0],"float32"), max=0, )
paddle.Tensor.clip(Tensor([2, 0],"float32"), min=0, )
paddle.Tensor.clip(Tensor([2, 0],"int64"), 1, 2, )
paddle.Tensor.clip(Tensor([2, 1, 0],"float32"), max=0, )
paddle.Tensor.clip(Tensor([2, 10164, 0],"float32"), -2, 6.99, )
paddle.Tensor.clip(Tensor([2, 11109, 0],"float32"), -2, 6.99, )
paddle.Tensor.clip(Tensor([2, 3, 0, 8],"float32"), 0, 1.0, )
paddle.Tensor.clip(Tensor([2, 3, 8, 0],"float32"), 0, 1.0, )
paddle.Tensor.clip(Tensor([23, 0],"float32"), max=1, )
paddle.Tensor.clip(Tensor([23, 0],"float32"), min=1e-08, )
paddle.Tensor.clip(Tensor([3, 0, 28],"float32"), 0, 1.0, )
paddle.Tensor.clip(Tensor([3, 0, 8],"float32"), 0, 1.0, )
paddle.Tensor.clip(Tensor([3, 28, 0],"float32"), 0, 1.0, )
paddle.Tensor.clip(Tensor([3, 8, 0],"float32"), 0, 1.0, )
paddle.Tensor.clip(Tensor([576, 0],"float32"), -448, 448, )
paddle.Tensor.clip(Tensor([6, 0, 3, 3],"float32"), -448, 448, )
paddle.Tensor.clip(Tensor([6, 1, 0, 3],"float32"), -448, 448, )
paddle.Tensor.clip(Tensor([6, 1, 3, 0],"float32"), -448, 448, )
paddle.Tensor.clip(Tensor([64, 0, 28, 28],"float32"), -128, 127, )
paddle.Tensor.clip(Tensor([64, 1, 0, 28],"float32"), -128, 127, )
paddle.Tensor.clip(Tensor([64, 1, 28, 0],"float32"), -128, 127, )
paddle.Tensor.clip(Tensor([9, 0],"float32"), -128, 127, )
paddle.Tensor.cumsum(Tensor([0, 1],"float32"), axis=-1, )
paddle.Tensor.cumsum(Tensor([0, 10, 8],"float32"), 1, )
paddle.Tensor.cumsum(Tensor([0, 10, 8],"float32"), 2, )
paddle.Tensor.cumsum(Tensor([0, 10],"int64"), axis=1, )
paddle.Tensor.cumsum(Tensor([0, 100],"int64"), axis=1, )
paddle.Tensor.cumsum(Tensor([0, 12, 9],"float32"), 1, )
paddle.Tensor.cumsum(Tensor([0, 12, 9],"float32"), 2, )
paddle.Tensor.cumsum(Tensor([0, 14],"int32"), -1, )
paddle.Tensor.cumsum(Tensor([0, 2],"float32"), axis=-1, )
paddle.Tensor.cumsum(Tensor([0, 4, 2],"int64"), axis=1, )
paddle.Tensor.cumsum(Tensor([0, 4, 2],"int64"), axis=2, )
paddle.Tensor.cumsum(Tensor([1, 0, 8],"float32"), 2, )
paddle.Tensor.cumsum(Tensor([1, 0, 9],"float32"), 2, )
paddle.Tensor.cumsum(Tensor([1, 10, 0],"float32"), 1, )
paddle.Tensor.cumsum(Tensor([1, 12, 0],"float32"), 1, )
paddle.Tensor.cumsum(Tensor([3, 0, 2],"int64"), axis=0, )
paddle.Tensor.cumsum(Tensor([3, 0, 2],"int64"), axis=2, )
paddle.Tensor.cumsum(Tensor([3, 0],"int64"), axis=0, )
paddle.Tensor.cumsum(Tensor([3, 4, 0],"int64"), axis=0, )
paddle.Tensor.cumsum(Tensor([3, 4, 0],"int64"), axis=1, )
paddle.Tensor.cumsum(Tensor([5, 0],"int64"), axis=0, )
paddle.Tensor.diag_embed(Tensor([0, 1, 2],"float32"), )
paddle.Tensor.diag_embed(Tensor([1, 0, 2],"float32"), )
paddle.Tensor.diag_embed(Tensor([1, 1, 0],"float32"), )
paddle.Tensor.fill_diagonal_(Tensor([0, 128],"float32"), 0, wrap=False, )
paddle.Tensor.fill_diagonal_(Tensor([128, 0],"float32"), 0, wrap=False, )
paddle.Tensor.flip(Tensor([0, 14],"int32"), list[-1,], )
paddle.Tensor.flip(Tensor([0, 2],"int64"), list[1,], )
paddle.Tensor.flip(Tensor([0, 224, 224],"float32"), axis=list[-1,], )
paddle.Tensor.flip(Tensor([0, 280, 350],"float32"), axis=list[-1,], )
paddle.Tensor.flip(Tensor([0, 280, 350],"float32"), axis=list[-2,], )
paddle.Tensor.flip(Tensor([0, 400, 300],"float32"), axis=list[-2,], )
paddle.Tensor.flip(Tensor([13, 0],"int32"), list[-1,], )
paddle.Tensor.flip(Tensor([3, 0, 224],"float32"), axis=list[-1,], )
paddle.Tensor.flip(Tensor([3, 0, 300],"float32"), axis=list[-2,], )
paddle.Tensor.flip(Tensor([3, 0, 350],"float32"), axis=list[-1,], )
paddle.Tensor.flip(Tensor([3, 0, 350],"float32"), axis=list[-2,], )
paddle.Tensor.flip(Tensor([3, 224, 0],"float32"), axis=list[-1,], )
paddle.Tensor.flip(Tensor([3, 280, 0],"float32"), axis=list[-1,], )
paddle.Tensor.flip(Tensor([3, 280, 0],"float32"), axis=list[-2,], )
paddle.Tensor.flip(Tensor([3, 400, 0],"float32"), axis=list[-2,], )
paddle.Tensor.flip(Tensor([4, 0],"int64"), list[1,], )
paddle.Tensor.flip(Tensor([5, 0],"int64"), list[1,], )
paddle.Tensor.gcd(x=Tensor([0, 1, 4, 5],"int32"), y=Tensor([2, 1, 5],"int32"), )
paddle.Tensor.gcd(x=Tensor([0, 2, 4, 5],"int32"), y=Tensor([0, 2, 4, 5],"int32"), )
paddle.Tensor.gcd(x=Tensor([0, 4, 5],"int32"), y=Tensor([0, 4, 5],"int32"), )
paddle.Tensor.gcd(x=Tensor([0, 5],"int32"), y=Tensor([0, 5],"int32"), )
paddle.Tensor.gcd(x=Tensor([0],"int32"), y=Tensor([0],"int32"), )
paddle.Tensor.gcd(x=Tensor([0],"int32"), y=Tensor([1],"int32"), )
paddle.Tensor.gcd(x=Tensor([0],"int64"), y=Tensor([0],"int64"), )
paddle.Tensor.gcd(x=Tensor([0],"int64"), y=Tensor([1],"int64"), )
paddle.Tensor.gcd(x=Tensor([1],"int32"), y=Tensor([0],"int32"), )
paddle.Tensor.gcd(x=Tensor([1],"int64"), y=Tensor([0],"int64"), )
paddle.Tensor.gcd(x=Tensor([2, 0, 5],"int32"), y=Tensor([2, 0, 5],"int32"), )
paddle.Tensor.gcd(x=Tensor([2, 4, 0],"int32"), y=Tensor([2, 4, 0],"int32"), )
paddle.Tensor.gcd(x=Tensor([4, 0],"int32"), y=Tensor([4, 0],"int32"), )
paddle.Tensor.gcd(x=Tensor([6, 0, 4, 5],"int32"), y=Tensor([6, 0, 4, 5],"int32"), )
paddle.Tensor.gcd(x=Tensor([6, 1, 0, 5],"int32"), y=Tensor([2, 1, 5],"int32"), )
paddle.Tensor.gcd(x=Tensor([6, 1, 4, 5],"int32"), y=Tensor([0, 1, 5],"int32"), )
paddle.Tensor.gcd(x=Tensor([6, 2, 0, 5],"int32"), y=Tensor([6, 2, 0, 5],"int32"), )
paddle.Tensor.gcd(x=Tensor([6, 2, 4, 0],"int32"), y=Tensor([6, 2, 4, 0],"int32"), )
paddle.Tensor.isclose(x=Tensor([0, 4, 5],"float64"), y=Tensor([0, 4, 5],"float64"), )
paddle.Tensor.isclose(x=Tensor([0],"float32"), y=Tensor([0],"float32"), )
paddle.Tensor.isclose(x=Tensor([0],"float64"), y=Tensor([0],"float64"), )
paddle.Tensor.isclose(x=Tensor([3, 0, 5],"float64"), y=Tensor([3, 0, 5],"float64"), )
paddle.Tensor.isclose(x=Tensor([3, 4, 0],"float64"), y=Tensor([3, 4, 0],"float64"), )
paddle.Tensor.kthvalue(Tensor([0, 200, 10],"float32"), k=200, axis=1, )
paddle.Tensor.kthvalue(Tensor([2, 200, 0],"float32"), k=200, axis=1, )
paddle.Tensor.logit(x=Tensor([0, 2],"float64"), )
paddle.Tensor.logit(x=Tensor([0, 3, 2, 5],"float64"), )
paddle.Tensor.logit(x=Tensor([0, 3, 2, 5],"float64"), eps=0.2, )
paddle.Tensor.logit(x=Tensor([0, 3, 2],"float64"), )
paddle.Tensor.logit(x=Tensor([0],"float32"), )
paddle.Tensor.logit(x=Tensor([0],"float64"), )
paddle.Tensor.logit(x=Tensor([4, 0, 2, 5],"float64"), )
paddle.Tensor.logit(x=Tensor([4, 0, 2, 5],"float64"), eps=0.2, )
paddle.Tensor.logit(x=Tensor([4, 0, 2],"float64"), )
paddle.Tensor.logit(x=Tensor([4, 0],"float64"), )
paddle.Tensor.logit(x=Tensor([4, 3, 0, 5],"float64"), )
paddle.Tensor.logit(x=Tensor([4, 3, 0, 5],"float64"), eps=0.2, )
paddle.Tensor.logit(x=Tensor([4, 3, 0],"float64"), )
paddle.Tensor.logit(x=Tensor([4, 3, 2, 0],"float64"), )
paddle.Tensor.logit(x=Tensor([4, 3, 2, 0],"float64"), eps=0.2, )
paddle.Tensor.masked_fill(Tensor([0, 25, 25],"float32"), Tensor([0, 25, 25],"bool"), -100.0, )
paddle.Tensor.masked_fill(Tensor([0, 32],"float32"), Tensor([0, 32],"bool"), 0, )
paddle.Tensor.masked_fill(Tensor([0, 36828, 256],"float32"), Tensor([0, 36828, 1],"bool"), 0.0, )
paddle.Tensor.masked_fill(Tensor([0, 36828, 256],"float32"), Tensor([1, 36828, 1],"bool"), 0.0, )
paddle.Tensor.masked_fill(Tensor([0, 36828, 4],"float32"), Tensor([0, 36828, 1],"bool"), math.inf, )
paddle.Tensor.masked_fill(Tensor([0, 36828, 4],"float32"), Tensor([1, 36828, 1],"bool"), math.inf, )
paddle.Tensor.masked_fill(Tensor([0, 38367, 256],"float32"), Tensor([0, 38367, 1],"bool"), 0.0, )
paddle.Tensor.masked_fill(Tensor([0, 38367, 256],"float32"), Tensor([1, 38367, 1],"bool"), 0.0, )
paddle.Tensor.masked_fill(Tensor([0, 38367, 4],"float32"), Tensor([0, 38367, 1],"bool"), math.inf, )
paddle.Tensor.masked_fill(Tensor([0, 38367, 4],"float32"), Tensor([1, 38367, 1],"bool"), math.inf, )
paddle.Tensor.masked_fill(Tensor([0, 4, 7, 7],"float32"), Tensor([0, 4, 7, 7],"bool"), 0, )
paddle.Tensor.masked_fill(Tensor([0, 7, 32],"float32"), Tensor([0, 7, 32],"bool"), 0, )
paddle.Tensor.masked_fill(Tensor([1, 0, 256],"float32"), Tensor([1, 0, 1],"bool"), 0.0, )
paddle.Tensor.masked_fill(Tensor([1, 0, 4],"float32"), Tensor([1, 0, 1],"bool"), math.inf, )
paddle.Tensor.masked_fill(Tensor([1, 36828, 0],"float32"), Tensor([1, 36828, 0],"bool"), 0.0, )
paddle.Tensor.masked_fill(Tensor([1, 36828, 0],"float32"), Tensor([1, 36828, 0],"bool"), math.inf, )
paddle.Tensor.masked_fill(Tensor([1, 36828, 0],"float32"), Tensor([1, 36828, 1],"bool"), 0.0, )
paddle.Tensor.masked_fill(Tensor([1, 36828, 0],"float32"), Tensor([1, 36828, 1],"bool"), math.inf, )
paddle.Tensor.masked_fill(Tensor([1, 36828, 256],"float32"), Tensor([0, 36828, 1],"bool"), 0.0, )
paddle.Tensor.masked_fill(Tensor([1, 36828, 4],"float32"), Tensor([0, 36828, 1],"bool"), math.inf, )
paddle.Tensor.masked_fill(Tensor([1, 38367, 0],"float32"), Tensor([1, 38367, 0],"bool"), 0.0, )
paddle.Tensor.masked_fill(Tensor([1, 38367, 0],"float32"), Tensor([1, 38367, 0],"bool"), math.inf, )
paddle.Tensor.masked_fill(Tensor([1, 38367, 0],"float32"), Tensor([1, 38367, 1],"bool"), 0.0, )
paddle.Tensor.masked_fill(Tensor([1, 38367, 0],"float32"), Tensor([1, 38367, 1],"bool"), math.inf, )
paddle.Tensor.masked_fill(Tensor([1, 38367, 256],"float32"), Tensor([0, 38367, 1],"bool"), 0.0, )
paddle.Tensor.masked_fill(Tensor([1, 38367, 4],"float32"), Tensor([0, 38367, 1],"bool"), math.inf, )
paddle.Tensor.masked_fill(Tensor([10, 0, 25],"float32"), Tensor([10, 0, 25],"bool"), -100.0, )
paddle.Tensor.masked_fill(Tensor([10, 25, 0],"float32"), Tensor([10, 25, 0],"bool"), -100.0, )
paddle.Tensor.masked_fill(Tensor([13, 0, 32],"float32"), Tensor([13, 0, 32],"bool"), 0, )
paddle.Tensor.masked_fill(Tensor([13, 0, 7, 7],"float32"), Tensor([13, 0, 7, 7],"bool"), 0, )
paddle.Tensor.masked_fill(Tensor([13, 0],"float32"), Tensor([13, 0],"bool"), 0, )
paddle.Tensor.masked_fill(Tensor([13, 4, 0, 7],"float32"), Tensor([13, 4, 0, 7],"bool"), 0, )
paddle.Tensor.masked_fill(Tensor([13, 4, 7, 0],"float32"), Tensor([13, 4, 7, 0],"bool"), 0, )
paddle.Tensor.masked_fill(Tensor([13, 7, 0],"float32"), Tensor([13, 7, 0],"bool"), 0, )
paddle.Tensor.masked_fill(Tensor([27, 0, 25],"float32"), Tensor([27, 0, 25],"bool"), -100.0, )
paddle.Tensor.masked_fill(Tensor([27, 25, 0],"float32"), Tensor([27, 25, 0],"bool"), -100.0, )
paddle.Tensor.masked_fill(Tensor([52, 0, 32],"float32"), Tensor([52, 0, 32],"bool"), 0, )
paddle.Tensor.masked_fill(Tensor([52, 0, 7, 7],"float32"), Tensor([52, 0, 7, 7],"bool"), 0, )
paddle.Tensor.masked_fill(Tensor([52, 0],"float32"), Tensor([52, 0],"bool"), 0, )
paddle.Tensor.masked_fill(Tensor([52, 4, 0, 7],"float32"), Tensor([52, 4, 0, 7],"bool"), 0, )
paddle.Tensor.masked_fill(Tensor([52, 4, 7, 0],"float32"), Tensor([52, 4, 7, 0],"bool"), 0, )
paddle.Tensor.masked_fill(Tensor([52, 7, 0],"float32"), Tensor([52, 7, 0],"bool"), 0, )
paddle.Tensor.masked_select(Tensor([0, 1],"float32"), Tensor([0, 1],"bool"), )
paddle.Tensor.masked_select(Tensor([0, 1],"float32"), Tensor([1, 1],"bool"), )
paddle.Tensor.masked_select(Tensor([0, 10, 10, 10, 10],"float64"), Tensor([0, 10, 10, 10, 10],"bool"), )
paddle.Tensor.masked_select(Tensor([0, 2],"float32"), Tensor([0, 2],"bool"), )
paddle.Tensor.masked_select(Tensor([0, 22, 16],"float32"), Tensor([0, 22, 16],"bool"), )
paddle.Tensor.masked_select(Tensor([0, 22, 16],"float32"), Tensor([1, 22, 16],"bool"), )
paddle.Tensor.masked_select(Tensor([0, 7, 16],"float32"), Tensor([0, 7, 16],"bool"), )
paddle.Tensor.masked_select(Tensor([0],"int32"), Tensor([0],"bool"), )
paddle.Tensor.masked_select(Tensor([0],"int64"), Tensor([0],"bool"), )
paddle.Tensor.masked_select(Tensor([1, 0, 16],"float32"), Tensor([1, 0, 16],"bool"), )
paddle.Tensor.masked_select(Tensor([1, 0],"float32"), Tensor([1, 0],"bool"), )
paddle.Tensor.masked_select(Tensor([1, 0],"float32"), Tensor([1, 1],"bool"), )
paddle.Tensor.masked_select(Tensor([1, 1],"float32"), Tensor([0, 1],"bool"), )
paddle.Tensor.masked_select(Tensor([1, 1],"float32"), Tensor([1, 0],"bool"), )
paddle.Tensor.masked_select(Tensor([1, 22, 0],"float32"), Tensor([1, 22, 0],"bool"), )
paddle.Tensor.masked_select(Tensor([1, 22, 16],"float32"), Tensor([0, 22, 16],"bool"), )
paddle.Tensor.masked_select(Tensor([10, 0, 10, 10, 10],"float64"), Tensor([10, 0, 10, 10, 10],"bool"), )
paddle.Tensor.masked_select(Tensor([10, 10, 0, 10, 10],"float64"), Tensor([10, 10, 0, 10, 10],"bool"), )
paddle.Tensor.masked_select(Tensor([10, 10, 10, 0, 10],"float64"), Tensor([10, 10, 10, 0, 10],"bool"), )
paddle.Tensor.masked_select(Tensor([10, 10, 10, 10, 0],"float64"), Tensor([10, 10, 10, 10, 0],"bool"), )
paddle.Tensor.masked_select(Tensor([13, 0, 16],"float32"), Tensor([13, 0, 16],"bool"), )
paddle.Tensor.masked_select(Tensor([13, 7, 0],"float32"), Tensor([13, 7, 0],"bool"), )
paddle.Tensor.masked_select(Tensor([15000, 0],"float32"), Tensor([15000, 0],"bool"), )
paddle.Tensor.multigammaln(Tensor([0],"float32"), 3, )
paddle.Tensor.nansum(Tensor([0, 2, 3, 4, 5, 1, 2],"float64"), axis=3, keepdim=True, )
paddle.Tensor.nansum(Tensor([0, 3, 3],"float32"), )
paddle.Tensor.nansum(Tensor([0, 3, 3],"float64"), )
paddle.Tensor.nansum(Tensor([0, 3, 3],"float64"), axis=0, keepdim=True, )
paddle.Tensor.nansum(Tensor([0, 3, 3],"float64"), axis=-1, )
paddle.Tensor.nansum(Tensor([3, 0, 3, 4, 5, 1, 2],"float64"), axis=3, keepdim=True, )
paddle.Tensor.nansum(Tensor([3, 0, 3],"float32"), )
paddle.Tensor.nansum(Tensor([3, 0, 3],"float64"), )
paddle.Tensor.nansum(Tensor([3, 0, 3],"float64"), axis=0, keepdim=True, )
paddle.Tensor.nansum(Tensor([3, 0, 3],"float64"), axis=-1, )
paddle.Tensor.nansum(Tensor([3, 2, 0, 4, 5, 1, 2],"float64"), axis=3, keepdim=True, )
paddle.Tensor.nansum(Tensor([3, 2, 3, 0, 5, 1, 2],"float64"), axis=3, keepdim=True, )
paddle.Tensor.nansum(Tensor([3, 2, 3, 4, 0, 1, 2],"float64"), axis=3, keepdim=True, )
paddle.Tensor.nansum(Tensor([3, 2, 3, 4, 5, 0, 2],"float64"), axis=3, keepdim=True, )
paddle.Tensor.nansum(Tensor([3, 2, 3, 4, 5, 1, 0],"float64"), axis=3, keepdim=True, )
paddle.Tensor.nansum(Tensor([3, 3, 0],"float32"), )
paddle.Tensor.nansum(Tensor([3, 3, 0],"float64"), )
paddle.Tensor.nansum(Tensor([3, 3, 0],"float64"), axis=0, keepdim=True, )
paddle.Tensor.nansum(Tensor([3, 3, 0],"float64"), axis=-1, )
paddle.Tensor.repeat_interleave(Tensor([0, 1, 1, 3],"float32"), 1, axis=0, )
paddle.Tensor.repeat_interleave(Tensor([0, 1, 1, 3],"float32"), 2, axis=0, )
paddle.Tensor.repeat_interleave(Tensor([0, 1, 1, 3],"float32"), 3, axis=0, )
paddle.Tensor.repeat_interleave(Tensor([0, 1, 10, 10],"int64"), 1, axis=0, )
paddle.Tensor.repeat_interleave(Tensor([0, 1, 10, 10],"int64"), 2, axis=0, )
paddle.Tensor.repeat_interleave(Tensor([0, 1, 10, 10],"int64"), 3, axis=0, )
paddle.Tensor.repeat_interleave(Tensor([0, 1],"int64"), 1, axis=0, )
paddle.Tensor.repeat_interleave(Tensor([0, 1],"int64"), 2, axis=0, )
paddle.Tensor.repeat_interleave(Tensor([0, 1],"int64"), 3, axis=0, )
paddle.Tensor.repeat_interleave(Tensor([0, 10],"int64"), 1, axis=0, )
paddle.Tensor.repeat_interleave(Tensor([0, 10],"int64"), 2, axis=0, )
paddle.Tensor.repeat_interleave(Tensor([0, 10],"int64"), 3, axis=0, )
paddle.Tensor.repeat_interleave(Tensor([0, 3, 16],"float32"), 1, axis=0, )
paddle.Tensor.repeat_interleave(Tensor([0, 3, 16],"float32"), 2, axis=0, )
paddle.Tensor.repeat_interleave(Tensor([0, 3, 16],"float32"), 3, axis=0, )
paddle.Tensor.repeat_interleave(Tensor([0, 3, 32],"float32"), 1, axis=0, )
paddle.Tensor.repeat_interleave(Tensor([0, 3, 32],"float32"), 2, axis=0, )
paddle.Tensor.repeat_interleave(Tensor([0, 3, 32],"float32"), 3, axis=0, )
paddle.Tensor.repeat_interleave(Tensor([2, 0, 1, 3],"float32"), 1, axis=0, )
paddle.Tensor.repeat_interleave(Tensor([2, 0, 1, 3],"float32"), 2, axis=0, )
paddle.Tensor.repeat_interleave(Tensor([2, 0, 1, 3],"float32"), 3, axis=0, )
paddle.Tensor.repeat_interleave(Tensor([2, 0, 10, 10],"int64"), 1, axis=0, )
paddle.Tensor.repeat_interleave(Tensor([2, 0, 10, 10],"int64"), 2, axis=0, )
paddle.Tensor.repeat_interleave(Tensor([2, 0, 10, 10],"int64"), 3, axis=0, )
paddle.Tensor.repeat_interleave(Tensor([2, 0, 16],"float32"), 1, axis=0, )
paddle.Tensor.repeat_interleave(Tensor([2, 0, 16],"float32"), 2, axis=0, )
paddle.Tensor.repeat_interleave(Tensor([2, 0, 16],"float32"), 3, axis=0, )
paddle.Tensor.repeat_interleave(Tensor([2, 0, 32],"float32"), 1, axis=0, )
paddle.Tensor.repeat_interleave(Tensor([2, 0, 32],"float32"), 2, axis=0, )
paddle.Tensor.repeat_interleave(Tensor([2, 0, 32],"float32"), 3, axis=0, )
paddle.Tensor.repeat_interleave(Tensor([2, 0],"int64"), 1, axis=0, )
paddle.Tensor.repeat_interleave(Tensor([2, 0],"int64"), 2, axis=0, )
paddle.Tensor.repeat_interleave(Tensor([2, 0],"int64"), 3, axis=0, )
paddle.Tensor.repeat_interleave(Tensor([2, 1, 0, 10],"int64"), 1, axis=0, )
paddle.Tensor.repeat_interleave(Tensor([2, 1, 0, 10],"int64"), 2, axis=0, )
paddle.Tensor.repeat_interleave(Tensor([2, 1, 0, 10],"int64"), 3, axis=0, )
paddle.Tensor.repeat_interleave(Tensor([2, 1, 0, 3],"float32"), 1, axis=0, )
paddle.Tensor.repeat_interleave(Tensor([2, 1, 0, 3],"float32"), 2, axis=0, )
paddle.Tensor.repeat_interleave(Tensor([2, 1, 0, 3],"float32"), 3, axis=0, )
paddle.Tensor.repeat_interleave(Tensor([2, 1, 1, 0],"float32"), 1, axis=0, )
paddle.Tensor.repeat_interleave(Tensor([2, 1, 1, 0],"float32"), 2, axis=0, )
paddle.Tensor.repeat_interleave(Tensor([2, 1, 1, 0],"float32"), 3, axis=0, )
paddle.Tensor.repeat_interleave(Tensor([2, 1, 10, 0],"int64"), 1, axis=0, )
paddle.Tensor.repeat_interleave(Tensor([2, 1, 10, 0],"int64"), 2, axis=0, )
paddle.Tensor.repeat_interleave(Tensor([2, 1, 10, 0],"int64"), 3, axis=0, )
paddle.Tensor.repeat_interleave(Tensor([2, 3, 0],"float32"), 1, axis=0, )
paddle.Tensor.repeat_interleave(Tensor([2, 3, 0],"float32"), 2, axis=0, )
paddle.Tensor.repeat_interleave(Tensor([2, 3, 0],"float32"), 3, axis=0, )
paddle.Tensor.repeat_interleave(x=Tensor([0, 2, 4, 4, 5],"float64"), repeats=2, )
paddle.Tensor.repeat_interleave(x=Tensor([0, 2, 4, 4, 5],"float64"), repeats=2, axis=1, )
paddle.Tensor.repeat_interleave(x=Tensor([0, 2, 4, 4, 5],"int32"), repeats=2, axis=3, )
paddle.Tensor.repeat_interleave(x=Tensor([0, 2, 4, 5],"float64"), repeats=2, )
paddle.Tensor.repeat_interleave(x=Tensor([0, 2, 4],"float64"), repeats=2, )
paddle.Tensor.repeat_interleave(x=Tensor([0, 2],"float64"), repeats=2, )
paddle.Tensor.repeat_interleave(x=Tensor([0],"float32"), repeats=3, )
paddle.Tensor.repeat_interleave(x=Tensor([0],"float64"), repeats=3, )
paddle.Tensor.repeat_interleave(x=Tensor([4, 0, 4, 4, 5],"float64"), repeats=2, )
paddle.Tensor.repeat_interleave(x=Tensor([4, 0, 4, 4, 5],"float64"), repeats=2, axis=1, )
paddle.Tensor.repeat_interleave(x=Tensor([4, 0, 4, 4, 5],"int32"), repeats=2, axis=3, )
paddle.Tensor.repeat_interleave(x=Tensor([4, 0, 4, 5],"float64"), repeats=2, )
paddle.Tensor.repeat_interleave(x=Tensor([4, 0, 4],"float64"), repeats=2, )
paddle.Tensor.repeat_interleave(x=Tensor([4, 0],"float64"), repeats=2, )
paddle.Tensor.repeat_interleave(x=Tensor([4, 2, 0, 4, 5],"float64"), repeats=2, )
paddle.Tensor.repeat_interleave(x=Tensor([4, 2, 0, 4, 5],"float64"), repeats=2, axis=1, )
paddle.Tensor.repeat_interleave(x=Tensor([4, 2, 0, 4, 5],"int32"), repeats=2, axis=3, )
paddle.Tensor.repeat_interleave(x=Tensor([4, 2, 0, 5],"float64"), repeats=2, )
paddle.Tensor.repeat_interleave(x=Tensor([4, 2, 0],"float64"), repeats=2, )
paddle.Tensor.repeat_interleave(x=Tensor([4, 2, 4, 0, 5],"float64"), repeats=2, )
paddle.Tensor.repeat_interleave(x=Tensor([4, 2, 4, 0, 5],"float64"), repeats=2, axis=1, )
paddle.Tensor.repeat_interleave(x=Tensor([4, 2, 4, 0, 5],"int32"), repeats=2, axis=3, )
paddle.Tensor.repeat_interleave(x=Tensor([4, 2, 4, 0],"float64"), repeats=2, )
paddle.Tensor.repeat_interleave(x=Tensor([4, 2, 4, 4, 0],"float64"), repeats=2, )
paddle.Tensor.repeat_interleave(x=Tensor([4, 2, 4, 4, 0],"float64"), repeats=2, axis=1, )
paddle.Tensor.repeat_interleave(x=Tensor([4, 2, 4, 4, 0],"int32"), repeats=2, axis=3, )
paddle.Tensor.rot90(Tensor([0, 2],"float32"), 1, axes=list[0,1,], )
paddle.Tensor.rot90(Tensor([3, 0],"float32"), 1, axes=list[0,1,], )
paddle.Tensor.rot90(x=Tensor([0, 4, 4, 4],"float64"), )
paddle.Tensor.rot90(x=Tensor([0, 4, 4, 4],"float64"), k=-1, axes=list[1,2,], )
paddle.Tensor.rot90(x=Tensor([0, 4, 4, 4],"float64"), k=-1, axes=tuple(2,3,), )
paddle.Tensor.rot90(x=Tensor([0, 4, 4],"float64"), )
paddle.Tensor.rot90(x=Tensor([0, 4],"float32"), )
paddle.Tensor.rot90(x=Tensor([0, 4],"float64"), )
paddle.Tensor.rot90(x=Tensor([0, 4],"float64"), k=-1, )
paddle.Tensor.rot90(x=Tensor([3, 0],"float64"), )
paddle.Tensor.rot90(x=Tensor([4, 0, 4, 4],"float64"), )
paddle.Tensor.rot90(x=Tensor([4, 0, 4, 4],"float64"), k=-1, axes=list[1,2,], )
paddle.Tensor.rot90(x=Tensor([4, 0, 4, 4],"float64"), k=-1, axes=tuple(2,3,), )
paddle.Tensor.rot90(x=Tensor([4, 0, 4],"float64"), )
paddle.Tensor.rot90(x=Tensor([4, 0],"float32"), )
paddle.Tensor.rot90(x=Tensor([4, 0],"float64"), k=-1, )
paddle.Tensor.rot90(x=Tensor([4, 4, 0, 4],"float64"), )
paddle.Tensor.rot90(x=Tensor([4, 4, 0, 4],"float64"), k=-1, axes=list[1,2,], )
paddle.Tensor.rot90(x=Tensor([4, 4, 0, 4],"float64"), k=-1, axes=tuple(2,3,), )
paddle.Tensor.rot90(x=Tensor([4, 4, 0],"float64"), )
paddle.Tensor.rot90(x=Tensor([4, 4, 4, 0],"float64"), )
paddle.Tensor.rot90(x=Tensor([4, 4, 4, 0],"float64"), k=-1, axes=list[1,2,], )
paddle.Tensor.rot90(x=Tensor([4, 4, 4, 0],"float64"), k=-1, axes=tuple(2,3,), )
paddle.Tensor.tril(Tensor([0, 2, 2],"float32"), -1, )
paddle.Tensor.tril(Tensor([0, 2],"float32"), -1, )
paddle.Tensor.tril(Tensor([1, 0, 2],"float32"), -1, )
paddle.Tensor.tril(Tensor([1, 2, 0],"float32"), -1, )
paddle.Tensor.tril(Tensor([2, 0, 2],"float32"), -1, )
paddle.Tensor.tril(Tensor([2, 0],"float32"), -1, )
paddle.Tensor.tril(Tensor([2, 2, 0],"float32"), -1, )
paddle.tile(Tensor([0, 1],"float32"), list[1,1,49,], )
paddle.tile(Tensor([0, 7],"float32"), list[40,1,1,], )
paddle.tile(Tensor([0],"float32"), list[245,1,], )
paddle.tile(Tensor([0],"float32"), list[7,1,], )
paddle.tile(Tensor([1, 0, 1, 1, 1, 1],"float32"), list[1,3,4,4,1,1,], )
paddle.tile(Tensor([1, 0, 1, 1, 1, 3],"float32"), list[216,248,1,1,2,1,], )
paddle.tile(Tensor([1, 0, 1, 1],"float32"), list[3,1,1,1,], )
paddle.tile(Tensor([1, 0, 1, 64, 16],"float32"), list[1,1,4,1,1,], )
paddle.tile(Tensor([1, 0, 13, 13],"float32"), list[3,1,1,1,], )
paddle.tile(Tensor([1, 0, 2, 2],"float32"), list[1,10,1,1,], )
paddle.tile(Tensor([1, 0, 2],"float32"), list[1,1,2,], )
paddle.tile(Tensor([1, 0, 64, 64, 2],"float32"), tuple(16,1,1,1,1,), )
paddle.tile(Tensor([1, 0],"float32"), list[256,1,], )
paddle.tile(Tensor([1, 0],"float32"), list[5,1,], )
paddle.tile(Tensor([1, 0],"float32"), list[58,1,], )
paddle.tile(Tensor([1, 0],"float32"), list[64,1,], )
paddle.tile(Tensor([1, 0],"float32"), repeat_times=list[2,1,], )
paddle.tile(Tensor([1, 1, 0, 1, 1, 3],"float32"), list[216,248,1,1,2,1,], )
paddle.tile(Tensor([1, 1, 0, 1],"float32"), list[3,1,1,1,], )
paddle.tile(Tensor([1, 1, 0, 13],"float32"), list[3,1,1,1,], )
paddle.tile(Tensor([1, 1, 0, 2],"float32"), list[1,10,1,1,], )
paddle.tile(Tensor([1, 1, 0, 64, 2],"float32"), tuple(16,1,1,1,1,), )
paddle.tile(Tensor([1, 1, 1, 0, 1, 3],"float32"), list[216,248,1,1,2,1,], )
paddle.tile(Tensor([1, 1, 1, 0],"float32"), list[3,1,1,1,], )
paddle.tile(Tensor([1, 1, 1, 1, 0, 3],"float32"), list[216,248,1,1,2,1,], )
paddle.tile(Tensor([1, 1, 1, 1, 1, 0],"float32"), list[216,248,1,1,2,1,], )
paddle.tile(Tensor([1, 1, 13, 0],"float32"), list[3,1,1,1,], )
paddle.tile(Tensor([1, 1, 2, 0],"float32"), list[1,10,1,1,], )
paddle.tile(Tensor([1, 1, 64, 0, 2],"float32"), tuple(16,1,1,1,1,), )
paddle.tile(Tensor([1, 1, 64, 64, 0],"float32"), tuple(16,1,1,1,1,), )
paddle.tile(Tensor([1, 192, 0],"float32"), list[1,1,2,], )
paddle.tile(Tensor([1, 196, 0],"float32"), list[1,1,2,], )
paddle.tile(Tensor([1, 2, 0, 64, 16],"float32"), list[1,1,4,1,1,], )
paddle.tile(Tensor([1, 2, 1, 0, 16],"float32"), list[1,1,4,1,1,], )
paddle.tile(Tensor([1, 2, 1, 64, 0],"float32"), list[1,1,4,1,1,], )
paddle.tile(Tensor([1, 3, 0, 1, 1, 1],"float32"), list[1,3,4,4,1,1,], )
paddle.tile(Tensor([1, 3, 1, 0, 1, 1],"float32"), list[1,3,4,4,1,1,], )
paddle.tile(Tensor([1, 3, 1, 1, 0, 1],"float32"), list[1,3,4,4,1,1,], )
paddle.tile(Tensor([1, 3, 1, 1, 1, 0],"float32"), list[1,3,4,4,1,1,], )
paddle.tile(Tensor([13, 0, 16, 16],"float32"), repeat_times=list[1,1,4,1,], )
paddle.tile(Tensor([13, 0, 32],"float32"), list[1,1,4,], )
paddle.tile(Tensor([13, 0, 7],"float32"), repeat_times=list[4,1,1,], )
paddle.tile(Tensor([13, 1, 0],"float32"), list[1,1,4,], )
paddle.tile(Tensor([13, 1, 0],"float32"), repeat_times=list[4,1,1,], )
paddle.tile(Tensor([13, 2, 0, 16],"float32"), repeat_times=list[1,1,4,1,], )
paddle.tile(Tensor([13, 2, 16, 0],"float32"), repeat_times=list[1,1,4,1,], )
paddle.tile(Tensor([13, 7, 0],"float32"), repeat_times=list[4,1,1,], )
paddle.tile(Tensor([16, 0, 1, 1, 4],"float32"), list[1,1,64,64,1,], )
paddle.tile(Tensor([16, 0, 1, 3, 64, 64],"float32"), list[1,11,1,1,1,1,], )
paddle.tile(Tensor([16, 0, 1, 58, 58],"float32"), list[1,1,4,1,1,], )
paddle.tile(Tensor([16, 1, 0, 3, 64, 64],"float32"), list[1,11,1,1,1,1,], )
paddle.tile(Tensor([16, 1, 1, 0, 64, 64],"float32"), list[1,11,1,1,1,1,], )
paddle.tile(Tensor([16, 1, 1, 3, 0, 64],"float32"), list[1,11,1,1,1,1,], )
paddle.tile(Tensor([16, 1, 1, 3, 64, 0],"float32"), list[1,11,1,1,1,1,], )
paddle.tile(Tensor([16, 10, 0, 1, 4],"float32"), list[1,1,64,64,1,], )
paddle.tile(Tensor([16, 10, 0, 58, 58],"float32"), list[1,1,4,1,1,], )
paddle.tile(Tensor([16, 10, 1, 0, 4],"float32"), list[1,1,64,64,1,], )
paddle.tile(Tensor([16, 10, 1, 0, 58],"float32"), list[1,1,4,1,1,], )
paddle.tile(Tensor([16, 10, 1, 1, 0],"float32"), list[1,1,64,64,1,], )
paddle.tile(Tensor([16, 10, 1, 58, 0],"float32"), list[1,1,4,1,1,], )
paddle.tile(Tensor([18, 0],"float32"), repeat_times=list[1,18,], )
paddle.tile(Tensor([256, 0],"float32"), list[1,256,], )
paddle.tile(Tensor([3, 0, 1, 64, 32],"float16"), list[1,1,8,1,1,], )
paddle.tile(Tensor([3, 2, 0, 64, 32],"float16"), list[1,1,8,1,1,], )
paddle.tile(Tensor([3, 2, 1, 0, 32],"float16"), list[1,1,8,1,1,], )
paddle.tile(Tensor([3, 2, 1, 64, 0],"float16"), list[1,1,8,1,1,], )
paddle.tile(Tensor([4, 0, 1],"float32"), list[1,1,16,], )
paddle.tile(Tensor([4, 0, 1],"float32"), list[1,1,32,], )
paddle.tile(Tensor([4, 0, 16],"float32"), list[1,4,1,], )
paddle.tile(Tensor([4, 0, 32],"float32"), list[1,4,1,], )
paddle.tile(Tensor([4, 0, 32],"float32"), list[1,8,1,], )
paddle.tile(Tensor([4, 0],"float32"), repeat_times=list[1,4,], )
paddle.tile(Tensor([4, 1, 0],"float32"), list[1,4,1,], )
paddle.tile(Tensor([4, 1, 0],"float32"), list[1,8,1,], )
paddle.tile(Tensor([4, 4, 0],"float32"), list[1,1,16,], )
paddle.tile(Tensor([4, 4, 0],"float32"), list[1,1,32,], )
paddle.tile(Tensor([4, 8, 0],"float32"), list[1,1,32,], )
paddle.tile(Tensor([40, 0],"float32"), list[1,1,49,], )
paddle.tile(Tensor([5, 0],"float32"), list[1,5,], )
paddle.tile(Tensor([5, 0],"float32"), list[8,1,], )
paddle.tile(Tensor([58, 0],"float32"), list[1,58,], )
paddle.tile(Tensor([64, 0],"float32"), list[1,64,], )
paddle.tile(Tensor([7, 0],"float32"), list[40,1,1,], )
paddle.tile(Tensor([8, 0, 1],"float64"), list[1,1,100,], )
paddle.tile(Tensor([8, 4, 0],"float64"), list[1,1,100,], )
paddle.tile(x=Tensor([1, 0, 2],"float64"), repeat_times=tuple(2,3,), )
paddle.tile(x=Tensor([1, 0],"float64"), repeat_times=list[471,1,], )
paddle.tile(x=Tensor([1, 3, 0],"float64"), repeat_times=tuple(2,3,), )
paddle.tile(x=Tensor([2, 0],"float64"), repeat_times=list[3,2,], )
paddle.tril(Tensor([0, 1, 1, 1],"float32"), )
paddle.tril(Tensor([0, 1, 1024, 1024],"int64"), )
paddle.tril(Tensor([0, 1],"float32"), diagonal=0, )
paddle.tril(Tensor([0, 10, 10],"int32"), )
paddle.tril(Tensor([0, 10],"bool"), )
paddle.tril(Tensor([0, 10],"float32"), diagonal=0, )
paddle.tril(Tensor([0, 1007],"bool"), )
paddle.tril(Tensor([0, 20, 1],"float32"), 0, )
paddle.tril(Tensor([0, 20, 20],"float32"), )
paddle.tril(Tensor([1, 0, 1, 1],"float32"), )
paddle.tril(Tensor([1, 0, 1024, 1024],"int64"), )
paddle.tril(Tensor([1, 0, 20],"float32"), )
paddle.tril(Tensor([1, 0],"float32"), diagonal=0, )
paddle.tril(Tensor([1, 1, 0, 1],"float32"), )
paddle.tril(Tensor([1, 1, 0, 1024],"int64"), )
paddle.tril(Tensor([1, 1, 1, 0],"float32"), )
paddle.tril(Tensor([1, 1, 1024, 0],"int64"), )
paddle.tril(Tensor([1, 20, 0],"float32"), )
paddle.tril(Tensor([10, 0, 1],"float32"), 0, )
paddle.tril(Tensor([10, 0],"bool"), )
paddle.tril(Tensor([10, 0],"float32"), diagonal=0, )
paddle.tril(Tensor([10, 20, 0],"float32"), 0, )
paddle.tril(Tensor([1007, 0],"bool"), )
paddle.tril(Tensor([2, 0, 10],"int32"), )
paddle.tril(Tensor([2, 10, 0],"int32"), )
paddle.tril(x=Tensor([0, 2, 2],"float32"), diagonal=0, )
paddle.tril(x=Tensor([0, 2, 2],"float64"), diagonal=0, )
paddle.tril(x=Tensor([0, 2, 2],"float64"), diagonal=1, )
paddle.tril(x=Tensor([0, 2, 2],"float64"), diagonal=-1, )
paddle.tril(x=Tensor([0, 2, 2],"float64"), diagonal=5, )
paddle.tril(x=Tensor([0, 2, 2],"float64"), diagonal=-5, )
paddle.tril(x=Tensor([3, 0, 2],"float32"), diagonal=0, )
paddle.tril(x=Tensor([3, 0, 2],"float64"), diagonal=0, )
paddle.tril(x=Tensor([3, 0, 2],"float64"), diagonal=1, )
paddle.tril(x=Tensor([3, 0, 2],"float64"), diagonal=-1, )
paddle.tril(x=Tensor([3, 0, 2],"float64"), diagonal=5, )
paddle.tril(x=Tensor([3, 0, 2],"float64"), diagonal=-5, )
paddle.tril(x=Tensor([3, 2, 0],"float32"), diagonal=0, )
paddle.tril(x=Tensor([3, 2, 0],"float64"), diagonal=0, )
paddle.tril(x=Tensor([3, 2, 0],"float64"), diagonal=1, )
paddle.tril(x=Tensor([3, 2, 0],"float64"), diagonal=-1, )
paddle.tril(x=Tensor([3, 2, 0],"float64"), diagonal=5, )
paddle.tril(x=Tensor([3, 2, 0],"float64"), diagonal=-5, )
paddle.triu(Tensor([0, 1, 1, 1],"float32"), diagonal=1, )
paddle.triu(Tensor([0, 1, 1, 10],"float16"), diagonal=1, )
paddle.triu(Tensor([0, 1, 10, 16],"float32"), )
paddle.triu(Tensor([0, 1, 2048, 2048],"float16"), )
paddle.triu(Tensor([0, 128],"float32"), 1, )
paddle.triu(Tensor([0, 128],"float32"), diagonal=0, )
paddle.triu(Tensor([0, 16],"float32"), diagonal=1, )
paddle.triu(Tensor([0, 20, 1],"float32"), 0, )
paddle.triu(Tensor([0, 7, 7],"float32"), diagonal=1, )
paddle.triu(Tensor([0, 7],"float32"), 1, )
paddle.triu(Tensor([0, 7],"float32"), diagonal=1, )
paddle.triu(Tensor([1, 0, 1, 1],"float32"), diagonal=1, )
paddle.triu(Tensor([1, 0, 1, 10],"float16"), diagonal=1, )
paddle.triu(Tensor([1, 0, 10, 16],"float32"), )
paddle.triu(Tensor([1, 0, 2048, 2048],"float16"), )
paddle.triu(Tensor([1, 1, 0, 1],"float32"), diagonal=1, )
paddle.triu(Tensor([1, 1, 0, 10],"float16"), diagonal=1, )
paddle.triu(Tensor([1, 1, 0, 16],"float32"), )
paddle.triu(Tensor([1, 1, 0, 2048],"float16"), )
paddle.triu(Tensor([1, 1, 1, 0],"float16"), diagonal=1, )
paddle.triu(Tensor([1, 1, 1, 0],"float32"), diagonal=1, )
paddle.triu(Tensor([1, 1, 10, 0],"float32"), )
paddle.triu(Tensor([1, 1, 2048, 0],"float16"), )
paddle.triu(Tensor([10, 0, 1],"float32"), 0, )
paddle.triu(Tensor([10, 20, 0],"float32"), 0, )
paddle.triu(Tensor([11, 0],"float32"), diagonal=1, )
paddle.triu(Tensor([12, 0, 7],"float32"), diagonal=1, )
paddle.triu(Tensor([12, 7, 0],"float32"), diagonal=1, )
paddle.triu(Tensor([128, 0],"float32"), 1, )
paddle.triu(Tensor([128, 0],"float32"), diagonal=0, )
paddle.triu(Tensor([7, 0],"float32"), 1, )
paddle.triu(x=Tensor([0, 2, 2],"float32"), diagonal=0, )
paddle.triu(x=Tensor([0, 2, 2],"float64"), diagonal=0, )
paddle.triu(x=Tensor([0, 2, 2],"float64"), diagonal=1, )
paddle.triu(x=Tensor([0, 2, 2],"float64"), diagonal=-1, )
paddle.triu(x=Tensor([0, 2, 2],"float64"), diagonal=5, )
paddle.triu(x=Tensor([0, 2, 2],"float64"), diagonal=-5, )
paddle.triu(x=Tensor([3, 0, 2],"float32"), diagonal=0, )
paddle.triu(x=Tensor([3, 0, 2],"float64"), diagonal=0, )
paddle.triu(x=Tensor([3, 0, 2],"float64"), diagonal=1, )
paddle.triu(x=Tensor([3, 0, 2],"float64"), diagonal=-1, )
paddle.triu(x=Tensor([3, 0, 2],"float64"), diagonal=5, )
paddle.triu(x=Tensor([3, 0, 2],"float64"), diagonal=-5, )
paddle.triu(x=Tensor([3, 2, 0],"float32"), diagonal=0, )
paddle.triu(x=Tensor([3, 2, 0],"float64"), diagonal=0, )
paddle.triu(x=Tensor([3, 2, 0],"float64"), diagonal=1, )
paddle.triu(x=Tensor([3, 2, 0],"float64"), diagonal=-1, )
paddle.triu(x=Tensor([3, 2, 0],"float64"), diagonal=5, )
paddle.triu(x=Tensor([3, 2, 0],"float64"), diagonal=-5, )
paddle.trunc(input=Tensor([0, 6, 6, 6, 6],"float64"), )
paddle.trunc(input=Tensor([0, 6, 6, 6],"float64"), )
paddle.trunc(input=Tensor([0, 6, 6],"float64"), )
paddle.trunc(input=Tensor([0, 6],"int32"), )
paddle.trunc(input=Tensor([0, 6],"int64"), )
paddle.trunc(input=Tensor([3, 0, 6, 6, 6],"float64"), )
paddle.trunc(input=Tensor([3, 6, 0, 6, 6],"float64"), )
paddle.trunc(input=Tensor([3, 6, 6, 0, 6],"float64"), )
paddle.trunc(input=Tensor([3, 6, 6, 6, 0],"float64"), )
paddle.trunc(input=Tensor([6, 0, 6, 6],"float64"), )
paddle.trunc(input=Tensor([6, 0, 6],"float64"), )
paddle.trunc(input=Tensor([6, 0],"int32"), )
paddle.trunc(input=Tensor([6, 0],"int64"), )
paddle.trunc(input=Tensor([6, 6, 0, 6],"float64"), )
paddle.trunc(input=Tensor([6, 6, 0],"float64"), )
paddle.trunc(input=Tensor([6, 6, 6, 0],"float64"), )
paddle.trunc(Tensor([0, 20, 1],"float32"), )
paddle.trunc(Tensor([0, 20],"float32"), )
paddle.trunc(Tensor([10, 0, 1],"float32"), )
paddle.trunc(Tensor([10, 20, 0],"float32"), )
paddle.trunc(Tensor([20, 0],"float32"), )
paddle.unique(x=Tensor([0, 2],"int32"), axis=0, )
paddle.unique(x=Tensor([0, 2],"int64"), axis=0, )
paddle.unique(x=Tensor([2, 0],"float32"), axis=1, )
paddle.unique(x=Tensor([2, 0],"float64"), axis=1, )
paddle.unique_consecutive(Tensor([0],"float64"), return_inverse=True, return_counts=True, )
paddle.unique_consecutive(Tensor([0],"float64"), return_inverse=True, return_counts=True, axis=-1, )
paddle.unique_consecutive(x=Tensor([0, 4],"float32"), return_inverse=True, return_counts=True, axis=0, )
paddle.unique_consecutive(x=Tensor([3, 0],"float64"), axis=1, )
paddle.addmm(input=Tensor([1, 1],"float64"), x=Tensor([0, 4],"float64"), y=Tensor([4, 5],"float64"), beta=-3.3, alpha=3.3, )
paddle.addmm(input=Tensor([1, 1],"float64"), x=Tensor([5, 4],"float64"), y=Tensor([4, 0],"float64"), beta=-3.3, alpha=3.3, )
paddle.addmm(input=Tensor([5, 1],"float64"), x=Tensor([5, 4],"float64"), y=Tensor([4, 0],"float64"), beta=-3.3, alpha=3.3, )
paddle.amax(Tensor([0, 10, 10],"float32"), axis=list[-1,-2,], keepdim=False, )
paddle.amax(Tensor([0, 2, 4, 5],"float32"), axis=-1, keepdim=True, )
paddle.amax(Tensor([0, 2, 5, 4],"float32"), axis=2, keepdim=True, )
paddle.amax(Tensor([0, 2, 5, 4],"float32"), axis=tuple(1,2,), keepdim=True, )
paddle.amax(Tensor([0, 4],"float64"), 1, True, )
paddle.amax(Tensor([10, 0, 10],"float32"), axis=list[-1,0,], keepdim=False, )
paddle.amax(Tensor([10, 10, 0],"float32"), axis=list[0,1,], keepdim=False, )
paddle.amax(Tensor([2, 0],"float64"), 0, False, )
paddle.amax(Tensor([2, 2, 0],"int32"), tuple(0,1,), False, )
paddle.amax(Tensor([3, 0, 4, 5],"float32"), axis=-1, keepdim=True, )
paddle.amax(Tensor([3, 0, 5, 4],"float32"), axis=2, keepdim=True, )
paddle.amax(Tensor([3, 2, 0, 5],"float32"), axis=-1, keepdim=True, )
paddle.amax(Tensor([3, 2, 5, 0],"float32"), axis=2, keepdim=True, )
paddle.amax(Tensor([3, 2, 5, 0],"float32"), axis=tuple(1,2,), keepdim=True, )
paddle.amin(Tensor([0, 10, 10],"float32"), axis=list[-1,-2,], keepdim=False, )
paddle.amin(Tensor([0, 2, 4, 5],"float32"), axis=-1, keepdim=True, )
paddle.amin(Tensor([0, 2, 5, 4],"float32"), axis=2, keepdim=True, )
paddle.amin(Tensor([0, 2, 5, 4],"float32"), axis=tuple(1,2,), keepdim=True, )
paddle.amin(Tensor([0, 4],"float64"), 1, True, )
paddle.amin(Tensor([10, 0, 10],"float32"), axis=list[-1,0,], keepdim=False, )
paddle.amin(Tensor([10, 10, 0],"float32"), axis=list[0,1,], keepdim=False, )
paddle.amin(Tensor([2, 0],"float64"), 0, False, )
paddle.amin(Tensor([2, 2, 0],"int32"), tuple(0,1,), False, )
paddle.amin(Tensor([3, 0, 4, 5],"float32"), axis=-1, keepdim=True, )
paddle.amin(Tensor([3, 0, 5, 4],"float32"), axis=2, keepdim=True, )
paddle.amin(Tensor([3, 2, 0, 5],"float32"), axis=-1, keepdim=True, )
paddle.amin(Tensor([3, 2, 5, 0],"float32"), axis=2, keepdim=True, )
paddle.amin(Tensor([3, 2, 5, 0],"float32"), axis=tuple(1,2,), keepdim=True, )
paddle.argmax(Tensor([0, 10],"float32"), axis=1, )
paddle.argmax(Tensor([0, 10],"float32"), axis=-1, keepdim=True, )
paddle.argmax(Tensor([0, 100],"float32"), axis=-1, )
paddle.argmax(Tensor([0, 1000],"float32"), axis=1, )
paddle.argmax(Tensor([0, 1024, 50304],"float16"), -1, )
paddle.argmax(Tensor([0, 2, 4, 16, 2],"float32"), axis=-1, )
paddle.argmax(Tensor([0, 256],"float32"), axis=-1, )
paddle.argmax(Tensor([0, 3, 4],"float64"), axis=-1, keepdim=True, )
paddle.argmax(Tensor([0, 32, 64],"float16"), axis=1, )
paddle.argmax(Tensor([0, 32, 64],"float32"), axis=1, )
paddle.argmax(Tensor([0, 7, 99],"float32"), axis=-1, )
paddle.argmax(Tensor([0, 8, 14, 12],"float32"), axis=1, keepdim=True, )
paddle.argmax(Tensor([1, 8, 0, 12],"float32"), axis=1, keepdim=True, )
paddle.argmax(Tensor([1, 8, 14, 0],"float32"), axis=1, keepdim=True, )
paddle.argmax(Tensor([12988, 32, 0],"float16"), axis=1, )
paddle.argmax(Tensor([12988, 32, 0],"float32"), axis=1, )
paddle.argmax(Tensor([13, 0, 4, 16, 2],"float32"), axis=-1, )
paddle.argmax(Tensor([13, 0, 99],"float32"), axis=-1, )
paddle.argmax(Tensor([13, 2, 0, 16, 2],"float32"), axis=-1, )
paddle.argmax(Tensor([13, 2, 4, 0, 2],"float32"), axis=-1, )
paddle.argmax(Tensor([16, 0, 50304],"float16"), -1, )
paddle.argmax(Tensor([2, 0, 4],"float64"), axis=-1, keepdim=True, )
paddle.argmax(Tensor([3, 0, 3, 3, 3, 3],"float64"), axis=0, )
paddle.argmax(Tensor([3, 3, 0, 3, 3, 3],"float64"), axis=0, )
paddle.argmax(Tensor([3, 3, 3, 0, 3, 3],"float64"), axis=0, )
paddle.argmax(Tensor([3, 3, 3, 3, 0, 3],"float64"), axis=0, )
paddle.argmax(Tensor([3, 3, 3, 3, 3, 0],"float64"), axis=0, )
paddle.argmax(Tensor([4, 0, 4, 4, 4],"float64"), axis=0, )
paddle.argmax(Tensor([4, 4, 0, 4, 4],"float64"), axis=0, )
paddle.argmax(Tensor([4, 4, 4, 0, 4],"float64"), axis=0, )
paddle.argmax(Tensor([4, 4, 4, 4, 0],"float64"), axis=0, )
paddle.argmax(Tensor([5, 0, 5, 5],"float64"), axis=0, )
paddle.argmax(Tensor([5, 5, 0, 5],"float64"), axis=0, )
paddle.argmax(Tensor([5, 5, 5, 0],"float64"), axis=0, )
paddle.argmax(x=Tensor([0, 3, 4],"float64"), axis=1, keepdim=False, )
paddle.argmax(x=Tensor([0, 3],"int64"), axis=-1, )
paddle.argmax(x=Tensor([3, 0],"int64"), axis=-2, )
paddle.argmax(x=Tensor([3, 3, 0],"float64"), axis=1, keepdim=False, )
paddle.argmin(Tensor([0, 10],"float32"), axis=1, )
paddle.argmin(Tensor([0, 10],"float32"), axis=-1, )
paddle.argmin(Tensor([0, 10],"float32"), axis=-1, keepdim=True, )
paddle.argmin(Tensor([3, 0, 3, 3, 3, 3],"float64"), axis=0, )
paddle.argmin(Tensor([3, 3, 0, 3, 3, 3],"float64"), axis=0, )
paddle.argmin(Tensor([3, 3, 3, 0, 3, 3],"float64"), axis=0, )
paddle.argmin(Tensor([3, 3, 3, 3, 0, 3],"float64"), axis=0, )
paddle.argmin(Tensor([3, 3, 3, 3, 3, 0],"float64"), axis=0, )
paddle.argmin(Tensor([4, 0, 4, 4, 4],"float64"), axis=0, )
paddle.argmin(Tensor([4, 4, 0, 4, 4],"float64"), axis=0, )
paddle.argmin(Tensor([4, 4, 4, 0, 4],"float64"), axis=0, )
paddle.argmin(Tensor([4, 4, 4, 4, 0],"float64"), axis=0, )
paddle.argmin(Tensor([5, 0, 5, 5],"float64"), axis=0, )
paddle.argmin(Tensor([5, 5, 0, 5],"float64"), axis=0, )
paddle.argmin(Tensor([5, 5, 5, 0],"float64"), axis=0, )
paddle.argmin(x=Tensor([0, 3, 4],"float64"), axis=1, keepdim=False, )
paddle.argmin(x=Tensor([0, 3],"int64"), axis=-1, )
paddle.argmin(x=Tensor([3, 0],"int64"), axis=-2, )
paddle.argmin(x=Tensor([3, 3, 0],"float64"), axis=1, keepdim=False, )
paddle.as_complex(Tensor([0, 10, 10, 2],"float32"), )
paddle.as_complex(Tensor([0, 10, 2],"float64"), )
paddle.as_complex(Tensor([0, 4, 2],"float32"), )
paddle.as_complex(Tensor([10, 0, 10, 2],"float32"), )
paddle.as_complex(Tensor([10, 0, 2],"float64"), )
paddle.as_complex(Tensor([10, 10, 0, 2],"float32"), )
paddle.as_complex(Tensor([2, 0, 2],"float32"), )
paddle.as_complex(x=Tensor([0, 2, 3, 2],"float64"), )
paddle.as_complex(x=Tensor([0, 2],"float32"), )
paddle.as_complex(x=Tensor([0, 2],"float64"), )
paddle.as_complex(x=Tensor([0, 3, 2],"float64"), )
paddle.as_complex(x=Tensor([9, 0, 2],"float64"), )
paddle.as_complex(x=Tensor([9, 0, 3, 2],"float64"), )
paddle.as_complex(x=Tensor([9, 2, 0, 2],"float64"), )
paddle.as_real(Tensor([0, 10, 10, 20],"complex128"), )
paddle.as_real(Tensor([0, 10],"complex128"), )
paddle.as_real(Tensor([0, 4],"complex128"), )
paddle.as_real(Tensor([10, 0, 10, 20],"complex128"), )
paddle.as_real(Tensor([10, 0],"complex128"), )
paddle.as_real(Tensor([10, 10, 0, 20],"complex128"), )
paddle.as_real(Tensor([10, 10, 10, 0],"complex128"), )
paddle.as_real(Tensor([2, 0],"complex128"), )
paddle.as_real(x=Tensor([0, 2, 3],"complex128"), )
paddle.as_real(x=Tensor([0, 2, 3],"complex64"), )
paddle.as_real(x=Tensor([0, 3],"complex128"), )
paddle.as_real(x=Tensor([0, 3],"complex64"), )
paddle.as_real(x=Tensor([0],"complex128"), )
paddle.as_real(x=Tensor([0],"complex64"), )
paddle.as_real(x=Tensor([9, 0, 3],"complex128"), )
paddle.as_real(x=Tensor([9, 0, 3],"complex64"), )
paddle.as_real(x=Tensor([9, 0],"complex128"), )
paddle.as_real(x=Tensor([9, 0],"complex64"), )
paddle.as_real(x=Tensor([9, 2, 0],"complex128"), )
paddle.as_real(x=Tensor([9, 2, 0],"complex64"), )
paddle.bmm(Tensor([0, 300, 128],"float32"), Tensor([0, 128, 30976],"float32"), )
paddle.bmm(Tensor([0, 300, 128],"float32"), Tensor([0, 128, 33856],"float32"), )
paddle.bmm(Tensor([1, 300, 128],"float32"), Tensor([1, 128, 0],"float32"), )
paddle.bmm(x=Tensor([0, 2, 3],"float32"), y=Tensor([0, 3, 2],"float32"), )
paddle.bmm(x=Tensor([0, 2, 3],"float64"), y=Tensor([0, 3, 2],"float64"), )
paddle.bmm(x=Tensor([2, 2, 3],"float32"), y=Tensor([2, 3, 0],"float32"), )
paddle.bmm(x=Tensor([2, 2, 3],"float64"), y=Tensor([2, 3, 0],"float64"), )
paddle.column_stack(list[Tensor([0, 1, 1, 1],"float64"),], )
paddle.column_stack(list[Tensor([0, 1, 1, 1],"float64"),Tensor([0, 1, 1, 1],"float64"),Tensor([0, 1, 1, 1],"float64"),], )
paddle.column_stack(list[Tensor([0, 1, 1],"float64"),], )
paddle.column_stack(list[Tensor([0, 1, 1],"float64"),Tensor([0, 1, 1],"float64"),Tensor([0, 1, 1],"float64"),], )
paddle.column_stack(list[Tensor([0, 1],"float64"),], )
paddle.column_stack(list[Tensor([0, 1],"float64"),Tensor([0, 1],"float64"),Tensor([0, 1],"float64"),], )
paddle.column_stack(list[Tensor([0, 2],"float64"),], )
paddle.column_stack(list[Tensor([0, 2],"float64"),Tensor([0, 2],"float64"),Tensor([0, 2],"float64"),], )
paddle.column_stack(list[Tensor([0, 4, 2, 5],"float64"),], )
paddle.column_stack(list[Tensor([0, 4, 2, 5],"float64"),Tensor([0, 4, 2, 5],"float64"),Tensor([0, 4, 2, 5],"float64"),], )
paddle.column_stack(list[Tensor([0, 4, 2],"float64"),], )
paddle.column_stack(list[Tensor([0, 4, 2],"float64"),Tensor([0, 4, 2],"float64"),Tensor([0, 4, 2],"float64"),], )
paddle.column_stack(list[Tensor([0],"float64"),], )
paddle.column_stack(list[Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),], )
paddle.column_stack(list[Tensor([1, 0, 1, 1],"float64"),], )
paddle.column_stack(list[Tensor([1, 0, 1, 1],"float64"),Tensor([1, 0, 1, 1],"float64"),Tensor([1, 0, 1, 1],"float64"),], )
paddle.column_stack(list[Tensor([1, 0, 1],"float64"),], )
paddle.column_stack(list[Tensor([1, 0, 1],"float64"),Tensor([1, 0, 1],"float64"),Tensor([1, 0, 1],"float64"),], )
paddle.column_stack(list[Tensor([1, 0],"float64"),], )
paddle.column_stack(list[Tensor([1, 0],"float64"),Tensor([1, 0],"float64"),Tensor([1, 0],"float64"),], )
paddle.column_stack(list[Tensor([1, 1, 0, 1],"float64"),], )
paddle.column_stack(list[Tensor([1, 1, 0, 1],"float64"),Tensor([1, 1, 0, 1],"float64"),Tensor([1, 1, 0, 1],"float64"),], )
paddle.column_stack(list[Tensor([1, 1, 0],"float64"),], )
paddle.column_stack(list[Tensor([1, 1, 0],"float64"),Tensor([1, 1, 0],"float64"),Tensor([1, 1, 0],"float64"),], )
paddle.column_stack(list[Tensor([1, 1, 1, 0],"float64"),], )
paddle.column_stack(list[Tensor([1, 1, 1, 0],"float64"),Tensor([1, 1, 1, 0],"float64"),Tensor([1, 1, 1, 0],"float64"),], )
paddle.column_stack(list[Tensor([3, 0, 2, 5],"float64"),], )
paddle.column_stack(list[Tensor([3, 0, 2, 5],"float64"),Tensor([3, 0, 2, 5],"float64"),Tensor([3, 0, 2, 5],"float64"),], )
paddle.column_stack(list[Tensor([3, 0, 2],"float64"),], )
paddle.column_stack(list[Tensor([3, 0, 2],"float64"),Tensor([3, 0, 2],"float64"),Tensor([3, 0, 2],"float64"),], )
paddle.column_stack(list[Tensor([3, 0],"float64"),], )
paddle.column_stack(list[Tensor([3, 0],"float64"),Tensor([3, 0],"float64"),Tensor([3, 0],"float64"),], )
paddle.column_stack(list[Tensor([3, 4, 0, 5],"float64"),], )
paddle.column_stack(list[Tensor([3, 4, 0, 5],"float64"),Tensor([3, 4, 0, 5],"float64"),Tensor([3, 4, 0, 5],"float64"),], )
paddle.column_stack(list[Tensor([3, 4, 0],"float64"),], )
paddle.column_stack(list[Tensor([3, 4, 0],"float64"),Tensor([3, 4, 0],"float64"),Tensor([3, 4, 0],"float64"),], )
paddle.column_stack(list[Tensor([3, 4, 2, 0],"float64"),], )
paddle.column_stack(list[Tensor([3, 4, 2, 0],"float64"),Tensor([3, 4, 2, 0],"float64"),Tensor([3, 4, 2, 0],"float64"),], )
paddle.concat(list[Tensor([0, 1, 1, 1],"float32"),Tensor([0, 1, 1, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([0, 1, 1, 1],"float64"),], axis=0, name=None, )
paddle.concat(list[Tensor([0, 1, 1, 1],"float64"),], axis=1, name=None, )
paddle.concat(list[Tensor([0, 1, 1, 1],"float64"),], axis=2, name=None, )
paddle.concat(list[Tensor([0, 1, 1, 1],"float64"),Tensor([0, 1, 1, 1],"float64"),Tensor([0, 1, 1, 1],"float64"),], axis=0, name=None, )
paddle.concat(list[Tensor([0, 1, 1, 1],"float64"),Tensor([0, 1, 1, 1],"float64"),Tensor([0, 1, 1, 1],"float64"),], axis=1, name=None, )
paddle.concat(list[Tensor([0, 1, 1, 1],"float64"),Tensor([0, 1, 1, 1],"float64"),Tensor([0, 1, 1, 1],"float64"),], axis=2, name=None, )
paddle.concat(list[Tensor([0, 1, 1, 16],"float32"),Tensor([0, 1, 1, 16],"float32"),], axis=-1, )
paddle.concat(list[Tensor([0, 1, 1],"float16"),], axis=2, name=None, )
paddle.concat(list[Tensor([0, 1, 1],"float32"),], axis=2, name=None, )
paddle.concat(list[Tensor([0, 1, 1],"float32"),Tensor([0, 1, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([0, 1, 1],"float64"),], axis=0, name=None, )
paddle.concat(list[Tensor([0, 1, 1],"float64"),], axis=1, name=None, )
paddle.concat(list[Tensor([0, 1, 1],"float64"),Tensor([0, 1, 1],"float64"),Tensor([0, 1, 1],"float64"),], axis=0, name=None, )
paddle.concat(list[Tensor([0, 1, 1],"float64"),Tensor([0, 1, 1],"float64"),Tensor([0, 1, 1],"float64"),], axis=1, name=None, )
paddle.concat(list[Tensor([0, 1, 1],"float64"),Tensor([0, 1, 1],"float64"),Tensor([0, 1, 1],"float64"),], axis=2, name=None, )
paddle.concat(list[Tensor([0, 1, 100, 136],"float32"),Tensor([0, 1, 100, 136],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 1, 100, 152],"float32"),Tensor([0, 1, 100, 152],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 1, 100, 176, 176],"float32"),Tensor([0, 1, 100, 176, 176],"float32"),], )
paddle.concat(list[Tensor([0, 1, 100, 184, 184],"float32"),Tensor([0, 1, 100, 184, 184],"float32"),], )
paddle.concat(list[Tensor([0, 1, 100, 2],"float32"),Tensor([0, 1, 100, 2],"float32"),], )
paddle.concat(list[Tensor([0, 1, 100, 4],"float32"),Tensor([0, 1, 100, 4],"float32"),], )
paddle.concat(list[Tensor([0, 1, 10285, 1],"float32"),Tensor([0, 1, 10285, 1],"float32"),Tensor([0, 1, 10285, 1],"float32"),Tensor([0, 1, 10285, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([0, 1, 12544, 2],"float32"),], )
paddle.concat(list[Tensor([0, 1, 2],"float32"),Tensor([0, 1, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([0, 1, 2],"float32"),Tensor([0, 1, 2],"float32"),], axis=-2, )
paddle.concat(list[Tensor([0, 1, 24276, 1],"float32"),Tensor([0, 1, 24276, 1],"float32"),Tensor([0, 1, 24276, 1],"float32"),Tensor([0, 1, 24276, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([0, 1, 2704],"float32"),Tensor([0, 1, 676],"float32"),Tensor([0, 1, 169],"float32"),Tensor([0, 1, 49],"float32"),], axis=-1, )
paddle.concat(list[Tensor([0, 1, 27648],"float32"),Tensor([0, 1, 6912],"float32"),Tensor([0, 1, 1728],"float32"),Tensor([0, 1, 432],"float32"),Tensor([0, 1, 108],"float32"),Tensor([0, 1, 30],"float32"),], axis=-1, )
paddle.concat(list[Tensor([0, 1, 28800],"float32"),Tensor([0, 1, 7200],"float32"),Tensor([0, 1, 1800],"float32"),Tensor([0, 1, 450],"float32"),Tensor([0, 1, 117],"float32"),Tensor([0, 1, 35],"float32"),], axis=-1, )
paddle.concat(list[Tensor([0, 1, 3, 1],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 1, 3],"float32"),Tensor([0, 1, 4],"float32"),], -1, )
paddle.concat(list[Tensor([0, 1, 3136],"float32"),Tensor([0, 1, 784],"float32"),Tensor([0, 1, 196],"float32"),Tensor([0, 1, 49],"float32"),], axis=-1, )
paddle.concat(list[Tensor([0, 1, 32],"float32"),Tensor([0, 225, 32],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 1, 32],"float32"),Tensor([0, 4, 32],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 1, 4],"float32"),Tensor([0, 1, 4],"float32"),], -1, )
paddle.concat(list[Tensor([0, 1, 4800],"float32"),Tensor([0, 1, 1200],"float32"),Tensor([0, 1, 300],"float32"),Tensor([0, 1, 80],"float32"),Tensor([0, 1, 20],"float32"),], axis=-1, )
paddle.concat(list[Tensor([0, 1, 64, 64, 2],"float32"),Tensor([0, 10, 64, 64, 2],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 1, 640, 640],"float16"),Tensor([0, 1, 640, 640],"float16"),Tensor([0, 1, 640, 640],"float16"),], axis=1, )
paddle.concat(list[Tensor([0, 1, 640, 640],"float32"),Tensor([0, 1, 640, 640],"float32"),Tensor([0, 1, 640, 640],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 1, 6408],"float32"),Tensor([0, 1, 1620],"float32"),Tensor([0, 1, 414],"float32"),Tensor([0, 1, 108],"float32"),Tensor([0, 1, 30],"float32"),], axis=-1, )
paddle.concat(list[Tensor([0, 1, 8, 4],"int64"),Tensor([0, 1, 8, 4],"int64"),], axis=3, )
paddle.concat(list[Tensor([0, 1, 8],"float32"),Tensor([0, 1, 8],"float32"),Tensor([0, 1, 8],"float32"),Tensor([0, 1, 8],"float32"),Tensor([0, 1, 8],"float32"),Tensor([0, 1, 8],"float32"),Tensor([0, 1, 8],"float32"),Tensor([0, 1, 8],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 1, 8],"float32"),Tensor([0, 1, 8],"float32"),Tensor([0, 1, 8],"float32"),Tensor([0, 1, 8],"float32"),Tensor([0, 1, 8],"float32"),Tensor([0, 1, 8],"float32"),Tensor([0, 1, 8],"float32"),Tensor([0, 1, 8],"float32"),Tensor([0, 1, 8],"float32"),Tensor([0, 1, 8],"float32"),Tensor([0, 1, 8],"float32"),Tensor([0, 1, 8],"float32"),Tensor([0, 1, 8],"float32"),Tensor([0, 1, 8],"float32"),Tensor([0, 1, 8],"float32"),Tensor([0, 1, 8],"float32"),Tensor([0, 1, 8],"float32"),Tensor([0, 1, 8],"float32"),Tensor([0, 1, 8],"float32"),Tensor([0, 1, 8],"float32"),Tensor([0, 1, 8],"float32"),Tensor([0, 1, 8],"float32"),Tensor([0, 1, 8],"float32"),Tensor([0, 1, 8],"float32"),Tensor([0, 1, 8],"float32"),Tensor([0, 1, 8],"float32"),Tensor([0, 1, 8],"float32"),Tensor([0, 1, 8],"float32"),Tensor([0, 1, 8],"float32"),Tensor([0, 1, 8],"float32"),Tensor([0, 1, 8],"float32"),Tensor([0, 1, 8],"float32"),Tensor([0, 1, 8],"float32"),Tensor([0, 1, 8],"float32"),Tensor([0, 1, 8],"float32"),Tensor([0, 1, 8],"float32"),Tensor([0, 1, 8],"float32"),Tensor([0, 1, 8],"float32"),Tensor([0, 1, 8],"float32"),Tensor([0, 1, 8],"float32"),Tensor([0, 1, 8],"float32"),Tensor([0, 1, 8],"float32"),Tensor([0, 1, 8],"float32"),Tensor([0, 1, 8],"float32"),Tensor([0, 1, 8],"float32"),Tensor([0, 1, 8],"float32"),Tensor([0, 1, 8],"float32"),Tensor([0, 1, 8],"float32"),Tensor([0, 1, 8],"float32"),Tensor([0, 1, 8],"float32"),Tensor([0, 1, 8],"float32"),Tensor([0, 1, 8],"float32"),], axis=0, )
paddle.concat(list[Tensor([0, 1],"bool"),Tensor([0, 1],"bool"),], axis=-1, )
paddle.concat(list[Tensor([0, 1],"bool"),Tensor([0, 1],"bool"),Tensor([0, 1],"bool"),Tensor([0, 1],"bool"),Tensor([0, 1],"bool"),Tensor([0, 1],"bool"),Tensor([0, 1],"bool"),Tensor([0, 1],"bool"),Tensor([0, 1],"bool"),Tensor([0, 1],"bool"),Tensor([0, 1],"bool"),Tensor([0, 1],"bool"),Tensor([0, 1],"bool"),Tensor([0, 1],"bool"),Tensor([0, 1],"bool"),Tensor([0, 1],"bool"),Tensor([0, 1],"bool"),Tensor([0, 1],"bool"),Tensor([0, 1],"bool"),Tensor([0, 1],"bool"),Tensor([0, 1],"bool"),Tensor([0, 1],"bool"),Tensor([0, 1],"bool"),Tensor([0, 1],"bool"),Tensor([0, 1],"bool"),Tensor([0, 1],"bool"),Tensor([0, 1],"bool"),Tensor([0, 1],"bool"),Tensor([0, 1],"bool"),Tensor([0, 1],"bool"),Tensor([0, 1],"bool"),Tensor([0, 1],"bool"),Tensor([0, 1],"bool"),Tensor([0, 1],"bool"),Tensor([0, 1],"bool"),Tensor([0, 1],"bool"),Tensor([0, 1],"bool"),Tensor([0, 1],"bool"),Tensor([0, 1],"bool"),Tensor([0, 1],"bool"),Tensor([0, 1],"bool"),Tensor([0, 1],"bool"),Tensor([0, 1],"bool"),Tensor([0, 1],"bool"),Tensor([0, 1],"bool"),Tensor([0, 1],"bool"),Tensor([0, 1],"bool"),Tensor([0, 1],"bool"),Tensor([0, 1],"bool"),Tensor([0, 1],"bool"),], axis=1, )
paddle.concat(list[Tensor([0, 1],"float16"),], axis=0, name=None, )
paddle.concat(list[Tensor([0, 1],"float16"),], axis=1, name=None, )
paddle.concat(list[Tensor([0, 1],"float16"),Tensor([0, 1],"float16"),Tensor([0, 1],"float16"),], 0, )
paddle.concat(list[Tensor([0, 1],"float32"),], axis=0, name=None, )
paddle.concat(list[Tensor([0, 1],"float32"),], axis=1, name=None, )
paddle.concat(list[Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),], 1, )
paddle.concat(list[Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),], )
paddle.concat(list[Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),], 0, )
paddle.concat(list[Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),], -1, )
paddle.concat(list[Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),], )
paddle.concat(list[Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),], axis=0, )
paddle.concat(list[Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),], )
paddle.concat(list[Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),], 0, )
paddle.concat(list[Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),], )
paddle.concat(list[Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),], 0, )
paddle.concat(list[Tensor([0, 1],"float64"),Tensor([0, 1],"float64"),], axis=1, name=None, )
paddle.concat(list[Tensor([0, 1],"float64"),Tensor([0, 1],"float64"),Tensor([0, 1],"float64"),], axis=0, name=None, )
paddle.concat(list[Tensor([0, 1],"float64"),Tensor([0, 1],"float64"),Tensor([0, 1],"float64"),], axis=1, name=None, )
paddle.concat(list[Tensor([0, 1],"int32"),], )
paddle.concat(list[Tensor([0, 1],"int32"),Tensor([0, 1],"int32"),], )
paddle.concat(list[Tensor([0, 1],"int32"),Tensor([0, 1],"int32"),Tensor([0, 1],"int32"),Tensor([0, 1],"int32"),], )
paddle.concat(list[Tensor([0, 1],"int32"),Tensor([0, 1],"int32"),Tensor([0, 1],"int32"),Tensor([0, 1],"int32"),Tensor([0, 1],"int32"),], axis=0, )
paddle.concat(list[Tensor([0, 1],"int32"),Tensor([0, 1],"int32"),Tensor([0, 1],"int32"),Tensor([0, 1],"int32"),Tensor([0, 1],"int32"),Tensor([0, 1],"int32"),Tensor([0, 1],"int32"),Tensor([0, 1],"int32"),], )
paddle.concat(list[Tensor([0, 1],"int32"),Tensor([0, 1],"int32"),Tensor([0, 1],"int32"),Tensor([0, 1],"int32"),Tensor([0, 1],"int32"),Tensor([0, 1],"int32"),Tensor([0, 1],"int32"),Tensor([0, 1],"int32"),Tensor([0, 1],"int32"),Tensor([0, 1],"int32"),Tensor([0, 1],"int32"),Tensor([0, 1],"int32"),Tensor([0, 1],"int32"),Tensor([0, 1],"int32"),Tensor([0, 1],"int32"),Tensor([0, 1],"int32"),], )
paddle.concat(list[Tensor([0, 1],"int64"),], )
paddle.concat(list[Tensor([0, 1],"int64"),Tensor([0, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([0, 1],"int64"),Tensor([0, 1],"int64"),Tensor([0, 1],"int64"),Tensor([0, 1],"int64"),Tensor([0, 1],"int64"),Tensor([0, 1],"int64"),Tensor([0, 1],"int64"),Tensor([0, 1],"int64"),Tensor([0, 1],"int64"),Tensor([0, 1],"int64"),Tensor([0, 1],"int64"),Tensor([0, 1],"int64"),Tensor([0, 1],"int64"),Tensor([0, 1],"int64"),Tensor([0, 1],"int64"),Tensor([0, 1],"int64"),Tensor([0, 1],"int64"),Tensor([0, 1],"int64"),Tensor([0, 1],"int64"),Tensor([0, 1],"int64"),Tensor([0, 1],"int64"),Tensor([0, 1],"int64"),Tensor([0, 1],"int64"),Tensor([0, 1],"int64"),Tensor([0, 1],"int64"),], axis=0, )
paddle.concat(list[Tensor([0, 1],"int64"),Tensor([0, 2],"int64"),], axis=1, )
paddle.concat(list[Tensor([0, 10, 1, 2],"float32"),Tensor([0, 10, 1, 2],"float32"),], axis=-2, )
paddle.concat(list[Tensor([0, 10, 5],"float32"),Tensor([0, 10, 5],"float32"),], )
paddle.concat(list[Tensor([0, 10],"float32"),], 1, )
paddle.concat(list[Tensor([0, 10],"float32"),Tensor([0, 10],"float32"),Tensor([0, 10],"float32"),], 1, )
paddle.concat(list[Tensor([0, 100, 120],"float64"),Tensor([0, 100, 120],"float64"),], axis=0, )
paddle.concat(list[Tensor([0, 100, 256],"float32"),Tensor([0, 300, 256],"float32"),], 1, )
paddle.concat(list[Tensor([0, 100, 4],"float32"),Tensor([0, 300, 4],"float32"),], 1, )
paddle.concat(list[Tensor([0, 1024, 1],"float32"),Tensor([0, 4096, 1],"float32"),Tensor([0, 16384, 1],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 1024, 10],"float32"),Tensor([0, 4096, 10],"float32"),Tensor([0, 16384, 10],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 1024, 18, 18],"float32"),Tensor([0, 768, 18, 18],"float32"),Tensor([0, 768, 18, 18],"float32"),Tensor([0, 768, 18, 18],"float32"),Tensor([0, 768, 18, 18],"float32"),Tensor([0, 768, 18, 18],"float32"),Tensor([0, 768, 18, 18],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 1024, 20, 20],"float32"),Tensor([0, 768, 20, 20],"float32"),Tensor([0, 768, 20, 20],"float32"),Tensor([0, 768, 20, 20],"float32"),Tensor([0, 768, 20, 20],"float32"),Tensor([0, 768, 20, 20],"float32"),Tensor([0, 768, 20, 20],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 103680, 1],"float32"),Tensor([0, 25920, 1],"float32"),Tensor([0, 6480, 1],"float32"),Tensor([0, 1620, 1],"float32"),Tensor([0, 420, 1],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 103680, 4],"float32"),Tensor([0, 25920, 4],"float32"),Tensor([0, 6480, 4],"float32"),Tensor([0, 1620, 4],"float32"),Tensor([0, 420, 4],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 107, 128],"float16"),Tensor([0, 107, 107],"float16"),], axis=2, )
paddle.concat(list[Tensor([0, 109, 128],"float16"),Tensor([0, 109, 109],"float16"),], axis=2, )
paddle.concat(list[Tensor([0, 11, 256],"float32"),], axis=0, )
paddle.concat(list[Tensor([0, 11, 4],"float32"),], axis=0, )
paddle.concat(list[Tensor([0, 11],"int32"),], axis=0, )
paddle.concat(list[Tensor([0, 1100, 128],"float32"),Tensor([0, 1100, 128],"float32"),Tensor([0, 1100, 128],"float32"),Tensor([0, 1100, 128],"float32"),], axis=2, )
paddle.concat(list[Tensor([0, 12],"float64"),Tensor([0, 12],"float64"),Tensor([0, 12],"float64"),Tensor([0, 12],"float64"),Tensor([0, 12],"float64"),Tensor([0, 12],"float64"),Tensor([0, 12],"float64"),Tensor([0, 12],"float64"),Tensor([0, 12],"float64"),Tensor([0, 12],"float64"),Tensor([0, 12],"float64"),Tensor([0, 12],"float64"),], axis=1, )
paddle.concat(list[Tensor([0, 128, 1],"int64"),Tensor([0, 128, 1],"int64"),Tensor([0, 128, 1],"int64"),Tensor([0, 128, 1],"int64"),], axis=0, )
paddle.concat(list[Tensor([0, 128, 256, 256],"float32"),Tensor([0, 128, 256, 256],"float32"),Tensor([0, 128, 256, 256],"float32"),Tensor([0, 128, 256, 256],"float32"),], 1, )
paddle.concat(list[Tensor([0, 128, 32, 32],"float32"),Tensor([0, 32, 32, 32],"float32"),Tensor([0, 32, 32, 32],"float32"),Tensor([0, 32, 32, 32],"float32"),Tensor([0, 32, 32, 32],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 128, 64, 64],"float32"),Tensor([0, 128, 64, 64],"float32"),], 1, )
paddle.concat(list[Tensor([0, 128],"float32"),Tensor([0, 128],"float32"),Tensor([0, 128],"float32"),Tensor([0, 128],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 1280, 7, 7],"float32"),Tensor([0, 288, 7, 7],"float32"),Tensor([0, 288, 7, 7],"float32"),Tensor([0, 288, 7, 7],"float32"),Tensor([0, 288, 7, 7],"float32"),Tensor([0, 288, 7, 7],"float32"),Tensor([0, 288, 7, 7],"float32"),Tensor([0, 288, 7, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 13, 64],"float32"),Tensor([0, 3, 64],"float32"),], axis=-2, )
paddle.concat(list[Tensor([0, 136, 136],"float32"),Tensor([0, 136, 136],"float32"),], )
paddle.concat(list[Tensor([0, 14, 14],"int32"),Tensor([0, 14, 14],"int32"),Tensor([0, 14, 14],"int32"),Tensor([0, 14, 14],"int32"),], axis=0, )
paddle.concat(list[Tensor([0, 15, 15, 2],"float32"),Tensor([0, 15, 15, 2],"float32"),], -1, )
paddle.concat(list[Tensor([0, 1536],"float16"),Tensor([0, 256],"float16"),Tensor([0, 256],"float16"),], axis=-1, )
paddle.concat(list[Tensor([0, 16, 128, 64],"float32"),Tensor([0, 16, 1, 64],"float32"),], axis=-2, )
paddle.concat(list[Tensor([0, 16, 14, 14, 192],"float16"),Tensor([0, 16, 14, 14, 192],"float16"),Tensor([0, 16, 14, 14, 192],"float16"),Tensor([0, 16, 14, 14, 192],"float16"),], -1, )
paddle.concat(list[Tensor([0, 16, 14, 14, 192],"float32"),Tensor([0, 16, 14, 14, 192],"float32"),Tensor([0, 16, 14, 14, 192],"float32"),Tensor([0, 16, 14, 14, 192],"float32"),], -1, )
paddle.concat(list[Tensor([0, 16, 16, 2],"float32"),Tensor([0, 16, 16, 2],"float32"),], -1, )
paddle.concat(list[Tensor([0, 16, 16],"int64"),Tensor([0, 16, 16],"int64"),], 0, )
paddle.concat(list[Tensor([0, 16, 64],"float32"),Tensor([0, 16, 64],"float32"),Tensor([0, 16, 64],"float32"),Tensor([0, 16, 64],"float32"),Tensor([0, 16, 64],"float32"),Tensor([0, 16, 64],"float32"),Tensor([0, 16, 64],"float32"),Tensor([0, 16, 64],"float32"),Tensor([0, 16, 64],"float32"),Tensor([0, 16, 64],"float32"),Tensor([0, 16, 64],"float32"),Tensor([0, 16, 64],"float32"),Tensor([0, 16, 64],"float32"),], axis=0, )
paddle.concat(list[Tensor([0, 160, 18, 18],"float32"),Tensor([0, 160, 18, 18],"float32"),], 1, )
paddle.concat(list[Tensor([0, 160, 56, 56],"float32"),Tensor([0, 192, 56, 56],"float32"),Tensor([0, 192, 56, 56],"float32"),Tensor([0, 192, 56, 56],"float32"),Tensor([0, 192, 56, 56],"float32"),Tensor([0, 192, 56, 56],"float32"),Tensor([0, 192, 56, 56],"float32"),Tensor([0, 192, 56, 56],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 176, 176],"float32"),], )
paddle.concat(list[Tensor([0, 18, 128],"float32"),Tensor([0, 18, 128],"float32"),Tensor([0, 18, 128],"float32"),Tensor([0, 18, 128],"float32"),], axis=2, )
paddle.concat(list[Tensor([0, 18],"int32"),], axis=0, )
paddle.concat(list[Tensor([0, 184, 184],"float32"),], )
paddle.concat(list[Tensor([0, 188, 140, 1, 2, 7],"float32"),Tensor([0, 188, 140, 1, 2, 7],"float32"),Tensor([0, 188, 140, 1, 2, 7],"float32"),], axis=-3, )
paddle.concat(list[Tensor([0, 188, 140, 2, 7],"float32"),Tensor([0, 188, 140, 2, 7],"float32"),Tensor([0, 188, 140, 2, 7],"float32"),], axis=-2, )
paddle.concat(list[Tensor([0, 188, 140, 2],"float32"),Tensor([0, 188, 140, 2],"float32"),Tensor([0, 188, 140, 2],"float32"),], axis=-1, )
paddle.concat(list[Tensor([0, 188, 140, 2],"int32"),Tensor([0, 188, 140, 2],"int32"),Tensor([0, 188, 140, 2],"int32"),], axis=-1, )
paddle.concat(list[Tensor([0, 192, 20, 20],"float32"),Tensor([0, 192, 20, 20],"float32"),Tensor([0, 192, 20, 20],"float32"),Tensor([0, 192, 20, 20],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 2, 1, 4, 16],"float32"),Tensor([0, 2, 15, 4, 16],"float32"),], axis=2, )
paddle.concat(list[Tensor([0, 2, 1, 4, 16],"float32"),Tensor([0, 2, 7, 4, 16],"float32"),], axis=2, )
paddle.concat(list[Tensor([0, 2, 1],"float64"),Tensor([0, 2, 1],"float64"),], axis=2, name=None, )
paddle.concat(list[Tensor([0, 2, 16, 4, 16],"float32"),Tensor([0, 2, 16, 4, 16],"float32"),], axis=3, )
paddle.concat(list[Tensor([0, 2, 16, 4],"int64"),Tensor([0, 2, 16, 4],"int64"),], axis=3, )
paddle.concat(list[Tensor([0, 2, 32],"float32"),Tensor([0, 2, 32],"float32"),Tensor([0, 2, 32],"float32"),], axis=2, )
paddle.concat(list[Tensor([0, 2, 4, 16, 1],"float32"),Tensor([0, 2, 4, 16, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([0, 2, 8, 4, 16],"float32"),Tensor([0, 2, 8, 4, 16],"float32"),], axis=3, )
paddle.concat(list[Tensor([0, 2],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 2],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([0, 2],"float32"),Tensor([0, 2],"float32"),], -1, )
paddle.concat(list[Tensor([0, 2],"float32"),Tensor([0, 2],"float32"),], axis=-2, )
paddle.concat(list[Tensor([0, 2],"float32"),Tensor([0, 2],"float32"),Tensor([0, 2],"float32"),], )
paddle.concat(list[Tensor([0, 2],"float64"),Tensor([0, 2],"float64"),], axis=0, name=None, )
paddle.concat(list[Tensor([0, 2],"float64"),Tensor([0, 2],"float64"),Tensor([0, 2],"float64"),], axis=1, name=None, )
paddle.concat(list[Tensor([0, 20, 15, 384],"float32"),Tensor([0, 20, 15, 384],"float32"),Tensor([0, 20, 15, 384],"float32"),Tensor([0, 20, 15, 384],"float32"),], -1, )
paddle.concat(list[Tensor([0, 20, 5],"float32"),Tensor([0, 20, 5],"float32"),Tensor([0, 20, 5],"float32"),Tensor([0, 20, 5],"float32"),Tensor([0, 20, 5],"float32"),Tensor([0, 20, 5],"float32"),Tensor([0, 20, 5],"float32"),Tensor([0, 20, 5],"float32"),], axis=0, )
paddle.concat(list[Tensor([0, 214272],"float32"),Tensor([0, 214272],"float32"),], 0, )
paddle.concat(list[Tensor([0, 214272],"float32"),Tensor([0, 214272],"float32"),Tensor([0, 214272],"float32"),Tensor([0, 214272],"float32"),], 0, )
paddle.concat(list[Tensor([0, 21504, 2],"float32"),Tensor([0, 21504, 2],"float32"),Tensor([0, 21504, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([0, 224, 28, 28],"float16"),Tensor([0, 128, 28, 28],"float16"),Tensor([0, 128, 28, 28],"float16"),Tensor([0, 128, 28, 28],"float16"),Tensor([0, 128, 28, 28],"float16"),Tensor([0, 128, 28, 28],"float16"),], axis=1, )
paddle.concat(list[Tensor([0, 224, 28, 28],"float32"),Tensor([0, 128, 28, 28],"float32"),Tensor([0, 128, 28, 28],"float32"),Tensor([0, 128, 28, 28],"float32"),Tensor([0, 128, 28, 28],"float32"),Tensor([0, 128, 28, 28],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 24, 18, 768],"float32"),Tensor([0, 24, 18, 768],"float32"),Tensor([0, 24, 18, 768],"float32"),Tensor([0, 24, 18, 768],"float32"),], -1, )
paddle.concat(list[Tensor([0, 248, 1, 1, 2, 1],"float32"),Tensor([0, 248, 1, 1, 2, 1],"float32"),Tensor([0, 248, 1, 1, 2, 1],"float32"),Tensor([0, 248, 1, 1, 2, 3],"float32"),Tensor([0, 248, 1, 1, 2, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([0, 248, 216, 2, 7],"float32"),], axis=-2, )
paddle.concat(list[Tensor([0, 248832, 1],"float32"),Tensor([0, 62208, 1],"float32"),Tensor([0, 15552, 1],"float32"),Tensor([0, 3888, 1],"float32"),Tensor([0, 972, 1],"float32"),Tensor([0, 270, 1],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 248832, 4],"float32"),Tensor([0, 62208, 4],"float32"),Tensor([0, 15552, 4],"float32"),Tensor([0, 3888, 4],"float32"),Tensor([0, 972, 4],"float32"),Tensor([0, 270, 4],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 256, 1],"float32"),Tensor([0, 256, 1],"float32"),], 2, )
paddle.concat(list[Tensor([0, 256, 124, 128],"float32"),Tensor([0, 256, 124, 128],"float32"),Tensor([0, 256, 124, 128],"float32"),Tensor([0, 256, 124, 128],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 256, 62, 64],"float32"),Tensor([0, 256, 62, 64],"float32"),Tensor([0, 256, 62, 64],"float32"),Tensor([0, 256, 62, 64],"float32"),Tensor([0, 256, 62, 64],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 256],"float32"),Tensor([0, 256],"float32"),Tensor([0, 256],"float32"),Tensor([0, 256],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 256],"float32"),Tensor([0, 256],"float32"),Tensor([0, 256],"float32"),Tensor([0, 256],"float32"),Tensor([0, 256],"float32"),Tensor([0, 256],"float32"),], axis=0, )
paddle.concat(list[Tensor([0, 262144],"float32"),Tensor([0, 262144],"float32"),Tensor([0, 262144],"float32"),Tensor([0, 262144],"float32"),], 0, )
paddle.concat(list[Tensor([0, 262144],"float32"),Tensor([0, 262144],"float32"),Tensor([0, 262144],"float32"),Tensor([0, 262144],"float32"),Tensor([0, 262144],"float32"),Tensor([0, 262144],"float32"),Tensor([0, 262144],"float32"),Tensor([0, 262144],"float32"),], 0, )
paddle.concat(list[Tensor([0, 2704, 11],"float32"),Tensor([0, 676, 11],"float32"),Tensor([0, 169, 11],"float32"),Tensor([0, 49, 11],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 2704, 32],"float32"),Tensor([0, 676, 32],"float32"),Tensor([0, 169, 32],"float32"),Tensor([0, 49, 32],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 27648, 2],"float32"),Tensor([0, 6912, 2],"float32"),Tensor([0, 1728, 2],"float32"),Tensor([0, 432, 2],"float32"),Tensor([0, 108, 2],"float32"),], 1, )
paddle.concat(list[Tensor([0, 27648, 256],"float32"),Tensor([0, 6912, 256],"float32"),Tensor([0, 1728, 256],"float32"),Tensor([0, 432, 256],"float32"),Tensor([0, 108, 256],"float32"),], 1, )
paddle.concat(list[Tensor([0, 27648],"float32"),Tensor([0, 6912],"float32"),Tensor([0, 1728],"float32"),Tensor([0, 432],"float32"),Tensor([0, 108],"float32"),], 1, )
paddle.concat(list[Tensor([0, 28800],"float32"),Tensor([0, 7200],"float32"),Tensor([0, 1800],"float32"),Tensor([0, 450],"float32"),Tensor([0, 117],"float32"),], 1, )
paddle.concat(list[Tensor([0, 3, 1],"float32"),Tensor([0, 3, 1],"float32"),Tensor([0, 3, 1],"float32"),], axis=2, )
paddle.concat(list[Tensor([0, 3, 10, 10, 1],"float32"),Tensor([0, 3, 10, 10, 1],"float32"),Tensor([0, 3, 10, 10, 1],"float32"),Tensor([0, 3, 10, 10, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([0, 3, 112, 112],"float32"),Tensor([0, 3, 112, 112],"float32"),], 0, )
paddle.concat(list[Tensor([0, 3, 16, 16],"float32"),Tensor([0, 3, 16, 16],"float32"),Tensor([0, 2, 16, 16],"float32"),], 1, )
paddle.concat(list[Tensor([0, 3, 2, 2],"float32"),Tensor([0, 3, 2, 2],"float32"),Tensor([0, 2, 2, 2],"float32"),], 1, )
paddle.concat(list[Tensor([0, 3, 20, 20, 1],"float32"),Tensor([0, 3, 20, 20, 1],"float32"),Tensor([0, 3, 20, 20, 1],"float32"),Tensor([0, 3, 20, 20, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([0, 3, 224, 224],"float32"),Tensor([0, 3, 224, 224],"float32"),], 0, )
paddle.concat(list[Tensor([0, 3, 240, 240],"float32"),Tensor([0, 3, 240, 240],"float32"),Tensor([0, 3, 240, 240],"float32"),Tensor([0, 3, 240, 240],"float32"),], 1, )
paddle.concat(list[Tensor([0, 3, 256, 256],"float32"),], 0, )
paddle.concat(list[Tensor([0, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([0,  ...
paddle.concat(list[Tensor([0, 3, 64],"float32"),Tensor([0, 3, 64],"float32"),Tensor([0, 3, 64],"float32"),Tensor([0, 3, 64],"float32"),Tensor([0, 3, 64],"float32"),Tensor([0, 3, 64],"float32"),Tensor([0, 3, 64],"float32"),Tensor([0, 3, 64],"float32"),Tensor([0, 3, 64],"float32"),Tensor([0, 3, 64],"float32"),Tensor([0, 3, 64],"float32"),Tensor([0, 3, 64],"float32"),Tensor([0, 3, 64],"float32"),], axis=0, )
paddle.concat(list[Tensor([0, 304, 918],"float16"),Tensor([0, 304, 918],"float16"),Tensor([0, 304, 918],"float16"),Tensor([0, 304, 918],"float16"),Tensor([0, 304, 918],"float16"),Tensor([0, 304, 918],"float16"),Tensor([0, 304, 918],"float16"),Tensor([0, 304, 918],"float16"),Tensor([0, 304, 918],"float16"),Tensor([0, 304, 918],"float16"),Tensor([0, 304, 918],"float16"),Tensor([0, 304, 918],"float16"),], axis=-1, )
paddle.concat(list[Tensor([0, 32, 4],"float32"),Tensor([0, 32, 3],"float32"),Tensor([0, 32, 2],"float32"),], axis=-1, )
paddle.concat(list[Tensor([0, 32],"float32"),Tensor([0, 32],"float32"),Tensor([0, 32],"float32"),Tensor([0, 32],"float32"),Tensor([0, 32],"float32"),Tensor([0, 32],"float32"),Tensor([0, 32],"float32"),Tensor([0, 32],"float32"),Tensor([0, 32],"float32"),Tensor([0, 32],"float32"),Tensor([0, 32],"float32"),Tensor([0, 32],"float32"),Tensor([0, 32],"float32"),Tensor([0, 32],"float32"),Tensor([0, 32],"float32"),Tensor([0, 32],"float32"),], axis=-1, )
paddle.concat(list[Tensor([0, 32],"float32"),Tensor([0, 32],"float32"),Tensor([0, 32],"float32"),Tensor([0, 32],"float32"),Tensor([0, 32],"float32"),Tensor([0, 32],"float32"),Tensor([0, 32],"float32"),Tensor([0, 32],"float32"),Tensor([0, 32],"float32"),Tensor([0, 32],"float32"),Tensor([0, 32],"float32"),Tensor([0, 32],"float32"),Tensor([0, 32],"float32"),Tensor([0, 32],"float32"),Tensor([0, 32],"float32"),Tensor([0, 32],"float32"),Tensor([0, 32],"float32"),Tensor([0, 32],"float32"),Tensor([0, 32],"float32"),Tensor([0, 32],"float32"),Tensor([0, 32],"float32"),Tensor([0, 32],"float32"),Tensor([0, 32],"float32"),Tensor([0, 32],"float32"),Tensor([0, 32],"float32"),Tensor([0, 32],"float32"),Tensor([0, 32],"float32"),Tensor([0, 32],"float32"),Tensor([0, 32],"float32"),Tensor([0, 32],"float32"),Tensor([0, 32],"float32"),Tensor([0, 32],"float32"),Tensor([0, 32],"float32"),Tensor([0, 32],"float32"),Tensor([0, 32],"float32"),Tensor([0, 32],"float32"),Tensor([0, 32],"float32"),Tensor([0, 32],"float32"),Tensor([0, 32],"float32"),Tensor([0, 32],"float32"),Tensor([0, 32],"float32"),Tensor([0, 32],"float32"),Tensor([0, 32],"float32"),Tensor([0, 32],"float32"),Tensor([0, 32],"float32"),Tensor([0, 32],"float32"),Tensor([0, 32],"float32"),Tensor([0, 32],"float32"),], axis=-1, )
paddle.concat(list[Tensor([0, 346, 918],"float16"),Tensor([0, 346, 918],"float16"),Tensor([0, 346, 918],"float16"),Tensor([0, 346, 918],"float16"),Tensor([0, 346, 918],"float16"),Tensor([0, 346, 918],"float16"),Tensor([0, 346, 918],"float16"),Tensor([0, 346, 918],"float16"),Tensor([0, 346, 918],"float16"),Tensor([0, 346, 918],"float16"),Tensor([0, 346, 918],"float16"),Tensor([0, 346, 918],"float16"),], axis=-1, )
paddle.concat(list[Tensor([0, 3600, 4],"float32"),Tensor([0, 900, 4],"float32"),Tensor([0, 225, 4],"float32"),], 1, )
paddle.concat(list[Tensor([0, 36000, 1],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 36000, 4],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 4, 1, 1, 8],"float32"),Tensor([0, 4, 3, 1, 8],"float32"),Tensor([0, 4, 1, 1, 8],"float32"),], axis=2, )
paddle.concat(list[Tensor([0, 4, 1, 5, 1, 8],"float32"),Tensor([0, 4, 3, 5, 1, 8],"float32"),Tensor([0, 4, 1, 5, 1, 8],"float32"),], axis=2, )
paddle.concat(list[Tensor([0, 4, 1, 8],"float32"),Tensor([0, 4, 1, 8],"float32"),], axis=2, )
paddle.concat(list[Tensor([0, 4, 1, 8],"float32"),Tensor([0, 4, 5, 8],"float32"),Tensor([0, 4, 1, 8],"float32"),], axis=2, )
paddle.concat(list[Tensor([0, 4, 10],"float32"),Tensor([0, 4, 10],"float32"),Tensor([0, 4, 10],"float32"),], 0, )
paddle.concat(list[Tensor([0, 4, 2, 5],"float64"),], axis=0, name=None, )
paddle.concat(list[Tensor([0, 4, 2, 5],"float64"),], axis=1, name=None, )
paddle.concat(list[Tensor([0, 4, 2, 5],"float64"),], axis=2, name=None, )
paddle.concat(list[Tensor([0, 4, 2, 5],"float64"),Tensor([0, 4, 2, 5],"float64"),Tensor([0, 4, 2, 5],"float64"),], axis=0, name=None, )
paddle.concat(list[Tensor([0, 4, 2, 5],"float64"),Tensor([0, 4, 2, 5],"float64"),Tensor([0, 4, 2, 5],"float64"),], axis=1, name=None, )
paddle.concat(list[Tensor([0, 4, 2, 5],"float64"),Tensor([0, 4, 2, 5],"float64"),Tensor([0, 4, 2, 5],"float64"),], axis=2, name=None, )
paddle.concat(list[Tensor([0, 4, 2, 8],"float32"),Tensor([0, 4, 1, 8],"float32"),], axis=2, )
paddle.concat(list[Tensor([0, 4, 2],"float64"),], axis=0, name=None, )
paddle.concat(list[Tensor([0, 4, 2],"float64"),], axis=1, name=None, )
paddle.concat(list[Tensor([0, 4, 2],"float64"),Tensor([0, 4, 2],"float64"),Tensor([0, 4, 2],"float64"),], axis=0, name=None, )
paddle.concat(list[Tensor([0, 4, 2],"float64"),Tensor([0, 4, 2],"float64"),Tensor([0, 4, 2],"float64"),], axis=1, name=None, )
paddle.concat(list[Tensor([0, 4, 3, 1, 1, 8],"float32"),Tensor([0, 4, 3, 1, 1, 8],"float32"),Tensor([0, 4, 3, 1, 1, 8],"float32"),], axis=3, )
paddle.concat(list[Tensor([0, 4, 3, 1, 1, 8],"float32"),Tensor([0, 4, 3, 3, 1, 8],"float32"),Tensor([0, 4, 3, 1, 1, 8],"float32"),], axis=3, )
paddle.concat(list[Tensor([0, 4, 5, 1, 5],"float32"),Tensor([0, 4, 5, 1, 2],"float32"),], axis=4, )
paddle.concat(list[Tensor([0, 4],"float32"),], 0, )
paddle.concat(list[Tensor([0, 4],"float32"),Tensor([0, 4],"float32"),], axis=0, )
paddle.concat(list[Tensor([0, 4],"float32"),Tensor([0, 4],"float32"),Tensor([0, 4],"float32"),Tensor([0, 4],"float32"),], )
paddle.concat(list[Tensor([0, 4],"float32"),Tensor([0, 4],"float32"),Tensor([0, 4],"float32"),Tensor([0, 4],"float32"),Tensor([0, 4],"float32"),Tensor([0, 4],"float32"),], )
paddle.concat(list[Tensor([0, 4],"float32"),Tensor([0, 4],"float32"),Tensor([0, 4],"float32"),Tensor([0, 4],"float32"),Tensor([0, 4],"float32"),Tensor([0, 4],"float32"),Tensor([0, 4],"float32"),Tensor([0, 4],"float32"),], )
paddle.concat(list[Tensor([0, 4],"float32"),Tensor([0, 4],"float32"),Tensor([0, 4],"float32"),Tensor([0, 4],"float32"),Tensor([0, 4],"float32"),Tensor([0, 4],"float32"),Tensor([0, 4],"float32"),Tensor([0, 4],"float32"),Tensor([0, 4],"float32"),Tensor([0, 4],"float32"),Tensor([0, 4],"float32"),Tensor([0, 4],"float32"),Tensor([0, 4],"float32"),Tensor([0, 4],"float32"),Tensor([0, 4],"float32"),Tensor([0, 4],"float32"),], )
paddle.concat(list[Tensor([0, 4],"int32"),Tensor([0, 4],"int32"),Tensor([0, 4],"int32"),Tensor([0, 4],"int32"),], axis=0, )
paddle.concat(list[Tensor([0, 4],"int32"),Tensor([0, 4],"int32"),Tensor([0, 4],"int32"),Tensor([0, 4],"int32"),Tensor([0, 4],"int32"),Tensor([0, 4],"int32"),Tensor([0, 4],"int32"),Tensor([0, 4],"int32"),], axis=0, )
paddle.concat(list[Tensor([0, 400],"float32"),Tensor([0, 400],"float32"),Tensor([0, 400],"float32"),Tensor([0, 400],"float32"),Tensor([0, 400],"float32"),Tensor([0, 400],"float32"),Tensor([0, 400],"float32"),Tensor([0, 400],"float32"),Tensor([0, 400],"float32"),Tensor([0, 400],"float32"),Tensor([0, 400],"float32"),Tensor([0, 400],"float32"),Tensor([0, 400],"float32"),Tensor([0, 400],"float32"),Tensor([0, 400],"float32"),Tensor([0, 400],"float32"),Tensor([0, 400],"float32"),Tensor([0, 400],"float32"),Tensor([0, 400],"float32"),Tensor([0, 400],"float32"),Tensor([0, 400],"float32"),Tensor([0, 400],"float32"),Tensor([0, 400],"float32"),Tensor([0, 400],"float32"),Tensor([0, 400],"float32"),], axis=0, )
paddle.concat(list[Tensor([0, 4096, 4],"float32"),Tensor([0, 1024, 4],"float32"),Tensor([0, 256, 4],"float32"),], 1, )
paddle.concat(list[Tensor([0, 4800, 2],"float32"),Tensor([0, 1200, 2],"float32"),Tensor([0, 300, 2],"float32"),Tensor([0, 80, 2],"float32"),], 1, )
paddle.concat(list[Tensor([0, 4800, 256],"float32"),Tensor([0, 1200, 256],"float32"),Tensor([0, 300, 256],"float32"),Tensor([0, 80, 256],"float32"),], 1, )
paddle.concat(list[Tensor([0, 4800],"float32"),Tensor([0, 1200],"float32"),Tensor([0, 300],"float32"),Tensor([0, 80],"float32"),], 1, )
paddle.concat(list[Tensor([0, 5, 1, 1],"float32"),Tensor([0, 5, 1, 3],"float32"),Tensor([0, 5, 1, 1],"float32"),], axis=3, )
paddle.concat(list[Tensor([0, 5, 1],"float32"),Tensor([0, 5, 1],"float32"),], 2, )
paddle.concat(list[Tensor([0, 5, 1],"float64"),Tensor([0, 5, 1],"float64"),Tensor([0, 5, 1],"float64"),], axis=2, name=None, )
paddle.concat(list[Tensor([0, 5],"float64"),Tensor([0, 5],"float64"),Tensor([0, 5],"float64"),], axis=0, name=None, )
paddle.concat(list[Tensor([0, 50, 50, 5],"float32"),Tensor([0, 50, 50, 5],"float32"),], axis=0, )
paddle.concat(list[Tensor([0, 500, 1],"int64"),Tensor([0, 500, 1],"int64"),Tensor([0, 500, 1],"int64"),Tensor([0, 500, 1],"int64"),Tensor([0, 500, 1],"int64"),Tensor([0, 500, 1],"int64"),Tensor([0, 500, 1],"int64"),Tensor([0, 500, 1],"int64"),Tensor([0, 500, 1],"int64"),Tensor([0, 500, 1],"int64"),Tensor([0, 500, 1],"int64"),Tensor([0, 500, 1],"int64"),Tensor([0, 500, 1],"int64"),Tensor([0, 500, 1],"int64"),Tensor([0, 500, 1],"int64"),Tensor([0, 500, 1],"int64"),Tensor([0, 500, 1],"int64"),Tensor([0, 500, 1],"int64"),Tensor([0, 500, 1],"int64"),Tensor([0, 500, 1],"int64"),], axis=0, )
paddle.concat(list[Tensor([0, 512],"float16"),Tensor([0, 128],"float16"),Tensor([0, 128],"float16"),], axis=1, )
paddle.concat(list[Tensor([0, 52, 14, 8],"float32"),Tensor([0, 52, 14, 8],"float32"),], axis=0, )
paddle.concat(list[Tensor([0, 6],"float64"),Tensor([0, 6],"float64"),Tensor([0, 6],"float64"),Tensor([0, 6],"float64"),Tensor([0, 6],"float64"),Tensor([0, 6],"float64"),], axis=1, )
paddle.concat(list[Tensor([0, 640, 640],"float32"),Tensor([0, 640, 640],"float32"),Tensor([0, 640, 640],"float32"),Tensor([0, 640, 640],"float32"),Tensor([0, 640, 640],"float32"),Tensor([0, 640, 640],"float32"),Tensor([0, 640, 640],"float32"),Tensor([0, 640, 640],"float32"),], 0, )
paddle.concat(list[Tensor([0, 6408],"float32"),Tensor([0, 1620],"float32"),Tensor([0, 414],"float32"),Tensor([0, 108],"float32"),], 1, )
paddle.concat(list[Tensor([0, 7, 32],"float32"),Tensor([0, 7, 32],"float32"),], axis=0, )
paddle.concat(list[Tensor([0, 7],"float32"),Tensor([0, 7],"float32"),], axis=0, )
paddle.concat(list[Tensor([0, 7],"int64"),Tensor([0, 10],"int64"),Tensor([0, 7],"int64"),], axis=1, )
paddle.concat(list[Tensor([0, 96],"float32"),Tensor([0, 50],"float32"),], 1, )
paddle.concat(list[Tensor([0, 96],"float32"),Tensor([0, 96],"float32"),], 0, )
paddle.concat(list[Tensor([0],"float16"),], axis=0, name=None, )
paddle.concat(list[Tensor([0],"float16"),Tensor([0],"float16"),Tensor([0],"float16"),], axis=-1, )
paddle.concat(list[Tensor([0],"float16"),Tensor([0],"float16"),Tensor([0],"float16"),Tensor([0],"float16"),Tensor([0],"float16"),Tensor([0],"float16"),Tensor([0],"float16"),Tensor([0],"float16"),Tensor([0],"float16"),], )
paddle.concat(list[Tensor([0],"float16"),Tensor([0],"float16"),Tensor([0],"float16"),Tensor([0],"float16"),Tensor([0],"float16"),Tensor([0],"float16"),Tensor([0],"float16"),Tensor([0],"float16"),Tensor([0],"float16"),Tensor([0],"float16"),Tensor([0],"float16"),Tensor([0],"float16"),Tensor([0],"float16"),Tensor([0],"float16"),Tensor([0],"float16"),Tensor([0],"float16"),Tensor([0],"float16"),Tensor([0],"float16"),Tensor([0],"float16"),Tensor([0],"float16"),Tensor([0],"float16"),Tensor([0],"float16"),Tensor([0],"float16"),], )
paddle.concat(list[Tensor([0],"float16"),Tensor([0],"float16"),Tensor([0],"float16"),Tensor([0],"float16"),Tensor([0],"float16"),Tensor([0],"float16"),Tensor([0],"float16"),Tensor([0],"float16"),Tensor([0],"float16"),Tensor([0],"float16"),Tensor([0],"float16"),Tensor([0],"float16"),Tensor([0],"float16"),Tensor([0],"float16"),Tensor([0],"float16"),Tensor([0],"float16"),Tensor([0],"float16"),Tensor([0],"float16"),Tensor([0],"float16"),Tensor([0],"float16"),Tensor([0],"float16"),Tensor([0],"float16"),Tensor([0],"float16"),Tensor([0],"float16"),Tensor([0],"float16"),Tensor([0],"float16"),Tensor([0],"float16"),Tensor([0],"float16"),Tensor([0],"float16"),Tensor([0],"float16"),], )
paddle.concat(list[Tensor([0],"float16"),Tensor([0],"float16"),Tensor([0],"float16"),Tensor([0],"float16"),Tensor([0],"float16"),Tensor([0],"float16"),Tensor([0],"float16"),Tensor([0],"float16"),Tensor([0],"float16"),Tensor([0],"float16"),Tensor([0],"float16"),Tensor([0],"float16"),Tensor([0],"float16"),Tensor([0],"float16"),Tensor([0],"float16"),Tensor([0],"float16"),Tensor([0],"float16"),Tensor([0],"float16"),Tensor([0],"float16"),Tensor([0],"float16"),Tensor([0],"float16"),Tensor([0],"float16"),Tensor([0],"float16"),Tensor([0],"float16"),Tensor([0],"float16"),Tensor([0],"float16"),Tensor([0],"float16"),Tensor([0],"float16"),Tensor([0],"float16"),Tensor([0],"float16"),Tensor([0],"float16"),], )
paddle.concat(list[Tensor([0],"float32"),], 0, )
paddle.concat(list[Tensor([0],"float32"),], axis=0, )
paddle.concat(list[Tensor([0],"float32"),], axis=0, name=None, )
paddle.concat(list[Tensor([0],"float32"),Tensor([0],"float32"),], )
paddle.concat(list[Tensor([0],"float32"),Tensor([0],"float32"),], axis=0, )
paddle.concat(list[Tensor([0],"float32"),Tensor([0],"float32"),], axis=-1, )
paddle.concat(list[Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),], axis=0, )
paddle.concat(list[Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),], axis=0, )
paddle.concat(list[Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),], )
paddle.concat(list[Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),], )
paddle.concat(list[Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),], )
paddle.concat(list[Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),], )
paddle.concat(list[Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),], axis=-1, )
paddle.concat(list[Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),], axis=-1, )
paddle.concat(list[Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"f ...
paddle.concat(list[Tensor([0],"float64"),Tensor([0],"float64"),], axis=0, name=None, )
paddle.concat(list[Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),], )
paddle.concat(list[Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),], axis=0, name=None, )
paddle.concat(list[Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),], axis=0, )
paddle.concat(list[Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),], axis=0, )
paddle.concat(list[Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),], axis=0, )
paddle.concat(list[Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),], axis=0, )
paddle.concat(list[Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),], axis=0, )
paddle.concat(list[Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),], axis=0, )
paddle.concat(list[Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),], axis=0, )
paddle.concat(list[Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),], axis=0, )
paddle.concat(list[Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),], axis=0, )
paddle.concat(list[Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),], axis=0, )
paddle.concat(list[Tensor([0],"int32"),], axis=0, )
paddle.concat(list[Tensor([0],"int32"),Tensor([0],"int32"),Tensor([0],"int32"),Tensor([0],"int32"),Tensor([0],"int32"),Tensor([0],"int32"),Tensor([0],"int32"),Tensor([0],"int32"),], axis=0, )
paddle.concat(list[Tensor([0],"int64"),], )
paddle.concat(list[Tensor([0],"int64"),], 0, )
paddle.concat(list[Tensor([0],"int64"),Tensor([0],"int64"),], -1, )
paddle.concat(list[Tensor([0],"int64"),Tensor([0],"int64"),Tensor([0],"int64"),], axis=0, )
paddle.concat(list[Tensor([0],"int64"),Tensor([0],"int64"),Tensor([0],"int64"),Tensor([0],"int64"),], )
paddle.concat(list[Tensor([0],"int64"),Tensor([0],"int64"),Tensor([0],"int64"),Tensor([0],"int64"),Tensor([0],"int64"),Tensor([0],"int64"),Tensor([0],"int64"),Tensor([0],"int64"),], )
paddle.concat(list[Tensor([0],"int64"),Tensor([0],"int64"),Tensor([0],"int64"),Tensor([0],"int64"),Tensor([0],"int64"),Tensor([0],"int64"),Tensor([0],"int64"),Tensor([0],"int64"),Tensor([0],"int64"),Tensor([0],"int64"),Tensor([0],"int64"),Tensor([0],"int64"),Tensor([0],"int64"),Tensor([0],"int64"),Tensor([0],"int64"),Tensor([0],"int64"),], )
paddle.concat(list[Tensor([1, 0, 1, 1],"float32"),Tensor([1, 0, 1, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 0, 1, 1],"float64"),], axis=0, name=None, )
paddle.concat(list[Tensor([1, 0, 1, 1],"float64"),], axis=1, name=None, )
paddle.concat(list[Tensor([1, 0, 1, 1],"float64"),], axis=2, name=None, )
paddle.concat(list[Tensor([1, 0, 1, 1],"float64"),Tensor([1, 0, 1, 1],"float64"),Tensor([1, 0, 1, 1],"float64"),], axis=0, name=None, )
paddle.concat(list[Tensor([1, 0, 1, 1],"float64"),Tensor([1, 0, 1, 1],"float64"),Tensor([1, 0, 1, 1],"float64"),], axis=1, name=None, )
paddle.concat(list[Tensor([1, 0, 1, 1],"float64"),Tensor([1, 0, 1, 1],"float64"),Tensor([1, 0, 1, 1],"float64"),], axis=2, name=None, )
paddle.concat(list[Tensor([1, 0, 1, 16],"float32"),Tensor([1, 0, 1, 16],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 0, 1, 8],"float32"),Tensor([1, 0, 1, 8],"float32"),], axis=2, )
paddle.concat(list[Tensor([1, 0, 1],"float16"),], axis=2, name=None, )
paddle.concat(list[Tensor([1, 0, 1],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 0, 1],"float32"),], axis=2, name=None, )
paddle.concat(list[Tensor([1, 0, 1],"float32"),Tensor([1, 0, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 0, 1],"float32"),Tensor([1, 0, 1],"float32"),Tensor([1, 0, 1],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 0, 1],"float32"),Tensor([1, 0, 1],"float32"),Tensor([1, 0, 1],"float32"),Tensor([1, 0, 1],"float32"),Tensor([1, 0, 1],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 0, 1],"float32"),Tensor([1, 0, 1],"float32"),Tensor([1, 0, 1],"float32"),Tensor([1, 0, 1],"float32"),Tensor([1, 0, 1],"float32"),Tensor([1, 0, 1],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 0, 1],"float64"),], axis=0, name=None, )
paddle.concat(list[Tensor([1, 0, 1],"float64"),], axis=1, name=None, )
paddle.concat(list[Tensor([1, 0, 1],"float64"),Tensor([1, 0, 1],"float64"),], axis=2, name=None, )
paddle.concat(list[Tensor([1, 0, 1],"float64"),Tensor([1, 0, 1],"float64"),Tensor([1, 0, 1],"float64"),], axis=0, name=None, )
paddle.concat(list[Tensor([1, 0, 1],"float64"),Tensor([1, 0, 1],"float64"),Tensor([1, 0, 1],"float64"),], axis=1, name=None, )
paddle.concat(list[Tensor([1, 0, 1],"float64"),Tensor([1, 0, 1],"float64"),Tensor([1, 0, 1],"float64"),], axis=2, name=None, )
paddle.concat(list[Tensor([1, 0, 1],"int64"),Tensor([1, 0, 1],"int64"),Tensor([1, 0, 1],"int64"),Tensor([1, 0, 1],"int64"),], axis=0, )
paddle.concat(list[Tensor([1, 0, 1],"int64"),Tensor([1, 0, 1],"int64"),Tensor([1, 0, 1],"int64"),Tensor([1, 0, 1],"int64"),Tensor([1, 0, 1],"int64"),Tensor([1, 0, 1],"int64"),Tensor([1, 0, 1],"int64"),Tensor([1, 0, 1],"int64"),Tensor([1, 0, 1],"int64"),Tensor([1, 0, 1],"int64"),Tensor([1, 0, 1],"int64"),Tensor([1, 0, 1],"int64"),Tensor([1, 0, 1],"int64"),Tensor([1, 0, 1],"int64"),Tensor([1, 0, 1],"int64"),Tensor([1, 0, 1],"int64"),Tensor([1, 0, 1],"int64"),Tensor([1, 0, 1],"int64"),Tensor([1, 0, 1],"int64"),Tensor([1, 0, 1],"int64"),], axis=0, )
paddle.concat(list[Tensor([1, 0, 10],"float32"),Tensor([1, 0, 10],"float32"),Tensor([1, 0, 10],"float32"),], 0, )
paddle.concat(list[Tensor([1, 0, 10],"float32"),Tensor([1, 0, 10],"float32"),Tensor([1, 0, 10],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 0, 100, 136],"float32"),Tensor([1, 0, 100, 136],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 0, 100, 152],"float32"),Tensor([1, 0, 100, 152],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 0, 100, 176, 176],"float32"),Tensor([6, 0, 100, 176, 176],"float32"),], )
paddle.concat(list[Tensor([1, 0, 100, 184, 184],"float32"),Tensor([6, 0, 100, 184, 184],"float32"),], )
paddle.concat(list[Tensor([1, 0, 100, 2],"float32"),Tensor([6, 0, 100, 2],"float32"),], )
paddle.concat(list[Tensor([1, 0, 100, 4],"float32"),Tensor([6, 0, 100, 4],"float32"),], )
paddle.concat(list[Tensor([1, 0, 10285, 1],"float32"),Tensor([1, 0, 10285, 1],"float32"),Tensor([1, 0, 10285, 1],"float32"),Tensor([1, 0, 10285, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 0, 11],"float32"),Tensor([1, 0, 11],"float32"),Tensor([1, 0, 11],"float32"),Tensor([1, 0, 11],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 0, 124, 128],"float32"),Tensor([1, 0, 124, 128],"float32"),Tensor([1, 0, 124, 128],"float32"),Tensor([1, 0, 124, 128],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 0, 12544, 2],"float32"),], )
paddle.concat(list[Tensor([1, 0, 128],"float16"),Tensor([1, 0, 107],"float16"),], axis=2, )
paddle.concat(list[Tensor([1, 0, 128],"float16"),Tensor([1, 0, 109],"float16"),], axis=2, )
paddle.concat(list[Tensor([1, 0, 128],"float32"),Tensor([1, 0, 128],"float32"),Tensor([1, 0, 128],"float32"),Tensor([1, 0, 128],"float32"),], axis=2, )
paddle.concat(list[Tensor([1, 0, 136],"float32"),Tensor([1, 0, 136],"float32"),], )
paddle.concat(list[Tensor([1, 0, 14, 14, 192],"float16"),Tensor([1, 0, 14, 14, 192],"float16"),Tensor([1, 0, 14, 14, 192],"float16"),Tensor([1, 0, 14, 14, 192],"float16"),], -1, )
paddle.concat(list[Tensor([1, 0, 14, 14, 192],"float32"),Tensor([1, 0, 14, 14, 192],"float32"),Tensor([1, 0, 14, 14, 192],"float32"),Tensor([1, 0, 14, 14, 192],"float32"),], -1, )
paddle.concat(list[Tensor([1, 0, 14, 8],"float32"),Tensor([1, 0, 14, 8],"float32"),], axis=0, )
paddle.concat(list[Tensor([1, 0, 140, 1, 2, 7],"float32"),Tensor([1, 0, 140, 1, 2, 7],"float32"),Tensor([1, 0, 140, 1, 2, 7],"float32"),], axis=-3, )
paddle.concat(list[Tensor([1, 0, 140, 2, 7],"float32"),Tensor([1, 0, 140, 2, 7],"float32"),Tensor([1, 0, 140, 2, 7],"float32"),], axis=-2, )
paddle.concat(list[Tensor([1, 0, 140, 2],"float32"),Tensor([1, 0, 140, 2],"float32"),Tensor([1, 0, 140, 2],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 0, 140, 2],"int32"),Tensor([1, 0, 140, 2],"int32"),Tensor([1, 0, 140, 2],"int32"),], axis=-1, )
paddle.concat(list[Tensor([1, 0, 15, 2],"float32"),Tensor([1, 0, 15, 2],"float32"),], -1, )
paddle.concat(list[Tensor([1, 0, 15, 384],"float32"),Tensor([1, 0, 15, 384],"float32"),Tensor([1, 0, 15, 384],"float32"),Tensor([1, 0, 15, 384],"float32"),], -1, )
paddle.concat(list[Tensor([1, 0, 16, 2],"float32"),Tensor([1, 0, 16, 2],"float32"),], -1, )
paddle.concat(list[Tensor([1, 0, 16],"int64"),Tensor([1, 0, 16],"int64"),], 0, )
paddle.concat(list[Tensor([1, 0, 176],"float32"),], )
paddle.concat(list[Tensor([1, 0, 18, 18],"float32"),Tensor([1, 0, 18, 18],"float32"),], 1, )
paddle.concat(list[Tensor([1, 0, 18, 18],"float32"),Tensor([1, 0, 18, 18],"float32"),Tensor([1, 0, 18, 18],"float32"),Tensor([1, 0, 18, 18],"float32"),Tensor([1, 0, 18, 18],"float32"),Tensor([1, 0, 18, 18],"float32"),Tensor([1, 0, 18, 18],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 0, 18, 768],"float32"),Tensor([1, 0, 18, 768],"float32"),Tensor([1, 0, 18, 768],"float32"),Tensor([1, 0, 18, 768],"float32"),], -1, )
paddle.concat(list[Tensor([1, 0, 184],"float32"),], )
paddle.concat(list[Tensor([1, 0, 2, 8],"float32"),Tensor([1, 0, 1, 8],"float32"),], axis=2, )
paddle.concat(list[Tensor([1, 0, 2],"float32"),Tensor([1, 0, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 0, 2],"float32"),Tensor([1, 0, 2],"float32"),], axis=-2, )
paddle.concat(list[Tensor([1, 0, 2],"float32"),Tensor([1, 0, 2],"float32"),Tensor([1, 0, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 0, 2],"float32"),Tensor([1, 0, 2],"float32"),Tensor([1, 0, 2],"float32"),Tensor([1, 0, 2],"float32"),], 1, )
paddle.concat(list[Tensor([1, 0, 2],"float32"),Tensor([1, 0, 2],"float32"),Tensor([1, 0, 2],"float32"),Tensor([1, 0, 2],"float32"),Tensor([1, 0, 2],"float32"),], 1, )
paddle.concat(list[Tensor([1, 0, 20, 20],"float32"),Tensor([1, 0, 20, 20],"float32"),Tensor([1, 0, 20, 20],"float32"),Tensor([1, 0, 20, 20],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 0, 20, 20],"float32"),Tensor([1, 0, 20, 20],"float32"),Tensor([1, 0, 20, 20],"float32"),Tensor([1, 0, 20, 20],"float32"),Tensor([1, 0, 20, 20],"float32"),Tensor([1, 0, 20, 20],"float32"),Tensor([1, 0, 20, 20],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 0, 216, 2, 7],"float32"),], axis=-2, )
paddle.concat(list[Tensor([1, 0, 224, 224],"float32"),Tensor([1, 0, 224, 224],"float32"),], 0, )
paddle.concat(list[Tensor([1, 0, 24276, 1],"float32"),Tensor([1, 0, 24276, 1],"float32"),Tensor([1, 0, 24276, 1],"float32"),Tensor([1, 0, 24276, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 0, 256, 256],"float32"),], 0, )
paddle.concat(list[Tensor([1, 0, 256, 256],"float32"),Tensor([1, 0, 256, 256],"float32"),Tensor([1, 0, 256, 256],"float32"),Tensor([1, 0, 256, 256],"float32"),], 1, )
paddle.concat(list[Tensor([1, 0, 256],"float32"),], axis=0, )
paddle.concat(list[Tensor([1, 0, 256],"float32"),Tensor([1, 0, 256],"float32"),], 1, )
paddle.concat(list[Tensor([1, 0, 256],"float32"),Tensor([1, 0, 256],"float32"),Tensor([1, 0, 256],"float32"),Tensor([1, 0, 256],"float32"),], 1, )
paddle.concat(list[Tensor([1, 0, 256],"float32"),Tensor([1, 0, 256],"float32"),Tensor([1, 0, 256],"float32"),Tensor([1, 0, 256],"float32"),Tensor([1, 0, 256],"float32"),], 1, )
paddle.concat(list[Tensor([1, 0, 2704],"float32"),Tensor([1, 0, 676],"float32"),Tensor([1, 0, 169],"float32"),Tensor([1, 0, 49],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 0, 27648],"float32"),Tensor([1, 0, 6912],"float32"),Tensor([1, 0, 1728],"float32"),Tensor([1, 0, 432],"float32"),Tensor([1, 0, 108],"float32"),Tensor([1, 0, 30],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 0, 28800],"float32"),Tensor([1, 0, 7200],"float32"),Tensor([1, 0, 1800],"float32"),Tensor([1, 0, 450],"float32"),Tensor([1, 0, 117],"float32"),Tensor([1, 0, 35],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 0, 3],"float32"),Tensor([1, 0, 4],"float32"),], -1, )
paddle.concat(list[Tensor([1, 0, 3136],"float32"),Tensor([1, 0, 784],"float32"),Tensor([1, 0, 196],"float32"),Tensor([1, 0, 49],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 0, 32, 32],"float32"),Tensor([1, 0, 32, 32],"float32"),Tensor([1, 0, 32, 32],"float32"),Tensor([1, 0, 32, 32],"float32"),Tensor([1, 0, 32, 32],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 0, 32],"float32"),Tensor([1, 0, 32],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 0, 32],"float32"),Tensor([1, 0, 32],"float32"),Tensor([1, 0, 32],"float32"),Tensor([1, 0, 32],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 0, 336, 336],"float32"),Tensor([1, 0, 336, 336],"float32"),Tensor([1, 0, 336, 336],"float32"),Tensor([1, 0, 336, 336],"float32"),Tensor([1, 0, 336, 336],"float32"),Tensor([1, 0, 336, 336],"float32"),Tensor([1, 0, 336, 336],"float32"),Tensor([1, 0, 336, 336],"float32"),Tensor([1, 0, 336, 336],"float32"),Tensor([1, 0, 336, 336],"float32"),Tensor([1, 0, 336, 336],"float32"),Tensor([1, 0, 336, 336],"float32"),Tensor([1, 0, 336, 336],"float32"),Tensor([1, 0, 336, 336],"float32"),Tensor([1, 0, 336, 336],"float32"),Tensor([1, 0, 336, 336],"float32"),Tensor([1, 0, 336, 336],"float32"),Tensor([1, 0, 336, 336],"float32"),Tensor([1, 0, 336, 336],"float32"),Tensor([1, 0, 336, 336],"float32"),Tensor([1, 0, 336, 336],"float32"),Tensor([1, 0, 336, 336],"float32"),Tensor([1, 0, 336, 336],"float32"),Tensor([1, 0, 336, 336],"float32"),Tensor([1, 0, 336, 336],"float32"),Tensor([1, 0, 336, 336],"float32"),Tensor([1, 0, 336, 336],"float32"),Tensor([1, 0, 336, 336],"float32"),Tensor([1, 0, 336, 336],"float32"),Tensor([1, 0, 336, 336],"float32"),Tensor([1, 0, 336, 336],"float32"),Tensor([1, 0, 336, 336],"float32"),Tensor([1, 0, 336, 336],"float32"),Tensor([1, 0, 336, 336],"float32"),Tensor([1, 0, 336, 336],"float32"),Tensor([1, 0, 336, 336],"float32"),Tensor([1, 0, 336, 336],"float32"),Tensor([1, 0, 336, 336],"float32"),Tensor([1, 0, 336, 336],"float32"),Tensor([1, 0, 336, 336],"float32"),Tensor([1, 0, 336, 336],"float32"),Tensor([1, 0, 336, 336],"float32"),Tensor([1, 0, 336, 336],"float32"),Tensor([1, 0, 336, 336],"float32"),Tensor([1, 0, 336, 336],"float32"),Tensor([1, 0, 336, 336],"float32"),Tensor([1, 0, 336, 336],"float32"),Tensor([1, 0, 336, 336],"float32"),Tensor([1, 0, 336, 336],"float32"),Tensor([1, 0, 336, 336],"float32"),Tensor([1, 0, 336, 336],"float32"),Tensor([1, 0, 336, 336],"float32"),Tensor([1, 0, 336, 336],"float32"),Tensor([1, 0, 336, 336],"float32"),Tensor([1, 0, 336, 336],"float32"),Tensor([1, 0, 336, 336],"float32"),Tensor([1,  ...
paddle.concat(list[Tensor([1, 0, 4],"float32"),], axis=0, )
paddle.concat(list[Tensor([1, 0, 4],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 0, 4],"float32"),Tensor([1, 0, 4],"float32"),], 1, )
paddle.concat(list[Tensor([1, 0, 4],"float32"),Tensor([1, 0, 4],"float32"),], -1, )
paddle.concat(list[Tensor([1, 0, 4],"float32"),Tensor([1, 0, 4],"float32"),Tensor([1, 0, 4],"float32"),], 1, )
paddle.concat(list[Tensor([1, 0, 4],"float32"),Tensor([1, 0, 4],"float32"),Tensor([1, 0, 4],"float32"),Tensor([1, 0, 4],"float32"),Tensor([1, 0, 4],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 0, 4],"float32"),Tensor([1, 0, 4],"float32"),Tensor([1, 0, 4],"float32"),Tensor([1, 0, 4],"float32"),Tensor([1, 0, 4],"float32"),Tensor([1, 0, 4],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 0, 4800],"float32"),Tensor([1, 0, 1200],"float32"),Tensor([1, 0, 300],"float32"),Tensor([1, 0, 80],"float32"),Tensor([1, 0, 20],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 0, 5],"float32"),Tensor([1, 0, 5],"float32"),], )
paddle.concat(list[Tensor([1, 0, 62, 64],"float32"),Tensor([1, 0, 62, 64],"float32"),Tensor([1, 0, 62, 64],"float32"),Tensor([1, 0, 62, 64],"float32"),Tensor([1, 0, 62, 64],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 0, 64, 64],"float32"),Tensor([1, 0, 64, 64],"float32"),], 1, )
paddle.concat(list[Tensor([1, 0, 64],"float32"),Tensor([1, 0, 64],"float32"),Tensor([1, 0, 64],"float32"),Tensor([1, 0, 64],"float32"),Tensor([1, 0, 64],"float32"),Tensor([1, 0, 64],"float32"),Tensor([1, 0, 64],"float32"),Tensor([1, 0, 64],"float32"),Tensor([1, 0, 64],"float32"),Tensor([1, 0, 64],"float32"),Tensor([1, 0, 64],"float32"),Tensor([1, 0, 64],"float32"),Tensor([1, 0, 64],"float32"),], axis=0, )
paddle.concat(list[Tensor([1, 0, 640],"float32"),Tensor([1, 0, 640],"float32"),Tensor([1, 0, 640],"float32"),Tensor([1, 0, 640],"float32"),Tensor([1, 0, 640],"float32"),Tensor([1, 0, 640],"float32"),Tensor([1, 0, 640],"float32"),Tensor([1, 0, 640],"float32"),], 0, )
paddle.concat(list[Tensor([1, 0, 6408],"float32"),Tensor([1, 0, 1620],"float32"),Tensor([1, 0, 414],"float32"),Tensor([1, 0, 108],"float32"),Tensor([1, 0, 30],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 0],"bool"),Tensor([1, 0],"bool"),], axis=-1, )
paddle.concat(list[Tensor([1, 0],"float16"),], axis=0, name=None, )
paddle.concat(list[Tensor([1, 0],"float16"),], axis=1, name=None, )
paddle.concat(list[Tensor([1, 0],"float32"),], axis=0, name=None, )
paddle.concat(list[Tensor([1, 0],"float32"),], axis=1, name=None, )
paddle.concat(list[Tensor([1, 0],"float32"),Tensor([1, 0],"float32"),], 1, )
paddle.concat(list[Tensor([1, 0],"float32"),Tensor([1, 0],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 0],"float32"),Tensor([1, 0],"float32"),], axis=-2, )
paddle.concat(list[Tensor([1, 0],"float32"),Tensor([1, 0],"float32"),Tensor([1, 0],"float32"),Tensor([1, 0],"float32"),], )
paddle.concat(list[Tensor([1, 0],"float32"),Tensor([1, 0],"float32"),Tensor([1, 0],"float32"),Tensor([1, 0],"float32"),], 1, )
paddle.concat(list[Tensor([1, 0],"float32"),Tensor([1, 0],"float32"),Tensor([1, 0],"float32"),Tensor([1, 0],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 0],"float32"),Tensor([1, 0],"float32"),Tensor([1, 0],"float32"),Tensor([1, 0],"float32"),Tensor([1, 0],"float32"),], 1, )
paddle.concat(list[Tensor([1, 0],"float32"),Tensor([1, 0],"float32"),Tensor([1, 0],"float32"),Tensor([1, 0],"float32"),Tensor([1, 0],"float32"),Tensor([1, 0],"float32"),Tensor([1, 0],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 0],"float32"),Tensor([1, 0],"float32"),Tensor([1, 0],"float32"),Tensor([1, 0],"float32"),Tensor([1, 0],"float32"),Tensor([1, 0],"float32"),Tensor([1, 0],"float32"),Tensor([1, 0],"float32"),], )
paddle.concat(list[Tensor([1, 0],"float32"),Tensor([2, 0],"float32"),Tensor([2, 0],"float32"),Tensor([5, 0],"float32"),Tensor([8, 0],"float32"),Tensor([22, 0],"float32"),Tensor([5, 0],"float32"),Tensor([5, 0],"float32"),Tensor([18, 0],"float32"),Tensor([3, 0],"float32"),Tensor([9, 0],"float32"),Tensor([4, 0],"float32"),Tensor([1, 0],"float32"),Tensor([2, 0],"float32"),Tensor([11, 0],"float32"),Tensor([3, 0],"float32"),], )
paddle.concat(list[Tensor([1, 0],"float32"),Tensor([4, 0],"float32"),], axis=0, )
paddle.concat(list[Tensor([1, 0],"float32"),Tensor([7, 0],"float32"),], axis=0, )
paddle.concat(list[Tensor([1, 0],"float64"),Tensor([1, 0],"float64"),], axis=0, name=None, )
paddle.concat(list[Tensor([1, 0],"float64"),Tensor([1, 0],"float64"),Tensor([1, 0],"float64"),], axis=0, name=None, )
paddle.concat(list[Tensor([1, 0],"float64"),Tensor([1, 0],"float64"),Tensor([1, 0],"float64"),], axis=1, name=None, )
paddle.concat(list[Tensor([1, 0],"int32"),], )
paddle.concat(list[Tensor([1, 0],"int32"),], axis=0, )
paddle.concat(list[Tensor([1, 0],"int32"),Tensor([1, 0],"int32"),], )
paddle.concat(list[Tensor([1, 0],"int32"),Tensor([1, 0],"int32"),Tensor([1, 0],"int32"),Tensor([1, 0],"int32"),], )
paddle.concat(list[Tensor([1, 0],"int32"),Tensor([1, 0],"int32"),Tensor([1, 0],"int32"),Tensor([1, 0],"int32"),Tensor([1, 0],"int32"),Tensor([1, 0],"int32"),Tensor([1, 0],"int32"),Tensor([1, 0],"int32"),], )
paddle.concat(list[Tensor([1, 0],"int32"),Tensor([2, 0],"int32"),Tensor([2, 0],"int32"),Tensor([5, 0],"int32"),Tensor([8, 0],"int32"),Tensor([22, 0],"int32"),Tensor([5, 0],"int32"),Tensor([5, 0],"int32"),Tensor([18, 0],"int32"),Tensor([3, 0],"int32"),Tensor([9, 0],"int32"),Tensor([4, 0],"int32"),Tensor([1, 0],"int32"),Tensor([2, 0],"int32"),Tensor([11, 0],"int32"),Tensor([3, 0],"int32"),], )
paddle.concat(list[Tensor([1, 0],"int32"),Tensor([3, 0],"int32"),], )
paddle.concat(list[Tensor([1, 0],"int64"),], )
paddle.concat(list[Tensor([1, 0],"int64"),Tensor([1, 0],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 1, 0, 1],"float32"),Tensor([1, 1, 0, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 1, 0, 1],"float32"),Tensor([1, 1, 0, 1],"float32"),Tensor([1, 1, 0, 1],"float32"),Tensor([1, 1, 0, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 1, 0, 1],"float64"),], axis=0, name=None, )
paddle.concat(list[Tensor([1, 1, 0, 1],"float64"),], axis=1, name=None, )
paddle.concat(list[Tensor([1, 1, 0, 1],"float64"),], axis=2, name=None, )
paddle.concat(list[Tensor([1, 1, 0, 1],"float64"),Tensor([1, 1, 0, 1],"float64"),Tensor([1, 1, 0, 1],"float64"),], axis=0, name=None, )
paddle.concat(list[Tensor([1, 1, 0, 1],"float64"),Tensor([1, 1, 0, 1],"float64"),Tensor([1, 1, 0, 1],"float64"),], axis=1, name=None, )
paddle.concat(list[Tensor([1, 1, 0, 1],"float64"),Tensor([1, 1, 0, 1],"float64"),Tensor([1, 1, 0, 1],"float64"),], axis=2, name=None, )
paddle.concat(list[Tensor([1, 1, 0, 136],"float32"),Tensor([1, 1, 0, 136],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 1, 0, 152],"float32"),Tensor([1, 1, 0, 152],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 1, 0, 16],"float32"),Tensor([1, 1, 0, 16],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 1, 0, 176, 176],"float32"),Tensor([6, 1, 0, 176, 176],"float32"),], )
paddle.concat(list[Tensor([1, 1, 0, 184, 184],"float32"),Tensor([6, 1, 0, 184, 184],"float32"),], )
paddle.concat(list[Tensor([1, 1, 0, 2],"float32"),], )
paddle.concat(list[Tensor([1, 1, 0, 2],"float32"),Tensor([6, 1, 0, 2],"float32"),], )
paddle.concat(list[Tensor([1, 1, 0, 4],"float32"),Tensor([6, 1, 0, 4],"float32"),], )
paddle.concat(list[Tensor([1, 1, 0],"float16"),], axis=2, name=None, )
paddle.concat(list[Tensor([1, 1, 0],"float32"),], axis=2, name=None, )
paddle.concat(list[Tensor([1, 1, 0],"float32"),Tensor([1, 1, 0],"float32"),], -1, )
paddle.concat(list[Tensor([1, 1, 0],"float32"),Tensor([1, 1, 0],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 1, 0],"float32"),Tensor([1, 1, 0],"float32"),], axis=-2, )
paddle.concat(list[Tensor([1, 1, 0],"float32"),Tensor([1, 1, 0],"float32"),Tensor([1, 1, 0],"float32"),Tensor([1, 1, 0],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 1, 0],"float32"),Tensor([1, 1, 0],"float32"),Tensor([1, 1, 0],"float32"),Tensor([1, 1, 0],"float32"),Tensor([1, 1, 0],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 1, 0],"float32"),Tensor([1, 1, 0],"float32"),Tensor([1, 1, 0],"float32"),Tensor([1, 1, 0],"float32"),Tensor([1, 1, 0],"float32"),Tensor([1, 1, 0],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 1, 0],"float32"),Tensor([1, 225, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 1, 0],"float32"),Tensor([1, 4, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 1, 0],"float64"),], axis=0, name=None, )
paddle.concat(list[Tensor([1, 1, 0],"float64"),], axis=1, name=None, )
paddle.concat(list[Tensor([1, 1, 0],"float64"),Tensor([1, 1, 0],"float64"),Tensor([1, 1, 0],"float64"),], axis=0, name=None, )
paddle.concat(list[Tensor([1, 1, 0],"float64"),Tensor([1, 1, 0],"float64"),Tensor([1, 1, 0],"float64"),], axis=1, name=None, )
paddle.concat(list[Tensor([1, 1, 0],"float64"),Tensor([1, 1, 0],"float64"),Tensor([1, 1, 0],"float64"),], axis=2, name=None, )
paddle.concat(list[Tensor([1, 1, 1, 0],"float32"),Tensor([1, 1, 1, 0],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 1, 1, 0],"float64"),], axis=0, name=None, )
paddle.concat(list[Tensor([1, 1, 1, 0],"float64"),], axis=1, name=None, )
paddle.concat(list[Tensor([1, 1, 1, 0],"float64"),], axis=2, name=None, )
paddle.concat(list[Tensor([1, 1, 1, 0],"float64"),Tensor([1, 1, 1, 0],"float64"),Tensor([1, 1, 1, 0],"float64"),], axis=0, name=None, )
paddle.concat(list[Tensor([1, 1, 1, 0],"float64"),Tensor([1, 1, 1, 0],"float64"),Tensor([1, 1, 1, 0],"float64"),], axis=1, name=None, )
paddle.concat(list[Tensor([1, 1, 1, 0],"float64"),Tensor([1, 1, 1, 0],"float64"),Tensor([1, 1, 1, 0],"float64"),], axis=2, name=None, )
paddle.concat(list[Tensor([1, 1, 100, 0, 176],"float32"),Tensor([6, 1, 100, 0, 176],"float32"),], )
paddle.concat(list[Tensor([1, 1, 100, 0, 184],"float32"),Tensor([6, 1, 100, 0, 184],"float32"),], )
paddle.concat(list[Tensor([1, 1, 100, 0],"float32"),Tensor([1, 1, 100, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 1, 100, 0],"float32"),Tensor([6, 1, 100, 0],"float32"),], )
paddle.concat(list[Tensor([1, 1, 100, 176, 0],"float32"),Tensor([6, 1, 100, 176, 0],"float32"),], )
paddle.concat(list[Tensor([1, 1, 100, 184, 0],"float32"),Tensor([6, 1, 100, 184, 0],"float32"),], )
paddle.concat(list[Tensor([1, 1, 10285, 0],"float32"),Tensor([1, 1, 10285, 0],"float32"),Tensor([1, 1, 10285, 0],"float32"),Tensor([1, 1, 10285, 0],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 1, 12544, 0],"float32"),], )
paddle.concat(list[Tensor([1, 1, 24276, 0],"float32"),Tensor([1, 1, 24276, 0],"float32"),Tensor([1, 1, 24276, 0],"float32"),Tensor([1, 1, 24276, 0],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 10, 0],"float32"),Tensor([1, 10, 0],"float32"),], )
paddle.concat(list[Tensor([1, 100, 0],"float32"),Tensor([1, 300, 0],"float32"),], 1, )
paddle.concat(list[Tensor([1, 1024, 0, 18],"float32"),Tensor([1, 768, 0, 18],"float32"),Tensor([1, 768, 0, 18],"float32"),Tensor([1, 768, 0, 18],"float32"),Tensor([1, 768, 0, 18],"float32"),Tensor([1, 768, 0, 18],"float32"),Tensor([1, 768, 0, 18],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 1024, 0, 20],"float32"),Tensor([1, 768, 0, 20],"float32"),Tensor([1, 768, 0, 20],"float32"),Tensor([1, 768, 0, 20],"float32"),Tensor([1, 768, 0, 20],"float32"),Tensor([1, 768, 0, 20],"float32"),Tensor([1, 768, 0, 20],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 1024, 0],"float32"),Tensor([1, 4096, 0],"float32"),Tensor([1, 16384, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 1024, 18, 0],"float32"),Tensor([1, 768, 18, 0],"float32"),Tensor([1, 768, 18, 0],"float32"),Tensor([1, 768, 18, 0],"float32"),Tensor([1, 768, 18, 0],"float32"),Tensor([1, 768, 18, 0],"float32"),Tensor([1, 768, 18, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 1024, 20, 0],"float32"),Tensor([1, 768, 20, 0],"float32"),Tensor([1, 768, 20, 0],"float32"),Tensor([1, 768, 20, 0],"float32"),Tensor([1, 768, 20, 0],"float32"),Tensor([1, 768, 20, 0],"float32"),Tensor([1, 768, 20, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 103680, 0],"float32"),Tensor([1, 25920, 0],"float32"),Tensor([1, 6480, 0],"float32"),Tensor([1, 1620, 0],"float32"),Tensor([1, 420, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 107, 0],"float16"),Tensor([1, 107, 0],"float16"),], axis=2, )
paddle.concat(list[Tensor([1, 109, 0],"float16"),Tensor([1, 109, 0],"float16"),], axis=2, )
paddle.concat(list[Tensor([1, 11, 0],"float32"),], axis=0, )
paddle.concat(list[Tensor([1, 1100, 0],"float32"),Tensor([1, 1100, 0],"float32"),Tensor([1, 1100, 0],"float32"),Tensor([1, 1100, 0],"float32"),], axis=2, )
paddle.concat(list[Tensor([1, 128, 0, 256],"float32"),Tensor([1, 128, 0, 256],"float32"),Tensor([1, 128, 0, 256],"float32"),Tensor([1, 128, 0, 256],"float32"),], 1, )
paddle.concat(list[Tensor([1, 128, 0, 32],"float32"),Tensor([1, 32, 0, 32],"float32"),Tensor([1, 32, 0, 32],"float32"),Tensor([1, 32, 0, 32],"float32"),Tensor([1, 32, 0, 32],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 128, 0, 64],"float32"),Tensor([1, 128, 0, 64],"float32"),], 1, )
paddle.concat(list[Tensor([1, 128, 0],"int64"),Tensor([1, 128, 0],"int64"),Tensor([1, 128, 0],"int64"),Tensor([1, 128, 0],"int64"),], axis=0, )
paddle.concat(list[Tensor([1, 128, 256, 0],"float32"),Tensor([1, 128, 256, 0],"float32"),Tensor([1, 128, 256, 0],"float32"),Tensor([1, 128, 256, 0],"float32"),], 1, )
paddle.concat(list[Tensor([1, 128, 32, 0],"float32"),Tensor([1, 32, 32, 0],"float32"),Tensor([1, 32, 32, 0],"float32"),Tensor([1, 32, 32, 0],"float32"),Tensor([1, 32, 32, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 128, 64, 0],"float32"),Tensor([1, 128, 64, 0],"float32"),], 1, )
paddle.concat(list[Tensor([1, 136, 0],"float32"),Tensor([1, 136, 0],"float32"),], )
paddle.concat(list[Tensor([1, 15, 0, 2],"float32"),Tensor([1, 15, 0, 2],"float32"),], -1, )
paddle.concat(list[Tensor([1, 15, 15, 0],"float32"),Tensor([1, 15, 15, 0],"float32"),], -1, )
paddle.concat(list[Tensor([1, 16, 0, 14, 192],"float16"),Tensor([1, 16, 0, 14, 192],"float16"),Tensor([1, 16, 0, 14, 192],"float16"),Tensor([1, 16, 0, 14, 192],"float16"),], -1, )
paddle.concat(list[Tensor([1, 16, 0, 14, 192],"float32"),Tensor([1, 16, 0, 14, 192],"float32"),Tensor([1, 16, 0, 14, 192],"float32"),Tensor([1, 16, 0, 14, 192],"float32"),], -1, )
paddle.concat(list[Tensor([1, 16, 0, 2],"float32"),Tensor([1, 16, 0, 2],"float32"),], -1, )
paddle.concat(list[Tensor([1, 16, 0],"float32"),Tensor([1, 16, 0],"float32"),Tensor([1, 16, 0],"float32"),Tensor([1, 16, 0],"float32"),Tensor([1, 16, 0],"float32"),Tensor([1, 16, 0],"float32"),Tensor([1, 16, 0],"float32"),Tensor([1, 16, 0],"float32"),Tensor([1, 16, 0],"float32"),Tensor([1, 16, 0],"float32"),Tensor([1, 16, 0],"float32"),Tensor([1, 16, 0],"float32"),Tensor([1, 16, 0],"float32"),], axis=0, )
paddle.concat(list[Tensor([1, 16, 0],"int64"),Tensor([1, 16, 0],"int64"),], 0, )
paddle.concat(list[Tensor([1, 16, 14, 0, 192],"float16"),Tensor([1, 16, 14, 0, 192],"float16"),Tensor([1, 16, 14, 0, 192],"float16"),Tensor([1, 16, 14, 0, 192],"float16"),], -1, )
paddle.concat(list[Tensor([1, 16, 14, 0, 192],"float32"),Tensor([1, 16, 14, 0, 192],"float32"),Tensor([1, 16, 14, 0, 192],"float32"),Tensor([1, 16, 14, 0, 192],"float32"),], -1, )
paddle.concat(list[Tensor([1, 16, 14, 14, 0],"float16"),Tensor([1, 16, 14, 14, 0],"float16"),Tensor([1, 16, 14, 14, 0],"float16"),Tensor([1, 16, 14, 14, 0],"float16"),], -1, )
paddle.concat(list[Tensor([1, 16, 14, 14, 0],"float32"),Tensor([1, 16, 14, 14, 0],"float32"),Tensor([1, 16, 14, 14, 0],"float32"),Tensor([1, 16, 14, 14, 0],"float32"),], -1, )
paddle.concat(list[Tensor([1, 16, 16, 0],"float32"),Tensor([1, 16, 16, 0],"float32"),], -1, )
paddle.concat(list[Tensor([1, 160, 0, 18],"float32"),Tensor([1, 160, 0, 18],"float32"),], 1, )
paddle.concat(list[Tensor([1, 160, 18, 0],"float32"),Tensor([1, 160, 18, 0],"float32"),], 1, )
paddle.concat(list[Tensor([1, 176, 0],"float32"),], )
paddle.concat(list[Tensor([1, 18, 0],"float32"),Tensor([1, 18, 0],"float32"),Tensor([1, 18, 0],"float32"),Tensor([1, 18, 0],"float32"),], axis=2, )
paddle.concat(list[Tensor([1, 184, 0],"float32"),], )
paddle.concat(list[Tensor([1, 188, 0, 1, 2, 7],"float32"),Tensor([1, 188, 0, 1, 2, 7],"float32"),Tensor([1, 188, 0, 1, 2, 7],"float32"),], axis=-3, )
paddle.concat(list[Tensor([1, 188, 0, 2, 7],"float32"),Tensor([1, 188, 0, 2, 7],"float32"),Tensor([1, 188, 0, 2, 7],"float32"),], axis=-2, )
paddle.concat(list[Tensor([1, 188, 0, 2],"float32"),Tensor([1, 188, 0, 2],"float32"),Tensor([1, 188, 0, 2],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 188, 0, 2],"int32"),Tensor([1, 188, 0, 2],"int32"),Tensor([1, 188, 0, 2],"int32"),], axis=-1, )
paddle.concat(list[Tensor([1, 188, 140, 0, 2, 7],"float32"),Tensor([1, 188, 140, 0, 2, 7],"float32"),Tensor([1, 188, 140, 0, 2, 7],"float32"),], axis=-3, )
paddle.concat(list[Tensor([1, 188, 140, 0, 7],"float32"),Tensor([1, 188, 140, 0, 7],"float32"),Tensor([1, 188, 140, 0, 7],"float32"),], axis=-2, )
paddle.concat(list[Tensor([1, 188, 140, 0],"float32"),Tensor([1, 188, 140, 0],"float32"),Tensor([1, 188, 140, 0],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 188, 140, 0],"int32"),Tensor([1, 188, 140, 0],"int32"),Tensor([1, 188, 140, 0],"int32"),], axis=-1, )
paddle.concat(list[Tensor([1, 188, 140, 1, 0, 7],"float32"),Tensor([1, 188, 140, 1, 0, 7],"float32"),Tensor([1, 188, 140, 1, 0, 7],"float32"),], axis=-3, )
paddle.concat(list[Tensor([1, 188, 140, 1, 2, 0],"float32"),Tensor([1, 188, 140, 1, 2, 0],"float32"),Tensor([1, 188, 140, 1, 2, 0],"float32"),], axis=-3, )
paddle.concat(list[Tensor([1, 188, 140, 2, 0],"float32"),Tensor([1, 188, 140, 2, 0],"float32"),Tensor([1, 188, 140, 2, 0],"float32"),], axis=-2, )
paddle.concat(list[Tensor([1, 192, 0, 20],"float32"),Tensor([1, 192, 0, 20],"float32"),Tensor([1, 192, 0, 20],"float32"),Tensor([1, 192, 0, 20],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 192, 20, 0],"float32"),Tensor([1, 192, 20, 0],"float32"),Tensor([1, 192, 20, 0],"float32"),Tensor([1, 192, 20, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 2, 0],"float64"),Tensor([1, 2, 0],"float64"),], axis=2, name=None, )
paddle.concat(list[Tensor([1, 20, 0, 384],"float32"),Tensor([1, 20, 0, 384],"float32"),Tensor([1, 20, 0, 384],"float32"),Tensor([1, 20, 0, 384],"float32"),], -1, )
paddle.concat(list[Tensor([1, 20, 15, 0],"float32"),Tensor([1, 20, 15, 0],"float32"),Tensor([1, 20, 15, 0],"float32"),Tensor([1, 20, 15, 0],"float32"),], -1, )
paddle.concat(list[Tensor([1, 21504, 0],"float32"),Tensor([1, 21504, 0],"float32"),Tensor([1, 21504, 0],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 24, 0, 768],"float32"),Tensor([1, 24, 0, 768],"float32"),Tensor([1, 24, 0, 768],"float32"),Tensor([1, 24, 0, 768],"float32"),], -1, )
paddle.concat(list[Tensor([1, 24, 18, 0],"float32"),Tensor([1, 24, 18, 0],"float32"),Tensor([1, 24, 18, 0],"float32"),Tensor([1, 24, 18, 0],"float32"),], -1, )
paddle.concat(list[Tensor([1, 248, 0, 2, 7],"float32"),], axis=-2, )
paddle.concat(list[Tensor([1, 248, 216, 0, 7],"float32"),], axis=-2, )
paddle.concat(list[Tensor([1, 248, 216, 2, 0],"float32"),], axis=-2, )
paddle.concat(list[Tensor([1, 248832, 0],"float32"),Tensor([1, 62208, 0],"float32"),Tensor([1, 15552, 0],"float32"),Tensor([1, 3888, 0],"float32"),Tensor([1, 972, 0],"float32"),Tensor([1, 270, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 256, 0, 128],"float32"),Tensor([1, 256, 0, 128],"float32"),Tensor([1, 256, 0, 128],"float32"),Tensor([1, 256, 0, 128],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 256, 0, 64],"float32"),Tensor([1, 256, 0, 64],"float32"),Tensor([1, 256, 0, 64],"float32"),Tensor([1, 256, 0, 64],"float32"),Tensor([1, 256, 0, 64],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 256, 124, 0],"float32"),Tensor([1, 256, 124, 0],"float32"),Tensor([1, 256, 124, 0],"float32"),Tensor([1, 256, 124, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 256, 62, 0],"float32"),Tensor([1, 256, 62, 0],"float32"),Tensor([1, 256, 62, 0],"float32"),Tensor([1, 256, 62, 0],"float32"),Tensor([1, 256, 62, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 2704, 0],"float32"),Tensor([1, 676, 0],"float32"),Tensor([1, 169, 0],"float32"),Tensor([1, 49, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 27648, 0],"float32"),Tensor([1, 6912, 0],"float32"),Tensor([1, 1728, 0],"float32"),Tensor([1, 432, 0],"float32"),Tensor([1, 108, 0],"float32"),], 1, )
paddle.concat(list[Tensor([1, 3, 0, 224],"float32"),Tensor([1, 3, 0, 224],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 0, 256],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 0, 336],"float32"),Tensor([1, 3, 0, 336],"float32"),Tensor([1, 3, 0, 336],"float32"),Tensor([1, 3, 0, 336],"float32"),Tensor([1, 3, 0, 336],"float32"),Tensor([1, 3, 0, 336],"float32"),Tensor([1, 3, 0, 336],"float32"),Tensor([1, 3, 0, 336],"float32"),Tensor([1, 3, 0, 336],"float32"),Tensor([1, 3, 0, 336],"float32"),Tensor([1, 3, 0, 336],"float32"),Tensor([1, 3, 0, 336],"float32"),Tensor([1, 3, 0, 336],"float32"),Tensor([1, 3, 0, 336],"float32"),Tensor([1, 3, 0, 336],"float32"),Tensor([1, 3, 0, 336],"float32"),Tensor([1, 3, 0, 336],"float32"),Tensor([1, 3, 0, 336],"float32"),Tensor([1, 3, 0, 336],"float32"),Tensor([1, 3, 0, 336],"float32"),Tensor([1, 3, 0, 336],"float32"),Tensor([1, 3, 0, 336],"float32"),Tensor([1, 3, 0, 336],"float32"),Tensor([1, 3, 0, 336],"float32"),Tensor([1, 3, 0, 336],"float32"),Tensor([1, 3, 0, 336],"float32"),Tensor([1, 3, 0, 336],"float32"),Tensor([1, 3, 0, 336],"float32"),Tensor([1, 3, 0, 336],"float32"),Tensor([1, 3, 0, 336],"float32"),Tensor([1, 3, 0, 336],"float32"),Tensor([1, 3, 0, 336],"float32"),Tensor([1, 3, 0, 336],"float32"),Tensor([1, 3, 0, 336],"float32"),Tensor([1, 3, 0, 336],"float32"),Tensor([1, 3, 0, 336],"float32"),Tensor([1, 3, 0, 336],"float32"),Tensor([1, 3, 0, 336],"float32"),Tensor([1, 3, 0, 336],"float32"),Tensor([1, 3, 0, 336],"float32"),Tensor([1, 3, 0, 336],"float32"),Tensor([1, 3, 0, 336],"float32"),Tensor([1, 3, 0, 336],"float32"),Tensor([1, 3, 0, 336],"float32"),Tensor([1, 3, 0, 336],"float32"),Tensor([1, 3, 0, 336],"float32"),Tensor([1, 3, 0, 336],"float32"),Tensor([1, 3, 0, 336],"float32"),Tensor([1, 3, 0, 336],"float32"),Tensor([1, 3, 0, 336],"float32"),Tensor([1, 3, 0, 336],"float32"),Tensor([1, 3, 0, 336],"float32"),Tensor([1, 3, 0, 336],"float32"),Tensor([1, 3, 0, 336],"float32"),Tensor([1, 3, 0, 336],"float32"),Tensor([1, 3, 0, 336],"float32"),Tensor([1, 3, 0, 336],"float32"),Tensor([1, 3, 0, 336],"float32"),Tensor([1, 3, 0, 336],"float32"),Tensor([1, 3, 0, 336],"f ...
paddle.concat(list[Tensor([1, 3, 0],"float32"),Tensor([1, 3, 0],"float32"),Tensor([1, 3, 0],"float32"),Tensor([1, 3, 0],"float32"),Tensor([1, 3, 0],"float32"),Tensor([1, 3, 0],"float32"),Tensor([1, 3, 0],"float32"),Tensor([1, 3, 0],"float32"),Tensor([1, 3, 0],"float32"),Tensor([1, 3, 0],"float32"),Tensor([1, 3, 0],"float32"),Tensor([1, 3, 0],"float32"),Tensor([1, 3, 0],"float32"),], axis=0, )
paddle.concat(list[Tensor([1, 3, 224, 0],"float32"),Tensor([1, 3, 224, 0],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 256, 0],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 336, 0],"float32"),Tensor([1, 3, 336, 0],"float32"),Tensor([1, 3, 336, 0],"float32"),Tensor([1, 3, 336, 0],"float32"),Tensor([1, 3, 336, 0],"float32"),Tensor([1, 3, 336, 0],"float32"),Tensor([1, 3, 336, 0],"float32"),Tensor([1, 3, 336, 0],"float32"),Tensor([1, 3, 336, 0],"float32"),Tensor([1, 3, 336, 0],"float32"),Tensor([1, 3, 336, 0],"float32"),Tensor([1, 3, 336, 0],"float32"),Tensor([1, 3, 336, 0],"float32"),Tensor([1, 3, 336, 0],"float32"),Tensor([1, 3, 336, 0],"float32"),Tensor([1, 3, 336, 0],"float32"),Tensor([1, 3, 336, 0],"float32"),Tensor([1, 3, 336, 0],"float32"),Tensor([1, 3, 336, 0],"float32"),Tensor([1, 3, 336, 0],"float32"),Tensor([1, 3, 336, 0],"float32"),Tensor([1, 3, 336, 0],"float32"),Tensor([1, 3, 336, 0],"float32"),Tensor([1, 3, 336, 0],"float32"),Tensor([1, 3, 336, 0],"float32"),Tensor([1, 3, 336, 0],"float32"),Tensor([1, 3, 336, 0],"float32"),Tensor([1, 3, 336, 0],"float32"),Tensor([1, 3, 336, 0],"float32"),Tensor([1, 3, 336, 0],"float32"),Tensor([1, 3, 336, 0],"float32"),Tensor([1, 3, 336, 0],"float32"),Tensor([1, 3, 336, 0],"float32"),Tensor([1, 3, 336, 0],"float32"),Tensor([1, 3, 336, 0],"float32"),Tensor([1, 3, 336, 0],"float32"),Tensor([1, 3, 336, 0],"float32"),Tensor([1, 3, 336, 0],"float32"),Tensor([1, 3, 336, 0],"float32"),Tensor([1, 3, 336, 0],"float32"),Tensor([1, 3, 336, 0],"float32"),Tensor([1, 3, 336, 0],"float32"),Tensor([1, 3, 336, 0],"float32"),Tensor([1, 3, 336, 0],"float32"),Tensor([1, 3, 336, 0],"float32"),Tensor([1, 3, 336, 0],"float32"),Tensor([1, 3, 336, 0],"float32"),Tensor([1, 3, 336, 0],"float32"),Tensor([1, 3, 336, 0],"float32"),Tensor([1, 3, 336, 0],"float32"),Tensor([1, 3, 336, 0],"float32"),Tensor([1, 3, 336, 0],"float32"),Tensor([1, 3, 336, 0],"float32"),Tensor([1, 3, 336, 0],"float32"),Tensor([1, 3, 336, 0],"float32"),Tensor([1, 3, 336, 0],"float32"),Tensor([1, 3, 336, 0],"float32"),Tensor([1, 3, 336, 0],"float32"),Tensor([1, 3, 336, 0],"float32"),Tensor([1, 3, 336, 0],"f ...
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1,  ...
paddle.concat(list[Tensor([1, 3600, 0],"float32"),Tensor([1, 900, 0],"float32"),Tensor([1, 225, 0],"float32"),], 1, )
paddle.concat(list[Tensor([1, 36000, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 4, 0, 8],"float32"),Tensor([1, 4, 0, 8],"float32"),], axis=2, )
paddle.concat(list[Tensor([1, 4, 0],"float32"),Tensor([1, 4, 0],"float32"),Tensor([1, 4, 0],"float32"),], 0, )
paddle.concat(list[Tensor([1, 4, 1, 0],"float32"),Tensor([1, 4, 1, 0],"float32"),], axis=2, )
paddle.concat(list[Tensor([1, 4, 2, 0],"float32"),Tensor([1, 4, 1, 0],"float32"),], axis=2, )
paddle.concat(list[Tensor([1, 4096, 0],"float32"),Tensor([1, 1024, 0],"float32"),Tensor([1, 256, 0],"float32"),], 1, )
paddle.concat(list[Tensor([1, 4800, 0],"float32"),Tensor([1, 1200, 0],"float32"),Tensor([1, 300, 0],"float32"),Tensor([1, 80, 0],"float32"),], 1, )
paddle.concat(list[Tensor([1, 5, 0],"float64"),Tensor([1, 5, 0],"float64"),Tensor([1, 5, 0],"float64"),], axis=2, name=None, )
paddle.concat(list[Tensor([1, 500, 0],"int64"),Tensor([1, 500, 0],"int64"),Tensor([1, 500, 0],"int64"),Tensor([1, 500, 0],"int64"),Tensor([1, 500, 0],"int64"),Tensor([1, 500, 0],"int64"),Tensor([1, 500, 0],"int64"),Tensor([1, 500, 0],"int64"),Tensor([1, 500, 0],"int64"),Tensor([1, 500, 0],"int64"),Tensor([1, 500, 0],"int64"),Tensor([1, 500, 0],"int64"),Tensor([1, 500, 0],"int64"),Tensor([1, 500, 0],"int64"),Tensor([1, 500, 0],"int64"),Tensor([1, 500, 0],"int64"),Tensor([1, 500, 0],"int64"),Tensor([1, 500, 0],"int64"),Tensor([1, 500, 0],"int64"),Tensor([1, 500, 0],"int64"),], axis=0, )
paddle.concat(list[Tensor([1, 52, 0, 8],"float32"),Tensor([1, 52, 0, 8],"float32"),], axis=0, )
paddle.concat(list[Tensor([1, 52, 14, 0],"float32"),Tensor([1, 52, 14, 0],"float32"),], axis=0, )
paddle.concat(list[Tensor([1, 640, 0],"float32"),Tensor([1, 640, 0],"float32"),Tensor([1, 640, 0],"float32"),Tensor([1, 640, 0],"float32"),Tensor([1, 640, 0],"float32"),Tensor([1, 640, 0],"float32"),Tensor([1, 640, 0],"float32"),Tensor([1, 640, 0],"float32"),], 0, )
paddle.concat(list[Tensor([10, 0, 14],"int32"),Tensor([128, 0, 14],"int32"),Tensor([77, 0, 14],"int32"),Tensor([128, 0, 14],"int32"),], axis=0, )
paddle.concat(list[Tensor([10, 0],"float32"),Tensor([10, 0],"float32"),Tensor([10, 0],"float32"),Tensor([10, 0],"float32"),Tensor([10, 0],"float32"),Tensor([10, 0],"float32"),Tensor([10, 0],"float32"),], axis=-1, )
paddle.concat(list[Tensor([10, 14, 0],"int32"),Tensor([128, 14, 0],"int32"),Tensor([77, 14, 0],"int32"),Tensor([128, 14, 0],"int32"),], axis=0, )
paddle.concat(list[Tensor([100, 0],"float32"),Tensor([100, 0],"float32"),Tensor([100, 0],"float32"),Tensor([100, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([100, 0],"float32"),Tensor([400, 0],"float32"),Tensor([1600, 0],"float32"),], )
paddle.concat(list[Tensor([1000, 0],"float32"),Tensor([517, 0],"float32"),Tensor([469, 0],"float32"),Tensor([636, 0],"float32"),Tensor([221, 0],"float32"),], )
paddle.concat(list[Tensor([1000, 0],"float32"),Tensor([632, 0],"float32"),Tensor([633, 0],"float32"),Tensor([326, 0],"float32"),Tensor([236, 0],"float32"),], )
paddle.concat(list[Tensor([101376, 0],"float32"),Tensor([25344, 0],"float32"),Tensor([6336, 0],"float32"),Tensor([1584, 0],"float32"),Tensor([396, 0],"float32"),], axis=0, )
paddle.concat(list[Tensor([101376, 0],"int32"),Tensor([25344, 0],"int32"),Tensor([6336, 0],"int32"),Tensor([1584, 0],"int32"),Tensor([396, 0],"int32"),], axis=0, )
paddle.concat(list[Tensor([10240, 0],"float32"),Tensor([10240, 0],"float32"),Tensor([10240, 0],"float32"),], -1, )
paddle.concat(list[Tensor([10240, 0],"float32"),Tensor([10240, 0],"float32"),Tensor([10240, 0],"float32"),Tensor([10240, 0],"float32"),Tensor([10240, 0],"float32"),Tensor([10240, 0],"float32"),Tensor([10240, 0],"float32"),Tensor([10240, 0],"float32"),Tensor([10240, 0],"float32"),Tensor([10240, 0],"float32"),Tensor([10240, 0],"float32"),Tensor([10240, 0],"float32"),Tensor([10240, 0],"float32"),Tensor([10240, 0],"float32"),Tensor([10240, 0],"float32"),Tensor([10240, 0],"float32"),Tensor([10240, 0],"float32"),Tensor([10240, 0],"float32"),Tensor([10240, 0],"float32"),Tensor([10240, 0],"float32"),Tensor([10240, 0],"float32"),Tensor([10240, 0],"float32"),Tensor([10240, 0],"float32"),Tensor([10240, 0],"float32"),Tensor([10240, 0],"float32"),Tensor([10240, 0],"float32"),Tensor([10240, 0],"float32"),Tensor([10240, 0],"float32"),Tensor([10240, 0],"float32"),Tensor([10240, 0],"float32"),Tensor([10240, 0],"float32"),Tensor([10240, 0],"float32"),Tensor([10240, 0],"float32"),Tensor([10240, 0],"float32"),Tensor([10240, 0],"float32"),Tensor([10240, 0],"float32"),Tensor([10240, 0],"float32"),Tensor([10240, 0],"float32"),Tensor([10240, 0],"float32"),Tensor([10240, 0],"float32"),Tensor([10240, 0],"float32"),Tensor([10240, 0],"float32"),Tensor([10240, 0],"float32"),Tensor([10240, 0],"float32"),Tensor([10240, 0],"float32"),Tensor([10240, 0],"float32"),Tensor([10240, 0],"float32"),Tensor([1820, 0],"float32"),], )
paddle.concat(list[Tensor([11, 0],"float32"),], 0, )
paddle.concat(list[Tensor([11, 0],"float32"),Tensor([11, 0],"float32"),Tensor([11, 0],"float32"),Tensor([11, 0],"float32"),], axis=-1, )
paddle.concat(list[Tensor([12, 0, 10, 10, 1],"float32"),Tensor([12, 0, 10, 10, 1],"float32"),Tensor([12, 0, 10, 10, 1],"float32"),Tensor([12, 0, 10, 10, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([12, 0, 20, 20, 1],"float32"),Tensor([12, 0, 20, 20, 1],"float32"),Tensor([12, 0, 20, 20, 1],"float32"),Tensor([12, 0, 20, 20, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([12, 0],"int64"),Tensor([12, 0],"int64"),Tensor([12, 0],"int64"),], axis=1, )
paddle.concat(list[Tensor([12, 3, 0, 10, 1],"float32"),Tensor([12, 3, 0, 10, 1],"float32"),Tensor([12, 3, 0, 10, 1],"float32"),Tensor([12, 3, 0, 10, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([12, 3, 0, 20, 1],"float32"),Tensor([12, 3, 0, 20, 1],"float32"),Tensor([12, 3, 0, 20, 1],"float32"),Tensor([12, 3, 0, 20, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([12, 3, 10, 0, 1],"float32"),Tensor([12, 3, 10, 0, 1],"float32"),Tensor([12, 3, 10, 0, 1],"float32"),Tensor([12, 3, 10, 0, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([12, 3, 10, 10, 0],"float32"),Tensor([12, 3, 10, 10, 0],"float32"),Tensor([12, 3, 10, 10, 0],"float32"),Tensor([12, 3, 10, 10, 0],"float32"),], axis=-1, )
paddle.concat(list[Tensor([12, 3, 20, 0, 1],"float32"),Tensor([12, 3, 20, 0, 1],"float32"),Tensor([12, 3, 20, 0, 1],"float32"),Tensor([12, 3, 20, 0, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([12, 3, 20, 20, 0],"float32"),Tensor([12, 3, 20, 20, 0],"float32"),Tensor([12, 3, 20, 20, 0],"float32"),Tensor([12, 3, 20, 20, 0],"float32"),], axis=-1, )
paddle.concat(list[Tensor([128, 0, 28, 28],"float16"),Tensor([128, 0, 28, 28],"float16"),Tensor([128, 0, 28, 28],"float16"),Tensor([128, 0, 28, 28],"float16"),Tensor([128, 0, 28, 28],"float16"),Tensor([128, 0, 28, 28],"float16"),], axis=1, )
paddle.concat(list[Tensor([128, 0, 28, 28],"float32"),Tensor([128, 0, 28, 28],"float32"),Tensor([128, 0, 28, 28],"float32"),Tensor([128, 0, 28, 28],"float32"),Tensor([128, 0, 28, 28],"float32"),Tensor([128, 0, 28, 28],"float32"),], axis=1, )
paddle.concat(list[Tensor([128, 0],"float16"),Tensor([128, 0],"float16"),Tensor([128, 0],"float16"),], axis=1, )
paddle.concat(list[Tensor([128, 224, 0, 28],"float16"),Tensor([128, 128, 0, 28],"float16"),Tensor([128, 128, 0, 28],"float16"),Tensor([128, 128, 0, 28],"float16"),Tensor([128, 128, 0, 28],"float16"),Tensor([128, 128, 0, 28],"float16"),], axis=1, )
paddle.concat(list[Tensor([128, 224, 0, 28],"float32"),Tensor([128, 128, 0, 28],"float32"),Tensor([128, 128, 0, 28],"float32"),Tensor([128, 128, 0, 28],"float32"),Tensor([128, 128, 0, 28],"float32"),Tensor([128, 128, 0, 28],"float32"),], axis=1, )
paddle.concat(list[Tensor([128, 224, 28, 0],"float16"),Tensor([128, 128, 28, 0],"float16"),Tensor([128, 128, 28, 0],"float16"),Tensor([128, 128, 28, 0],"float16"),Tensor([128, 128, 28, 0],"float16"),Tensor([128, 128, 28, 0],"float16"),], axis=1, )
paddle.concat(list[Tensor([128, 224, 28, 0],"float32"),Tensor([128, 128, 28, 0],"float32"),Tensor([128, 128, 28, 0],"float32"),Tensor([128, 128, 28, 0],"float32"),Tensor([128, 128, 28, 0],"float32"),Tensor([128, 128, 28, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([12988, 0, 4],"float32"),Tensor([12988, 0, 3],"float32"),Tensor([12988, 0, 2],"float32"),], axis=-1, )
paddle.concat(list[Tensor([12988, 32, 0],"float32"),Tensor([12988, 32, 0],"float32"),Tensor([12988, 32, 0],"float32"),], axis=-1, )
paddle.concat(list[Tensor([13, 0, 1, 1, 8],"float32"),Tensor([13, 0, 3, 1, 8],"float32"),Tensor([13, 0, 1, 1, 8],"float32"),], axis=2, )
paddle.concat(list[Tensor([13, 0, 1, 1],"float32"),Tensor([13, 0, 1, 3],"float32"),Tensor([13, 0, 1, 1],"float32"),], axis=3, )
paddle.concat(list[Tensor([13, 0, 1, 4, 16],"float32"),Tensor([13, 0, 15, 4, 16],"float32"),], axis=2, )
paddle.concat(list[Tensor([13, 0, 1, 4, 16],"float32"),Tensor([13, 0, 7, 4, 16],"float32"),], axis=2, )
paddle.concat(list[Tensor([13, 0, 1, 5, 1, 8],"float32"),Tensor([13, 0, 3, 5, 1, 8],"float32"),Tensor([13, 0, 1, 5, 1, 8],"float32"),], axis=2, )
paddle.concat(list[Tensor([13, 0, 1, 8],"float32"),Tensor([13, 0, 5, 8],"float32"),Tensor([13, 0, 1, 8],"float32"),], axis=2, )
paddle.concat(list[Tensor([13, 0, 1],"float32"),Tensor([13, 0, 1],"float32"),Tensor([13, 0, 1],"float32"),], axis=2, )
paddle.concat(list[Tensor([13, 0, 16, 4, 16],"float32"),Tensor([13, 0, 16, 4, 16],"float32"),], axis=3, )
paddle.concat(list[Tensor([13, 0, 16, 4],"int64"),Tensor([13, 0, 16, 4],"int64"),], axis=3, )
paddle.concat(list[Tensor([13, 0, 3, 1, 1, 8],"float32"),Tensor([13, 0, 3, 1, 1, 8],"float32"),Tensor([13, 0, 3, 1, 1, 8],"float32"),], axis=3, )
paddle.concat(list[Tensor([13, 0, 3, 1, 1, 8],"float32"),Tensor([13, 0, 3, 3, 1, 8],"float32"),Tensor([13, 0, 3, 1, 1, 8],"float32"),], axis=3, )
paddle.concat(list[Tensor([13, 0, 3, 1],"float32"),], axis=1, )
paddle.concat(list[Tensor([13, 0, 32],"float32"),Tensor([13, 0, 32],"float32"),], axis=0, )
paddle.concat(list[Tensor([13, 0, 32],"float32"),Tensor([13, 0, 32],"float32"),Tensor([13, 0, 32],"float32"),], axis=2, )
paddle.concat(list[Tensor([13, 0, 4, 16, 1],"float32"),Tensor([13, 0, 4, 16, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([13, 0, 5, 1, 5],"float32"),Tensor([13, 0, 5, 1, 2],"float32"),], axis=4, )
paddle.concat(list[Tensor([13, 0, 64],"float32"),Tensor([13, 0, 64],"float32"),], axis=-2, )
paddle.concat(list[Tensor([13, 0, 8, 4, 16],"float32"),Tensor([13, 0, 8, 4, 16],"float32"),], axis=3, )
paddle.concat(list[Tensor([13, 0, 8, 4],"int64"),Tensor([13, 0, 8, 4],"int64"),], axis=3, )
paddle.concat(list[Tensor([13, 1, 0, 1],"float32"),], axis=1, )
paddle.concat(list[Tensor([13, 1, 0, 4],"int64"),Tensor([13, 1, 0, 4],"int64"),], axis=3, )
paddle.concat(list[Tensor([13, 1, 3, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([13, 1, 8, 0],"int64"),Tensor([13, 1, 8, 0],"int64"),], axis=3, )
paddle.concat(list[Tensor([13, 13, 0],"float32"),Tensor([13, 3, 0],"float32"),], axis=-2, )
paddle.concat(list[Tensor([13, 2, 0, 16, 1],"float32"),Tensor([13, 2, 0, 16, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([13, 2, 0, 4, 16],"float32"),Tensor([13, 2, 0, 4, 16],"float32"),], axis=2, )
paddle.concat(list[Tensor([13, 2, 0, 4, 16],"float32"),Tensor([13, 2, 0, 4, 16],"float32"),], axis=3, )
paddle.concat(list[Tensor([13, 2, 0, 4],"int64"),Tensor([13, 2, 0, 4],"int64"),], axis=3, )
paddle.concat(list[Tensor([13, 2, 0],"float32"),Tensor([13, 2, 0],"float32"),Tensor([13, 2, 0],"float32"),], axis=2, )
paddle.concat(list[Tensor([13, 2, 1, 0, 16],"float32"),Tensor([13, 2, 15, 0, 16],"float32"),], axis=2, )
paddle.concat(list[Tensor([13, 2, 1, 0, 16],"float32"),Tensor([13, 2, 7, 0, 16],"float32"),], axis=2, )
paddle.concat(list[Tensor([13, 2, 1, 4, 0],"float32"),Tensor([13, 2, 15, 4, 0],"float32"),], axis=2, )
paddle.concat(list[Tensor([13, 2, 1, 4, 0],"float32"),Tensor([13, 2, 7, 4, 0],"float32"),], axis=2, )
paddle.concat(list[Tensor([13, 2, 16, 0, 16],"float32"),Tensor([13, 2, 16, 0, 16],"float32"),], axis=3, )
paddle.concat(list[Tensor([13, 2, 16, 0],"int64"),Tensor([13, 2, 16, 0],"int64"),], axis=3, )
paddle.concat(list[Tensor([13, 2, 16, 4, 0],"float32"),Tensor([13, 2, 16, 4, 0],"float32"),], axis=3, )
paddle.concat(list[Tensor([13, 2, 4, 0, 1],"float32"),Tensor([13, 2, 4, 0, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([13, 2, 4, 16, 0],"float32"),Tensor([13, 2, 4, 16, 0],"float32"),], axis=-1, )
paddle.concat(list[Tensor([13, 2, 8, 0, 16],"float32"),Tensor([13, 2, 8, 0, 16],"float32"),], axis=3, )
paddle.concat(list[Tensor([13, 2, 8, 4, 0],"float32"),Tensor([13, 2, 8, 4, 0],"float32"),], axis=3, )
paddle.concat(list[Tensor([13, 3, 0],"float32"),Tensor([13, 3, 0],"float32"),Tensor([13, 3, 0],"float32"),], axis=2, )
paddle.concat(list[Tensor([13, 4, 0, 1, 1, 8],"float32"),Tensor([13, 4, 0, 1, 1, 8],"float32"),Tensor([13, 4, 0, 1, 1, 8],"float32"),], axis=3, )
paddle.concat(list[Tensor([13, 4, 0, 1, 1, 8],"float32"),Tensor([13, 4, 0, 3, 1, 8],"float32"),Tensor([13, 4, 0, 1, 1, 8],"float32"),], axis=3, )
paddle.concat(list[Tensor([13, 4, 0, 1, 5],"float32"),Tensor([13, 4, 0, 1, 2],"float32"),], axis=4, )
paddle.concat(list[Tensor([13, 4, 0, 1, 8],"float32"),Tensor([13, 4, 0, 1, 8],"float32"),Tensor([13, 4, 0, 1, 8],"float32"),], axis=2, )
paddle.concat(list[Tensor([13, 4, 0, 5, 1, 8],"float32"),Tensor([13, 4, 0, 5, 1, 8],"float32"),Tensor([13, 4, 0, 5, 1, 8],"float32"),], axis=2, )
paddle.concat(list[Tensor([13, 4, 0, 8],"float32"),Tensor([13, 4, 0, 8],"float32"),Tensor([13, 4, 0, 8],"float32"),], axis=2, )
paddle.concat(list[Tensor([13, 4, 1, 0, 1, 8],"float32"),Tensor([13, 4, 3, 0, 1, 8],"float32"),Tensor([13, 4, 1, 0, 1, 8],"float32"),], axis=2, )
paddle.concat(list[Tensor([13, 4, 1, 0, 8],"float32"),Tensor([13, 4, 3, 0, 8],"float32"),Tensor([13, 4, 1, 0, 8],"float32"),], axis=2, )
paddle.concat(list[Tensor([13, 4, 1, 0],"float32"),Tensor([13, 4, 5, 0],"float32"),Tensor([13, 4, 1, 0],"float32"),], axis=2, )
paddle.concat(list[Tensor([13, 4, 1, 1, 0],"float32"),Tensor([13, 4, 3, 1, 0],"float32"),Tensor([13, 4, 1, 1, 0],"float32"),], axis=2, )
paddle.concat(list[Tensor([13, 4, 1, 5, 0, 8],"float32"),Tensor([13, 4, 3, 5, 0, 8],"float32"),Tensor([13, 4, 1, 5, 0, 8],"float32"),], axis=2, )
paddle.concat(list[Tensor([13, 4, 1, 5, 1, 0],"float32"),Tensor([13, 4, 3, 5, 1, 0],"float32"),Tensor([13, 4, 1, 5, 1, 0],"float32"),], axis=2, )
paddle.concat(list[Tensor([13, 4, 3, 0, 1, 8],"float32"),Tensor([13, 4, 3, 0, 1, 8],"float32"),Tensor([13, 4, 3, 0, 1, 8],"float32"),], axis=3, )
paddle.concat(list[Tensor([13, 4, 3, 1, 0, 8],"float32"),Tensor([13, 4, 3, 1, 0, 8],"float32"),Tensor([13, 4, 3, 1, 0, 8],"float32"),], axis=3, )
paddle.concat(list[Tensor([13, 4, 3, 1, 0, 8],"float32"),Tensor([13, 4, 3, 3, 0, 8],"float32"),Tensor([13, 4, 3, 1, 0, 8],"float32"),], axis=3, )
paddle.concat(list[Tensor([13, 4, 3, 1, 1, 0],"float32"),Tensor([13, 4, 3, 1, 1, 0],"float32"),Tensor([13, 4, 3, 1, 1, 0],"float32"),], axis=3, )
paddle.concat(list[Tensor([13, 4, 3, 1, 1, 0],"float32"),Tensor([13, 4, 3, 3, 1, 0],"float32"),Tensor([13, 4, 3, 1, 1, 0],"float32"),], axis=3, )
paddle.concat(list[Tensor([13, 4, 5, 0, 5],"float32"),Tensor([13, 4, 5, 0, 2],"float32"),], axis=4, )
paddle.concat(list[Tensor([13, 4, 5, 1, 0],"float32"),Tensor([13, 4, 5, 1, 0],"float32"),], axis=4, )
paddle.concat(list[Tensor([13, 5, 0, 1],"float32"),Tensor([13, 5, 0, 3],"float32"),Tensor([13, 5, 0, 1],"float32"),], axis=3, )
paddle.concat(list[Tensor([13, 5, 1, 0],"float32"),Tensor([13, 5, 1, 0],"float32"),Tensor([13, 5, 1, 0],"float32"),], axis=3, )
paddle.concat(list[Tensor([13, 7, 0],"float32"),Tensor([13, 7, 0],"float32"),], axis=0, )
paddle.concat(list[Tensor([13125, 0],"float32"),Tensor([13125, 0],"float32"),Tensor([13125, 0],"float32"),], axis=-1, )
paddle.concat(list[Tensor([15000, 0],"bool"),Tensor([15000, 0],"bool"),Tensor([15000, 0],"bool"),Tensor([15000, 0],"bool"),Tensor([15000, 0],"bool"),Tensor([15000, 0],"bool"),Tensor([15000, 0],"bool"),Tensor([15000, 0],"bool"),Tensor([15000, 0],"bool"),Tensor([15000, 0],"bool"),Tensor([15000, 0],"bool"),Tensor([15000, 0],"bool"),Tensor([15000, 0],"bool"),Tensor([15000, 0],"bool"),Tensor([15000, 0],"bool"),Tensor([15000, 0],"bool"),Tensor([15000, 0],"bool"),Tensor([15000, 0],"bool"),Tensor([15000, 0],"bool"),Tensor([15000, 0],"bool"),Tensor([15000, 0],"bool"),Tensor([15000, 0],"bool"),Tensor([15000, 0],"bool"),Tensor([15000, 0],"bool"),Tensor([15000, 0],"bool"),Tensor([15000, 0],"bool"),Tensor([15000, 0],"bool"),Tensor([15000, 0],"bool"),Tensor([15000, 0],"bool"),Tensor([15000, 0],"bool"),Tensor([15000, 0],"bool"),Tensor([15000, 0],"bool"),Tensor([15000, 0],"bool"),Tensor([15000, 0],"bool"),Tensor([15000, 0],"bool"),Tensor([15000, 0],"bool"),Tensor([15000, 0],"bool"),Tensor([15000, 0],"bool"),Tensor([15000, 0],"bool"),Tensor([15000, 0],"bool"),Tensor([15000, 0],"bool"),Tensor([15000, 0],"bool"),Tensor([15000, 0],"bool"),Tensor([15000, 0],"bool"),Tensor([15000, 0],"bool"),Tensor([15000, 0],"bool"),Tensor([15000, 0],"bool"),Tensor([15000, 0],"bool"),Tensor([15000, 0],"bool"),Tensor([15000, 0],"bool"),], axis=1, )
paddle.concat(list[Tensor([1514, 0],"float32"),Tensor([1570, 0],"float32"),Tensor([1690, 0],"float32"),Tensor([1866, 0],"float32"),Tensor([406, 0],"float32"),Tensor([97, 0],"float32"),], )
paddle.concat(list[Tensor([1536, 0],"float16"),Tensor([1536, 0],"float16"),Tensor([1536, 0],"float16"),], axis=-1, )
paddle.concat(list[Tensor([16, 0, 1, 2],"float32"),Tensor([16, 0, 1, 2],"float32"),], axis=-2, )
paddle.concat(list[Tensor([16, 0, 64, 64, 2],"float32"),Tensor([16, 0, 64, 64, 2],"float32"),], axis=1, )
paddle.concat(list[Tensor([16, 0, 640, 640],"float16"),Tensor([16, 0, 640, 640],"float16"),Tensor([16, 0, 640, 640],"float16"),], axis=1, )
paddle.concat(list[Tensor([16, 0, 640, 640],"float32"),Tensor([16, 0, 640, 640],"float32"),Tensor([16, 0, 640, 640],"float32"),], axis=1, )
paddle.concat(list[Tensor([16, 1, 0, 64, 2],"float32"),Tensor([16, 10, 0, 64, 2],"float32"),], axis=1, )
paddle.concat(list[Tensor([16, 1, 0, 640],"float16"),Tensor([16, 1, 0, 640],"float16"),Tensor([16, 1, 0, 640],"float16"),], axis=1, )
paddle.concat(list[Tensor([16, 1, 0, 640],"float32"),Tensor([16, 1, 0, 640],"float32"),Tensor([16, 1, 0, 640],"float32"),], axis=1, )
paddle.concat(list[Tensor([16, 1, 64, 0, 2],"float32"),Tensor([16, 10, 64, 0, 2],"float32"),], axis=1, )
paddle.concat(list[Tensor([16, 1, 64, 64, 0],"float32"),Tensor([16, 10, 64, 64, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([16, 1, 640, 0],"float16"),Tensor([16, 1, 640, 0],"float16"),Tensor([16, 1, 640, 0],"float16"),], axis=1, )
paddle.concat(list[Tensor([16, 1, 640, 0],"float32"),Tensor([16, 1, 640, 0],"float32"),Tensor([16, 1, 640, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([16, 10, 0, 2],"float32"),Tensor([16, 10, 0, 2],"float32"),], axis=-2, )
paddle.concat(list[Tensor([16, 10, 1, 0],"float32"),Tensor([16, 10, 1, 0],"float32"),], axis=-2, )
paddle.concat(list[Tensor([18, 0],"float32"),], 0, )
paddle.concat(list[Tensor([18, 0],"float32"),Tensor([18, 0],"float32"),], -1, )
paddle.concat(list[Tensor([1820, 0],"float32"),Tensor([1820, 0],"float32"),Tensor([1820, 0],"float32"),], -1, )
paddle.concat(list[Tensor([2, 0, 240, 240],"float32"),Tensor([2, 0, 240, 240],"float32"),Tensor([2, 0, 240, 240],"float32"),Tensor([2, 0, 240, 240],"float32"),], 1, )
paddle.concat(list[Tensor([2, 0, 8],"float32"),Tensor([2, 0, 8],"float32"),Tensor([2, 0, 8],"float32"),Tensor([2, 0, 8],"float32"),Tensor([2, 0, 8],"float32"),Tensor([2, 0, 8],"float32"),Tensor([2, 0, 8],"float32"),Tensor([2, 0, 8],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 0],"float32"),Tensor([2, 0],"float32"),Tensor([2, 0],"float32"),Tensor([2, 0],"float32"),Tensor([2, 0],"float32"),Tensor([2, 0],"float32"),Tensor([2, 0],"float32"),Tensor([2, 0],"float32"),Tensor([2, 0],"float32"),Tensor([2, 0],"float32"),Tensor([2, 0],"float32"),Tensor([2, 0],"float32"),Tensor([2, 0],"float32"),Tensor([2, 0],"float32"),Tensor([2, 0],"float32"),Tensor([2, 0],"float32"),Tensor([2, 0],"float32"),Tensor([2, 0],"float32"),Tensor([2, 0],"float32"),Tensor([2, 0],"float32"),Tensor([2, 0],"float32"),Tensor([2, 0],"float32"),Tensor([2, 0],"float32"),Tensor([2, 0],"float32"),Tensor([2, 0],"float32"),], axis=0, )
paddle.concat(list[Tensor([2, 0],"float64"),Tensor([2, 0],"float64"),], axis=1, name=None, )
paddle.concat(list[Tensor([2, 0],"float64"),Tensor([2, 0],"float64"),Tensor([2, 0],"float64"),Tensor([2, 0],"float64"),Tensor([2, 0],"float64"),Tensor([2, 0],"float64"),Tensor([2, 0],"float64"),Tensor([2, 0],"float64"),Tensor([2, 0],"float64"),Tensor([2, 0],"float64"),Tensor([2, 0],"float64"),Tensor([2, 0],"float64"),], axis=1, )
paddle.concat(list[Tensor([2, 0],"int64"),Tensor([2, 0],"int64"),Tensor([2, 0],"int64"),Tensor([2, 0],"int64"),Tensor([2, 0],"int64"),Tensor([2, 0],"int64"),Tensor([2, 0],"int64"),Tensor([2, 0],"int64"),Tensor([2, 0],"int64"),Tensor([2, 0],"int64"),Tensor([2, 0],"int64"),Tensor([2, 0],"int64"),Tensor([2, 0],"int64"),Tensor([2, 0],"int64"),Tensor([2, 0],"int64"),Tensor([2, 0],"int64"),Tensor([2, 0],"int64"),Tensor([2, 0],"int64"),Tensor([2, 0],"int64"),Tensor([2, 0],"int64"),Tensor([2, 0],"int64"),Tensor([2, 0],"int64"),Tensor([2, 0],"int64"),Tensor([2, 0],"int64"),Tensor([2, 0],"int64"),], axis=0, )
paddle.concat(list[Tensor([2, 1, 0],"float32"),Tensor([2, 1, 0],"float32"),Tensor([2, 1, 0],"float32"),Tensor([2, 1, 0],"float32"),Tensor([2, 1, 0],"float32"),Tensor([2, 1, 0],"float32"),Tensor([2, 1, 0],"float32"),Tensor([2, 1, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 3, 0, 240],"float32"),Tensor([2, 3, 0, 240],"float32"),Tensor([2, 3, 0, 240],"float32"),Tensor([2, 3, 0, 240],"float32"),], 1, )
paddle.concat(list[Tensor([2, 3, 240, 0],"float32"),Tensor([2, 3, 240, 0],"float32"),Tensor([2, 3, 240, 0],"float32"),Tensor([2, 3, 240, 0],"float32"),], 1, )
paddle.concat(list[Tensor([20, 0, 112, 112],"float32"),Tensor([20, 0, 112, 112],"float32"),], 0, )
paddle.concat(list[Tensor([20, 3, 0, 112],"float32"),Tensor([20, 3, 0, 112],"float32"),], 0, )
paddle.concat(list[Tensor([20, 3, 112, 0],"float32"),Tensor([20, 3, 112, 0],"float32"),], 0, )
paddle.concat(list[Tensor([216, 0, 1, 1, 2, 1],"float32"),Tensor([216, 0, 1, 1, 2, 1],"float32"),Tensor([216, 0, 1, 1, 2, 1],"float32"),Tensor([216, 0, 1, 1, 2, 3],"float32"),Tensor([216, 0, 1, 1, 2, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([216, 248, 0, 1, 2, 1],"float32"),Tensor([216, 248, 0, 1, 2, 1],"float32"),Tensor([216, 248, 0, 1, 2, 1],"float32"),Tensor([216, 248, 0, 1, 2, 3],"float32"),Tensor([216, 248, 0, 1, 2, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([216, 248, 1, 0, 2, 1],"float32"),Tensor([216, 248, 1, 0, 2, 1],"float32"),Tensor([216, 248, 1, 0, 2, 1],"float32"),Tensor([216, 248, 1, 0, 2, 3],"float32"),Tensor([216, 248, 1, 0, 2, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([216, 248, 1, 1, 0, 1],"float32"),Tensor([216, 248, 1, 1, 0, 1],"float32"),Tensor([216, 248, 1, 1, 0, 1],"float32"),Tensor([216, 248, 1, 1, 0, 3],"float32"),Tensor([216, 248, 1, 1, 0, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([216, 248, 1, 1, 2, 0],"float32"),Tensor([216, 248, 1, 1, 2, 0],"float32"),Tensor([216, 248, 1, 1, 2, 0],"float32"),Tensor([216, 248, 1, 1, 2, 0],"float32"),Tensor([216, 248, 1, 1, 2, 0],"float32"),], axis=-1, )
paddle.concat(list[Tensor([21955, 0, 5],"float32"),Tensor([20524, 0, 5],"float32"),Tensor([19780, 0, 5],"float32"),Tensor([17980, 0, 5],"float32"),Tensor([14701, 0, 5],"float32"),Tensor([25757, 0, 5],"float32"),Tensor([27860, 0, 5],"float32"),Tensor([22071, 0, 5],"float32"),], axis=0, )
paddle.concat(list[Tensor([21955, 0],"int32"),Tensor([20524, 0],"int32"),Tensor([19780, 0],"int32"),Tensor([17980, 0],"int32"),], axis=0, )
paddle.concat(list[Tensor([21955, 0],"int32"),Tensor([20524, 0],"int32"),Tensor([19780, 0],"int32"),Tensor([17980, 0],"int32"),Tensor([14701, 0],"int32"),Tensor([25757, 0],"int32"),Tensor([27860, 0],"int32"),Tensor([22071, 0],"int32"),], axis=0, )
paddle.concat(list[Tensor([21955, 20, 0],"float32"),Tensor([20524, 20, 0],"float32"),Tensor([19780, 20, 0],"float32"),Tensor([17980, 20, 0],"float32"),Tensor([14701, 20, 0],"float32"),Tensor([25757, 20, 0],"float32"),Tensor([27860, 20, 0],"float32"),Tensor([22071, 20, 0],"float32"),], axis=0, )
paddle.concat(list[Tensor([24, 0],"float32"),Tensor([24, 0],"float32"),], 1, )
paddle.concat(list[Tensor([256, 0, 1],"float32"),Tensor([256, 0, 1],"float32"),], 2, )
paddle.concat(list[Tensor([256, 256, 0],"float32"),Tensor([256, 256, 0],"float32"),], 2, )
paddle.concat(list[Tensor([27648, 0],"float32"),Tensor([6912, 0],"float32"),Tensor([1728, 0],"float32"),Tensor([432, 0],"float32"),Tensor([108, 0],"float32"),Tensor([30, 0],"float32"),], axis=0, )
paddle.concat(list[Tensor([28800, 0],"float32"),Tensor([7200, 0],"float32"),Tensor([1800, 0],"float32"),Tensor([450, 0],"float32"),Tensor([117, 0],"float32"),Tensor([35, 0],"float32"),], axis=0, )
paddle.concat(list[Tensor([3, 0, 120],"float64"),Tensor([3, 0, 120],"float64"),], axis=0, )
paddle.concat(list[Tensor([3, 0, 2, 5],"float64"),], axis=0, name=None, )
paddle.concat(list[Tensor([3, 0, 2, 5],"float64"),], axis=1, name=None, )
paddle.concat(list[Tensor([3, 0, 2, 5],"float64"),], axis=2, name=None, )
paddle.concat(list[Tensor([3, 0, 2, 5],"float64"),Tensor([3, 0, 2, 5],"float64"),Tensor([3, 0, 2, 5],"float64"),], axis=0, name=None, )
paddle.concat(list[Tensor([3, 0, 2, 5],"float64"),Tensor([3, 0, 2, 5],"float64"),Tensor([3, 0, 2, 5],"float64"),], axis=1, name=None, )
paddle.concat(list[Tensor([3, 0, 2, 5],"float64"),Tensor([3, 0, 2, 5],"float64"),Tensor([3, 0, 2, 5],"float64"),], axis=2, name=None, )
paddle.concat(list[Tensor([3, 0, 2],"float64"),], axis=0, name=None, )
paddle.concat(list[Tensor([3, 0, 2],"float64"),], axis=1, name=None, )
paddle.concat(list[Tensor([3, 0, 2],"float64"),Tensor([3, 0, 2],"float64"),Tensor([3, 0, 2],"float64"),], axis=0, name=None, )
paddle.concat(list[Tensor([3, 0, 2],"float64"),Tensor([3, 0, 2],"float64"),Tensor([3, 0, 2],"float64"),], axis=1, name=None, )
paddle.concat(list[Tensor([3, 0],"float16"),Tensor([18, 0],"float16"),Tensor([18, 0],"float16"),], 0, )
paddle.concat(list[Tensor([3, 0],"float32"),Tensor([18, 0],"float32"),Tensor([18, 0],"float32"),], 0, )
paddle.concat(list[Tensor([3, 0],"float32"),Tensor([3, 0],"float32"),], -1, )
paddle.concat(list[Tensor([3, 0],"float64"),Tensor([3, 0],"float64"),Tensor([3, 0],"float64"),], axis=1, name=None, )
paddle.concat(list[Tensor([3, 0],"float64"),Tensor([3, 0],"float64"),Tensor([3, 0],"float64"),Tensor([3, 0],"float64"),Tensor([3, 0],"float64"),Tensor([3, 0],"float64"),], axis=1, )
paddle.concat(list[Tensor([3, 100, 0],"float64"),Tensor([3, 100, 0],"float64"),], axis=0, )
paddle.concat(list[Tensor([3, 4, 0, 5],"float64"),], axis=0, name=None, )
paddle.concat(list[Tensor([3, 4, 0, 5],"float64"),], axis=1, name=None, )
paddle.concat(list[Tensor([3, 4, 0, 5],"float64"),], axis=2, name=None, )
paddle.concat(list[Tensor([3, 4, 0, 5],"float64"),Tensor([3, 4, 0, 5],"float64"),Tensor([3, 4, 0, 5],"float64"),], axis=0, name=None, )
paddle.concat(list[Tensor([3, 4, 0, 5],"float64"),Tensor([3, 4, 0, 5],"float64"),Tensor([3, 4, 0, 5],"float64"),], axis=1, name=None, )
paddle.concat(list[Tensor([3, 4, 0, 5],"float64"),Tensor([3, 4, 0, 5],"float64"),Tensor([3, 4, 0, 5],"float64"),], axis=2, name=None, )
paddle.concat(list[Tensor([3, 4, 0],"float64"),], axis=0, name=None, )
paddle.concat(list[Tensor([3, 4, 0],"float64"),], axis=1, name=None, )
paddle.concat(list[Tensor([3, 4, 0],"float64"),Tensor([3, 4, 0],"float64"),Tensor([3, 4, 0],"float64"),], axis=0, name=None, )
paddle.concat(list[Tensor([3, 4, 0],"float64"),Tensor([3, 4, 0],"float64"),Tensor([3, 4, 0],"float64"),], axis=1, name=None, )
paddle.concat(list[Tensor([3, 4, 2, 0],"float64"),], axis=0, name=None, )
paddle.concat(list[Tensor([3, 4, 2, 0],"float64"),], axis=1, name=None, )
paddle.concat(list[Tensor([3, 4, 2, 0],"float64"),], axis=2, name=None, )
paddle.concat(list[Tensor([3, 4, 2, 0],"float64"),Tensor([3, 4, 2, 0],"float64"),Tensor([3, 4, 2, 0],"float64"),], axis=0, name=None, )
paddle.concat(list[Tensor([3, 4, 2, 0],"float64"),Tensor([3, 4, 2, 0],"float64"),Tensor([3, 4, 2, 0],"float64"),], axis=1, name=None, )
paddle.concat(list[Tensor([3, 4, 2, 0],"float64"),Tensor([3, 4, 2, 0],"float64"),Tensor([3, 4, 2, 0],"float64"),], axis=2, name=None, )
paddle.concat(list[Tensor([4, 0, 918],"float16"),Tensor([4, 0, 918],"float16"),Tensor([4, 0, 918],"float16"),Tensor([4, 0, 918],"float16"),Tensor([4, 0, 918],"float16"),Tensor([4, 0, 918],"float16"),Tensor([4, 0, 918],"float16"),Tensor([4, 0, 918],"float16"),Tensor([4, 0, 918],"float16"),Tensor([4, 0, 918],"float16"),Tensor([4, 0, 918],"float16"),Tensor([4, 0, 918],"float16"),], axis=-1, )
paddle.concat(list[Tensor([4, 0],"float32"),], 1, )
paddle.concat(list[Tensor([4, 0],"float32"),Tensor([4, 0],"float32"),Tensor([4, 0],"float32"),], 1, )
paddle.concat(list[Tensor([4, 304, 0],"float16"),Tensor([4, 304, 0],"float16"),Tensor([4, 304, 0],"float16"),Tensor([4, 304, 0],"float16"),Tensor([4, 304, 0],"float16"),Tensor([4, 304, 0],"float16"),Tensor([4, 304, 0],"float16"),Tensor([4, 304, 0],"float16"),Tensor([4, 304, 0],"float16"),Tensor([4, 304, 0],"float16"),Tensor([4, 304, 0],"float16"),Tensor([4, 304, 0],"float16"),], axis=-1, )
paddle.concat(list[Tensor([4, 346, 0],"float16"),Tensor([4, 346, 0],"float16"),Tensor([4, 346, 0],"float16"),Tensor([4, 346, 0],"float16"),Tensor([4, 346, 0],"float16"),Tensor([4, 346, 0],"float16"),Tensor([4, 346, 0],"float16"),Tensor([4, 346, 0],"float16"),Tensor([4, 346, 0],"float16"),Tensor([4, 346, 0],"float16"),Tensor([4, 346, 0],"float16"),Tensor([4, 346, 0],"float16"),], axis=-1, )
paddle.concat(list[Tensor([40, 0, 50, 5],"float32"),Tensor([60, 0, 50, 5],"float32"),], axis=0, )
paddle.concat(list[Tensor([40, 0, 8],"float32"),Tensor([40, 0, 8],"float32"),Tensor([40, 0, 8],"float32"),Tensor([40, 0, 8],"float32"),Tensor([40, 0, 8],"float32"),Tensor([40, 0, 8],"float32"),Tensor([40, 0, 8],"float32"),Tensor([40, 0, 8],"float32"),Tensor([40, 0, 8],"float32"),Tensor([40, 0, 8],"float32"),Tensor([40, 0, 8],"float32"),Tensor([40, 0, 8],"float32"),Tensor([40, 0, 8],"float32"),Tensor([40, 0, 8],"float32"),Tensor([40, 0, 8],"float32"),Tensor([40, 0, 8],"float32"),Tensor([40, 0, 8],"float32"),Tensor([40, 0, 8],"float32"),Tensor([40, 0, 8],"float32"),Tensor([40, 0, 8],"float32"),Tensor([40, 0, 8],"float32"),Tensor([40, 0, 8],"float32"),Tensor([40, 0, 8],"float32"),Tensor([40, 0, 8],"float32"),Tensor([40, 0, 8],"float32"),Tensor([40, 0, 8],"float32"),Tensor([40, 0, 8],"float32"),Tensor([40, 0, 8],"float32"),Tensor([40, 0, 8],"float32"),Tensor([40, 0, 8],"float32"),Tensor([40, 0, 8],"float32"),Tensor([40, 0, 8],"float32"),Tensor([40, 0, 8],"float32"),Tensor([40, 0, 8],"float32"),Tensor([40, 0, 8],"float32"),Tensor([40, 0, 8],"float32"),Tensor([40, 0, 8],"float32"),Tensor([40, 0, 8],"float32"),Tensor([40, 0, 8],"float32"),Tensor([40, 0, 8],"float32"),Tensor([40, 0, 8],"float32"),Tensor([40, 0, 8],"float32"),Tensor([40, 0, 8],"float32"),Tensor([40, 0, 8],"float32"),Tensor([40, 0, 8],"float32"),Tensor([40, 0, 8],"float32"),Tensor([40, 0, 8],"float32"),Tensor([40, 0, 8],"float32"),Tensor([40, 0, 8],"float32"),Tensor([40, 0, 8],"float32"),Tensor([40, 0, 8],"float32"),Tensor([40, 0, 8],"float32"),], axis=0, )
paddle.concat(list[Tensor([40, 0],"float32"),Tensor([40, 0],"float32"),Tensor([40, 0],"float32"),Tensor([40, 0],"float32"),Tensor([40, 0],"float32"),Tensor([40, 0],"float32"),Tensor([40, 0],"float32"),Tensor([40, 0],"float32"),Tensor([40, 0],"float32"),Tensor([40, 0],"float32"),Tensor([40, 0],"float32"),Tensor([40, 0],"float32"),Tensor([40, 0],"float32"),], 0, )
paddle.concat(list[Tensor([40, 0],"float32"),Tensor([40, 0],"float32"),Tensor([40, 0],"float32"),Tensor([40, 0],"float32"),Tensor([40, 0],"float32"),Tensor([40, 0],"float32"),Tensor([40, 0],"float32"),Tensor([40, 0],"float32"),Tensor([40, 0],"float32"),Tensor([40, 0],"float32"),Tensor([40, 0],"float32"),Tensor([40, 0],"float32"),Tensor([40, 0],"float32"),Tensor([40, 0],"float32"),Tensor([40, 0],"float32"),Tensor([40, 0],"float32"),Tensor([40, 0],"float32"),Tensor([40, 0],"float32"),Tensor([40, 0],"float32"),Tensor([40, 0],"float32"),Tensor([40, 0],"float32"),Tensor([40, 0],"float32"),Tensor([40, 0],"float32"),Tensor([40, 0],"float32"),Tensor([40, 0],"float32"),Tensor([40, 0],"float32"),Tensor([40, 0],"float32"),Tensor([40, 0],"float32"),Tensor([40, 0],"float32"),Tensor([40, 0],"float32"),Tensor([40, 0],"float32"),Tensor([40, 0],"float32"),Tensor([40, 0],"float32"),Tensor([40, 0],"float32"),Tensor([40, 0],"float32"),Tensor([40, 0],"float32"),Tensor([40, 0],"float32"),Tensor([40, 0],"float32"),Tensor([40, 0],"float32"),Tensor([40, 0],"float32"),Tensor([40, 0],"float32"),Tensor([40, 0],"float32"),Tensor([40, 0],"float32"),Tensor([40, 0],"float32"),Tensor([40, 0],"float32"),Tensor([40, 0],"float32"),Tensor([40, 0],"float32"),Tensor([40, 0],"float32"),Tensor([40, 0],"float32"),Tensor([40, 0],"float32"),Tensor([40, 0],"float32"),Tensor([40, 0],"float32"),], 0, )
paddle.concat(list[Tensor([40, 1, 0],"float32"),Tensor([40, 1, 0],"float32"),Tensor([40, 1, 0],"float32"),Tensor([40, 1, 0],"float32"),Tensor([40, 1, 0],"float32"),Tensor([40, 1, 0],"float32"),Tensor([40, 1, 0],"float32"),Tensor([40, 1, 0],"float32"),Tensor([40, 1, 0],"float32"),Tensor([40, 1, 0],"float32"),Tensor([40, 1, 0],"float32"),Tensor([40, 1, 0],"float32"),Tensor([40, 1, 0],"float32"),Tensor([40, 1, 0],"float32"),Tensor([40, 1, 0],"float32"),Tensor([40, 1, 0],"float32"),Tensor([40, 1, 0],"float32"),Tensor([40, 1, 0],"float32"),Tensor([40, 1, 0],"float32"),Tensor([40, 1, 0],"float32"),Tensor([40, 1, 0],"float32"),Tensor([40, 1, 0],"float32"),Tensor([40, 1, 0],"float32"),Tensor([40, 1, 0],"float32"),Tensor([40, 1, 0],"float32"),Tensor([40, 1, 0],"float32"),Tensor([40, 1, 0],"float32"),Tensor([40, 1, 0],"float32"),Tensor([40, 1, 0],"float32"),Tensor([40, 1, 0],"float32"),Tensor([40, 1, 0],"float32"),Tensor([40, 1, 0],"float32"),Tensor([40, 1, 0],"float32"),Tensor([40, 1, 0],"float32"),Tensor([40, 1, 0],"float32"),Tensor([40, 1, 0],"float32"),Tensor([40, 1, 0],"float32"),Tensor([40, 1, 0],"float32"),Tensor([40, 1, 0],"float32"),Tensor([40, 1, 0],"float32"),Tensor([40, 1, 0],"float32"),Tensor([40, 1, 0],"float32"),Tensor([40, 1, 0],"float32"),Tensor([40, 1, 0],"float32"),Tensor([40, 1, 0],"float32"),Tensor([40, 1, 0],"float32"),Tensor([40, 1, 0],"float32"),Tensor([40, 1, 0],"float32"),Tensor([40, 1, 0],"float32"),Tensor([40, 1, 0],"float32"),Tensor([40, 1, 0],"float32"),Tensor([40, 1, 0],"float32"),], axis=0, )
paddle.concat(list[Tensor([40, 50, 0, 5],"float32"),Tensor([60, 50, 0, 5],"float32"),], axis=0, )
paddle.concat(list[Tensor([40, 50, 50, 0],"float32"),Tensor([60, 50, 50, 0],"float32"),], axis=0, )
paddle.concat(list[Tensor([5, 0, 1],"float32"),Tensor([5, 0, 1],"float32"),], 2, )
paddle.concat(list[Tensor([5, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([5, 5, 0],"float32"),Tensor([5, 5, 0],"float32"),], 2, )
paddle.concat(list[Tensor([512, 0],"float32"),Tensor([512, 0],"float32"),Tensor([512, 0],"float32"),Tensor([512, 0],"float32"),Tensor([512, 0],"float32"),Tensor([512, 0],"float32"),Tensor([512, 0],"float32"),Tensor([512, 0],"float32"),Tensor([512, 0],"float32"),Tensor([512, 0],"float32"),Tensor([512, 0],"float32"),Tensor([512, 0],"float32"),Tensor([512, 0],"float32"),Tensor([512, 0],"float32"),Tensor([512, 0],"float32"),Tensor([512, 0],"float32"),], axis=-1, )
paddle.concat(list[Tensor([512, 0],"float32"),Tensor([512, 0],"float32"),Tensor([512, 0],"float32"),Tensor([512, 0],"float32"),Tensor([512, 0],"float32"),Tensor([512, 0],"float32"),Tensor([512, 0],"float32"),Tensor([512, 0],"float32"),Tensor([512, 0],"float32"),Tensor([512, 0],"float32"),Tensor([512, 0],"float32"),Tensor([512, 0],"float32"),Tensor([512, 0],"float32"),Tensor([512, 0],"float32"),Tensor([512, 0],"float32"),Tensor([512, 0],"float32"),Tensor([512, 0],"float32"),Tensor([512, 0],"float32"),Tensor([512, 0],"float32"),Tensor([512, 0],"float32"),Tensor([512, 0],"float32"),Tensor([512, 0],"float32"),Tensor([512, 0],"float32"),Tensor([512, 0],"float32"),Tensor([512, 0],"float32"),Tensor([512, 0],"float32"),Tensor([512, 0],"float32"),Tensor([512, 0],"float32"),Tensor([512, 0],"float32"),Tensor([512, 0],"float32"),Tensor([512, 0],"float32"),Tensor([512, 0],"float32"),Tensor([512, 0],"float32"),Tensor([512, 0],"float32"),Tensor([512, 0],"float32"),Tensor([512, 0],"float32"),Tensor([512, 0],"float32"),Tensor([512, 0],"float32"),Tensor([512, 0],"float32"),Tensor([512, 0],"float32"),Tensor([512, 0],"float32"),Tensor([512, 0],"float32"),Tensor([512, 0],"float32"),Tensor([512, 0],"float32"),Tensor([512, 0],"float32"),Tensor([512, 0],"float32"),Tensor([512, 0],"float32"),Tensor([512, 0],"float32"),], axis=-1, )
paddle.concat(list[Tensor([52, 0, 1, 1, 8],"float32"),Tensor([52, 0, 3, 1, 8],"float32"),Tensor([52, 0, 1, 1, 8],"float32"),], axis=2, )
paddle.concat(list[Tensor([52, 0, 1, 1],"float32"),Tensor([52, 0, 1, 3],"float32"),Tensor([52, 0, 1, 1],"float32"),], axis=3, )
paddle.concat(list[Tensor([52, 0, 1, 5, 1, 8],"float32"),Tensor([52, 0, 3, 5, 1, 8],"float32"),Tensor([52, 0, 1, 5, 1, 8],"float32"),], axis=2, )
paddle.concat(list[Tensor([52, 0, 1, 8],"float32"),Tensor([52, 0, 5, 8],"float32"),Tensor([52, 0, 1, 8],"float32"),], axis=2, )
paddle.concat(list[Tensor([52, 0, 3, 1],"float32"),], axis=1, )
paddle.concat(list[Tensor([52, 0, 5, 1, 5],"float32"),Tensor([52, 0, 5, 1, 2],"float32"),], axis=4, )
paddle.concat(list[Tensor([52, 1, 0, 1],"float32"),], axis=1, )
paddle.concat(list[Tensor([52, 1, 3, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([52, 4, 0, 1, 5],"float32"),Tensor([52, 4, 0, 1, 2],"float32"),], axis=4, )
paddle.concat(list[Tensor([52, 4, 0, 1, 8],"float32"),Tensor([52, 4, 0, 1, 8],"float32"),Tensor([52, 4, 0, 1, 8],"float32"),], axis=2, )
paddle.concat(list[Tensor([52, 4, 0, 5, 1, 8],"float32"),Tensor([52, 4, 0, 5, 1, 8],"float32"),Tensor([52, 4, 0, 5, 1, 8],"float32"),], axis=2, )
paddle.concat(list[Tensor([52, 4, 0, 8],"float32"),Tensor([52, 4, 0, 8],"float32"),Tensor([52, 4, 0, 8],"float32"),], axis=2, )
paddle.concat(list[Tensor([52, 4, 1, 0, 1, 8],"float32"),Tensor([52, 4, 3, 0, 1, 8],"float32"),Tensor([52, 4, 1, 0, 1, 8],"float32"),], axis=2, )
paddle.concat(list[Tensor([52, 4, 1, 0, 8],"float32"),Tensor([52, 4, 3, 0, 8],"float32"),Tensor([52, 4, 1, 0, 8],"float32"),], axis=2, )
paddle.concat(list[Tensor([52, 4, 1, 0],"float32"),Tensor([52, 4, 5, 0],"float32"),Tensor([52, 4, 1, 0],"float32"),], axis=2, )
paddle.concat(list[Tensor([52, 4, 1, 1, 0],"float32"),Tensor([52, 4, 3, 1, 0],"float32"),Tensor([52, 4, 1, 1, 0],"float32"),], axis=2, )
paddle.concat(list[Tensor([52, 4, 1, 5, 0, 8],"float32"),Tensor([52, 4, 3, 5, 0, 8],"float32"),Tensor([52, 4, 1, 5, 0, 8],"float32"),], axis=2, )
paddle.concat(list[Tensor([52, 4, 1, 5, 1, 0],"float32"),Tensor([52, 4, 3, 5, 1, 0],"float32"),Tensor([52, 4, 1, 5, 1, 0],"float32"),], axis=2, )
paddle.concat(list[Tensor([52, 4, 5, 0, 5],"float32"),Tensor([52, 4, 5, 0, 2],"float32"),], axis=4, )
paddle.concat(list[Tensor([52, 4, 5, 1, 0],"float32"),Tensor([52, 4, 5, 1, 0],"float32"),], axis=4, )
paddle.concat(list[Tensor([52, 5, 0, 1],"float32"),Tensor([52, 5, 0, 3],"float32"),Tensor([52, 5, 0, 1],"float32"),], axis=3, )
paddle.concat(list[Tensor([52, 5, 1, 0],"float32"),Tensor([52, 5, 1, 0],"float32"),Tensor([52, 5, 1, 0],"float32"),], axis=3, )
paddle.concat(list[Tensor([56, 0, 16, 16],"float32"),Tensor([56, 0, 16, 16],"float32"),Tensor([56, 0, 16, 16],"float32"),], 1, )
paddle.concat(list[Tensor([56, 0, 2, 2],"float32"),Tensor([56, 0, 2, 2],"float32"),Tensor([56, 0, 2, 2],"float32"),], 1, )
paddle.concat(list[Tensor([56, 3, 0, 16],"float32"),Tensor([56, 3, 0, 16],"float32"),Tensor([56, 2, 0, 16],"float32"),], 1, )
paddle.concat(list[Tensor([56, 3, 0, 2],"float32"),Tensor([56, 3, 0, 2],"float32"),Tensor([56, 2, 0, 2],"float32"),], 1, )
paddle.concat(list[Tensor([56, 3, 16, 0],"float32"),Tensor([56, 3, 16, 0],"float32"),Tensor([56, 2, 16, 0],"float32"),], 1, )
paddle.concat(list[Tensor([56, 3, 2, 0],"float32"),Tensor([56, 3, 2, 0],"float32"),Tensor([56, 2, 2, 0],"float32"),], 1, )
paddle.concat(list[Tensor([60000, 0],"bool"),Tensor([60000, 0],"bool"),Tensor([60000, 0],"bool"),Tensor([60000, 0],"bool"),Tensor([60000, 0],"bool"),Tensor([60000, 0],"bool"),Tensor([60000, 0],"bool"),Tensor([60000, 0],"bool"),Tensor([60000, 0],"bool"),Tensor([60000, 0],"bool"),Tensor([60000, 0],"bool"),Tensor([60000, 0],"bool"),Tensor([60000, 0],"bool"),Tensor([60000, 0],"bool"),Tensor([60000, 0],"bool"),Tensor([60000, 0],"bool"),Tensor([60000, 0],"bool"),Tensor([60000, 0],"bool"),Tensor([60000, 0],"bool"),Tensor([60000, 0],"bool"),Tensor([60000, 0],"bool"),Tensor([60000, 0],"bool"),Tensor([60000, 0],"bool"),Tensor([60000, 0],"bool"),Tensor([60000, 0],"bool"),Tensor([60000, 0],"bool"),Tensor([60000, 0],"bool"),Tensor([60000, 0],"bool"),Tensor([60000, 0],"bool"),Tensor([60000, 0],"bool"),Tensor([60000, 0],"bool"),Tensor([60000, 0],"bool"),Tensor([60000, 0],"bool"),Tensor([60000, 0],"bool"),Tensor([60000, 0],"bool"),Tensor([60000, 0],"bool"),Tensor([60000, 0],"bool"),Tensor([60000, 0],"bool"),Tensor([60000, 0],"bool"),Tensor([60000, 0],"bool"),Tensor([60000, 0],"bool"),Tensor([60000, 0],"bool"),Tensor([60000, 0],"bool"),Tensor([60000, 0],"bool"),Tensor([60000, 0],"bool"),Tensor([60000, 0],"bool"),Tensor([60000, 0],"bool"),Tensor([60000, 0],"bool"),Tensor([60000, 0],"bool"),Tensor([60000, 0],"bool"),], axis=1, )
paddle.concat(list[Tensor([64, 0, 56, 56],"float32"),Tensor([64, 0, 56, 56],"float32"),Tensor([64, 0, 56, 56],"float32"),Tensor([64, 0, 56, 56],"float32"),Tensor([64, 0, 56, 56],"float32"),Tensor([64, 0, 56, 56],"float32"),Tensor([64, 0, 56, 56],"float32"),Tensor([64, 0, 56, 56],"float32"),], axis=1, )
paddle.concat(list[Tensor([64, 0, 7, 7],"float32"),Tensor([64, 0, 7, 7],"float32"),Tensor([64, 0, 7, 7],"float32"),Tensor([64, 0, 7, 7],"float32"),Tensor([64, 0, 7, 7],"float32"),Tensor([64, 0, 7, 7],"float32"),Tensor([64, 0, 7, 7],"float32"),Tensor([64, 0, 7, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([64, 0],"float32"),Tensor([64, 0],"float32"),], 0, )
paddle.concat(list[Tensor([64, 0],"float32"),Tensor([64, 0],"float32"),Tensor([64, 0],"float32"),Tensor([64, 0],"float32"),], 0, )
paddle.concat(list[Tensor([64, 0],"float32"),Tensor([64, 0],"float32"),Tensor([64, 0],"float32"),Tensor([64, 0],"float32"),Tensor([64, 0],"float32"),Tensor([64, 0],"float32"),Tensor([64, 0],"float32"),Tensor([64, 0],"float32"),], 0, )
paddle.concat(list[Tensor([64, 1280, 0, 7],"float32"),Tensor([64, 288, 0, 7],"float32"),Tensor([64, 288, 0, 7],"float32"),Tensor([64, 288, 0, 7],"float32"),Tensor([64, 288, 0, 7],"float32"),Tensor([64, 288, 0, 7],"float32"),Tensor([64, 288, 0, 7],"float32"),Tensor([64, 288, 0, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([64, 1280, 7, 0],"float32"),Tensor([64, 288, 7, 0],"float32"),Tensor([64, 288, 7, 0],"float32"),Tensor([64, 288, 7, 0],"float32"),Tensor([64, 288, 7, 0],"float32"),Tensor([64, 288, 7, 0],"float32"),Tensor([64, 288, 7, 0],"float32"),Tensor([64, 288, 7, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([64, 160, 0, 56],"float32"),Tensor([64, 192, 0, 56],"float32"),Tensor([64, 192, 0, 56],"float32"),Tensor([64, 192, 0, 56],"float32"),Tensor([64, 192, 0, 56],"float32"),Tensor([64, 192, 0, 56],"float32"),Tensor([64, 192, 0, 56],"float32"),Tensor([64, 192, 0, 56],"float32"),], axis=1, )
paddle.concat(list[Tensor([64, 160, 56, 0],"float32"),Tensor([64, 192, 56, 0],"float32"),Tensor([64, 192, 56, 0],"float32"),Tensor([64, 192, 56, 0],"float32"),Tensor([64, 192, 56, 0],"float32"),Tensor([64, 192, 56, 0],"float32"),Tensor([64, 192, 56, 0],"float32"),Tensor([64, 192, 56, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([8, 0, 128, 64],"float32"),Tensor([8, 0, 1, 64],"float32"),], axis=-2, )
paddle.concat(list[Tensor([8, 16, 0, 64],"float32"),Tensor([8, 16, 0, 64],"float32"),], axis=-2, )
paddle.concat(list[Tensor([8, 16, 128, 0],"float32"),Tensor([8, 16, 1, 0],"float32"),], axis=-2, )
paddle.concat(list[Tensor([8141, 0],"int32"),Tensor([7974, 0],"int32"),Tensor([7485, 0],"int32"),Tensor([5551, 0],"int32"),], axis=0, )
paddle.concat(tuple(Tensor([0, 1, 192],"float32"),Tensor([0, 576, 192],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([0, 1, 2, 4],"float32"),Tensor([0, 1, 2, 4],"float32"),), axis=-1, )
paddle.concat(tuple(Tensor([0, 1, 20, 2],"float32"),Tensor([0, 1, 20, 20],"float32"),), axis=-1, )
paddle.concat(tuple(Tensor([0, 1, 256],"float32"),Tensor([0, 108, 256],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([0, 1, 32],"float32"),Tensor([0, 1, 32],"float32"),Tensor([0, 1, 32],"float32"),Tensor([0, 1, 32],"float32"),Tensor([0, 1, 32],"float32"),Tensor([0, 1, 32],"float32"),Tensor([0, 1, 32],"float32"),Tensor([0, 1, 32],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([0, 1, 8, 4],"float32"),Tensor([0, 1, 8, 4],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([0, 1],"bool"),Tensor([0, 1],"bool"),), axis=1, )
paddle.concat(tuple(Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([0, 1],"int64"),Tensor([0, 1],"int64"),), axis=0, )
paddle.concat(tuple(Tensor([0, 1],"int64"),Tensor([0, 1],"int64"),), axis=-1, )
paddle.concat(tuple(Tensor([0, 10, 8, 128],"float32"),Tensor([0, 10, 8, 128],"float32"),), axis=3, )
paddle.concat(tuple(Tensor([0, 10, 8, 2],"float32"),Tensor([0, 10, 8, 2],"float32"),), -1, )
paddle.concat(tuple(Tensor([0, 10],"bool"),Tensor([0, 1],"bool"),), axis=1, )
paddle.concat(tuple(Tensor([0, 10],"int64"),Tensor([0, 1],"int64"),), axis=-1, )
paddle.concat(tuple(Tensor([0, 1024, 7, 7],"float16"),Tensor([0, 1024, 7, 7],"float16"),Tensor([0, 512, 7, 7],"float16"),), 1, )
paddle.concat(tuple(Tensor([0, 1024, 7, 7],"float32"),Tensor([0, 1024, 7, 7],"float32"),Tensor([0, 512, 7, 7],"float32"),), 1, )
paddle.concat(tuple(Tensor([0, 112, 14, 14],"float16"),Tensor([0, 112, 14, 14],"float16"),Tensor([0, 112, 14, 14],"float16"),), axis=1, )
paddle.concat(tuple(Tensor([0, 112, 14, 14],"float32"),Tensor([0, 112, 14, 14],"float32"),Tensor([0, 112, 14, 14],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([0, 12, 9, 128],"float32"),Tensor([0, 12, 9, 128],"float32"),), axis=3, )
paddle.concat(tuple(Tensor([0, 12, 9, 2],"float32"),Tensor([0, 12, 9, 2],"float32"),), -1, )
paddle.concat(tuple(Tensor([0, 12],"float64"),), 1, )
paddle.concat(tuple(Tensor([0, 120, 14, 14],"float16"),Tensor([0, 120, 14, 14],"float16"),Tensor([0, 120, 14, 14],"float16"),Tensor([0, 120, 14, 14],"float16"),), axis=1, )
paddle.concat(tuple(Tensor([0, 188, 1, 1, 2, 6],"float32"),Tensor([0, 188, 1, 1, 2, 1],"float32"),), axis=-1, )
paddle.concat(tuple(Tensor([0, 188, 1, 1, 3],"float32"),Tensor([0, 188, 1, 1, 3],"float32"),), axis=-1, )
paddle.concat(tuple(Tensor([0, 2, 128, 128],"float32"),Tensor([0, 1, 128, 128],"float32"),Tensor([0, 3, 128, 128],"float32"),Tensor([0, 2, 128, 128],"float32"),Tensor([0, 2, 128, 128],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([0, 2, 2, 128],"float16"),Tensor([0, 2, 2, 128],"float16"),), axis=0, )
paddle.concat(tuple(Tensor([0, 2, 248, 216],"float32"),Tensor([0, 1, 248, 216],"float32"),Tensor([0, 3, 248, 216],"float32"),Tensor([0, 2, 248, 216],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([0, 2, 8, 4],"float32"),Tensor([0, 1, 8, 4],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([0, 2],"float16"),Tensor([0, 2],"float16"),), 1, )
paddle.concat(tuple(Tensor([0, 20, 2],"float32"),Tensor([0, 20, 20],"float32"),), axis=-1, )
paddle.concat(tuple(Tensor([0, 256, 28, 28],"float16"),Tensor([0, 256, 28, 28],"float16"),Tensor([0, 128, 28, 28],"float16"),Tensor([0, 256, 28, 28],"float16"),Tensor([0, 256, 28, 28],"float16"),), 1, )
paddle.concat(tuple(Tensor([0, 256, 28, 28],"float32"),Tensor([0, 256, 28, 28],"float32"),Tensor([0, 128, 28, 28],"float32"),Tensor([0, 256, 28, 28],"float32"),Tensor([0, 256, 28, 28],"float32"),), 1, )
paddle.concat(tuple(Tensor([0, 26, 512],"float32"),Tensor([0, 26, 512],"float32"),Tensor([0, 26, 512],"float32"),), 2, )
paddle.concat(tuple(Tensor([0, 280, 376, 25, 2],"float32"),Tensor([0, 280, 376, 25, 1],"float32"),), axis=-1, )
paddle.concat(tuple(Tensor([0, 3, 256, 256],"float32"),Tensor([0, 3, 256, 256],"float32"),), 1, )
paddle.concat(tuple(Tensor([0, 3, 32, 32],"float32"),Tensor([0, 3, 32, 32],"float32"),), 1, )
paddle.concat(tuple(Tensor([0, 3],"float64"),), 1, )
paddle.concat(tuple(Tensor([0, 3],"float64"),Tensor([0, 3],"float64"),), 1, )
paddle.concat(tuple(Tensor([0, 4, 1, 8],"float32"),Tensor([0, 4, 1, 8],"float32"),), axis=-2, )
paddle.concat(tuple(Tensor([0, 4, 2, 8],"float32"),Tensor([0, 4, 1, 8],"float32"),), axis=-2, )
paddle.concat(tuple(Tensor([0, 4, 32],"float32"),Tensor([0, 4, 32],"float32"),), axis=-1, )
paddle.concat(tuple(Tensor([0, 512, 14, 14],"float16"),Tensor([0, 512, 14, 14],"float16"),Tensor([0, 256, 14, 14],"float16"),Tensor([0, 512, 14, 14],"float16"),Tensor([0, 512, 14, 14],"float16"),Tensor([0, 512, 14, 14],"float16"),Tensor([0, 512, 14, 14],"float16"),), 1, )
paddle.concat(tuple(Tensor([0, 512, 14, 14],"float16"),Tensor([0, 512, 14, 14],"float16"),Tensor([0, 512, 14, 14],"float16"),Tensor([0, 512, 14, 14],"float16"),), 1, )
paddle.concat(tuple(Tensor([0, 512, 14, 14],"float32"),Tensor([0, 512, 14, 14],"float32"),Tensor([0, 256, 14, 14],"float32"),Tensor([0, 512, 14, 14],"float32"),Tensor([0, 512, 14, 14],"float32"),Tensor([0, 512, 14, 14],"float32"),Tensor([0, 512, 14, 14],"float32"),), 1, )
paddle.concat(tuple(Tensor([0, 512, 14, 14],"float32"),Tensor([0, 512, 14, 14],"float32"),Tensor([0, 512, 14, 14],"float32"),Tensor([0, 512, 14, 14],"float32"),), 1, )
paddle.concat(tuple(Tensor([0, 7, 16],"float32"),Tensor([0, 7, 16],"float32"),), 2, )
paddle.concat(tuple(Tensor([0, 7, 32],"float32"),Tensor([0, 7, 32],"float32"),Tensor([0, 7, 32],"float32"),), axis=2, )
paddle.concat(tuple(Tensor([0, 7, 4],"float32"),Tensor([0, 7, 4],"float32"),), axis=2, )
paddle.concat(tuple(Tensor([0, 768],"float32"),Tensor([0, 768],"float32"),), axis=0, )
paddle.concat(tuple(Tensor([0],"float32"),), )
paddle.concat(tuple(Tensor([0],"float32"),Tensor([0],"float32"),), )
paddle.concat(tuple(Tensor([0],"float64"),), )
paddle.concat(tuple(Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),), )
paddle.concat(tuple(Tensor([0],"int32"),Tensor([0],"int32"),), axis=0, )
paddle.concat(tuple(Tensor([0],"int64"),Tensor([0],"int64"),), axis=0, )
paddle.concat(tuple(Tensor([1, 0, 1, 8],"float32"),Tensor([1, 0, 1, 8],"float32"),), axis=-2, )
paddle.concat(tuple(Tensor([1, 0, 192],"float32"),Tensor([1, 0, 192],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([1, 0, 2, 4],"float32"),Tensor([1, 0, 2, 4],"float32"),), axis=-1, )
paddle.concat(tuple(Tensor([1, 0, 2, 8],"float32"),Tensor([1, 0, 1, 8],"float32"),), axis=-2, )
paddle.concat(tuple(Tensor([1, 0, 2],"float32"),Tensor([1, 0, 20],"float32"),), axis=-1, )
paddle.concat(tuple(Tensor([1, 0, 20, 2],"float32"),Tensor([1, 0, 20, 20],"float32"),), axis=-1, )
paddle.concat(tuple(Tensor([1, 0, 256, 256],"float32"),Tensor([1, 0, 256, 256],"float32"),), 1, )
paddle.concat(tuple(Tensor([1, 0, 256],"float32"),Tensor([1, 0, 256],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([1, 0, 8, 128],"float32"),Tensor([1, 0, 8, 128],"float32"),), axis=3, )
paddle.concat(tuple(Tensor([1, 0, 8, 2],"float32"),Tensor([1, 0, 8, 2],"float32"),), -1, )
paddle.concat(tuple(Tensor([1, 0, 8, 4],"float32"),Tensor([1, 0, 8, 4],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([1, 0, 9, 128],"float32"),Tensor([1, 0, 9, 128],"float32"),), axis=3, )
paddle.concat(tuple(Tensor([1, 0, 9, 2],"float32"),Tensor([1, 0, 9, 2],"float32"),), -1, )
paddle.concat(tuple(Tensor([1, 0],"bool"),Tensor([1, 0],"bool"),), axis=1, )
paddle.concat(tuple(Tensor([1, 0],"float32"),Tensor([1, 0],"float32"),), axis=0, )
paddle.concat(tuple(Tensor([1, 0],"int64"),Tensor([1, 0],"int64"),), axis=0, )
paddle.concat(tuple(Tensor([1, 0],"int64"),Tensor([1, 0],"int64"),), axis=-1, )
paddle.concat(tuple(Tensor([1, 1, 0, 2],"float32"),Tensor([1, 1, 0, 20],"float32"),), axis=-1, )
paddle.concat(tuple(Tensor([1, 1, 0, 4],"float32"),Tensor([1, 1, 0, 4],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([1, 1, 0, 4],"float32"),Tensor([1, 1, 0, 4],"float32"),), axis=-1, )
paddle.concat(tuple(Tensor([1, 1, 0],"float32"),Tensor([1, 108, 0],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([1, 1, 0],"float32"),Tensor([1, 576, 0],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([1, 1, 2, 0],"float32"),Tensor([1, 1, 2, 0],"float32"),), axis=-1, )
paddle.concat(tuple(Tensor([1, 1, 20, 0],"float32"),Tensor([1, 1, 20, 0],"float32"),), axis=-1, )
paddle.concat(tuple(Tensor([1, 1, 8, 0],"float32"),Tensor([1, 1, 8, 0],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([1, 10, 0, 128],"float32"),Tensor([1, 10, 0, 128],"float32"),), axis=3, )
paddle.concat(tuple(Tensor([1, 10, 0, 2],"float32"),Tensor([1, 10, 0, 2],"float32"),), -1, )
paddle.concat(tuple(Tensor([1, 10, 8, 0],"float32"),Tensor([1, 10, 8, 0],"float32"),), -1, )
paddle.concat(tuple(Tensor([1, 10, 8, 0],"float32"),Tensor([1, 10, 8, 0],"float32"),), axis=3, )
paddle.concat(tuple(Tensor([1, 12, 0, 128],"float32"),Tensor([1, 12, 0, 128],"float32"),), axis=3, )
paddle.concat(tuple(Tensor([1, 12, 0, 2],"float32"),Tensor([1, 12, 0, 2],"float32"),), -1, )
paddle.concat(tuple(Tensor([1, 12, 9, 0],"float32"),Tensor([1, 12, 9, 0],"float32"),), -1, )
paddle.concat(tuple(Tensor([1, 12, 9, 0],"float32"),Tensor([1, 12, 9, 0],"float32"),), axis=3, )
paddle.concat(tuple(Tensor([1, 2, 0, 4],"float32"),Tensor([1, 1, 0, 4],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([1, 2, 8, 0],"float32"),Tensor([1, 1, 8, 0],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([1, 20, 0],"float32"),Tensor([1, 20, 0],"float32"),), axis=-1, )
paddle.concat(tuple(Tensor([1, 3, 0, 256],"float32"),Tensor([1, 3, 0, 256],"float32"),), 1, )
paddle.concat(tuple(Tensor([1, 3, 256, 0],"float32"),Tensor([1, 3, 256, 0],"float32"),), 1, )
paddle.concat(tuple(Tensor([1, 4, 0, 8],"float32"),Tensor([1, 4, 0, 8],"float32"),), axis=-2, )
paddle.concat(tuple(Tensor([1, 4, 1, 0],"float32"),Tensor([1, 4, 1, 0],"float32"),), axis=-2, )
paddle.concat(tuple(Tensor([1, 4, 2, 0],"float32"),Tensor([1, 4, 1, 0],"float32"),), axis=-2, )
paddle.concat(tuple(Tensor([100, 0, 2, 128],"float16"),Tensor([1, 0, 2, 128],"float16"),), axis=0, )
paddle.concat(tuple(Tensor([100, 2, 0, 128],"float16"),Tensor([1, 2, 0, 128],"float16"),), axis=0, )
paddle.concat(tuple(Tensor([100, 2, 2, 0],"float16"),Tensor([1, 2, 2, 0],"float16"),), axis=0, )
paddle.concat(tuple(Tensor([101, 0, 2, 128],"float16"),Tensor([1, 0, 2, 128],"float16"),), axis=0, )
paddle.concat(tuple(Tensor([101, 2, 0, 128],"float16"),Tensor([1, 2, 0, 128],"float16"),), axis=0, )
paddle.concat(tuple(Tensor([101, 2, 2, 0],"float16"),Tensor([1, 2, 2, 0],"float16"),), axis=0, )
paddle.concat(tuple(Tensor([13, 0, 16],"float32"),Tensor([13, 0, 16],"float32"),), 2, )
paddle.concat(tuple(Tensor([13, 0, 32],"float32"),Tensor([13, 0, 32],"float32"),Tensor([13, 0, 32],"float32"),), axis=2, )
paddle.concat(tuple(Tensor([13, 0, 32],"float32"),Tensor([13, 0, 32],"float32"),Tensor([13, 0, 32],"float32"),Tensor([13, 0, 32],"float32"),Tensor([13, 0, 32],"float32"),Tensor([13, 0, 32],"float32"),Tensor([13, 0, 32],"float32"),Tensor([13, 0, 32],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([13, 0, 4],"float32"),Tensor([13, 0, 4],"float32"),), axis=2, )
paddle.concat(tuple(Tensor([13, 1, 0],"float32"),Tensor([13, 1, 0],"float32"),Tensor([13, 1, 0],"float32"),Tensor([13, 1, 0],"float32"),Tensor([13, 1, 0],"float32"),Tensor([13, 1, 0],"float32"),Tensor([13, 1, 0],"float32"),Tensor([13, 1, 0],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([13, 7, 0],"float32"),Tensor([13, 7, 0],"float32"),), 2, )
paddle.concat(tuple(Tensor([13, 7, 0],"float32"),Tensor([13, 7, 0],"float32"),), axis=2, )
paddle.concat(tuple(Tensor([13, 7, 0],"float32"),Tensor([13, 7, 0],"float32"),Tensor([13, 7, 0],"float32"),), axis=2, )
paddle.concat(tuple(Tensor([140, 0, 1, 1, 2, 6],"float32"),Tensor([140, 0, 1, 1, 2, 1],"float32"),), axis=-1, )
paddle.concat(tuple(Tensor([140, 0, 1, 1, 3],"float32"),Tensor([140, 0, 1, 1, 3],"float32"),), axis=-1, )
paddle.concat(tuple(Tensor([140, 188, 0, 1, 2, 6],"float32"),Tensor([140, 188, 0, 1, 2, 1],"float32"),), axis=-1, )
paddle.concat(tuple(Tensor([140, 188, 0, 1, 3],"float32"),Tensor([140, 188, 0, 1, 3],"float32"),), axis=-1, )
paddle.concat(tuple(Tensor([140, 188, 1, 0, 2, 6],"float32"),Tensor([140, 188, 1, 0, 2, 1],"float32"),), axis=-1, )
paddle.concat(tuple(Tensor([140, 188, 1, 0, 3],"float32"),Tensor([140, 188, 1, 0, 3],"float32"),), axis=-1, )
paddle.concat(tuple(Tensor([140, 188, 1, 1, 0, 6],"float32"),Tensor([140, 188, 1, 1, 0, 1],"float32"),), axis=-1, )
paddle.concat(tuple(Tensor([140, 188, 1, 1, 0],"float32"),Tensor([140, 188, 1, 1, 0],"float32"),), axis=-1, )
paddle.concat(tuple(Tensor([140, 188, 1, 1, 2, 0],"float32"),Tensor([140, 188, 1, 1, 2, 0],"float32"),), axis=-1, )
paddle.concat(tuple(Tensor([2, 0, 32, 32],"float32"),Tensor([2, 0, 32, 32],"float32"),), 1, )
paddle.concat(tuple(Tensor([2, 0, 32],"float32"),Tensor([2, 0, 32],"float32"),), axis=-1, )
paddle.concat(tuple(Tensor([2, 0],"float64"),), 1, )
paddle.concat(tuple(Tensor([2, 3, 0, 32],"float32"),Tensor([2, 3, 0, 32],"float32"),), 1, )
paddle.concat(tuple(Tensor([2, 3, 32, 0],"float32"),Tensor([2, 3, 32, 0],"float32"),), 1, )
paddle.concat(tuple(Tensor([2, 4, 0],"float32"),Tensor([2, 4, 0],"float32"),), axis=-1, )
paddle.concat(tuple(Tensor([3, 0],"float64"),Tensor([3, 0],"float64"),), 1, )
paddle.concat(tuple(Tensor([385, 0],"float16"),Tensor([385, 0],"float16"),), 1, )
paddle.concat(tuple(Tensor([4, 0, 128, 128],"float32"),Tensor([4, 0, 128, 128],"float32"),Tensor([4, 0, 128, 128],"float32"),Tensor([4, 0, 128, 128],"float32"),Tensor([4, 0, 128, 128],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([4, 0, 248, 216],"float32"),Tensor([4, 0, 248, 216],"float32"),Tensor([4, 0, 248, 216],"float32"),Tensor([4, 0, 248, 216],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([4, 0, 376, 25, 2],"float32"),Tensor([4, 0, 376, 25, 1],"float32"),), axis=-1, )
paddle.concat(tuple(Tensor([4, 0],"float32"),Tensor([4, 0],"float32"),Tensor([4, 0],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([4, 2, 0, 128],"float32"),Tensor([4, 1, 0, 128],"float32"),Tensor([4, 3, 0, 128],"float32"),Tensor([4, 2, 0, 128],"float32"),Tensor([4, 2, 0, 128],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([4, 2, 0, 216],"float32"),Tensor([4, 1, 0, 216],"float32"),Tensor([4, 3, 0, 216],"float32"),Tensor([4, 2, 0, 216],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([4, 2, 128, 0],"float32"),Tensor([4, 1, 128, 0],"float32"),Tensor([4, 3, 128, 0],"float32"),Tensor([4, 2, 128, 0],"float32"),Tensor([4, 2, 128, 0],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([4, 2, 248, 0],"float32"),Tensor([4, 1, 248, 0],"float32"),Tensor([4, 3, 248, 0],"float32"),Tensor([4, 2, 248, 0],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([4, 280, 0, 25, 2],"float32"),Tensor([4, 280, 0, 25, 1],"float32"),), axis=-1, )
paddle.concat(tuple(Tensor([4, 280, 376, 0, 2],"float32"),Tensor([4, 280, 376, 0, 1],"float32"),), axis=-1, )
paddle.concat(tuple(Tensor([4, 280, 376, 25, 0],"float32"),Tensor([4, 280, 376, 25, 0],"float32"),), axis=-1, )
paddle.concat(tuple(Tensor([52, 0, 4],"float32"),Tensor([52, 0, 4],"float32"),), axis=2, )
paddle.concat(tuple(Tensor([52, 7, 0],"float32"),Tensor([52, 7, 0],"float32"),), axis=2, )
paddle.concat(tuple(Tensor([64, 0, 14, 14],"float16"),Tensor([64, 0, 14, 14],"float16"),Tensor([64, 0, 14, 14],"float16"),), axis=1, )
paddle.concat(tuple(Tensor([64, 0, 14, 14],"float16"),Tensor([64, 0, 14, 14],"float16"),Tensor([64, 0, 14, 14],"float16"),Tensor([64, 0, 14, 14],"float16"),), 1, )
paddle.concat(tuple(Tensor([64, 0, 14, 14],"float16"),Tensor([64, 0, 14, 14],"float16"),Tensor([64, 0, 14, 14],"float16"),Tensor([64, 0, 14, 14],"float16"),), axis=1, )
paddle.concat(tuple(Tensor([64, 0, 14, 14],"float16"),Tensor([64, 0, 14, 14],"float16"),Tensor([64, 0, 14, 14],"float16"),Tensor([64, 0, 14, 14],"float16"),Tensor([64, 0, 14, 14],"float16"),Tensor([64, 0, 14, 14],"float16"),Tensor([64, 0, 14, 14],"float16"),), 1, )
paddle.concat(tuple(Tensor([64, 0, 14, 14],"float32"),Tensor([64, 0, 14, 14],"float32"),Tensor([64, 0, 14, 14],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([64, 0, 14, 14],"float32"),Tensor([64, 0, 14, 14],"float32"),Tensor([64, 0, 14, 14],"float32"),Tensor([64, 0, 14, 14],"float32"),), 1, )
paddle.concat(tuple(Tensor([64, 0, 14, 14],"float32"),Tensor([64, 0, 14, 14],"float32"),Tensor([64, 0, 14, 14],"float32"),Tensor([64, 0, 14, 14],"float32"),Tensor([64, 0, 14, 14],"float32"),Tensor([64, 0, 14, 14],"float32"),Tensor([64, 0, 14, 14],"float32"),), 1, )
paddle.concat(tuple(Tensor([64, 0, 28, 28],"float16"),Tensor([64, 0, 28, 28],"float16"),Tensor([64, 0, 28, 28],"float16"),Tensor([64, 0, 28, 28],"float16"),Tensor([64, 0, 28, 28],"float16"),), 1, )
paddle.concat(tuple(Tensor([64, 0, 28, 28],"float32"),Tensor([64, 0, 28, 28],"float32"),Tensor([64, 0, 28, 28],"float32"),Tensor([64, 0, 28, 28],"float32"),Tensor([64, 0, 28, 28],"float32"),), 1, )
paddle.concat(tuple(Tensor([64, 0, 512],"float32"),Tensor([64, 0, 512],"float32"),Tensor([64, 0, 512],"float32"),), 2, )
paddle.concat(tuple(Tensor([64, 0, 7, 7],"float16"),Tensor([64, 0, 7, 7],"float16"),Tensor([64, 0, 7, 7],"float16"),), 1, )
paddle.concat(tuple(Tensor([64, 0, 7, 7],"float32"),Tensor([64, 0, 7, 7],"float32"),Tensor([64, 0, 7, 7],"float32"),), 1, )
paddle.concat(tuple(Tensor([64, 1024, 0, 7],"float16"),Tensor([64, 1024, 0, 7],"float16"),Tensor([64, 512, 0, 7],"float16"),), 1, )
paddle.concat(tuple(Tensor([64, 1024, 0, 7],"float32"),Tensor([64, 1024, 0, 7],"float32"),Tensor([64, 512, 0, 7],"float32"),), 1, )
paddle.concat(tuple(Tensor([64, 1024, 7, 0],"float16"),Tensor([64, 1024, 7, 0],"float16"),Tensor([64, 512, 7, 0],"float16"),), 1, )
paddle.concat(tuple(Tensor([64, 1024, 7, 0],"float32"),Tensor([64, 1024, 7, 0],"float32"),Tensor([64, 512, 7, 0],"float32"),), 1, )
paddle.concat(tuple(Tensor([64, 112, 0, 14],"float16"),Tensor([64, 112, 0, 14],"float16"),Tensor([64, 112, 0, 14],"float16"),), axis=1, )
paddle.concat(tuple(Tensor([64, 112, 0, 14],"float32"),Tensor([64, 112, 0, 14],"float32"),Tensor([64, 112, 0, 14],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([64, 112, 14, 0],"float16"),Tensor([64, 112, 14, 0],"float16"),Tensor([64, 112, 14, 0],"float16"),), axis=1, )
paddle.concat(tuple(Tensor([64, 112, 14, 0],"float32"),Tensor([64, 112, 14, 0],"float32"),Tensor([64, 112, 14, 0],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([64, 120, 0, 14],"float16"),Tensor([64, 120, 0, 14],"float16"),Tensor([64, 120, 0, 14],"float16"),Tensor([64, 120, 0, 14],"float16"),), axis=1, )
paddle.concat(tuple(Tensor([64, 120, 14, 0],"float16"),Tensor([64, 120, 14, 0],"float16"),Tensor([64, 120, 14, 0],"float16"),Tensor([64, 120, 14, 0],"float16"),), axis=1, )
paddle.concat(tuple(Tensor([64, 256, 0, 28],"float16"),Tensor([64, 256, 0, 28],"float16"),Tensor([64, 128, 0, 28],"float16"),Tensor([64, 256, 0, 28],"float16"),Tensor([64, 256, 0, 28],"float16"),), 1, )
paddle.concat(tuple(Tensor([64, 256, 0, 28],"float32"),Tensor([64, 256, 0, 28],"float32"),Tensor([64, 128, 0, 28],"float32"),Tensor([64, 256, 0, 28],"float32"),Tensor([64, 256, 0, 28],"float32"),), 1, )
paddle.concat(tuple(Tensor([64, 256, 28, 0],"float16"),Tensor([64, 256, 28, 0],"float16"),Tensor([64, 128, 28, 0],"float16"),Tensor([64, 256, 28, 0],"float16"),Tensor([64, 256, 28, 0],"float16"),), 1, )
paddle.concat(tuple(Tensor([64, 256, 28, 0],"float32"),Tensor([64, 256, 28, 0],"float32"),Tensor([64, 128, 28, 0],"float32"),Tensor([64, 256, 28, 0],"float32"),Tensor([64, 256, 28, 0],"float32"),), 1, )
paddle.concat(tuple(Tensor([64, 26, 0],"float32"),Tensor([64, 26, 0],"float32"),Tensor([64, 26, 0],"float32"),), 2, )
paddle.concat(tuple(Tensor([64, 512, 0, 14],"float16"),Tensor([64, 512, 0, 14],"float16"),Tensor([64, 256, 0, 14],"float16"),Tensor([64, 512, 0, 14],"float16"),Tensor([64, 512, 0, 14],"float16"),Tensor([64, 512, 0, 14],"float16"),Tensor([64, 512, 0, 14],"float16"),), 1, )
paddle.concat(tuple(Tensor([64, 512, 0, 14],"float16"),Tensor([64, 512, 0, 14],"float16"),Tensor([64, 512, 0, 14],"float16"),Tensor([64, 512, 0, 14],"float16"),), 1, )
paddle.concat(tuple(Tensor([64, 512, 0, 14],"float32"),Tensor([64, 512, 0, 14],"float32"),Tensor([64, 256, 0, 14],"float32"),Tensor([64, 512, 0, 14],"float32"),Tensor([64, 512, 0, 14],"float32"),Tensor([64, 512, 0, 14],"float32"),Tensor([64, 512, 0, 14],"float32"),), 1, )
paddle.concat(tuple(Tensor([64, 512, 0, 14],"float32"),Tensor([64, 512, 0, 14],"float32"),Tensor([64, 512, 0, 14],"float32"),Tensor([64, 512, 0, 14],"float32"),), 1, )
paddle.concat(tuple(Tensor([64, 512, 14, 0],"float16"),Tensor([64, 512, 14, 0],"float16"),Tensor([64, 256, 14, 0],"float16"),Tensor([64, 512, 14, 0],"float16"),Tensor([64, 512, 14, 0],"float16"),Tensor([64, 512, 14, 0],"float16"),Tensor([64, 512, 14, 0],"float16"),), 1, )
paddle.concat(tuple(Tensor([64, 512, 14, 0],"float16"),Tensor([64, 512, 14, 0],"float16"),Tensor([64, 512, 14, 0],"float16"),Tensor([64, 512, 14, 0],"float16"),), 1, )
paddle.concat(tuple(Tensor([64, 512, 14, 0],"float32"),Tensor([64, 512, 14, 0],"float32"),Tensor([64, 256, 14, 0],"float32"),Tensor([64, 512, 14, 0],"float32"),Tensor([64, 512, 14, 0],"float32"),Tensor([64, 512, 14, 0],"float32"),Tensor([64, 512, 14, 0],"float32"),), 1, )
paddle.concat(tuple(Tensor([64, 512, 14, 0],"float32"),Tensor([64, 512, 14, 0],"float32"),Tensor([64, 512, 14, 0],"float32"),Tensor([64, 512, 14, 0],"float32"),), 1, )
paddle.concat(tuple(Tensor([8, 0, 128, 128],"float32"),Tensor([8, 0, 128, 128],"float32"),Tensor([8, 0, 128, 128],"float32"),Tensor([8, 0, 128, 128],"float32"),Tensor([8, 0, 128, 128],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([8, 0, 512],"float32"),Tensor([8, 0, 512],"float32"),Tensor([8, 0, 512],"float32"),), 2, )
paddle.concat(tuple(Tensor([8, 2, 0, 128],"float32"),Tensor([8, 1, 0, 128],"float32"),Tensor([8, 3, 0, 128],"float32"),Tensor([8, 2, 0, 128],"float32"),Tensor([8, 2, 0, 128],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([8, 2, 128, 0],"float32"),Tensor([8, 1, 128, 0],"float32"),Tensor([8, 3, 128, 0],"float32"),Tensor([8, 2, 128, 0],"float32"),Tensor([8, 2, 128, 0],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([8, 26, 0],"float32"),Tensor([8, 26, 0],"float32"),Tensor([8, 26, 0],"float32"),), 2, )
paddle.concat(x=list[Tensor([0, 1024, 4, 14, 14],"float32"),Tensor([0, 256, 4, 14, 14],"float32"),], axis=1, name=None, )
paddle.concat(x=list[Tensor([0, 12, 1],"float32"),Tensor([0, 96, 1],"float32"),Tensor([0, 12, 1],"float32"),], axis=1, )
paddle.concat(x=list[Tensor([0, 1408],"float16"),Tensor([0, 1408],"float16"),], axis=-1, )
paddle.concat(x=list[Tensor([0, 16, 32],"float32"),Tensor([0, 16, 32],"float32"),], axis=2, )
paddle.concat(x=list[Tensor([0, 2048, 1, 1, 1],"float32"),Tensor([0, 256, 1, 1, 1],"float32"),], axis=1, )
paddle.concat(x=list[Tensor([0, 3],"float32"),Tensor([0, 3],"float32"),], axis=0, )
paddle.concat(x=list[Tensor([0, 8, 14, 12],"float32"),Tensor([0, 8, 14, 12],"float32"),], axis=0, )
paddle.concat(x=list[Tensor([1, 0, 14, 12],"float32"),Tensor([1, 0, 14, 12],"float32"),], axis=0, )
paddle.concat(x=list[Tensor([1, 0],"float32"),Tensor([1, 0],"float32"),], axis=0, )
paddle.concat(x=list[Tensor([1, 8, 0, 12],"float32"),Tensor([1, 8, 0, 12],"float32"),], axis=0, )
paddle.concat(x=list[Tensor([1, 8, 14, 0],"float32"),Tensor([1, 8, 14, 0],"float32"),], axis=0, )
paddle.concat(x=list[Tensor([13, 0, 1],"float32"),Tensor([13, 0, 1],"float32"),Tensor([13, 0, 1],"float32"),], axis=1, )
paddle.concat(x=list[Tensor([13, 12, 0],"float32"),Tensor([13, 96, 0],"float32"),Tensor([13, 12, 0],"float32"),], axis=1, )
paddle.concat(x=list[Tensor([16, 0, 32],"float32"),Tensor([16, 0, 32],"float32"),], axis=2, )
paddle.concat(x=list[Tensor([16, 16, 0],"float32"),Tensor([16, 16, 0],"float32"),], axis=2, )
paddle.concat(x=list[Tensor([2048, 0],"float16"),Tensor([2048, 0],"float16"),], axis=-1, )
paddle.concat(x=list[Tensor([8, 0, 1, 1, 1],"float32"),Tensor([8, 0, 1, 1, 1],"float32"),], axis=1, )
paddle.concat(x=list[Tensor([8, 0, 4, 14, 14],"float32"),Tensor([8, 0, 4, 14, 14],"float32"),], axis=1, name=None, )
paddle.concat(x=list[Tensor([8, 1024, 0, 14, 14],"float32"),Tensor([8, 256, 0, 14, 14],"float32"),], axis=1, name=None, )
paddle.concat(x=list[Tensor([8, 1024, 4, 0, 14],"float32"),Tensor([8, 256, 4, 0, 14],"float32"),], axis=1, name=None, )
paddle.concat(x=list[Tensor([8, 1024, 4, 14, 0],"float32"),Tensor([8, 256, 4, 14, 0],"float32"),], axis=1, name=None, )
paddle.concat(x=list[Tensor([8, 2048, 0, 1, 1],"float32"),Tensor([8, 256, 0, 1, 1],"float32"),], axis=1, )
paddle.concat(x=list[Tensor([8, 2048, 1, 0, 1],"float32"),Tensor([8, 256, 1, 0, 1],"float32"),], axis=1, )
paddle.concat(x=list[Tensor([8, 2048, 1, 1, 0],"float32"),Tensor([8, 256, 1, 1, 0],"float32"),], axis=1, )
paddle.concat(x=tuple(Tensor([0, 1, 1024],"float32"),Tensor([0, 256, 1024],"float32"),), axis=1, )
paddle.concat(x=tuple(Tensor([0, 1, 96, 32],"float32"),Tensor([0, 1, 96, 4],"float32"),), axis=3, )
paddle.concat(x=tuple(Tensor([0, 10, 56, 56],"float32"),Tensor([0, 30, 56, 56],"float32"),), axis=1, )
paddle.concat(x=tuple(Tensor([0, 16, 1, 64],"float32"),Tensor([0, 16, 256, 64],"float32"),), axis=-2, )
paddle.concat(x=tuple(Tensor([0, 3],"float32"),Tensor([0, 3],"float32"),), axis=0, )
paddle.concat(x=tuple(Tensor([0, 96, 1],"float32"),Tensor([0, 384, 1],"float32"),Tensor([0, 384, 1],"float32"),), axis=1, )
paddle.concat(x=tuple(Tensor([1, 0, 1, 64],"float32"),Tensor([1, 0, 256, 64],"float32"),), axis=-2, )
paddle.concat(x=tuple(Tensor([1, 0, 1024],"float32"),Tensor([1, 0, 1024],"float32"),), axis=1, )
paddle.concat(x=tuple(Tensor([1, 1, 0],"float32"),Tensor([1, 256, 0],"float32"),), axis=1, )
paddle.concat(x=tuple(Tensor([1, 16, 0, 64],"float32"),Tensor([1, 16, 0, 64],"float32"),), axis=-2, )
paddle.concat(x=tuple(Tensor([1, 16, 1, 0],"float32"),Tensor([1, 16, 256, 0],"float32"),), axis=-2, )
paddle.concat(x=tuple(Tensor([124, 0, 56, 56],"float32"),Tensor([124, 0, 56, 56],"float32"),), axis=1, )
paddle.concat(x=tuple(Tensor([124, 10, 0, 56],"float32"),Tensor([124, 30, 0, 56],"float32"),), axis=1, )
paddle.concat(x=tuple(Tensor([124, 10, 56, 0],"float32"),Tensor([124, 30, 56, 0],"float32"),), axis=1, )
paddle.concat(x=tuple(Tensor([13, 0, 1],"float32"),Tensor([13, 0, 1],"float32"),Tensor([13, 0, 1],"float32"),), axis=1, )
paddle.concat(x=tuple(Tensor([13, 0, 96, 32],"float32"),Tensor([13, 0, 96, 4],"float32"),), axis=3, )
paddle.concat(x=tuple(Tensor([13, 1, 0, 32],"float32"),Tensor([13, 1, 0, 4],"float32"),), axis=3, )
paddle.concat(x=tuple(Tensor([13, 1, 96, 0],"float32"),Tensor([13, 1, 96, 0],"float32"),), axis=3, )
paddle.concat(x=tuple(Tensor([13, 96, 0],"float32"),Tensor([13, 384, 0],"float32"),Tensor([13, 384, 0],"float32"),), axis=1, )
paddle.concat(x=tuple(Tensor([2, 0],"float32"),Tensor([2, 0],"float32"),), axis=0, )
paddle.cumulative_trapezoid(y=Tensor([0, 4],"float16"), x=Tensor([0, 4],"float16"), )
paddle.cumulative_trapezoid(y=Tensor([4, 0],"float16"), x=Tensor([4, 0],"float16"), )
paddle.diag(Tensor([0, 10],"float32"), offset=-1, )
paddle.diag(Tensor([10, 0],"float32"), offset=1, )
paddle.diag(x=Tensor([0, 3],"float64"), offset=-1, )
paddle.diag(x=Tensor([2, 0],"float64"), offset=2, )
paddle.diag(x=Tensor([3, 0],"float64"), offset=1, )
paddle.diagonal(Tensor([0, 2, 2],"float32"), offset=0, axis1=-1, axis2=-2, )
paddle.diagonal(Tensor([0, 3, 4],"float32"), )
paddle.diagonal(Tensor([0, 3, 4],"float32"), offset=0, axis1=1, axis2=2, )
paddle.diagonal(Tensor([0, 3, 4],"float32"), offset=0, axis1=2, axis2=1, )
paddle.diagonal(Tensor([0, 3, 4],"float32"), offset=1, axis1=0, axis2=1, )
paddle.diagonal(Tensor([1, 0, 2],"float32"), offset=0, axis1=-1, axis2=-2, )
paddle.diagonal(Tensor([1, 2, 0],"float32"), offset=0, axis1=-1, axis2=-2, )
paddle.diagonal(Tensor([10, 0, 4],"float32"), )
paddle.diagonal(Tensor([10, 0, 4],"float32"), offset=0, axis1=1, axis2=2, )
paddle.diagonal(Tensor([10, 0, 4],"float32"), offset=0, axis1=2, axis2=1, )
paddle.diagonal(Tensor([10, 0, 4],"float32"), offset=1, axis1=0, axis2=1, )
paddle.diagonal(Tensor([10, 3, 0],"float32"), )
paddle.diagonal(Tensor([10, 3, 0],"float32"), offset=0, axis1=1, axis2=2, )
paddle.diagonal(Tensor([10, 3, 0],"float32"), offset=0, axis1=2, axis2=1, )
paddle.diagonal(x=Tensor([0, 6, 6, 2, 2],"float64"), )
paddle.diagonal(x=Tensor([0, 6, 6, 2, 2],"float64"), axis1=0, axis2=3, )
paddle.diagonal(x=Tensor([0, 6, 6, 2, 2],"float64"), axis1=-1, axis2=2, )
paddle.diagonal(x=Tensor([0, 6, 6, 2, 2],"float64"), axis1=2, axis2=3, )
paddle.diagonal(x=Tensor([0, 6, 6, 2, 2],"float64"), axis1=3, axis2=4, )
paddle.diagonal(x=Tensor([0, 6, 6, 2, 2],"float64"), axis1=4, axis2=2, )
paddle.diagonal(x=Tensor([0, 6, 6, 6],"float64"), )
paddle.diagonal(x=Tensor([0, 6, 6],"float64"), )
paddle.diagonal(x=Tensor([0, 6],"float32"), )
paddle.diagonal(x=Tensor([0, 6],"float64"), offset=1, )
paddle.diagonal(x=Tensor([0, 6],"float64"), offset=-1, )
paddle.diagonal(x=Tensor([6, 0, 6, 2, 2],"float64"), )
paddle.diagonal(x=Tensor([6, 0, 6, 2, 2],"float64"), axis1=0, axis2=3, )
paddle.diagonal(x=Tensor([6, 0, 6, 2, 2],"float64"), axis1=-1, axis2=2, )
paddle.diagonal(x=Tensor([6, 0, 6, 2, 2],"float64"), axis1=2, axis2=3, )
paddle.diagonal(x=Tensor([6, 0, 6, 2, 2],"float64"), axis1=3, axis2=4, )
paddle.diagonal(x=Tensor([6, 0, 6, 2, 2],"float64"), axis1=4, axis2=2, )
paddle.diagonal(x=Tensor([6, 0, 6, 6],"float64"), )
paddle.diagonal(x=Tensor([6, 0, 6],"float64"), )
paddle.diagonal(x=Tensor([6, 0],"float32"), )
paddle.diagonal(x=Tensor([6, 0],"float64"), offset=1, )
paddle.diagonal(x=Tensor([6, 0],"float64"), offset=-1, )
paddle.diagonal(x=Tensor([6, 6, 0, 2, 2],"float64"), )
paddle.diagonal(x=Tensor([6, 6, 0, 2, 2],"float64"), axis1=0, axis2=3, )
paddle.diagonal(x=Tensor([6, 6, 0, 2, 2],"float64"), axis1=-1, axis2=2, )
paddle.diagonal(x=Tensor([6, 6, 0, 2, 2],"float64"), axis1=2, axis2=3, )
paddle.diagonal(x=Tensor([6, 6, 0, 2, 2],"float64"), axis1=3, axis2=4, )
paddle.diagonal(x=Tensor([6, 6, 0, 2, 2],"float64"), axis1=4, axis2=2, )
paddle.diagonal(x=Tensor([6, 6, 0, 6],"float64"), )
paddle.diagonal(x=Tensor([6, 6, 0],"float64"), )
paddle.diagonal(x=Tensor([6, 6, 6, 0, 2],"float64"), )
paddle.diagonal(x=Tensor([6, 6, 6, 0, 2],"float64"), axis1=0, axis2=3, )
paddle.diagonal(x=Tensor([6, 6, 6, 0, 2],"float64"), axis1=-1, axis2=2, )
paddle.diagonal(x=Tensor([6, 6, 6, 0, 2],"float64"), axis1=2, axis2=3, )
paddle.diagonal(x=Tensor([6, 6, 6, 0, 2],"float64"), axis1=3, axis2=4, )
paddle.diagonal(x=Tensor([6, 6, 6, 0, 2],"float64"), axis1=4, axis2=2, )
paddle.diagonal(x=Tensor([6, 6, 6, 0],"float64"), )
paddle.diagonal(x=Tensor([6, 6, 6, 2, 0],"float64"), )
paddle.diagonal(x=Tensor([6, 6, 6, 2, 0],"float64"), axis1=0, axis2=3, )
paddle.diagonal(x=Tensor([6, 6, 6, 2, 0],"float64"), axis1=-1, axis2=2, )
paddle.diagonal(x=Tensor([6, 6, 6, 2, 0],"float64"), axis1=2, axis2=3, )
paddle.diagonal(x=Tensor([6, 6, 6, 2, 0],"float64"), axis1=3, axis2=4, )
paddle.diagonal(x=Tensor([6, 6, 6, 2, 0],"float64"), axis1=4, axis2=2, )
paddle.dist(Tensor([0, 2, 3, 2],"float32"), Tensor([0, 1, 3, 1],"float32"), 2, )
paddle.dist(Tensor([0, 2, 3, 2],"float32"), Tensor([1, 1, 3, 1],"float32"), 2, )
paddle.dist(Tensor([0, 2],"float32"), Tensor([0, 2],"float32"), 0, )
paddle.dist(Tensor([2, 0, 3, 2],"float32"), Tensor([1, 0, 3, 1],"float32"), 2, )
paddle.dist(Tensor([2, 0, 3, 2],"float32"), Tensor([1, 1, 3, 1],"float32"), 2, )
paddle.dist(Tensor([2, 0],"float32"), Tensor([2, 0],"float32"), 0, )
paddle.dist(Tensor([2, 2, 0, 2],"float32"), Tensor([1, 1, 0, 1],"float32"), 2, )
paddle.dist(Tensor([2, 2, 3, 0],"float32"), Tensor([1, 1, 3, 0],"float32"), 2, )
paddle.dist(Tensor([2, 2, 3, 0],"float32"), Tensor([1, 1, 3, 1],"float32"), 2, )
paddle.dist(x=Tensor([0, 1, 1, 4, 4],"float64"), y=Tensor([0, 8, 7, 1, 4],"float64"), )
paddle.dist(x=Tensor([0, 1, 4, 4],"float64"), y=Tensor([7, 1, 4],"float64"), )
paddle.dist(x=Tensor([0, 2],"float64"), y=Tensor([0, 2],"float64"), p=0, )
paddle.dist(x=Tensor([0, 4, 1, 3],"float64"), y=Tensor([4, 3, 1],"float64"), p=7, )
paddle.dist(x=Tensor([0, 4],"float32"), y=Tensor([0, 4],"float32"), )
paddle.dist(x=Tensor([0, 4],"float64"), y=Tensor([0, 4],"float64"), p=1, )
paddle.dist(x=Tensor([0],"float64"), y=Tensor([0],"float64"), )
paddle.dist(x=Tensor([10],"float64"), y=Tensor([0, 10],"float64"), )
paddle.dist(x=Tensor([10],"float64"), y=Tensor([0, 10],"float64"), p=4, )
paddle.dist(x=Tensor([2, 0, 1, 4, 4],"float64"), y=Tensor([2, 0, 7, 1, 4],"float64"), )
paddle.dist(x=Tensor([2, 0],"float64"), y=Tensor([2, 0],"float64"), p=0, )
paddle.dist(x=Tensor([2, 1, 0, 4, 4],"float64"), y=Tensor([2, 8, 0, 1, 4],"float64"), )
paddle.dist(x=Tensor([2, 1, 0, 4],"float64"), y=Tensor([7, 1, 4],"float64"), )
paddle.dist(x=Tensor([2, 1, 1, 0, 4],"float64"), y=Tensor([2, 8, 7, 0, 4],"float64"), )
paddle.dist(x=Tensor([2, 1, 1, 0, 4],"float64"), y=Tensor([2, 8, 7, 1, 4],"float64"), )
paddle.dist(x=Tensor([2, 1, 1, 4, 0],"float64"), y=Tensor([2, 8, 7, 1, 0],"float64"), )
paddle.dist(x=Tensor([2, 1, 1, 4, 4],"float64"), y=Tensor([2, 0, 7, 1, 4],"float64"), )
paddle.dist(x=Tensor([2, 1, 1, 4, 4],"float64"), y=Tensor([2, 8, 0, 1, 4],"float64"), )
paddle.dist(x=Tensor([2, 1, 4, 4],"float64"), y=Tensor([0, 1, 4],"float64"), )
paddle.dist(x=Tensor([2, 4, 1, 0],"float64"), y=Tensor([4, 3, 1],"float64"), p=7, )
paddle.dist(x=Tensor([2, 4, 1, 3],"float64"), y=Tensor([4, 0, 1],"float64"), p=7, )
paddle.dist(x=Tensor([4, 0],"float32"), y=Tensor([4, 0],"float32"), )
paddle.dist(x=Tensor([4, 0],"float64"), y=Tensor([4, 0],"float64"), p=1, )
paddle.dstack(list[Tensor([0, 1, 1, 1],"float64"),], )
paddle.dstack(list[Tensor([0, 1, 1, 1],"float64"),Tensor([0, 1, 1, 1],"float64"),Tensor([0, 1, 1, 1],"float64"),], )
paddle.dstack(list[Tensor([0, 1, 1],"float64"),], )
paddle.dstack(list[Tensor([0, 1, 1],"float64"),Tensor([0, 1, 1],"float64"),Tensor([0, 1, 1],"float64"),], )
paddle.dstack(list[Tensor([0, 1],"float64"),], )
paddle.dstack(list[Tensor([0, 1],"float64"),Tensor([0, 1],"float64"),Tensor([0, 1],"float64"),], )
paddle.dstack(list[Tensor([0],"float64"),], )
paddle.dstack(list[Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),], )
paddle.dstack(list[Tensor([1, 0, 1, 1],"float64"),], )
paddle.dstack(list[Tensor([1, 0, 1, 1],"float64"),Tensor([1, 0, 1, 1],"float64"),Tensor([1, 0, 1, 1],"float64"),], )
paddle.dstack(list[Tensor([1, 0, 1],"float64"),], )
paddle.dstack(list[Tensor([1, 0, 1],"float64"),Tensor([1, 0, 1],"float64"),Tensor([1, 0, 1],"float64"),], )
paddle.dstack(list[Tensor([1, 0],"float64"),], )
paddle.dstack(list[Tensor([1, 0],"float64"),Tensor([1, 0],"float64"),Tensor([1, 0],"float64"),], )
paddle.dstack(list[Tensor([1, 1, 0, 1],"float64"),], )
paddle.dstack(list[Tensor([1, 1, 0, 1],"float64"),Tensor([1, 1, 0, 1],"float64"),Tensor([1, 1, 0, 1],"float64"),], )
paddle.dstack(list[Tensor([1, 1, 0],"float64"),], )
paddle.dstack(list[Tensor([1, 1, 0],"float64"),Tensor([1, 1, 0],"float64"),Tensor([1, 1, 0],"float64"),], )
paddle.dstack(list[Tensor([1, 1, 1, 0],"float64"),], )
paddle.dstack(list[Tensor([1, 1, 1, 0],"float64"),Tensor([1, 1, 1, 0],"float64"),Tensor([1, 1, 1, 0],"float64"),], )
paddle.fft.fft2(x=Tensor([3, 3, 2, 0],"complex128"), s=tuple(1,2,), )
paddle.fft.fftn(Tensor([3, 3, 2, 0],"complex128"), tuple(1,2,), tuple(-2,-1,), "backward", None, )
paddle.fft.fftn(x=Tensor([4, 0, 6, 2],"float64"), s=list[2,4,], axes=tuple(0,1,), )
paddle.fft.fftn(x=Tensor([4, 0, 6],"float64"), s=list[2,4,], )
paddle.fft.fftn(x=Tensor([4, 4, 0],"float64"), s=list[2,4,], )
paddle.fft.ifft2(x=Tensor([3, 3, 2, 0],"complex128"), s=tuple(1,2,), )
paddle.fft.ifftn(Tensor([3, 3, 2, 0],"complex128"), tuple(1,2,), tuple(-2,-1,), "backward", None, )
paddle.fft.ifftn(x=Tensor([4, 0, 6, 2],"float64"), s=list[2,4,], axes=tuple(0,1,), )
paddle.fft.ifftn(x=Tensor([4, 0, 6],"float64"), s=list[2,4,], )
paddle.fft.ifftn(x=Tensor([4, 4, 0],"float64"), s=list[2,4,], )
paddle.fft.ihfft2(x=Tensor([0, 3, 3],"float64"), s=tuple(1,2,), axes=tuple(0,2,), )
paddle.fft.ihfft2(x=Tensor([0, 3, 3],"float64"), s=tuple(1,2,), axes=tuple(0,2,), norm="forward", )
paddle.fft.ihfft2(x=Tensor([0, 3, 3],"float64"), s=tuple(1,2,), axes=tuple(0,2,), norm="ortho", )
paddle.fft.ihfft2(x=Tensor([4, 0, 3],"float64"), s=tuple(1,2,), )
paddle.fft.ihfft2(x=Tensor([4, 3, 0],"float64"), s=tuple(1,2,), )
paddle.fft.ihfft2(x=Tensor([4, 3, 0],"float64"), s=tuple(1,2,), axes=tuple(0,2,), )
paddle.fft.ihfft2(x=Tensor([4, 3, 0],"float64"), s=tuple(1,2,), axes=tuple(0,2,), norm="forward", )
paddle.fft.ihfft2(x=Tensor([4, 3, 0],"float64"), s=tuple(1,2,), axes=tuple(0,2,), norm="ortho", )
paddle.fft.ihfftn(Tensor([0, 3, 3],"float64"), tuple(1,2,), tuple(0,2,), "backward", None, )
paddle.fft.ihfftn(Tensor([0, 3, 3],"float64"), tuple(1,2,), tuple(0,2,), "forward", None, )
paddle.fft.ihfftn(Tensor([0, 3, 3],"float64"), tuple(1,2,), tuple(0,2,), "ortho", None, )
paddle.fft.ihfftn(Tensor([4, 0, 3],"float64"), tuple(1,2,), tuple(-2,-1,), "backward", None, )
paddle.fft.ihfftn(Tensor([4, 3, 0],"float64"), tuple(1,2,), tuple(0,2,), "backward", None, )
paddle.fft.ihfftn(Tensor([4, 3, 0],"float64"), tuple(1,2,), tuple(0,2,), "forward", None, )
paddle.fft.ihfftn(Tensor([4, 3, 0],"float64"), tuple(1,2,), tuple(0,2,), "ortho", None, )
paddle.fft.ihfftn(Tensor([4, 3, 0],"float64"), tuple(1,2,), tuple(-2,-1,), "backward", None, )
paddle.fft.ihfftn(x=Tensor([4, 3, 0],"float64"), s=tuple(1,2,), )
paddle.fft.ihfftn(x=Tensor([4, 3, 0],"float64"), s=tuple(1,2,), axes=tuple(0,2,), )
paddle.fft.ihfftn(x=Tensor([4, 3, 0],"float64"), s=tuple(1,2,), axes=tuple(0,2,), norm="forward", )
paddle.fft.ihfftn(x=Tensor([4, 3, 0],"float64"), s=tuple(1,2,), axes=tuple(0,2,), norm="ortho", )
paddle.fft.rfft2(x=Tensor([2, 2, 0],"float64"), s=list[1,2,], )
paddle.fft.rfft2(x=Tensor([2, 2, 0],"float64"), s=list[1,2,], norm="backward", )
paddle.fft.rfft2(x=Tensor([2, 2, 0],"float64"), s=list[1,2,], norm="forward", )
paddle.fft.rfft2(x=Tensor([2, 2, 0],"float64"), s=list[1,2,], norm="ortho", )
paddle.fft.rfftn(Tensor([2, 2, 0],"float64"), list[1,2,], None, "ortho", None, )
paddle.fft.rfftn(Tensor([2, 2, 0],"float64"), list[1,2,], tuple(-2,-1,), "backward", None, )
paddle.fft.rfftn(Tensor([2, 2, 0],"float64"), list[1,2,], tuple(-2,-1,), "forward", None, )
paddle.fft.rfftn(Tensor([2, 2, 0],"float64"), list[1,2,], tuple(-2,-1,), "ortho", None, )
paddle.hstack(list[Tensor([0, 1, 1, 1],"float64"),], )
paddle.hstack(list[Tensor([0, 1, 1, 1],"float64"),Tensor([0, 1, 1, 1],"float64"),Tensor([0, 1, 1, 1],"float64"),], )
paddle.hstack(list[Tensor([0, 1, 1],"float64"),], )
paddle.hstack(list[Tensor([0, 1, 1],"float64"),Tensor([0, 1, 1],"float64"),Tensor([0, 1, 1],"float64"),], )
paddle.hstack(list[Tensor([0, 1],"float64"),], )
paddle.hstack(list[Tensor([0, 1],"float64"),Tensor([0, 1],"float64"),Tensor([0, 1],"float64"),], )
paddle.hstack(list[Tensor([0],"float64"),], )
paddle.hstack(list[Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),], )
paddle.hstack(list[Tensor([1, 0, 1, 1],"float64"),], )
paddle.hstack(list[Tensor([1, 0, 1, 1],"float64"),Tensor([1, 0, 1, 1],"float64"),Tensor([1, 0, 1, 1],"float64"),], )
paddle.hstack(list[Tensor([1, 0, 1],"float64"),], )
paddle.hstack(list[Tensor([1, 0, 1],"float64"),Tensor([1, 0, 1],"float64"),Tensor([1, 0, 1],"float64"),], )
paddle.hstack(list[Tensor([1, 0],"float64"),], )
paddle.hstack(list[Tensor([1, 0],"float64"),Tensor([1, 0],"float64"),Tensor([1, 0],"float64"),], )
paddle.hstack(list[Tensor([1, 1, 0, 1],"float64"),], )
paddle.hstack(list[Tensor([1, 1, 0, 1],"float64"),Tensor([1, 1, 0, 1],"float64"),Tensor([1, 1, 0, 1],"float64"),], )
paddle.hstack(list[Tensor([1, 1, 0],"float64"),], )
paddle.hstack(list[Tensor([1, 1, 0],"float64"),Tensor([1, 1, 0],"float64"),Tensor([1, 1, 0],"float64"),], )
paddle.hstack(list[Tensor([1, 1, 1, 0],"float64"),], )
paddle.hstack(list[Tensor([1, 1, 1, 0],"float64"),Tensor([1, 1, 1, 0],"float64"),Tensor([1, 1, 1, 0],"float64"),], )
paddle.inner(Tensor([5, 10, 10],"complex128"), Tensor([0, 10],"complex128"), )
paddle.inner(Tensor([5, 10, 10],"float64"), Tensor([0, 10],"float64"), )
paddle.inner(x=Tensor([0],"float64"), y=Tensor([0],"float64"), )
paddle.inner(x=Tensor([2, 5, 3, 0],"float64"), y=Tensor([3, 2, 5, 0],"float64"), )
paddle.inner(x=Tensor([2, 5, 3, 4],"float64"), y=Tensor([0, 2, 5, 4],"float64"), )
paddle.inner(x=Tensor([2, 5, 3, 4],"float64"), y=Tensor([3, 0, 5, 4],"float64"), )
paddle.inner(x=Tensor([2, 5, 3, 4],"float64"), y=Tensor([3, 2, 0, 4],"float64"), )
paddle.inner(x=Tensor([3, 0],"float64"), y=Tensor([5, 0],"float64"), )
paddle.inner(x=Tensor([3, 4],"float64"), y=Tensor([0, 2, 4],"float64"), )
paddle.inner(x=Tensor([3, 4],"float64"), y=Tensor([0, 2, 5, 4],"float64"), )
paddle.inner(x=Tensor([3, 4],"float64"), y=Tensor([0, 4],"float64"), )
paddle.inner(x=Tensor([3, 4],"float64"), y=Tensor([3, 0, 4],"float64"), )
paddle.inner(x=Tensor([3, 4],"float64"), y=Tensor([3, 0, 5, 4],"float64"), )
paddle.inner(x=Tensor([3, 4],"float64"), y=Tensor([3, 2, 0, 4],"float64"), )
paddle.inner(x=Tensor([4, 0],"float32"), y=Tensor([4, 0],"float32"), )
paddle.inner(x=Tensor([4, 4],"float32"), y=Tensor([0, 4],"float32"), )
paddle.inner(x=Tensor([5, 3, 0],"float64"), y=Tensor([2, 5, 0],"float64"), )
paddle.inner(x=Tensor([5, 3, 4],"float64"), y=Tensor([0, 5, 4],"float64"), )
paddle.inner(x=Tensor([5, 3, 4],"float64"), y=Tensor([2, 0, 4],"float64"), )
paddle.kron(Tensor([2, 2],"complex128"), Tensor([0, 2, 3],"float64"), )
paddle.kron(Tensor([2, 2],"complex128"), Tensor([2, 0, 3],"float64"), )
paddle.kron(Tensor([2, 2],"complex128"), Tensor([2, 2, 0],"float64"), )
paddle.lerp(Tensor([0, 1, 1, 1],"float32"), Tensor([0, 3, 8, 8],"float32"), 0.3, )
paddle.lerp(Tensor([0, 1, 1],"float32"), Tensor([0, 28, 28],"float32"), 0.36, )
paddle.lerp(Tensor([0, 1, 1],"float32"), Tensor([0, 8, 8],"float32"), 0.3, )
paddle.lerp(Tensor([0, 1, 8, 8],"float32"), Tensor([0, 3, 8, 8],"float32"), 1.1, )
paddle.lerp(Tensor([0, 1],"float32"), Tensor([0, 1],"float32"), Tensor([0, 1],"float32"), )
paddle.lerp(Tensor([0, 28, 28],"float32"), Tensor([0, 28, 28],"float32"), 1.0, )
paddle.lerp(Tensor([0, 28, 28],"float32"), Tensor([0, 28, 28],"float32"), 1.2, )
paddle.lerp(Tensor([0, 3, 3],"float32"), Tensor([0, 3, 3],"float32"), Tensor([0, 3, 3],"float32"), )
paddle.lerp(Tensor([0, 3, 3],"float32"), Tensor([1, 3, 3],"float32"), Tensor([1, 3, 3],"float32"), )
paddle.lerp(Tensor([0, 3, 3],"float64"), Tensor([0, 3, 3],"float64"), Tensor([0, 3, 3],"float64"), )
paddle.lerp(Tensor([0, 3, 3],"float64"), Tensor([1, 3, 3],"float64"), Tensor([1, 3, 3],"float64"), )
paddle.lerp(Tensor([0, 3, 8, 8],"float32"), Tensor([0, 3, 8, 8],"float32"), 2.1, )
paddle.lerp(Tensor([0, 3],"float64"), Tensor([0, 3],"float64"), Tensor([0, 3],"float64"), )
paddle.lerp(Tensor([0, 3],"float64"), Tensor([1, 3],"float64"), Tensor([1, 3],"float64"), )
paddle.lerp(Tensor([0, 6, 3, 1, 2, 5],"float64"), Tensor([0, 6, 3, 1, 2, 5],"float64"), Tensor([0, 6, 3, 1, 2, 5],"float64"), )
paddle.lerp(Tensor([0, 6, 3, 4, 1, 5],"float64"), Tensor([0, 6, 3, 4, 1, 5],"float64"), Tensor([0, 6, 3, 4, 1, 5],"float64"), )
paddle.lerp(Tensor([0, 8, 8],"float32"), Tensor([0, 8, 8],"float32"), 1.1, )
paddle.lerp(Tensor([0, 8, 8],"float32"), Tensor([0, 8, 8],"float32"), 2.1, )
paddle.lerp(Tensor([0],"float32"), Tensor([0],"float32"), Tensor([0],"float32"), )
paddle.lerp(Tensor([0],"float32"), Tensor([1],"float32"), Tensor([1],"float32"), )
paddle.lerp(Tensor([0],"float64"), Tensor([0],"float64"), Tensor([0],"float64"), )
paddle.lerp(Tensor([0],"float64"), Tensor([1],"float64"), Tensor([1],"float64"), )
paddle.lerp(Tensor([1, 0, 1],"float32"), Tensor([3, 0, 28],"float32"), 0.36, )
paddle.lerp(Tensor([1, 0, 1],"float32"), Tensor([3, 0, 8],"float32"), 0.3, )
paddle.lerp(Tensor([1, 0, 28],"float32"), Tensor([3, 0, 28],"float32"), 1.0, )
paddle.lerp(Tensor([1, 0, 3],"float32"), Tensor([1, 0, 3],"float32"), Tensor([1, 0, 3],"float32"), )
paddle.lerp(Tensor([1, 0, 3],"float64"), Tensor([1, 0, 3],"float64"), Tensor([1, 0, 3],"float64"), )
paddle.lerp(Tensor([1, 0, 8],"float32"), Tensor([3, 0, 8],"float32"), 1.1, )
paddle.lerp(Tensor([1, 0],"float64"), Tensor([1, 0],"float64"), Tensor([1, 0],"float64"), )
paddle.lerp(Tensor([1, 1, 0],"float32"), Tensor([3, 28, 0],"float32"), 0.36, )
paddle.lerp(Tensor([1, 1, 0],"float32"), Tensor([3, 8, 0],"float32"), 0.3, )
paddle.lerp(Tensor([1, 1, 1],"float32"), Tensor([0, 28, 28],"float32"), 0.36, )
paddle.lerp(Tensor([1, 1, 1],"float32"), Tensor([0, 8, 8],"float32"), 0.3, )
paddle.lerp(Tensor([1, 1, 1],"float32"), Tensor([3, 0, 28],"float32"), 0.36, )
paddle.lerp(Tensor([1, 1, 1],"float32"), Tensor([3, 0, 8],"float32"), 0.3, )
paddle.lerp(Tensor([1, 1, 1],"float32"), Tensor([3, 28, 0],"float32"), 0.36, )
paddle.lerp(Tensor([1, 1, 1],"float32"), Tensor([3, 8, 0],"float32"), 0.3, )
paddle.lerp(Tensor([1, 28, 0],"float32"), Tensor([3, 28, 0],"float32"), 1.0, )
paddle.lerp(Tensor([1, 28, 28],"float32"), Tensor([0, 28, 28],"float32"), 1.0, )
paddle.lerp(Tensor([1, 3, 0],"float32"), Tensor([1, 3, 0],"float32"), Tensor([1, 3, 0],"float32"), )
paddle.lerp(Tensor([1, 3, 0],"float64"), Tensor([1, 3, 0],"float64"), Tensor([1, 3, 0],"float64"), )
paddle.lerp(Tensor([1, 3, 3],"float32"), Tensor([0, 3, 3],"float32"), Tensor([1, 3, 3],"float32"), )
paddle.lerp(Tensor([1, 3, 3],"float64"), Tensor([0, 3, 3],"float64"), Tensor([1, 3, 3],"float64"), )
paddle.lerp(Tensor([1, 3],"float64"), Tensor([0, 3],"float64"), Tensor([1, 3],"float64"), )
paddle.lerp(Tensor([1, 8, 0],"float32"), Tensor([3, 8, 0],"float32"), 1.1, )
paddle.lerp(Tensor([1, 8, 8],"float32"), Tensor([0, 8, 8],"float32"), 1.1, )
paddle.lerp(Tensor([1],"float32"), Tensor([0],"float32"), Tensor([1],"float32"), )
paddle.lerp(Tensor([1],"float64"), Tensor([0],"float64"), Tensor([1],"float64"), )
paddle.lerp(Tensor([10, 1, 0, 5, 5],"float32"), Tensor([10, 5, 1, 5, 5],"float32"), Tensor([1],"float32"), )
paddle.lerp(Tensor([10, 1, 10, 5, 5],"float32"), Tensor([10, 0, 1, 5, 5],"float32"), Tensor([1],"float32"), )
paddle.lerp(Tensor([10, 5, 10, 1, 0],"float32"), Tensor([10, 5, 10, 5, 1],"float32"), Tensor([1],"float32"), )
paddle.lerp(Tensor([10, 5, 10, 1, 5],"float32"), Tensor([10, 5, 10, 0, 1],"float32"), Tensor([1],"float32"), )
paddle.lerp(Tensor([2, 0, 1, 1],"float32"), Tensor([2, 0, 8, 8],"float32"), 0.3, )
paddle.lerp(Tensor([2, 0, 5],"float32"), Tensor([3, 2, 1, 5],"float32"), 0.5, )
paddle.lerp(Tensor([2, 0, 8, 8],"float32"), Tensor([2, 0, 8, 8],"float32"), 1.1, )
paddle.lerp(Tensor([2, 0, 8, 8],"float32"), Tensor([2, 0, 8, 8],"float32"), 2.1, )
paddle.lerp(Tensor([2, 0],"float32"), Tensor([2, 0],"float32"), Tensor([2, 0],"float32"), )
paddle.lerp(Tensor([2, 0],"float32"), Tensor([2, 1],"float32"), Tensor([2, 1],"float32"), )
paddle.lerp(Tensor([2, 1, 0, 1],"float32"), Tensor([2, 3, 0, 8],"float32"), 0.3, )
paddle.lerp(Tensor([2, 1, 0, 8],"float32"), Tensor([2, 3, 0, 8],"float32"), 1.1, )
paddle.lerp(Tensor([2, 1, 1, 0],"float32"), Tensor([2, 3, 8, 0],"float32"), 0.3, )
paddle.lerp(Tensor([2, 1, 1, 1],"float32"), Tensor([2, 0, 8, 8],"float32"), 0.3, )
paddle.lerp(Tensor([2, 1, 1, 1],"float32"), Tensor([2, 3, 0, 8],"float32"), 0.3, )
paddle.lerp(Tensor([2, 1, 1, 1],"float32"), Tensor([2, 3, 8, 0],"float32"), 0.3, )
paddle.lerp(Tensor([2, 1, 8, 0],"float32"), Tensor([2, 3, 8, 0],"float32"), 1.1, )
paddle.lerp(Tensor([2, 1, 8, 8],"float32"), Tensor([2, 0, 8, 8],"float32"), 1.1, )
paddle.lerp(Tensor([2, 1],"float32"), Tensor([2, 0],"float32"), Tensor([2, 1],"float32"), )
paddle.lerp(Tensor([2, 2, 5],"float32"), Tensor([0, 2, 1, 5],"float32"), 0.5, )
paddle.lerp(Tensor([2, 3, 0, 8],"float32"), Tensor([2, 3, 0, 8],"float32"), 2.1, )
paddle.lerp(Tensor([2, 3, 8, 0],"float32"), Tensor([2, 3, 8, 0],"float32"), 2.1, )
paddle.lerp(Tensor([3, 0, 28],"float32"), Tensor([3, 0, 28],"float32"), 1.2, )
paddle.lerp(Tensor([3, 0, 3, 1, 2, 5],"float64"), Tensor([3, 0, 3, 1, 2, 5],"float64"), Tensor([3, 0, 3, 1, 2, 5],"float64"), )
paddle.lerp(Tensor([3, 0, 3, 4, 1, 5],"float64"), Tensor([3, 0, 3, 4, 1, 5],"float64"), Tensor([3, 0, 3, 4, 1, 5],"float64"), )
paddle.lerp(Tensor([3, 0, 8],"float32"), Tensor([3, 0, 8],"float32"), 2.1, )
paddle.lerp(Tensor([3, 28, 0],"float32"), Tensor([3, 28, 0],"float32"), 1.2, )
paddle.lerp(Tensor([3, 6, 0, 1, 2, 5],"float64"), Tensor([3, 6, 0, 1, 2, 5],"float64"), Tensor([3, 6, 0, 1, 2, 5],"float64"), )
paddle.lerp(Tensor([3, 6, 0, 4, 1, 5],"float64"), Tensor([3, 6, 0, 4, 1, 5],"float64"), Tensor([3, 6, 0, 4, 1, 5],"float64"), )
paddle.lerp(Tensor([3, 6, 3, 0, 1, 5],"float64"), Tensor([3, 6, 3, 0, 1, 5],"float64"), Tensor([3, 6, 3, 0, 1, 5],"float64"), )
paddle.lerp(Tensor([3, 6, 3, 0, 2, 5],"float64"), Tensor([3, 6, 3, 0, 2, 5],"float64"), Tensor([3, 6, 3, 0, 2, 5],"float64"), )
paddle.lerp(Tensor([3, 6, 3, 0, 2, 5],"float64"), Tensor([3, 6, 3, 1, 2, 5],"float64"), Tensor([3, 6, 3, 1, 2, 5],"float64"), )
paddle.lerp(Tensor([3, 6, 3, 1, 0, 5],"float64"), Tensor([3, 6, 3, 1, 0, 5],"float64"), Tensor([3, 6, 3, 1, 0, 5],"float64"), )
paddle.lerp(Tensor([3, 6, 3, 1, 2, 0],"float64"), Tensor([3, 6, 3, 1, 2, 0],"float64"), Tensor([3, 6, 3, 1, 2, 0],"float64"), )
paddle.lerp(Tensor([3, 6, 3, 1, 2, 5],"float64"), Tensor([3, 6, 3, 0, 2, 5],"float64"), Tensor([3, 6, 3, 1, 2, 5],"float64"), )
paddle.lerp(Tensor([3, 6, 3, 4, 0, 5],"float64"), Tensor([3, 6, 3, 4, 0, 5],"float64"), Tensor([3, 6, 3, 4, 0, 5],"float64"), )
paddle.lerp(Tensor([3, 6, 3, 4, 0, 5],"float64"), Tensor([3, 6, 3, 4, 1, 5],"float64"), Tensor([3, 6, 3, 4, 1, 5],"float64"), )
paddle.lerp(Tensor([3, 6, 3, 4, 1, 0],"float64"), Tensor([3, 6, 3, 4, 1, 0],"float64"), Tensor([3, 6, 3, 4, 1, 0],"float64"), )
paddle.lerp(Tensor([3, 6, 3, 4, 1, 5],"float64"), Tensor([3, 6, 3, 4, 0, 5],"float64"), Tensor([3, 6, 3, 4, 1, 5],"float64"), )
paddle.lerp(Tensor([3, 8, 0],"float32"), Tensor([3, 8, 0],"float32"), 2.1, )
paddle.lerp(x=Tensor([0, 5, 4, 3],"float64"), y=Tensor([0, 5, 4, 3],"float64"), weight=0.0, )
paddle.lerp(x=Tensor([0, 5, 4, 3],"float64"), y=Tensor([0, 5, 4, 3],"float64"), weight=0.5, )
paddle.lerp(x=Tensor([0, 5, 4, 3],"float64"), y=Tensor([0, 5, 4, 3],"float64"), weight=1.0, )
paddle.lerp(x=Tensor([0, 5, 4],"float64"), y=Tensor([0, 5, 4],"float64"), weight=0.5, )
paddle.lerp(x=Tensor([0, 5],"float64"), y=Tensor([0, 5],"float64"), weight=0.5, )
paddle.lerp(x=Tensor([0, 5],"float64"), y=Tensor([1],"float64"), weight=0.2, )
paddle.lerp(x=Tensor([0],"float32"), y=Tensor([0],"float32"), weight=0.5, )
paddle.lerp(x=Tensor([0],"float64"), y=Tensor([0],"float64"), weight=0.5, )
paddle.lerp(x=Tensor([4, 0, 4, 3],"float64"), y=Tensor([4, 0, 4, 3],"float64"), weight=0.0, )
paddle.lerp(x=Tensor([4, 0, 4, 3],"float64"), y=Tensor([4, 0, 4, 3],"float64"), weight=0.5, )
paddle.lerp(x=Tensor([4, 0, 4, 3],"float64"), y=Tensor([4, 0, 4, 3],"float64"), weight=1.0, )
paddle.lerp(x=Tensor([4, 0, 4],"float64"), y=Tensor([4, 0, 4],"float64"), weight=0.5, )
paddle.lerp(x=Tensor([4, 0],"float64"), y=Tensor([1],"float64"), weight=0.2, )
paddle.lerp(x=Tensor([4, 0],"float64"), y=Tensor([4, 0],"float64"), weight=0.5, )
paddle.lerp(x=Tensor([4, 5, 0, 3],"float64"), y=Tensor([4, 5, 0, 3],"float64"), weight=0.0, )
paddle.lerp(x=Tensor([4, 5, 0, 3],"float64"), y=Tensor([4, 5, 0, 3],"float64"), weight=0.5, )
paddle.lerp(x=Tensor([4, 5, 0, 3],"float64"), y=Tensor([4, 5, 0, 3],"float64"), weight=1.0, )
paddle.lerp(x=Tensor([4, 5, 0],"float64"), y=Tensor([4, 5, 0],"float64"), weight=0.5, )
paddle.lerp(x=Tensor([4, 5, 4, 0],"float64"), y=Tensor([4, 5, 4, 0],"float64"), weight=0.0, )
paddle.lerp(x=Tensor([4, 5, 4, 0],"float64"), y=Tensor([4, 5, 4, 0],"float64"), weight=0.5, )
paddle.lerp(x=Tensor([4, 5, 4, 0],"float64"), y=Tensor([4, 5, 4, 0],"float64"), weight=1.0, )
paddle.linalg.cholesky_solve(Tensor([0, 30, 2],"float64"), Tensor([0, 30, 30],"float64"), upper=True, )
paddle.linalg.cholesky_solve(Tensor([1, 30, 0],"float64"), Tensor([2, 30, 30],"float64"), upper=True, )
paddle.linalg.cholesky_solve(Tensor([1, 30, 2],"float64"), Tensor([0, 30, 30],"float64"), upper=True, )
paddle.linalg.cholesky_solve(Tensor([20, 0],"float64"), Tensor([20, 20],"float64"), upper=True, )
paddle.linalg.cholesky_solve(x=Tensor([0, 2, 4, 3],"float64"), y=Tensor([0, 2, 4, 4],"float64"), )
paddle.linalg.cholesky_solve(x=Tensor([0, 2, 4, 3],"float64"), y=Tensor([0, 2, 4, 4],"float64"), upper=True, )
paddle.linalg.cholesky_solve(x=Tensor([0, 4, 3],"float64"), y=Tensor([0, 4, 4],"float64"), )
paddle.linalg.cholesky_solve(x=Tensor([4, 0],"float32"), y=Tensor([4, 4],"float32"), )
paddle.linalg.cholesky_solve(x=Tensor([4, 0],"float64"), y=Tensor([4, 4],"float64"), )
paddle.linalg.cholesky_solve(x=Tensor([5, 0, 4, 3],"float64"), y=Tensor([5, 0, 4, 4],"float64"), )
paddle.linalg.cholesky_solve(x=Tensor([5, 0, 4, 3],"float64"), y=Tensor([5, 0, 4, 4],"float64"), upper=True, )
paddle.linalg.cholesky_solve(x=Tensor([5, 2, 4, 0],"float64"), y=Tensor([5, 2, 4, 4],"float64"), )
paddle.linalg.cholesky_solve(x=Tensor([5, 2, 4, 0],"float64"), y=Tensor([5, 2, 4, 4],"float64"), upper=True, )
paddle.linalg.cholesky_solve(x=Tensor([5, 4, 0],"float64"), y=Tensor([5, 4, 4],"float64"), )
paddle.linalg.cond(Tensor([0, 3],"float32"), )
paddle.linalg.cond(Tensor([0, 3],"float32"), p=1, )
paddle.linalg.cond(Tensor([0, 3],"float32"), p=-1, )
paddle.linalg.cond(Tensor([0, 3],"float32"), p=2, )
paddle.linalg.cond(Tensor([0, 3],"float32"), p=math.inf, )
paddle.linalg.cond(Tensor([0, 5],"float32"), 1, )
paddle.linalg.cond(Tensor([0, 5],"float32"), -1, )
paddle.linalg.cond(Tensor([0, 5],"float32"), 2, )
paddle.linalg.cond(Tensor([0, 5],"float32"), -2, )
paddle.linalg.cond(Tensor([0, 5],"float32"), math.inf, )
paddle.linalg.cond(Tensor([0, 5],"float32"), -math.inf, )
paddle.linalg.cond(Tensor([0, 5],"float32"), None, )
paddle.linalg.cond(Tensor([0, 7],"float64"), 2, )
paddle.linalg.cond(Tensor([0, 7],"float64"), -2, )
paddle.linalg.cond(Tensor([0, 7],"float64"), None, )
paddle.linalg.cond(Tensor([2, 4, 0, 3],"float32"), 1, )
paddle.linalg.cond(Tensor([2, 4, 0, 3],"float32"), -1, )
paddle.linalg.cond(Tensor([2, 4, 0, 3],"float32"), 2, )
paddle.linalg.cond(Tensor([2, 4, 0, 3],"float32"), -2, )
paddle.linalg.cond(Tensor([2, 4, 0, 3],"float32"), math.inf, )
paddle.linalg.cond(Tensor([2, 4, 0, 3],"float32"), -math.inf, )
paddle.linalg.cond(Tensor([2, 4, 0, 3],"float32"), None, )
paddle.linalg.cond(Tensor([2, 4, 3, 0],"float32"), 1, )
paddle.linalg.cond(Tensor([2, 4, 3, 0],"float32"), -1, )
paddle.linalg.cond(Tensor([2, 4, 3, 0],"float32"), 2, )
paddle.linalg.cond(Tensor([2, 4, 3, 0],"float32"), -2, )
paddle.linalg.cond(Tensor([2, 4, 3, 0],"float32"), math.inf, )
paddle.linalg.cond(Tensor([2, 4, 3, 0],"float32"), -math.inf, )
paddle.linalg.cond(Tensor([2, 4, 3, 0],"float32"), None, )
paddle.linalg.cond(Tensor([3, 0],"float32"), )
paddle.linalg.cond(Tensor([3, 0],"float32"), p=1, )
paddle.linalg.cond(Tensor([3, 0],"float32"), p=-1, )
paddle.linalg.cond(Tensor([3, 0],"float32"), p=2, )
paddle.linalg.cond(Tensor([3, 0],"float32"), p=math.inf, )
paddle.linalg.cond(Tensor([5, 0],"float32"), 1, )
paddle.linalg.cond(Tensor([5, 0],"float32"), -1, )
paddle.linalg.cond(Tensor([5, 0],"float32"), 2, )
paddle.linalg.cond(Tensor([5, 0],"float32"), -2, )
paddle.linalg.cond(Tensor([5, 0],"float32"), math.inf, )
paddle.linalg.cond(Tensor([5, 0],"float32"), -math.inf, )
paddle.linalg.cond(Tensor([5, 0],"float32"), None, )
paddle.linalg.cond(Tensor([9, 0],"float64"), 2, )
paddle.linalg.cond(Tensor([9, 0],"float64"), -2, )
paddle.linalg.cond(Tensor([9, 0],"float64"), None, )
paddle.linalg.cond(x=Tensor([0, 3],"float32"), )
paddle.linalg.cond(x=Tensor([0, 3],"float64"), )
paddle.linalg.cond(x=Tensor([0, 4],"float64"), p=1, )
paddle.linalg.cond(x=Tensor([0, 4],"float64"), p=-2, )
paddle.linalg.cond(x=Tensor([3, 0],"float32"), )
paddle.linalg.cond(x=Tensor([3, 0],"float64"), )
paddle.linalg.cond(x=Tensor([4, 0],"float64"), p=1, )
paddle.linalg.cond(x=Tensor([4, 0],"float64"), p=-2, )
paddle.linalg.cond(x=Tensor([4, 2, 0, 4],"float64"), p=-1, )
paddle.linalg.cond(x=Tensor([4, 2, 0, 4],"float64"), p=math.inf, )
paddle.linalg.cond(x=Tensor([4, 2, 0, 4],"float64"), p=-math.inf, )
paddle.linalg.cond(x=Tensor([4, 2, 4, 0],"float64"), p=-1, )
paddle.linalg.cond(x=Tensor([4, 2, 4, 0],"float64"), p=math.inf, )
paddle.linalg.cond(x=Tensor([4, 2, 4, 0],"float64"), p=-math.inf, )
paddle.linalg.cond(x=Tensor([6, 0],"float64"), p=-2, )
paddle.linalg.cond(x=Tensor([6, 2, 4, 0, 4],"float64"), )
paddle.linalg.cond(x=Tensor([6, 2, 4, 3, 0],"float64"), )
paddle.linalg.cov(Tensor([0, 4],"float32"), )
paddle.linalg.cov(x=Tensor([0, 12],"float64"), )
paddle.linalg.cov(x=Tensor([0, 2],"float32"), )
paddle.linalg.inv(x=Tensor([0, 2, 2],"float64"), )
paddle.linalg.inv(x=Tensor([0, 3, 4, 4],"float64"), )
paddle.linalg.inv(x=Tensor([5, 0, 4, 4],"float64"), )
paddle.linalg.lstsq(Tensor([0, 10],"float64"), Tensor([0, 8],"float64"), rcond=1e-15, driver="gels", )
paddle.linalg.lstsq(Tensor([0, 5],"float32"), Tensor([0, 8],"float32"), rcond=None, driver="gels", )
paddle.linalg.lstsq(Tensor([0, 7, 3],"float64"), Tensor([0, 7, 6],"float64"), rcond=1e-15, driver="gels", )
paddle.linalg.lstsq(Tensor([0, 8, 6],"float64"), Tensor([0, 8, 10],"float64"), rcond=1e-15, driver="gels", )
paddle.linalg.lstsq(Tensor([0, 9],"float32"), Tensor([0, 5],"float32"), rcond=1e-15, driver="gels", )
paddle.linalg.lstsq(Tensor([10, 0, 3],"float64"), Tensor([10, 0, 6],"float64"), rcond=1e-15, driver="gels", )
paddle.linalg.lstsq(Tensor([10, 0, 6],"float64"), Tensor([10, 0, 10],"float64"), rcond=1e-15, driver="gels", )
paddle.linalg.lstsq(Tensor([10, 0],"float32"), Tensor([10, 0],"float32"), rcond=None, driver="gels", )
paddle.linalg.lstsq(Tensor([10, 0],"float32"), Tensor([10, 8],"float32"), rcond=None, driver="gels", )
paddle.linalg.lstsq(Tensor([10, 7, 0],"float64"), Tensor([10, 7, 0],"float64"), rcond=1e-15, driver="gels", )
paddle.linalg.lstsq(Tensor([10, 7, 0],"float64"), Tensor([10, 7, 6],"float64"), rcond=1e-15, driver="gels", )
paddle.linalg.lstsq(Tensor([10, 7, 3],"float64"), Tensor([10, 7, 0],"float64"), rcond=1e-15, driver="gels", )
paddle.linalg.lstsq(Tensor([10, 8, 0],"float64"), Tensor([10, 8, 0],"float64"), rcond=1e-15, driver="gels", )
paddle.linalg.lstsq(Tensor([10, 8, 0],"float64"), Tensor([10, 8, 10],"float64"), rcond=1e-15, driver="gels", )
paddle.linalg.lstsq(Tensor([10, 8, 6],"float64"), Tensor([10, 8, 0],"float64"), rcond=1e-15, driver="gels", )
paddle.linalg.lstsq(Tensor([3, 0, 8],"float32"), Tensor([3, 0, 15],"float32"), rcond=None, driver="gels", )
paddle.linalg.lstsq(Tensor([3, 2, 0],"float32"), Tensor([3, 2, 0],"float32"), rcond=None, driver="gels", )
paddle.linalg.lstsq(Tensor([3, 2, 0],"float32"), Tensor([3, 2, 15],"float32"), rcond=None, driver="gels", )
paddle.linalg.lstsq(Tensor([5, 0],"float64"), Tensor([5, 0],"float64"), rcond=1e-15, driver="gels", )
paddle.linalg.lstsq(Tensor([5, 0],"float64"), Tensor([5, 8],"float64"), rcond=1e-15, driver="gels", )
paddle.linalg.lstsq(Tensor([9, 0],"float32"), Tensor([9, 0],"float32"), rcond=1e-15, driver="gels", )
paddle.linalg.lstsq(Tensor([9, 0],"float32"), Tensor([9, 5],"float32"), rcond=1e-15, driver="gels", )
paddle.linalg.matrix_norm(x=Tensor([0, 3, 4, 5],"float64"), p=-2, axis=list[1,2,], keepdim=False, )
paddle.linalg.matrix_norm(x=Tensor([0, 3, 4, 5],"float64"), p=-2, axis=list[1,2,], keepdim=True, )
paddle.linalg.matrix_norm(x=Tensor([0, 3, 4],"float64"), p="fro", axis=list[0,1,], keepdim=False, )
paddle.linalg.matrix_norm(x=Tensor([0, 3, 4],"float64"), p="fro", axis=list[0,1,], keepdim=True, )
paddle.linalg.matrix_norm(x=Tensor([0, 3, 4],"float64"), p="nuc", axis=list[0,1,], keepdim=False, )
paddle.linalg.matrix_norm(x=Tensor([0, 3, 4],"float64"), p="nuc", axis=list[0,1,], keepdim=True, )
paddle.linalg.matrix_norm(x=Tensor([2, 0, 4],"float64"), p="fro", axis=list[0,1,], keepdim=False, )
paddle.linalg.matrix_norm(x=Tensor([2, 0, 4],"float64"), p="fro", axis=list[0,1,], keepdim=True, )
paddle.linalg.matrix_norm(x=Tensor([2, 0, 4],"float64"), p="nuc", axis=list[0,1,], keepdim=False, )
paddle.linalg.matrix_norm(x=Tensor([2, 0, 4],"float64"), p="nuc", axis=list[0,1,], keepdim=True, )
paddle.linalg.matrix_norm(x=Tensor([2, 0, 4],"float64"), p=-math.inf, axis=list[0,1,], keepdim=False, )
paddle.linalg.matrix_norm(x=Tensor([2, 0, 4],"float64"), p=-math.inf, axis=list[0,1,], keepdim=True, )
paddle.linalg.matrix_norm(x=Tensor([2, 3, 0],"float64"), p="fro", axis=list[0,1,], keepdim=False, )
paddle.linalg.matrix_norm(x=Tensor([2, 3, 0],"float64"), p="fro", axis=list[0,1,], keepdim=True, )
paddle.linalg.matrix_norm(x=Tensor([2, 3, 0],"float64"), p=-math.inf, axis=list[0,1,], keepdim=False, )
paddle.linalg.matrix_norm(x=Tensor([2, 3, 0],"float64"), p=-math.inf, axis=list[0,1,], keepdim=True, )
paddle.linalg.matrix_norm(x=Tensor([2, 3, 4, 0],"float64"), p=-2, axis=list[1,2,], keepdim=False, )
paddle.linalg.matrix_norm(x=Tensor([2, 3, 4, 0],"float64"), p=-2, axis=list[1,2,], keepdim=True, )
paddle.linalg.matrix_power(x=Tensor([0, 2, 10, 10],"float64"), n=64, )
paddle.linalg.matrix_power(x=Tensor([0, 2, 2, 7, 6, 1, 11, 4, 4],"float64"), n=3, )
paddle.linalg.matrix_power(x=Tensor([0, 2, 3, 2, 1, 32, 32],"float64"), n=10, )
paddle.linalg.matrix_power(x=Tensor([0, 2, 3, 2, 1, 32, 32],"float64"), n=-10, )
paddle.linalg.matrix_power(x=Tensor([0, 2, 3, 2, 1, 32, 32],"float64"), n=-2, )
paddle.linalg.matrix_power(x=Tensor([0, 2, 32, 32],"float64"), n=10, )
paddle.linalg.matrix_power(x=Tensor([0, 2, 32, 32],"float64"), n=-10, )
paddle.linalg.matrix_power(x=Tensor([0, 2, 4, 4],"float64"), n=64, )
paddle.linalg.matrix_power(x=Tensor([0, 2, 4, 4],"float64"), n=8, )
paddle.linalg.matrix_power(x=Tensor([0, 4, 4],"float32"), n=3, )
paddle.linalg.matrix_power(x=Tensor([0, 4, 4],"float64"), n=3, )
paddle.linalg.matrix_power(x=Tensor([3, 0, 10, 10],"float64"), n=64, )
paddle.linalg.matrix_power(x=Tensor([3, 0, 2, 7, 6, 1, 11, 4, 4],"float64"), n=3, )
paddle.linalg.matrix_power(x=Tensor([3, 0, 3, 2, 1, 32, 32],"float64"), n=10, )
paddle.linalg.matrix_power(x=Tensor([3, 0, 3, 2, 1, 32, 32],"float64"), n=-10, )
paddle.linalg.matrix_power(x=Tensor([3, 0, 3, 2, 1, 32, 32],"float64"), n=-2, )
paddle.linalg.matrix_power(x=Tensor([3, 0, 32, 32],"float64"), n=10, )
paddle.linalg.matrix_power(x=Tensor([3, 0, 32, 32],"float64"), n=-10, )
paddle.linalg.matrix_power(x=Tensor([3, 0, 4, 4],"float64"), n=64, )
paddle.linalg.matrix_power(x=Tensor([3, 0, 4, 4],"float64"), n=8, )
paddle.linalg.matrix_power(x=Tensor([3, 2, 0, 2, 1, 32, 32],"float64"), n=10, )
paddle.linalg.matrix_power(x=Tensor([3, 2, 0, 2, 1, 32, 32],"float64"), n=-10, )
paddle.linalg.matrix_power(x=Tensor([3, 2, 0, 2, 1, 32, 32],"float64"), n=-2, )
paddle.linalg.matrix_power(x=Tensor([3, 2, 0, 7, 6, 1, 11, 4, 4],"float64"), n=3, )
paddle.linalg.matrix_power(x=Tensor([3, 2, 2, 0, 6, 1, 11, 4, 4],"float64"), n=3, )
paddle.linalg.matrix_power(x=Tensor([3, 2, 2, 7, 0, 1, 11, 4, 4],"float64"), n=3, )
paddle.linalg.matrix_power(x=Tensor([3, 2, 2, 7, 6, 0, 11, 4, 4],"float64"), n=3, )
paddle.linalg.matrix_power(x=Tensor([3, 2, 2, 7, 6, 1, 0, 4, 4],"float64"), n=3, )
paddle.linalg.matrix_power(x=Tensor([3, 2, 3, 0, 1, 32, 32],"float64"), n=10, )
paddle.linalg.matrix_power(x=Tensor([3, 2, 3, 0, 1, 32, 32],"float64"), n=-10, )
paddle.linalg.matrix_power(x=Tensor([3, 2, 3, 0, 1, 32, 32],"float64"), n=-2, )
paddle.linalg.matrix_power(x=Tensor([3, 2, 3, 2, 0, 32, 32],"float64"), n=10, )
paddle.linalg.matrix_power(x=Tensor([3, 2, 3, 2, 0, 32, 32],"float64"), n=-10, )
paddle.linalg.matrix_power(x=Tensor([3, 2, 3, 2, 0, 32, 32],"float64"), n=-2, )
paddle.linalg.matrix_rank(Tensor([0, 1],"float64"), Tensor([0, 4],"float64"), False, )
paddle.linalg.matrix_rank(Tensor([0, 1],"float64"), Tensor([1, 4],"float64"), False, )
paddle.linalg.matrix_rank(Tensor([0, 10],"float32"), )
paddle.linalg.matrix_rank(Tensor([0, 10],"float32"), hermitian=True, )
paddle.linalg.matrix_rank(Tensor([0, 10],"float32"), hermitian=True, atol=0.015, rtol=None, )
paddle.linalg.matrix_rank(Tensor([0, 10],"float32"), hermitian=True, atol=0.2, rtol=0.05, )
paddle.linalg.matrix_rank(Tensor([0, 10],"float32"), hermitian=True, atol=None, rtol=1.1, )
paddle.linalg.matrix_rank(Tensor([0, 10],"float32"), tol=0.1, )
paddle.linalg.matrix_rank(Tensor([0, 10],"float32"), tol=Tensor([2],"float32"), )
paddle.linalg.matrix_rank(Tensor([0, 200],"float64"), Tensor([0, 200],"float64"), True, )
paddle.linalg.matrix_rank(Tensor([0, 200],"float64"), Tensor([200, 200],"float64"), True, )
paddle.linalg.matrix_rank(Tensor([0, 3],"float32"), 0.1, True, )
paddle.linalg.matrix_rank(Tensor([0, 4, 5, 5],"float64"), hermitian=False, atol=Tensor([3, 4],"float64"), rtol=None, )
paddle.linalg.matrix_rank(Tensor([0, 4, 5, 6],"float32"), Tensor([3, 4],"float32"), False, )
paddle.linalg.matrix_rank(Tensor([0, 4, 7, 8],"float64"), hermitian=False, atol=Tensor([3, 1],"float32"), rtol=Tensor([3, 1],"float32"), )
paddle.linalg.matrix_rank(Tensor([0, 4, 7, 8],"float64"), hermitian=False, atol=Tensor([3, 4],"float32"), rtol=Tensor([3, 4],"float32"), )
paddle.linalg.matrix_rank(Tensor([0, 4, 7, 8],"float64"), Tensor([3, 4],"float32"), hermitian=False, )
paddle.linalg.matrix_rank(Tensor([10, 0],"float32"), )
paddle.linalg.matrix_rank(Tensor([10, 0],"float32"), hermitian=True, )
paddle.linalg.matrix_rank(Tensor([10, 0],"float32"), hermitian=True, atol=0.015, rtol=None, )
paddle.linalg.matrix_rank(Tensor([10, 0],"float32"), hermitian=True, atol=0.2, rtol=0.05, )
paddle.linalg.matrix_rank(Tensor([10, 0],"float32"), hermitian=True, atol=None, rtol=1.1, )
paddle.linalg.matrix_rank(Tensor([10, 0],"float32"), tol=0.1, )
paddle.linalg.matrix_rank(Tensor([10, 0],"float32"), tol=Tensor([2],"float32"), )
paddle.linalg.matrix_rank(Tensor([200, 0],"float64"), Tensor([200, 0],"float64"), True, )
paddle.linalg.matrix_rank(Tensor([200, 0],"float64"), Tensor([200, 200],"float64"), True, )
paddle.linalg.matrix_rank(Tensor([3, 0, 5, 5],"float64"), hermitian=False, atol=Tensor([3, 4],"float64"), rtol=None, )
paddle.linalg.matrix_rank(Tensor([3, 0, 5, 6],"float32"), Tensor([3, 4],"float32"), False, )
paddle.linalg.matrix_rank(Tensor([3, 0, 5],"float32"), )
paddle.linalg.matrix_rank(Tensor([3, 0, 5],"float32"), tol=0.1, )
paddle.linalg.matrix_rank(Tensor([3, 0, 7, 8],"float64"), hermitian=False, atol=Tensor([3, 4],"float32"), rtol=Tensor([3, 4],"float32"), )
paddle.linalg.matrix_rank(Tensor([3, 0, 7, 8],"float64"), Tensor([3, 4],"float32"), hermitian=False, )
paddle.linalg.matrix_rank(Tensor([3, 0],"float32"), 0.1, True, )
paddle.linalg.matrix_rank(Tensor([3, 4, 0, 5],"float64"), hermitian=False, atol=Tensor([3, 4],"float64"), rtol=None, )
paddle.linalg.matrix_rank(Tensor([3, 4, 0, 5],"float64"), hermitian=True, atol=0.5, rtol=None, )
paddle.linalg.matrix_rank(Tensor([3, 4, 0, 6],"float32"), Tensor([3, 4],"float32"), False, )
paddle.linalg.matrix_rank(Tensor([3, 4, 0, 8],"float64"), 0.1, hermitian=False, )
paddle.linalg.matrix_rank(Tensor([3, 4, 0, 8],"float64"), hermitian=False, atol=Tensor([3, 1],"float32"), rtol=Tensor([3, 1],"float32"), )
paddle.linalg.matrix_rank(Tensor([3, 4, 0, 8],"float64"), hermitian=False, atol=Tensor([3, 4],"float32"), rtol=Tensor([3, 4],"float32"), )
paddle.linalg.matrix_rank(Tensor([3, 4, 0, 8],"float64"), Tensor([3, 4],"float32"), hermitian=False, )
paddle.linalg.matrix_rank(Tensor([3, 4, 0],"float32"), )
paddle.linalg.matrix_rank(Tensor([3, 4, 0],"float32"), tol=0.1, )
paddle.linalg.matrix_rank(Tensor([3, 4, 5, 0],"float32"), Tensor([3, 4],"float32"), False, )
paddle.linalg.matrix_rank(Tensor([3, 4, 5, 0],"float64"), hermitian=False, atol=Tensor([3, 4],"float64"), rtol=None, )
paddle.linalg.matrix_rank(Tensor([3, 4, 5, 0],"float64"), hermitian=True, atol=0.5, rtol=None, )
paddle.linalg.matrix_rank(Tensor([3, 4, 7, 0],"float64"), 0.1, hermitian=False, )
paddle.linalg.matrix_rank(Tensor([3, 4, 7, 0],"float64"), hermitian=False, atol=Tensor([3, 1],"float32"), rtol=Tensor([3, 1],"float32"), )
paddle.linalg.matrix_rank(Tensor([3, 4, 7, 0],"float64"), hermitian=False, atol=Tensor([3, 4],"float32"), rtol=Tensor([3, 4],"float32"), )
paddle.linalg.matrix_rank(Tensor([3, 4, 7, 0],"float64"), Tensor([3, 4],"float32"), hermitian=False, )
paddle.linalg.matrix_rank(Tensor([5, 0],"float64"), Tensor([1, 0],"float64"), False, )
paddle.linalg.matrix_rank(Tensor([5, 0],"float64"), Tensor([1, 4],"float64"), False, )
paddle.linalg.matrix_rank(x=Tensor([0, 3, 4, 4],"float64"), tol=Tensor([2, 3],"float64"), hermitian=True, )
paddle.linalg.matrix_rank(x=Tensor([0, 4, 4, 5],"float64"), tol=Tensor([2, 1],"float64"), hermitian=False, )
paddle.linalg.matrix_rank(x=Tensor([0, 4],"float64"), tol=4.4, hermitian=True, )
paddle.linalg.matrix_rank(x=Tensor([0, 4],"float64"), tol=Tensor([1],"float64"), hermitian=True, )
paddle.linalg.matrix_rank(x=Tensor([0, 5],"float64"), tol=4.4, hermitian=False, )
paddle.linalg.matrix_rank(x=Tensor([2, 0, 4, 4],"float64"), tol=Tensor([2, 3],"float64"), hermitian=True, )
paddle.linalg.matrix_rank(x=Tensor([2, 2, 0, 4],"float64"), tol=Tensor([1, 1],"float64"), hermitian=True, )
paddle.linalg.matrix_rank(x=Tensor([2, 2, 4, 0],"float64"), tol=Tensor([1, 1],"float64"), hermitian=True, )
paddle.linalg.matrix_rank(x=Tensor([2, 3, 0, 4],"float64"), tol=Tensor([1],"float64"), hermitian=True, )
paddle.linalg.matrix_rank(x=Tensor([2, 3, 0, 4],"float64"), tol=Tensor([2, 3],"float64"), hermitian=True, )
paddle.linalg.matrix_rank(x=Tensor([2, 3, 4, 0],"float64"), tol=Tensor([1],"float64"), hermitian=True, )
paddle.linalg.matrix_rank(x=Tensor([2, 3, 4, 0],"float64"), tol=Tensor([2, 3],"float64"), hermitian=True, )
paddle.linalg.matrix_rank(x=Tensor([2, 4, 0, 5],"float64"), tol=Tensor([2, 1],"float64"), hermitian=False, )
paddle.linalg.matrix_rank(x=Tensor([2, 4, 4, 0],"float64"), tol=Tensor([2, 1],"float64"), hermitian=False, )
paddle.linalg.matrix_rank(x=Tensor([4, 0],"float64"), tol=4.4, hermitian=False, )
paddle.linalg.matrix_rank(x=Tensor([4, 0],"float64"), tol=4.4, hermitian=True, )
paddle.linalg.matrix_rank(x=Tensor([4, 0],"float64"), tol=Tensor([1],"float64"), hermitian=True, )
paddle.linalg.multi_dot(list[Tensor([0],"float64"),Tensor([0],"float64"),], )
paddle.linalg.multi_dot(list[Tensor([2, 10],"float64"),Tensor([10, 4],"float64"),Tensor([4, 0],"float64"),], )
paddle.linalg.multi_dot(list[Tensor([2, 4],"float64"),Tensor([4, 0],"float64"),], )
paddle.linalg.multi_dot(list[Tensor([2, 8],"float16"),Tensor([8, 0],"float16"),], )
paddle.linalg.multi_dot(list[Tensor([3, 4],"float64"),Tensor([4, 8],"float64"),Tensor([8, 0],"float64"),], )
paddle.linalg.multi_dot(list[Tensor([4],"float64"),Tensor([4, 0],"float64"),], )
paddle.linalg.multi_dot(list[Tensor([4],"float64"),Tensor([4, 3],"float64"),Tensor([3, 0],"float64"),], )
paddle.linalg.multi_dot(list[Tensor([4],"float64"),Tensor([4, 3],"float64"),Tensor([3, 4],"float64"),Tensor([4, 0],"float64"),], )
paddle.linalg.multi_dot(list[Tensor([8, 6],"float64"),Tensor([6, 3],"float64"),Tensor([3, 4],"float64"),Tensor([4, 0],"float64"),], )
paddle.linalg.norm(Tensor([0, 1, 4],"float32"), p=1.0, axis=-1, )
paddle.linalg.norm(Tensor([0, 10, 20],"float32"), p=0, axis=-1, )
paddle.linalg.norm(Tensor([0, 10, 20],"float32"), p=1.0, axis=-1, )
paddle.linalg.norm(Tensor([0, 10, 20],"float32"), p=1.5, axis=-1, )
paddle.linalg.norm(Tensor([0, 10, 20],"float32"), p=2.0, axis=-1, )
paddle.linalg.norm(Tensor([0, 10, 20],"float32"), p=2.5, axis=-1, )
paddle.linalg.norm(Tensor([0, 10, 20],"float32"), p=3.0, axis=-1, )
paddle.linalg.norm(Tensor([0, 10, 20],"float32"), p=math.inf, axis=-1, )
paddle.linalg.norm(Tensor([0, 20, 3],"float32"), 0.0, 2, True, )
paddle.linalg.norm(Tensor([0, 20, 3],"float32"), 2.0, -1, False, )
paddle.linalg.norm(Tensor([0, 20, 3],"float32"), 2.0, 2, True, )
paddle.linalg.norm(Tensor([0, 20, 3],"float32"), math.inf, 2, True, )
paddle.linalg.norm(Tensor([0, 20, 3],"float32"), -math.inf, 2, True, )
paddle.linalg.norm(Tensor([0, 3, 4, 5],"float64"), 2.0, 1, False, )
paddle.linalg.norm(Tensor([0, 3, 4, 5],"float64"), p="fro", axis=list[1,2,], keepdim=False, )
paddle.linalg.norm(Tensor([0, 5, 5],"float32"), p="fro", axis=list[0,1,], keepdim=True, )
paddle.linalg.norm(Tensor([0, 50, 20],"float64"), p=2.0, axis=-1, )
paddle.linalg.norm(Tensor([0, 6],"float32"), )
paddle.linalg.norm(Tensor([0, 6],"float32"), p=1, axis=list[0,1,], )
paddle.linalg.norm(Tensor([0],"float32"), )
paddle.linalg.norm(Tensor([0],"float32"), 2.0, )
paddle.linalg.norm(Tensor([0],"float32"), p=1, )
paddle.linalg.norm(Tensor([0],"float32"), p=1, axis=0, )
paddle.linalg.norm(Tensor([10, 0, 20],"float32"), p=0, axis=-1, )
paddle.linalg.norm(Tensor([10, 0, 20],"float32"), p=1.0, axis=-1, )
paddle.linalg.norm(Tensor([10, 0, 20],"float32"), p=1.5, axis=-1, )
paddle.linalg.norm(Tensor([10, 0, 20],"float32"), p=2.0, axis=-1, )
paddle.linalg.norm(Tensor([10, 0, 20],"float32"), p=2.5, axis=-1, )
paddle.linalg.norm(Tensor([10, 0, 20],"float32"), p=3.0, axis=-1, )
paddle.linalg.norm(Tensor([10, 0, 20],"float32"), p=math.inf, axis=-1, )
paddle.linalg.norm(Tensor([10, 10, 0],"float32"), p=0, axis=-1, )
paddle.linalg.norm(Tensor([10, 10, 0],"float32"), p=1.0, axis=-1, )
paddle.linalg.norm(Tensor([10, 10, 0],"float32"), p=1.5, axis=-1, )
paddle.linalg.norm(Tensor([10, 10, 0],"float32"), p=2.0, axis=-1, )
paddle.linalg.norm(Tensor([10, 10, 0],"float32"), p=2.5, axis=-1, )
paddle.linalg.norm(Tensor([10, 10, 0],"float32"), p=3.0, axis=-1, )
paddle.linalg.norm(Tensor([2, 0, 4, 5],"float64"), 2.0, 1, False, )
paddle.linalg.norm(Tensor([2, 0, 4, 5],"float64"), p="fro", axis=list[1,2,], keepdim=False, )
paddle.linalg.norm(Tensor([2, 3, 0, 5],"float64"), 2.0, 1, False, )
paddle.linalg.norm(Tensor([2, 3, 0, 5],"float64"), p="fro", axis=list[1,2,], keepdim=False, )
paddle.linalg.norm(Tensor([2, 3, 4, 0],"float64"), 2.0, 1, False, )
paddle.linalg.norm(Tensor([2, 3, 4, 0],"float64"), p="fro", axis=list[1,2,], keepdim=False, )
paddle.linalg.norm(Tensor([3, 0, 3],"float32"), 0.0, 2, True, )
paddle.linalg.norm(Tensor([3, 0, 3],"float32"), 2.0, -1, False, )
paddle.linalg.norm(Tensor([3, 0, 3],"float32"), 2.0, 2, True, )
paddle.linalg.norm(Tensor([3, 0, 3],"float32"), math.inf, 2, True, )
paddle.linalg.norm(Tensor([3, 0, 3],"float32"), -math.inf, 2, True, )
paddle.linalg.norm(Tensor([3, 20, 0],"float32"), 0.0, 2, True, )
paddle.linalg.norm(Tensor([3, 20, 0],"float32"), 2.0, -1, False, )
paddle.linalg.norm(Tensor([3, 20, 0],"float32"), 2.0, 2, True, )
paddle.linalg.norm(Tensor([300, 0, 4],"float32"), p=1.0, axis=-1, )
paddle.linalg.norm(Tensor([300, 1, 0],"float32"), p=1.0, axis=-1, )
paddle.linalg.norm(Tensor([4, 0],"float32"), )
paddle.linalg.norm(Tensor([4, 0],"float32"), p=-math.inf, axis=list[0,1,], )
paddle.linalg.norm(Tensor([5, 0, 5],"float32"), p="fro", axis=list[0,1,], keepdim=True, )
paddle.linalg.norm(Tensor([5, 5, 0],"float32"), p="fro", axis=list[0,1,], keepdim=True, )
paddle.linalg.norm(Tensor([50, 0, 20],"float64"), p=2.0, axis=-1, )
paddle.linalg.norm(Tensor([50, 50, 0],"float64"), p=2.0, axis=-1, )
paddle.linalg.norm(x=Tensor([0, 3, 3],"float64"), axis=1, p=0, )
paddle.linalg.norm(x=Tensor([0, 3, 3],"float64"), axis=1, p=math.inf, )
paddle.linalg.norm(x=Tensor([0, 3, 3],"float64"), axis=1, p=-math.inf, )
paddle.linalg.norm(x=Tensor([0, 3, 3],"float64"), axis=list[0,2,], p=1, )
paddle.linalg.norm(x=Tensor([0, 3, 3],"float64"), axis=list[1,], p=math.inf, )
paddle.linalg.norm(x=Tensor([0, 3, 3],"float64"), axis=list[1,2,], p=1, )
paddle.linalg.norm(x=Tensor([0, 3, 3],"float64"), axis=list[1,2,], p=math.inf, )
paddle.linalg.norm(x=Tensor([0, 3, 3],"float64"), axis=None, )
paddle.linalg.norm(x=Tensor([0, 3, 4],"float32"), )
paddle.linalg.norm(x=Tensor([0, 3, 4],"float64"), )
paddle.linalg.norm(x=Tensor([0, 3, 4],"float64"), p=1, axis=list[0,1,], keepdim=False, )
paddle.linalg.norm(x=Tensor([0, 3, 4],"float64"), p=1, axis=list[0,1,], keepdim=True, )
paddle.linalg.norm(x=Tensor([0, 3, 4],"float64"), p=2, axis=-1, keepdim=False, )
paddle.linalg.norm(x=Tensor([0, 3, 4],"float64"), p=2, axis=-1, keepdim=True, )
paddle.linalg.norm(x=Tensor([0, 3],"float64"), axis=None, p="fro", )
paddle.linalg.norm(x=Tensor([0, 4],"float64"), p=0, axis=1, keepdim=False, )
paddle.linalg.norm(x=Tensor([0, 4],"float64"), p=0, axis=1, keepdim=True, )
paddle.linalg.norm(x=Tensor([0, 4],"float64"), p=1, axis=1, keepdim=False, )
paddle.linalg.norm(x=Tensor([0, 4],"float64"), p=1, axis=1, keepdim=True, )
paddle.linalg.norm(x=Tensor([0, 4],"float64"), p=2, axis=1, keepdim=False, )
paddle.linalg.norm(x=Tensor([0, 4],"float64"), p=2, axis=1, keepdim=True, )
paddle.linalg.norm(x=Tensor([2, 0, 4],"float32"), )
paddle.linalg.norm(x=Tensor([2, 0, 4],"float32"), p=math.inf, axis=0, keepdim=False, )
paddle.linalg.norm(x=Tensor([2, 0, 4],"float32"), p=math.inf, axis=0, keepdim=True, )
paddle.linalg.norm(x=Tensor([2, 0, 4],"float64"), )
paddle.linalg.norm(x=Tensor([2, 0, 4],"float64"), p=2, axis=-1, keepdim=False, )
paddle.linalg.norm(x=Tensor([2, 0, 4],"float64"), p=2, axis=-1, keepdim=True, )
paddle.linalg.norm(x=Tensor([2, 0, 4],"float64"), p=-math.inf, axis=0, keepdim=False, )
paddle.linalg.norm(x=Tensor([2, 0, 4],"float64"), p=-math.inf, axis=0, keepdim=True, )
paddle.linalg.norm(x=Tensor([2, 0, 4],"float64"), p=math.inf, axis=list[0,1,], keepdim=False, )
paddle.linalg.norm(x=Tensor([2, 0, 4],"float64"), p=-math.inf, axis=list[0,1,], keepdim=False, )
paddle.linalg.norm(x=Tensor([2, 0, 4],"float64"), p=math.inf, axis=list[0,1,], keepdim=True, )
paddle.linalg.norm(x=Tensor([2, 0, 4],"float64"), p=-math.inf, axis=list[0,1,], keepdim=True, )
paddle.linalg.norm(x=Tensor([2, 3, 0],"float32"), )
paddle.linalg.norm(x=Tensor([2, 3, 0],"float32"), p=math.inf, axis=0, keepdim=False, )
paddle.linalg.norm(x=Tensor([2, 3, 0],"float32"), p=math.inf, axis=0, keepdim=True, )
paddle.linalg.norm(x=Tensor([2, 3, 0],"float64"), )
paddle.linalg.norm(x=Tensor([2, 3, 0],"float64"), p=1, axis=list[0,1,], keepdim=False, )
paddle.linalg.norm(x=Tensor([2, 3, 0],"float64"), p=1, axis=list[0,1,], keepdim=True, )
paddle.linalg.norm(x=Tensor([2, 3, 0],"float64"), p=2, axis=-1, keepdim=False, )
paddle.linalg.norm(x=Tensor([2, 3, 0],"float64"), p=2, axis=-1, keepdim=True, )
paddle.linalg.norm(x=Tensor([2, 3, 0],"float64"), p=2, axis=list[0,1,], keepdim=False, )
paddle.linalg.norm(x=Tensor([2, 3, 0],"float64"), p=2, axis=list[0,1,], keepdim=True, )
paddle.linalg.norm(x=Tensor([2, 3, 0],"float64"), p=-math.inf, axis=0, keepdim=False, )
paddle.linalg.norm(x=Tensor([2, 3, 0],"float64"), p=-math.inf, axis=0, keepdim=True, )
paddle.linalg.norm(x=Tensor([2, 3, 0],"float64"), p=math.inf, axis=list[0,1,], keepdim=False, )
paddle.linalg.norm(x=Tensor([2, 3, 0],"float64"), p=-math.inf, axis=list[0,1,], keepdim=False, )
paddle.linalg.norm(x=Tensor([2, 3, 0],"float64"), p=math.inf, axis=list[0,1,], keepdim=True, )
paddle.linalg.norm(x=Tensor([2, 3, 0],"float64"), p=-math.inf, axis=list[0,1,], keepdim=True, )
paddle.linalg.norm(x=Tensor([3, 0, 3],"float64"), axis=1, p=0, )
paddle.linalg.norm(x=Tensor([3, 0, 3],"float64"), axis=list[0,2,], p=1, )
paddle.linalg.norm(x=Tensor([3, 0, 3],"float64"), axis=list[0,2,], p=2, )
paddle.linalg.norm(x=Tensor([3, 0, 3],"float64"), axis=list[1,2,], p=1, )
paddle.linalg.norm(x=Tensor([3, 0, 3],"float64"), axis=None, )
paddle.linalg.norm(x=Tensor([3, 0],"float64"), axis=None, p="fro", )
paddle.linalg.norm(x=Tensor([3, 0],"float64"), p=0, axis=1, keepdim=False, )
paddle.linalg.norm(x=Tensor([3, 0],"float64"), p=0, axis=1, keepdim=True, )
paddle.linalg.norm(x=Tensor([3, 0],"float64"), p=1, axis=1, keepdim=False, )
paddle.linalg.norm(x=Tensor([3, 0],"float64"), p=1, axis=1, keepdim=True, )
paddle.linalg.norm(x=Tensor([3, 0],"float64"), p=2, axis=1, keepdim=False, )
paddle.linalg.norm(x=Tensor([3, 0],"float64"), p=2, axis=1, keepdim=True, )
paddle.linalg.norm(x=Tensor([3, 3, 0],"float64"), axis=1, p=0, )
paddle.linalg.norm(x=Tensor([3, 3, 0],"float64"), axis=1, p=math.inf, )
paddle.linalg.norm(x=Tensor([3, 3, 0],"float64"), axis=1, p=-math.inf, )
paddle.linalg.norm(x=Tensor([3, 3, 0],"float64"), axis=list[1,], p=math.inf, )
paddle.linalg.norm(x=Tensor([3, 3, 0],"float64"), axis=list[1,2,], p=math.inf, )
paddle.linalg.norm(x=Tensor([3, 3, 0],"float64"), axis=None, )
paddle.linalg.pinv(Tensor([0, 200, 300],"float64"), rcond=1e-15, hermitian=False, )
paddle.linalg.pinv(Tensor([0, 4, 5],"float64"), rcond=1e-15, hermitian=False, )
paddle.linalg.pinv(Tensor([0, 4],"float64"), rcond=1e-15, hermitian=False, )
paddle.linalg.pinv(Tensor([0, 5, 5],"float64"), rcond=1e-10, hermitian=False, )
paddle.linalg.pinv(Tensor([0, 5],"float64"), rcond=1e-15, hermitian=False, )
paddle.linalg.pinv(Tensor([0, 6, 5, 4],"float64"), rcond=1e-15, hermitian=False, )
paddle.linalg.pinv(Tensor([2, 0, 300],"float64"), rcond=1e-15, hermitian=False, )
paddle.linalg.pinv(Tensor([2, 200, 0],"float64"), rcond=1e-15, hermitian=False, )
paddle.linalg.pinv(Tensor([3, 0, 5, 4],"float64"), rcond=1e-15, hermitian=False, )
paddle.linalg.pinv(Tensor([3, 0, 5],"float64"), rcond=1e-10, hermitian=False, )
paddle.linalg.pinv(Tensor([3, 0, 5],"float64"), rcond=1e-15, hermitian=False, )
paddle.linalg.pinv(Tensor([3, 4, 0],"float64"), rcond=1e-15, hermitian=False, )
paddle.linalg.pinv(Tensor([3, 5, 0],"float64"), rcond=1e-10, hermitian=False, )
paddle.linalg.pinv(Tensor([3, 6, 0, 4],"float64"), rcond=1e-15, hermitian=False, )
paddle.linalg.pinv(Tensor([3, 6, 5, 0],"float64"), rcond=1e-15, hermitian=False, )
paddle.linalg.pinv(Tensor([4, 0],"float64"), rcond=1e-15, hermitian=False, )
paddle.linalg.pinv(Tensor([5, 0],"float64"), rcond=1e-15, hermitian=False, )
paddle.linalg.pinv(x=Tensor([0, 2, 2],"float64"), rcond=5, hermitian=True, )
paddle.linalg.pinv(x=Tensor([0, 4, 40],"float64"), )
paddle.linalg.pinv(x=Tensor([0, 4, 40],"float64"), rcond=0.5, )
paddle.linalg.pinv(x=Tensor([0, 4],"float32"), )
paddle.linalg.pinv(x=Tensor([0, 40],"float64"), )
paddle.linalg.pinv(x=Tensor([2, 0, 40],"float64"), )
paddle.linalg.pinv(x=Tensor([2, 0, 40],"float64"), rcond=0.5, )
paddle.linalg.pinv(x=Tensor([2, 0],"float64"), )
paddle.linalg.pinv(x=Tensor([2, 4, 0],"float64"), )
paddle.linalg.pinv(x=Tensor([2, 4, 0],"float64"), rcond=0.5, )
paddle.linalg.pinv(x=Tensor([3, 0],"float32"), )
paddle.linalg.pinv(x=Tensor([4, 0, 2],"float64"), rcond=5, hermitian=True, )
paddle.linalg.pinv(x=Tensor([4, 2, 0],"float64"), rcond=5, hermitian=True, )
paddle.linalg.solve(Tensor([0, 3, 3],"float64"), Tensor([0, 3, 3],"float64"), )
paddle.linalg.solve(Tensor([0, 3, 3],"float64"), Tensor([0, 3, 3],"float64"), left=False, )
paddle.linalg.solve(Tensor([0, 3, 3],"float64"), Tensor([1, 3, 3],"float64"), )
paddle.linalg.solve(Tensor([0, 3, 3],"float64"), Tensor([1, 3, 3],"float64"), left=False, )
paddle.linalg.solve(Tensor([10, 10],"float32"), Tensor([0, 10],"float32"), left=False, )
paddle.linalg.solve(Tensor([10, 10],"float32"), Tensor([10, 0],"float32"), )
paddle.linalg.solve(Tensor([10, 10],"float64"), Tensor([0, 10],"float64"), left=False, )
paddle.linalg.solve(Tensor([10, 10],"float64"), Tensor([10, 0],"float64"), )
paddle.linalg.solve(Tensor([2, 3, 3],"float64"), Tensor([1, 0, 3],"float64"), left=False, )
paddle.linalg.solve(Tensor([2, 3, 3],"float64"), Tensor([1, 3, 0],"float64"), )
paddle.linalg.solve(x=Tensor([0, 14, 14],"float64"), y=Tensor([0, 14, 2],"float64"), )
paddle.linalg.solve(x=Tensor([14, 14],"float64"), y=Tensor([14, 0],"float64"), )
paddle.linalg.solve(x=Tensor([4, 14, 14],"float64"), y=Tensor([4, 14, 0],"float64"), )
paddle.linalg.svd_lowrank(Tensor([0, 17],"float64"), q=4, )
paddle.linalg.svd_lowrank(Tensor([0, 4, 17],"float64"), q=4, )
paddle.linalg.svd_lowrank(Tensor([1, 0, 17],"float64"), q=4, )
paddle.linalg.svd_lowrank(Tensor([1, 4, 0],"float64"), q=4, )
paddle.linalg.svd_lowrank(Tensor([4, 0],"float64"), q=4, )
paddle.linalg.vector_norm(x=Tensor([0, 14, 5, 14],"complex128"), p=math.inf, axis=2, keepdim=False, )
paddle.linalg.vector_norm(x=Tensor([0, 14, 5, 14],"complex128"), p=math.inf, axis=2, keepdim=True, )
paddle.linalg.vector_norm(x=Tensor([0, 3, 4],"float64"), p=2, axis=-1, keepdim=False, )
paddle.linalg.vector_norm(x=Tensor([0, 3, 4],"float64"), p=2, axis=-1, keepdim=True, )
paddle.linalg.vector_norm(x=Tensor([0, 4],"float32"), p=2, axis=None, keepdim=False, )
paddle.linalg.vector_norm(x=Tensor([0, 4],"float32"), p=2, axis=None, keepdim=True, )
paddle.linalg.vector_norm(x=Tensor([0, 4],"float64"), p=0, axis=1, keepdim=False, )
paddle.linalg.vector_norm(x=Tensor([0, 4],"float64"), p=0, axis=1, keepdim=True, )
paddle.linalg.vector_norm(x=Tensor([0, 4],"float64"), p=0, axis=None, keepdim=False, )
paddle.linalg.vector_norm(x=Tensor([0, 4],"float64"), p=0, axis=None, keepdim=True, )
paddle.linalg.vector_norm(x=Tensor([0, 4],"float64"), p=1, axis=1, keepdim=False, )
paddle.linalg.vector_norm(x=Tensor([0, 4],"float64"), p=1, axis=1, keepdim=True, )
paddle.linalg.vector_norm(x=Tensor([0, 4],"float64"), p=2, axis=1, keepdim=False, )
paddle.linalg.vector_norm(x=Tensor([0, 4],"float64"), p=2, axis=1, keepdim=True, )
paddle.linalg.vector_norm(x=Tensor([1, 0, 5, 14],"complex128"), p=math.inf, axis=2, keepdim=False, )
paddle.linalg.vector_norm(x=Tensor([1, 0, 5, 14],"complex128"), p=math.inf, axis=2, keepdim=True, )
paddle.linalg.vector_norm(x=Tensor([1, 14, 5, 0],"complex128"), p=math.inf, axis=2, keepdim=False, )
paddle.linalg.vector_norm(x=Tensor([1, 14, 5, 0],"complex128"), p=math.inf, axis=2, keepdim=True, )
paddle.linalg.vector_norm(x=Tensor([2, 0, 4],"float32"), p=math.inf, axis=0, keepdim=False, )
paddle.linalg.vector_norm(x=Tensor([2, 0, 4],"float32"), p=math.inf, axis=0, keepdim=True, )
paddle.linalg.vector_norm(x=Tensor([2, 0, 4],"float64"), p=2, axis=-1, keepdim=False, )
paddle.linalg.vector_norm(x=Tensor([2, 0, 4],"float64"), p=2, axis=-1, keepdim=True, )
paddle.linalg.vector_norm(x=Tensor([2, 0, 4],"float64"), p=-math.inf, axis=0, keepdim=False, )
paddle.linalg.vector_norm(x=Tensor([2, 0, 4],"float64"), p=-math.inf, axis=0, keepdim=True, )
paddle.linalg.vector_norm(x=Tensor([2, 3, 0],"float32"), p=math.inf, axis=0, keepdim=False, )
paddle.linalg.vector_norm(x=Tensor([2, 3, 0],"float32"), p=math.inf, axis=0, keepdim=True, )
paddle.linalg.vector_norm(x=Tensor([2, 3, 0],"float64"), p=2, axis=-1, keepdim=False, )
paddle.linalg.vector_norm(x=Tensor([2, 3, 0],"float64"), p=2, axis=-1, keepdim=True, )
paddle.linalg.vector_norm(x=Tensor([2, 3, 0],"float64"), p=-math.inf, axis=0, keepdim=False, )
paddle.linalg.vector_norm(x=Tensor([2, 3, 0],"float64"), p=-math.inf, axis=0, keepdim=True, )
paddle.linalg.vector_norm(x=Tensor([2, 3, 0],"float64"), p=math.inf, axis=list[0,1,], keepdim=False, )
paddle.linalg.vector_norm(x=Tensor([2, 3, 0],"float64"), p=math.inf, axis=list[0,1,], keepdim=True, )
paddle.linalg.vector_norm(x=Tensor([3, 0],"float32"), p=2, axis=None, keepdim=False, )
paddle.linalg.vector_norm(x=Tensor([3, 0],"float32"), p=2, axis=None, keepdim=True, )
paddle.linalg.vector_norm(x=Tensor([3, 0],"float64"), p=0, axis=1, keepdim=False, )
paddle.linalg.vector_norm(x=Tensor([3, 0],"float64"), p=0, axis=1, keepdim=True, )
paddle.linalg.vector_norm(x=Tensor([3, 0],"float64"), p=0, axis=None, keepdim=False, )
paddle.linalg.vector_norm(x=Tensor([3, 0],"float64"), p=0, axis=None, keepdim=True, )
paddle.linalg.vector_norm(x=Tensor([3, 0],"float64"), p=1, axis=1, keepdim=False, )
paddle.linalg.vector_norm(x=Tensor([3, 0],"float64"), p=1, axis=1, keepdim=True, )
paddle.linalg.vector_norm(x=Tensor([3, 0],"float64"), p=2, axis=1, keepdim=False, )
paddle.linalg.vector_norm(x=Tensor([3, 0],"float64"), p=2, axis=1, keepdim=True, )
paddle.logsumexp(Tensor([0, 16, 4, 8],"float32"), axis=3, keepdim=True, )
paddle.logsumexp(Tensor([0, 200, 40],"float32"), axis=-1, keepdim=False, )
paddle.logsumexp(Tensor([0, 200, 40],"float32"), axis=list[0,2,], keepdim=False, )
paddle.logsumexp(Tensor([0, 3, 4, 5],"float16"), list[-1,], False, )
paddle.logsumexp(Tensor([0, 3, 4, 5],"float32"), 2, False, )
paddle.logsumexp(Tensor([0, 3, 4, 5],"float32"), list[-1,], False, )
paddle.logsumexp(Tensor([0, 3, 4, 5],"float32"), list[2,-3,], False, )
paddle.logsumexp(Tensor([0, 3, 4, 5],"float32"), tuple(0,1,-1,), False, )
paddle.logsumexp(Tensor([0, 3, 4, 5],"float64"), list[0,-1,], False, )
paddle.logsumexp(Tensor([0, 3, 4, 5],"float64"), list[0,1,2,3,], False, )
paddle.logsumexp(Tensor([0, 3, 4, 5],"float64"), list[-1,], True, )
paddle.logsumexp(Tensor([0, 4, 16, 1],"float32"), axis=1, keepdim=True, )
paddle.logsumexp(Tensor([0, 5, 6],"float64"), list[-1,], False, )
paddle.logsumexp(Tensor([0, 60],"float32"), axis=1, )
paddle.logsumexp(Tensor([0, 8, 4, 8],"float32"), axis=3, keepdim=True, )
paddle.logsumexp(Tensor([0],"float32"), axis=0, )
paddle.logsumexp(Tensor([10, 0],"float32"), axis=1, )
paddle.logsumexp(Tensor([2, 0, 4, 5],"float16"), list[-1,], False, )
paddle.logsumexp(Tensor([2, 0, 4, 5],"float32"), 2, False, )
paddle.logsumexp(Tensor([2, 0, 4, 5],"float32"), list[-1,], False, )
paddle.logsumexp(Tensor([2, 0, 4, 5],"float32"), list[2,-3,], False, )
paddle.logsumexp(Tensor([2, 0, 4, 5],"float32"), tuple(0,1,-1,), False, )
paddle.logsumexp(Tensor([2, 0, 4, 5],"float64"), list[0,-1,], False, )
paddle.logsumexp(Tensor([2, 0, 4, 5],"float64"), list[0,1,2,3,], False, )
paddle.logsumexp(Tensor([2, 0, 4, 5],"float64"), list[-1,], True, )
paddle.logsumexp(Tensor([2, 0],"float32"), axis=1, )
paddle.logsumexp(Tensor([2, 3, 0, 5],"float16"), list[-1,], False, )
paddle.logsumexp(Tensor([2, 3, 0, 5],"float32"), 2, False, )
paddle.logsumexp(Tensor([2, 3, 0, 5],"float32"), list[-1,], False, )
paddle.logsumexp(Tensor([2, 3, 0, 5],"float32"), list[2,-3,], False, )
paddle.logsumexp(Tensor([2, 3, 0, 5],"float32"), tuple(0,1,-1,), False, )
paddle.logsumexp(Tensor([2, 3, 0, 5],"float64"), list[0,-1,], False, )
paddle.logsumexp(Tensor([2, 3, 0, 5],"float64"), list[0,1,2,3,], False, )
paddle.logsumexp(Tensor([2, 3, 0, 5],"float64"), list[-1,], True, )
paddle.logsumexp(Tensor([2, 3, 4, 0],"float16"), list[-1,], False, )
paddle.logsumexp(Tensor([2, 3, 4, 0],"float32"), 2, False, )
paddle.logsumexp(Tensor([2, 3, 4, 0],"float32"), list[-1,], False, )
paddle.logsumexp(Tensor([2, 3, 4, 0],"float32"), list[2,-3,], False, )
paddle.logsumexp(Tensor([2, 3, 4, 0],"float32"), tuple(0,1,-1,), False, )
paddle.logsumexp(Tensor([2, 3, 4, 0],"float64"), list[0,-1,], False, )
paddle.logsumexp(Tensor([2, 3, 4, 0],"float64"), list[0,1,2,3,], False, )
paddle.logsumexp(Tensor([2, 3, 4, 0],"float64"), list[-1,], True, )
paddle.logsumexp(Tensor([26, 0, 16, 1],"float32"), axis=1, keepdim=True, )
paddle.logsumexp(Tensor([26, 0, 4, 8],"float32"), axis=3, keepdim=True, )
paddle.logsumexp(Tensor([26, 16, 0, 8],"float32"), axis=3, keepdim=True, )
paddle.logsumexp(Tensor([26, 16, 4, 0],"float32"), axis=3, keepdim=True, )
paddle.logsumexp(Tensor([26, 4, 0, 1],"float32"), axis=1, keepdim=True, )
paddle.logsumexp(Tensor([26, 4, 16, 0],"float32"), axis=1, keepdim=True, )
paddle.logsumexp(Tensor([26, 8, 0, 8],"float32"), axis=3, keepdim=True, )
paddle.logsumexp(Tensor([26, 8, 4, 0],"float32"), axis=3, keepdim=True, )
paddle.logsumexp(Tensor([30, 0, 40],"float32"), axis=-1, keepdim=False, )
paddle.logsumexp(Tensor([30, 0, 40],"float32"), axis=list[0,2,], keepdim=False, )
paddle.logsumexp(Tensor([30, 200, 0],"float32"), axis=-1, keepdim=False, )
paddle.logsumexp(Tensor([30, 200, 0],"float32"), axis=list[0,2,], keepdim=False, )
paddle.logsumexp(Tensor([4, 0, 6],"float64"), list[-1,], False, )
paddle.logsumexp(Tensor([4, 5, 0],"float64"), list[-1,], False, )
paddle.logsumexp(x=Tensor([0, 3, 2],"float32"), axis=2, )
paddle.logsumexp(x=Tensor([0, 3, 2],"float64"), axis=0, keepdim=True, )
paddle.logsumexp(x=Tensor([0, 3, 2],"float64"), axis=2, )
paddle.logsumexp(x=Tensor([0, 3, 2],"float64"), axis=list[0,1,], )
paddle.logsumexp(x=Tensor([0, 3, 2],"float64"), axis=list[0,1,], keepdim=True, )
paddle.logsumexp(x=Tensor([2, 0, 2],"float32"), axis=2, )
paddle.logsumexp(x=Tensor([2, 0, 2],"float64"), axis=0, keepdim=True, )
paddle.logsumexp(x=Tensor([2, 0, 2],"float64"), axis=2, )
paddle.logsumexp(x=Tensor([2, 0, 2],"float64"), axis=list[0,1,], )
paddle.logsumexp(x=Tensor([2, 0, 2],"float64"), axis=list[0,1,], keepdim=True, )
paddle.logsumexp(x=Tensor([2, 3, 0],"float32"), axis=2, )
paddle.logsumexp(x=Tensor([2, 3, 0],"float64"), axis=0, keepdim=True, )
paddle.logsumexp(x=Tensor([2, 3, 0],"float64"), axis=2, )
paddle.logsumexp(x=Tensor([2, 3, 0],"float64"), axis=list[0,1,], )
paddle.logsumexp(x=Tensor([2, 3, 0],"float64"), axis=list[0,1,], keepdim=True, )
paddle.masked_select(Tensor([0, 1],"float32"), Tensor([0, 1],"bool"), )
paddle.masked_select(Tensor([0, 1],"float32"), Tensor([1, 1],"bool"), )
paddle.masked_select(Tensor([0, 2, 2],"float32"), Tensor([0, 2, 2],"bool"), )
paddle.masked_select(Tensor([0, 2, 2],"float32"), Tensor([1, 2, 2],"bool"), )
paddle.masked_select(Tensor([0, 21504, 4],"float32"), Tensor([0, 21504, 4],"bool"), )
paddle.masked_select(Tensor([0, 21504, 4],"float32"), Tensor([1, 21504, 4],"bool"), )
paddle.masked_select(Tensor([0, 21504],"float32"), Tensor([0, 21504],"bool"), )
paddle.masked_select(Tensor([0, 21504],"float32"), Tensor([1, 21504],"bool"), )
paddle.masked_select(Tensor([1, 0, 2],"float32"), Tensor([1, 0, 2],"bool"), )
paddle.masked_select(Tensor([1, 0, 4],"float32"), Tensor([1, 0, 4],"bool"), )
paddle.masked_select(Tensor([1, 0],"float32"), Tensor([1, 0],"bool"), )
paddle.masked_select(Tensor([1, 0],"float32"), Tensor([1, 1],"bool"), )
paddle.masked_select(Tensor([1, 1],"float32"), Tensor([0, 1],"bool"), )
paddle.masked_select(Tensor([1, 1],"float32"), Tensor([1, 0],"bool"), )
paddle.masked_select(Tensor([1, 2, 0],"float32"), Tensor([1, 2, 0],"bool"), )
paddle.masked_select(Tensor([1, 2, 2],"float32"), Tensor([0, 2, 2],"bool"), )
paddle.masked_select(Tensor([1, 21504, 0],"float32"), Tensor([1, 21504, 0],"bool"), )
paddle.masked_select(Tensor([1, 21504, 4],"float32"), Tensor([0, 21504, 4],"bool"), )
paddle.masked_select(Tensor([1, 21504],"float32"), Tensor([0, 21504],"bool"), )
paddle.masked_select(x=Tensor([0, 3],"float32"), mask=Tensor([0, 3],"bool"), )
paddle.masked_select(x=Tensor([0, 3],"float64"), mask=Tensor([0, 3],"bool"), )
paddle.masked_select(x=Tensor([2, 0],"float32"), mask=Tensor([2, 0],"bool"), )
paddle.masked_select(x=Tensor([2, 0],"float64"), mask=Tensor([2, 0],"bool"), )
paddle.mean(Tensor([0, 1, 1, 1, 3],"float64"), )
paddle.mean(Tensor([0, 1, 1, 1],"float64"), )
paddle.mean(Tensor([0, 1, 1, 4, 3],"float64"), )
paddle.mean(Tensor([0, 1, 1],"float64"), )
paddle.mean(Tensor([0, 1, 100],"float32"), )
paddle.mean(Tensor([0, 1, 16, 16],"float32"), )
paddle.mean(Tensor([0, 1, 8, 8],"float32"), axis=tuple(-3,-2,-1,), keepdim=True, )
paddle.mean(Tensor([0, 1],"float32"), )
paddle.mean(Tensor([0, 1],"float32"), name=None, )
paddle.mean(Tensor([0, 10, 5],"float64"), name=None, )
paddle.mean(Tensor([0, 10],"float32"), axis=-1, )
paddle.mean(Tensor([0, 10],"float32"), name=None, )
paddle.mean(Tensor([0, 100, 2, 2, 2, 2],"float16"), )
paddle.mean(Tensor([0, 100, 2, 2, 2, 2],"float64"), )
paddle.mean(Tensor([0, 120],"float64"), )
paddle.mean(Tensor([0, 14, 5, 1, 1, 2, 1, 1, 2],"float32"), )
paddle.mean(Tensor([0, 16, 3, 3],"float32"), axis=list[1,2,3,], keepdim=True, )
paddle.mean(Tensor([0, 2, 1, 512, 4, 4],"float32"), 0, True, None, )
paddle.mean(Tensor([0, 2, 16, 4, 16],"float32"), axis=-1, keepdim=True, )
paddle.mean(Tensor([0, 2, 16],"float32"), axis=0, )
paddle.mean(Tensor([0, 2, 3, 1, 5, 1, 2],"float64"), )
paddle.mean(Tensor([0, 2, 3, 4, 4, 3, 3],"float64"), )
paddle.mean(Tensor([0, 2],"float64"), axis=1, )
paddle.mean(Tensor([0, 200, 40],"float32"), axis=1, keepdim=False, )
paddle.mean(Tensor([0, 200, 40],"float32"), axis=-1, keepdim=False, )
paddle.mean(Tensor([0, 200, 40],"float32"), axis=list[0,2,], keepdim=False, )
paddle.mean(Tensor([0, 256, 16, 16],"float16"), -2, )
paddle.mean(Tensor([0, 256, 16, 16],"float32"), -2, )
paddle.mean(Tensor([0, 256],"float32"), axis=-1, keepdim=True, )
paddle.mean(Tensor([0, 256],"float64"), axis=-1, keepdim=True, )
paddle.mean(Tensor([0, 28, 28],"float32"), axis=tuple(-3,-2,-1,), keepdim=True, )
paddle.mean(Tensor([0, 3, 10, 10],"float32"), name=None, )
paddle.mean(Tensor([0, 3, 2048],"float16"), axis=1, )
paddle.mean(Tensor([0, 3, 3, 4, 3, 4, 3, 4],"float64"), )
paddle.mean(Tensor([0, 3, 3, 4],"float64"), name=None, )
paddle.mean(Tensor([0, 3, 4, 4, 2, 3, 4, 4],"float64"), )
paddle.mean(Tensor([0, 3],"float32"), axis=list[0,], )
paddle.mean(Tensor([0, 300, 2048],"float32"), axis=list[1,2,], )
paddle.mean(Tensor([0, 32, 1, 1],"float32"), axis=list[1,2,3,], keepdim=True, )
paddle.mean(Tensor([0, 49, 512],"float32"), axis=1, )
paddle.mean(Tensor([0, 5],"float32"), axis=None, )
paddle.mean(Tensor([0, 512],"float32"), 1, keepdim=True, )
paddle.mean(Tensor([0, 60],"float32"), axis=0, )
paddle.mean(Tensor([0, 64],"float32"), axis=-1, )
paddle.mean(Tensor([0, 7, 32],"float32"), axis=-1, keepdim=True, )
paddle.mean(Tensor([0, 8, 768],"float16"), axis=1, keepdim=True, )
paddle.mean(Tensor([0, 8, 768],"float32"), axis=1, keepdim=True, )
paddle.mean(Tensor([0, 8, 8],"float32"), axis=tuple(-3,-2,-1,), keepdim=True, )
paddle.mean(Tensor([0, 9],"float32"), axis=1, )
paddle.mean(Tensor([0, 96, 1],"float32"), name=None, )
paddle.mean(Tensor([0, 96, 2],"float32"), axis=-1, )
paddle.mean(Tensor([0, 960, 960],"float32"), axis=list[1,2,], )
paddle.mean(Tensor([0],"float16"), axis=0, )
paddle.mean(Tensor([0],"float32"), )
paddle.mean(Tensor([0],"float32"), axis=0, )
paddle.mean(Tensor([0],"float32"), name=None, )
paddle.mean(Tensor([0],"float64"), )
paddle.mean(Tensor([1, 0, 1, 1, 3],"float64"), )
paddle.mean(Tensor([1, 0, 1, 1],"float64"), )
paddle.mean(Tensor([1, 0, 1, 4, 3],"float64"), )
paddle.mean(Tensor([1, 0, 1],"float64"), )
paddle.mean(Tensor([1, 0, 100],"float32"), )
paddle.mean(Tensor([1, 0, 16, 16],"float32"), )
paddle.mean(Tensor([1, 0, 2, 2, 2, 2],"float16"), )
paddle.mean(Tensor([1, 0, 2, 2, 2, 2],"float64"), )
paddle.mean(Tensor([1, 0, 28],"float32"), axis=tuple(-3,-2,-1,), keepdim=True, )
paddle.mean(Tensor([1, 0, 3, 4, 4, 3, 3],"float64"), )
paddle.mean(Tensor([1, 0, 8],"float32"), axis=tuple(-3,-2,-1,), keepdim=True, )
paddle.mean(Tensor([1, 0],"float32"), )
paddle.mean(Tensor([1, 0],"float32"), 1, keepdim=True, )
paddle.mean(Tensor([1, 0],"float32"), name=None, )
paddle.mean(Tensor([1, 0],"float64"), )
paddle.mean(Tensor([1, 1, 0, 1, 3],"float64"), )
paddle.mean(Tensor([1, 1, 0, 1],"float64"), )
paddle.mean(Tensor([1, 1, 0, 16],"float32"), )
paddle.mean(Tensor([1, 1, 0, 4, 3],"float64"), )
paddle.mean(Tensor([1, 1, 0],"float32"), )
paddle.mean(Tensor([1, 1, 0],"float64"), )
paddle.mean(Tensor([1, 1, 1, 0, 3],"float64"), )
paddle.mean(Tensor([1, 1, 1, 0],"float64"), )
paddle.mean(Tensor([1, 1, 1, 1, 0],"float64"), )
paddle.mean(Tensor([1, 1, 1, 4, 0],"float64"), )
paddle.mean(Tensor([1, 1, 16, 0],"float32"), )
paddle.mean(Tensor([1, 100, 0, 2, 2, 2],"float16"), )
paddle.mean(Tensor([1, 100, 0, 2, 2, 2],"float64"), )
paddle.mean(Tensor([1, 100, 2, 0, 2, 2],"float16"), )
paddle.mean(Tensor([1, 100, 2, 0, 2, 2],"float64"), )
paddle.mean(Tensor([1, 100, 2, 2, 0, 2],"float16"), )
paddle.mean(Tensor([1, 100, 2, 2, 0, 2],"float64"), )
paddle.mean(Tensor([1, 100, 2, 2, 2, 0],"float16"), )
paddle.mean(Tensor([1, 100, 2, 2, 2, 0],"float64"), )
paddle.mean(Tensor([1, 2, 0, 4, 4, 3, 3],"float64"), )
paddle.mean(Tensor([1, 2, 3, 0, 4, 3, 3],"float64"), )
paddle.mean(Tensor([1, 2, 3, 4, 0, 3, 3],"float64"), )
paddle.mean(Tensor([1, 2, 3, 4, 4, 0, 3],"float64"), )
paddle.mean(Tensor([1, 2, 3, 4, 4, 3, 0],"float64"), )
paddle.mean(Tensor([1, 28, 0],"float32"), axis=tuple(-3,-2,-1,), keepdim=True, )
paddle.mean(Tensor([1, 8, 0],"float32"), axis=tuple(-3,-2,-1,), keepdim=True, )
paddle.mean(Tensor([10, 0, 5],"float64"), name=None, )
paddle.mean(Tensor([10, 0],"float32"), axis=0, )
paddle.mean(Tensor([10, 0],"float32"), name=None, )
paddle.mean(Tensor([10, 10, 0],"float64"), name=None, )
paddle.mean(Tensor([128, 0, 512],"float32"), axis=1, )
paddle.mean(Tensor([128, 49, 0],"float32"), axis=1, )
paddle.mean(Tensor([13, 0, 16, 4, 16],"float32"), axis=-1, keepdim=True, )
paddle.mean(Tensor([13, 0, 32],"float32"), axis=-1, keepdim=True, )
paddle.mean(Tensor([13, 2, 0, 4, 16],"float32"), axis=-1, keepdim=True, )
paddle.mean(Tensor([13, 2, 16, 0, 16],"float32"), axis=-1, keepdim=True, )
paddle.mean(Tensor([13, 2, 16, 4, 0],"float32"), axis=-1, keepdim=True, )
paddle.mean(Tensor([13, 7, 0],"float32"), axis=-1, keepdim=True, )
paddle.mean(Tensor([14, 0, 768],"float16"), axis=1, keepdim=True, )
paddle.mean(Tensor([14, 0, 768],"float32"), axis=1, keepdim=True, )
paddle.mean(Tensor([14, 8, 0],"float16"), axis=1, keepdim=True, )
paddle.mean(Tensor([14, 8, 0],"float32"), axis=1, keepdim=True, )
paddle.mean(Tensor([16, 0, 1, 1],"float32"), axis=list[1,2,3,], keepdim=True, )
paddle.mean(Tensor([16, 0, 1],"float32"), name=None, )
paddle.mean(Tensor([16, 0, 2],"float32"), axis=-1, )
paddle.mean(Tensor([16, 0, 2048],"float16"), axis=1, )
paddle.mean(Tensor([16, 0, 3, 3],"float32"), axis=list[1,2,3,], keepdim=True, )
paddle.mean(Tensor([16, 0],"float32"), axis=-1, keepdim=True, )
paddle.mean(Tensor([16, 0],"float64"), axis=-1, keepdim=True, )
paddle.mean(Tensor([16, 16, 0, 3],"float32"), axis=list[1,2,3,], keepdim=True, )
paddle.mean(Tensor([16, 16, 3, 0],"float32"), axis=list[1,2,3,], keepdim=True, )
paddle.mean(Tensor([16, 3, 0],"float16"), axis=1, )
paddle.mean(Tensor([16, 32, 0, 1],"float32"), axis=list[1,2,3,], keepdim=True, )
paddle.mean(Tensor([16, 32, 1, 0],"float32"), axis=list[1,2,3,], keepdim=True, )
paddle.mean(Tensor([16, 96, 0],"float32"), axis=-1, )
paddle.mean(Tensor([16, 96, 0],"float32"), name=None, )
paddle.mean(Tensor([2, 0, 2],"float32"), axis=-1, )
paddle.mean(Tensor([2, 0, 2048],"float32"), axis=list[1,2,], )
paddle.mean(Tensor([2, 0, 3, 4, 3, 4, 3, 4],"float64"), )
paddle.mean(Tensor([2, 0, 4, 4, 2, 3, 4, 4],"float64"), )
paddle.mean(Tensor([2, 0, 5, 1, 1, 2, 1, 1, 2],"float32"), )
paddle.mean(Tensor([2, 0, 8, 8],"float32"), axis=tuple(-3,-2,-1,), keepdim=True, )
paddle.mean(Tensor([2, 0],"float32"), axis=0, )
paddle.mean(Tensor([2, 0],"float32"), axis=list[0,], )
paddle.mean(Tensor([2, 1, 0, 8],"float32"), axis=tuple(-3,-2,-1,), keepdim=True, )
paddle.mean(Tensor([2, 1, 8, 0],"float32"), axis=tuple(-3,-2,-1,), keepdim=True, )
paddle.mean(Tensor([2, 14, 0, 1, 1, 2, 1, 1, 2],"float32"), )
paddle.mean(Tensor([2, 14, 5, 0, 1, 2, 1, 1, 2],"float32"), )
paddle.mean(Tensor([2, 14, 5, 1, 0, 2, 1, 1, 2],"float32"), )
paddle.mean(Tensor([2, 14, 5, 1, 1, 0, 1, 1, 2],"float32"), )
paddle.mean(Tensor([2, 14, 5, 1, 1, 2, 0, 1, 2],"float32"), )
paddle.mean(Tensor([2, 14, 5, 1, 1, 2, 1, 0, 2],"float32"), )
paddle.mean(Tensor([2, 14, 5, 1, 1, 2, 1, 1, 0],"float32"), )
paddle.mean(Tensor([2, 3, 0, 4, 2, 3, 4, 4],"float64"), )
paddle.mean(Tensor([2, 3, 0, 4, 3, 4, 3, 4],"float64"), )
paddle.mean(Tensor([2, 3, 3, 0, 3, 4, 3, 4],"float64"), )
paddle.mean(Tensor([2, 3, 3, 4, 0, 4, 3, 4],"float64"), )
paddle.mean(Tensor([2, 3, 3, 4, 3, 0, 3, 4],"float64"), )
paddle.mean(Tensor([2, 3, 3, 4, 3, 4, 0, 4],"float64"), )
paddle.mean(Tensor([2, 3, 3, 4, 3, 4, 3, 0],"float64"), )
paddle.mean(Tensor([2, 3, 4, 0, 2, 3, 4, 4],"float64"), )
paddle.mean(Tensor([2, 3, 4, 4, 0, 3, 4, 4],"float64"), )
paddle.mean(Tensor([2, 3, 4, 4, 2, 0, 4, 4],"float64"), )
paddle.mean(Tensor([2, 3, 4, 4, 2, 3, 0, 4],"float64"), )
paddle.mean(Tensor([2, 3, 4, 4, 2, 3, 4, 0],"float64"), )
paddle.mean(Tensor([2, 300, 0],"float32"), axis=list[1,2,], )
paddle.mean(Tensor([2, 96, 0],"float32"), axis=-1, )
paddle.mean(Tensor([26, 0, 32],"float32"), axis=-1, keepdim=True, )
paddle.mean(Tensor([26, 7, 0],"float32"), axis=-1, keepdim=True, )
paddle.mean(Tensor([26182, 0, 16],"float32"), axis=0, )
paddle.mean(Tensor([26182, 2, 0],"float32"), axis=0, )
paddle.mean(Tensor([3, 0, 10, 10],"float32"), name=None, )
paddle.mean(Tensor([3, 0, 3, 1, 5, 1, 2],"float64"), )
paddle.mean(Tensor([3, 0],"float32"), axis=None, )
paddle.mean(Tensor([3, 2, 0, 1, 5, 1, 2],"float64"), )
paddle.mean(Tensor([3, 2, 3, 0, 5, 1, 2],"float64"), )
paddle.mean(Tensor([3, 2, 3, 1, 0, 1, 2],"float64"), )
paddle.mean(Tensor([3, 2, 3, 1, 5, 0, 2],"float64"), )
paddle.mean(Tensor([3, 2, 3, 1, 5, 1, 0],"float64"), )
paddle.mean(Tensor([3, 3, 0, 10],"float32"), name=None, )
paddle.mean(Tensor([3, 3, 10, 0],"float32"), name=None, )
paddle.mean(Tensor([30, 0, 40],"float32"), axis=1, keepdim=False, )
paddle.mean(Tensor([30, 0, 40],"float32"), axis=-1, keepdim=False, )
paddle.mean(Tensor([30, 0, 40],"float32"), axis=list[0,2,], keepdim=False, )
paddle.mean(Tensor([30, 200, 0],"float32"), axis=1, keepdim=False, )
paddle.mean(Tensor([30, 200, 0],"float32"), axis=-1, keepdim=False, )
paddle.mean(Tensor([30, 200, 0],"float32"), axis=list[0,2,], keepdim=False, )
paddle.mean(Tensor([4, 0, 1, 512, 4, 4],"float32"), 0, True, None, )
paddle.mean(Tensor([4, 0, 16, 16],"float16"), -2, )
paddle.mean(Tensor([4, 0, 16, 16],"float32"), -2, )
paddle.mean(Tensor([4, 0, 3, 4],"float64"), name=None, )
paddle.mean(Tensor([4, 0],"float32"), 1, keepdim=True, )
paddle.mean(Tensor([4, 0],"float32"), axis=-1, )
paddle.mean(Tensor([4, 0],"float32"), axis=list[0,], )
paddle.mean(Tensor([4, 2, 0, 512, 4, 4],"float32"), 0, True, None, )
paddle.mean(Tensor([4, 2, 1, 0, 4, 4],"float32"), 0, True, None, )
paddle.mean(Tensor([4, 2, 1, 512, 0, 4],"float32"), 0, True, None, )
paddle.mean(Tensor([4, 2, 1, 512, 4, 0],"float32"), 0, True, None, )
paddle.mean(Tensor([4, 256, 0, 16],"float16"), -2, )
paddle.mean(Tensor([4, 256, 0, 16],"float32"), -2, )
paddle.mean(Tensor([4, 256, 16, 0],"float16"), -2, )
paddle.mean(Tensor([4, 256, 16, 0],"float32"), -2, )
paddle.mean(Tensor([4, 3, 0, 4],"float64"), name=None, )
paddle.mean(Tensor([4, 3, 3, 0],"float64"), name=None, )
paddle.mean(Tensor([5, 0],"float64"), axis=1, )
paddle.mean(Tensor([6, 0],"float32"), axis=1, )
paddle.mean(Tensor([8, 0, 960],"float32"), axis=list[1,2,], )
paddle.mean(Tensor([8, 960, 0],"float32"), axis=list[1,2,], )
paddle.mean(x=Tensor([0, 1, 3],"float64"), axis=list[0,1,], )
paddle.mean(x=Tensor([0, 1, 3],"float64"), axis=list[0,1,2,], )
paddle.mean(x=Tensor([0, 1, 3],"float64"), axis=list[0,1,2,], keepdim=False, )
paddle.mean(x=Tensor([0, 1, 3],"float64"), axis=list[0,2,], keepdim=True, )
paddle.mean(x=Tensor([0, 1, 3],"float64"), axis=tuple(0,1,2,), keepdim=False, )
paddle.mean(x=Tensor([0, 1, 3],"float64"), axis=tuple(0,2,), keepdim=True, )
paddle.mean(x=Tensor([0, 1],"float32"), )
paddle.mean(x=Tensor([0, 4],"float32"), )
paddle.mean(x=Tensor([0, 4],"float64"), axis=1, )
paddle.mean(x=Tensor([0, 4],"float64"), axis=1, keepdim=True, )
paddle.mean(x=Tensor([0, 4],"float64"), axis=-2, )
paddle.mean(x=Tensor([0, 4],"float64"), axis=-2, keepdim=False, )
paddle.mean(x=Tensor([0, 96, 1],"float32"), axis=tuple(1,), keepdim=True, )
paddle.mean(x=Tensor([0, 96, 2],"float32"), axis=-1, )
paddle.mean(x=Tensor([1, 0],"float32"), )
paddle.mean(x=Tensor([1, 0],"float64"), axis=1, )
paddle.mean(x=Tensor([1, 0],"float64"), axis=1, keepdim=True, )
paddle.mean(x=Tensor([1, 0],"float64"), axis=-2, )
paddle.mean(x=Tensor([1, 0],"float64"), axis=-2, keepdim=False, )
paddle.mean(x=Tensor([13, 0, 1],"float32"), axis=tuple(1,), keepdim=True, )
paddle.mean(x=Tensor([13, 96, 0],"float32"), axis=tuple(1,), keepdim=True, )
paddle.mean(x=Tensor([16, 0, 1],"float32"), axis=tuple(1,), keepdim=True, )
paddle.mean(x=Tensor([16, 0, 2],"float32"), axis=-1, )
paddle.mean(x=Tensor([16, 96, 0],"float32"), axis=-1, )
paddle.mean(x=Tensor([16, 96, 0],"float32"), axis=tuple(1,), keepdim=True, )
paddle.mean(x=Tensor([2, 0, 2],"float32"), axis=-1, )
paddle.mean(x=Tensor([2, 0, 3],"float64"), axis=list[0,1,], )
paddle.mean(x=Tensor([2, 0, 3],"float64"), axis=list[0,1,2,], )
paddle.mean(x=Tensor([2, 0, 3],"float64"), axis=list[0,1,2,], keepdim=False, )
paddle.mean(x=Tensor([2, 0, 3],"float64"), axis=list[0,2,], keepdim=True, )
paddle.mean(x=Tensor([2, 0, 3],"float64"), axis=tuple(0,1,2,), keepdim=False, )
paddle.mean(x=Tensor([2, 0, 3],"float64"), axis=tuple(0,2,), keepdim=True, )
paddle.mean(x=Tensor([2, 1, 0],"float64"), axis=list[0,1,], )
paddle.mean(x=Tensor([2, 1, 0],"float64"), axis=list[0,1,2,], )
paddle.mean(x=Tensor([2, 1, 0],"float64"), axis=list[0,1,2,], keepdim=False, )
paddle.mean(x=Tensor([2, 1, 0],"float64"), axis=list[0,2,], keepdim=True, )
paddle.mean(x=Tensor([2, 1, 0],"float64"), axis=tuple(0,1,2,), keepdim=False, )
paddle.mean(x=Tensor([2, 1, 0],"float64"), axis=tuple(0,2,), keepdim=True, )
paddle.mean(x=Tensor([2, 96, 0],"float32"), axis=-1, )
paddle.mm(input=Tensor([2, 3],"float32"), mat2=Tensor([3, 0],"float32"), )
paddle.mm(input=Tensor([2, 3],"float64"), mat2=Tensor([3, 0],"float64"), )
paddle.mm(Tensor([1, 10],"float32"), Tensor([10, 0],"float32"), )
paddle.mm(Tensor([1, 10],"float64"), Tensor([10, 0],"float64"), )
paddle.nn.functional.adaptive_avg_pool1d(Tensor([0, 1024, 49],"float32"), 1, None, )
paddle.nn.functional.adaptive_avg_pool1d(Tensor([0, 256, 16],"float32"), 1, None, )
paddle.nn.functional.adaptive_avg_pool1d(Tensor([12, 0, 16],"float32"), 1, None, )
paddle.nn.functional.adaptive_avg_pool1d(Tensor([12, 0, 49],"float32"), 1, None, )
paddle.nn.functional.normalize(Tensor([0, 10],"float32"), )
paddle.nn.functional.normalize(Tensor([0, 10],"float32"), axis=0, )
paddle.nn.functional.normalize(Tensor([0, 10],"float32"), p=1.5, )
paddle.nn.functional.normalize(Tensor([0, 1024],"float16"), p=2, axis=-1, )
paddle.nn.functional.normalize(Tensor([0, 11],"float32"), axis=1, )
paddle.nn.functional.normalize(Tensor([0, 128, 32, 32],"float32"), axis=1, )
paddle.nn.functional.normalize(Tensor([0, 192],"float32"), axis=1, )
paddle.nn.functional.normalize(Tensor([0, 256, 16, 16],"float32"), axis=1, )
paddle.nn.functional.normalize(Tensor([0, 5],"float32"), axis=0, )
paddle.nn.functional.normalize(Tensor([0, 512],"float16"), )
paddle.nn.functional.normalize(Tensor([0, 64],"float32"), axis=-1, )
paddle.nn.functional.normalize(Tensor([0, 768],"float32"), axis=-1, )
paddle.nn.functional.normalize(Tensor([0],"float32"), axis=0, )
paddle.nn.functional.normalize(Tensor([0],"float32"), axis=0, epsilon=1e-10, )
paddle.nn.functional.normalize(Tensor([0],"float32"), axis=0, epsilon=1e-12, )
paddle.nn.functional.normalize(Tensor([1, 0, 16, 16],"float32"), axis=1, )
paddle.nn.functional.normalize(Tensor([1, 0, 32, 32],"float32"), axis=1, )
paddle.nn.functional.normalize(Tensor([1, 0],"float32"), axis=1, )
paddle.nn.functional.normalize(Tensor([1, 128, 0, 32],"float32"), axis=1, )
paddle.nn.functional.normalize(Tensor([1, 128, 32, 0],"float32"), axis=1, )
paddle.nn.functional.normalize(Tensor([1, 256, 0, 16],"float32"), axis=1, )
paddle.nn.functional.normalize(Tensor([1, 256, 16, 0],"float32"), axis=1, )
paddle.nn.functional.normalize(Tensor([10, 0],"float16"), )
paddle.nn.functional.normalize(Tensor([10, 0],"float32"), )
paddle.nn.functional.normalize(Tensor([10, 0],"float32"), axis=0, )
paddle.nn.functional.normalize(Tensor([10, 0],"float32"), p=1.5, )
paddle.nn.functional.normalize(Tensor([12, 0],"float32"), axis=-1, )
paddle.nn.functional.normalize(Tensor([2, 0],"float16"), p=2, axis=-1, )
paddle.nn.functional.normalize(Tensor([80, 0],"float32"), axis=-1, )
paddle.nn.functional.normalize(x=Tensor([0, 2],"float64"), p=1.2, )
paddle.nn.functional.normalize(x=Tensor([0, 4],"float32"), )
paddle.nn.functional.normalize(x=Tensor([0, 4],"float64"), )
paddle.nn.functional.normalize(x=Tensor([0, 5, 6, 7],"float64"), )
paddle.nn.functional.normalize(x=Tensor([0, 5, 6, 7],"float64"), p=1, )
paddle.nn.functional.normalize(x=Tensor([0, 5, 6, 7],"float64"), p=4, )
paddle.nn.functional.normalize(x=Tensor([0, 5, 6, 7],"float64"), p=4, axis=3, )
paddle.nn.functional.normalize(x=Tensor([0, 5, 6],"float64"), )
paddle.nn.functional.normalize(x=Tensor([0, 768],"float32"), axis=-1, )
paddle.nn.functional.normalize(x=Tensor([0],"float64"), axis=0, )
paddle.nn.functional.normalize(x=Tensor([1, 0],"float32"), axis=-1, )
paddle.nn.functional.normalize(x=Tensor([2, 0],"float32"), )
paddle.nn.functional.normalize(x=Tensor([2, 0],"float64"), )
paddle.nn.functional.normalize(x=Tensor([4, 0, 6, 7],"float64"), )
paddle.nn.functional.normalize(x=Tensor([4, 0, 6, 7],"float64"), p=1, )
paddle.nn.functional.normalize(x=Tensor([4, 0, 6, 7],"float64"), p=4, )
paddle.nn.functional.normalize(x=Tensor([4, 0, 6, 7],"float64"), p=4, axis=3, )
paddle.nn.functional.normalize(x=Tensor([4, 0, 6],"float64"), )
paddle.nn.functional.normalize(x=Tensor([4, 0],"float64"), p=1.2, )
paddle.nn.functional.normalize(x=Tensor([4, 5, 0, 7],"float64"), )
paddle.nn.functional.normalize(x=Tensor([4, 5, 0, 7],"float64"), p=1, )
paddle.nn.functional.normalize(x=Tensor([4, 5, 0, 7],"float64"), p=4, )
paddle.nn.functional.normalize(x=Tensor([4, 5, 0, 7],"float64"), p=4, axis=3, )
paddle.nn.functional.normalize(x=Tensor([4, 5, 0],"float64"), )
paddle.nn.functional.normalize(x=Tensor([4, 5, 6, 0],"float64"), )
paddle.nn.functional.normalize(x=Tensor([4, 5, 6, 0],"float64"), p=1, )
paddle.nn.functional.normalize(x=Tensor([4, 5, 6, 0],"float64"), p=4, )
paddle.nn.functional.normalize(x=Tensor([4, 5, 6, 0],"float64"), p=4, axis=3, )
paddle.nn.functional.pairwise_distance(Tensor([0, 100],"float32"), Tensor([0, 1],"float32"), 2.0, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([0, 100],"float32"), Tensor([0, 100],"float32"), 0, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([0, 100],"float32"), Tensor([0, 100],"float32"), 0, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([0, 100],"float32"), Tensor([0, 100],"float32"), 1, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([0, 100],"float32"), Tensor([0, 100],"float32"), -1, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([0, 100],"float32"), Tensor([0, 100],"float32"), 1, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([0, 100],"float32"), Tensor([0, 100],"float32"), -1, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([0, 100],"float32"), Tensor([0, 100],"float32"), 2, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([0, 100],"float32"), Tensor([0, 100],"float32"), 2, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([0, 100],"float32"), Tensor([0, 100],"float32"), math.inf, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([0, 100],"float32"), Tensor([0, 100],"float32"), -math.inf, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([0, 100],"float32"), Tensor([0, 100],"float32"), math.inf, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([0, 100],"float32"), Tensor([0, 100],"float32"), -math.inf, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([0, 100],"float32"), Tensor([100],"float32"), 2.0, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([0, 100],"float64"), Tensor([0, 100],"float64"), 0, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([0, 100],"float64"), Tensor([0, 100],"float64"), 0, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([0, 100],"float64"), Tensor([0, 100],"float64"), 1, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([0, 100],"float64"), Tensor([0, 100],"float64"), -1, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([0, 100],"float64"), Tensor([0, 100],"float64"), 1, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([0, 100],"float64"), Tensor([0, 100],"float64"), -1, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([0, 100],"float64"), Tensor([0, 100],"float64"), 2, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([0, 100],"float64"), Tensor([0, 100],"float64"), 2, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([0, 100],"float64"), Tensor([0, 100],"float64"), math.inf, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([0, 100],"float64"), Tensor([0, 100],"float64"), -math.inf, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([0, 100],"float64"), Tensor([0, 100],"float64"), math.inf, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([0, 100],"float64"), Tensor([0, 100],"float64"), -math.inf, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([0],"float32"), Tensor([0],"float32"), )
paddle.nn.functional.pairwise_distance(Tensor([0],"float32"), Tensor([0],"float32"), 0, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([0],"float32"), Tensor([0],"float32"), 0, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([0],"float32"), Tensor([0],"float32"), 1, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([0],"float32"), Tensor([0],"float32"), 1, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([0],"float32"), Tensor([0],"float32"), 2, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([0],"float32"), Tensor([0],"float32"), 2, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([0],"float64"), Tensor([0],"float64"), 0, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([0],"float64"), Tensor([0],"float64"), 0, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([0],"float64"), Tensor([0],"float64"), 1, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([0],"float64"), Tensor([0],"float64"), 1, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([0],"float64"), Tensor([0],"float64"), 2, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([0],"float64"), Tensor([0],"float64"), 2, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([100, 0],"float32"), Tensor([100, 0],"float32"), 0, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([100, 0],"float32"), Tensor([100, 0],"float32"), 0, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([100, 0],"float32"), Tensor([100, 0],"float32"), 1, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([100, 0],"float32"), Tensor([100, 0],"float32"), 1, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([100, 0],"float32"), Tensor([100, 0],"float32"), 2, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([100, 0],"float32"), Tensor([100, 0],"float32"), 2, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([100, 0],"float32"), Tensor([100, 0],"float32"), 2.0, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([100, 0],"float32"), Tensor([100, 1],"float32"), 2.0, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([100, 0],"float64"), Tensor([100, 0],"float64"), 0, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([100, 0],"float64"), Tensor([100, 0],"float64"), 0, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([100, 0],"float64"), Tensor([100, 0],"float64"), 1, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([100, 0],"float64"), Tensor([100, 0],"float64"), 1, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([100, 0],"float64"), Tensor([100, 0],"float64"), 2, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([100, 0],"float64"), Tensor([100, 0],"float64"), 2, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(x=Tensor([0, 100],"float32"), y=Tensor([0, 1],"float32"), p=2.0, epsilon=1e-06, keepdim=False, )
paddle.nn.functional.pairwise_distance(x=Tensor([0, 100],"float32"), y=Tensor([100],"float32"), p=2.0, epsilon=1e-06, keepdim=False, )
paddle.nn.functional.pairwise_distance(x=Tensor([100, 0],"float32"), y=Tensor([100, 0],"float32"), p=2.0, epsilon=1e-06, keepdim=False, )
paddle.nn.functional.pairwise_distance(x=Tensor([100, 0],"float32"), y=Tensor([100, 1],"float32"), p=2.0, epsilon=1e-06, keepdim=False, )
paddle.nn.functional.triplet_margin_with_distance_loss(input=Tensor([0, 5],"float64"), positive=Tensor([0, 5],"float64"), negative=Tensor([0, 5],"float64"), distance_function=None, margin=0.3, swap=False, reduction="mean", )
paddle.nn.functional.triplet_margin_with_distance_loss(input=Tensor([0, 5],"float64"), positive=Tensor([0, 5],"float64"), negative=Tensor([0, 5],"float64"), distance_function=None, margin=0.3, swap=False, reduction="none", )
paddle.nn.functional.triplet_margin_with_distance_loss(input=Tensor([0, 5],"float64"), positive=Tensor([0, 5],"float64"), negative=Tensor([0, 5],"float64"), distance_function=None, margin=0.3, swap=False, reduction="sum", )
paddle.nn.functional.triplet_margin_with_distance_loss(input=Tensor([0, 5],"float64"), positive=Tensor([0, 5],"float64"), negative=Tensor([0, 5],"float64"), distance_function=None, margin=0.3, swap=True, reduction="mean", )
paddle.nn.functional.triplet_margin_with_distance_loss(input=Tensor([5, 0],"float64"), positive=Tensor([5, 0],"float64"), negative=Tensor([5, 0],"float64"), distance_function=None, margin=0.3, swap=False, reduction="mean", )
paddle.nn.functional.triplet_margin_with_distance_loss(input=Tensor([5, 0],"float64"), positive=Tensor([5, 0],"float64"), negative=Tensor([5, 0],"float64"), distance_function=None, margin=0.3, swap=False, reduction="none", )
paddle.nn.functional.triplet_margin_with_distance_loss(input=Tensor([5, 0],"float64"), positive=Tensor([5, 0],"float64"), negative=Tensor([5, 0],"float64"), distance_function=None, margin=0.3, swap=False, reduction="sum", )
paddle.nn.functional.triplet_margin_with_distance_loss(input=Tensor([5, 0],"float64"), positive=Tensor([5, 0],"float64"), negative=Tensor([5, 0],"float64"), distance_function=None, margin=0.3, swap=True, reduction="mean", )
paddle.nn.functional.triplet_margin_with_distance_loss(Tensor([0, 5],"float64"), Tensor([0, 5],"float64"), Tensor([0, 5],"float64"), margin=0.3, swap=False, reduction="mean", name=None, )
paddle.nn.functional.triplet_margin_with_distance_loss(Tensor([0, 5],"float64"), Tensor([0, 5],"float64"), Tensor([0, 5],"float64"), margin=0.3, swap=False, reduction="none", name=None, )
paddle.nn.functional.triplet_margin_with_distance_loss(Tensor([0, 5],"float64"), Tensor([0, 5],"float64"), Tensor([0, 5],"float64"), margin=0.3, swap=False, reduction="sum", name=None, )
paddle.nn.functional.triplet_margin_with_distance_loss(Tensor([0, 5],"float64"), Tensor([0, 5],"float64"), Tensor([0, 5],"float64"), margin=0.3, swap=True, reduction="mean", name=None, )
paddle.nn.functional.triplet_margin_with_distance_loss(Tensor([5, 0],"float64"), Tensor([5, 0],"float64"), Tensor([5, 0],"float64"), margin=0.3, swap=False, reduction="mean", name=None, )
paddle.nn.functional.triplet_margin_with_distance_loss(Tensor([5, 0],"float64"), Tensor([5, 0],"float64"), Tensor([5, 0],"float64"), margin=0.3, swap=False, reduction="none", name=None, )
paddle.nn.functional.triplet_margin_with_distance_loss(Tensor([5, 0],"float64"), Tensor([5, 0],"float64"), Tensor([5, 0],"float64"), margin=0.3, swap=False, reduction="sum", name=None, )
paddle.nn.functional.triplet_margin_with_distance_loss(Tensor([5, 0],"float64"), Tensor([5, 0],"float64"), Tensor([5, 0],"float64"), margin=0.3, swap=True, reduction="mean", name=None, )
paddle.nn.utils.vector_to_parameters(Tensor([165],"float32"), list[Tensor([0, 15],"float32"),Tensor([15],"float32"),], )
paddle.nn.utils.vector_to_parameters(Tensor([165],"float32"), list[Tensor([10, 0],"float32"),Tensor([15],"float32"),], )
paddle.nn.utils.vector_to_parameters(Tensor([165],"float32"), list[Tensor([10, 15],"float32"),Tensor([0],"float32"),], )
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([0, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 0],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([0],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([0, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 0],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([0],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([0, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 0],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([0],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([0, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 0],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([0],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([0, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 0],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([0],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([0, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 0],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([0],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([0],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([0],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([0],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([0],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([0, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 0],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([0],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([0, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 0],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([0],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([0, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 0],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([0],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([0, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 0],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([0],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([0, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 0],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([0],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([0, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 0],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([0],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([0],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([0],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([0],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([0],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([0, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 0],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([0],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([0, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 0],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([0],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([0, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 0],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([0],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([0, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 0],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([0],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([0, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 0],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([0],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([0, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 0],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([0],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([0],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([0],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([0],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([0],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([0, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 0],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([0],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([0, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 0],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([0],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([0, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 0],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([0],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([0, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 0],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([0],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([0, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 0],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([0],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([0, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 0],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([0],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([0],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([0],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([0],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([0],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([0],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([0],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([0, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 0],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([0],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([0, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 0],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([0],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([0, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 0],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([0],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([0, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 0],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([0],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Ten ...
paddle.nn.utils.vector_to_parameters(Tensor([27],"float32"), list[Tensor([0, 2, 4],"float32"),Tensor([3],"float32"),], )
paddle.nn.utils.vector_to_parameters(Tensor([27],"float32"), list[Tensor([3, 0, 4],"float32"),Tensor([3],"float32"),], )
paddle.nn.utils.vector_to_parameters(Tensor([27],"float32"), list[Tensor([3, 2, 0],"float32"),Tensor([3],"float32"),], )
paddle.nn.utils.vector_to_parameters(Tensor([27],"float32"), list[Tensor([3, 2, 4],"float32"),Tensor([0],"float32"),], )
paddle.nn.utils.vector_to_parameters(Tensor([2880],"float32"), list[Tensor([0, 8],"float32"),Tensor([48, 16],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),Tensor([48, 16],"float32"),Tensor([48, 16],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),], )
paddle.nn.utils.vector_to_parameters(Tensor([2880],"float32"), list[Tensor([48, 0],"float32"),Tensor([48, 16],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),Tensor([48, 16],"float32"),Tensor([48, 16],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),], )
paddle.nn.utils.vector_to_parameters(Tensor([2880],"float32"), list[Tensor([48, 8],"float32"),Tensor([0, 16],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),Tensor([48, 16],"float32"),Tensor([48, 16],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),], )
paddle.nn.utils.vector_to_parameters(Tensor([2880],"float32"), list[Tensor([48, 8],"float32"),Tensor([48, 0],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),Tensor([48, 16],"float32"),Tensor([48, 16],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),], )
paddle.nn.utils.vector_to_parameters(Tensor([2880],"float32"), list[Tensor([48, 8],"float32"),Tensor([48, 16],"float32"),Tensor([0],"float32"),Tensor([48],"float32"),Tensor([48, 16],"float32"),Tensor([48, 16],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),], )
paddle.nn.utils.vector_to_parameters(Tensor([2880],"float32"), list[Tensor([48, 8],"float32"),Tensor([48, 16],"float32"),Tensor([48],"float32"),Tensor([0],"float32"),Tensor([48, 16],"float32"),Tensor([48, 16],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),], )
paddle.nn.utils.vector_to_parameters(Tensor([2880],"float32"), list[Tensor([48, 8],"float32"),Tensor([48, 16],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),Tensor([0, 16],"float32"),Tensor([48, 16],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),], )
paddle.nn.utils.vector_to_parameters(Tensor([2880],"float32"), list[Tensor([48, 8],"float32"),Tensor([48, 16],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),Tensor([48, 0],"float32"),Tensor([48, 16],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),], )
paddle.nn.utils.vector_to_parameters(Tensor([2880],"float32"), list[Tensor([48, 8],"float32"),Tensor([48, 16],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),Tensor([48, 16],"float32"),Tensor([0, 16],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),], )
paddle.nn.utils.vector_to_parameters(Tensor([2880],"float32"), list[Tensor([48, 8],"float32"),Tensor([48, 16],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),Tensor([48, 16],"float32"),Tensor([48, 0],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),], )
paddle.nn.utils.vector_to_parameters(Tensor([2880],"float32"), list[Tensor([48, 8],"float32"),Tensor([48, 16],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),Tensor([48, 16],"float32"),Tensor([48, 16],"float32"),Tensor([0],"float32"),Tensor([48],"float32"),], )
paddle.nn.utils.vector_to_parameters(Tensor([2880],"float32"), list[Tensor([48, 8],"float32"),Tensor([48, 16],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),Tensor([48, 16],"float32"),Tensor([48, 16],"float32"),Tensor([48],"float32"),Tensor([0],"float32"),], )
paddle.nn.utils.vector_to_parameters(Tensor([30],"float32"), list[Tensor([0, 3],"float32"),], )
paddle.nn.utils.vector_to_parameters(Tensor([30],"float32"), list[Tensor([10, 0],"float32"),], )
paddle.nn.utils.vector_to_parameters(Tensor([3840],"float32"), list[Tensor([0, 8],"float32"),Tensor([64, 16],"float32"),Tensor([64],"float32"),Tensor([64],"float32"),Tensor([64, 16],"float32"),Tensor([64, 16],"float32"),Tensor([64],"float32"),Tensor([64],"float32"),], )
paddle.nn.utils.vector_to_parameters(Tensor([3840],"float32"), list[Tensor([64, 0],"float32"),Tensor([64, 16],"float32"),Tensor([64],"float32"),Tensor([64],"float32"),Tensor([64, 16],"float32"),Tensor([64, 16],"float32"),Tensor([64],"float32"),Tensor([64],"float32"),], )
paddle.nn.utils.vector_to_parameters(Tensor([3840],"float32"), list[Tensor([64, 8],"float32"),Tensor([0, 16],"float32"),Tensor([64],"float32"),Tensor([64],"float32"),Tensor([64, 16],"float32"),Tensor([64, 16],"float32"),Tensor([64],"float32"),Tensor([64],"float32"),], )
paddle.nn.utils.vector_to_parameters(Tensor([3840],"float32"), list[Tensor([64, 8],"float32"),Tensor([64, 0],"float32"),Tensor([64],"float32"),Tensor([64],"float32"),Tensor([64, 16],"float32"),Tensor([64, 16],"float32"),Tensor([64],"float32"),Tensor([64],"float32"),], )
paddle.nn.utils.vector_to_parameters(Tensor([3840],"float32"), list[Tensor([64, 8],"float32"),Tensor([64, 16],"float32"),Tensor([0],"float32"),Tensor([64],"float32"),Tensor([64, 16],"float32"),Tensor([64, 16],"float32"),Tensor([64],"float32"),Tensor([64],"float32"),], )
paddle.nn.utils.vector_to_parameters(Tensor([3840],"float32"), list[Tensor([64, 8],"float32"),Tensor([64, 16],"float32"),Tensor([64],"float32"),Tensor([0],"float32"),Tensor([64, 16],"float32"),Tensor([64, 16],"float32"),Tensor([64],"float32"),Tensor([64],"float32"),], )
paddle.nn.utils.vector_to_parameters(Tensor([3840],"float32"), list[Tensor([64, 8],"float32"),Tensor([64, 16],"float32"),Tensor([64],"float32"),Tensor([64],"float32"),Tensor([0, 16],"float32"),Tensor([64, 16],"float32"),Tensor([64],"float32"),Tensor([64],"float32"),], )
paddle.nn.utils.vector_to_parameters(Tensor([3840],"float32"), list[Tensor([64, 8],"float32"),Tensor([64, 16],"float32"),Tensor([64],"float32"),Tensor([64],"float32"),Tensor([64, 0],"float32"),Tensor([64, 16],"float32"),Tensor([64],"float32"),Tensor([64],"float32"),], )
paddle.nn.utils.vector_to_parameters(Tensor([3840],"float32"), list[Tensor([64, 8],"float32"),Tensor([64, 16],"float32"),Tensor([64],"float32"),Tensor([64],"float32"),Tensor([64, 16],"float32"),Tensor([0, 16],"float32"),Tensor([64],"float32"),Tensor([64],"float32"),], )
paddle.nn.utils.vector_to_parameters(Tensor([3840],"float32"), list[Tensor([64, 8],"float32"),Tensor([64, 16],"float32"),Tensor([64],"float32"),Tensor([64],"float32"),Tensor([64, 16],"float32"),Tensor([64, 0],"float32"),Tensor([64],"float32"),Tensor([64],"float32"),], )
paddle.nn.utils.vector_to_parameters(Tensor([3840],"float32"), list[Tensor([64, 8],"float32"),Tensor([64, 16],"float32"),Tensor([64],"float32"),Tensor([64],"float32"),Tensor([64, 16],"float32"),Tensor([64, 16],"float32"),Tensor([0],"float32"),Tensor([64],"float32"),], )
paddle.nn.utils.vector_to_parameters(Tensor([3840],"float32"), list[Tensor([64, 8],"float32"),Tensor([64, 16],"float32"),Tensor([64],"float32"),Tensor([64],"float32"),Tensor([64, 16],"float32"),Tensor([64, 16],"float32"),Tensor([64],"float32"),Tensor([0],"float32"),], )
paddle.nn.utils.vector_to_parameters(Tensor([387],"float32"), list[Tensor([0, 2, 4, 4, 4],"float32"),Tensor([3],"float32"),], )
paddle.nn.utils.vector_to_parameters(Tensor([387],"float32"), list[Tensor([3, 0, 4, 4, 4],"float32"),Tensor([3],"float32"),], )
paddle.nn.utils.vector_to_parameters(Tensor([387],"float32"), list[Tensor([3, 2, 0, 4, 4],"float32"),Tensor([3],"float32"),], )
paddle.nn.utils.vector_to_parameters(Tensor([387],"float32"), list[Tensor([3, 2, 4, 0, 4],"float32"),Tensor([3],"float32"),], )
paddle.nn.utils.vector_to_parameters(Tensor([387],"float32"), list[Tensor([3, 2, 4, 4, 0],"float32"),Tensor([3],"float32"),], )
paddle.nn.utils.vector_to_parameters(Tensor([387],"float32"), list[Tensor([3, 2, 4, 4, 4],"float32"),Tensor([0],"float32"),], )
paddle.nn.utils.vector_to_parameters(Tensor([6],"float32"), list[Tensor([0, 2],"float32"),Tensor([2],"float32"),], )
paddle.nn.utils.vector_to_parameters(Tensor([6],"float32"), list[Tensor([2, 0],"float32"),Tensor([2],"float32"),], )
paddle.nn.utils.vector_to_parameters(Tensor([6],"float32"), list[Tensor([2, 2],"float32"),Tensor([0],"float32"),], )
paddle.nn.utils.vector_to_parameters(Tensor([99],"float32"), list[Tensor([0, 2, 4, 4],"float32"),Tensor([3],"float32"),], )
paddle.nn.utils.vector_to_parameters(Tensor([99],"float32"), list[Tensor([3, 0, 4, 4],"float32"),Tensor([3],"float32"),], )
paddle.nn.utils.vector_to_parameters(Tensor([99],"float32"), list[Tensor([3, 2, 0, 4],"float32"),Tensor([3],"float32"),], )
paddle.nn.utils.vector_to_parameters(Tensor([99],"float32"), list[Tensor([3, 2, 4, 0],"float32"),Tensor([3],"float32"),], )
paddle.nn.utils.vector_to_parameters(Tensor([99],"float32"), list[Tensor([3, 2, 4, 4],"float32"),Tensor([0],"float32"),], )
paddle.outer(Tensor([10],"float32"), Tensor([0],"float32"), )
paddle.outer(x=Tensor([4],"float64"), y=Tensor([0],"float64"), )
paddle.pdist(Tensor([0, 20],"float32"), 0, )
paddle.pdist(Tensor([0, 20],"float32"), 1.0, )
paddle.pdist(Tensor([0, 20],"float32"), 1.5, )
paddle.pdist(Tensor([0, 20],"float32"), 2.0, )
paddle.pdist(Tensor([0, 20],"float32"), 2.5, )
paddle.pdist(Tensor([0, 20],"float32"), 3.0, )
paddle.pdist(Tensor([0, 20],"float32"), math.inf, )
paddle.pdist(Tensor([0, 20],"float64"), 2.0, )
paddle.pdist(Tensor([10, 0],"float32"), 0, )
paddle.pdist(Tensor([10, 0],"float32"), 1.0, )
paddle.pdist(Tensor([10, 0],"float32"), 1.5, )
paddle.pdist(Tensor([10, 0],"float32"), 2.0, )
paddle.pdist(Tensor([10, 0],"float32"), 2.5, )
paddle.pdist(Tensor([10, 0],"float32"), 3.0, )
paddle.pdist(Tensor([10, 0],"float32"), math.inf, )
paddle.pdist(Tensor([50, 0],"float64"), 2.0, )
paddle.real(Tensor([0, 10, 10, 20],"complex64"), )
paddle.real(Tensor([0, 20, 2, 3],"complex128"), )
paddle.real(Tensor([10, 0, 10, 20],"complex64"), )
paddle.real(Tensor([10, 10, 0, 20],"complex64"), )
paddle.real(Tensor([10, 10, 10, 0],"complex64"), )
paddle.real(Tensor([2, 0, 2, 3],"complex128"), )
paddle.real(Tensor([2, 20, 0, 3],"complex128"), )
paddle.real(Tensor([2, 20, 2, 0],"complex128"), )
paddle.real(x=Tensor([0, 10],"complex128"), )
paddle.real(x=Tensor([0, 10],"complex64"), )
paddle.real(x=Tensor([1, 0],"complex64"), )
paddle.real(x=Tensor([20, 0],"complex128"), )
paddle.row_stack(list[Tensor([0, 1, 1, 1],"float64"),], )
paddle.row_stack(list[Tensor([0, 1, 1, 1],"float64"),Tensor([0, 1, 1, 1],"float64"),Tensor([0, 1, 1, 1],"float64"),], )
paddle.row_stack(list[Tensor([0, 1, 1],"float64"),], )
paddle.row_stack(list[Tensor([0, 1, 1],"float64"),Tensor([0, 1, 1],"float64"),Tensor([0, 1, 1],"float64"),], )
paddle.row_stack(list[Tensor([0, 1],"float64"),], )
paddle.row_stack(list[Tensor([0, 1],"float64"),Tensor([0, 1],"float64"),Tensor([0, 1],"float64"),], )
paddle.row_stack(list[Tensor([0, 2],"float64"),], )
paddle.row_stack(list[Tensor([0, 2],"float64"),Tensor([0, 2],"float64"),Tensor([0, 2],"float64"),], )
paddle.row_stack(list[Tensor([0, 4, 2, 5],"float64"),], )
paddle.row_stack(list[Tensor([0, 4, 2, 5],"float64"),Tensor([0, 4, 2, 5],"float64"),Tensor([0, 4, 2, 5],"float64"),], )
paddle.row_stack(list[Tensor([0, 4, 2],"float64"),], )
paddle.row_stack(list[Tensor([0, 4, 2],"float64"),Tensor([0, 4, 2],"float64"),Tensor([0, 4, 2],"float64"),], )
paddle.row_stack(list[Tensor([0],"float64"),], )
paddle.row_stack(list[Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),], )
paddle.row_stack(list[Tensor([1, 0, 1, 1],"float64"),], )
paddle.row_stack(list[Tensor([1, 0, 1, 1],"float64"),Tensor([1, 0, 1, 1],"float64"),Tensor([1, 0, 1, 1],"float64"),], )
paddle.row_stack(list[Tensor([1, 0, 1],"float64"),], )
paddle.row_stack(list[Tensor([1, 0, 1],"float64"),Tensor([1, 0, 1],"float64"),Tensor([1, 0, 1],"float64"),], )
paddle.row_stack(list[Tensor([1, 0],"float64"),], )
paddle.row_stack(list[Tensor([1, 0],"float64"),Tensor([1, 0],"float64"),Tensor([1, 0],"float64"),], )
paddle.row_stack(list[Tensor([1, 1, 0, 1],"float64"),], )
paddle.row_stack(list[Tensor([1, 1, 0, 1],"float64"),Tensor([1, 1, 0, 1],"float64"),Tensor([1, 1, 0, 1],"float64"),], )
paddle.row_stack(list[Tensor([1, 1, 0],"float64"),], )
paddle.row_stack(list[Tensor([1, 1, 0],"float64"),Tensor([1, 1, 0],"float64"),Tensor([1, 1, 0],"float64"),], )
paddle.row_stack(list[Tensor([1, 1, 1, 0],"float64"),], )
paddle.row_stack(list[Tensor([1, 1, 1, 0],"float64"),Tensor([1, 1, 1, 0],"float64"),Tensor([1, 1, 1, 0],"float64"),], )
paddle.row_stack(list[Tensor([3, 0, 2, 5],"float64"),], )
paddle.row_stack(list[Tensor([3, 0, 2, 5],"float64"),Tensor([3, 0, 2, 5],"float64"),Tensor([3, 0, 2, 5],"float64"),], )
paddle.row_stack(list[Tensor([3, 0, 2],"float64"),], )
paddle.row_stack(list[Tensor([3, 0, 2],"float64"),Tensor([3, 0, 2],"float64"),Tensor([3, 0, 2],"float64"),], )
paddle.row_stack(list[Tensor([3, 0],"float64"),], )
paddle.row_stack(list[Tensor([3, 0],"float64"),Tensor([3, 0],"float64"),Tensor([3, 0],"float64"),], )
paddle.row_stack(list[Tensor([3, 4, 0, 5],"float64"),], )
paddle.row_stack(list[Tensor([3, 4, 0, 5],"float64"),Tensor([3, 4, 0, 5],"float64"),Tensor([3, 4, 0, 5],"float64"),], )
paddle.row_stack(list[Tensor([3, 4, 0],"float64"),], )
paddle.row_stack(list[Tensor([3, 4, 0],"float64"),Tensor([3, 4, 0],"float64"),Tensor([3, 4, 0],"float64"),], )
paddle.row_stack(list[Tensor([3, 4, 2, 0],"float64"),], )
paddle.row_stack(list[Tensor([3, 4, 2, 0],"float64"),Tensor([3, 4, 2, 0],"float64"),Tensor([3, 4, 2, 0],"float64"),], )
paddle.sgn(Tensor([0, 4],"complex128"), )
paddle.sgn(Tensor([0, 4],"complex64"), )
paddle.sgn(Tensor([2, 0],"complex128"), )
paddle.sgn(Tensor([2, 0],"complex64"), )
paddle.std(Tensor([0, 3, 4, 10],"float32"), list[1,3,], True, False, )
paddle.std(Tensor([0, 3, 4, 10],"float64"), 2, True, False, )
paddle.std(Tensor([0, 3, 4, 10],"float64"), list[1,2,], True, False, )
paddle.std(Tensor([0, 3, 4, 10],"float64"), list[1,3,], False, False, )
paddle.std(Tensor([0, 3, 4, 10],"float64"), list[1,3,], True, False, )
paddle.std(Tensor([0, 3, 4, 10],"float64"), tuple(1,3,), True, False, )
paddle.std(Tensor([0, 32],"float32"), )
paddle.std(Tensor([0, 5],"float32"), )
paddle.std(Tensor([0, 9],"float32"), axis=1, )
paddle.std(Tensor([0],"float32"), )
paddle.std(Tensor([1, 0, 4, 10],"float32"), list[1,3,], True, False, )
paddle.std(Tensor([1, 0, 4, 10],"float64"), 2, True, False, )
paddle.std(Tensor([1, 0, 4, 10],"float64"), list[1,2,], True, False, )
paddle.std(Tensor([1, 0, 4, 10],"float64"), list[1,3,], False, False, )
paddle.std(Tensor([1, 0, 4, 10],"float64"), list[1,3,], True, False, )
paddle.std(Tensor([1, 0, 4, 10],"float64"), tuple(1,3,), True, False, )
paddle.std(Tensor([1, 3, 0, 10],"float32"), list[1,3,], True, False, )
paddle.std(Tensor([1, 3, 0, 10],"float64"), 2, True, False, )
paddle.std(Tensor([1, 3, 0, 10],"float64"), list[1,2,], True, False, )
paddle.std(Tensor([1, 3, 0, 10],"float64"), list[1,3,], False, False, )
paddle.std(Tensor([1, 3, 0, 10],"float64"), list[1,3,], True, False, )
paddle.std(Tensor([1, 3, 0, 10],"float64"), tuple(1,3,), True, False, )
paddle.std(Tensor([1, 3, 4, 0],"float32"), list[1,3,], True, False, )
paddle.std(Tensor([1, 3, 4, 0],"float64"), 2, True, False, )
paddle.std(Tensor([1, 3, 4, 0],"float64"), list[1,2,], True, False, )
paddle.std(Tensor([1, 3, 4, 0],"float64"), list[1,3,], False, False, )
paddle.std(Tensor([1, 3, 4, 0],"float64"), list[1,3,], True, False, )
paddle.std(Tensor([1, 3, 4, 0],"float64"), tuple(1,3,), True, False, )
paddle.std(Tensor([3, 0],"float32"), )
paddle.std(Tensor([32, 0],"float32"), )
paddle.std(Tensor([6, 0],"float32"), axis=1, )
paddle.std(x=Tensor([0, 3, 3],"float64"), )
paddle.std(x=Tensor([0, 3, 3],"float64"), axis=0, )
paddle.std(x=Tensor([0, 3, 3],"float64"), axis=0, unbiased=False, )
paddle.std(x=Tensor([0, 3, 3],"float64"), axis=list[0,1,], )
paddle.std(x=Tensor([0, 3, 3],"float64"), axis=tuple(0,1,), )
paddle.std(x=Tensor([0, 3, 3],"float64"), axis=tuple(0,1,), keepdim=True, )
paddle.std(x=Tensor([0, 3],"float32"), )
paddle.std(x=Tensor([0, 3],"float64"), )
paddle.std(x=Tensor([2, 0],"float32"), )
paddle.std(x=Tensor([2, 0],"float64"), )
paddle.std(x=Tensor([3, 0, 3],"float64"), )
paddle.std(x=Tensor([3, 0, 3],"float64"), axis=0, )
paddle.std(x=Tensor([3, 0, 3],"float64"), axis=0, unbiased=False, )
paddle.std(x=Tensor([3, 0, 3],"float64"), axis=list[0,1,], )
paddle.std(x=Tensor([3, 0, 3],"float64"), axis=tuple(0,1,), )
paddle.std(x=Tensor([3, 0, 3],"float64"), axis=tuple(0,1,), keepdim=True, )
paddle.std(x=Tensor([3, 3, 0],"float64"), )
paddle.std(x=Tensor([3, 3, 0],"float64"), axis=0, )
paddle.std(x=Tensor([3, 3, 0],"float64"), axis=0, unbiased=False, )
paddle.std(x=Tensor([3, 3, 0],"float64"), axis=list[0,1,], )
paddle.std(x=Tensor([3, 3, 0],"float64"), axis=tuple(0,1,), )
paddle.std(x=Tensor([3, 3, 0],"float64"), axis=tuple(0,1,), keepdim=True, )
paddle.Tensor.amax(Tensor([0, 2, 4, 5],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.amax(Tensor([0, 2, 5, 4],"float32"), axis=2, keepdim=True, )
paddle.Tensor.amax(Tensor([0, 2, 5, 4],"float32"), axis=tuple(1,2,), keepdim=True, )
paddle.Tensor.amax(Tensor([3, 0, 4, 5],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.amax(Tensor([3, 0, 5, 4],"float32"), axis=2, keepdim=True, )
paddle.Tensor.amax(Tensor([3, 2, 0, 5],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.amax(Tensor([3, 2, 5, 0],"float32"), axis=2, keepdim=True, )
paddle.Tensor.amax(Tensor([3, 2, 5, 0],"float32"), axis=tuple(1,2,), keepdim=True, )
paddle.Tensor.amin(Tensor([0, 2, 4, 5],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.amin(Tensor([0, 2, 5, 4],"float32"), axis=2, keepdim=True, )
paddle.Tensor.amin(Tensor([0, 2, 5, 4],"float32"), axis=tuple(1,2,), keepdim=True, )
paddle.Tensor.amin(Tensor([3, 0, 4, 5],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.amin(Tensor([3, 0, 5, 4],"float32"), axis=2, keepdim=True, )
paddle.Tensor.amin(Tensor([3, 2, 0, 5],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.amin(Tensor([3, 2, 5, 0],"float32"), axis=2, keepdim=True, )
paddle.Tensor.amin(Tensor([3, 2, 5, 0],"float32"), axis=tuple(1,2,), keepdim=True, )
paddle.Tensor.argmax(Tensor([0, 1, 10285],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([0, 1, 24276],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([0, 10],"float32"), axis=1, )
paddle.Tensor.argmax(Tensor([0, 100, 8000],"float32"), axis=2, )
paddle.Tensor.argmax(Tensor([0, 101, 8000],"float32"), axis=2, )
paddle.Tensor.argmax(Tensor([0, 157920, 2],"float32"), axis=-1, )
paddle.Tensor.argmax(Tensor([0, 3, 3],"float32"), 1, )
paddle.Tensor.argmax(Tensor([0, 3],"float32"), 1, )
paddle.Tensor.argmax(Tensor([0, 4],"float32"), axis=-1, )
paddle.Tensor.argmax(Tensor([0, 7],"int32"), -1, )
paddle.Tensor.argmax(Tensor([0, 77],"int64"), axis=-1, )
paddle.Tensor.argmax(Tensor([0, 90, 22400],"float32"), axis=1, )
paddle.Tensor.argmax(Tensor([1, 1, 0],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([13, 3, 0],"float32"), 1, )
paddle.Tensor.argmax(Tensor([30, 0, 8000],"float32"), axis=2, )
paddle.Tensor.argmax(Tensor([4, 0, 2],"float32"), axis=-1, )
paddle.Tensor.argmax(Tensor([4, 90, 0],"float32"), axis=1, )
paddle.Tensor.bmm(Tensor([0, 108472, 3],"float32"), Tensor([0, 3, 2],"float32"), )
paddle.Tensor.bmm(Tensor([0, 1156, 3],"float32"), Tensor([0, 3, 2],"float32"), )
paddle.Tensor.bmm(Tensor([1, 108472, 3],"float32"), Tensor([1, 3, 0],"float32"), )
paddle.Tensor.bmm(Tensor([1, 1156, 3],"float32"), Tensor([1, 3, 0],"float32"), )
paddle.Tensor.cholesky_solve(x=Tensor([0, 2, 4, 3],"float64"), y=Tensor([0, 2, 4, 4],"float64"), )
paddle.Tensor.cholesky_solve(x=Tensor([0, 2, 4, 3],"float64"), y=Tensor([0, 2, 4, 4],"float64"), upper=True, )
paddle.Tensor.cholesky_solve(x=Tensor([0, 4, 3],"float64"), y=Tensor([0, 4, 4],"float64"), )
paddle.Tensor.cholesky_solve(x=Tensor([4, 0],"float32"), y=Tensor([4, 4],"float32"), )
paddle.Tensor.cholesky_solve(x=Tensor([4, 0],"float64"), y=Tensor([4, 4],"float64"), )
paddle.Tensor.cholesky_solve(x=Tensor([5, 0, 4, 3],"float64"), y=Tensor([5, 0, 4, 4],"float64"), )
paddle.Tensor.cholesky_solve(x=Tensor([5, 0, 4, 3],"float64"), y=Tensor([5, 0, 4, 4],"float64"), upper=True, )
paddle.Tensor.cholesky_solve(x=Tensor([5, 2, 4, 0],"float64"), y=Tensor([5, 2, 4, 4],"float64"), )
paddle.Tensor.cholesky_solve(x=Tensor([5, 2, 4, 0],"float64"), y=Tensor([5, 2, 4, 4],"float64"), upper=True, )
paddle.Tensor.cholesky_solve(x=Tensor([5, 4, 0],"float64"), y=Tensor([5, 4, 4],"float64"), )
paddle.Tensor.diagonal(Tensor([0, 2],"float32"), axis1=-2, axis2=-1, )
paddle.Tensor.diagonal(Tensor([0, 3],"float64"), axis1=-2, axis2=-1, )
paddle.Tensor.diagonal(Tensor([2, 0],"float32"), axis1=-2, axis2=-1, )
paddle.Tensor.diagonal(Tensor([3, 0],"float64"), axis1=-2, axis2=-1, )
paddle.Tensor.expand_as(Tensor([0, 1, 1, 1],"float32"), Tensor([0, 3, 28, 28],"float32"), )
paddle.Tensor.expand_as(Tensor([0, 1, 1, 1],"float32"), Tensor([0, 3, 280, 350],"float32"), )
paddle.Tensor.expand_as(Tensor([0, 1, 32],"float32"), Tensor([0, 4, 32],"float32"), )
paddle.Tensor.expand_as(Tensor([0, 1],"int32"), Tensor([0, 1],"int64"), )
paddle.Tensor.expand_as(Tensor([0, 128],"int32"), Tensor([0, 128],"int64"), )
paddle.Tensor.expand_as(Tensor([1, 0, 1, 1],"float32"), Tensor([1, 0, 28, 28],"float32"), )
paddle.Tensor.expand_as(Tensor([1, 0, 1, 1],"float32"), Tensor([1, 0, 280, 350],"float32"), )
paddle.Tensor.expand_as(Tensor([1, 0],"int32"), Tensor([5, 0],"int64"), )
paddle.Tensor.expand_as(Tensor([1, 1, 0, 1],"float32"), Tensor([1, 3, 0, 28],"float32"), )
paddle.Tensor.expand_as(Tensor([1, 1, 0, 1],"float32"), Tensor([1, 3, 0, 350],"float32"), )
paddle.Tensor.expand_as(Tensor([1, 1, 1, 0],"float32"), Tensor([1, 3, 28, 0],"float32"), )
paddle.Tensor.expand_as(Tensor([1, 1, 1, 0],"float32"), Tensor([1, 3, 280, 0],"float32"), )
paddle.Tensor.expand_as(Tensor([1, 1, 1, 1],"float32"), Tensor([0, 3, 28, 28],"float32"), )
paddle.Tensor.expand_as(Tensor([1, 1, 1, 1],"float32"), Tensor([0, 3, 280, 350],"float32"), )
paddle.Tensor.expand_as(Tensor([1, 1, 1, 1],"float32"), Tensor([1, 0, 28, 28],"float32"), )
paddle.Tensor.expand_as(Tensor([1, 1, 1, 1],"float32"), Tensor([1, 0, 280, 350],"float32"), )
paddle.Tensor.expand_as(Tensor([1, 1, 1, 1],"float32"), Tensor([1, 3, 0, 28],"float32"), )
paddle.Tensor.expand_as(Tensor([1, 1, 1, 1],"float32"), Tensor([1, 3, 0, 350],"float32"), )
paddle.Tensor.expand_as(Tensor([1, 1, 1, 1],"float32"), Tensor([1, 3, 28, 0],"float32"), )
paddle.Tensor.expand_as(Tensor([1, 1, 1, 1],"float32"), Tensor([1, 3, 280, 0],"float32"), )
paddle.Tensor.expand_as(Tensor([1, 1],"int32"), Tensor([0, 1],"int64"), )
paddle.Tensor.expand_as(Tensor([1, 1],"int32"), Tensor([5, 0],"int64"), )
paddle.Tensor.expand_as(Tensor([1, 128],"int32"), Tensor([0, 128],"int64"), )
paddle.Tensor.expand_as(Tensor([2, 0, 32],"float32"), Tensor([2, 0, 32],"float32"), )
paddle.Tensor.expand_as(Tensor([2, 1, 0],"float32"), Tensor([2, 4, 0],"float32"), )
paddle.Tensor.expand_as(Tensor([2, 1, 32],"float32"), Tensor([2, 0, 32],"float32"), )
paddle.Tensor.inner(x=Tensor([0],"float64"), y=Tensor([0],"float64"), )
paddle.Tensor.inner(x=Tensor([2, 5, 3, 0],"float64"), y=Tensor([3, 2, 5, 0],"float64"), )
paddle.Tensor.inner(x=Tensor([2, 5, 3, 4],"float64"), y=Tensor([0, 2, 5, 4],"float64"), )
paddle.Tensor.inner(x=Tensor([2, 5, 3, 4],"float64"), y=Tensor([3, 0, 5, 4],"float64"), )
paddle.Tensor.inner(x=Tensor([2, 5, 3, 4],"float64"), y=Tensor([3, 2, 0, 4],"float64"), )
paddle.Tensor.inner(x=Tensor([3, 0],"float64"), y=Tensor([5, 0],"float64"), )
paddle.Tensor.inner(x=Tensor([3, 4],"float64"), y=Tensor([0, 2, 4],"float64"), )
paddle.Tensor.inner(x=Tensor([3, 4],"float64"), y=Tensor([0, 2, 5, 4],"float64"), )
paddle.Tensor.inner(x=Tensor([3, 4],"float64"), y=Tensor([0, 4],"float64"), )
paddle.Tensor.inner(x=Tensor([3, 4],"float64"), y=Tensor([3, 0, 4],"float64"), )
paddle.Tensor.inner(x=Tensor([3, 4],"float64"), y=Tensor([3, 0, 5, 4],"float64"), )
paddle.Tensor.inner(x=Tensor([3, 4],"float64"), y=Tensor([3, 2, 0, 4],"float64"), )
paddle.Tensor.inner(x=Tensor([4, 0],"float32"), y=Tensor([4, 0],"float32"), )
paddle.Tensor.inner(x=Tensor([4, 4],"float32"), y=Tensor([0, 4],"float32"), )
paddle.Tensor.inner(x=Tensor([5, 3, 0],"float64"), y=Tensor([2, 5, 0],"float64"), )
paddle.Tensor.inner(x=Tensor([5, 3, 4],"float64"), y=Tensor([0, 5, 4],"float64"), )
paddle.Tensor.inner(x=Tensor([5, 3, 4],"float64"), y=Tensor([2, 0, 4],"float64"), )
paddle.Tensor.lerp(x=Tensor([0, 5, 4, 3],"float64"), y=Tensor([0, 5, 4, 3],"float64"), weight=0.0, )
paddle.Tensor.lerp(x=Tensor([0, 5, 4, 3],"float64"), y=Tensor([0, 5, 4, 3],"float64"), weight=0.5, )
paddle.Tensor.lerp(x=Tensor([0, 5, 4, 3],"float64"), y=Tensor([0, 5, 4, 3],"float64"), weight=1.0, )
paddle.Tensor.lerp(x=Tensor([0, 5, 4],"float64"), y=Tensor([0, 5, 4],"float64"), weight=0.5, )
paddle.Tensor.lerp(x=Tensor([0, 5],"float64"), y=Tensor([0, 5],"float64"), weight=0.5, )
paddle.Tensor.lerp(x=Tensor([0, 5],"float64"), y=Tensor([1],"float64"), weight=0.2, )
paddle.Tensor.lerp(x=Tensor([0],"float32"), y=Tensor([0],"float32"), weight=0.5, )
paddle.Tensor.lerp(x=Tensor([0],"float64"), y=Tensor([0],"float64"), weight=0.5, )
paddle.Tensor.lerp(x=Tensor([4, 0, 4, 3],"float64"), y=Tensor([4, 0, 4, 3],"float64"), weight=0.0, )
paddle.Tensor.lerp(x=Tensor([4, 0, 4, 3],"float64"), y=Tensor([4, 0, 4, 3],"float64"), weight=0.5, )
paddle.Tensor.lerp(x=Tensor([4, 0, 4, 3],"float64"), y=Tensor([4, 0, 4, 3],"float64"), weight=1.0, )
paddle.Tensor.lerp(x=Tensor([4, 0, 4],"float64"), y=Tensor([4, 0, 4],"float64"), weight=0.5, )
paddle.Tensor.lerp(x=Tensor([4, 0],"float64"), y=Tensor([1],"float64"), weight=0.2, )
paddle.Tensor.lerp(x=Tensor([4, 0],"float64"), y=Tensor([4, 0],"float64"), weight=0.5, )
paddle.Tensor.lerp(x=Tensor([4, 5, 0, 3],"float64"), y=Tensor([4, 5, 0, 3],"float64"), weight=0.0, )
paddle.Tensor.lerp(x=Tensor([4, 5, 0, 3],"float64"), y=Tensor([4, 5, 0, 3],"float64"), weight=0.5, )
paddle.Tensor.lerp(x=Tensor([4, 5, 0, 3],"float64"), y=Tensor([4, 5, 0, 3],"float64"), weight=1.0, )
paddle.Tensor.lerp(x=Tensor([4, 5, 0],"float64"), y=Tensor([4, 5, 0],"float64"), weight=0.5, )
paddle.Tensor.lerp(x=Tensor([4, 5, 4, 0],"float64"), y=Tensor([4, 5, 4, 0],"float64"), weight=0.0, )
paddle.Tensor.lerp(x=Tensor([4, 5, 4, 0],"float64"), y=Tensor([4, 5, 4, 0],"float64"), weight=0.5, )
paddle.Tensor.lerp(x=Tensor([4, 5, 4, 0],"float64"), y=Tensor([4, 5, 4, 0],"float64"), weight=1.0, )
paddle.Tensor.lu(Tensor([0, 3, 2, 2],"float64"), )
paddle.Tensor.lu(Tensor([0, 3, 3],"float64"), )
paddle.Tensor.lu(Tensor([0, 3],"float32"), )
paddle.Tensor.lu(Tensor([0, 3],"float64"), )
paddle.Tensor.lu(Tensor([3, 0, 3],"float64"), )
paddle.Tensor.lu(Tensor([3, 0],"float32"), )
paddle.Tensor.lu(Tensor([3, 0],"float64"), )
paddle.Tensor.lu(Tensor([3, 3, 0],"float64"), )
paddle.Tensor.lu(Tensor([4, 0, 2, 2],"float64"), )
paddle.Tensor.lu(Tensor([4, 3, 0, 2],"float64"), )
paddle.Tensor.lu(Tensor([4, 3, 2, 0],"float64"), )
paddle.Tensor.matmul(Tensor([1, 1],"float64"), Tensor([1, 0],"float64"), )
paddle.Tensor.mean(Tensor([0, 1, 1, 12, 1, 64],"float32"), )
paddle.Tensor.mean(Tensor([0, 1, 192],"float32"), )
paddle.Tensor.mean(Tensor([0, 1, 32],"float32"), )
paddle.Tensor.mean(Tensor([0, 1, 32],"float32"), -1, keepdim=True, )
paddle.Tensor.mean(Tensor([0, 1, 32],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.mean(Tensor([0, 1, 36],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.mean(Tensor([0, 1, 50, 50],"float32"), )
paddle.Tensor.mean(Tensor([0, 1, 512, 4, 4],"float32"), list[2,3,4,], keepdim=True, )
paddle.Tensor.mean(Tensor([0, 1, 64],"float32"), -1, keepdim=True, )
paddle.Tensor.mean(Tensor([0, 1],"float16"), )
paddle.Tensor.mean(Tensor([0, 1],"float32"), )
paddle.Tensor.mean(Tensor([0, 100, 2],"float32"), 1, )
paddle.Tensor.mean(Tensor([0, 100, 4],"float64"), axis=-2, keepdim=True, )
paddle.Tensor.mean(Tensor([0, 100, 40],"float64"), axis=-2, keepdim=True, )
paddle.Tensor.mean(Tensor([0, 1000],"float32"), axis=-1, )
paddle.Tensor.mean(Tensor([0, 1024, 12, 12],"float32"), list[-2,-1,], )
paddle.Tensor.mean(Tensor([0, 1024, 7, 7],"float32"), list[-2,-1,], )
paddle.Tensor.mean(Tensor([0, 12, 8, 14],"float32"), )
paddle.Tensor.mean(Tensor([0, 12544],"float32"), 1, )
paddle.Tensor.mean(Tensor([0, 128, 16, 16],"float16"), -1, )
paddle.Tensor.mean(Tensor([0, 128, 16, 16],"float16"), -2, )
paddle.Tensor.mean(Tensor([0, 128, 16, 16],"float32"), -1, )
paddle.Tensor.mean(Tensor([0, 128, 16, 16],"float32"), -2, )
paddle.Tensor.mean(Tensor([0, 128, 56, 56],"float32"), 1, keepdim=True, )
paddle.Tensor.mean(Tensor([0, 128, 96, 96],"float32"), 1, keepdim=True, )
paddle.Tensor.mean(Tensor([0, 160, 160],"float32"), axis=tuple(1,2,), )
paddle.Tensor.mean(Tensor([0, 192, 11],"float32"), 1, )
paddle.Tensor.mean(Tensor([0, 192, 128, 128],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([0, 192, 136, 136],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([0, 2, 2, 2, 2],"float32"), )
paddle.Tensor.mean(Tensor([0, 2, 3, 10, 10, 12, 4],"float64"), )
paddle.Tensor.mean(Tensor([0, 2, 3, 4, 10],"float64"), )
paddle.Tensor.mean(Tensor([0, 2, 3],"float32"), axis=0, )
paddle.Tensor.mean(Tensor([0, 2, 3],"float64"), axis=0, )
paddle.Tensor.mean(Tensor([0, 256, 7],"float32"), -1, )
paddle.Tensor.mean(Tensor([0, 3, 100, 4],"float64"), axis=-2, keepdim=True, )
paddle.Tensor.mean(Tensor([0, 3, 100, 40],"float64"), axis=-2, keepdim=True, )
paddle.Tensor.mean(Tensor([0, 300, 4096],"float32"), tuple(0,1,), keepdim=True, )
paddle.Tensor.mean(Tensor([0, 4, 2, 4, 8],"float32"), axis=-2, )
paddle.Tensor.mean(Tensor([0, 4],"complex128"), axis=0, )
paddle.Tensor.mean(Tensor([0, 4],"float32"), -1, keepdim=True, )
paddle.Tensor.mean(Tensor([0, 4],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.mean(Tensor([0, 4],"float64"), axis=-2, keepdim=True, )
paddle.Tensor.mean(Tensor([0, 40],"float64"), axis=-2, keepdim=True, )
paddle.Tensor.mean(Tensor([0, 49, 512],"float16"), axis=1, )
paddle.Tensor.mean(Tensor([0, 49, 512],"float32"), axis=1, )
paddle.Tensor.mean(Tensor([0, 5],"float64"), axis=-1, )
paddle.Tensor.mean(Tensor([0, 768],"float32"), 0, )
paddle.Tensor.mean(Tensor([0, 784],"float32"), axis=0, )
paddle.Tensor.mean(Tensor([0, 8, 151936],"float32"), -1, )
paddle.Tensor.mean(Tensor([0],"float32"), )
paddle.Tensor.mean(Tensor([0],"float32"), -1, keepdim=True, )
paddle.Tensor.mean(Tensor([0],"float32"), axis=0, )
paddle.Tensor.mean(Tensor([0],"float64"), axis=0, )
paddle.Tensor.mean(Tensor([1, 0, 1, 12, 1, 64],"float32"), )
paddle.Tensor.mean(Tensor([1, 0, 11],"float32"), 1, )
paddle.Tensor.mean(Tensor([1, 0, 128, 128],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([1, 0, 136, 136],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([1, 0, 151936],"float32"), -1, )
paddle.Tensor.mean(Tensor([1, 0, 192],"float32"), )
paddle.Tensor.mean(Tensor([1, 0, 2, 2, 2],"float32"), )
paddle.Tensor.mean(Tensor([1, 0, 2],"float32"), 1, )
paddle.Tensor.mean(Tensor([1, 0, 32],"float32"), )
paddle.Tensor.mean(Tensor([1, 0, 32],"float32"), -1, keepdim=True, )
paddle.Tensor.mean(Tensor([1, 0, 32],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.mean(Tensor([1, 0, 36],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.mean(Tensor([1, 0, 4],"float64"), axis=-2, keepdim=True, )
paddle.Tensor.mean(Tensor([1, 0, 40],"float64"), axis=-2, keepdim=True, )
paddle.Tensor.mean(Tensor([1, 0, 4096],"float32"), tuple(0,1,), keepdim=True, )
paddle.Tensor.mean(Tensor([1, 0, 50, 50],"float32"), )
paddle.Tensor.mean(Tensor([1, 0, 64],"float32"), -1, keepdim=True, )
paddle.Tensor.mean(Tensor([1, 0, 8, 14],"float32"), )
paddle.Tensor.mean(Tensor([1, 0],"float16"), )
paddle.Tensor.mean(Tensor([1, 0],"float32"), )
paddle.Tensor.mean(Tensor([1, 0],"float32"), 1, )
paddle.Tensor.mean(Tensor([1, 0],"float32"), -1, keepdim=True, )
paddle.Tensor.mean(Tensor([1, 1, 0, 12, 1, 64],"float32"), )
paddle.Tensor.mean(Tensor([1, 1, 0, 50],"float32"), )
paddle.Tensor.mean(Tensor([1, 1, 0],"float32"), )
paddle.Tensor.mean(Tensor([1, 1, 0],"float32"), -1, keepdim=True, )
paddle.Tensor.mean(Tensor([1, 1, 0],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.mean(Tensor([1, 1, 1, 0, 1, 64],"float32"), )
paddle.Tensor.mean(Tensor([1, 1, 1, 12, 0, 64],"float32"), )
paddle.Tensor.mean(Tensor([1, 1, 1, 12, 1, 0],"float32"), )
paddle.Tensor.mean(Tensor([1, 1, 50, 0],"float32"), )
paddle.Tensor.mean(Tensor([1, 100, 0],"float32"), 1, )
paddle.Tensor.mean(Tensor([1, 100, 0],"float64"), axis=-2, keepdim=True, )
paddle.Tensor.mean(Tensor([1, 12, 0, 14],"float32"), )
paddle.Tensor.mean(Tensor([1, 12, 8, 0],"float32"), )
paddle.Tensor.mean(Tensor([1, 192, 0, 128],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([1, 192, 0, 136],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([1, 192, 0],"float32"), 1, )
paddle.Tensor.mean(Tensor([1, 192, 128, 0],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([1, 192, 136, 0],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([1, 2, 0, 2, 2],"float32"), )
paddle.Tensor.mean(Tensor([1, 2, 2, 0, 2],"float32"), )
paddle.Tensor.mean(Tensor([1, 2, 2, 2, 0],"float32"), )
paddle.Tensor.mean(Tensor([1, 300, 0],"float32"), tuple(0,1,), keepdim=True, )
paddle.Tensor.mean(Tensor([1, 8, 0],"float32"), -1, )
paddle.Tensor.mean(Tensor([10, 0],"float32"), -1, keepdim=True, )
paddle.Tensor.mean(Tensor([100, 0],"float32"), 1, )
paddle.Tensor.mean(Tensor([100, 0],"float64"), axis=-2, keepdim=True, )
paddle.Tensor.mean(Tensor([1000, 0],"float32"), axis=0, )
paddle.Tensor.mean(Tensor([10000, 0, 3],"float32"), axis=0, )
paddle.Tensor.mean(Tensor([10000, 0, 3],"float64"), axis=0, )
paddle.Tensor.mean(Tensor([10000, 2, 0],"float32"), axis=0, )
paddle.Tensor.mean(Tensor([10000, 2, 0],"float64"), axis=0, )
paddle.Tensor.mean(Tensor([100000, 0],"complex128"), axis=0, )
paddle.Tensor.mean(Tensor([11, 0],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.mean(Tensor([124, 0, 12, 12],"float32"), list[-2,-1,], )
paddle.Tensor.mean(Tensor([124, 0, 56, 56],"float32"), 1, keepdim=True, )
paddle.Tensor.mean(Tensor([124, 0, 7, 7],"float32"), list[-2,-1,], )
paddle.Tensor.mean(Tensor([124, 0, 96, 96],"float32"), 1, keepdim=True, )
paddle.Tensor.mean(Tensor([124, 1024, 0, 12],"float32"), list[-2,-1,], )
paddle.Tensor.mean(Tensor([124, 1024, 0, 7],"float32"), list[-2,-1,], )
paddle.Tensor.mean(Tensor([124, 1024, 12, 0],"float32"), list[-2,-1,], )
paddle.Tensor.mean(Tensor([124, 1024, 7, 0],"float32"), list[-2,-1,], )
paddle.Tensor.mean(Tensor([124, 128, 0, 56],"float32"), 1, keepdim=True, )
paddle.Tensor.mean(Tensor([124, 128, 0, 96],"float32"), 1, keepdim=True, )
paddle.Tensor.mean(Tensor([124, 128, 56, 0],"float32"), 1, keepdim=True, )
paddle.Tensor.mean(Tensor([124, 128, 96, 0],"float32"), 1, keepdim=True, )
paddle.Tensor.mean(Tensor([128, 0, 512],"float16"), axis=1, )
paddle.Tensor.mean(Tensor([128, 0, 512],"float32"), axis=1, )
paddle.Tensor.mean(Tensor([128, 0],"float32"), axis=-1, )
paddle.Tensor.mean(Tensor([128, 49, 0],"float16"), axis=1, )
paddle.Tensor.mean(Tensor([128, 49, 0],"float32"), axis=1, )
paddle.Tensor.mean(Tensor([13, 0, 160],"float32"), axis=tuple(1,2,), )
paddle.Tensor.mean(Tensor([13, 0, 2, 4, 8],"float32"), axis=-2, )
paddle.Tensor.mean(Tensor([13, 160, 0],"float32"), axis=tuple(1,2,), )
paddle.Tensor.mean(Tensor([13, 4, 0, 4, 8],"float32"), axis=-2, )
paddle.Tensor.mean(Tensor([13, 4, 2, 0, 8],"float32"), axis=-2, )
paddle.Tensor.mean(Tensor([13, 4, 2, 4, 0],"float32"), axis=-2, )
paddle.Tensor.mean(Tensor([18, 0],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.mean(Tensor([2, 0, 100, 4],"float64"), axis=-2, keepdim=True, )
paddle.Tensor.mean(Tensor([2, 0, 100, 40],"float64"), axis=-2, keepdim=True, )
paddle.Tensor.mean(Tensor([2, 0, 512, 4, 4],"float32"), list[2,3,4,], keepdim=True, )
paddle.Tensor.mean(Tensor([2, 1, 0, 4, 4],"float32"), list[2,3,4,], keepdim=True, )
paddle.Tensor.mean(Tensor([2, 1, 512, 0, 4],"float32"), list[2,3,4,], keepdim=True, )
paddle.Tensor.mean(Tensor([2, 1, 512, 4, 0],"float32"), list[2,3,4,], keepdim=True, )
paddle.Tensor.mean(Tensor([2, 3, 0, 4],"float64"), axis=-2, keepdim=True, )
paddle.Tensor.mean(Tensor([2, 3, 0, 40],"float64"), axis=-2, keepdim=True, )
paddle.Tensor.mean(Tensor([2, 3, 100, 0],"float64"), axis=-2, keepdim=True, )
paddle.Tensor.mean(Tensor([3, 0, 3, 10, 10, 12, 4],"float64"), )
paddle.Tensor.mean(Tensor([3, 0, 3, 4, 10],"float64"), )
paddle.Tensor.mean(Tensor([3, 2, 0, 10, 10, 12, 4],"float64"), )
paddle.Tensor.mean(Tensor([3, 2, 0, 4, 10],"float64"), )
paddle.Tensor.mean(Tensor([3, 2, 3, 0, 10, 12, 4],"float64"), )
paddle.Tensor.mean(Tensor([3, 2, 3, 0, 10],"float64"), )
paddle.Tensor.mean(Tensor([3, 2, 3, 10, 0, 12, 4],"float64"), )
paddle.Tensor.mean(Tensor([3, 2, 3, 10, 10, 0, 4],"float64"), )
paddle.Tensor.mean(Tensor([3, 2, 3, 10, 10, 12, 0],"float64"), )
paddle.Tensor.mean(Tensor([3, 2, 3, 4, 0],"float64"), )
paddle.Tensor.mean(Tensor([4, 0, 16, 16],"float16"), -1, )
paddle.Tensor.mean(Tensor([4, 0, 16, 16],"float16"), -2, )
paddle.Tensor.mean(Tensor([4, 0, 16, 16],"float32"), -1, )
paddle.Tensor.mean(Tensor([4, 0, 16, 16],"float32"), -2, )
paddle.Tensor.mean(Tensor([4, 128, 0, 16],"float16"), -1, )
paddle.Tensor.mean(Tensor([4, 128, 0, 16],"float16"), -2, )
paddle.Tensor.mean(Tensor([4, 128, 0, 16],"float32"), -1, )
paddle.Tensor.mean(Tensor([4, 128, 0, 16],"float32"), -2, )
paddle.Tensor.mean(Tensor([4, 128, 16, 0],"float16"), -1, )
paddle.Tensor.mean(Tensor([4, 128, 16, 0],"float16"), -2, )
paddle.Tensor.mean(Tensor([4, 128, 16, 0],"float32"), -1, )
paddle.Tensor.mean(Tensor([4, 128, 16, 0],"float32"), -2, )
paddle.Tensor.mean(Tensor([5, 0],"float64"), axis=-1, )
paddle.Tensor.mean(Tensor([512, 0, 7],"float32"), -1, )
paddle.Tensor.mean(Tensor([512, 256, 0],"float32"), -1, )
paddle.Tensor.mean(Tensor([80, 0],"float32"), 0, )
paddle.Tensor.median(Tensor([0, 784],"float32"), )
paddle.Tensor.median(Tensor([1000, 0],"float32"), )
paddle.Tensor.mm(Tensor([10, 10],"float32"), Tensor([10, 0],"float32"), )
paddle.Tensor.mode(Tensor([0, 2, 3],"float64"), )
paddle.Tensor.mode(Tensor([0, 2, 3],"float64"), axis=1, keepdim=False, )
paddle.Tensor.mode(Tensor([0, 2, 3],"float64"), axis=2, keepdim=True, )
paddle.Tensor.mode(Tensor([3, 0, 3],"float64"), )
paddle.Tensor.mode(Tensor([3, 0, 3],"float64"), axis=2, keepdim=True, )
paddle.Tensor.mode(Tensor([3, 2, 0],"float64"), axis=1, keepdim=False, )
paddle.Tensor.outer(x=Tensor([4],"float64"), y=Tensor([0],"float64"), )
paddle.Tensor.std(Tensor([0, 1, 36],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([0, 1, 45],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([0, 1024, 8],"float32"), )
paddle.Tensor.std(Tensor([0, 1024, 8],"float64"), )
paddle.Tensor.std(Tensor([1, 0, 36],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([1, 0, 45],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([1, 1, 0],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([1024, 0, 8],"float32"), )
paddle.Tensor.std(Tensor([1024, 0, 8],"float64"), )
paddle.Tensor.std(Tensor([1024, 1024, 0],"float32"), )
paddle.Tensor.std(Tensor([1024, 1024, 0],"float64"), )
paddle.Tensor.topk(Tensor([0, 1000],"float32"), 5, 1, True, True, )
paddle.Tensor.var(Tensor([0, 2, 3],"float32"), axis=0, )
paddle.Tensor.var(Tensor([0, 2, 3],"float64"), axis=0, )
paddle.Tensor.var(Tensor([0, 4],"float64"), axis=0, )
paddle.Tensor.var(Tensor([0, 784],"float32"), axis=0, )
paddle.Tensor.var(Tensor([0],"float32"), axis=0, )
paddle.Tensor.var(Tensor([0],"float64"), axis=0, )
paddle.Tensor.var(Tensor([1000, 0],"float32"), axis=0, )
paddle.Tensor.var(Tensor([10000, 0, 3],"float32"), axis=0, )
paddle.Tensor.var(Tensor([10000, 0, 3],"float64"), axis=0, )
paddle.Tensor.var(Tensor([10000, 2, 0],"float32"), axis=0, )
paddle.Tensor.var(Tensor([10000, 2, 0],"float64"), axis=0, )
paddle.Tensor.var(Tensor([100000, 0],"float64"), axis=0, )
paddle.tensordot(Tensor([0, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[0,1,3,],list[0,3,1,],], )
paddle.tensordot(Tensor([0, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[0,1,3,2,],list[0,2,1,3,],], )
paddle.tensordot(Tensor([0, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[0,2,3,],list[0,1,2,],], )
paddle.tensordot(Tensor([0, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[0,2,3,],list[0,2,1,],], )
paddle.tensordot(Tensor([0, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[0,3,1,2,],list[3,2,1,0,],], )
paddle.tensordot(Tensor([0, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[0,3,2,1,],list[2,1,3,0,],], )
paddle.tensordot(Tensor([0, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[1,0,2,3,],list[3,0,1,2,],], )
paddle.tensordot(Tensor([0, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[1,0,3,2,],list[3,0,1,2,],], )
paddle.tensordot(Tensor([0, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[1,2,0,],list[1,2,3,],], )
paddle.tensordot(Tensor([0, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[1,2,0,],list[1,3,2,],], )
paddle.tensordot(Tensor([0, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[1,2,3,0,],list[3,2,1,0,],], )
paddle.tensordot(Tensor([0, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[1,3,2,0,],list[1,3,2,0,],], )
paddle.tensordot(Tensor([0, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[1,3,2,0,],list[2,1,0,3,],], )
paddle.tensordot(Tensor([0, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[2,1,0,3,],list[2,0,3,1,],], )
paddle.tensordot(Tensor([0, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[2,3,],list[1,3,],], )
paddle.tensordot(Tensor([0, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[2,3,0,],list[1,2,0,],], )
paddle.tensordot(Tensor([0, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[2,3,0,],list[3,1,0,],], )
paddle.tensordot(Tensor([0, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[3,1,0,2,],list[3,1,0,2,],], )
paddle.tensordot(Tensor([0, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[3,1,2,],list[1,2,3,],], )
paddle.tensordot(Tensor([0, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[3,1,2,],list[1,3,2,],], )
paddle.tensordot(Tensor([0, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[3,1,2,],list[2,3,1,],], )
paddle.tensordot(Tensor([0, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[3,1,2,],list[3,1,0,],], )
paddle.tensordot(Tensor([0, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[3,1,2,0,],list[1,2,3,0,],], )
paddle.tensordot(Tensor([0, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[3,1,2,0,],list[2,3,1,0,],], )
paddle.tensordot(Tensor([0, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[3,2,],list[3,1,],], )
paddle.tensordot(Tensor([0, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[3,2,0,],list[2,1,0,],], )
paddle.tensordot(Tensor([0, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[3,2,0,],list[3,2,0,],], )
paddle.tensordot(Tensor([0, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[3,2,1,],list[2,0,1,],], )
paddle.tensordot(Tensor([0, 1, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[1,2,3,0,],list[1,3,0,2,],], )
paddle.tensordot(Tensor([0, 1, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[1,3,],list[1,0,],], )
paddle.tensordot(Tensor([0, 1, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[1,3,0,],list[3,0,2,],], )
paddle.tensordot(Tensor([0, 1, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[1,3,2,0,],list[1,3,2,0,],], )
paddle.tensordot(Tensor([0, 1, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[1,3,2,0,],list[3,0,1,2,],], )
paddle.tensordot(Tensor([0, 1, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[2,3,],list[1,3,],], )
paddle.tensordot(Tensor([0, 1, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[2,3,0,],list[1,2,0,],], )
paddle.tensordot(Tensor([0, 1, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[2,3,1,],list[1,0,2,],], )
paddle.tensordot(Tensor([0, 1, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[3,1,0,2,],list[3,1,0,2,],], )
paddle.tensordot(Tensor([0, 1, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[3,1,2,],list[0,3,2,],], )
paddle.tensordot(Tensor([0, 1, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[3,1,2,],list[2,3,1,],], )
paddle.tensordot(Tensor([0, 1, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[3,1,2,],list[3,1,0,],], )
paddle.tensordot(Tensor([0, 1, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[3,1,2,0,],list[2,3,1,0,],], )
paddle.tensordot(Tensor([0, 1, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[3,2,],list[3,1,],], )
paddle.tensordot(Tensor([0, 1, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[3,2,0,],list[2,1,0,],], )
paddle.tensordot(Tensor([0, 1, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[3,2,0,],list[3,2,0,],], )
paddle.tensordot(Tensor([0, 1, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[3,2,1,],list[2,0,1,],], )
paddle.tensordot(Tensor([0, 1, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[3,2,1,0,],list[0,1,3,2,],], )
paddle.tensordot(Tensor([0, 1, 5, 5],"float64"), Tensor([0, 5, 1, 5],"float64"), list[list[0,1,3,],list[0,3,1,],], )
paddle.tensordot(Tensor([0, 1, 5, 5],"float64"), Tensor([0, 5, 1, 5],"float64"), list[list[0,1,3,2,],list[0,2,1,3,],], )
paddle.tensordot(Tensor([0, 1, 5, 5],"float64"), Tensor([0, 5, 1, 5],"float64"), list[list[0,2,3,],list[0,1,2,],], )
paddle.tensordot(Tensor([0, 1, 5, 5],"float64"), Tensor([0, 5, 1, 5],"float64"), list[list[0,2,3,],list[0,2,1,],], )
paddle.tensordot(Tensor([0, 1, 5, 5],"float64"), Tensor([0, 5, 1, 5],"float64"), list[list[1,0,2,3,],list[3,0,1,2,],], )
paddle.tensordot(Tensor([0, 1, 5, 5],"float64"), Tensor([0, 5, 1, 5],"float64"), list[list[1,0,3,2,],list[3,0,1,2,],], )
paddle.tensordot(Tensor([0, 1, 5, 5],"float64"), Tensor([0, 5, 1, 5],"float64"), list[list[1,2,0,],list[1,3,2,],], )
paddle.tensordot(Tensor([0, 1, 5, 5],"float64"), Tensor([0, 5, 1, 5],"float64"), list[list[1,2,3,0,],list[3,2,1,0,],], )
paddle.tensordot(Tensor([0, 1, 5, 5],"float64"), Tensor([0, 5, 1, 5],"float64"), list[list[1,3,2,0,],list[1,3,2,0,],], )
paddle.tensordot(Tensor([0, 1, 5, 5],"float64"), Tensor([0, 5, 1, 5],"float64"), list[list[2,3,0,],list[1,2,0,],], )
paddle.tensordot(Tensor([0, 1, 5, 5],"float64"), Tensor([0, 5, 1, 5],"float64"), list[list[3,1,0,2,],list[3,1,0,2,],], )
paddle.tensordot(Tensor([0, 1, 5, 5],"float64"), Tensor([0, 5, 1, 5],"float64"), list[list[3,1,2,],list[1,2,3,],], )
paddle.tensordot(Tensor([0, 1, 5, 5],"float64"), Tensor([0, 5, 1, 5],"float64"), list[list[3,1,2,],list[1,3,2,],], )
paddle.tensordot(Tensor([0, 1, 5, 5],"float64"), Tensor([0, 5, 1, 5],"float64"), list[list[3,1,2,],list[2,3,1,],], )
paddle.tensordot(Tensor([0, 1, 5, 5],"float64"), Tensor([0, 5, 1, 5],"float64"), list[list[3,1,2,0,],list[1,2,3,0,],], )
paddle.tensordot(Tensor([0, 1, 5, 5],"float64"), Tensor([0, 5, 1, 5],"float64"), list[list[3,1,2,0,],list[2,3,1,0,],], )
paddle.tensordot(Tensor([0, 1, 5, 5],"float64"), Tensor([0, 5, 1, 5],"float64"), list[list[3,2,0,],list[2,1,0,],], )
paddle.tensordot(Tensor([0, 1, 5, 5],"float64"), Tensor([0, 5, 1, 5],"float64"), list[list[3,2,0,],list[3,2,0,],], )
paddle.tensordot(Tensor([0, 1, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[3,1,2,],list[0,3,2,],], )
paddle.tensordot(Tensor([0, 1, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[3,1,2,],list[1,3,2,],], )
paddle.tensordot(Tensor([0, 1, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[3,1,2,],list[2,3,1,],], )
paddle.tensordot(Tensor([0, 1, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[3,2,1,],list[2,0,1,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[0,1,2,],list[2,0,1,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[0,1,3,2,],list[2,3,0,1,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[0,2,3,],list[0,1,2,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[0,3,1,2,],list[3,2,1,0,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[1,0,2,3,],list[3,0,1,2,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[1,0,3,],list[2,3,0,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[1,0,3,2,],list[2,3,0,1,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[1,2,0,],list[1,2,3,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[1,2,0,],list[1,3,2,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[1,2,0,3,],list[0,2,1,3,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[1,2,3,0,],list[1,3,0,2,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[1,3,],list[1,0,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[1,3,0,],list[3,0,2,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[1,3,2,0,],list[1,3,2,0,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[2,0,1,],list[0,1,3,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[2,0,1,3,],list[3,1,0,2,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[2,1,],list[0,2,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[2,1,0,3,],list[2,0,1,3,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[2,1,0,3,],list[3,1,2,0,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[2,3,],list[1,3,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[2,3,0,],list[1,2,0,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[2,3,1,],list[1,0,2,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[3,0,],list[2,1,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[3,0,2,1,],list[2,1,0,3,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[3,1,0,],list[3,2,1,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[3,1,0,2,],list[2,3,1,0,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[3,1,0,2,],list[3,1,0,2,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[3,1,2,],list[0,3,2,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[3,1,2,],list[2,3,1,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[3,1,2,],list[3,1,0,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[3,1,2,0,],list[2,3,1,0,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[3,2,],list[3,1,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[3,2,0,],list[2,1,0,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[3,2,0,],list[3,2,0,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[3,2,1,],list[2,0,1,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[3,2,1,0,],list[0,1,3,2,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[0,2,3,],list[0,1,2,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[2,3,],list[1,3,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[2,3,0,],list[1,2,0,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[2,3,1,],list[1,0,2,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[3,0,],list[2,1,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[3,0,2,1,],list[2,1,0,3,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[3,1,0,],list[3,2,1,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[3,1,0,2,],list[2,3,1,0,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[3,1,2,],list[0,3,2,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[3,1,2,],list[2,3,1,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[3,1,2,0,],list[2,3,1,0,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[3,2,],list[3,1,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[3,2,0,],list[2,1,0,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[3,2,0,],list[3,2,0,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[3,2,1,0,],list[0,1,3,2,],], )
paddle.tensordot(Tensor([1, 0, 5, 5],"float64"), Tensor([5, 0, 1, 5],"float64"), list[list[0,3,1,2,],list[3,2,1,0,],], )
paddle.tensordot(Tensor([1, 0, 5, 5],"float64"), Tensor([5, 0, 1, 5],"float64"), list[list[1,0,3,],list[2,3,0,],], )
paddle.tensordot(Tensor([1, 0, 5, 5],"float64"), Tensor([5, 0, 1, 5],"float64"), list[list[1,2,0,],list[1,2,3,],], )
paddle.tensordot(Tensor([1, 0, 5, 5],"float64"), Tensor([5, 0, 1, 5],"float64"), list[list[1,2,0,],list[1,3,2,],], )
paddle.tensordot(Tensor([1, 0, 5, 5],"float64"), Tensor([5, 0, 1, 5],"float64"), list[list[1,2,3,0,],list[1,3,0,2,],], )
paddle.tensordot(Tensor([1, 0, 5, 5],"float64"), Tensor([5, 0, 1, 5],"float64"), list[list[1,3,2,0,],list[1,3,2,0,],], )
paddle.tensordot(Tensor([1, 0, 5, 5],"float64"), Tensor([5, 0, 1, 5],"float64"), list[list[2,1,],list[0,2,],], )
paddle.tensordot(Tensor([1, 0, 5, 5],"float64"), Tensor([5, 0, 1, 5],"float64"), list[list[2,1,0,3,],list[3,1,2,0,],], )
paddle.tensordot(Tensor([1, 0, 5, 5],"float64"), Tensor([5, 0, 1, 5],"float64"), list[list[3,0,],list[2,1,],], )
paddle.tensordot(Tensor([1, 0, 5, 5],"float64"), Tensor([5, 0, 1, 5],"float64"), list[list[3,1,0,2,],list[3,1,0,2,],], )
paddle.tensordot(Tensor([1, 0, 5, 5],"float64"), Tensor([5, 0, 1, 5],"float64"), list[list[3,2,0,],list[3,2,0,],], )
paddle.tensordot(Tensor([1, 0, 5, 5],"float64"), Tensor([5, 0, 1, 5],"float64"), list[list[3,2,1,],list[2,0,1,],], )
paddle.tensordot(Tensor([1, 0, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[0,2,3,],list[0,1,2,],], )
paddle.tensordot(Tensor([1, 0, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[0,2,3,],list[0,2,1,],], )
paddle.tensordot(Tensor([1, 0, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[2,3,0,],list[1,2,0,],], )
paddle.tensordot(Tensor([1, 0, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[3,0,],list[2,1,],], )
paddle.tensordot(Tensor([1, 0, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[3,2,0,],list[2,1,0,],], )
paddle.tensordot(Tensor([1, 0, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[3,2,0,],list[3,2,0,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([1, 5, 0, 1],"float64"), list[list[0,1,3,],list[0,3,1,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([1, 5, 0, 1],"float64"), list[list[0,1,3,2,],list[0,2,1,3,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([1, 5, 0, 1],"float64"), list[list[0,1,3,2,],list[1,3,0,2,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([1, 5, 0, 1],"float64"), list[list[0,2,3,],list[0,2,1,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([1, 5, 0, 1],"float64"), list[list[1,0,3,],list[2,3,0,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([1, 5, 0, 1],"float64"), list[list[1,0,3,2,],list[3,0,1,2,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([1, 5, 0, 1],"float64"), list[list[1,2,0,],list[1,2,3,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([1, 5, 0, 1],"float64"), list[list[1,2,0,],list[1,3,2,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([1, 5, 0, 1],"float64"), list[list[1,2,0,3,],list[0,2,1,3,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([1, 5, 0, 1],"float64"), list[list[1,2,3,0,],list[1,3,0,2,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([1, 5, 0, 1],"float64"), list[list[1,2,3,0,],list[3,2,1,0,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([1, 5, 0, 1],"float64"), list[list[1,3,],list[1,0,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([1, 5, 0, 1],"float64"), list[list[1,3,0,],list[3,0,2,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([1, 5, 0, 1],"float64"), list[list[1,3,2,0,],list[1,3,2,0,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([1, 5, 0, 1],"float64"), list[list[2,0,1,],list[0,1,3,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([1, 5, 0, 1],"float64"), list[list[2,1,0,3,],list[2,0,1,3,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([1, 5, 0, 1],"float64"), list[list[2,1,0,3,],list[2,0,3,1,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([1, 5, 0, 1],"float64"), list[list[2,1,0,3,],list[3,1,2,0,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([1, 5, 0, 1],"float64"), list[list[2,3,0,],list[3,1,0,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([1, 5, 0, 1],"float64"), list[list[3,1,0,],list[3,2,1,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([1, 5, 0, 1],"float64"), list[list[3,1,0,2,],list[3,1,0,2,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([1, 5, 0, 1],"float64"), list[list[3,1,2,],list[0,3,2,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([1, 5, 0, 1],"float64"), list[list[3,1,2,],list[1,3,2,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([1, 5, 0, 1],"float64"), list[list[3,1,2,],list[3,1,0,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([1, 5, 0, 1],"float64"), list[list[3,2,0,],list[3,2,0,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[0,1,3,2,],list[1,3,0,2,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[0,3,1,2,],list[3,2,1,0,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[1,0,3,],list[2,3,0,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[1,3,],list[1,0,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[1,3,0,],list[3,0,2,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[1,3,2,0,],list[1,3,2,0,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[3,0,],list[2,1,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[3,0,2,1,],list[2,1,0,3,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[3,1,0,],list[3,2,1,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[3,1,0,2,],list[2,3,1,0,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[3,1,0,2,],list[3,1,0,2,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[3,1,2,],list[0,3,2,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[3,1,2,],list[3,1,0,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[3,2,0,],list[3,2,0,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[3,2,1,],list[2,0,1,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([5, 5, 0, 5],"float64"), list[list[0,1,3,],list[0,3,1,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([5, 5, 0, 5],"float64"), list[list[0,1,3,2,],list[1,3,0,2,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([5, 5, 0, 5],"float64"), list[list[0,2,3,],list[0,2,1,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([5, 5, 0, 5],"float64"), list[list[1,0,3,2,],list[3,0,1,2,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([5, 5, 0, 5],"float64"), list[list[1,2,0,],list[1,2,3,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([5, 5, 0, 5],"float64"), list[list[1,2,0,3,],list[0,2,1,3,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([5, 5, 0, 5],"float64"), list[list[1,2,3,0,],list[3,2,1,0,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([5, 5, 0, 5],"float64"), list[list[1,3,],list[1,0,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([5, 5, 0, 5],"float64"), list[list[1,3,0,],list[3,0,2,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([5, 5, 0, 5],"float64"), list[list[1,3,2,0,],list[1,3,2,0,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([5, 5, 0, 5],"float64"), list[list[2,1,0,3,],list[2,0,1,3,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([5, 5, 0, 5],"float64"), list[list[2,1,0,3,],list[2,0,3,1,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([5, 5, 0, 5],"float64"), list[list[3,1,0,2,],list[3,1,0,2,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([5, 5, 0, 5],"float64"), list[list[3,1,2,],list[0,3,2,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([5, 5, 0, 5],"float64"), list[list[3,1,2,],list[1,3,2,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([5, 5, 0, 5],"float64"), list[list[3,2,0,],list[3,2,0,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[3,0,],list[2,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 0],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[0,1,2,],list[2,0,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 0],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[0,1,3,2,],list[1,3,0,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 0],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[0,1,3,2,],list[2,3,0,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 0],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[0,2,3,],list[0,1,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 0],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[1,0,3,],list[2,3,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 0],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[1,0,3,2,],list[2,3,0,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 0],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[1,2,0,],list[1,2,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 0],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[1,2,0,],list[1,3,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 0],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[1,2,0,3,],list[0,2,1,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 0],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[1,2,3,0,],list[1,3,0,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 0],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[1,3,],list[1,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 0],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[1,3,2,0,],list[1,3,2,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 0],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[2,0,1,],list[0,1,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 0],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[2,1,],list[0,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 0],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[2,1,0,3,],list[2,0,1,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 0],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[2,3,],list[1,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 0],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[2,3,0,],list[1,2,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 0],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[2,3,1,],list[1,0,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 0],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[3,0,],list[2,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 0],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[3,0,2,1,],list[2,1,0,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 0],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[3,1,0,],list[3,2,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 0],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[3,1,0,2,],list[3,1,0,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 0],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[3,1,2,],list[3,1,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 0],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[3,2,],list[3,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 0],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[3,2,0,],list[2,1,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 0],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[3,2,0,],list[3,2,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 0],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[3,2,1,],list[2,0,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 0],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[3,2,1,0,],list[0,1,3,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[0,1,2,],list[2,0,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[0,3,1,2,],list[3,2,1,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[0,3,2,1,],list[2,1,3,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[1,0,2,3,],list[3,0,1,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[1,0,3,2,],list[3,0,1,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[1,2,0,],list[1,2,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[1,2,0,],list[1,3,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[1,2,3,0,],list[3,2,1,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[1,3,2,0,],list[1,3,2,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[1,3,2,0,],list[2,1,0,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[2,0,1,3,],list[3,1,0,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[2,1,0,3,],list[2,0,1,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[2,1,0,3,],list[2,0,3,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[2,3,],list[1,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[2,3,0,],list[1,2,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[2,3,0,],list[3,1,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[3,0,],list[2,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[3,0,2,1,],list[2,1,0,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[3,1,0,],list[3,2,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[3,1,0,2,],list[2,3,1,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[3,1,0,2,],list[3,1,0,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[3,1,2,],list[1,2,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[3,1,2,],list[1,3,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[3,1,2,],list[2,3,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[3,1,2,],list[3,1,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[3,1,2,0,],list[1,2,3,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[3,1,2,0,],list[2,3,1,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[3,2,],list[3,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[3,2,0,],list[2,1,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[3,2,0,],list[3,2,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[0,1,2,],list[2,0,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[0,1,3,2,],list[2,3,0,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[0,2,3,],list[0,1,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[0,3,1,2,],list[3,2,1,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[1,0,2,3,],list[3,0,1,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[1,0,3,],list[2,3,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[1,0,3,2,],list[2,3,0,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[1,2,0,3,],list[0,2,1,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[1,3,0,],list[3,0,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[1,3,2,0,],list[3,0,1,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[2,0,1,],list[0,1,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[2,0,1,3,],list[3,1,0,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[2,1,],list[0,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[2,1,0,3,],list[2,0,1,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[2,1,0,3,],list[3,1,2,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[3,1,0,],list[3,2,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[3,1,0,2,],list[2,3,1,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[3,1,2,],list[0,3,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[3,1,2,],list[2,3,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[3,1,2,0,],list[2,3,1,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[3,2,0,],list[3,2,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[3,2,1,],list[2,0,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 0, 1],"float64"), list[list[0,1,3,],list[0,3,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 0, 1],"float64"), list[list[0,1,3,2,],list[0,2,1,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 0, 1],"float64"), list[list[0,1,3,2,],list[1,3,0,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 0, 1],"float64"), list[list[0,2,3,],list[0,2,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 0, 1],"float64"), list[list[1,0,3,2,],list[3,0,1,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 0, 1],"float64"), list[list[1,2,0,],list[1,2,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 0, 1],"float64"), list[list[1,2,0,],list[1,3,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 0, 1],"float64"), list[list[1,2,0,3,],list[0,2,1,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 0, 1],"float64"), list[list[1,2,3,0,],list[1,3,0,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 0, 1],"float64"), list[list[1,2,3,0,],list[3,2,1,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 0, 1],"float64"), list[list[1,3,],list[1,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 0, 1],"float64"), list[list[1,3,0,],list[3,0,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 0, 1],"float64"), list[list[1,3,2,0,],list[1,3,2,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 0, 1],"float64"), list[list[1,3,2,0,],list[3,0,1,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 0, 1],"float64"), list[list[2,0,1,],list[0,1,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 0, 1],"float64"), list[list[2,1,],list[0,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 0, 1],"float64"), list[list[2,1,0,3,],list[3,1,2,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 0, 1],"float64"), list[list[2,3,],list[1,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 0, 1],"float64"), list[list[2,3,0,],list[3,1,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 0, 1],"float64"), list[list[2,3,1,],list[1,0,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 0, 1],"float64"), list[list[3,1,0,2,],list[3,1,0,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 0, 1],"float64"), list[list[3,1,2,],list[0,3,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 0, 1],"float64"), list[list[3,1,2,],list[1,3,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 0, 1],"float64"), list[list[3,1,2,],list[3,1,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 0, 1],"float64"), list[list[3,2,],list[3,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 0, 1],"float64"), list[list[3,2,1,0,],list[0,1,3,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[0,1,2,],list[2,0,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[0,1,3,],list[0,3,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[0,1,3,2,],list[0,2,1,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[0,1,3,2,],list[1,3,0,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[0,1,3,2,],list[2,3,0,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[0,2,3,],list[0,1,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[0,2,3,],list[0,2,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[0,3,2,1,],list[2,1,3,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[1,0,3,],list[2,3,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[1,0,3,2,],list[2,3,0,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[1,2,0,],list[1,2,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[1,2,0,],list[1,3,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[1,2,3,0,],list[1,3,0,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[1,3,],list[1,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[1,3,2,0,],list[2,1,0,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[2,0,1,],list[0,1,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[2,1,],list[0,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[2,1,0,3,],list[2,0,3,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[2,3,0,],list[1,2,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[2,3,1,],list[1,0,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[3,0,],list[2,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[3,0,2,1,],list[2,1,0,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[3,1,2,],list[1,2,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[3,1,2,0,],list[1,2,3,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[3,2,0,],list[2,1,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[3,2,1,],list[2,0,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[3,2,1,0,],list[0,1,3,2,],], )
paddle.tensordot(Tensor([1, 1, 5, 0],"float64"), Tensor([5, 5, 1, 0],"float64"), list[list[0,1,2,],list[2,0,1,],], )
paddle.tensordot(Tensor([1, 1, 5, 0],"float64"), Tensor([5, 5, 1, 0],"float64"), list[list[0,2,3,],list[0,1,2,],], )
paddle.tensordot(Tensor([1, 1, 5, 0],"float64"), Tensor([5, 5, 1, 0],"float64"), list[list[1,2,0,],list[1,2,3,],], )
paddle.tensordot(Tensor([1, 1, 5, 0],"float64"), Tensor([5, 5, 1, 0],"float64"), list[list[1,2,0,3,],list[0,2,1,3,],], )
paddle.tensordot(Tensor([1, 1, 5, 0],"float64"), Tensor([5, 5, 1, 0],"float64"), list[list[1,3,2,0,],list[1,3,2,0,],], )
paddle.tensordot(Tensor([1, 1, 5, 0],"float64"), Tensor([5, 5, 1, 0],"float64"), list[list[2,0,1,],list[0,1,3,],], )
paddle.tensordot(Tensor([1, 1, 5, 0],"float64"), Tensor([5, 5, 1, 0],"float64"), list[list[2,1,],list[0,2,],], )
paddle.tensordot(Tensor([1, 1, 5, 0],"float64"), Tensor([5, 5, 1, 0],"float64"), list[list[2,1,0,3,],list[2,0,1,3,],], )
paddle.tensordot(Tensor([1, 1, 5, 0],"float64"), Tensor([5, 5, 1, 0],"float64"), list[list[2,3,0,],list[1,2,0,],], )
paddle.tensordot(Tensor([1, 1, 5, 0],"float64"), Tensor([5, 5, 1, 0],"float64"), list[list[3,0,],list[2,1,],], )
paddle.tensordot(Tensor([1, 1, 5, 0],"float64"), Tensor([5, 5, 1, 0],"float64"), list[list[3,0,2,1,],list[2,1,0,3,],], )
paddle.tensordot(Tensor([1, 1, 5, 0],"float64"), Tensor([5, 5, 1, 0],"float64"), list[list[3,1,0,],list[3,2,1,],], )
paddle.tensordot(Tensor([1, 1, 5, 0],"float64"), Tensor([5, 5, 1, 0],"float64"), list[list[3,1,0,2,],list[3,1,0,2,],], )
paddle.tensordot(Tensor([1, 1, 5, 0],"float64"), Tensor([5, 5, 1, 0],"float64"), list[list[3,1,2,],list[3,1,0,],], )
paddle.tensordot(Tensor([1, 1, 5, 0],"float64"), Tensor([5, 5, 1, 0],"float64"), list[list[3,2,0,],list[2,1,0,],], )
paddle.tensordot(Tensor([1, 1, 5, 0],"float64"), Tensor([5, 5, 1, 0],"float64"), list[list[3,2,0,],list[3,2,0,],], )
paddle.tensordot(Tensor([1, 1, 5, 0],"float64"), Tensor([5, 5, 1, 0],"float64"), list[list[3,2,1,],list[2,0,1,],], )
paddle.tensordot(Tensor([1, 1, 5, 0],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[1,2,0,],list[1,2,3,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([0, 5, 1, 5],"float64"), list[list[0,1,2,],list[2,0,1,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([0, 5, 1, 5],"float64"), list[list[0,3,2,1,],list[2,1,3,0,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([0, 5, 1, 5],"float64"), list[list[1,0,2,3,],list[3,0,1,2,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([0, 5, 1, 5],"float64"), list[list[1,0,3,2,],list[3,0,1,2,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([0, 5, 1, 5],"float64"), list[list[1,2,0,],list[1,2,3,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([0, 5, 1, 5],"float64"), list[list[1,2,0,],list[1,3,2,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([0, 5, 1, 5],"float64"), list[list[1,2,3,0,],list[3,2,1,0,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([0, 5, 1, 5],"float64"), list[list[1,3,2,0,],list[1,3,2,0,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([0, 5, 1, 5],"float64"), list[list[2,0,1,3,],list[3,1,0,2,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([0, 5, 1, 5],"float64"), list[list[2,3,],list[1,3,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([0, 5, 1, 5],"float64"), list[list[3,0,],list[2,1,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([0, 5, 1, 5],"float64"), list[list[3,1,0,],list[3,2,1,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([0, 5, 1, 5],"float64"), list[list[3,1,0,2,],list[3,1,0,2,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([0, 5, 1, 5],"float64"), list[list[3,1,2,],list[1,2,3,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([0, 5, 1, 5],"float64"), list[list[3,1,2,],list[1,3,2,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([0, 5, 1, 5],"float64"), list[list[3,1,2,],list[2,3,1,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([0, 5, 1, 5],"float64"), list[list[3,1,2,0,],list[1,2,3,0,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([0, 5, 1, 5],"float64"), list[list[3,1,2,0,],list[2,3,1,0,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([0, 5, 1, 5],"float64"), list[list[3,2,],list[3,1,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 0, 1, 5],"float64"), list[list[0,3,1,2,],list[3,2,1,0,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 0, 1, 5],"float64"), list[list[1,0,3,],list[2,3,0,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 0, 1, 5],"float64"), list[list[1,2,0,3,],list[0,2,1,3,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 0, 1, 5],"float64"), list[list[1,3,0,],list[3,0,2,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 0, 1, 5],"float64"), list[list[2,1,],list[0,2,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 0, 1, 5],"float64"), list[list[2,1,0,3,],list[2,0,1,3,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 0, 1, 5],"float64"), list[list[3,1,0,],list[3,2,1,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 0, 1, 5],"float64"), list[list[3,1,0,2,],list[2,3,1,0,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 0, 1, 5],"float64"), list[list[3,1,2,],list[0,3,2,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 0, 1, 5],"float64"), list[list[3,2,0,],list[3,2,0,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 0, 5],"float64"), list[list[0,1,3,],list[0,3,1,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 0, 5],"float64"), list[list[0,1,3,2,],list[0,2,1,3,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 0, 5],"float64"), list[list[1,2,0,],list[1,3,2,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 0, 5],"float64"), list[list[1,2,3,0,],list[1,3,0,2,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 0, 5],"float64"), list[list[1,3,],list[1,0,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 0, 5],"float64"), list[list[1,3,0,],list[3,0,2,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 0, 5],"float64"), list[list[1,3,2,0,],list[3,0,1,2,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 0, 5],"float64"), list[list[2,0,1,],list[0,1,3,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 0, 5],"float64"), list[list[2,1,0,3,],list[3,1,2,0,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 0, 5],"float64"), list[list[2,3,],list[1,3,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 0, 5],"float64"), list[list[2,3,0,],list[3,1,0,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 0, 5],"float64"), list[list[3,1,2,],list[3,1,0,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 0, 5],"float64"), list[list[3,2,],list[3,1,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 0, 5],"float64"), list[list[3,2,1,0,],list[0,1,3,2,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 0],"float64"), list[list[0,1,2,],list[2,0,1,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 0],"float64"), list[list[0,1,3,],list[0,3,1,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 0],"float64"), list[list[0,1,3,2,],list[1,3,0,2,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 0],"float64"), list[list[0,1,3,2,],list[2,3,0,1,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 0],"float64"), list[list[0,2,3,],list[0,1,2,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 0],"float64"), list[list[0,2,3,],list[0,2,1,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 0],"float64"), list[list[1,0,3,],list[2,3,0,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 0],"float64"), list[list[1,0,3,2,],list[2,3,0,1,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 0],"float64"), list[list[1,2,0,],list[1,2,3,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 0],"float64"), list[list[1,3,],list[1,0,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 0],"float64"), list[list[1,3,2,0,],list[2,1,0,3,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 0],"float64"), list[list[2,0,1,],list[0,1,3,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 0],"float64"), list[list[2,1,],list[0,2,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 0],"float64"), list[list[2,1,0,3,],list[2,0,3,1,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 0],"float64"), list[list[2,3,0,],list[1,2,0,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 0],"float64"), list[list[2,3,1,],list[1,0,2,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 0],"float64"), list[list[3,0,],list[2,1,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 0],"float64"), list[list[3,0,2,1,],list[2,1,0,3,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 0],"float64"), list[list[3,2,0,],list[2,1,0,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 0],"float64"), list[list[3,2,1,],list[2,0,1,],], )
paddle.tensordot(Tensor([3, 4, 4],"float32"), Tensor([0, 4, 5],"float32"), 0, )
paddle.tensordot(Tensor([3, 4, 4],"float32"), Tensor([4, 0, 5],"float32"), 0, )
paddle.tensordot(Tensor([3, 4, 4],"float32"), Tensor([4, 0, 5],"float32"), 1, )
paddle.tensordot(Tensor([3, 4, 4],"float32"), Tensor([4, 4, 0],"float32"), 0, )
paddle.tensordot(Tensor([3, 4, 4],"float32"), Tensor([4, 4, 0],"float32"), 1, )
paddle.tensordot(Tensor([3, 4, 4],"float32"), Tensor([4, 4, 0],"float32"), 2, )
paddle.tensordot(Tensor([3, 4, 4],"float32"), Tensor([4, 4, 0],"float32"), list[list[1,2,],list[0,1,],], )
paddle.tensordot(Tensor([3, 4, 4],"float32"), Tensor([4, 4, 0],"float32"), tuple(list[1,2,],list[0,1,],), )
paddle.tensordot(Tensor([3, 4, 4],"float32"), Tensor([4, 4, 0],"float32"), tuple(tuple(1,2,),tuple(0,1,),), )
paddle.tensordot(Tensor([3, 4, 4],"float64"), Tensor([0, 4, 5],"float64"), 0, )
paddle.tensordot(Tensor([3, 4, 4],"float64"), Tensor([4, 0, 5],"float64"), 0, )
paddle.tensordot(Tensor([3, 4, 4],"float64"), Tensor([4, 0, 5],"float64"), 1, )
paddle.tensordot(Tensor([3, 4, 4],"float64"), Tensor([4, 4, 0],"float64"), 0, )
paddle.tensordot(Tensor([3, 4, 4],"float64"), Tensor([4, 4, 0],"float64"), 1, )
paddle.tensordot(Tensor([3, 4, 4],"float64"), Tensor([4, 4, 0],"float64"), 2, )
paddle.tensordot(Tensor([3, 4, 4],"float64"), Tensor([4, 4, 0],"float64"), list[list[1,2,],list[0,1,],], )
paddle.tensordot(Tensor([3, 4, 4],"float64"), Tensor([4, 4, 0],"float64"), tuple(list[1,2,],list[0,1,],), )
paddle.tensordot(Tensor([3, 4, 4],"float64"), Tensor([4, 4, 0],"float64"), tuple(tuple(1,2,),tuple(0,1,),), )
paddle.tensordot(x=Tensor([2, 3, 3, 4],"float64"), y=Tensor([0, 4, 3, 4],"float64"), axes=0, )
paddle.tensordot(x=Tensor([2, 3, 3, 4],"float64"), y=Tensor([3, 0, 3, 4],"float64"), axes=0, )
paddle.tensordot(x=Tensor([2, 3, 3, 4],"float64"), y=Tensor([3, 4, 0, 4],"float64"), )
paddle.tensordot(x=Tensor([2, 3, 3, 4],"float64"), y=Tensor([3, 4, 0, 4],"float64"), axes=0, )
paddle.tensordot(x=Tensor([2, 3, 3, 4],"float64"), y=Tensor([3, 4, 3, 0],"float64"), )
paddle.tensordot(x=Tensor([2, 3, 3, 4],"float64"), y=Tensor([3, 4, 3, 0],"float64"), axes=0, )
paddle.tensordot(x=Tensor([2, 3, 4, 4],"float64"), y=Tensor([0, 3, 4, 4],"float64"), axes=0, )
paddle.tensordot(x=Tensor([2, 3, 4, 4],"float64"), y=Tensor([2, 0, 4, 4],"float64"), axes=0, )
paddle.tensordot(x=Tensor([2, 3, 4, 4],"float64"), y=Tensor([2, 3, 0, 4],"float64"), axes=0, )
paddle.tensordot(x=Tensor([2, 3, 4, 4],"float64"), y=Tensor([2, 3, 4, 0],"float64"), axes=0, )
paddle.tensordot(x=Tensor([2, 7, 4, 2],"float64"), y=Tensor([7, 0, 4, 2],"float64"), axes=list[tuple(1,2,3,),tuple(0,2,3,),], )
paddle.tensordot(x=Tensor([2, 7, 4, 2],"float64"), y=Tensor([7, 0, 4, 2],"float64"), axes=tuple(list[1,2,3,],list[0,2,3,],), )
paddle.tensordot(x=Tensor([3, 4, 3, 4],"float64"), y=Tensor([4, 0, 3, 4],"float64"), axes=1, )
paddle.tensordot(x=Tensor([3, 4, 3, 4],"float64"), y=Tensor([4, 4, 0, 4],"float64"), axes=1, )
paddle.tensordot(x=Tensor([3, 4, 3, 4],"float64"), y=Tensor([4, 4, 3, 0],"float64"), axes=1, )
paddle.trapezoid(Tensor([0],"float32"), dx=2.0, )
paddle.trapezoid(y=Tensor([0, 4],"float16"), x=Tensor([0, 4],"float16"), )
paddle.trapezoid(y=Tensor([4, 0],"float16"), x=Tensor([4, 0],"float16"), )
paddle.trapezoid(y=Tensor([4, 0],"float16"), x=Tensor([4, 4],"float16"), )
paddle.unflatten(x=Tensor([0, 6, 16],"float32"), axis=-1, shape=list[-1,2,], )
paddle.unflatten(x=Tensor([4, 0, 16],"float32"), axis=0, shape=list[-1,], )
paddle.unflatten(x=Tensor([4, 0, 16],"float32"), axis=0, shape=tuple(-1,), )
paddle.unflatten(x=Tensor([4, 0, 16],"float32"), axis=0, shape=tuple(-1,2,), )
paddle.unflatten(x=Tensor([4, 0, 16],"float32"), axis=-1, shape=list[-1,2,], )
paddle.unflatten(x=Tensor([4, 6, 0],"float32"), axis=0, shape=list[-1,], )
paddle.unflatten(x=Tensor([4, 6, 0],"float32"), axis=0, shape=tuple(-1,), )
paddle.unflatten(x=Tensor([4, 6, 0],"float32"), axis=0, shape=tuple(-1,2,), )
paddle.var(Tensor([0, 16, 3, 3],"float32"), axis=list[1,2,3,], keepdim=True, unbiased=False, )
paddle.var(Tensor([0, 256],"float32"), axis=-1, keepdim=True, )
paddle.var(Tensor([0, 256],"float64"), axis=-1, keepdim=True, )
paddle.var(Tensor([0, 3, 4, 10],"float32"), list[1,3,], True, False, )
paddle.var(Tensor([0, 3, 4, 10],"float64"), 2, True, False, )
paddle.var(Tensor([0, 3, 4, 10],"float64"), list[1,2,], True, False, )
paddle.var(Tensor([0, 3, 4, 10],"float64"), list[1,3,], False, False, )
paddle.var(Tensor([0, 3, 4, 10],"float64"), list[1,3,], True, False, )
paddle.var(Tensor([0, 3, 4, 10],"float64"), tuple(1,3,), True, False, )
paddle.var(Tensor([0, 32, 1, 1],"float32"), axis=list[1,2,3,], keepdim=True, unbiased=False, )
paddle.var(Tensor([0],"float32"), )
paddle.var(Tensor([1, 0, 4, 10],"float32"), list[1,3,], True, False, )
paddle.var(Tensor([1, 0, 4, 10],"float64"), 2, True, False, )
paddle.var(Tensor([1, 0, 4, 10],"float64"), list[1,2,], True, False, )
paddle.var(Tensor([1, 0, 4, 10],"float64"), list[1,3,], False, False, )
paddle.var(Tensor([1, 0, 4, 10],"float64"), list[1,3,], True, False, )
paddle.var(Tensor([1, 0, 4, 10],"float64"), tuple(1,3,), True, False, )
paddle.var(Tensor([1, 3, 0, 10],"float32"), list[1,3,], True, False, )
paddle.var(Tensor([1, 3, 0, 10],"float64"), 2, True, False, )
paddle.var(Tensor([1, 3, 0, 10],"float64"), list[1,2,], True, False, )
paddle.var(Tensor([1, 3, 0, 10],"float64"), list[1,3,], False, False, )
paddle.var(Tensor([1, 3, 0, 10],"float64"), list[1,3,], True, False, )
paddle.var(Tensor([1, 3, 0, 10],"float64"), tuple(1,3,), True, False, )
paddle.var(Tensor([1, 3, 4, 0],"float32"), list[1,3,], True, False, )
paddle.var(Tensor([1, 3, 4, 0],"float64"), 2, True, False, )
paddle.var(Tensor([1, 3, 4, 0],"float64"), list[1,2,], True, False, )
paddle.var(Tensor([1, 3, 4, 0],"float64"), list[1,3,], False, False, )
paddle.var(Tensor([1, 3, 4, 0],"float64"), list[1,3,], True, False, )
paddle.var(Tensor([1, 3, 4, 0],"float64"), tuple(1,3,), True, False, )
paddle.var(Tensor([16, 0, 1, 1],"float32"), axis=list[1,2,3,], keepdim=True, unbiased=False, )
paddle.var(Tensor([16, 0, 3, 3],"float32"), axis=list[1,2,3,], keepdim=True, unbiased=False, )
paddle.var(Tensor([16, 0],"float32"), axis=-1, keepdim=True, )
paddle.var(Tensor([16, 0],"float64"), axis=-1, keepdim=True, )
paddle.var(Tensor([16, 16, 0, 3],"float32"), axis=list[1,2,3,], keepdim=True, unbiased=False, )
paddle.var(Tensor([16, 16, 3, 0],"float32"), axis=list[1,2,3,], keepdim=True, unbiased=False, )
paddle.var(Tensor([16, 32, 0, 1],"float32"), axis=list[1,2,3,], keepdim=True, unbiased=False, )
paddle.var(Tensor([16, 32, 1, 0],"float32"), axis=list[1,2,3,], keepdim=True, unbiased=False, )
paddle.var(x=Tensor([0, 3, 3],"float64"), )
paddle.var(x=Tensor([0, 3, 3],"float64"), axis=0, )
paddle.var(x=Tensor([0, 3, 3],"float64"), axis=0, unbiased=False, )
paddle.var(x=Tensor([0, 3, 3],"float64"), axis=list[0,1,], )
paddle.var(x=Tensor([0, 3, 3],"float64"), axis=tuple(0,1,), )
paddle.var(x=Tensor([0, 3, 3],"float64"), axis=tuple(0,1,), keepdim=True, )
paddle.var(x=Tensor([0, 3],"float32"), )
paddle.var(x=Tensor([0, 3],"float64"), )
paddle.var(x=Tensor([0, 96, 1],"float32"), axis=tuple(1,), keepdim=True, unbiased=False, )
paddle.var(x=Tensor([13, 0, 1],"float32"), axis=tuple(1,), keepdim=True, unbiased=False, )
paddle.var(x=Tensor([13, 96, 0],"float32"), axis=tuple(1,), keepdim=True, unbiased=False, )
paddle.var(x=Tensor([16, 0, 1],"float32"), axis=tuple(1,), keepdim=True, unbiased=False, )
paddle.var(x=Tensor([16, 96, 0],"float32"), axis=tuple(1,), keepdim=True, unbiased=False, )
paddle.var(x=Tensor([2, 0],"float32"), )
paddle.var(x=Tensor([2, 0],"float64"), )
paddle.var(x=Tensor([3, 0, 3],"float64"), )
paddle.var(x=Tensor([3, 0, 3],"float64"), axis=0, )
paddle.var(x=Tensor([3, 0, 3],"float64"), axis=0, unbiased=False, )
paddle.var(x=Tensor([3, 0, 3],"float64"), axis=list[0,1,], )
paddle.var(x=Tensor([3, 0, 3],"float64"), axis=tuple(0,1,), )
paddle.var(x=Tensor([3, 0, 3],"float64"), axis=tuple(0,1,), keepdim=True, )
paddle.var(x=Tensor([3, 3, 0],"float64"), )
paddle.var(x=Tensor([3, 3, 0],"float64"), axis=0, )
paddle.var(x=Tensor([3, 3, 0],"float64"), axis=0, unbiased=False, )
paddle.var(x=Tensor([3, 3, 0],"float64"), axis=list[0,1,], )
paddle.var(x=Tensor([3, 3, 0],"float64"), axis=tuple(0,1,), )
paddle.var(x=Tensor([3, 3, 0],"float64"), axis=tuple(0,1,), keepdim=True, )
paddle.vstack(list[Tensor([0, 1, 1, 1],"float64"),], )
paddle.vstack(list[Tensor([0, 1, 1, 1],"float64"),], name=None, )
paddle.vstack(list[Tensor([0, 1, 1, 1],"float64"),Tensor([0, 1, 1, 1],"float64"),Tensor([0, 1, 1, 1],"float64"),], )
paddle.vstack(list[Tensor([0, 1, 1, 1],"float64"),Tensor([0, 1, 1, 1],"float64"),Tensor([0, 1, 1, 1],"float64"),], name=None, )
paddle.vstack(list[Tensor([0, 1, 1],"float64"),], )
paddle.vstack(list[Tensor([0, 1, 1],"float64"),], name=None, )
paddle.vstack(list[Tensor([0, 1, 1],"float64"),Tensor([0, 1, 1],"float64"),Tensor([0, 1, 1],"float64"),], )
paddle.vstack(list[Tensor([0, 1, 1],"float64"),Tensor([0, 1, 1],"float64"),Tensor([0, 1, 1],"float64"),], name=None, )
paddle.vstack(list[Tensor([0, 1],"float64"),], )
paddle.vstack(list[Tensor([0, 1],"float64"),], name=None, )
paddle.vstack(list[Tensor([0, 1],"float64"),Tensor([0, 1],"float64"),Tensor([0, 1],"float64"),], )
paddle.vstack(list[Tensor([0, 1],"float64"),Tensor([0, 1],"float64"),Tensor([0, 1],"float64"),], name=None, )
paddle.vstack(list[Tensor([0, 2],"float64"),], )
paddle.vstack(list[Tensor([0, 2],"float64"),], name=None, )
paddle.vstack(list[Tensor([0, 2],"float64"),Tensor([0, 2],"float64"),Tensor([0, 2],"float64"),], )
paddle.vstack(list[Tensor([0, 2],"float64"),Tensor([0, 2],"float64"),Tensor([0, 2],"float64"),], name=None, )
paddle.vstack(list[Tensor([0, 4, 2, 5],"float64"),], )
paddle.vstack(list[Tensor([0, 4, 2, 5],"float64"),], name=None, )
paddle.vstack(list[Tensor([0, 4, 2, 5],"float64"),Tensor([0, 4, 2, 5],"float64"),Tensor([0, 4, 2, 5],"float64"),], )
paddle.vstack(list[Tensor([0, 4, 2, 5],"float64"),Tensor([0, 4, 2, 5],"float64"),Tensor([0, 4, 2, 5],"float64"),], name=None, )
paddle.vstack(list[Tensor([0, 4, 2],"float64"),], )
paddle.vstack(list[Tensor([0, 4, 2],"float64"),], name=None, )
paddle.vstack(list[Tensor([0, 4, 2],"float64"),Tensor([0, 4, 2],"float64"),Tensor([0, 4, 2],"float64"),], )
paddle.vstack(list[Tensor([0, 4, 2],"float64"),Tensor([0, 4, 2],"float64"),Tensor([0, 4, 2],"float64"),], name=None, )
paddle.vstack(list[Tensor([0],"float64"),], )
paddle.vstack(list[Tensor([0],"float64"),], name=None, )
paddle.vstack(list[Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),], )
paddle.vstack(list[Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),], name=None, )
paddle.vstack(list[Tensor([1, 0, 1, 1],"float64"),], )
paddle.vstack(list[Tensor([1, 0, 1, 1],"float64"),], name=None, )
paddle.vstack(list[Tensor([1, 0, 1, 1],"float64"),Tensor([1, 0, 1, 1],"float64"),Tensor([1, 0, 1, 1],"float64"),], )
paddle.vstack(list[Tensor([1, 0, 1, 1],"float64"),Tensor([1, 0, 1, 1],"float64"),Tensor([1, 0, 1, 1],"float64"),], name=None, )
paddle.vstack(list[Tensor([1, 0, 1],"float64"),], )
paddle.vstack(list[Tensor([1, 0, 1],"float64"),], name=None, )
paddle.vstack(list[Tensor([1, 0, 1],"float64"),Tensor([1, 0, 1],"float64"),Tensor([1, 0, 1],"float64"),], )
paddle.vstack(list[Tensor([1, 0, 1],"float64"),Tensor([1, 0, 1],"float64"),Tensor([1, 0, 1],"float64"),], name=None, )
paddle.vstack(list[Tensor([1, 0],"float64"),], )
paddle.vstack(list[Tensor([1, 0],"float64"),], name=None, )
paddle.vstack(list[Tensor([1, 0],"float64"),Tensor([1, 0],"float64"),Tensor([1, 0],"float64"),], )
paddle.vstack(list[Tensor([1, 0],"float64"),Tensor([1, 0],"float64"),Tensor([1, 0],"float64"),], name=None, )
paddle.vstack(list[Tensor([1, 1, 0, 1],"float64"),], )
paddle.vstack(list[Tensor([1, 1, 0, 1],"float64"),], name=None, )
paddle.vstack(list[Tensor([1, 1, 0, 1],"float64"),Tensor([1, 1, 0, 1],"float64"),Tensor([1, 1, 0, 1],"float64"),], )
paddle.vstack(list[Tensor([1, 1, 0, 1],"float64"),Tensor([1, 1, 0, 1],"float64"),Tensor([1, 1, 0, 1],"float64"),], name=None, )
paddle.vstack(list[Tensor([1, 1, 0],"float64"),], )
paddle.vstack(list[Tensor([1, 1, 0],"float64"),], name=None, )
paddle.vstack(list[Tensor([1, 1, 0],"float64"),Tensor([1, 1, 0],"float64"),Tensor([1, 1, 0],"float64"),], )
paddle.vstack(list[Tensor([1, 1, 0],"float64"),Tensor([1, 1, 0],"float64"),Tensor([1, 1, 0],"float64"),], name=None, )
paddle.vstack(list[Tensor([1, 1, 1, 0],"float64"),], )
paddle.vstack(list[Tensor([1, 1, 1, 0],"float64"),], name=None, )
paddle.vstack(list[Tensor([1, 1, 1, 0],"float64"),Tensor([1, 1, 1, 0],"float64"),Tensor([1, 1, 1, 0],"float64"),], )
paddle.vstack(list[Tensor([1, 1, 1, 0],"float64"),Tensor([1, 1, 1, 0],"float64"),Tensor([1, 1, 1, 0],"float64"),], name=None, )
paddle.vstack(list[Tensor([3, 0, 2, 5],"float64"),], )
paddle.vstack(list[Tensor([3, 0, 2, 5],"float64"),], name=None, )
paddle.vstack(list[Tensor([3, 0, 2, 5],"float64"),Tensor([3, 0, 2, 5],"float64"),Tensor([3, 0, 2, 5],"float64"),], )
paddle.vstack(list[Tensor([3, 0, 2, 5],"float64"),Tensor([3, 0, 2, 5],"float64"),Tensor([3, 0, 2, 5],"float64"),], name=None, )
paddle.vstack(list[Tensor([3, 0, 2],"float64"),], )
paddle.vstack(list[Tensor([3, 0, 2],"float64"),], name=None, )
paddle.vstack(list[Tensor([3, 0, 2],"float64"),Tensor([3, 0, 2],"float64"),Tensor([3, 0, 2],"float64"),], )
paddle.vstack(list[Tensor([3, 0, 2],"float64"),Tensor([3, 0, 2],"float64"),Tensor([3, 0, 2],"float64"),], name=None, )
paddle.vstack(list[Tensor([3, 0],"float64"),], )
paddle.vstack(list[Tensor([3, 0],"float64"),], name=None, )
paddle.vstack(list[Tensor([3, 0],"float64"),Tensor([3, 0],"float64"),Tensor([3, 0],"float64"),], )
paddle.vstack(list[Tensor([3, 0],"float64"),Tensor([3, 0],"float64"),Tensor([3, 0],"float64"),], name=None, )
paddle.vstack(list[Tensor([3, 4, 0, 5],"float64"),], )
paddle.vstack(list[Tensor([3, 4, 0, 5],"float64"),], name=None, )
paddle.vstack(list[Tensor([3, 4, 0, 5],"float64"),Tensor([3, 4, 0, 5],"float64"),Tensor([3, 4, 0, 5],"float64"),], )
paddle.vstack(list[Tensor([3, 4, 0, 5],"float64"),Tensor([3, 4, 0, 5],"float64"),Tensor([3, 4, 0, 5],"float64"),], name=None, )
paddle.vstack(list[Tensor([3, 4, 0],"float64"),], )
paddle.vstack(list[Tensor([3, 4, 0],"float64"),], name=None, )
paddle.vstack(list[Tensor([3, 4, 0],"float64"),Tensor([3, 4, 0],"float64"),Tensor([3, 4, 0],"float64"),], )
paddle.vstack(list[Tensor([3, 4, 0],"float64"),Tensor([3, 4, 0],"float64"),Tensor([3, 4, 0],"float64"),], name=None, )
paddle.vstack(list[Tensor([3, 4, 2, 0],"float64"),], )
paddle.vstack(list[Tensor([3, 4, 2, 0],"float64"),], name=None, )
paddle.vstack(list[Tensor([3, 4, 2, 0],"float64"),Tensor([3, 4, 2, 0],"float64"),Tensor([3, 4, 2, 0],"float64"),], )
paddle.vstack(list[Tensor([3, 4, 2, 0],"float64"),Tensor([3, 4, 2, 0],"float64"),Tensor([3, 4, 2, 0],"float64"),], name=None, )
