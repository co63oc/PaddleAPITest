2025-06-08 11:43:11.376504 GPU 5 64406 test begin: paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([1, 8, 4, 8],"float32"), None, Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=False, )
outputs format not support
[accuracy error] paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([1, 8, 4, 8],"float32"), None, Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=False, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 119 / 256 (46.5%)
Greatest absolute difference: 0.8914549946784973 at index (0, 3, 2, 6) (up to 0.01 allowed)
Greatest relative difference: 7.249597549438477 at index (0, 4, 3, 7) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 8, 4, 8]), dtype=torch.float32)
tensor([[[[ 0.4066, -0.6473, -0.2857,  ...,  0.8263,  0.1953,  0.1308],
          [-0.9506, -0.1966, -0.4028,  ...,  0.2721,  0.2171,  0.0289],
          [-0.2776,  0.0304, -0.1448,  ...,  0.8653,  0.2412,  0.5324],
          [-0.4050, -0.6753, -0.0318,  ...,  0.7590,  0.1262,  0.5791]],

         [[ 0.1070,  0.1752,  0.2508,  ...,  0.2950,  0.3912,  0.4757],
          [ 0.1302,  0.1795, -0.6367,  ...,  0.1294,  0.3321,  0.6667],
          [ 0.2301, -0.2142, -0.3087,  ...,  0.3053,  0.3985,  0.1310],
          [ 0.0683,  0.2073, -0.2490,  ...,  0.2584,  0.3523,  0.8384]],

         [[-0.1646,  0.0730, -0.0959,  ...,  0.2641,  0.2954,  0.1168],
          [-0.5849, -0.0563, -0.0178,  ...,  0.1377,  0.2343,  0.3206],
          [-0.2575,  0.2008, -0.0688,  ...,  0.4451,  0.6182,  0.2300],
          [-0.0613,  0.3142, -0.2034,  ...,  0.4346,  0.4059,  0.3813]],

         ...,

         [[-0.0484,  0.4468, -0.0830,  ...,  0.4438,  0.5005,  0.2092],
          [-0.0724,  0.2207, -0.0898,  ...,  0.1151,  0.2401,  0.8582],
          [-0.2170,  0.6949,  0.0469,  ...,  0.3299,  0.4077,  0.8332],
          [-0.0180,  0.0497, -0.0411,  ...,  0.5140,  0.0888,  0.8522]],

         [[-0.0670,  0.2041, -0.4608,  ...,  0.5852,  0.6078,  0.6061],
          [ 0.5129,  0.1881, -0.1296,  ...,  1.2224,  0.8336,  0.5149],
          [ 0.0509,  0.1721, -0.7365,  ...,  1.2241,  0.9587,  0.6263],
          [-0.0593,  0.0666, -0.3255,  ...,  0.1917,  0.8856,  0.8444]],

         [[ 0.2252,  0.1423,  0.7036,  ...,  0.0925,  0.4195,  1.0128],
          [-0.0596,  0.1516,  0.8033,  ...,  0.1163,  0.3130,  0.7708],
          [-0.0876,  0.3412,  0.3181,  ...,  0.5896,  0.1250,  0.4078],
          [ 0.1263,  0.0495,  0.4186,  ...,  0.5020,  0.1501,  0.5320]]]])
DESIRED: (shape=torch.Size([1, 8, 4, 8]), dtype=torch.float32)
tensor([[[[ 0.4066, -0.6473, -0.2857,  ...,  0.6797,  0.7398,  0.1047],
          [-0.9506, -0.1966, -0.4028,  ...,  0.2239,  0.7607,  0.0152],
          [-0.2776,  0.0304, -0.1448,  ...,  0.7122,  1.0649,  0.3263],
          [-0.4050, -0.6753, -0.0318,  ...,  0.6243,  0.5893,  0.3845]],

         [[ 0.1070,  0.1752,  0.2508,  ...,  0.5845,  0.7772,  0.3859],
          [ 0.1302,  0.1795, -0.6367,  ...,  0.2631,  1.0064,  0.5697],
          [ 0.2301, -0.2142, -0.3087,  ...,  0.5790,  1.0219,  0.1135],
          [ 0.0683,  0.2073, -0.2490,  ...,  0.5154,  0.8937,  0.7184]],

         [[-0.1646,  0.0730, -0.0959,  ...,  0.3825,  0.1593,  0.1749],
          [-0.5849, -0.0563, -0.0178,  ...,  0.3007,  0.1676,  0.2060],
          [-0.2575,  0.2008, -0.0688,  ...,  0.5610,  0.4268,  0.2838],
          [-0.0613,  0.3142, -0.2034,  ...,  0.4210,  0.1682,  0.3507]],

         ...,

         [[-0.0484,  0.4468, -0.0830,  ...,  0.3547,  0.2739,  0.2270],
          [-0.0724,  0.2207, -0.0898,  ...,  0.0499,  0.1064,  0.8354],
          [-0.2170,  0.6949,  0.0469,  ...,  0.1182,  0.2804,  0.6412],
          [-0.0180,  0.0497, -0.0411,  ...,  0.5985,  0.0354,  0.7626]],

         [[-0.0670,  0.2041, -0.4608,  ...,  0.3461,  0.4078,  0.5545],
          [ 0.5129,  0.1881, -0.1296,  ...,  0.8381,  0.9568,  0.5296],
          [ 0.0509,  0.1721, -0.7365,  ...,  0.8471,  0.6355,  0.6709],
          [-0.0593,  0.0666, -0.3255,  ...,  0.1135,  0.8678,  0.8312]],

         [[ 0.2252,  0.1423,  0.7036,  ...,  0.1142,  0.6055,  1.0915],
          [-0.0596,  0.1516,  0.8033,  ...,  0.1393,  0.1837,  0.7668],
          [-0.0876,  0.3412,  0.3181,  ...,  0.6414,  0.0761,  0.3855],
          [ 0.1263,  0.0495,  0.4186,  ...,  0.5094,  0.0562,  0.6125]]]])

2025-06-08 11:43:11.597531 GPU 5 64403 test begin: paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([1, 8, 4, 8],"float32"), None, Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=False, )
outputs format not support
[accuracy error] paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([1, 8, 4, 8],"float32"), None, Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=False, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 250 / 256 (97.7%)
Greatest absolute difference: 1.4771980047225952 at index (0, 6, 1, 3) (up to 0.01 allowed)
Greatest relative difference: 1163.9503173828125 at index (0, 3, 0, 3) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 8, 4, 8]), dtype=torch.float32)
tensor([[[[-4.0725e-01,  1.9638e-01,  7.7817e-02,  ...,  3.0455e-01,
            1.7747e-01,  4.9417e-01],
          [-4.0866e-01,  3.4143e-01, -3.0442e-01,  ...,  6.4460e-01,
            1.8067e-01,  5.7666e-01],
          [ 4.0640e-01,  5.2293e-01, -4.6815e-02,  ...,  4.3076e-01,
            6.9793e-01,  1.1594e+00],
          [ 3.8966e-01,  6.6459e-01, -6.4545e-01,  ...,  5.8182e-01,
            2.8217e-03,  4.1367e-01]],

         [[ 2.8316e-01,  3.5282e-01, -2.4408e-01,  ...,  2.6945e-01,
            1.3995e-01,  4.1472e-02],
          [-6.0069e-01,  8.7705e-01, -1.7975e-02,  ...,  4.0703e-01,
            6.6624e-02,  2.0810e-01],
          [ 1.3089e-02,  6.4335e-02, -1.9072e-01,  ...,  2.9079e-01,
            8.7419e-02,  3.0710e-01],
          [ 6.8664e-02,  6.3472e-01, -6.5872e-01,  ...,  1.1208e+00,
            1.3454e-01,  2.8283e-01]],

         [[-5.6623e-01,  9.2060e-01,  3.1323e-01,  ...,  7.7691e-01,
            6.4927e-01,  1.3518e-01],
          [ 3.5610e-02,  1.0152e+00,  1.7409e-01,  ...,  2.1832e-01,
            2.2539e-01,  6.2976e-01],
          [-1.7615e-02,  4.7460e-01,  9.2434e-02,  ...,  4.1721e-01,
            3.2060e-01,  5.1298e-01],
          [-5.8786e-01,  6.1014e-01, -6.7810e-02,  ...,  6.7063e-01,
            1.5860e-02,  6.0430e-01]],

         ...,

         [[ 1.6284e-01,  4.2397e-01, -2.4428e-01,  ...,  1.1752e+00,
           -2.7552e-01,  1.0790e+00],
          [ 8.3222e-04,  1.1957e+00,  1.1871e-01,  ...,  8.5984e-01,
           -6.3905e-01,  9.8878e-01],
          [-5.5072e-01,  8.3082e-01, -4.0937e-01,  ...,  1.6392e-01,
           -6.3164e-02,  7.9816e-01],
          [-3.6743e-01,  1.2368e+00,  2.0552e-01,  ...,  7.2169e-01,
           -3.7920e-01,  1.2384e+00]],

         [[-3.2119e-01,  5.1351e-01,  2.8324e-01,  ...,  3.2769e-01,
            3.8299e-02,  9.4830e-02],
          [-3.5240e-01,  7.5604e-01,  7.7690e-01,  ...,  8.1583e-01,
            4.3694e-01,  1.5572e-01],
          [-3.2988e-01,  5.2988e-01,  1.5072e-01,  ...,  2.0994e-01,
            3.8897e-02,  8.5391e-02],
          [-3.6394e-03,  3.6623e-01,  1.2314e-01,  ...,  4.4690e-01,
            4.8207e-01,  5.6048e-02]],

         [[ 4.3844e-01,  6.2062e-01,  3.9769e-01,  ...,  5.6732e-01,
            2.3845e-01,  5.0208e-01],
          [ 1.3054e-01,  3.8226e-01,  5.1412e-03,  ...,  4.7866e-01,
            2.2396e-01,  2.1790e-01],
          [-9.0437e-04,  1.4360e-01, -2.5719e-01,  ...,  6.2476e-01,
            8.5813e-04,  5.9153e-01],
          [ 2.3584e-01,  7.1904e-01,  2.2215e-02,  ...,  3.0288e-01,
            7.1842e-01,  5.5915e-01]]]])
DESIRED: (shape=torch.Size([1, 8, 4, 8]), dtype=torch.float32)
tensor([[[[-1.4580e-02, -2.6906e-01,  2.3612e-02,  ...,  4.7108e-01,
            7.8363e-01,  5.4047e-01],
          [-4.5832e-01, -1.7767e-01, -1.6064e-01,  ...,  5.4302e-01,
            3.1446e-01,  8.3107e-01],
          [ 1.2762e-01, -2.6411e-01, -4.6452e-01,  ...,  1.4865e-01,
            8.3497e-01,  8.3966e-01],
          [ 2.2844e-01, -4.6483e-01, -9.2489e-02,  ...,  3.0754e-01,
            5.8358e-02,  1.0733e+00]],

         [[ 3.6460e-01,  9.8291e-02, -3.2818e-01,  ...,  3.0387e-01,
            6.1653e-01,  1.4209e-01],
          [ 1.9811e-01,  6.5900e-01, -3.4755e-01,  ...,  6.9441e-01,
            6.4037e-01,  3.7439e-01],
          [-5.5633e-01,  2.7511e-02, -3.7556e-01,  ...,  6.1724e-02,
            1.0247e+00,  6.2449e-01],
          [-3.5557e-01,  1.7194e-01, -7.0606e-01,  ...,  9.6787e-01,
            8.8791e-01,  6.3781e-01]],

         [[-1.7010e-01, -5.0711e-01,  2.5453e-01,  ...,  1.1794e+00,
            3.7412e-01,  6.2474e-02],
          [ 3.6979e-01, -3.3760e-01,  1.8755e-01,  ...,  5.5509e-01,
            2.5662e-01,  6.1757e-01],
          [ 7.6040e-02, -7.7225e-01,  8.5651e-02,  ...,  4.6190e-01,
            2.4979e-01,  4.7606e-01],
          [-1.4022e-01, -7.2336e-01, -7.8263e-04,  ...,  1.1075e+00,
            1.0970e-01,  7.1594e-01]],

         ...,

         [[-3.6271e-01, -2.4316e-01, -3.5633e-01,  ...,  5.7819e-01,
            5.5132e-01,  5.3464e-01],
          [ 2.4878e-01,  3.0634e-03,  6.0735e-02,  ...,  1.2895e+00,
            3.8813e-01,  5.8908e-01],
          [ 2.3674e-02,  6.3534e-01, -4.4178e-01,  ...,  7.7418e-01,
            3.7489e-01,  3.8259e-01],
          [ 5.5140e-02,  4.4606e-01, -2.2803e-01,  ...,  1.2231e+00,
            8.5271e-01,  5.2148e-01]],

         [[-1.2203e-01,  3.0384e-01,  3.4200e-01,  ...,  5.3514e-01,
            5.5732e-01,  5.7219e-01],
          [-9.2820e-02, -1.8647e-02,  5.2509e-01,  ...,  9.0102e-01,
            1.3438e+00,  4.2540e-01],
          [-3.5196e-02,  2.9216e-01,  1.7916e-01,  ...,  5.6345e-01,
            4.5547e-01,  4.5880e-01],
          [-3.9396e-02, -1.2677e-01,  2.9810e-02,  ...,  2.5622e-01,
            8.0475e-01,  4.4836e-01]],

         [[ 5.6714e-01, -7.1933e-02,  1.4448e-01,  ...,  6.8674e-01,
            6.4785e-01,  1.3416e-01],
          [ 8.9186e-02,  8.3802e-02,  2.7650e-01,  ...,  3.8963e-01,
            5.4625e-01,  7.1809e-01],
          [ 2.8138e-02, -2.6824e-01, -3.5305e-02,  ...,  5.7604e-01,
            3.9420e-01,  8.7191e-01],
          [ 2.9738e-01,  4.1439e-01, -1.1617e-01,  ...,  4.1388e-01,
            8.0144e-01,  5.6894e-01]]]])

2025-06-08 11:43:11.744743 GPU 5 64402 test begin: paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([1, 8, 4, 8],"float32"), None, Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([1, 8],"int64"), use_neox_rotary_style=True, time_major=False, )
outputs format not support
[accuracy error] paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([1, 8, 4, 8],"float32"), None, Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([1, 8],"int64"), use_neox_rotary_style=True, time_major=False, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 247 / 256 (96.5%)
Greatest absolute difference: 1.17195725440979 at index (0, 1, 0, 4) (up to 0.01 allowed)
Greatest relative difference: 345.4713134765625 at index (0, 3, 3, 3) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 8, 4, 8]), dtype=torch.float32)
tensor([[[[ 0.4310,  0.4670, -0.3163,  ...,  0.1353,  0.0834,  1.4609],
          [ 0.1996,  0.2207, -0.0870,  ...,  0.1443,  0.0904,  0.7663],
          [ 0.1810,  0.2565,  0.3008,  ...,  0.1209, -0.3203,  0.8166],
          [ 0.1500,  0.2754,  0.2404,  ...,  0.2085,  0.0636,  0.1715]],

         [[-0.3388,  0.6541, -0.2013,  ...,  0.6798,  0.1108,  0.0919],
          [-0.6326,  0.8309,  0.1457,  ...,  0.3853, -0.5907,  0.0837],
          [-0.4511,  0.8477,  0.2730,  ...,  0.7654,  0.2300,  0.0292],
          [-0.0410,  0.4339,  0.1696,  ...,  0.2945, -0.1257,  0.0603]],

         [[ 0.0766,  0.1874,  0.1440,  ...,  0.5429,  0.0886,  0.2735],
          [-0.1032,  0.4814, -0.4516,  ...,  0.1308, -0.6412,  0.1611],
          [ 0.1291,  0.4409, -0.3977,  ...,  0.4857,  0.2248,  0.4313],
          [ 0.0389,  0.4269, -0.4156,  ...,  0.3115, -0.3032,  0.2481]],

         ...,

         [[-0.1836,  0.5694,  0.0288,  ...,  0.2320, -0.0651,  0.3238],
          [-0.5472,  0.6128, -0.3658,  ...,  0.1979,  0.0594,  0.8708],
          [-0.2579,  0.9573, -0.0815,  ...,  0.5076,  0.0399,  0.4172],
          [-0.2051,  0.7207, -0.4578,  ...,  0.5069, -0.0156,  0.6197]],

         [[ 0.0584,  0.2020, -0.0113,  ...,  0.1495, -0.0043,  0.9473],
          [ 0.3494,  0.3682,  0.6142,  ...,  0.7292, -0.2712,  0.4183],
          [ 0.3864,  0.3357,  0.4435,  ...,  0.5585, -0.2666,  1.1319],
          [ 0.3884,  0.3584,  0.0205,  ...,  0.4520,  0.1061,  0.8218]],

         [[-0.4261,  0.6049, -0.5068,  ...,  0.0330, -0.2491,  0.4864],
          [-0.1152,  0.2407, -0.7706,  ...,  0.7526, -0.0034,  0.7984],
          [-0.5105,  0.5551,  0.0018,  ...,  0.4010, -0.1542,  0.3809],
          [-0.3376,  0.3639, -0.4353,  ...,  0.9462, -0.1956,  0.1959]]]])
DESIRED: (shape=torch.Size([1, 8, 4, 8]), dtype=torch.float32)
tensor([[[[ 0.3729, -0.0941, -0.2568,  ...,  0.0428,  0.4997,  0.8544],
          [ 0.1506, -0.3139,  0.1550,  ...,  0.0409,  0.7003,  0.6172],
          [ 0.2050, -0.4582,  0.3881,  ...,  0.2695,  0.5502,  0.5542],
          [ 0.1524, -0.1589,  0.2851,  ...,  0.4776,  0.5390,  0.1266]],

         [[-0.2500, -0.1221, -0.0242,  ...,  0.8425,  0.8043,  0.8163],
          [-0.0296,  0.2084,  0.3420,  ...,  0.8464,  0.3083,  0.6643],
          [-0.3854,  0.0493,  0.1979,  ...,  0.8409,  0.5504,  0.1409],
          [-0.0850, -0.0395,  0.4962,  ...,  0.2872,  0.6384,  0.7457]],

         [[-0.0701, -0.0315, -0.0304,  ...,  0.0423,  0.7705,  0.1772],
          [ 0.0178,  0.3503, -0.0751,  ...,  0.3744,  0.0328,  0.9389],
          [ 0.1236, -0.2037, -0.4254,  ...,  0.3362,  0.3481,  0.4684],
          [ 0.0690,  0.0423, -0.0392,  ...,  0.2926,  0.5140,  0.8791]],

         ...,

         [[-0.1164,  0.1668,  0.2311,  ...,  0.5125,  0.6966,  0.6701],
          [-0.0576, -0.0850, -0.4730,  ...,  1.2147,  0.2178,  0.9046],
          [-0.3747,  0.4196, -0.1154,  ...,  0.6817,  0.4134,  0.4332],
          [-0.3257, -0.1430, -0.0950,  ...,  0.9079,  0.4960,  1.1120]],

         [[ 0.1667, -0.0899, -0.1041,  ...,  0.2571,  0.4532,  0.1755],
          [ 0.2264, -0.1460,  0.7671,  ...,  0.1626,  0.2000,  0.4974],
          [ 0.2705, -0.3706,  0.4053,  ...,  0.1042,  0.4809,  0.3325],
          [ 0.3231, -0.3569,  0.0069,  ...,  0.1349,  0.4934,  0.3416]],

         [[ 0.0124,  0.4416, -0.1194,  ...,  0.3595,  0.6090,  0.7781],
          [-0.1860, -0.2550, -0.7004,  ...,  0.6214,  0.7629,  0.7163],
          [-0.3322,  0.3625,  0.0801,  ...,  0.5699,  0.6647,  0.4135],
          [-0.5970, -0.0641, -0.0422,  ...,  0.7719,  0.1947,  0.5314]]]])

2025-06-08 11:43:11.860730 GPU 5 64407 test begin: paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([1, 8, 4, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), None, Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=False, )
outputs format not support
[accuracy error] paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([1, 8, 4, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), None, Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=False, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 125 / 256 (48.8%)
Greatest absolute difference: 0.9862030744552612 at index (0, 1, 1, 7) (up to 0.01 allowed)
Greatest relative difference: 5.37896728515625 at index (0, 7, 1, 6) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 8, 4, 8]), dtype=torch.float32)
tensor([[[[-0.4881,  0.0292,  0.4923,  ...,  0.9697,  0.7137,  0.8271],
          [ 0.1661, -0.4303,  0.0427,  ...,  0.4617,  0.3875,  0.9027],
          [-0.3060, -0.5280, -0.0085,  ...,  0.7444,  0.1744,  1.0347],
          [-0.4638,  0.0851,  0.4339,  ...,  0.7592,  0.6112,  0.2428]],

         [[ 0.3238,  0.3397, -0.1382,  ...,  0.3648,  0.7352,  1.6907],
          [-0.0912,  0.1262,  0.0813,  ...,  0.3350,  1.0597,  1.4796],
          [ 0.4656, -0.4615, -0.5146,  ...,  0.2232,  0.3865,  1.1705],
          [ 0.4520,  0.4864,  0.2216,  ...,  0.3435,  0.8009,  1.4021]],

         [[-0.0687, -0.6025,  0.2580,  ...,  0.9326,  0.9359,  0.1721],
          [ 0.0906, -0.0937,  0.1763,  ...,  0.1598,  1.0454,  0.6210],
          [ 0.2370, -0.2031,  0.0484,  ...,  0.7163,  0.3794,  0.4956],
          [-0.2109, -0.1604,  0.2020,  ...,  0.3348,  0.4168,  0.8354]],

         ...,

         [[-0.0663, -0.0078,  0.0926,  ...,  0.3398,  0.5775,  0.2870],
          [ 0.0647, -0.5024,  0.0244,  ...,  0.4461,  0.4744,  0.2741],
          [-0.2507, -0.2623,  0.3470,  ...,  0.3325,  0.4278,  0.1246],
          [-0.1248, -0.1268,  0.0622,  ...,  0.5330,  0.3379,  0.1500]],

         [[-0.0729,  0.5369, -0.0207,  ...,  0.2666,  0.1625,  0.2834],
          [ 0.1357,  0.2819,  0.3073,  ...,  0.1598,  0.1281,  0.3035],
          [ 0.0379,  0.7402,  0.4444,  ...,  0.5479,  0.5015,  0.8183],
          [-0.0073,  0.1927, -0.0338,  ...,  0.4654,  0.3554,  0.0759]],

         [[-0.0240,  0.0937, -0.0998,  ...,  0.5212,  0.6575,  0.0957],
          [-0.1160, -0.0552, -0.1365,  ...,  0.1880,  0.3168,  0.2804],
          [ 0.0936,  0.0510, -0.0295,  ...,  0.5907,  0.4941,  0.4679],
          [ 0.4148, -0.2799, -0.0171,  ...,  0.8786,  0.0806,  0.1392]]]])
DESIRED: (shape=torch.Size([1, 8, 4, 8]), dtype=torch.float32)
tensor([[[[-0.4881,  0.0292,  0.4923,  ...,  1.7460,  0.2154,  0.5925],
          [ 0.1661, -0.4303,  0.0427,  ...,  0.6199,  0.4736,  0.6623],
          [-0.3060, -0.5280, -0.0085,  ...,  1.0782,  0.2573,  0.7644],
          [-0.4638,  0.0851,  0.4339,  ...,  1.3967,  0.1650,  0.1609]],

         [[ 0.3238,  0.3397, -0.1382,  ...,  1.0229,  0.5468,  0.7520],
          [-0.0912,  0.1262,  0.0813,  ...,  0.9307,  0.7274,  0.4934],
          [ 0.4656, -0.4615, -0.5146,  ...,  0.5951,  0.3832,  0.6669],
          [ 0.4520,  0.4864,  0.2216,  ...,  0.9708,  0.5150,  0.7127]],

         [[-0.0687, -0.6025,  0.2580,  ...,  0.5124,  1.0245,  0.0678],
          [ 0.0906, -0.0937,  0.1763,  ...,  0.0979,  1.1178,  0.4451],
          [ 0.2370, -0.2031,  0.0484,  ...,  0.6701,  0.4020,  0.3674],
          [-0.2109, -0.1604,  0.2020,  ...,  0.2435,  0.4769,  0.4107]],

         ...,

         [[-0.0663, -0.0078,  0.0926,  ...,  0.3625,  0.5608,  0.2271],
          [ 0.0647, -0.5024,  0.0244,  ...,  0.1681,  0.5218,  0.3366],
          [-0.2507, -0.2623,  0.3470,  ...,  0.1954,  0.0857,  0.1032],
          [-0.1248, -0.1268,  0.0622,  ...,  0.4968,  0.3186,  0.1915]],

         [[-0.0729,  0.5369, -0.0207,  ...,  0.2246,  0.2511,  0.2023],
          [ 0.1357,  0.2819,  0.3073,  ...,  0.1362,  0.1643,  0.1887],
          [ 0.0379,  0.7402,  0.4444,  ...,  0.4758,  0.7220,  0.5023],
          [-0.0073,  0.1927, -0.0338,  ...,  0.4215,  0.5479,  0.0412]],

         [[-0.0240,  0.0937, -0.0998,  ...,  0.4495,  0.1265,  0.1890],
          [-0.1160, -0.0552, -0.1365,  ...,  0.1017,  0.0497,  0.3992],
          [ 0.0936,  0.0510, -0.0295,  ...,  0.4720,  0.1008,  0.8063],
          [ 0.4148, -0.2799, -0.0171,  ...,  0.4600,  0.0149,  0.2568]]]])

2025-06-08 11:43:12.026660 GPU 5 64401 test begin: paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([1, 8, 4, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), None, Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=False, )
outputs format not support
[accuracy error] paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([1, 8, 4, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), None, Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=False, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 246 / 256 (96.1%)
Greatest absolute difference: 1.4637587070465088 at index (0, 4, 0, 3) (up to 0.01 allowed)
Greatest relative difference: 118.22679138183594 at index (0, 6, 3, 2) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 8, 4, 8]), dtype=torch.float32)
tensor([[[[-0.6775,  0.3806,  0.2014,  ...,  0.4543,  0.7007,  1.0248],
          [-0.3155,  0.1204,  0.3228,  ...,  0.3834,  0.1837,  0.5377],
          [-0.4040,  0.1530,  0.1608,  ...,  0.3933,  0.1045,  0.3146],
          [-0.8057,  0.4109,  0.6393,  ...,  0.5203,  0.6627,  1.1256]],

         [[-0.2425,  0.4409, -0.2410,  ...,  0.2377,  0.0188,  0.4296],
          [-0.1463,  0.0453,  0.4834,  ...,  0.3866,  0.8216,  0.9856],
          [-0.4419,  0.1718,  0.0044,  ...,  0.2744,  0.7593,  0.5940],
          [-0.4108,  0.2355, -0.4990,  ...,  0.5383,  0.4334,  0.3283]],

         [[ 0.8109,  1.0919,  0.3098,  ...,  0.8562, -0.0142,  0.5855],
          [ 0.4967,  0.5238,  0.4439,  ...,  0.5149,  0.2919,  0.2876],
          [ 0.1720,  0.4283,  0.2792,  ...,  0.6287, -0.3283,  0.6210],
          [ 0.1962,  0.2084,  0.1797,  ...,  0.9421, -0.2199,  0.7836]],

         ...,

         [[ 0.2212,  0.2398,  0.5239,  ...,  1.5422,  0.1389,  0.5287],
          [ 0.2394,  0.2271,  0.6443,  ...,  0.3001,  0.3077,  0.4628],
          [-0.0090,  0.1698,  0.3348,  ...,  0.2378,  0.4997,  0.1889],
          [ 0.4592,  0.4263, -0.1684,  ...,  0.4235,  0.1675,  0.7345]],

         [[ 0.6007,  0.4534,  0.0016,  ...,  0.5358, -0.0361,  0.3178],
          [ 0.4062,  0.2804, -0.3341,  ...,  0.4781, -0.0225,  0.3488],
          [ 0.1088,  0.2446, -0.0315,  ...,  0.5622, -0.0187,  0.7654],
          [ 0.2949,  0.3194, -0.7874,  ...,  0.2919, -0.0269,  0.3827]],

         [[ 0.3214,  0.3453, -0.2329,  ...,  0.2358,  0.2160,  0.3202],
          [ 0.3614,  0.8230,  0.0499,  ...,  0.5821, -0.0479,  0.1432],
          [ 0.4928,  0.5769, -0.5943,  ...,  0.9955,  0.4806,  0.3691],
          [ 0.7277,  1.2369, -0.5301,  ...,  0.3325,  0.2526,  0.2458]]]])
DESIRED: (shape=torch.Size([1, 8, 4, 8]), dtype=torch.float32)
tensor([[[[-2.8472e-01, -2.3490e-01,  2.4411e-02,  ...,  5.9758e-01,
            8.6312e-01,  2.5109e-01],
          [-7.1497e-01, -1.4530e-01,  3.3198e-01,  ...,  2.8049e-01,
            4.2562e-01,  2.5349e-01],
          [-2.7564e-01, -2.4868e-01,  3.3203e-01,  ...,  3.7906e-01,
            2.9740e-01,  2.8574e-01],
          [-5.9482e-01, -1.9708e-01,  3.6887e-01,  ...,  6.7732e-01,
            9.8978e-01,  2.3490e-01]],

         [[-1.0375e-01, -8.1454e-02,  1.2009e-01,  ...,  2.3027e-01,
            2.2459e-01,  2.1163e-01],
          [-2.7781e-01, -5.6988e-02, -4.8059e-03,  ...,  1.3518e-01,
            1.1420e+00,  1.1475e-01],
          [-1.0896e-01, -1.1383e-01, -1.5649e-01,  ...,  3.7756e-01,
            8.5521e-01,  1.0830e-01],
          [-3.1653e-01, -1.4685e-01, -2.1321e-01,  ...,  3.7624e-01,
            3.8849e-01,  1.6648e-01]],

         [[ 8.0355e-01, -1.7257e-01, -2.2420e-01,  ...,  8.6706e-01,
            9.1994e-01,  4.4276e-01],
          [ 4.7049e-01, -1.8407e-01,  4.1582e-02,  ...,  1.7846e-01,
            1.5640e+00,  1.7008e-01],
          [ 1.7705e-01, -1.5824e-01,  6.9701e-01,  ...,  7.4886e-01,
            9.6950e-01,  9.0532e-01],
          [ 1.6128e-01, -6.2009e-01,  2.4822e-01,  ...,  2.8294e-01,
            1.1726e+00,  9.4205e-01]],

         ...,

         [[-6.0187e-03, -1.4861e-01,  1.8520e-01,  ...,  4.3318e-01,
            1.1268e+00,  4.0104e-01],
          [ 2.8589e-01,  4.2482e-02,  3.0667e-01,  ...,  1.5830e-01,
            1.3750e+00,  4.1511e-01],
          [ 9.1555e-04,  1.2433e-01,  2.8740e-01,  ...,  1.0518e-01,
            1.2420e+00,  4.7424e-01],
          [ 4.3504e-01,  1.8760e-01, -4.9650e-01,  ...,  1.5314e-01,
            9.3735e-01,  6.8727e-01]],

         [[ 5.8218e-01, -1.9713e-01,  1.3882e-01,  ...,  1.8784e-01,
            3.9039e-01,  7.5198e-01],
          [ 3.8870e-01, -3.2698e-01,  8.3948e-02,  ...,  1.3313e-01,
            5.9506e-01,  7.6466e-01],
          [ 1.2061e-01, -1.2802e-01, -1.8392e-01,  ...,  4.8182e-01,
            9.4164e-01,  9.2466e-01],
          [ 3.0104e-01,  7.3476e-02, -6.6045e-03,  ...,  2.7433e-01,
            3.4244e-01,  9.9465e-01]],

         [[ 3.1490e-01, -1.6839e-01, -4.3947e-01,  ...,  1.5863e-01,
            5.1036e-01,  1.0489e+00],
          [ 3.7921e-01, -8.4080e-02, -9.1259e-03,  ...,  9.2988e-01,
            7.2577e-01,  8.6850e-01],
          [ 4.6346e-01, -6.7965e-01, -7.2008e-01,  ...,  6.6986e-01,
            2.1351e-01,  6.9761e-01],
          [ 7.5468e-01,  1.4463e-01, -3.3422e-01,  ...,  8.1542e-01,
            6.5603e-01,  8.5730e-01]]]])

2025-06-08 11:43:12.183192 GPU 5 64405 test begin: paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([1, 8, 4, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), None, Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([1, 8],"int64"), use_neox_rotary_style=True, time_major=False, )
outputs format not support
[accuracy error] paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([1, 8, 4, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), None, Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([1, 8],"int64"), use_neox_rotary_style=True, time_major=False, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 237 / 256 (92.6%)
Greatest absolute difference: 1.589961290359497 at index (0, 5, 2, 4) (up to 0.01 allowed)
Greatest relative difference: 559.1242065429688 at index (0, 5, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 8, 4, 8]), dtype=torch.float32)
tensor([[[[ 0.6786,  0.8081,  0.8539,  ...,  0.9488,  0.0510,  0.3311],
          [ 0.3264,  0.4236,  0.6817,  ...,  0.4098,  0.2489,  0.5843],
          [ 0.5950,  0.9672,  0.3698,  ...,  0.4942,  0.5872,  0.4452],
          [ 0.2555,  0.9096,  0.3839,  ...,  0.1904,  0.6368,  0.4560]],

         [[ 0.0366,  0.2090, -0.0073,  ...,  0.4946, -0.1246,  0.1013],
          [-0.1115,  0.0874, -0.3343,  ...,  0.1865, -0.5207,  0.2512],
          [-0.0717,  0.0598, -0.0506,  ...,  0.6942, -0.3046,  0.1450],
          [-0.0982,  0.0417, -0.1239,  ...,  0.4034, -0.3612,  0.2181]],

         [[ 0.0846,  0.8152,  0.3129,  ...,  0.6936, -0.7682,  0.8720],
          [ 0.0709,  1.2667,  0.3017,  ...,  0.6560,  0.0341,  0.2753],
          [-0.0334,  1.3384,  0.1399,  ...,  0.9308, -0.1535,  0.8953],
          [-0.5057,  0.6396,  0.5277,  ...,  0.4676, -0.5699,  0.4967]],

         ...,

         [[-0.1418,  0.2845, -0.2874,  ...,  0.3207,  0.0298,  0.6000],
          [ 0.6149,  0.9377, -0.1395,  ...,  0.2608,  0.0822,  0.3462],
          [ 0.1067,  1.3981,  0.0978,  ...,  0.6345,  0.0463,  0.4765],
          [-0.1155,  0.9793,  0.2877,  ...,  0.2069,  0.1922,  0.4976]],

         [[-0.5638,  0.3310,  0.5283,  ...,  0.8491, -0.4347,  0.6097],
          [-0.1380,  0.3979,  0.0604,  ...,  1.0560, -0.3963,  0.7724],
          [ 0.2657,  0.2318,  0.4262,  ...,  0.2944, -0.2702,  0.2051],
          [-0.3588,  0.3408,  0.1324,  ...,  1.0655, -0.3271,  0.8893]],

         [[ 0.0393,  0.0922, -0.1392,  ...,  0.0712, -0.2980,  1.0040],
          [ 0.1389,  0.3873, -0.2561,  ...,  0.1281,  0.0675,  1.2800],
          [-0.3672,  0.0686, -0.2919,  ...,  0.1511,  0.5385,  0.3713],
          [-0.2734,  0.2753, -0.1929,  ...,  0.0718, -0.3814,  0.8265]]]])
DESIRED: (shape=torch.Size([1, 8, 4, 8]), dtype=torch.float32)
tensor([[[[ 6.2449e-01, -3.8912e-01,  8.5569e-01,  ...,  7.7412e-01,
            1.4622e-01,  2.8703e-01],
          [ 3.0377e-01, -7.0307e-03,  6.8385e-01,  ...,  2.7461e-01,
            3.9198e-01,  4.4203e-01],
          [ 6.1487e-01, -1.3821e-02,  3.6934e-01,  ...,  8.5287e-01,
            6.4310e-01,  1.8572e-01],
          [ 3.2762e-01,  4.5785e-01,  3.8300e-01,  ...,  8.4312e-01,
            6.8936e-01,  1.6675e-01]],

         [[ 8.5854e-02, -6.7827e-01, -3.4139e-01,  ...,  3.8725e-01,
            5.1255e-01,  3.7120e-01],
          [-9.9542e-02, -6.8918e-02, -2.5125e-01,  ...,  3.7634e-01,
            7.4133e-01,  1.1000e+00],
          [-2.7768e-01, -7.3099e-01, -2.0411e-01,  ...,  3.0371e-01,
            2.7060e-01,  5.2557e-01],
          [-2.3089e-01, -3.2235e-01, -5.2734e-01,  ...,  2.8483e-01,
            7.5801e-01,  8.3439e-01]],

         [[-1.7840e-01,  4.4366e-01,  3.2814e-01,  ...,  4.2746e-01,
            2.0616e-01,  8.9011e-01],
          [ 3.4712e-01,  2.6633e-01,  2.8984e-01,  ...,  1.1624e+00,
            2.7371e-01,  2.1657e-01],
          [ 1.8521e-01,  1.4782e-01,  1.0700e-01,  ...,  1.4681e+00,
            6.0492e-01,  7.4651e-01],
          [-2.2528e-01,  2.9969e-01,  5.2996e-01,  ...,  9.1621e-01,
            7.4035e-02,  5.1134e-01]],

         ...,

         [[-2.5322e-04,  1.5255e-02, -2.6324e-02,  ...,  5.4499e-01,
            5.1565e-01,  1.2783e+00],
          [ 7.8084e-01,  1.3289e-01,  1.4708e-01,  ...,  5.1147e-01,
            8.0911e-01,  8.6587e-01],
          [ 2.2718e-01,  4.4006e-01,  7.7889e-02,  ...,  1.2401e+00,
            6.5785e-01,  7.1449e-01],
          [ 2.9270e-01,  5.5440e-01, -9.8581e-02,  ...,  6.7893e-01,
            9.2443e-01,  1.9212e-01]],

         [[-5.6920e-01,  3.2870e-01,  4.6499e-01,  ...,  4.4322e-01,
            5.0959e-01,  1.7038e-01],
          [-1.8551e-01,  3.9330e-01, -6.8092e-02,  ...,  5.3155e-01,
            4.8394e-01,  1.0920e-01],
          [ 3.7510e-01,  2.2938e-01,  5.6693e-01,  ...,  3.0787e-02,
            2.6583e-01,  3.9231e-01],
          [-6.7585e-01,  3.3843e-01, -3.2733e-02,  ...,  3.0244e-01,
            6.0178e-01,  8.3628e-02]],

         [[-2.4339e-01, -4.2208e-02,  1.4366e-01,  ...,  4.7212e-02,
            6.4059e-01,  3.2218e-01],
          [ 1.0276e-01, -1.6239e-01, -3.7439e-01,  ...,  2.0831e-01,
            6.6596e-01,  2.6523e-01],
          [-2.4159e-01, -2.0619e-01, -1.8966e-01,  ...,  3.0520e-01,
            5.8321e-01,  2.2543e-01],
          [-9.9879e-03, -6.8529e-03,  3.5592e-02,  ...,  3.2150e-01,
            3.2129e-01,  2.4069e-01]]]])

2025-06-08 11:43:12.265475 GPU 5 64404 test begin: paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([1, 8, 4, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=False, )
[accuracy error] paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([1, 8, 4, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=False, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 120 / 256 (46.9%)
Greatest absolute difference: 0.9245478510856628 at index (0, 1, 1, 4) (up to 0.01 allowed)
Greatest relative difference: 20.340593338012695 at index (0, 0, 1, 5) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 8, 4, 8]), dtype=torch.float32)
tensor([[[[-1.1872e-01,  1.2364e-03,  7.4441e-03,  ...,  5.5597e-01,
            1.1967e-01,  4.3217e-01],
          [ 2.5820e-01,  4.0225e-03,  3.8120e-01,  ...,  4.6073e-01,
            7.9427e-01,  2.8929e-01],
          [ 1.4182e-01, -1.8051e-03,  1.8505e-01,  ...,  1.4396e-01,
            7.9941e-01,  1.7879e-01],
          [ 3.8309e-02, -8.4858e-03,  2.8300e-01,  ...,  2.1366e-01,
            2.3597e-01,  1.8651e-01]],

         [[ 1.0079e-01, -8.0831e-01,  1.2661e-01,  ...,  1.2816e+00,
            2.1843e-01,  2.0617e-01],
          [ 3.3131e-01, -5.1304e-01,  5.2674e-02,  ...,  1.2516e+00,
            1.1377e-01,  4.5290e-01],
          [ 2.3992e-01, -7.8486e-01,  1.0696e-01,  ...,  1.1078e+00,
            1.9740e-01,  4.7996e-01],
          [ 3.8184e-01, -7.2206e-02, -7.4254e-03,  ...,  7.8185e-01,
            1.8488e-02,  3.9124e-01]],

         [[-6.1686e-01, -2.9298e-01, -2.1429e-01,  ...,  4.6644e-01,
            4.3270e-01,  3.4040e-01],
          [ 3.3061e-01, -4.3691e-01, -2.3487e-01,  ...,  5.9867e-01,
            5.5890e-01,  3.2763e-01],
          [-5.4484e-01, -2.1963e-01, -4.0494e-01,  ...,  4.7955e-01,
            4.6573e-01,  4.1634e-01],
          [ 6.0238e-01, -1.4146e-01, -3.9771e-02,  ...,  3.1534e-01,
            2.9902e-01,  2.0467e-01]],

         ...,

         [[ 2.1376e-02,  9.3720e-02, -4.7200e-02,  ...,  4.0672e-01,
            6.0267e-02,  8.0321e-01],
          [ 4.8107e-01,  2.1451e-01, -5.5983e-02,  ...,  5.1190e-01,
            1.4095e-01,  9.7573e-01],
          [ 1.6544e-01,  7.4704e-02,  4.8437e-02,  ...,  7.7390e-01,
            5.2520e-01,  1.5795e-01],
          [ 2.8167e-01, -2.2995e-01,  5.2852e-01,  ...,  7.0119e-01,
            4.8314e-01,  8.2849e-01]],

         [[ 6.4422e-01, -3.7280e-01,  3.3033e-01,  ...,  9.2595e-01,
            4.5763e-01,  2.9840e-01],
          [ 1.3329e-01, -5.2919e-03,  1.6423e-01,  ...,  7.7782e-01,
            3.8129e-01,  2.9681e-01],
          [ 4.6401e-01,  1.3999e-01,  1.1722e-01,  ...,  1.2411e+00,
            8.3751e-01,  1.1648e-01],
          [ 3.3239e-01,  8.5877e-02,  5.7904e-03,  ...,  1.2453e+00,
            6.8714e-01,  3.5415e-01]],

         [[ 1.9451e-01,  7.7484e-01,  7.6511e-02,  ...,  1.0617e+00,
            7.4028e-01,  2.9422e-01],
          [ 1.5756e-01,  5.1074e-02, -8.5918e-02,  ...,  3.3069e-01,
            1.0009e+00,  3.5329e-01],
          [-8.2053e-03,  9.9365e-02, -8.6513e-02,  ...,  5.1663e-01,
            5.6858e-01,  3.2004e-01],
          [ 7.7749e-02,  1.4988e-02,  1.7629e-01,  ...,  4.8270e-01,
            5.8646e-01,  4.7653e-01]]]])
DESIRED: (shape=torch.Size([1, 8, 4, 8]), dtype=torch.float32)
tensor([[[[-1.1872e-01,  1.2364e-03,  7.4441e-03,  ...,  2.7619e-02,
            2.2651e-01,  8.3761e-01],
          [ 2.5820e-01,  4.0225e-03,  3.8120e-01,  ...,  2.1589e-02,
            1.2541e+00,  7.4051e-01],
          [ 1.4182e-01, -1.8051e-03,  1.8505e-01,  ...,  8.0726e-03,
            1.4115e+00,  4.4941e-01],
          [ 3.8309e-02, -8.4858e-03,  2.8300e-01,  ...,  1.4496e-02,
            2.4508e-01,  3.9991e-01]],

         [[ 1.0079e-01, -8.0831e-01,  1.2661e-01,  ...,  7.6901e-01,
            6.0090e-02,  2.5289e-01],
          [ 3.3131e-01, -5.1304e-01,  5.2674e-02,  ...,  9.2078e-01,
            9.1132e-02,  4.1952e-01],
          [ 2.3992e-01, -7.8486e-01,  1.0696e-01,  ...,  6.1177e-01,
            8.7965e-02,  5.0585e-01],
          [ 3.8184e-01, -7.2206e-02, -7.4254e-03,  ...,  7.2772e-01,
            8.6887e-02,  4.2652e-01]],

         [[-6.1686e-01, -2.9298e-01, -2.1429e-01,  ...,  5.1069e-01,
            3.1538e-01,  8.1264e-01],
          [ 3.3061e-01, -4.3691e-01, -2.3487e-01,  ...,  5.6728e-01,
            4.4468e-01,  7.8737e-02],
          [-5.4484e-01, -2.1963e-01, -4.0494e-01,  ...,  6.4322e-01,
            1.8422e-01,  7.0369e-01],
          [ 6.0238e-01, -1.4146e-01, -3.9771e-02,  ...,  4.2726e-01,
            3.1442e-01,  1.0910e-01]],

         ...,

         [[ 2.1376e-02,  9.3720e-02, -4.7200e-02,  ...,  2.2257e-01,
            1.2288e-01,  1.4957e-01],
          [ 4.8107e-01,  2.1451e-01, -5.5983e-02,  ...,  3.0518e-01,
            2.5640e-01,  2.4094e-01],
          [ 1.6544e-01,  7.4704e-02,  4.8437e-02,  ...,  3.9662e-01,
            8.0899e-01,  3.1144e-02],
          [ 2.8167e-01, -2.2995e-01,  5.2852e-01,  ...,  2.8215e-01,
            4.6855e-01,  2.1932e-01]],

         [[ 6.4422e-01, -3.7280e-01,  3.3033e-01,  ...,  7.9181e-01,
            4.2314e-01,  7.0801e-01],
          [ 1.3329e-01, -5.2919e-03,  1.6423e-01,  ...,  7.3970e-01,
            3.4236e-01,  7.0697e-01],
          [ 4.6401e-01,  1.3999e-01,  1.1722e-01,  ...,  1.2163e+00,
            7.2967e-01,  2.4826e-01],
          [ 3.3239e-01,  8.5877e-02,  5.7904e-03,  ...,  1.2071e+00,
            5.9036e-01,  8.3543e-01]],

         [[ 1.9451e-01,  7.7484e-01,  7.6511e-02,  ...,  9.1548e-01,
            3.0222e-01,  2.1367e-01],
          [ 1.5756e-01,  5.1074e-02, -8.5918e-02,  ...,  5.6719e-01,
            4.2180e-01,  2.5404e-01],
          [-8.2053e-03,  9.9365e-02, -8.6513e-02,  ...,  8.5711e-01,
            2.4225e-01,  2.3321e-01],
          [ 7.7749e-02,  1.4988e-02,  1.7629e-01,  ...,  9.1623e-01,
            2.3136e-01,  3.5317e-01]]]])

2025-06-08 11:43:20.147133 GPU 5 64403 test begin: paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([1, 8, 4, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=False, )
[accuracy error] paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([1, 8, 4, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=False, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 246 / 256 (96.1%)
Greatest absolute difference: 1.866660714149475 at index (0, 2, 1, 3) (up to 0.01 allowed)
Greatest relative difference: 65.2126235961914 at index (0, 7, 1, 1) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 8, 4, 8]), dtype=torch.float32)
tensor([[[[-0.1333,  0.4658, -0.0692,  ...,  0.7515, -0.2612,  0.3161],
          [-0.1582,  0.1236,  0.4974,  ...,  1.2490, -0.3170,  0.7854],
          [ 0.0309,  0.1123,  0.6669,  ...,  0.6129, -0.4889,  1.0958],
          [-0.2347,  0.5073,  0.3207,  ...,  0.6575, -0.7402,  0.8124]],

         [[-0.1528,  0.3360, -0.2663,  ...,  0.9516, -0.1410,  0.6218],
          [ 0.4687,  1.2083, -0.0742,  ...,  1.1087, -0.1121,  0.7211],
          [-0.0439,  0.3889, -0.1797,  ...,  0.2231, -0.0516,  0.5015],
          [ 0.4495,  0.8054, -0.0891,  ...,  0.5447,  0.0736,  0.7081]],

         [[ 0.2283,  0.6041,  0.2079,  ...,  0.1429,  0.0676,  0.4183],
          [ 0.8095,  0.9084,  0.4138,  ...,  0.3750, -0.1442,  1.0251],
          [ 0.3090,  0.4553,  0.2009,  ...,  0.9109, -0.0807,  0.2669],
          [-0.0996,  0.1845,  0.3674,  ...,  0.5336, -0.1858,  0.6370]],

         ...,

         [[ 0.0561,  0.8077, -0.0358,  ...,  0.5326, -0.4577,  0.6873],
          [ 0.0357,  0.7431,  0.2190,  ...,  0.3180, -0.4832,  0.3762],
          [ 0.0234,  0.9031,  0.0226,  ...,  0.1374, -0.2489,  0.2536],
          [ 0.0209,  0.7822,  0.1945,  ...,  0.6447, -0.1351,  0.2510]],

         [[-0.0441,  0.6337, -0.0397,  ...,  0.2182, -0.6882,  0.5205],
          [ 0.0218,  0.2460,  0.5303,  ...,  0.7501, -0.5976,  0.4862],
          [-0.1174,  0.9472,  0.1557,  ...,  0.2414,  0.2065,  0.1296],
          [-0.1419,  0.4700,  0.1994,  ...,  0.4852, -0.6350,  0.4393]],

         [[-0.2081,  0.3666,  0.0634,  ...,  0.8844,  0.1834,  0.0477],
          [-0.6259,  1.2346, -0.0043,  ...,  0.2941,  0.1292,  0.0454],
          [-0.2045,  0.8877, -0.0083,  ...,  0.7845, -0.1640,  0.1001],
          [-0.3469,  0.2500,  0.0659,  ...,  0.8781, -0.0920,  0.1168]]]])
DESIRED: (shape=torch.Size([1, 8, 4, 8]), dtype=torch.float32)
tensor([[[[ 0.0659,  0.2038,  0.2238,  ...,  0.2916,  0.1888,  0.8959],
          [-0.4713, -0.0172,  0.3906,  ...,  0.2985,  0.9551,  0.6815],
          [ 0.1076, -0.0820,  0.4421,  ...,  0.2862,  1.2083,  0.7866],
          [ 0.1553,  0.2418,  0.5141,  ...,  0.3378,  0.3418,  1.1760]],

         [[-0.0366, -0.5996, -0.1482,  ...,  1.0530,  0.0401,  0.2918],
          [ 0.6237, -0.4845, -0.1676,  ...,  1.3395,  0.2354,  0.1897],
          [ 0.0987,  0.0683, -0.1322,  ...,  0.6221,  0.1543,  0.1893],
          [ 0.5707, -0.4264, -0.2873,  ...,  0.7307,  0.0856,  0.0701]],

         [[ 0.3317,  0.1180,  0.2083,  ...,  0.6831,  0.2390,  0.6604],
          [ 0.6963, -0.1801,  0.4107,  ...,  0.1987,  0.3954,  0.9323],
          [ 0.1543, -0.8202,  0.2036,  ...,  0.5255,  0.0778,  0.9340],
          [-0.0595, -0.4759,  0.3678,  ...,  0.7122,  0.1884,  1.0552]],

         ...,

         [[ 0.0393, -0.2875, -0.3358,  ...,  0.3270,  0.3588,  0.3036],
          [ 0.0592, -0.4495,  0.3010,  ...,  0.5722,  0.3517,  0.3174],
          [ 0.0684, -0.0513,  0.1542,  ...,  0.9375,  0.2958,  0.2092],
          [ 0.0174, -0.1565,  0.2336,  ...,  0.8175,  0.5268,  0.1423]],

         [[-0.1897,  0.1625, -0.0236,  ...,  0.2322,  0.2250,  0.5654],
          [-0.3358, -0.4039,  0.5457,  ...,  0.5000,  0.4843,  0.5652],
          [-0.0482,  0.2529,  0.1280,  ...,  0.4838,  0.6895,  0.3787],
          [-0.1158, -0.0223,  0.3836,  ...,  0.6453,  0.2511,  0.7860]],

         [[-0.3886, -0.7888,  0.0667,  ...,  0.6246,  0.1437,  0.3468],
          [-0.6591,  0.0186, -0.0137,  ...,  0.8790,  0.1075,  0.1020],
          [-0.5480, -0.6888,  0.0032,  ...,  0.5799,  0.0558,  0.3891],
          [-0.3830, -0.7130,  0.0639,  ...,  0.7879,  0.1144,  0.2892]]]])

2025-06-08 11:43:20.234852 GPU 5 64401 test begin: paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([1, 8, 4, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([1, 8],"int64"), use_neox_rotary_style=True, time_major=False, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([1, 8, 4, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([1, 8],"int64"), use_neox_rotary_style=True, time_major=False, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 242 / 256 (94.5%)
Greatest absolute difference: 1.5463649034500122 at index (0, 0, 1, 4) (up to 0.01 allowed)
Greatest relative difference: 187.17079162597656 at index (0, 2, 0, 1) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 8, 4, 8]), dtype=torch.float32)
tensor([[[[-4.0254e-01,  9.6227e-01,  4.3721e-01,  ...,  5.4383e-01,
            1.8396e-01,  4.9579e-01],
          [-5.0883e-02,  1.1547e+00,  3.7139e-01,  ...,  9.0182e-01,
            3.7728e-02,  8.7873e-01],
          [-1.6409e-01,  9.3623e-01,  3.7225e-01,  ...,  2.7126e-01,
            2.2251e-01,  6.6357e-01],
          [ 1.3072e-01,  5.3614e-01,  2.9303e-01,  ...,  1.7503e-01,
            3.1153e-02,  1.6672e-01]],

         [[-2.6035e-01,  2.6213e-01, -8.5128e-02,  ...,  4.3609e-01,
           -2.2085e-01,  6.5543e-01],
          [-6.3449e-01,  7.3569e-01,  8.5327e-02,  ...,  4.5256e-01,
           -1.6718e-01,  7.6376e-01],
          [-3.4556e-01,  4.6089e-01, -1.2953e-01,  ...,  2.9923e-01,
            1.4213e-01,  2.9983e-01],
          [-2.7132e-03,  1.3915e-01, -1.6510e-01,  ...,  2.6948e-01,
            6.8513e-02,  6.2270e-01]],

         [[-3.9539e-01,  7.3167e-01,  6.0264e-03,  ...,  1.2927e+00,
           -3.0187e-02,  3.3777e-01],
          [-1.4971e-01,  6.2712e-01, -1.3409e-02,  ...,  1.1309e+00,
           -7.5115e-04,  4.0805e-01],
          [-5.3597e-01,  7.2526e-01, -1.7806e-03,  ...,  9.6799e-01,
           -5.7847e-02,  4.7501e-01],
          [ 5.2267e-01,  5.0440e-01,  1.5416e-02,  ...,  2.5947e-01,
           -6.4388e-02,  3.5041e-01]],

         ...,

         [[ 2.0861e-01,  3.4923e-01,  5.0379e-02,  ...,  8.8905e-01,
            8.7580e-02,  4.8196e-01],
          [-3.1678e-01,  8.2397e-01,  5.4661e-03,  ...,  6.0806e-01,
            8.1734e-01,  5.0603e-01],
          [ 2.6888e-01,  4.6689e-01,  6.7991e-02,  ...,  8.9232e-01,
            1.5421e-01,  5.2427e-01],
          [-2.4113e-02,  7.2055e-01,  6.8399e-03,  ...,  6.9739e-01,
            4.5085e-01,  2.7748e-01]],

         [[-8.2961e-01,  7.1215e-01, -1.6107e-01,  ...,  3.3730e-01,
            3.3763e-01,  8.6738e-01],
          [-3.8998e-01,  5.5967e-01,  2.5058e-01,  ...,  2.5514e-01,
            7.7780e-01,  9.7255e-01],
          [-2.7953e-02,  5.5327e-01, -1.4898e-01,  ...,  1.0918e-01,
            3.2962e-01,  6.4689e-01],
          [-7.3918e-01,  5.3303e-01,  1.5845e-01,  ...,  2.9654e-01,
            5.3498e-01,  8.3849e-01]],

         [[-3.8563e-01,  2.7032e-01, -3.9000e-01,  ...,  7.8874e-01,
           -3.1613e-01,  2.3107e-01],
          [-1.9414e-02,  3.3149e-01,  1.0780e-03,  ...,  3.1641e-01,
           -2.4353e-01,  2.6005e-01],
          [-2.4566e-01,  2.4199e-01,  1.1044e-01,  ...,  2.4761e-01,
           -2.8047e-01,  1.2951e-01],
          [-1.0708e-01,  1.6016e-01,  1.5677e-01,  ...,  4.7013e-01,
           -3.2943e-01,  5.1525e-01]]]])
DESIRED: (shape=torch.Size([1, 8, 4, 8]), dtype=torch.float32)
tensor([[[[ 0.0772,  0.2316,  0.3153,  ...,  1.0798,  0.6729,  0.1665],
          [-0.1756, -0.0143,  0.4676,  ...,  1.1902,  0.5242,  0.3784],
          [ 0.2689,  0.3039,  0.2293,  ...,  0.6855,  0.7326,  0.2200],
          [ 0.1236,  0.0824,  0.3789,  ...,  0.2574,  0.3275,  0.2297]],

         [[-0.4840,  0.1528, -0.2627,  ...,  0.2762,  0.4314,  0.7895],
          [-0.2976,  0.4623, -0.4076,  ...,  0.4737,  0.4581,  0.6312],
          [-0.4039,  0.2889, -0.1944,  ...,  0.1906,  0.3859,  0.4740],
          [-0.3159, -0.0026, -0.0292,  ...,  0.1139,  1.0991,  1.2028]],

         [[-0.2024,  0.0039,  0.0028,  ...,  0.7727,  0.0319,  0.4341],
          [-0.0609, -0.0928, -0.0210,  ...,  0.6215,  0.0572,  0.3028],
          [-0.3572,  0.2917, -0.0022,  ...,  0.6321,  0.0276,  0.7228],
          [ 0.5137, -0.0858,  0.0184,  ...,  0.1190,  0.0118,  0.6751]],

         ...,

         [[-0.2750, -0.8444,  0.0490,  ...,  0.1410,  0.1010,  0.8764],
          [-0.1034, -0.1160,  0.0040,  ...,  0.8500,  0.1133,  0.2990],
          [-0.4520, -0.5289,  0.0656,  ...,  0.1416,  0.1110,  0.8269],
          [-0.2215, -0.2277,  0.0070,  ...,  0.5391,  0.0623,  0.2394]],

         [[-0.4187,  0.3007, -0.1103,  ...,  0.7048,  0.2265,  0.3997],
          [-0.3047,  0.1036,  0.1627,  ...,  0.3834,  0.6846,  0.3883],
          [-0.3136,  0.0264, -0.0377,  ...,  0.0593,  0.2468,  0.4466],
          [-0.2643,  0.2441,  0.0523,  ...,  0.6383,  0.4489,  0.2297]],

         [[-0.4784, -0.1236,  0.0950,  ...,  0.4832,  0.7354,  0.7662],
          [-0.1535, -0.4036, -0.1952,  ...,  0.0764,  0.3783,  0.3127],
          [-0.1186, -0.4628,  0.1149,  ...,  0.3234,  0.3648,  0.2386],
          [-0.2800, -0.2553, -0.3458,  ...,  0.1497,  1.1017,  0.5288]]]])

2025-06-08 11:43:20.432359 GPU 5 64406 test begin: paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 2, 16],"float32"), None, None, Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=False, )
outputs format not support
[accuracy error] paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 2, 16],"float32"), None, None, Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=False, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 248 / 512 (48.4%)
Greatest absolute difference: 1.4064258337020874 at index (0, 3, 0, 12) (up to 0.01 allowed)
Greatest relative difference: 16.59943389892578 at index (1, 6, 0, 12) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2, 8, 2, 16]), dtype=torch.float32)
tensor([[[[-0.1026, -0.1836,  0.0888,  ...,  1.2816,  0.4555,  0.6867],
          [-0.1037,  0.2897,  0.2077,  ...,  0.4030,  0.1155,  0.5052]],

         [[-0.0857, -0.2738, -0.4055,  ...,  0.8562,  0.2494,  0.7998],
          [ 0.6367, -0.1905,  0.4336,  ...,  1.3030,  0.4681,  0.8778]],

         [[ 0.5293,  0.1183, -0.8106,  ...,  0.4777,  0.2819,  0.0702],
          [-0.0287,  0.1785, -0.3557,  ...,  0.0623,  0.2228,  0.4520]],

         ...,

         [[ 0.0725,  0.1922,  0.0264,  ...,  0.2717,  0.4015,  0.3047],
          [ 0.5206, -0.3226,  0.1149,  ...,  0.0309,  0.8183,  0.0888]],

         [[-0.1219,  0.0127,  0.2262,  ...,  0.8703,  0.0625,  0.3500],
          [-0.3185, -0.3309,  0.4308,  ...,  0.3946,  0.5970,  1.3267]],

         [[ 0.2210,  0.1535, -0.1361,  ...,  0.5251,  0.4778,  0.6350],
          [ 0.5475, -0.2822, -0.1074,  ...,  0.1962,  0.1429,  0.5009]]],


        [[[-0.1960,  0.3924, -0.0542,  ...,  1.4072,  0.2585,  0.1652],
          [ 0.0440,  0.2882,  0.3588,  ...,  0.5512,  0.4553,  0.6217]],

         [[ 0.6955, -0.1090,  0.0025,  ...,  0.6885,  0.4108,  0.4774],
          [-0.3649, -0.0429, -0.0917,  ...,  0.4454,  0.2326,  0.6247]],

         [[-0.3278,  0.0429, -0.6431,  ...,  0.3050,  0.0701,  0.4049],
          [ 0.1789,  0.1915, -0.3861,  ...,  0.4925,  0.3329,  0.1187]],

         ...,

         [[ 0.3619, -0.1867,  0.1606,  ...,  0.0297,  0.2865,  0.5167],
          [ 0.2562,  0.0173, -0.0044,  ...,  0.1523,  0.9231,  0.6154]],

         [[-0.1768, -0.2231,  0.6938,  ...,  0.9437,  0.8479,  1.1217],
          [ 0.6075,  0.1191,  0.3425,  ...,  0.8114,  0.5127,  0.4105]],

         [[ 0.1102,  0.0632,  0.0044,  ...,  0.1720,  0.6310,  0.4750],
          [-0.1054, -0.6045, -0.0793,  ...,  0.3829,  0.8667,  0.5220]]]])
DESIRED: (shape=torch.Size([2, 8, 2, 16]), dtype=torch.float32)
tensor([[[[-0.1026, -0.1836,  0.0888,  ...,  1.0422,  0.6545,  0.8720],
          [-0.1037,  0.2897,  0.2077,  ...,  0.3823,  0.1012,  0.7632]],

         [[-0.0857, -0.2738, -0.4055,  ...,  0.4828,  0.7090,  0.8203],
          [ 0.6367, -0.1905,  0.4336,  ...,  0.7827,  1.1571,  0.9003]],

         [[ 0.5293,  0.1183, -0.8106,  ...,  0.8350,  0.4540,  0.2656],
          [-0.0287,  0.1785, -0.3557,  ...,  0.0992,  0.3220,  0.8123]],

         ...,

         [[ 0.0725,  0.1922,  0.0264,  ...,  0.3481,  0.2435,  0.4239],
          [ 0.5206, -0.3226,  0.1149,  ...,  0.0296,  0.4509,  0.0876]],

         [[-0.1219,  0.0127,  0.2262,  ...,  0.8100,  0.0038,  0.4703],
          [-0.3185, -0.3309,  0.4308,  ...,  0.3390,  0.3428,  0.8248]],

         [[ 0.2210,  0.1535, -0.1361,  ...,  0.7816,  0.3979,  0.8020],
          [ 0.5475, -0.2822, -0.1074,  ...,  0.1615,  0.1554,  0.4740]]],


        [[[-0.1960,  0.3924, -0.0542,  ...,  1.1334,  0.3677,  0.2661],
          [ 0.0440,  0.2882,  0.3588,  ...,  0.5129,  0.6492,  0.9392]],

         [[ 0.6955, -0.1090,  0.0025,  ...,  0.3784,  0.7241,  0.4896],
          [-0.3649, -0.0429, -0.0917,  ...,  0.1964,  0.7734,  0.6396]],

         [[-0.3278,  0.0429, -0.6431,  ...,  0.5172,  0.1330,  0.6099],
          [ 0.1789,  0.1915, -0.3861,  ...,  0.8862,  0.6556,  0.3672]],

         ...,

         [[ 0.3619, -0.1867,  0.1606,  ...,  0.0539,  0.1841,  0.3735],
          [ 0.2562,  0.0173, -0.0044,  ...,  0.2719,  0.5757,  0.4839]],

         [[-0.1768, -0.2231,  0.6938,  ...,  0.8900,  0.6621,  0.6099],
          [ 0.6075,  0.1191,  0.3425,  ...,  0.7739,  0.2828,  0.3097]],

         [[ 0.1102,  0.0632,  0.0044,  ...,  0.2013,  0.6143,  0.3194],
          [-0.1054, -0.6045, -0.0793,  ...,  0.5527,  0.7893,  0.5681]]]])

2025-06-08 11:43:20.623481 GPU 5 64407 test begin: paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 2, 16],"float32"), None, None, Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=False, )
outputs format not support
[accuracy error] paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 2, 16],"float32"), None, None, Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=False, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 497 / 512 (97.1%)
Greatest absolute difference: 1.708303451538086 at index (1, 5, 1, 3) (up to 0.01 allowed)
Greatest relative difference: 539.2920532226562 at index (0, 0, 0, 2) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2, 8, 2, 16]), dtype=torch.float32)
tensor([[[[ 0.4626,  0.6721, -0.1349,  ...,  0.3941,  0.3813,  0.2534],
          [ 0.2933,  0.4862, -0.5747,  ...,  1.1134,  0.3074,  0.6588]],

         [[ 0.4837,  0.7418, -0.0511,  ...,  1.1272,  0.2963,  0.1948],
          [ 0.1051,  0.2602,  0.2502,  ...,  1.2545, -0.0227,  0.4069]],

         [[ 0.1310,  0.6156,  0.4201,  ...,  0.0647,  0.1377,  0.5418],
          [ 0.1796,  0.8898,  0.2868,  ...,  0.2363,  0.9298,  0.7774]],

         ...,

         [[-0.0932,  0.3321,  0.2328,  ...,  0.8077, -0.4384,  0.5037],
          [ 0.2763,  0.4466,  0.4948,  ...,  0.5699,  0.3880,  0.4100]],

         [[-0.3860,  0.8835, -0.4642,  ...,  0.2638,  0.1217,  0.7778],
          [ 0.0506,  0.4905, -0.1465,  ...,  1.0228,  0.0682,  0.4278]],

         [[ 0.2581,  0.1580, -0.5919,  ...,  0.3373,  0.2143,  0.7052],
          [-0.2346,  0.1971, -0.2562,  ...,  0.1854,  0.0727,  0.7364]]],


        [[[-0.0545,  0.1742,  0.3822,  ...,  0.9888,  0.1372,  0.2466],
          [ 0.2940,  0.4408,  0.0084,  ...,  0.6672,  0.4841,  0.2942]],

         [[-0.1399,  0.3893, -0.4868,  ...,  1.1152,  0.2031,  0.1833],
          [ 0.0570,  0.9510,  0.0428,  ...,  0.9713, -0.1395,  0.6868]],

         [[-0.2472,  0.9865,  0.3452,  ...,  0.4908, -0.7672,  0.6400],
          [-0.2094,  0.9602, -0.0551,  ...,  0.2073,  0.7631,  0.7168]],

         ...,

         [[-0.2222,  0.1231,  0.5423,  ...,  0.9335,  0.2427,  0.1189],
          [-0.0910,  0.1093,  0.4533,  ...,  0.8441,  0.3510,  0.3999]],

         [[ 0.0794,  0.1432, -0.2690,  ...,  1.2186,  0.1389,  0.4976],
          [-0.0216,  0.1586, -0.2700,  ...,  1.0942, -0.0518,  0.6647]],

         [[-0.1315,  0.1477, -0.1174,  ...,  0.1587,  0.0023,  0.4823],
          [ 0.4063,  0.3334,  0.3022,  ...,  0.1242, -0.0555,  0.5558]]]])
DESIRED: (shape=torch.Size([2, 8, 2, 16]), dtype=torch.float32)
tensor([[[[ 4.2635e-01, -5.9921e-01, -2.4974e-04,  ...,  7.2648e-01,
            5.5221e-01,  3.8530e-02],
          [ 3.0096e-01, -6.2804e-01, -5.1558e-01,  ...,  8.3142e-01,
            3.9393e-01,  1.0275e-01]],

         [[ 4.2814e-01, -3.1193e-01,  1.4608e-01,  ...,  1.4412e-01,
            5.5516e-01,  2.6835e-03],
          [ 8.1029e-02, -3.7138e-01,  1.0640e-01,  ...,  2.7866e-01,
            4.4139e-01,  2.2795e-01]],

         [[-7.0933e-02,  3.2212e-01,  3.8612e-01,  ...,  8.8708e-02,
            1.1603e-01,  4.1361e-01],
          [ 1.5400e-01,  2.3195e-01,  2.6177e-01,  ...,  6.9759e-01,
            2.1930e-01,  6.1606e-02]],

         ...,

         [[-1.6287e-01,  6.9796e-02, -1.5378e-01,  ...,  3.4739e-01,
            7.1252e-01,  7.9374e-01],
          [ 2.0493e-01, -5.3125e-01,  5.1442e-01,  ...,  8.3221e-02,
            9.1817e-01,  5.3504e-01]],

         [[-2.8802e-01,  2.7680e-01, -4.1907e-01,  ...,  3.7219e-01,
            1.2761e+00,  5.3044e-01],
          [ 2.2794e-01,  1.7754e-01, -1.4696e-01,  ...,  1.4747e+00,
            6.6245e-01,  9.0572e-01]],

         [[ 4.2825e-01, -1.7686e-01, -5.2371e-01,  ...,  3.6622e-01,
            8.0207e-01,  1.7101e-01],
          [-3.8596e-02,  9.8182e-02,  2.9556e-01,  ...,  1.1875e-01,
            5.2183e-01,  4.1964e-01]]],


        [[[-1.2872e-01, -1.6629e-02,  3.5599e-01,  ...,  6.6870e-01,
            2.7681e-01,  1.5680e-01],
          [ 4.3445e-02, -3.4765e-01, -3.6946e-01,  ...,  7.2083e-01,
            4.3631e-01,  3.9560e-02]],

         [[ 7.3883e-03,  6.1948e-02, -4.4221e-01,  ...,  3.8477e-01,
            1.5351e-01,  1.3166e-01],
          [ 1.4095e-01,  2.8743e-01,  1.6713e-01,  ...,  2.3929e-01,
            3.6059e-01,  3.2004e-01]],

         [[-1.1289e-01,  3.7390e-01,  3.6180e-01,  ...,  8.6205e-01,
            5.8299e-02,  8.4977e-01],
          [ 6.6204e-02,  3.9506e-01, -5.7616e-02,  ...,  1.3431e-01,
            2.0726e-01,  5.7966e-01]],

         ...,

         [[-6.5818e-03, -6.9810e-02,  5.0885e-01,  ...,  1.3801e-01,
            3.0531e-01,  1.6625e-01],
          [-2.7453e-01, -5.7080e-01,  3.3662e-01,  ...,  5.3998e-01,
            1.2979e+00,  4.0818e-01]],

         [[-3.1171e-01, -3.6713e-01,  2.7430e-02,  ...,  1.3227e+00,
            1.1428e+00,  9.2365e-01],
          [-5.0069e-01, -1.7498e-01, -9.2469e-02,  ...,  1.2708e+00,
            3.1465e-01,  8.5615e-01]],

         [[-3.0371e-01, -5.4330e-02,  2.6515e-02,  ...,  1.9644e-01,
            2.5364e-01,  1.5396e-01],
          [ 3.6412e-01, -6.0173e-03,  4.0364e-01,  ...,  2.8178e-02,
            1.8988e-01,  3.5385e-01]]]])

2025-06-08 11:43:20.745729 GPU 5 64405 test begin: paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 2, 16],"float32"), None, None, Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=False, )
outputs format not support
[accuracy error] paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 2, 16],"float32"), None, None, Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=False, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 494 / 512 (96.5%)
Greatest absolute difference: 1.6582096815109253 at index (0, 0, 1, 8) (up to 0.01 allowed)
Greatest relative difference: 727.4644165039062 at index (1, 3, 1, 5) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2, 8, 2, 16]), dtype=torch.float32)
tensor([[[[-0.1708,  0.6174, -0.4533,  ...,  1.0778,  0.3355,  0.5641],
          [ 0.2098,  0.8829, -0.3124,  ...,  1.2715,  0.1188,  0.5339]],

         [[ 0.1640,  0.3273, -0.3122,  ...,  0.4946, -0.0180,  0.2098],
          [ 0.1518,  0.2594,  0.0167,  ...,  0.6326, -0.2203,  0.8261]],

         [[-0.5571,  0.1879,  0.0235,  ...,  0.4353,  0.2516,  0.2663],
          [-0.1368,  0.3146, -0.0688,  ...,  0.7359,  0.4485,  0.2844]],

         ...,

         [[ 0.1678,  0.3010,  0.1412,  ...,  1.0899,  0.5124,  0.9093],
          [-0.0748,  0.0691,  0.1375,  ...,  0.6645,  0.7022,  1.3355]],

         [[ 0.0408,  0.1567,  0.6257,  ...,  0.9428, -0.2961,  0.3837],
          [ 0.2701,  0.9727, -0.0168,  ...,  0.8972, -0.0778,  0.0592]],

         [[-0.2370,  0.5688, -0.6592,  ...,  0.6089,  0.2889,  0.3607],
          [-0.3730,  0.5489, -0.0033,  ...,  0.3560, -0.0618,  0.2089]]],


        [[[ 0.4878,  0.4976,  0.1986,  ...,  0.7851,  0.0025,  0.4088],
          [-0.1381,  0.6580, -0.7047,  ...,  0.9330,  0.6267,  0.6028]],

         [[ 0.4445,  0.4970,  0.2946,  ...,  0.6270, -0.1346,  0.6427],
          [ 0.3180,  0.4260,  0.6052,  ...,  0.4489, -0.2475,  0.5311]],

         [[-0.4281,  0.1611,  0.2925,  ...,  0.6046,  0.8193,  0.1748],
          [-0.2111,  0.2753,  0.4927,  ...,  0.9051, -0.1490,  0.6308]],

         ...,

         [[ 0.2886,  0.0566,  0.0585,  ...,  0.6333,  0.3184,  1.3069],
          [ 0.2265,  0.2327,  0.1202,  ...,  1.1872,  0.6280,  0.9121]],

         [[ 0.0775,  0.2357,  0.3511,  ...,  0.8447, -0.0769,  0.1489],
          [ 0.0713,  0.4173, -0.1114,  ...,  0.1479, -0.0636,  0.1184]],

         [[-0.8005,  0.4335, -0.2679,  ...,  0.8256,  0.3046,  0.6605],
          [-0.5987,  0.3513, -0.9476,  ...,  0.5932,  0.0435,  0.5731]]]])
DESIRED: (shape=torch.Size([2, 8, 2, 16]), dtype=torch.float32)
tensor([[[[-0.3987,  0.0240, -0.4091,  ...,  0.1717,  0.9230,  0.3655],
          [ 0.0428, -0.3503, -0.5066,  ...,  0.4975,  0.9609,  0.4619]],

         [[ 0.1682, -0.2843, -0.5436,  ...,  0.2418,  0.7221,  0.7177],
          [ 0.1355, -0.3984,  0.1662,  ...,  0.3657,  0.5918,  0.2433]],

         [[-0.3393, -0.0415,  0.1308,  ...,  0.8611,  0.4118,  0.4053],
          [ 0.3661, -0.0225,  0.1917,  ...,  0.6398,  0.5520,  0.1812]],

         ...,

         [[ 0.4488,  0.2192,  0.1405,  ...,  0.7466,  1.1425,  0.3293],
          [-0.2327,  0.0250,  0.1701,  ...,  0.1395,  0.9869,  0.4981]],

         [[-0.0078, -0.3676,  0.5366,  ...,  1.2036,  0.2021,  0.3323],
          [ 0.2553, -0.1463, -0.1525,  ...,  0.7316,  0.0247,  0.1133]],

         [[-0.6125, -0.4246, -0.6622,  ...,  0.1340,  0.4723,  0.5773],
          [-0.0692, -0.1909,  0.0499,  ...,  0.6826,  0.3628,  0.3545]]],


        [[[ 0.3926, -0.2350, -0.4103,  ...,  0.4175,  0.5699,  0.4688],
          [ 0.1651, -0.3031, -0.5947,  ...,  0.3617,  1.2768,  0.2563]],

         [[ 0.4075, -0.2465,  0.5917,  ...,  0.5191,  0.6728,  0.6666],
          [ 0.3129, -0.0828,  0.1681,  ...,  0.2471,  0.6084,  0.2571]],

         [[-0.1119, -0.1112,  0.3720,  ...,  0.4327,  0.8476,  0.1956],
          [-0.0594, -0.0056,  0.2669,  ...,  1.0969,  0.4249,  0.1054]],

         ...,

         [[-0.1324,  0.0340,  0.0605,  ...,  0.2233,  0.6397,  0.9102],
          [ 0.2295,  0.1798,  0.0952,  ...,  0.6962,  0.7573,  0.4210]],

         [[ 0.0814, -0.7930,  0.5942,  ...,  0.8073,  0.1202,  0.1637],
          [ 0.0804, -0.1570, -0.0954,  ...,  0.8031,  0.0764,  0.1310]],

         [[-0.6574, -0.0999,  0.0134,  ...,  0.3416,  0.9649,  0.4274],
          [-0.4223, -0.1867, -0.6239,  ...,  0.6493,  0.7114,  0.6633]]]])

2025-06-08 11:43:20.770896 GPU 5 64406 test begin: paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 2, 16],"float32"), None, Tensor([2, 8, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=False, )
outputs format not support
[accuracy error] paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 2, 16],"float32"), None, Tensor([2, 8, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=False, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 248 / 512 (48.4%)
Greatest absolute difference: 1.1259948015213013 at index (1, 7, 1, 11) (up to 0.01 allowed)
Greatest relative difference: 6.929421424865723 at index (0, 0, 0, 11) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2, 8, 2, 16]), dtype=torch.float32)
tensor([[[[-0.0456, -0.8972,  0.1255,  ...,  0.6400,  0.7327,  0.4452],
          [-0.5128, -0.1836,  0.3614,  ...,  0.6033,  0.5703,  0.1698]],

         [[-0.2818,  0.1594, -0.0719,  ...,  0.5220,  0.7191,  0.3149],
          [-0.0083,  0.1119, -0.1137,  ...,  0.7204,  0.7653,  0.7369]],

         [[ 0.1593,  0.0950, -0.2777,  ...,  0.4776,  0.9688,  0.0545],
          [ 0.3798,  0.0951, -0.0501,  ...,  0.5559,  0.7792,  0.3535]],

         ...,

         [[ 0.3579, -0.4241,  0.1944,  ...,  0.2410,  0.8904,  0.6340],
          [ 0.4693, -0.1562,  0.2008,  ...,  0.2306,  1.4223,  0.5977]],

         [[ 0.0600,  0.0914, -0.1291,  ...,  0.0459,  0.7051,  0.7865],
          [ 0.0226, -0.0134,  0.2463,  ...,  0.2091,  0.4674,  0.9338]],

         [[ 0.4703,  0.5303, -0.4367,  ...,  0.8152,  0.0722,  0.2094],
          [ 0.6538,  0.2475, -0.0201,  ...,  0.7179,  0.4926,  0.1198]]],


        [[[-0.6114,  0.0330,  0.5679,  ...,  0.1595,  0.9375,  0.7136],
          [ 0.1847, -0.0600,  0.2234,  ...,  0.5895,  0.1875,  0.8352]],

         [[-0.0244,  0.3640, -0.3322,  ...,  0.5827,  0.4863,  0.7191],
          [ 0.0324,  0.3743, -0.2220,  ...,  0.5537,  0.6758,  0.4643]],

         [[ 0.4999, -0.0138, -0.3126,  ...,  0.2278,  0.3253,  0.3432],
          [ 0.0224,  0.1310, -0.3070,  ...,  0.1972,  0.3297,  0.4593]],

         ...,

         [[ 0.1610, -0.0215,  0.1957,  ...,  0.2141,  0.4744,  0.7996],
          [ 0.1338, -0.1002,  0.0429,  ...,  0.1069,  1.3932,  0.7820]],

         [[-0.2467,  0.2358,  0.1804,  ...,  0.0269,  0.4174,  0.5146],
          [-0.1793,  0.1532, -0.2606,  ...,  0.0955,  1.0107,  1.0162]],

         [[ 0.5855,  0.7589, -0.3829,  ...,  0.8703,  0.7945,  0.7738],
          [ 0.5894,  0.1746,  0.0074,  ...,  0.3788,  1.0046,  0.4197]]]])
DESIRED: (shape=torch.Size([2, 8, 2, 16]), dtype=torch.float32)
tensor([[[[-0.0456, -0.8972,  0.1255,  ...,  0.6741,  0.6015,  0.4112],
          [-0.5128, -0.1836,  0.3614,  ...,  0.8258,  0.4765,  0.1447]],

         [[-0.2818,  0.1594, -0.0719,  ...,  0.7324,  0.1530,  0.2031],
          [-0.0083,  0.1119, -0.1137,  ...,  1.1547,  0.1538,  0.5190]],

         [[ 0.1593,  0.0950, -0.2777,  ...,  0.9636,  0.8446,  0.1194],
          [ 0.3798,  0.0951, -0.0501,  ...,  1.2771,  0.7759,  0.6333]],

         ...,

         [[ 0.3579, -0.4241,  0.1944,  ...,  0.0837,  0.7378,  0.5732],
          [ 0.4693, -0.1562,  0.2008,  ...,  0.3690,  0.7011,  0.6226]],

         [[ 0.0600,  0.0914, -0.1291,  ...,  0.1054,  0.4968,  0.8180],
          [ 0.0226, -0.0134,  0.2463,  ...,  0.1843,  0.4361,  0.9440]],

         [[ 0.4703,  0.5303, -0.4367,  ...,  1.0560,  0.0225,  0.2603],
          [ 0.6538,  0.2475, -0.0201,  ...,  1.0706,  0.1773,  0.4703]]],


        [[[-0.6114,  0.0330,  0.5679,  ...,  0.1241,  0.7848,  0.6975],
          [ 0.1847, -0.0600,  0.2234,  ...,  0.4664,  0.1504,  0.7930]],

         [[-0.0244,  0.3640, -0.3322,  ...,  0.7882,  0.3165,  0.5116],
          [ 0.0324,  0.3743, -0.2220,  ...,  0.9681,  0.1749,  0.3217]],

         [[ 0.4999, -0.0138, -0.3126,  ...,  0.7008,  0.1778,  0.5604],
          [ 0.0224,  0.1310, -0.3070,  ...,  0.5389,  0.3945,  0.7994]],

         ...,

         [[ 0.1610, -0.0215,  0.1957,  ...,  0.1687,  0.3681,  0.7281],
          [ 0.1338, -0.1002,  0.0429,  ...,  0.0569,  0.7837,  0.6003]],

         [[-0.2467,  0.2358,  0.1804,  ...,  0.2875,  0.4056,  0.5296],
          [-0.1793,  0.1532, -0.2606,  ...,  0.4245,  0.8526,  1.0504]],

         [[ 0.5855,  0.7589, -0.3829,  ...,  1.3260,  0.3108,  1.2250],
          [ 0.5894,  0.1746,  0.0074,  ...,  0.7365,  0.3478,  0.5056]]]])

2025-06-08 11:43:20.854323 GPU 5 64403 test begin: paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 2, 16],"float32"), None, Tensor([2, 8, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=False, )
outputs format not support
[accuracy error] paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 2, 16],"float32"), None, Tensor([2, 8, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=False, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 486 / 512 (94.9%)
Greatest absolute difference: 2.0992400646209717 at index (0, 5, 0, 12) (up to 0.01 allowed)
Greatest relative difference: 214.29177856445312 at index (0, 6, 1, 1) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2, 8, 2, 16]), dtype=torch.float32)
tensor([[[[ 0.1061,  0.4058,  0.4222,  ...,  0.7598, -0.1114,  0.1699],
          [ 0.1216,  0.3407,  0.1557,  ...,  0.6227, -0.3428,  0.8734]],

         [[-0.4162,  0.7587, -0.1004,  ...,  0.3710,  0.1765,  0.4746],
          [ 0.4550,  0.1383, -0.1826,  ...,  0.1305,  0.1368,  0.7058]],

         [[ 0.0763,  0.9703,  0.6906,  ...,  0.0318,  0.3772,  0.0235],
          [ 0.2142,  1.1050,  0.7053,  ...,  0.1829,  0.5247,  0.0576]],

         ...,

         [[ 0.3230,  0.4158, -0.1077,  ...,  0.4207,  0.0433,  0.5334],
          [ 0.4483,  0.9868, -0.1581,  ...,  0.1827, -0.2667,  0.6021]],

         [[-0.0374,  0.3995, -0.6710,  ...,  0.9108, -0.2071,  0.8334],
          [-0.3172,  0.8357, -0.1968,  ...,  0.7430, -0.1436,  0.6590]],

         [[ 0.1265,  1.0553,  0.2105,  ...,  0.3502, -0.0221,  0.2875],
          [-0.0837,  0.3144, -0.1195,  ...,  0.3734, -0.1547,  0.2907]]],


        [[[ 0.2839,  0.6330, -0.0545,  ...,  0.2199, -0.6424,  0.4455],
          [ 0.0311,  0.3414,  0.2022,  ...,  0.2126, -0.1441,  0.6397]],

         [[ 0.0947,  0.2850,  0.2201,  ...,  0.3153,  0.0088,  0.4150],
          [ 0.3833,  0.5649, -0.0384,  ...,  0.2415,  0.0768,  0.5446]],

         [[ 0.2586,  0.5600,  0.5148,  ...,  0.1125,  0.2921,  0.0712],
          [ 0.1460,  0.9275,  0.2556,  ...,  0.2811,  0.6447,  0.0228]],

         ...,

         [[-0.0974,  0.7094, -0.2270,  ...,  0.2294,  0.2731,  0.2790],
          [-0.0187,  1.2522, -0.0713,  ...,  0.3959, -0.3189,  0.6613]],

         [[-0.1837,  0.6451, -0.3810,  ...,  0.5705, -0.4677,  0.3336],
          [-0.2220,  0.6965,  0.2107,  ...,  0.8143,  0.0676,  0.4690]],

         [[ 0.0447,  0.2553, -0.1376,  ...,  0.9597, -0.0152,  0.4312],
          [-0.1314,  0.5210, -0.0213,  ...,  0.3568, -0.3857,  1.5394]]]])
DESIRED: (shape=torch.Size([2, 8, 2, 16]), dtype=torch.float32)
tensor([[[[ 1.3140e-01, -5.4103e-01,  3.8996e-01,  ...,  5.4980e-01,
            2.0934e-01,  1.2220e-01],
          [ 5.4191e-02, -5.4594e-02,  1.8636e-01,  ...,  4.0586e-01,
            8.0077e-01,  3.0078e-01]],

         [[-1.4235e-01,  6.6251e-01, -1.0980e-01,  ...,  6.2108e-01,
            6.0269e-01,  3.3835e-01],
          [ 3.3057e-01,  8.2964e-02, -6.6671e-02,  ...,  5.4933e-02,
            9.0512e-02,  1.7342e-01]],

         [[ 1.7838e-01,  3.3921e-01,  6.7146e-01,  ...,  5.8081e-01,
            1.3063e+00,  3.7538e-02],
          [ 6.0168e-01,  3.9149e-01,  5.9050e-01,  ...,  2.5937e-01,
            1.1595e+00,  6.7491e-01]],

         ...,

         [[ 1.2557e-01, -9.9184e-02, -4.8636e-01,  ...,  9.3234e-01,
            6.6868e-01,  6.9711e-01],
          [ 3.1482e-01, -3.2732e-01, -4.6329e-01,  ...,  4.2289e-01,
            3.8107e-01,  6.5390e-01]],

         [[-2.0083e-01, -2.9655e-01, -5.1246e-01,  ...,  6.2749e-01,
            6.7297e-01,  4.1197e-01],
          [-7.4780e-02,  3.8819e-03, -2.5006e-01,  ...,  2.5050e-01,
            4.8577e-01,  2.8958e-01]],

         [[ 8.9920e-02, -2.8061e-01,  9.1906e-02,  ...,  5.1281e-01,
            2.9749e-01,  5.5127e-01],
          [ 6.5091e-02, -5.6072e-01, -3.2744e-02,  ...,  3.0286e-01,
            4.2178e-01,  6.4194e-01]]],


        [[[ 2.4359e-01, -6.1176e-01, -2.8586e-02,  ...,  1.6645e-01,
            1.2941e-01,  2.6714e-01],
          [ 9.7718e-02, -1.2972e-01,  2.3210e-01,  ...,  1.3261e-01,
            6.7163e-01,  1.8932e-01]],

         [[-1.8529e-01,  1.9835e-01,  1.8798e-01,  ...,  7.9700e-01,
            3.6937e-01,  2.5513e-01],
          [ 2.0823e-01,  4.6368e-01,  4.5113e-02,  ...,  2.2901e-01,
            5.9659e-01,  1.6696e-01]],

         [[ 1.8656e-01, -3.1821e-01,  6.1348e-01,  ...,  6.4425e-01,
            9.9748e-01,  1.5053e-01],
          [ 1.4583e-01,  2.9029e-01,  3.8925e-01,  ...,  1.8145e-01,
            7.4917e-01,  6.5142e-01]],

         ...,

         [[-9.3437e-02,  1.6615e-01, -1.1323e-03,  ...,  7.4014e-01,
            8.4527e-01,  1.6067e-01],
          [ 2.0037e-01,  7.8647e-01, -1.3407e-01,  ...,  6.4691e-01,
            4.4873e-01,  8.1380e-01]],

         [[-3.8064e-01, -1.1740e-01, -6.2600e-01,  ...,  4.7596e-01,
            1.2300e-01,  4.2080e-01],
          [-3.7698e-01,  1.6677e-01, -1.7437e-01,  ...,  4.3556e-02,
            5.7926e-01,  5.3859e-03]],

         [[-2.3947e-01, -7.4894e-01, -9.2717e-02,  ...,  7.5629e-01,
            3.9979e-01,  5.4694e-01],
          [-2.5772e-01,  9.6662e-02,  7.3473e-02,  ...,  2.7784e-01,
            8.0423e-01,  1.1272e+00]]]])

2025-06-08 11:43:20.885202 GPU 5 64401 test begin: paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 2, 16],"float32"), None, Tensor([2, 8, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=False, )
outputs format not support
[accuracy error] paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 2, 16],"float32"), None, Tensor([2, 8, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=False, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 493 / 512 (96.3%)
Greatest absolute difference: 1.4795832633972168 at index (0, 7, 0, 3) (up to 0.01 allowed)
Greatest relative difference: 157.36631774902344 at index (1, 3, 0, 3) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2, 8, 2, 16]), dtype=torch.float32)
tensor([[[[-0.0419,  0.1006, -0.1352,  ...,  0.7182,  0.8581,  0.4757],
          [ 0.0899,  0.7963, -0.0842,  ...,  0.6347,  0.2420,  0.3479]],

         [[ 0.1269,  0.9078,  0.0774,  ...,  0.5748, -0.0180,  0.3646],
          [ 0.3549,  0.3158, -0.1297,  ...,  0.2861, -0.2186,  0.5095]],

         [[-0.1080,  0.1697,  0.4722,  ...,  0.2365, -0.2281,  0.9265],
          [-0.0894,  0.4466,  0.4039,  ...,  0.1382, -0.2623,  0.9861]],

         ...,

         [[-0.0184,  0.6022, -0.0010,  ...,  0.3305,  0.1094,  0.4137],
          [-0.0219,  0.5398,  0.4273,  ...,  0.2728,  0.8307,  0.9220]],

         [[-0.3679,  0.3412,  0.1060,  ...,  0.5700, -0.0109,  0.4129],
          [ 0.2060,  0.6040,  0.0961,  ...,  0.5580,  0.1442,  0.3399]],

         [[-0.1993,  0.4730,  0.1664,  ...,  0.3941, -0.0245,  0.2058],
          [-0.1525,  0.5896,  0.0405,  ...,  0.0393,  0.0739,  0.0466]]],


        [[[ 0.5745,  0.7634, -0.1145,  ...,  0.7358,  0.3281,  0.3897],
          [ 0.1784,  0.6576, -0.0704,  ...,  0.5172, -0.0844,  0.0439]],

         [[-0.0889,  0.4530, -0.1028,  ...,  0.5435, -0.1038,  0.4553],
          [-0.0322,  0.0834, -0.2983,  ...,  0.4002,  0.0704,  0.4482]],

         [[-0.0279,  0.4046,  0.4100,  ...,  0.2261,  0.1804,  0.6485],
          [-0.0768,  0.1340,  0.4509,  ...,  0.3792, -0.1947,  0.4539]],

         ...,

         [[-0.0553,  0.4630,  0.1361,  ...,  0.1894,  0.2673,  0.5926],
          [-0.0323,  0.6689,  0.0249,  ...,  0.0904,  0.3038,  0.3711]],

         [[-0.4170,  0.2541,  0.0845,  ...,  0.3878,  0.3279,  0.4133],
          [-0.1147,  0.1610,  0.2334,  ...,  0.6166,  0.3950,  0.2907]],

         [[-0.5368,  0.5098,  0.1445,  ...,  0.4179,  0.0496,  0.1568],
          [-0.0156,  0.4927,  0.1666,  ...,  0.2680,  0.0720,  0.1858]]]])
DESIRED: (shape=torch.Size([2, 8, 2, 16]), dtype=torch.float32)
tensor([[[[ 5.9274e-03, -5.2469e-01, -1.1235e-01,  ...,  4.7880e-01,
            1.1337e+00,  1.2819e-01],
          [ 4.5171e-01, -2.3333e-01, -1.4209e-01,  ...,  6.5892e-01,
            7.0973e-01,  4.1986e-01]],

         [[ 4.6074e-01,  1.6804e-01,  6.1554e-02,  ...,  1.4777e-01,
            5.0644e-01,  6.7967e-01],
          [ 3.5091e-01, -3.6146e-01, -3.1261e-01,  ...,  8.5878e-02,
            3.1158e-02,  4.7397e-01]],

         [[-1.0046e-01,  6.7253e-02,  4.2705e-01,  ...,  5.2391e-01,
            3.4489e-01,  1.0970e+00],
          [-5.3448e-03, -2.0911e-01,  5.2664e-01,  ...,  6.3760e-01,
            4.1744e-01,  7.4032e-01]],

         ...,

         [[-7.5397e-02,  7.7610e-02, -3.8034e-02,  ...,  5.6213e-01,
            3.1382e-02,  3.3719e-01],
          [-7.7664e-02, -1.1377e-01,  3.0251e-01,  ...,  3.6033e-01,
            3.1976e-02,  8.2775e-02]],

         [[-5.3613e-01, -1.3549e-01,  2.0307e-02,  ...,  8.8643e-01,
            6.8789e-01,  5.2694e-01],
          [ 5.4809e-02, -4.4057e-01,  1.6105e-01,  ...,  2.1029e-01,
            2.5228e-01,  5.4608e-01]],

         [[ 4.8650e-02,  9.2697e-02,  1.6649e-01,  ...,  6.4164e-01,
            7.4724e-01,  1.8910e-01],
          [-2.6281e-01, -3.5513e-01,  3.7783e-02,  ...,  3.7914e-01,
            5.2952e-01,  6.4653e-02]]],


        [[[ 4.7873e-01, -3.0714e-01, -4.2041e-02,  ...,  6.6141e-01,
            6.8727e-01,  2.8468e-01],
          [ 2.7719e-01, -4.0419e-01, -5.3774e-02,  ...,  8.3111e-01,
            6.2324e-01,  6.8369e-01]],

         [[-2.5525e-01, -3.7038e-01, -2.7068e-02,  ...,  1.7733e-01,
            4.9957e-01,  6.7454e-01],
          [-1.2599e-01, -5.0045e-01, -3.4650e-02,  ...,  6.1919e-02,
            4.4521e-01,  6.9871e-01]],

         [[-4.1034e-02,  5.9111e-02,  4.0429e-01,  ...,  3.6700e-01,
            3.0204e-01,  1.0830e-01],
          [-1.1022e-01, -4.2865e-01,  8.1963e-01,  ...,  3.0918e-01,
            1.4576e-01,  6.9095e-01]],

         ...,

         [[-1.0783e-03,  2.8719e-02,  1.5726e-01,  ...,  4.0950e-01,
            2.5373e-02,  5.8925e-01],
          [-8.8669e-02, -4.2047e-01,  2.6417e-02,  ...,  1.7241e-01,
            1.6464e-02,  5.5012e-01]],

         [[-2.7883e-01, -2.1722e-01,  1.2324e-01,  ...,  7.0182e-01,
            2.7864e-01,  2.7132e-01],
          [-4.7398e-02, -1.0714e-01, -7.0108e-02,  ...,  5.0408e-01,
            5.7842e-01,  1.8110e-01]],

         [[-2.0337e-01,  1.5886e-02,  1.4059e-01,  ...,  9.5822e-01,
            6.4262e-01,  1.3591e-01],
          [-5.2864e-01, -4.9245e-01,  1.6741e-01,  ...,  7.3506e-01,
            8.1447e-01,  1.7586e-01]]]])

2025-06-08 11:43:20.942538 GPU 5 64407 test begin: paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), None, Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=False, )
outputs format not support
[accuracy error] paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), None, Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=False, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 238 / 512 (46.5%)
Greatest absolute difference: 1.0896693468093872 at index (1, 6, 1, 12) (up to 0.01 allowed)
Greatest relative difference: 6.525267601013184 at index (1, 3, 1, 13) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2, 8, 2, 16]), dtype=torch.float32)
tensor([[[[ 3.5501e-01,  4.6289e-01,  1.2998e-03,  ...,  2.5760e-01,
            1.0408e+00,  1.9632e-01],
          [ 3.6179e-01,  2.9554e-01, -1.1967e-01,  ...,  7.6295e-01,
            4.0819e-01,  4.5577e-01]],

         [[ 8.9909e-03, -5.8932e-01,  2.6493e-01,  ...,  5.4910e-01,
            6.2394e-01,  1.5679e-01],
          [ 5.4992e-02, -1.3339e-01,  3.4260e-01,  ...,  6.1864e-01,
            3.5238e-01,  7.8390e-01]],

         [[-1.2751e-01, -9.1914e-01,  4.5349e-01,  ...,  8.8690e-01,
            9.5707e-01,  7.4477e-01],
          [ 1.6030e-01, -8.1139e-01,  1.1458e-01,  ...,  3.4469e-01,
            6.0182e-01,  8.3742e-01]],

         ...,

         [[ 5.4231e-02,  3.2495e-01,  3.2871e-02,  ...,  1.1196e-01,
            7.1634e-01,  2.2764e-01],
          [-1.1735e-01,  3.5508e-01,  8.0437e-02,  ...,  4.1570e-01,
            6.5834e-01,  3.4383e-01]],

         [[-6.1066e-02, -2.1840e-01, -5.8927e-01,  ...,  1.0989e+00,
            7.4803e-01,  8.9865e-01],
          [ 4.1415e-01, -6.9535e-03,  4.0980e-02,  ...,  9.3418e-01,
            3.8555e-01,  2.1557e-01]],

         [[ 9.1258e-04,  1.5986e-02, -1.6543e-01,  ...,  4.4660e-01,
            8.4472e-01,  5.1257e-01],
          [ 3.1052e-01,  1.7038e-02,  4.6627e-02,  ...,  3.2140e-01,
            6.4161e-01,  6.0367e-01]]],


        [[[ 8.2168e-01,  4.4442e-01, -9.8810e-02,  ...,  8.4202e-01,
            7.9755e-01,  2.1079e-01],
          [ 7.9859e-01,  1.7800e-02, -9.0366e-05,  ...,  5.2907e-01,
            6.3726e-01,  1.2387e-01]],

         [[-1.1549e-01, -1.3242e-01,  2.6515e-01,  ...,  5.5193e-01,
            6.8323e-01,  1.8605e-01],
          [-6.0775e-01, -5.7319e-01,  7.1129e-03,  ...,  1.5701e-01,
            5.0629e-01,  7.9434e-01]],

         [[ 1.3931e-01, -3.2385e-01,  3.5623e-01,  ...,  9.4366e-01,
            3.0886e-01,  7.8364e-01],
          [ 2.0186e-02, -2.6583e-01,  2.1753e-03,  ...,  5.8960e-01,
            6.0028e-01,  7.2027e-01]],

         ...,

         [[-8.5527e-04,  3.1005e-01,  7.7901e-02,  ...,  1.6827e-01,
            5.4143e-01,  5.9930e-01],
          [-1.1510e-01,  1.3003e-01,  6.8835e-02,  ...,  5.4500e-01,
            2.7970e-01,  6.0510e-01]],

         [[ 8.0910e-03,  3.9251e-01, -7.9934e-02,  ...,  1.1277e-01,
            7.6245e-01,  9.7343e-02],
          [-1.8768e-01,  4.2185e-01, -3.7953e-01,  ...,  1.1157e+00,
            9.4523e-01,  2.5015e-01]],

         [[ 1.8836e-01, -4.6641e-01, -2.9956e-02,  ...,  6.1252e-01,
            7.1281e-01,  6.3110e-01],
          [ 4.7265e-01, -3.9755e-01, -3.7507e-01,  ...,  7.0270e-01,
            5.4721e-01,  8.6687e-02]]]])
DESIRED: (shape=torch.Size([2, 8, 2, 16]), dtype=torch.float32)
tensor([[[[ 3.5501e-01,  4.6289e-01,  1.2998e-03,  ...,  3.2957e-01,
            7.4748e-01,  1.7306e-01],
          [ 3.6179e-01,  2.9554e-01, -1.1967e-01,  ...,  7.9069e-01,
            4.0710e-01,  4.6378e-01]],

         [[ 8.9909e-03, -5.8932e-01,  2.6493e-01,  ...,  7.6163e-01,
            7.3419e-01,  6.2427e-01],
          [ 5.4992e-02, -1.3339e-01,  3.4260e-01,  ...,  9.0016e-01,
            4.9371e-01,  6.2436e-01]],

         [[-1.2751e-01, -9.1914e-01,  4.5349e-01,  ...,  6.1067e-01,
            1.0556e+00,  7.0998e-01],
          [ 1.6030e-01, -8.1139e-01,  1.1458e-01,  ...,  2.4035e-01,
            7.4431e-01,  3.6509e-01]],

         ...,

         [[ 5.4231e-02,  3.2495e-01,  3.2871e-02,  ...,  1.1866e-01,
            2.3000e-01,  2.4014e-01],
          [-1.1735e-01,  3.5508e-01,  8.0437e-02,  ...,  3.9462e-01,
            5.2796e-01,  3.5288e-01]],

         [[-6.1066e-02, -2.1840e-01, -5.8927e-01,  ...,  8.1498e-01,
            1.6049e-01,  4.0023e-01],
          [ 4.1415e-01, -6.9535e-03,  4.0980e-02,  ...,  4.0440e-01,
            1.0260e-01,  2.4394e-01]],

         [[ 9.1258e-04,  1.5986e-02, -1.6543e-01,  ...,  3.5685e-01,
            5.6811e-01,  7.0814e-01],
          [ 3.1052e-01,  1.7038e-02,  4.6627e-02,  ...,  3.9867e-01,
            3.7025e-01,  8.0947e-01]]],


        [[[ 8.2168e-01,  4.4442e-01, -9.8810e-02,  ...,  8.4439e-01,
            7.5517e-01,  2.9192e-01],
          [ 7.9859e-01,  1.7800e-02, -9.0368e-05,  ...,  6.8526e-01,
            4.1486e-01,  2.6656e-01]],

         [[-1.1549e-01, -1.3242e-01,  2.6515e-01,  ...,  7.7983e-01,
            7.9841e-01,  8.4461e-01],
          [-6.0775e-01, -5.7319e-01,  7.1129e-03,  ...,  2.6226e-01,
            5.7486e-01,  8.8126e-01]],

         [[ 1.3931e-01, -3.2385e-01,  3.5623e-01,  ...,  6.4961e-01,
            2.6437e-01,  9.5942e-01],
          [ 2.0186e-02, -2.6583e-01,  2.1753e-03,  ...,  4.1494e-01,
            7.0098e-01,  4.9506e-01]],

         ...,

         [[-8.5527e-04,  3.1005e-01,  7.7901e-02,  ...,  1.8782e-01,
            4.1685e-01,  6.3926e-01],
          [-1.1510e-01,  1.3003e-01,  6.8835e-02,  ...,  5.0910e-01,
            3.1077e-01,  6.3637e-01]],

         [[ 8.0910e-03,  3.9251e-01, -7.9934e-02,  ...,  8.6086e-02,
            2.1426e-01,  9.5802e-02],
          [-1.8768e-01,  4.2185e-01, -3.7953e-01,  ...,  8.6607e-01,
            2.0919e-01,  4.9024e-01]],

         [[ 1.8836e-01, -4.6641e-01, -2.9956e-02,  ...,  5.9920e-01,
            5.0307e-01,  7.3713e-01],
          [ 4.7265e-01, -3.9755e-01, -3.7507e-01,  ...,  6.0867e-01,
            3.5954e-01,  1.1505e-01]]]])

2025-06-08 11:43:20.977438 GPU 5 64405 test begin: paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), None, Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=False, )
outputs format not support
[accuracy error] paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), None, Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=False, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 496 / 512 (96.9%)
Greatest absolute difference: 1.6682720184326172 at index (1, 1, 1, 1) (up to 0.01 allowed)
Greatest relative difference: 396.3103332519531 at index (0, 7, 1, 3) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2, 8, 2, 16]), dtype=torch.float32)
tensor([[[[ 0.2868,  0.3551,  0.7260,  ...,  0.9576,  0.1471,  0.1204],
          [ 0.1007,  0.0188,  0.5266,  ...,  0.8530, -0.2171,  0.2024]],

         [[ 0.0154,  0.0975,  0.1266,  ...,  0.5904, -0.0083,  0.2924],
          [-0.4615,  0.7555,  0.2792,  ...,  0.2940,  0.0790,  0.5166]],

         [[ 0.1891,  0.3026, -0.7149,  ...,  0.8289, -0.2580,  0.2339],
          [-0.0367,  0.7062,  0.2743,  ...,  1.0304, -0.2115,  0.1541]],

         ...,

         [[-0.4839,  0.8847, -0.3179,  ...,  0.9468,  0.6004,  0.3577],
          [-0.6877,  1.3685, -0.3372,  ...,  0.6295,  0.2899,  0.2388]],

         [[-0.0495,  0.2362, -0.1922,  ...,  0.1697,  0.4005,  0.0078],
          [-0.0433,  0.1909, -0.2381,  ...,  0.3005,  0.4611,  0.1799]],

         [[-0.1083,  0.0703,  0.0482,  ...,  0.0521,  0.0425,  0.0732],
          [ 0.1477,  0.5445, -0.0086,  ...,  0.3119,  0.0640,  0.3228]]],


        [[[ 0.1495,  0.1315,  0.3911,  ...,  0.4502,  0.0669,  0.0868],
          [ 0.7439,  0.0877,  0.0469,  ...,  0.9449, -0.0565,  0.0070]],

         [[ 0.0858,  0.5653,  0.1468,  ...,  0.4083,  0.3172,  0.2177],
          [ 0.1098,  1.2336,  0.4462,  ...,  0.6736,  0.1100,  0.1658]],

         [[ 0.2473,  0.6211, -0.2625,  ...,  0.6079,  0.0297,  0.1969],
          [ 0.1934,  0.6172,  0.3197,  ...,  0.9678,  0.3259,  0.0286]],

         ...,

         [[-0.1789,  0.2949, -0.3071,  ...,  1.0800,  0.0485,  0.1612],
          [-0.4863,  0.8613, -0.6159,  ...,  0.8023,  0.5062,  0.4466]],

         [[ 0.0401,  0.3005, -0.6729,  ...,  0.5599,  0.5180,  0.2611],
          [-0.0663,  0.2889, -0.0631,  ...,  0.4181, -0.2751,  0.2554]],

         [[-0.1520,  0.4577,  0.1804,  ...,  0.2438,  0.0848,  0.2112],
          [-0.4098,  0.3488, -0.0586,  ...,  0.1380,  0.2511,  0.5498]]]])
DESIRED: (shape=torch.Size([2, 8, 2, 16]), dtype=torch.float32)
tensor([[[[ 4.5968e-01,  2.5335e-01,  7.7856e-01,  ...,  7.6109e-01,
            5.1655e-01,  8.8477e-01],
          [-2.0272e-01, -6.7501e-02,  3.7025e-01,  ...,  9.4084e-01,
            8.8980e-02,  1.2254e+00]],

         [[-5.3452e-01, -2.3433e-01,  1.3357e-01,  ...,  1.0594e+00,
            2.9713e-01,  1.1657e+00],
          [-1.3197e-02,  5.2321e-01,  2.2875e-01,  ...,  7.2375e-01,
            3.4111e-01,  9.7775e-01]],

         [[-2.5183e-02, -6.0302e-01,  9.6070e-02,  ...,  8.2599e-01,
            2.5742e-01,  3.0555e-01],
          [-3.4828e-02,  1.4658e-01,  2.4189e-02,  ...,  2.4694e-01,
            2.4605e-01,  3.7397e-01]],

         ...,

         [[-6.3979e-01,  4.6582e-01, -9.1321e-02,  ...,  9.0945e-01,
            1.0014e+00,  2.6583e-01],
          [-4.2240e-01,  6.9686e-01, -3.7367e-01,  ...,  3.8602e-01,
            5.9716e-01,  4.9520e-02]],

         [[ 1.6488e-03, -2.2149e-01, -6.7352e-01,  ...,  1.3116e-01,
            6.4891e-01,  3.5833e-01],
          [-2.1378e-03, -4.1894e-01, -2.8383e-01,  ...,  4.4598e-01,
            9.0564e-01,  5.1328e-01]],

         [[-4.4346e-01, -5.9431e-01,  8.3525e-03,  ...,  8.2052e-01,
            8.2419e-01,  9.8139e-01],
          [-1.7015e-01, -6.3063e-01, -1.9264e-01,  ...,  8.1764e-01,
            8.4905e-01,  1.1577e+00]]],


        [[[-1.1552e-01,  6.8248e-02,  2.8755e-01,  ...,  4.5694e-01,
            3.6035e-02,  7.4336e-01],
          [ 4.2280e-01, -1.0157e-02,  1.8552e-02,  ...,  6.3677e-01,
            2.7309e-01,  5.2643e-01]],

         [[-4.5145e-01, -3.1052e-01,  1.3895e-01,  ...,  5.0850e-01,
            1.9843e-01,  4.9451e-01],
          [ 4.4441e-01, -4.3468e-01,  4.2532e-01,  ...,  1.0006e+00,
            2.0311e-01,  3.9365e-01]],

         [[ 2.2633e-01, -3.0274e-01,  8.8546e-04,  ...,  3.6587e-02,
            5.7398e-01,  4.2748e-01],
          [-2.8095e-02,  7.8395e-02,  4.6327e-01,  ...,  6.9238e-01,
            5.3848e-01,  2.4355e-01]],

         ...,

         [[-5.2873e-01, -2.3767e-01, -4.2719e-01,  ...,  7.1770e-01,
            2.6360e-01,  1.7453e-01],
          [-2.1949e-01,  3.3758e-01, -8.0592e-02,  ...,  6.9455e-01,
            1.0625e+00,  2.3430e-01]],

         [[ 4.7922e-02, -1.1814e-01, -6.6619e-01,  ...,  9.2957e-01,
            1.1963e+00,  3.0014e-01],
          [ 3.2999e-03, -6.6745e-02, -6.6180e-01,  ...,  5.7275e-01,
            8.4198e-02,  5.7133e-01]],

         [[-3.4123e-01, -7.3087e-01,  7.1359e-02,  ...,  1.4375e+00,
            1.0874e+00,  2.9060e-01],
          [-5.7962e-02, -6.8420e-01, -3.6505e-01,  ...,  6.5578e-01,
            1.3838e+00,  6.1441e-01]]]])

2025-06-08 11:43:21.026720 GPU 5 64406 test begin: paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), None, Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=False, )
outputs format not support
[accuracy error] paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), None, Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=False, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 490 / 512 (95.7%)
Greatest absolute difference: 1.6011420488357544 at index (0, 4, 0, 5) (up to 0.01 allowed)
Greatest relative difference: 87.97274017333984 at index (1, 3, 1, 1) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2, 8, 2, 16]), dtype=torch.float32)
tensor([[[[-0.2214,  0.4833, -0.2170,  ...,  0.3084,  0.3248,  0.2614],
          [ 0.0090,  0.2657, -0.2576,  ...,  0.4629,  0.3223,  0.2988]],

         [[ 0.3685,  0.4922,  0.4155,  ...,  0.5572, -0.2150,  0.4293],
          [ 0.3731,  0.4870,  0.0876,  ...,  1.0472,  0.0100,  0.4035]],

         [[ 0.2109,  0.1665,  0.2161,  ...,  0.6654, -0.0511,  0.1007],
          [-0.2585,  0.4902, -0.4246,  ...,  1.0260,  0.1490,  0.2034]],

         ...,

         [[-0.6441,  1.0549, -0.3771,  ...,  0.8110,  0.2804,  0.4825],
          [-0.0197,  0.2736, -0.1183,  ...,  0.6933,  0.1799,  0.3015]],

         [[ 0.1801,  0.5846,  0.0488,  ...,  0.9143, -0.1158,  0.6283],
          [-0.3659,  0.2947, -0.0239,  ...,  0.7108, -0.2996,  0.3484]],

         [[-0.3650,  0.4993,  0.1584,  ...,  1.4380, -0.1058,  0.4302],
          [-0.2668,  0.5633,  0.3562,  ...,  0.5198, -0.0600,  0.5518]]],


        [[[ 0.0862,  0.0656, -0.3362,  ...,  0.4778,  0.2241,  0.4103],
          [ 0.0716,  0.3332, -0.0116,  ...,  0.2023, -0.2517,  0.3270]],

         [[ 0.3570,  0.6213,  0.1329,  ...,  0.7371,  0.0494,  0.1282],
          [-0.7022,  0.3282,  0.0277,  ...,  0.9806,  0.0044,  0.2555]],

         [[-0.2445,  0.6156,  0.0476,  ...,  0.4396, -0.0656,  0.3095],
          [ 0.0087,  0.7933, -0.1699,  ...,  0.1081, -0.1410,  0.2460]],

         ...,

         [[-0.5209,  0.7989, -0.0215,  ...,  0.9402,  0.0201,  0.3063],
          [-0.1578,  0.5261, -0.3293,  ...,  0.6041,  0.1730,  0.3821]],

         [[-0.4159,  0.3773, -0.1708,  ...,  0.2510, -0.2205,  0.6738],
          [ 0.0892,  0.2513, -0.2788,  ...,  0.6132, -0.2618,  0.1993]],

         [[-0.5177,  0.4733,  0.3274,  ...,  0.6687,  0.0166,  0.0798],
          [-0.0240,  0.4601, -0.0754,  ...,  0.0944,  0.0774,  0.2597]]]])
DESIRED: (shape=torch.Size([2, 8, 2, 16]), dtype=torch.float32)
tensor([[[[ 0.0997,  0.3023, -0.4687,  ...,  0.3686,  0.1534,  0.6592],
          [-0.3981,  0.1238, -0.3247,  ...,  0.2854,  0.1779,  0.4747]],

         [[ 0.3406, -0.2295,  0.3845,  ...,  0.5571,  0.2947,  0.4317],
          [-0.0675, -0.4512,  0.1436,  ...,  0.7211,  0.4462,  0.6304]],

         [[ 0.0974, -0.0975, -0.4674,  ...,  0.6501,  0.4356,  0.4879],
          [-0.1074,  0.3401,  0.0066,  ...,  0.9567,  0.2553,  0.1558]],

         ...,

         [[-0.0455,  0.7258, -0.0861,  ...,  0.3206,  0.9176,  0.0646],
          [-0.7336, -0.2305, -0.3471,  ...,  0.5856,  0.2739,  0.0515]],

         [[ 0.3764,  0.0503,  0.0144,  ...,  0.9066,  0.9064,  0.5298],
          [ 0.0634, -0.6524, -0.1237,  ...,  0.5789,  0.4187,  0.6489]],

         [[-0.3108, -0.0642,  0.1268,  ...,  0.6620,  0.4977,  0.6872],
          [-0.1332, -0.5697,  0.2413,  ...,  0.2316,  0.7623,  0.9693]]],


        [[[-0.5355, -0.0970, -0.2760,  ...,  0.4691,  0.1774,  0.8725],
          [-0.1187,  0.0898,  0.0113,  ...,  0.3030,  0.0601,  0.7663]],

         [[ 0.2984, -0.2435,  0.1225,  ...,  1.0226,  0.2027,  0.8780],
          [-0.4058, -0.0683, -0.1414,  ...,  0.9299,  0.2730,  0.2018]],

         [[-0.2233,  0.2495, -0.8142,  ...,  0.4453,  0.4837,  0.3673],
          [ 0.2994,  0.0239, -0.0580,  ...,  0.4825,  0.5484,  0.2695]],

         ...,

         [[-0.1955,  0.3377, -0.0940,  ...,  0.4046,  0.1042,  0.1242],
          [ 0.0163, -0.0939, -0.1016,  ...,  0.2670,  0.7155,  0.0758]],

         [[-0.0335, -0.4817, -0.0412,  ...,  0.6121,  0.9436,  0.6535],
          [-0.1342, -0.8159, -0.1195,  ...,  1.0264,  0.3731,  0.4724]],

         [[-0.2133, -0.2613,  0.2411,  ...,  0.1191,  0.2702,  0.1900],
          [ 0.0608, -0.5483, -0.1550,  ...,  0.1417,  0.4428,  0.4051]]]])

2025-06-08 11:43:21.117131 GPU 5 64403 test begin: paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=False, )
[accuracy error] paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=False, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 244 / 512 (47.7%)
Greatest absolute difference: 0.9576241374015808 at index (0, 3, 1, 12) (up to 0.01 allowed)
Greatest relative difference: 54.42115783691406 at index (1, 4, 1, 12) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2, 8, 2, 16]), dtype=torch.float32)
tensor([[[[ 0.1843, -0.0502,  0.0342,  ...,  0.4653,  0.1956,  0.1353],
          [ 0.2245, -0.0272, -0.3182,  ...,  0.3508,  0.2228,  0.8108]],

         [[-0.0957,  0.3120, -0.0456,  ...,  0.6554,  0.0386,  0.2954],
          [ 0.2659,  0.2669, -0.8646,  ...,  0.6037,  1.1461,  0.3871]],

         [[ 0.0233,  0.2376, -0.0633,  ...,  0.7217,  0.5869,  0.3225],
          [-0.0211,  0.1469,  0.2029,  ...,  0.9424,  0.3899,  0.1261]],

         ...,

         [[ 0.5041,  0.1575,  0.1124,  ...,  0.3479,  0.8845,  0.4584],
          [ 0.1571,  0.2067,  0.5483,  ...,  0.4641,  0.7395,  0.6511]],

         [[-0.1075, -0.4247, -0.1076,  ...,  0.9943,  0.4487,  0.0652],
          [-0.1417, -0.0231,  0.1928,  ...,  1.0102,  0.4691,  0.6308]],

         [[-0.2583, -0.0451,  0.4751,  ...,  0.3055,  0.6818,  0.0462],
          [-0.1615, -0.3942,  0.0142,  ...,  0.4237,  0.1733,  0.0668]]],


        [[[ 0.5430,  0.3184, -0.5676,  ...,  0.2581,  0.3426,  0.6960],
          [ 0.6594,  0.0911,  0.1830,  ...,  0.3484,  0.0911,  0.6050]],

         [[-0.5537,  0.3786, -0.0609,  ...,  0.4892,  0.2395,  0.3197],
          [ 0.1442, -0.0283, -0.2131,  ...,  0.0903,  0.6661,  0.3318]],

         [[ 0.0036,  0.4066, -0.0539,  ...,  0.8522,  0.8551,  0.2235],
          [ 0.0255,  0.7039,  0.0295,  ...,  0.9341,  0.3378,  0.0886]],

         ...,

         [[ 0.4078, -0.0985,  0.2745,  ...,  0.3294,  0.8374,  0.5120],
          [ 0.4254,  0.2032,  0.3038,  ...,  0.8950,  1.0377,  0.2241]],

         [[-0.0539, -0.5665,  0.1085,  ...,  0.0518,  0.3444,  0.2643],
          [ 0.1398,  0.1191, -0.1709,  ...,  0.8697,  1.0019,  0.4910]],

         [[ 0.0213, -0.3444,  0.0692,  ...,  0.3700,  0.6329,  0.0691],
          [-0.1091,  0.1720,  0.3630,  ...,  0.5351,  0.3244,  0.1368]]]])
DESIRED: (shape=torch.Size([2, 8, 2, 16]), dtype=torch.float32)
tensor([[[[ 0.1843, -0.0502,  0.0342,  ...,  0.9349,  0.4456,  0.1030],
          [ 0.2245, -0.0272, -0.3182,  ...,  0.5871,  0.6454,  0.3542]],

         [[-0.0957,  0.3120, -0.0456,  ...,  0.9490,  0.0492,  0.4009],
          [ 0.2659,  0.2669, -0.8646,  ...,  0.4582,  1.5274,  0.1975]],

         [[ 0.0233,  0.2376, -0.0633,  ...,  0.7743,  0.7001,  0.7724],
          [-0.0211,  0.1469,  0.2029,  ...,  1.1317,  0.5389,  0.4552]],

         ...,

         [[ 0.5041,  0.1575,  0.1124,  ...,  0.4221,  0.1973,  0.4496],
          [ 0.1571,  0.2067,  0.5483,  ...,  0.3344,  0.3358,  0.5952]],

         [[-0.1075, -0.4247, -0.1076,  ...,  0.6561,  0.1041,  0.0548],
          [-0.1417, -0.0231,  0.1928,  ...,  0.7718,  0.1501,  0.5909]],

         [[-0.2583, -0.0451,  0.4751,  ...,  0.3827,  0.7516,  0.1604],
          [-0.1615, -0.3942,  0.0142,  ...,  0.5105,  0.1838,  0.1814]]],


        [[[ 0.5430,  0.3184, -0.5676,  ...,  0.6942,  0.7532,  0.3955],
          [ 0.6594,  0.0911,  0.1830,  ...,  0.5988,  0.3080,  0.1001]],

         [[-0.5537,  0.3786, -0.0609,  ...,  0.3119,  0.3244,  0.2533],
          [ 0.1442, -0.0283, -0.2131,  ...,  0.0680,  0.8781,  0.2182]],

         [[ 0.0036,  0.4066, -0.0539,  ...,  1.0373,  0.9330,  0.5200],
          [ 0.0255,  0.7039,  0.0295,  ...,  0.9759,  0.4841,  0.3012]],

         ...,

         [[ 0.4078, -0.0985,  0.2745,  ...,  0.2733,  0.3001,  0.2751],
          [ 0.4254,  0.2032,  0.3038,  ...,  0.4192,  0.5018,  0.1312]],

         [[-0.0539, -0.5665,  0.1085,  ...,  0.0795,  0.0651,  0.2275],
          [ 0.1398,  0.1191, -0.1709,  ...,  0.5901,  0.1766,  0.4190]],

         [[ 0.0213, -0.3444,  0.0692,  ...,  0.4249,  0.6894,  0.1755],
          [-0.1091,  0.1720,  0.3630,  ...,  0.5838,  0.3321,  0.5946]]]])

2025-06-08 11:43:21.144520 GPU 5 64401 test begin: paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=False, )
[accuracy error] paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=False, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 497 / 512 (97.1%)
Greatest absolute difference: 1.617583155632019 at index (1, 0, 1, 7) (up to 0.01 allowed)
Greatest relative difference: 110.4923324584961 at index (0, 4, 0, 1) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2, 8, 2, 16]), dtype=torch.float32)
tensor([[[[ 2.0193e-04,  9.8739e-02, -2.0278e-01,  ...,  4.7181e-01,
            2.3265e-02,  2.2232e-01],
          [-1.3298e-01,  5.4222e-01, -3.2256e-03,  ...,  7.5529e-01,
            8.7567e-02,  3.9689e-01]],

         [[ 3.6946e-01,  8.7378e-01, -4.6880e-01,  ...,  2.2473e-01,
           -6.1630e-03,  2.9080e-02],
          [ 3.2016e-01,  7.6745e-01, -1.8068e-01,  ...,  1.4882e-01,
            2.8662e-01,  3.3765e-01]],

         [[ 5.9494e-01,  5.9371e-01, -2.8877e-01,  ...,  4.8221e-01,
            4.8789e-01,  7.0074e-01],
          [ 3.7792e-01,  6.8148e-01,  6.1505e-01,  ...,  7.6820e-01,
            3.9818e-02,  8.1657e-01]],

         ...,

         [[-3.6177e-01,  8.6845e-01, -1.1614e-01,  ...,  6.0514e-01,
           -4.1010e-01,  5.8772e-01],
          [-7.8720e-01,  6.9232e-01, -1.7352e-01,  ...,  3.5571e-01,
           -2.5675e-01,  3.2405e-01]],

         [[ 7.8888e-02,  3.9591e-01, -1.1095e-01,  ...,  2.7610e-01,
            5.4747e-01,  1.1819e-01],
          [-4.4468e-01,  1.0054e+00,  7.0873e-01,  ...,  1.0681e-01,
            1.4530e-01,  2.2785e-01]],

         [[-7.6429e-02,  2.3624e-01,  1.0194e-01,  ...,  5.2859e-01,
            4.9103e-02,  3.7343e-01],
          [-8.1000e-03,  4.9450e-02, -7.8186e-02,  ...,  1.6135e-01,
           -4.1891e-01,  3.1390e-01]]],


        [[[ 5.0470e-02,  4.6900e-01, -2.0462e-02,  ...,  5.8818e-01,
            9.3336e-02,  4.2849e-01],
          [-1.9016e-01,  3.6466e-01, -2.4983e-01,  ...,  4.5185e-01,
            3.1901e-02,  4.0654e-01]],

         [[-1.7583e-02,  2.0289e-01, -2.6451e-01,  ...,  2.1677e-01,
            7.3129e-01,  7.1825e-01],
          [ 5.3710e-02,  3.7047e-01, -7.7297e-01,  ...,  7.4028e-01,
            1.8555e-01,  3.3601e-01]],

         [[ 3.9512e-01,  5.0934e-01,  1.0082e-01,  ...,  4.2030e-01,
            4.8169e-01,  9.5628e-02],
          [ 2.1273e-01,  3.7078e-01,  2.3076e-01,  ...,  9.9689e-01,
            3.4151e-01,  1.6907e-01]],

         ...,

         [[-5.8356e-01,  5.6201e-01, -1.8793e-01,  ...,  5.2089e-01,
           -3.5459e-01,  4.9917e-01],
          [-4.7004e-01,  1.0024e+00, -1.6078e-01,  ...,  4.4025e-01,
            2.7171e-02,  2.4098e-01]],

         [[-8.5235e-01,  8.8008e-01,  1.8585e-01,  ...,  9.8136e-02,
            3.0652e-01,  3.1073e-01],
          [-2.2910e-01,  4.0546e-01,  1.9721e-01,  ...,  2.8373e-01,
            1.2655e-02,  2.2122e-01]],

         [[-3.7627e-01,  4.2709e-01, -2.5688e-02,  ...,  8.8328e-01,
           -2.4644e-01,  2.4434e-01],
          [-7.3832e-02,  4.7825e-01, -6.8433e-02,  ...,  7.9764e-01,
            4.4216e-01,  2.9812e-01]]]])
DESIRED: (shape=torch.Size([2, 8, 2, 16]), dtype=torch.float32)
tensor([[[[-0.1446, -0.5649,  0.0195,  ...,  0.2061,  0.5167,  1.0688],
          [-0.1285,  0.0827, -0.1674,  ...,  0.4661,  0.4303,  1.0015]],

         [[ 0.4268,  0.3264, -0.7914,  ...,  0.4587,  0.7115,  0.1117],
          [ 0.3678,  0.1731, -0.5992,  ...,  0.6416,  0.8408,  0.4204]],

         [[ 0.4286, -0.2481, -0.3372,  ...,  0.1267,  0.9443,  0.5309],
          [ 0.4434,  0.2236,  0.7525,  ...,  0.2351,  0.5741,  0.7970]],

         ...,

         [[-0.4672,  0.2214, -0.0051,  ...,  1.1916,  0.6011,  0.9272],
          [-0.1396,  0.3406, -0.0573,  ...,  0.8475,  0.3504,  0.4587]],

         [[ 0.1827,  0.2030,  0.0415,  ...,  0.4499,  0.9789,  0.2714],
          [ 0.1337,  0.6108,  0.6860,  ...,  0.0438,  0.7069,  0.5189]],

         [[-0.5331, -0.0582,  0.0847,  ...,  0.3322,  0.4060,  0.6819],
          [-0.6235, -0.1658, -0.1997,  ...,  0.1192,  0.2098,  0.5432]]],


        [[[ 0.0688, -0.3741,  0.0570,  ...,  0.4660,  0.6175,  1.1234],
          [-0.1001, -0.0456, -0.2580,  ...,  0.2417,  0.6412,  0.9468]],

         [[ 0.0061, -0.1752, -0.2342,  ...,  0.8056,  0.5933,  0.3286],
          [ 0.0737,  0.1202, -0.6560,  ...,  0.7846,  0.8092,  0.7854]],

         [[ 0.3498, -0.1911,  0.1661,  ...,  0.0290,  0.8692,  0.2579],
          [ 0.1156,  0.0056,  0.2839,  ...,  0.1921,  0.8292,  0.1264]],

         ...,

         [[-0.1002, -0.1702, -0.1779,  ...,  0.5474,  0.5649,  1.1090],
          [ 0.1862,  0.0238, -0.1444,  ...,  0.3442,  0.5759,  0.1195]],

         [[-0.7108,  0.7805,  0.2528,  ...,  0.1843,  1.5727,  0.7889],
          [-0.3506,  0.3087,  0.0536,  ...,  0.4491,  0.6569,  0.5556]],

         [[ 0.1135,  0.1875, -0.0743,  ...,  0.5058,  0.3048,  0.5242],
          [ 0.1162, -0.0269,  0.1087,  ...,  0.5767,  0.5482,  0.4767]]]])

2025-06-08 11:43:21.221459 GPU 5 64405 test begin: paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=False, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([2, 8, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=False, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 492 / 512 (96.1%)
Greatest absolute difference: 1.5675289630889893 at index (1, 7, 1, 3) (up to 0.01 allowed)
Greatest relative difference: 183.19818115234375 at index (1, 4, 1, 5) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2, 8, 2, 16]), dtype=torch.float32)
tensor([[[[-0.4474,  0.2825,  0.2176,  ...,  0.3144, -0.0903,  0.2708],
          [ 0.0871,  0.9662, -0.0103,  ...,  0.2549,  0.0329,  0.0207]],

         [[-0.1192,  0.2950, -0.3528,  ...,  0.3616, -0.4729,  1.0684],
          [-0.0458,  0.4699, -0.2996,  ...,  0.1470,  0.3532,  1.5080]],

         [[ 0.5666,  0.9387, -0.3257,  ...,  1.1733,  0.1605,  0.8623],
          [ 0.2721,  0.7746, -0.2853,  ...,  0.4329, -0.0552,  1.0168]],

         ...,

         [[ 0.0247,  0.6360, -0.3175,  ...,  0.2159, -0.0125,  0.4613],
          [-0.4341,  0.4906, -0.1042,  ...,  0.1351,  0.1177,  0.3234]],

         [[-0.4410,  0.3864, -0.0897,  ...,  0.1800, -0.1377,  0.1311],
          [-0.8237,  0.7522, -0.3948,  ...,  0.2446, -0.1431,  0.1453]],

         [[ 0.1808,  0.0994, -0.0886,  ...,  0.3414,  0.5665,  0.6382],
          [ 0.5838,  0.0815,  0.1261,  ...,  0.3589,  0.1879,  0.3135]]],


        [[[ 0.3494,  0.5954,  0.0620,  ...,  0.4162,  0.5128,  0.2133],
          [-0.2620,  0.2742, -0.2962,  ...,  0.4825, -0.0599,  0.1455]],

         [[ 0.0579,  0.3845, -0.3748,  ...,  0.2616, -0.6010,  0.8840],
          [ 0.2111,  0.5438, -0.8505,  ...,  0.2876, -0.0431,  1.2047]],

         [[ 0.3318,  0.5030, -0.5960,  ...,  1.1687,  0.0754,  0.9024],
          [ 0.2650,  0.5114,  0.0310,  ...,  1.1762,  0.6665,  1.1041]],

         ...,

         [[-0.1690,  0.8365, -0.2468,  ...,  0.0552,  0.1455,  0.7827],
          [ 0.1780,  0.5957, -0.2737,  ...,  0.1482, -0.0031,  0.8471]],

         [[-0.5794,  0.7050, -0.1366,  ...,  0.1692,  0.7500,  0.7865],
          [-0.0864,  0.1083,  0.2631,  ...,  0.0598,  0.5609,  0.6024]],

         [[ 0.5662,  0.1369, -0.0731,  ...,  0.5758, -0.0040,  0.0803],
          [-0.0900,  0.0904,  0.6494,  ...,  0.3892,  0.4781,  0.5857]]]])
DESIRED: (shape=torch.Size([2, 8, 2, 16]), dtype=torch.float32)
tensor([[[[-0.2338, -0.6408, -0.3554,  ...,  0.3773,  0.1742,  0.4801],
          [ 0.5167, -0.5358,  0.3121,  ...,  0.3179,  0.0970,  0.6255]],

         [[-0.2358, -0.4004, -0.8956,  ...,  1.0224,  0.5912,  0.4203],
          [-0.2978,  0.1798, -0.2903,  ...,  0.6870,  1.3606,  0.3528]],

         [[ 0.5574,  0.1783, -0.0405,  ...,  1.1311,  0.6243,  0.3695],
          [ 0.2726, -0.3247, -0.6488,  ...,  0.5147,  1.0295,  0.4371]],

         ...,

         [[ 0.2869,  0.1911, -0.0510,  ...,  0.3872,  0.6246,  0.4752],
          [-0.5799,  0.4693, -0.2400,  ...,  0.2516,  0.2349,  0.0870]],

         [[-0.8661,  0.2664, -0.2978,  ...,  0.3591,  0.1300,  1.3879],
          [-0.3290,  0.6782,  0.0821,  ...,  0.3579,  0.0888,  0.9793]],

         [[ 0.2417, -0.0208,  0.1013,  ...,  0.2459,  0.7021,  0.8753],
          [ 0.3879, -0.0029, -0.0486,  ...,  0.3604,  0.4888,  0.8589]]],


        [[[ 0.3207, -0.2580, -0.0434,  ...,  0.8321,  0.3472,  0.7175],
          [-0.2891,  0.0345,  0.2144,  ...,  0.3909,  0.1035,  0.7891]],

         [[ 0.0848,  0.0557, -0.6928,  ...,  0.3362,  0.7575,  0.5356],
          [-0.0175, -0.2265, -0.0914,  ...,  0.6166,  1.2615,  0.3154]],

         [[ 0.3128, -0.1394, -0.0430,  ...,  1.4675,  0.4890,  0.6442],
          [ 0.2259,  0.1823, -0.0275,  ...,  1.2021,  1.3804,  0.7287]],

         ...,

         [[ 0.0357,  0.1018, -0.1533,  ...,  0.2391,  0.3818,  0.4356],
          [ 0.1306,  0.1418, -0.2175,  ...,  0.3867,  0.5602,  0.7323]],

         [[-0.0331,  0.4109, -0.4318,  ...,  0.1713,  0.5031,  0.5266],
          [-0.0507, -0.0434,  0.1416,  ...,  0.2004,  0.4314,  0.5045]],

         [[ 0.6401,  0.0080, -0.3792,  ...,  0.5948,  0.3163,  0.8107],
          [ 0.0673,  0.0215,  0.7041,  ...,  0.5458,  0.5723,  0.7253]]]])

2025-06-08 11:43:21.222008 GPU 5 64402 test begin: paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 4, 8],"float32"), None, Tensor([2, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=False, )
outputs format not support
[accuracy error] paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 4, 8],"float32"), None, Tensor([2, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=False, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 245 / 512 (47.9%)
Greatest absolute difference: 1.3972793817520142 at index (1, 1, 1, 5) (up to 0.01 allowed)
Greatest relative difference: 5.632023334503174 at index (0, 6, 1, 7) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2, 8, 4, 8]), dtype=torch.float32)
tensor([[[[-0.4731,  0.3415,  0.7332,  ...,  0.0132,  0.6144,  0.3353],
          [ 0.2834,  0.1151,  0.7079,  ...,  0.1225,  1.0371,  0.1795],
          [-0.5801,  0.7311,  0.6643,  ...,  0.0206,  0.5110,  0.2207],
          [-0.4124,  0.2879,  0.0511,  ...,  0.0903,  0.8534,  0.2186]],

         [[ 0.2442, -0.6388, -0.6709,  ...,  0.1845,  0.4531,  0.1705],
          [-0.2630, -0.2290, -0.4894,  ...,  0.1188,  0.4450,  0.6240],
          [-0.3191, -0.5855, -0.1262,  ...,  0.1630,  0.1132,  0.9274],
          [-0.2068,  0.8537, -0.5058,  ...,  0.1591,  0.4298,  0.4854]],

         [[ 0.0559,  0.1437,  0.0302,  ...,  0.3561,  0.4967,  0.1993],
          [ 0.2222,  0.4169,  0.4675,  ...,  0.3389,  0.4163,  0.1393],
          [-0.0615,  0.0031,  0.0146,  ...,  0.1921,  0.2098,  0.2249],
          [ 0.6112,  0.3386,  0.5556,  ...,  0.2123,  0.4574,  0.2008]],

         ...,

         [[ 0.4025,  0.0202, -0.3662,  ...,  0.5259,  0.1731,  0.1113],
          [ 0.1320,  0.2271, -0.1633,  ...,  0.8585,  0.1671,  0.0412],
          [ 0.7728, -0.0309,  0.0073,  ...,  0.3220,  0.0247,  0.1374],
          [ 0.4978, -0.1144, -0.0721,  ...,  0.6123,  0.1642,  0.1102]],

         [[ 0.6529, -0.1330,  0.0565,  ...,  0.5457,  0.4428,  0.4324],
          [-0.3675, -0.5286, -0.5182,  ...,  0.7986,  0.6531,  0.3178],
          [-0.0807, -0.6616, -0.7037,  ...,  0.4603,  0.6389,  0.8799],
          [ 0.3747, -0.4865,  0.0336,  ...,  0.7953,  0.9111,  0.8612]],

         [[-0.5664,  0.4876,  0.2311,  ...,  1.1709,  0.4427,  1.1302],
          [ 0.0695, -0.0333,  0.2489,  ...,  0.2213,  0.5640,  0.5056],
          [-0.3833,  0.1485,  0.1840,  ...,  0.9750,  0.4271,  0.6760],
          [-0.3375, -0.0125,  0.0083,  ...,  0.7040,  0.0120,  0.6825]]],


        [[[ 0.1251,  0.0120,  0.4860,  ...,  0.1088,  0.8001,  0.2797],
          [-0.5132,  0.1877,  0.7498,  ...,  0.0525,  0.9608,  0.2304],
          [-0.1624,  0.1381,  0.4039,  ...,  0.0583,  0.5639,  0.3259],
          [ 0.2816, -0.1072, -0.0201,  ...,  0.0747,  0.2171,  0.4009]],

         [[-0.1458, -0.1918, -0.2199,  ...,  0.1903,  0.2890,  0.8272],
          [-0.2748,  0.1709, -0.1999,  ...,  0.3342,  0.1915,  0.6325],
          [-0.0085,  0.4737, -0.3290,  ...,  0.1738,  0.3451,  0.2759],
          [-0.2416, -0.5665, -0.1204,  ...,  0.2390,  0.2129,  0.8270]],

         [[-0.0537,  0.3894,  0.1407,  ...,  0.2581,  0.9826,  0.1687],
          [ 0.1998, -0.0066,  0.4751,  ...,  0.1182,  0.9723,  0.1715],
          [-0.1836,  0.2776, -0.1997,  ...,  0.4711,  0.5373,  0.1724],
          [ 0.2259,  0.2580,  0.4999,  ...,  0.2674,  0.7730,  0.0593]],

         ...,

         [[-0.0274,  0.5306,  0.2748,  ...,  1.0388,  0.0616,  0.1171],
          [ 0.6110,  0.2760, -0.0552,  ...,  1.1503,  0.0671,  0.0456],
          [ 0.2646,  0.1185,  0.0897,  ...,  1.1277,  0.0907,  0.0048],
          [ 0.4525,  0.3094,  0.1356,  ...,  0.5672,  0.1266,  0.0942]],

         [[ 0.1502, -0.4939, -0.5286,  ...,  0.9193,  0.4489,  0.3878],
          [ 0.2376, -0.5296, -0.0388,  ...,  0.8789,  0.5784,  0.2985],
          [ 0.4706, -0.0766, -0.3389,  ...,  0.2285,  1.0058,  0.9453],
          [ 0.0341, -0.3245, -0.5246,  ...,  0.7514,  0.6675,  0.6851]],

         [[-0.7015,  0.2917, -0.1461,  ...,  0.3440,  0.6455,  0.3352],
          [-0.4513, -0.1899,  0.2913,  ...,  0.2462,  0.5054,  0.5551],
          [-0.3004,  0.3252,  0.2576,  ...,  1.1222,  0.7018,  0.1434],
          [-0.3678, -0.0378,  0.1799,  ...,  0.5880,  0.7218,  0.5184]]]])
DESIRED: (shape=torch.Size([2, 8, 4, 8]), dtype=torch.float32)
tensor([[[[-0.4731,  0.3415,  0.7332,  ...,  0.2129,  0.3406,  0.7325],
          [ 0.2834,  0.1151,  0.7079,  ...,  0.9908,  0.8242,  0.2091],
          [-0.5801,  0.7311,  0.6643,  ...,  0.3963,  0.2576,  0.4677],
          [-0.4124,  0.2879,  0.0511,  ...,  0.7957,  0.9284,  0.4016]],

         [[ 0.2442, -0.6388, -0.6709,  ...,  0.8538,  0.1929,  0.3857],
          [-0.2630, -0.2290, -0.4894,  ...,  0.5748,  0.7341,  0.6911],
          [-0.3191, -0.5855, -0.1262,  ...,  0.7510,  0.1817,  1.0518],
          [-0.2068,  0.8537, -0.5058,  ...,  0.9323,  0.6028,  0.6543]],

         [[ 0.0559,  0.1437,  0.0302,  ...,  0.7016,  0.5791,  0.2597],
          [ 0.2222,  0.4169,  0.4675,  ...,  0.4710,  0.2815,  0.3043],
          [-0.0615,  0.0031,  0.0146,  ...,  0.4307,  0.2437,  0.3147],
          [ 0.6112,  0.3386,  0.5556,  ...,  0.2407,  0.2900,  0.2328]],

         ...,

         [[ 0.4025,  0.0202, -0.3662,  ...,  0.3334,  0.7552,  0.7839],
          [ 0.1320,  0.2271, -0.1633,  ...,  0.4573,  0.7067,  0.2868],
          [ 0.7728, -0.0309,  0.0073,  ...,  0.2235,  0.1007,  0.9607],
          [ 0.4978, -0.1144, -0.0721,  ...,  0.4500,  0.6840,  0.7844]],

         [[ 0.6529, -0.1330,  0.0565,  ...,  0.8164,  0.3818,  0.1312],
          [-0.3675, -0.5286, -0.5182,  ...,  0.9625,  0.5835,  0.0479],
          [-0.0807, -0.6616, -0.7037,  ...,  0.3065,  0.5775,  0.4369],
          [ 0.3747, -0.4865,  0.0336,  ...,  0.9863,  0.7883,  0.3718]],

         [[-0.5664,  0.4876,  0.2311,  ...,  1.0225,  0.2147,  1.6056],
          [ 0.0695, -0.0333,  0.2489,  ...,  0.2869,  0.2791,  0.7466],
          [-0.3833,  0.1485,  0.1840,  ...,  1.0437,  0.2119,  0.9454],
          [-0.3375, -0.0125,  0.0083,  ...,  0.8430,  0.0056,  0.9449]]],


        [[[ 0.1251,  0.0120,  0.4860,  ...,  0.8506,  0.6641,  0.6208],
          [-0.5132,  0.1877,  0.7498,  ...,  0.4695,  0.7193,  0.3115],
          [-0.1624,  0.1381,  0.4039,  ...,  0.4979,  0.4392,  0.6361],
          [ 0.2816, -0.1072, -0.0201,  ...,  0.5467,  0.2517,  0.6874]],

         [[-0.1458, -0.1918, -0.2199,  ...,  0.9455,  0.7920,  0.9038],
          [-0.2748,  0.1709, -0.1999,  ...,  1.7315,  0.3503,  0.7497],
          [-0.0085,  0.4737, -0.3290,  ...,  0.9541,  0.7321,  0.2544],
          [-0.2416, -0.5665, -0.1204,  ...,  1.1424,  0.7172,  0.8373]],

         [[-0.0537,  0.3894,  0.1407,  ...,  0.3082,  1.1082,  0.0657],
          [ 0.1998, -0.0066,  0.4751,  ...,  0.2710,  0.9418,  0.2782],
          [-0.1836,  0.2776, -0.1997,  ...,  0.8667,  0.7335,  0.0908],
          [ 0.2259,  0.2580,  0.4999,  ...,  0.4213,  0.6924,  0.0680]],

         ...,

         [[-0.0274,  0.5306,  0.2748,  ...,  0.4388,  0.2214,  0.8215],
          [ 0.6110,  0.2760, -0.0552,  ...,  0.6254,  0.2824,  0.3188],
          [ 0.2646,  0.1185,  0.0897,  ...,  0.6812,  0.3627,  0.0379],
          [ 0.4525,  0.3094,  0.1356,  ...,  0.2308,  0.5051,  0.6583]],

         [[ 0.1502, -0.4939, -0.5286,  ...,  1.1877,  0.4069,  0.4410],
          [ 0.2376, -0.5296, -0.0388,  ...,  1.0956,  0.5025,  0.1119],
          [ 0.4706, -0.0766, -0.3389,  ...,  0.3273,  0.8830,  0.5084],
          [ 0.0341, -0.3245, -0.5246,  ...,  1.0259,  0.5962,  0.3784]],

         [[-0.7015,  0.2917, -0.1461,  ...,  0.1896,  0.3717,  0.4789],
          [-0.4513, -0.1899,  0.2913,  ...,  0.4332,  0.2418,  0.7938],
          [-0.3004,  0.3252,  0.2576,  ...,  1.0860,  0.3536,  0.1992],
          [-0.3678, -0.0378,  0.1799,  ...,  0.7245,  0.3740,  0.7204]]]])

2025-06-08 11:43:21.270891 GPU 5 64407 test begin: paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 4, 8],"float32"), None, Tensor([2, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=False, )
outputs format not support
[accuracy error] paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 4, 8],"float32"), None, Tensor([2, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=False, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 495 / 512 (96.7%)
Greatest absolute difference: 1.8450422286987305 at index (1, 1, 3, 6) (up to 0.01 allowed)
Greatest relative difference: 84.79661560058594 at index (1, 5, 3, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2, 8, 4, 8]), dtype=torch.float32)
tensor([[[[ 3.9749e-02,  2.0479e-01, -4.2551e-02,  ...,  1.0676e+00,
           -5.0823e-01,  5.4145e-01],
          [ 7.0505e-02,  2.7497e-01,  2.8373e-01,  ...,  8.9138e-01,
           -1.8342e-01,  4.8059e-01],
          [ 5.2586e-02,  6.3983e-02, -2.9699e-01,  ...,  1.4537e+00,
           -4.4839e-01,  4.5239e-01],
          [ 2.3388e-01,  4.2601e-01, -1.8031e-01,  ...,  6.3983e-01,
           -1.3424e-01,  3.4431e-01]],

         [[-4.1197e-01,  8.7423e-01,  4.8571e-01,  ...,  1.0863e+00,
           -6.9478e-01,  3.8781e-01],
          [-1.1390e-01,  6.2571e-01, -5.5281e-01,  ...,  7.9353e-01,
           -2.2089e-01,  1.5964e-01],
          [ 4.7948e-01,  3.9171e-01,  3.8617e-01,  ...,  1.3212e+00,
           -5.7666e-01,  7.6168e-01],
          [ 1.7816e-01,  9.5598e-01, -3.5237e-01,  ...,  8.0721e-01,
           -1.2154e-01,  2.3549e-01]],

         [[-6.6944e-02,  8.5267e-02,  5.9616e-01,  ...,  4.3344e-01,
            5.7580e-01,  3.2346e-01],
          [ 2.2733e-02,  9.6758e-02,  4.1405e-01,  ...,  8.6667e-02,
            1.6769e-01,  5.4629e-01],
          [-2.9005e-01,  2.1980e-01,  2.0877e-01,  ...,  2.8094e-01,
            1.2129e-01,  8.8507e-01],
          [-1.7299e-01,  1.7533e-01, -1.9427e-02,  ...,  4.3224e-01,
            5.3973e-02,  3.1222e-01]],

         ...,

         [[ 3.9337e-01,  1.4977e+00, -2.2582e-01,  ...,  5.0363e-01,
            7.6651e-02,  2.7280e-01],
          [-6.1455e-02,  3.7483e-01, -1.2414e-01,  ...,  6.2003e-01,
            3.4465e-01,  3.3481e-01],
          [ 4.8906e-01,  1.3085e+00, -4.6877e-01,  ...,  1.2290e+00,
            6.8135e-02,  2.8377e-01],
          [ 5.2954e-02,  4.4620e-01, -2.2135e-01,  ...,  6.4949e-01,
            9.8740e-02,  1.9500e-01]],

         [[ 5.8155e-01,  8.1001e-01,  2.3771e-01,  ...,  1.7799e-01,
           -1.6229e-01,  4.3511e-01],
          [ 9.6368e-02,  2.0696e-01,  2.2523e-01,  ...,  8.1396e-01,
           -1.1516e-01,  4.4061e-01],
          [ 4.0032e-01,  5.3603e-01, -1.8983e-01,  ...,  3.9593e-01,
            4.3926e-02,  8.2665e-01],
          [ 3.1125e-01,  6.3352e-01, -1.4363e-01,  ...,  6.4255e-01,
            4.2369e-02,  2.8581e-01]],

         [[ 1.1524e-01,  4.4090e-01, -3.3635e-01,  ...,  4.0712e-01,
           -3.0953e-01,  4.3603e-01],
          [ 6.0654e-01,  4.8777e-01, -2.0799e-01,  ...,  2.0577e-01,
           -2.3085e-01,  2.1824e-01],
          [ 3.1283e-01,  1.7367e-01, -6.2783e-01,  ...,  5.7085e-01,
           -3.0232e-01,  7.2371e-01],
          [ 3.3585e-01,  7.2913e-01, -1.8711e-01,  ...,  6.4123e-01,
           -3.9988e-01,  6.8336e-01]]],


        [[[-7.7788e-02,  4.4950e-01, -3.2824e-01,  ...,  7.3201e-01,
           -5.0556e-01,  7.1708e-01],
          [ 1.9247e-01,  3.2621e-01, -8.3754e-02,  ...,  6.6139e-01,
           -3.7607e-01,  4.1952e-01],
          [ 1.1781e-01,  4.3770e-01, -3.7841e-02,  ...,  2.3933e-01,
           -1.2315e-01,  8.9509e-02],
          [ 3.0686e-01,  6.8162e-01,  2.0845e-02,  ...,  7.8441e-01,
           -6.6592e-01,  5.4007e-01]],

         [[ 1.5789e-01,  2.1274e-01, -2.1851e-01,  ...,  5.4330e-01,
           -6.7539e-01,  8.2224e-01],
          [-1.9983e-01,  9.7020e-01,  3.3153e-01,  ...,  1.6536e+00,
           -1.3458e-01,  6.3033e-01],
          [ 2.7756e-01,  5.9567e-01, -3.3198e-02,  ...,  1.2647e+00,
           -4.4318e-01,  1.0101e+00],
          [-1.0199e-01,  7.2152e-01,  1.3202e-01,  ...,  4.3714e-01,
           -6.8306e-01,  1.3213e+00]],

         [[-3.3805e-02,  1.5428e-01,  2.7132e-01,  ...,  2.1538e-01,
            3.5848e-02,  1.0343e+00],
          [-2.9797e-01,  2.9576e-01,  5.2127e-03,  ...,  2.7016e-01,
            1.1405e-01,  3.7113e-01],
          [ 8.9764e-05,  7.2825e-02,  5.4520e-01,  ...,  2.2048e-01,
           -5.2195e-02,  5.0446e-01],
          [-7.2470e-02,  1.2471e-01,  2.5261e-01,  ...,  1.7412e-01,
            1.0043e-01,  5.9460e-01]],

         ...,

         [[ 4.3341e-01,  1.4926e+00, -3.0105e-01,  ...,  1.6986e-01,
            3.7475e-01,  3.6222e-01],
          [ 5.2518e-01,  7.9521e-01, -3.3699e-01,  ...,  8.3086e-01,
            3.0224e-01,  2.0074e-01],
          [-1.2647e-01,  9.9226e-01, -3.3987e-01,  ...,  8.2692e-01,
            9.6959e-02,  1.3243e-01],
          [ 2.1972e-01,  3.1744e-01,  3.4389e-02,  ...,  6.7697e-01,
            1.9895e-01,  3.3914e-01]],

         [[ 3.5514e-01,  5.2461e-01,  4.8495e-01,  ...,  6.3144e-01,
            5.3016e-02,  2.4891e-01],
          [-4.3043e-02,  3.6155e-01,  2.1427e-01,  ...,  6.8907e-01,
            4.1225e-02,  5.8328e-01],
          [ 6.6644e-01,  4.8125e-01, -4.5762e-01,  ...,  1.0001e+00,
           -1.1008e-01,  1.1341e-01],
          [ 9.9864e-02,  2.1215e-01,  3.8703e-02,  ...,  6.9767e-01,
           -6.6092e-02,  6.6794e-01]],

         [[ 5.2251e-01,  7.4585e-01, -2.4333e-01,  ...,  1.1287e-01,
           -3.4387e-01,  1.7571e-01],
          [ 5.7459e-01,  5.9813e-01, -2.2558e-01,  ...,  2.0336e-01,
           -7.4603e-01,  7.9961e-01],
          [ 1.2688e-01,  1.0235e-01, -1.8080e-01,  ...,  5.0202e-01,
           -4.1212e-01,  4.6116e-01],
          [ 3.4325e-01,  2.7782e-01, -1.5414e-01,  ...,  4.1091e-01,
           -2.9347e-01,  6.0822e-01]]]])
DESIRED: (shape=torch.Size([2, 8, 4, 8]), dtype=torch.float32)
tensor([[[[-0.0058, -0.1449, -0.1177,  ...,  0.5682,  0.4927,  0.0903],
          [ 0.0857, -0.0995,  0.0691,  ...,  0.5948,  0.7706,  0.0462],
          [-0.0829, -0.3476, -0.0511,  ...,  0.6039,  0.4530,  0.1435],
          [ 0.2341,  0.0832, -0.1104,  ...,  0.4076,  0.3697,  0.0823]],

         [[-0.2033,  0.5703,  0.6359,  ...,  1.0022,  0.7187,  0.5810],
          [ 0.1143,  0.1718,  0.1303,  ...,  0.9166,  0.2094,  0.6170],
          [ 0.0996, -0.1927,  0.2043,  ...,  0.4211,  0.8878,  0.5389],
          [ 0.3946,  0.3076,  0.1615,  ...,  0.8733,  0.4027,  0.5143]],

         [[-0.2616, -0.0540,  0.2163,  ...,  0.2841,  1.4690,  0.2771],
          [ 0.0029, -0.0226,  0.3839,  ...,  0.0752,  0.8932,  0.5146],
          [-0.1135,  0.1136,  0.5380,  ...,  0.2994,  1.0869,  1.0756],
          [-0.2717,  0.0277,  0.2098,  ...,  0.3015,  0.4202,  0.4863]],

         ...,

         [[ 0.5152,  0.3361, -0.0124,  ...,  1.0749,  0.3777,  1.0705],
          [-0.1341,  0.0838, -0.3657,  ...,  0.5759,  0.4663,  0.6744],
          [ 0.4213, -0.4093, -0.1028,  ...,  1.3833,  0.1574,  1.3605],
          [-0.1191,  0.2517,  0.0265,  ...,  0.2875,  0.4851,  0.9838]],

         [[ 0.6919,  0.3698,  0.0264,  ...,  0.4100,  0.5288,  0.1113],
          [ 0.0322, -0.0532,  0.1798,  ...,  0.3660,  0.6799,  0.2000],
          [ 0.4336,  0.1802, -0.4069,  ...,  0.3480,  0.8439,  0.2558],
          [ 0.3512,  0.2419,  0.0024,  ...,  0.5285,  0.4165,  0.2093]],

         [[ 0.0901,  0.3039, -0.2633,  ...,  0.3231,  0.2712,  0.4406],
          [ 0.6240,  0.1721, -0.1140,  ...,  0.2761,  0.1802,  0.2955],
          [ 0.2562, -0.1536, -0.5244,  ...,  0.5128,  0.2056,  0.5542],
          [ 0.3359,  0.3776, -0.2995,  ...,  0.6883,  0.8015,  0.5698]]],


        [[[-0.0727,  0.2919, -0.2304,  ...,  0.4834,  0.6538,  0.1622],
          [ 0.0883,  0.1331,  0.0700,  ...,  0.1883,  0.5732,  0.1165],
          [ 0.1389,  0.3100,  0.3925,  ...,  0.2084,  0.5277,  0.1125],
          [ 0.2712,  0.3273,  0.0488,  ...,  0.4260,  0.5983,  0.1135]],

         [[ 0.0229, -0.0119, -0.2920,  ...,  0.1903,  0.4362,  0.6809],
          [-0.1711,  0.4195,  0.1511,  ...,  1.1732,  0.9242,  0.2988],
          [-0.0096,  0.1291,  0.0288,  ...,  0.4469,  1.1396,  0.7909],
          [ 0.1264,  0.4392, -0.2408,  ...,  0.5831,  1.1620,  0.7793]],

         [[-0.1418,  0.0109,  0.5098,  ...,  0.1142,  0.9731,  1.0627],
          [-0.1271,  0.1496,  0.0573,  ...,  0.2675,  0.4593,  0.4138],
          [-0.2598,  0.0073,  0.8471,  ...,  0.0238,  0.7705,  0.6396],
          [ 0.0077, -0.0104,  0.2495,  ...,  0.2091,  0.6866,  0.5360]],

         ...,

         [[ 0.6015,  0.5278, -0.3962,  ...,  0.7935,  0.5091,  1.0310],
          [ 0.4628, -0.7036, -0.3308,  ...,  0.8712,  0.3300,  0.7787],
          [-0.0557,  0.3429, -0.0183,  ...,  1.3306,  0.3420,  0.9762],
          [-0.0026, -0.1065, -0.1985,  ...,  0.1492,  0.3863,  0.5439]],

         [[ 0.3070,  0.2689,  0.4843,  ...,  0.2447,  0.7423,  0.1069],
          [-0.0831,  0.2863, -0.1800,  ...,  0.3066,  0.6834,  0.0418],
          [ 0.5599, -0.0876, -0.0125,  ...,  0.3670,  0.0862,  0.3247],
          [ 0.0539, -0.0302, -0.3109,  ...,  0.3395,  0.6406,  0.1252]],

         [[ 0.5774,  0.5144,  0.0685,  ...,  0.2243,  0.6319,  0.4202],
          [ 0.5915,  0.3254, -0.3812,  ...,  0.2335,  0.7931,  0.8889],
          [ 0.0668, -0.1100, -0.3188,  ...,  0.4049,  0.1437,  0.4870],
          [ 0.3404, -0.0459, -0.2660,  ...,  0.5009,  0.7255,  0.4534]]]])

2025-06-08 11:43:21.314718 GPU 5 64406 test begin: paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 4, 8],"float32"), None, Tensor([2, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=False, )
outputs format not support
[accuracy error] paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 4, 8],"float32"), None, Tensor([2, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=False, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 475 / 512 (92.8%)
Greatest absolute difference: 1.6712024211883545 at index (0, 6, 1, 4) (up to 0.01 allowed)
Greatest relative difference: 793.9847412109375 at index (1, 5, 1, 2) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2, 8, 4, 8]), dtype=torch.float32)
tensor([[[[ 2.4723e-03,  2.2783e-01, -6.7514e-02,  ...,  7.8418e-01,
            3.4408e-01,  7.4446e-02],
          [ 4.3055e-02,  2.1934e-01, -3.8071e-02,  ...,  1.6190e+00,
            6.3648e-01,  9.2152e-02],
          [-2.8579e-02,  7.3424e-02,  3.6435e-02,  ...,  1.0375e+00,
           -3.7294e-03,  4.4523e-02],
          [-1.1636e-01,  2.1883e-01, -3.1905e-01,  ...,  4.7860e-01,
           -2.8077e-01,  9.1733e-02]],

         [[ 6.7784e-01,  9.6260e-01, -2.0483e-01,  ...,  5.7488e-01,
            4.7536e-01,  8.2875e-01],
          [ 8.1627e-01,  7.9284e-01,  2.0360e-01,  ...,  4.8822e-01,
            1.2720e-01,  2.9736e-01],
          [ 7.2688e-01,  4.0695e-01,  4.8346e-01,  ...,  2.2135e-01,
            6.2642e-01,  8.8545e-01],
          [ 5.1682e-01,  5.7636e-01, -8.9108e-04,  ...,  4.7524e-01,
            5.2906e-01,  8.4600e-01]],

         [[ 3.7140e-02,  2.0609e-01, -1.2965e-01,  ...,  2.0874e-01,
            8.7221e-01,  3.4486e-01],
          [-2.6074e-02,  5.9583e-01,  1.2211e-01,  ...,  6.6561e-02,
            4.8017e-02,  4.5234e-01],
          [ 2.4252e-03,  5.9682e-01, -6.8664e-02,  ...,  5.9215e-01,
            6.9497e-01,  5.5915e-01],
          [ 7.9133e-02,  1.2935e-01,  1.9525e-01,  ...,  3.9724e-01,
            1.2964e-01,  6.0013e-01]],

         ...,

         [[ 8.8617e-02,  3.4402e-02, -4.6253e-01,  ...,  7.4289e-01,
            1.0988e-01,  5.9054e-02],
          [-1.7986e-01,  3.7709e-01, -4.7921e-01,  ...,  6.4141e-01,
            1.5196e-01,  2.8953e-02],
          [-1.4692e-01,  4.0573e-01, -2.2011e-01,  ...,  3.5453e-01,
            2.2265e-02,  1.9636e-02],
          [-1.1855e-01,  3.3206e-01, -1.8234e-01,  ...,  2.0750e-01,
            1.6007e-01,  6.9339e-02]],

         [[ 2.3669e-01,  5.1804e-01,  5.2150e-02,  ...,  7.0594e-01,
           -1.8758e-01,  4.6276e-01],
          [ 1.4689e-01,  1.2587e+00,  3.8491e-02,  ...,  4.9364e-01,
           -3.9654e-01,  8.7156e-01],
          [-1.3760e-01,  1.4342e+00,  6.0328e-02,  ...,  3.4691e-01,
           -5.1397e-01,  7.7294e-01],
          [-6.4260e-01,  9.8922e-01, -3.3314e-02,  ...,  8.2846e-01,
           -5.9341e-01,  7.2641e-01]],

         [[ 2.2761e-01,  7.6499e-01,  1.0281e-01,  ...,  5.0779e-01,
            1.7445e-01,  2.6943e-01],
          [ 5.7755e-01,  6.5731e-01, -7.8541e-02,  ...,  1.8549e-01,
            3.5828e-01,  5.8475e-01],
          [ 3.2427e-01,  3.8818e-01,  3.7682e-02,  ...,  8.7189e-01,
            2.6382e-01,  4.1710e-01],
          [-3.9503e-02,  3.0807e-01, -6.8135e-02,  ...,  9.5585e-01,
            9.7361e-02,  1.6660e-01]]],


        [[[-2.7498e-02,  1.2891e-01, -2.2247e-01,  ...,  5.8452e-01,
            3.4021e-01,  1.7673e-01],
          [ 4.2575e-02,  2.3331e-01, -1.4290e-01,  ...,  9.9385e-01,
           -8.3911e-02,  7.0174e-02],
          [ 1.2044e-01,  2.8103e-01, -1.8270e-01,  ...,  2.6258e-01,
            6.8328e-01,  9.5347e-02],
          [ 2.6804e-02,  1.7439e-01,  1.1754e-01,  ...,  4.5725e-01,
           -3.0444e-01,  1.2760e-01]],

         [[ 8.4067e-02,  2.7983e-01,  4.3774e-02,  ...,  5.9659e-01,
            3.8600e-01,  4.4735e-01],
          [-1.7830e-01,  5.9062e-01, -1.0331e-01,  ...,  4.7518e-01,
            1.8694e-01,  5.3006e-01],
          [ 6.7970e-01,  4.7467e-01,  5.2705e-01,  ...,  6.7362e-01,
            4.6282e-02,  1.6909e-01],
          [ 7.3707e-02,  5.8386e-02,  6.3191e-02,  ...,  5.5102e-01,
            3.2317e-01,  4.1161e-01]],

         [[ 2.6452e-01,  4.3882e-01,  1.8912e-01,  ...,  4.3673e-01,
            1.0148e-01,  4.8375e-01],
          [ 1.5417e-02,  1.2362e-01,  2.0235e-01,  ...,  2.8139e-01,
            6.5481e-01,  7.1386e-01],
          [ 2.7131e-01,  4.3112e-01,  1.3399e-01,  ...,  3.3878e-01,
            2.5835e-01,  9.1279e-02],
          [ 9.5003e-02,  5.9592e-01, -1.4676e-01,  ...,  2.6001e-01,
            2.6325e-01,  2.5883e-01]],

         ...,

         [[-3.8699e-02,  1.5268e-01, -3.0037e-01,  ...,  4.6825e-01,
            1.0791e-02,  6.7882e-02],
          [-4.9348e-01,  8.0524e-01, -2.2570e-01,  ...,  2.9300e-01,
           -2.1034e-02,  1.9376e-02],
          [-2.0307e-01,  3.8641e-01, -2.0322e-01,  ...,  3.0370e-01,
            2.1041e-01,  4.9927e-02],
          [-2.0148e-01,  6.1801e-01, -7.1959e-01,  ...,  5.6952e-01,
           -9.6151e-03,  1.4459e-02]],

         [[ 1.0170e-02,  6.5608e-01, -6.1755e-03,  ...,  4.0650e-01,
           -4.0666e-01,  4.4752e-01],
          [ 8.6946e-02,  7.9054e-01,  1.1656e-02,  ...,  5.6098e-01,
           -1.1512e-01,  2.3293e-01],
          [ 1.0167e-01,  9.0475e-01,  6.0681e-02,  ...,  7.1794e-01,
           -5.6111e-01,  8.7510e-01],
          [-2.4420e-01,  1.3200e+00,  2.1054e-02,  ...,  7.1632e-01,
           -6.5814e-01,  9.9364e-01]],

         [[ 3.6042e-01,  3.9690e-01, -7.3444e-02,  ...,  6.8446e-01,
            4.3690e-01,  6.8399e-01],
          [ 2.8079e-01,  5.4626e-01, -1.6758e-01,  ...,  1.4323e+00,
            1.8351e-01,  2.9407e-01],
          [ 1.8841e-01,  2.6578e-01,  5.4976e-02,  ...,  1.2659e+00,
            2.8961e-02,  8.5740e-02],
          [ 6.2268e-02,  8.0700e-02, -7.8964e-02,  ...,  1.0961e+00,
            4.2817e-01,  6.7317e-01]]]])
DESIRED: (shape=torch.Size([2, 8, 4, 8]), dtype=torch.float32)
tensor([[[[-3.5659e-02,  5.0966e-02, -1.3497e-02,  ...,  1.5457e-01,
            4.5822e-01,  7.8105e-01],
          [-6.3853e-02, -1.6166e-01, -2.6499e-01,  ...,  2.3667e-01,
            3.7722e-01,  3.7612e-01],
          [-1.1948e-01, -4.3341e-03,  2.0341e-01,  ...,  1.2142e-01,
            4.1178e-01,  7.0960e-01],
          [-5.5891e-02,  1.8408e-01,  1.3918e-02,  ...,  2.6684e-01,
            4.5708e-02,  1.3694e+00]],

         [[ 7.0570e-01,  2.7651e-01, -1.3136e-01,  ...,  7.3411e-01,
            4.6887e-01,  1.4208e+00],
          [ 7.6995e-01,  2.3166e-01,  1.9409e-01,  ...,  3.6222e-01,
            2.7063e-01,  5.0942e-01],
          [ 7.1046e-01, -1.8627e-01,  2.5573e-01,  ...,  3.1799e-01,
            7.2775e-01,  4.5455e-01],
          [ 5.2075e-01, -8.9303e-02, -1.6091e-01,  ...,  6.8420e-01,
            4.7930e-01,  7.3651e-01]],

         [[ 2.5005e-02,  2.4933e-02, -2.9084e-01,  ...,  2.3002e-01,
            4.1940e-01,  4.7784e-01],
          [ 8.5792e-02,  4.5021e-01,  2.9700e-01,  ...,  4.1618e-01,
            2.6918e-01,  1.1414e+00],
          [ 4.6028e-02,  1.3806e-01, -1.7109e-02,  ...,  7.7811e-01,
            5.0218e-01,  1.3002e+00],
          [ 6.8466e-02, -2.0837e-01,  2.6356e-01,  ...,  3.3587e-01,
            3.1068e-01,  1.0395e+00]],

         ...,

         [[ 4.2174e-02, -2.9448e-02, -5.8063e-01,  ...,  7.1251e-01,
            2.5049e-01,  7.1811e-01],
          [-4.2724e-01,  3.3850e-01, -5.9098e-01,  ...,  4.2194e-01,
            5.8590e-02,  5.7708e-01],
          [-4.1811e-01,  3.7359e-01, -1.3682e-01,  ...,  1.2087e-01,
            7.9755e-01,  3.2161e-01],
          [ 4.8690e-02,  2.9943e-01, -7.7921e-01,  ...,  2.0327e-01,
            2.4603e-01,  4.7002e-01]],

         [[-1.5026e-01, -5.7871e-01,  6.1719e-02,  ...,  8.5421e-01,
            9.4757e-02,  7.3764e-01],
          [ 3.4484e-01, -1.0281e-01,  3.2077e-02,  ...,  1.1907e+00,
            1.2663e-01,  8.4712e-01],
          [ 3.3009e-01,  4.7785e-01,  5.4513e-02,  ...,  1.0720e+00,
            9.2302e-02,  5.1482e-01],
          [-4.9450e-01,  1.3452e-01, -2.4330e-03,  ...,  1.5375e+00,
            3.6703e-02,  1.0384e+00]],

         [[ 2.9503e-01,  2.8739e-01,  7.9720e-02,  ...,  9.4325e-01,
            2.3492e-01,  1.2986e-01],
          [ 5.5198e-01, -1.0546e-02, -1.3040e-01,  ...,  7.0016e-02,
            1.1393e-01,  6.6458e-01],
          [ 2.0970e-01, -3.5641e-01,  9.0754e-03,  ...,  2.0129e-01,
            2.1546e-01,  3.3713e-01],
          [ 9.1036e-03, -5.4518e-01,  3.8990e-02,  ...,  8.9816e-01,
            1.2509e-01,  5.7575e-01]]],


        [[[-1.4353e-02, -2.6236e-02, -2.1524e-01,  ...,  1.8496e-01,
            4.4275e-01,  1.4698e+00],
          [ 1.4731e-02, -1.1518e-01, -4.0245e-02,  ...,  2.1348e-01,
            6.6094e-02,  7.4730e-01],
          [ 1.0663e-01, -3.2998e-02, -2.9799e-01,  ...,  4.4149e-02,
            3.7569e-01,  6.5707e-01],
          [ 5.2039e-02, -8.1546e-02,  9.9690e-02,  ...,  1.6548e-01,
            2.4826e-01,  8.7286e-01]],

         [[-1.3638e-02,  6.2696e-03,  1.9933e-01,  ...,  4.1805e-01,
            4.2284e-01,  7.9148e-01],
          [-6.8092e-02,  2.0876e-01,  1.8374e-02,  ...,  9.4339e-01,
            3.1283e-01,  1.3594e+00],
          [ 5.5917e-01, -2.3237e-01,  5.1595e-01,  ...,  5.4597e-01,
            3.4054e-01,  3.3116e-01],
          [-9.0746e-03, -4.2581e-01,  1.8171e-01,  ...,  6.1651e-01,
            3.7836e-01,  7.3284e-01]],

         [[ 2.6158e-01, -1.5478e-01,  2.6831e-01,  ...,  4.1391e-01,
            2.8780e-01,  9.1221e-01],
          [ 2.4492e-02, -8.6717e-02,  7.9600e-02,  ...,  2.8597e-01,
            5.5155e-01,  9.1432e-01],
          [ 1.6231e-01, -3.5425e-02,  1.5383e-01,  ...,  2.3012e-01,
            2.9315e-01,  3.4170e-01],
          [ 1.5583e-01,  2.3517e-01, -2.0037e-02,  ...,  4.7211e-01,
            1.8335e-01,  8.8924e-01]],

         ...,

         [[-1.9925e-01,  1.1968e-01, -3.0308e-01,  ...,  3.5092e-01,
            5.8303e-01,  6.3062e-01],
          [-4.6625e-01,  7.9181e-01,  2.8462e-04,  ...,  9.1686e-02,
            8.7560e-01,  3.3978e-01],
          [-3.2405e-01,  3.6727e-01, -8.4879e-01,  ...,  1.4365e-01,
            6.8296e-01,  3.9195e-01],
          [-2.5270e-01,  5.5277e-01, -2.7473e-02,  ...,  3.8790e-01,
            1.2480e-01,  7.9823e-01]],

         [[-1.0457e-01,  2.9804e-01,  2.8093e-02,  ...,  3.2845e-01,
            2.9288e-02,  8.7984e-01],
          [ 8.9118e-04, -2.0518e-01,  2.0233e-02,  ...,  8.9934e-01,
            3.7918e-02,  4.1528e-01],
          [-2.6217e-01,  3.6212e-01,  4.4681e-02,  ...,  4.0823e-01,
            1.0007e-01,  4.2793e-01],
          [-1.0663e-01,  3.2574e-01, -1.0959e-02,  ...,  1.2328e+00,
            7.7823e-02,  1.8374e-01]],

         [[ 2.9222e-01, -4.4358e-01, -1.3797e-01,  ...,  1.7091e-01,
            1.6381e-01,  4.2894e-01],
          [ 1.9509e-01, -6.7929e-01, -6.2694e-02,  ...,  7.2788e-01,
            6.3211e-02,  5.8946e-01],
          [ 9.8526e-02, -8.8992e-01,  8.3563e-02,  ...,  4.3854e-01,
            1.2982e-01,  6.3432e-01],
          [-9.8825e-02, -4.4149e-01, -1.2581e-01,  ...,  1.8250e-01,
            1.7253e-01,  4.9741e-01]]]])

2025-06-08 11:43:21.404865 GPU 5 64401 test begin: paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 4, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), None, Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=False, )
outputs format not support
[accuracy error] paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 4, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), None, Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=False, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 245 / 512 (47.9%)
Greatest absolute difference: 1.0258713960647583 at index (1, 1, 2, 4) (up to 0.01 allowed)
Greatest relative difference: 8.028552055358887 at index (0, 4, 0, 5) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2, 8, 4, 8]), dtype=torch.float32)
tensor([[[[ 0.5636,  0.1316, -0.2222,  ...,  0.3012,  0.5264,  0.8526],
          [ 0.4326,  0.0202, -0.0972,  ...,  0.4112,  0.2150,  0.8135],
          [ 0.1162,  0.1428, -0.1180,  ...,  0.2161,  0.3048,  0.5277],
          [-0.1427, -0.0535,  0.7217,  ...,  0.5028,  0.5717,  1.4104]],

         [[-0.4686,  0.3251,  0.4155,  ...,  0.9937,  1.1613,  0.1939],
          [ 0.3468, -0.2040,  0.3509,  ...,  0.7433,  1.6081,  0.4432],
          [-0.0258, -0.1873, -0.1259,  ...,  0.8022,  0.8812,  0.2602],
          [-0.1568, -0.1860,  0.0290,  ...,  1.0071,  1.2174,  0.3468]],

         [[-0.2907,  0.0210,  0.2360,  ...,  0.0531,  0.3533,  0.1363],
          [-0.3843,  0.1578, -0.6750,  ...,  0.2215,  0.2953,  0.1484],
          [-0.0113,  0.1288, -0.6786,  ...,  0.3750,  0.1778,  0.4481],
          [-0.0203,  0.0071, -0.1536,  ...,  0.3687,  0.2907,  0.4282]],

         ...,

         [[-0.4397,  0.1724,  0.0770,  ...,  0.0948,  0.6046,  0.4910],
          [-0.0509,  0.5420,  0.0252,  ...,  0.6936,  0.3136,  0.6663],
          [-0.7744,  0.6013,  0.0878,  ...,  0.6544,  0.6295,  0.5586],
          [-0.1370,  0.2101,  0.1373,  ...,  0.2060,  0.7707,  0.4952]],

         [[ 0.2522,  0.4827, -0.0051,  ...,  0.2999,  0.0480,  0.0639],
          [-0.0054,  0.2457, -0.5552,  ...,  0.6357,  0.3096,  0.1904],
          [ 0.0975, -0.0636,  0.0098,  ...,  0.3574,  0.2913,  0.2280],
          [ 0.3662,  0.3938, -0.1162,  ...,  0.2129,  0.2686,  0.4366]],

         [[-0.1652,  0.1656, -0.2087,  ...,  0.2091,  0.3065,  0.7851],
          [ 0.2250,  0.4251, -0.3159,  ...,  0.5688,  0.9281,  0.3685],
          [ 0.1891,  0.5482, -0.5655,  ...,  1.0970,  0.7265,  0.7789],
          [ 0.1036,  0.1090, -0.4273,  ...,  0.5066,  0.9437,  1.0758]]],


        [[[-0.1855,  0.0585,  0.3986,  ...,  0.5273,  0.6565,  1.1081],
          [ 0.2542,  0.2847, -0.4199,  ...,  0.4469,  0.5623,  0.6082],
          [ 0.2882, -0.0325,  0.7312,  ...,  0.6967,  0.6130,  1.2257],
          [ 0.2393, -0.0283, -0.2540,  ...,  0.7441,  0.7376,  0.5129]],

         [[-0.5854,  0.4750,  0.1945,  ...,  1.2595,  1.5204,  0.4869],
          [ 0.7306,  0.2358,  0.0816,  ...,  0.8509,  0.2263,  0.7294],
          [ 0.0800,  0.2782, -0.0416,  ...,  0.7240,  0.3093,  0.3590],
          [ 0.6102,  0.0494, -0.1290,  ...,  0.5893,  1.3317,  0.2366]],

         [[-0.0763, -0.2016,  0.0245,  ...,  0.1014,  0.5593,  0.0779],
          [-0.0389,  0.3428, -0.1617,  ...,  0.6132,  0.0381,  0.3884],
          [ 0.1258,  0.1900,  0.1599,  ...,  0.6292,  0.2488,  0.1544],
          [ 0.2845, -0.0365, -0.2787,  ...,  0.0611,  0.3744,  0.0419]],

         ...,

         [[-0.4709,  0.6006,  0.1440,  ...,  0.3940,  0.7833,  0.5201],
          [-0.0964,  0.5970,  0.0317,  ...,  0.5054,  0.4788,  0.1916],
          [-0.6400,  0.8504,  0.0774,  ...,  0.9653,  0.6079,  0.5132],
          [ 0.4252,  0.8612,  0.1327,  ...,  0.5618,  0.8590,  0.5731]],

         [[ 0.1851,  0.3459, -0.2417,  ...,  0.4272,  0.2898,  0.0459],
          [ 0.6891, -0.1534, -0.6456,  ...,  0.6083,  0.4261,  0.3334],
          [ 0.3203,  0.1046, -0.1854,  ...,  0.2140,  0.2090,  0.3438],
          [ 0.5980,  0.0671, -0.4025,  ...,  0.5062,  0.2636,  0.0322]],

         [[-0.1093,  0.2049, -0.2495,  ...,  0.6137,  0.3189,  0.8145],
          [-0.1233, -0.0315, -0.2736,  ...,  0.6195,  0.6247,  0.9459],
          [ 0.0975,  0.2205, -0.0549,  ...,  0.7066,  0.3195,  0.3952],
          [-0.1391, -0.1649, -0.0721,  ...,  0.7677,  0.7370,  0.7144]]]])
DESIRED: (shape=torch.Size([2, 8, 4, 8]), dtype=torch.float32)
tensor([[[[ 0.5636,  0.1316, -0.2222,  ...,  0.3104,  0.9794,  0.3115],
          [ 0.4326,  0.0202, -0.0972,  ...,  0.3338,  0.4018,  0.3273],
          [ 0.1162,  0.1428, -0.1180,  ...,  0.2499,  0.5641,  0.3470],
          [-0.1427, -0.0535,  0.7217,  ...,  0.3640,  0.7992,  0.7105]],

         [[-0.4686,  0.3251,  0.4155,  ...,  0.4140,  0.7835,  0.5602],
          [ 0.3468, -0.2040,  0.3509,  ...,  0.4989,  1.1151,  0.6901],
          [-0.0258, -0.1873, -0.1259,  ...,  0.5245,  0.6538,  0.6369],
          [-0.1568, -0.1860,  0.0290,  ...,  0.6377,  0.8760,  0.6340]],

         [[-0.2907,  0.0210,  0.2360,  ...,  0.0743,  0.6895,  0.3037],
          [-0.3843,  0.1578, -0.6750,  ...,  0.2235,  0.8979,  0.3987],
          [-0.0113,  0.1288, -0.6786,  ...,  0.5476,  0.6410,  0.6812],
          [-0.0203,  0.0071, -0.1536,  ...,  0.6848,  0.6956,  0.7075]],

         ...,

         [[-0.4397,  0.1724,  0.0770,  ...,  0.0249,  0.1813,  0.5317],
          [-0.0509,  0.5420,  0.0252,  ...,  0.6840,  0.1286,  0.8106],
          [-0.7744,  0.6013,  0.0878,  ...,  0.5827,  0.1709,  0.7266],
          [-0.1370,  0.2101,  0.1373,  ...,  0.1690,  0.1391,  0.5584]],

         [[ 0.2522,  0.4827, -0.0051,  ...,  0.3496,  0.1669,  0.0913],
          [-0.0054,  0.2457, -0.5552,  ...,  0.6070,  0.3949,  0.2379],
          [ 0.0975, -0.0636,  0.0098,  ...,  0.3064,  1.0656,  0.2924],
          [ 0.3662,  0.3938, -0.1162,  ...,  0.2571,  0.8193,  0.6065]],

         [[-0.1652,  0.1656, -0.2087,  ...,  0.1558,  0.1463,  0.4610],
          [ 0.2250,  0.4251, -0.3159,  ...,  0.4349,  0.5588,  0.2353],
          [ 0.1891,  0.5482, -0.5655,  ...,  0.9577,  0.3209,  0.4743],
          [ 0.1036,  0.1090, -0.4273,  ...,  0.5054,  0.5294,  0.6046]]],


        [[[-0.1855,  0.0585,  0.3986,  ...,  0.4464,  1.0358,  0.7218],
          [ 0.2542,  0.2847, -0.4199,  ...,  0.5110,  1.0964,  0.5777],
          [ 0.2882, -0.0325,  0.7312,  ...,  0.5279,  0.8686,  0.8243],
          [ 0.2393, -0.0283, -0.2540,  ...,  0.5674,  1.3566,  0.1031]],

         [[-0.5854,  0.4750,  0.1945,  ...,  0.4982,  1.0728,  0.4913],
          [ 0.7306,  0.2358,  0.0816,  ...,  0.3726,  0.1526,  0.8390],
          [ 0.0800,  0.2782, -0.0416,  ...,  0.2842,  0.2292,  0.2505],
          [ 0.6102,  0.0494, -0.1290,  ...,  0.3062,  0.9799,  0.1712]],

         [[-0.0763, -0.2016,  0.0245,  ...,  0.4374,  1.2202,  0.4429],
          [-0.0389,  0.3428, -0.1617,  ...,  0.7337,  0.1433,  0.3578],
          [ 0.1258,  0.1900,  0.1599,  ...,  0.9508,  0.4877,  0.2149],
          [ 0.2845, -0.0365, -0.2787,  ...,  0.1595,  0.9255,  0.1344]],

         ...,

         [[-0.4709,  0.6006,  0.1440,  ...,  0.1845,  0.1311,  0.5697],
          [-0.0964,  0.5970,  0.0317,  ...,  0.3574,  0.2124,  0.2159],
          [-0.6400,  0.8504,  0.0774,  ...,  0.8850,  0.1823,  0.6145],
          [ 0.4252,  0.8612,  0.1327,  ...,  0.2596,  0.2029,  0.7227]],

         [[ 0.1851,  0.3459, -0.2417,  ...,  0.4392,  0.7322,  0.0426],
          [ 0.6891, -0.1534, -0.6456,  ...,  0.5138,  0.6979,  0.4896],
          [ 0.3203,  0.1046, -0.1854,  ...,  0.2081,  0.5135,  0.4457],
          [ 0.5980,  0.0671, -0.4025,  ...,  0.4612,  0.4278,  0.0344]],

         [[-0.1093,  0.2049, -0.2495,  ...,  0.5803,  0.1404,  0.4500],
          [-0.1233, -0.0315, -0.2736,  ...,  0.6902,  0.3539,  0.5860],
          [ 0.0975,  0.2205, -0.0549,  ...,  0.6750,  0.2121,  0.2163],
          [-0.1391, -0.1649, -0.0721,  ...,  0.9105,  0.5092,  0.4684]]]])

2025-06-08 11:43:21.424811 GPU 5 64403 test begin: paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 4, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), None, Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=False, )
outputs format not support
[accuracy error] paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 4, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), None, Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=False, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 501 / 512 (97.9%)
Greatest absolute difference: 1.7170644998550415 at index (1, 3, 0, 6) (up to 0.01 allowed)
Greatest relative difference: 466.1998291015625 at index (1, 1, 0, 3) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2, 8, 4, 8]), dtype=torch.float32)
tensor([[[[ 0.1669,  0.1600,  0.5987,  ...,  0.5069, -0.0086,  0.2956],
          [ 0.4761,  0.2917,  0.2896,  ...,  0.4212,  0.6375,  0.1197],
          [ 0.1805,  0.1409,  0.1162,  ...,  0.8075,  0.3542,  0.1101],
          [-0.0672,  0.0973,  0.6826,  ...,  0.5258, -0.1766,  0.0961]],

         [[ 0.4700,  0.4248, -0.5286,  ...,  0.8292, -0.5721,  0.5704],
          [ 0.3748,  0.6617, -0.0749,  ...,  0.2834, -0.1066,  0.5518],
          [ 0.3843,  0.3400, -0.1540,  ...,  0.8193,  0.0671,  0.3405],
          [ 0.2064,  0.1730,  0.0362,  ...,  0.4455,  0.0040,  0.0107]],

         [[ 0.5288,  0.2141, -0.0078,  ...,  0.9765,  0.1872,  0.1563],
          [ 0.8566,  0.2930, -0.0370,  ...,  0.6714, -0.0587,  0.0906],
          [ 0.5712,  0.1936, -0.0165,  ...,  0.1834, -0.2052,  0.0197],
          [ 0.4353,  0.1874, -0.0602,  ...,  0.9581,  0.0812,  0.1605]],

         ...,

         [[-0.0334,  0.1433,  0.3917,  ...,  0.5472, -0.3038,  0.1640],
          [ 0.2673,  0.8383, -0.3618,  ...,  0.6546, -0.1837,  0.2367],
          [ 0.1545,  1.0097, -0.0268,  ...,  0.9138, -0.1142,  0.2805],
          [-0.1593,  0.2690, -0.4282,  ...,  0.7489,  0.0776,  0.6617]],

         [[-0.5950,  0.2751,  0.3385,  ...,  0.8186, -0.4418,  0.1832],
          [-0.6102,  0.1971,  0.7139,  ...,  0.5913,  0.0064,  0.1112],
          [-0.3601,  0.0875,  0.4785,  ...,  0.6084, -0.3445,  0.1331],
          [-0.1989,  0.0809,  0.1584,  ...,  1.2032, -0.3951,  0.2338]],

         [[-0.4934,  0.7227, -0.1114,  ...,  0.4346,  0.4065,  0.0793],
          [-0.2280,  1.0537, -0.2678,  ...,  0.4443,  0.3721,  0.6948],
          [-0.2206,  0.6885, -0.2019,  ...,  0.5535,  0.5903,  0.5279],
          [-0.2786,  1.0327,  0.1539,  ...,  0.3345,  0.5201,  0.2385]]],


        [[[ 0.1128,  0.1386, -0.1028,  ...,  0.5596, -0.2832,  0.2205],
          [-0.0871,  0.3635,  0.3024,  ...,  0.8570, -0.0256,  0.4601],
          [-0.0651,  0.3874, -0.1553,  ...,  0.7703,  0.1371,  0.1221],
          [ 0.2074,  0.4914,  0.0203,  ...,  0.4872, -0.2228,  0.2646]],

         [[ 0.6400,  0.4902, -0.1971,  ...,  0.9978,  0.2596,  0.0952],
          [ 0.6392,  0.2994, -0.0823,  ...,  0.4812, -0.0558,  0.4342],
          [ 0.1471,  0.1006,  0.3643,  ...,  0.5936, -0.0971,  0.4191],
          [ 0.0169,  0.5952, -0.0092,  ...,  1.0253, -0.1696,  0.5272]],

         [[ 0.5719,  0.2287,  0.1027,  ...,  0.9872,  0.3372,  0.1547],
          [ 0.3326,  0.1227,  0.0095,  ...,  1.0048, -0.4391,  0.0546],
          [ 0.1700,  0.1113,  0.2515,  ...,  1.0658,  0.3365,  0.0952],
          [ 0.6835,  0.2870, -0.1491,  ...,  0.9555,  0.1209,  0.0576]],

         ...,

         [[-0.0614,  0.1535, -0.0265,  ...,  0.5905,  0.3434,  0.5780],
          [-0.1614,  0.5326,  0.1280,  ...,  0.3290,  0.1708,  0.3812],
          [ 0.1214,  0.1862,  0.3322,  ...,  0.9839,  0.4124,  0.6230],
          [ 0.2174,  0.2374,  0.2858,  ...,  0.2969, -0.0148,  0.2715]],

         [[-0.1833,  0.3316,  0.1788,  ...,  0.7660, -0.0752,  0.1299],
          [-0.2831,  0.1146, -0.5102,  ...,  0.7532, -0.2897,  0.1767],
          [-0.3866,  0.3565,  0.0962,  ...,  1.0559, -0.3512,  0.2454],
          [ 0.0183,  0.2088,  0.5483,  ...,  0.4619,  0.0906,  0.0653]],

         [[ 0.0701,  0.4328, -0.0143,  ...,  0.5638,  0.4023,  0.4190],
          [-0.3191,  0.9443,  0.0140,  ...,  0.5293,  0.6017,  0.5384],
          [-0.4988,  0.6486,  0.3190,  ...,  0.1204,  0.0133,  0.6091],
          [ 0.1067,  0.5514,  0.2027,  ...,  0.5757,  0.3628,  0.2602]]]])
DESIRED: (shape=torch.Size([2, 8, 4, 8]), dtype=torch.float32)
tensor([[[[ 0.1464, -0.2034,  0.4118,  ...,  0.2425,  0.7812,  0.3695],
          [ 0.3152, -0.0330,  0.3009,  ...,  0.1177,  1.0145,  0.4135],
          [-0.0737, -0.2583,  0.2138,  ...,  0.2564,  0.6709,  0.3961],
          [-0.0397, -0.2014,  0.7212,  ...,  0.2804,  0.4696,  0.1639]],

         [[ 0.3570, -0.1475,  0.0124,  ...,  0.4104,  0.1322,  0.2714],
          [ 0.6339,  0.3008, -0.4054,  ...,  0.3513,  1.0761,  0.1923],
          [ 0.1665, -0.0525, -0.5306,  ...,  0.2634,  0.7990,  0.1281],
          [ 0.0432,  0.0271,  0.2158,  ...,  0.0782,  0.2496,  0.0766]],

         [[ 0.5466, -0.2115, -0.2817,  ...,  0.1776,  0.2945,  0.3557],
          [ 0.8052, -0.1364, -0.0322,  ...,  0.0262,  0.2778,  0.6662],
          [ 0.5371, -0.0085,  0.0126,  ...,  0.0082,  0.0248,  0.2651],
          [ 0.4097, -0.1265, -0.0030,  ...,  0.1997,  0.6154,  1.2593]],

         ...,

         [[-0.1738, -0.0514,  0.5219,  ...,  0.5938,  0.3265,  0.3036],
          [ 0.2345,  0.5724, -0.0586,  ...,  0.2797,  0.1636,  0.3237],
          [ 0.1618,  0.6201,  0.1646,  ...,  0.7228,  0.3788,  0.2855],
          [-0.3014,  0.0336, -0.3560,  ...,  0.8065,  0.6734,  0.3888]],

         [[-0.0907, -0.1354,  0.6980,  ...,  0.4272,  0.7717,  1.3529],
          [-0.1015, -0.0587,  0.3479,  ...,  0.3713,  1.0717,  0.1510],
          [-0.1893, -0.0988,  0.3964,  ...,  0.2420,  0.4415,  0.3853],
          [-0.6057, -0.1781, -0.1327,  ...,  0.2056,  0.7927,  0.6641]],

         [[-0.2213,  0.1784, -0.1437,  ...,  1.0216,  0.4930,  0.0777],
          [-0.1635,  0.3804, -0.0388,  ...,  0.7357,  0.5607,  0.3554],
          [-0.3472,  0.1074, -0.2848,  ...,  0.7016,  0.6788,  0.2594],
          [ 0.0968,  0.1399,  0.1623,  ...,  1.0026,  0.9143,  0.1606]]],


        [[[-0.0203, -0.1472,  0.0290,  ...,  0.2032,  0.1383,  0.4513],
          [-0.0589, -0.0352,  0.2785,  ...,  0.4489,  0.9688,  0.8220],
          [ 0.1157, -0.0768, -0.1270,  ...,  0.4947,  0.2639,  0.2916],
          [ 0.5350, -0.0178,  0.2065,  ...,  0.4386,  0.3890,  0.6013]],

         [[ 0.4374, -0.1731, -0.1200,  ...,  0.4212,  0.9726,  0.2381],
          [ 0.5310, -0.2387, -0.2285,  ...,  0.2395,  1.0162,  0.2095],
          [ 0.0438, -0.3120, -0.0422,  ...,  0.3330,  1.0188,  0.0789],
          [-0.0048,  0.2742, -0.3821,  ...,  0.4939,  0.8300,  0.1246]],

         [[ 0.6026, -0.2327, -0.1116,  ...,  0.1783,  0.5411,  0.4591],
          [ 0.2113, -0.1299,  0.0989,  ...,  0.0541,  0.1861,  0.7237],
          [ 0.2438, -0.2486,  0.0697,  ...,  0.2637,  0.5411,  0.1233],
          [ 0.8264, -0.2941, -0.0449,  ...,  0.2796,  0.1959,  0.6429]],

         ...,

         [[-0.2067, -0.0513, -0.0837,  ...,  0.6504,  0.8630,  0.1569],
          [ 0.0795,  0.2955,  0.2157,  ...,  0.7260,  0.6877,  0.1647],
          [-0.3597, -0.0179,  0.1385,  ...,  0.4523,  1.0788,  0.1139],
          [ 0.1628,  0.0526,  0.3050,  ...,  0.2775,  0.4988,  0.1831]],

         [[-0.0677, -0.1476,  0.0519,  ...,  0.2624,  0.8528,  0.5861],
          [-0.2831, -0.1141, -0.2677,  ...,  0.2229,  0.5234,  1.2819],
          [-0.2586, -0.1467,  0.1092,  ...,  0.3630,  1.1244,  1.2972],
          [-0.0685, -0.0863,  0.3773,  ...,  0.1006,  0.9339,  0.2579]],

         [[-0.3446, -0.1754, -0.2407,  ...,  0.3847,  0.4290,  0.1645],
          [-0.2724,  0.2822,  0.0464,  ...,  0.8629,  0.9602,  0.2882],
          [ 0.0396,  0.3205,  0.4502,  ...,  0.8464,  0.4131,  0.2554],
          [-0.2209, -0.3004,  0.0424,  ...,  0.5361,  0.5868,  0.1133]]]])

2025-06-08 11:43:21.590957 GPU 5 64406 test begin: paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 4, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), None, Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=False, )
outputs format not support
[accuracy error] paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 4, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), None, Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=False, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 491 / 512 (95.9%)
Greatest absolute difference: 1.8241806030273438 at index (0, 4, 3, 1) (up to 0.01 allowed)
Greatest relative difference: 539.4158325195312 at index (0, 0, 3, 3) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2, 8, 4, 8]), dtype=torch.float32)
tensor([[[[ 1.6612e-01,  3.2815e-01,  7.8476e-01,  ...,  4.0315e-01,
           -2.0954e-01,  4.2869e-01],
          [ 3.4911e-01,  5.0179e-01,  4.1072e-01,  ...,  5.1972e-01,
            1.0929e-01,  3.2515e-01],
          [ 1.1449e-01,  2.1460e-01, -3.2997e-02,  ...,  1.1669e-01,
           -3.2197e-01,  5.0121e-01],
          [ 3.9277e-03,  2.6744e-01,  4.9011e-01,  ...,  3.0420e-01,
           -3.5607e-01,  3.9302e-01]],

         [[-3.2876e-01,  3.0368e-01,  2.7083e-01,  ...,  4.5137e-01,
            1.4750e-02,  3.8638e-01],
          [ 2.0812e-01,  3.4475e-01, -2.1431e-01,  ...,  8.3589e-01,
            3.1999e-03,  4.0981e-02],
          [-1.6376e-01,  7.7251e-01,  2.5352e-01,  ...,  6.3066e-02,
           -2.7664e-02,  6.4753e-01],
          [-4.0339e-01,  5.4964e-01, -2.4228e-01,  ...,  7.7026e-01,
            8.3307e-03,  3.3477e-01]],

         [[-6.2406e-01,  1.0485e+00,  1.0614e-01,  ...,  3.1166e-01,
           -3.4779e-01,  6.6988e-01],
          [-7.7646e-01,  5.3613e-01, -2.2894e-02,  ...,  4.9698e-01,
           -3.4114e-01,  7.9388e-01],
          [ 2.8274e-01,  7.7353e-01, -1.1788e-01,  ...,  6.1122e-01,
           -1.3635e-01,  6.1964e-01],
          [ 5.7658e-02,  9.7374e-01, -3.6121e-02,  ...,  1.0183e+00,
           -2.9343e-01,  9.6404e-01]],

         ...,

         [[-1.2850e-01,  5.6308e-01, -3.2648e-01,  ...,  3.5342e-01,
           -2.9896e-01,  6.8912e-01],
          [-1.8971e-01,  5.6200e-01,  1.2853e-01,  ...,  6.0558e-01,
           -1.2078e-01,  1.9287e-01],
          [-6.2948e-01,  8.4696e-01, -4.5701e-01,  ...,  8.5325e-01,
           -1.1437e-02,  6.2733e-01],
          [-6.9346e-02,  1.7617e-01,  1.5070e-01,  ...,  9.9508e-02,
           -9.8725e-02,  4.2849e-01]],

         [[-1.1005e-01,  2.6836e-01, -1.3279e-01,  ...,  3.2044e-01,
            7.3240e-01,  7.8929e-01],
          [-4.7356e-01,  6.5212e-01, -6.4722e-01,  ...,  3.1807e-01,
            7.7701e-01,  5.3540e-01],
          [ 2.2155e-02,  5.1707e-01, -2.6439e-01,  ...,  6.8348e-01,
            3.3256e-01,  7.7907e-01],
          [ 4.1823e-01,  2.1881e-01, -7.3883e-02,  ...,  6.2231e-01,
            6.8192e-01,  5.2527e-01]],

         [[-1.2594e-01,  6.3792e-01, -1.3407e-01,  ...,  8.3597e-01,
           -6.6453e-01,  4.0331e-01],
          [ 2.3850e-01,  7.1846e-01, -8.1659e-02,  ...,  3.7647e-01,
           -1.1321e-01,  4.3419e-01],
          [ 3.7193e-01,  7.7571e-01, -1.3085e-01,  ...,  1.0021e+00,
           -5.4040e-01,  4.6720e-01],
          [ 2.6851e-01,  2.9979e-01, -2.2167e-02,  ...,  6.0845e-01,
           -3.2996e-01,  4.6024e-02]]],


        [[[ 5.8666e-02,  6.1865e-01,  1.7308e-01,  ...,  8.6742e-01,
            3.5188e-01,  1.0842e-01],
          [ 4.4504e-02,  4.5268e-01,  6.3074e-01,  ...,  6.1398e-01,
            3.8645e-02,  2.8039e-01],
          [ 3.0383e-02,  2.6014e-01,  2.1744e-01,  ...,  1.9354e-01,
            2.4277e-01,  4.6301e-01],
          [ 1.9275e-01,  2.9013e-01,  7.2209e-01,  ...,  4.0858e-01,
            1.7815e-02,  2.9366e-01]],

         [[-1.0639e-01,  5.9918e-01,  9.4719e-03,  ...,  6.5198e-01,
           -5.1989e-01,  6.0972e-01],
          [-1.4483e-02,  1.0439e-01, -1.3703e-02,  ...,  9.9967e-02,
           -3.4215e-01,  9.2682e-01],
          [ 1.3820e-01,  3.1591e-01,  2.4245e-01,  ...,  7.9441e-01,
            3.9269e-03,  4.3989e-02],
          [-3.1565e-01,  4.9403e-01, -1.4649e-01,  ...,  5.1500e-01,
            3.2988e-03,  5.2308e-01]],

         [[-3.9566e-01,  4.6021e-01, -9.6307e-02,  ...,  1.0342e+00,
           -2.1498e-01,  7.1185e-01],
          [-3.2564e-01,  7.0159e-01,  1.7398e-01,  ...,  9.0877e-01,
           -2.3595e-01,  4.2083e-01],
          [ 8.4672e-02,  1.0907e+00,  1.5265e-01,  ...,  5.7254e-01,
           -3.2145e-01,  6.5876e-01],
          [-4.3475e-01,  5.4424e-01,  1.1965e-01,  ...,  8.1264e-01,
            2.2641e-02,  5.7971e-01]],

         ...,

         [[ 6.5082e-02,  3.9117e-01, -5.6634e-01,  ...,  4.7687e-01,
           -5.4796e-04,  6.3554e-01],
          [-7.1808e-01,  9.8764e-01,  3.2468e-01,  ...,  6.4317e-01,
           -7.3468e-02,  2.0278e-01],
          [-3.2562e-01,  4.0414e-01,  1.0610e-01,  ...,  7.7797e-02,
           -2.9839e-01,  7.6155e-01],
          [-6.5626e-02,  2.6870e-01, -1.8103e-01,  ...,  2.8715e-01,
           -7.1011e-02,  3.8292e-01]],

         [[-9.2602e-02,  8.2191e-01, -9.4122e-02,  ...,  7.3612e-01,
            2.5947e-01,  2.1320e-01],
          [-5.8148e-01,  8.2801e-01, -5.8418e-01,  ...,  5.7360e-01,
            4.3990e-01,  4.4257e-01],
          [ 2.4027e-02,  9.0924e-02, -7.6376e-01,  ...,  7.7183e-02,
           -2.2524e-01,  7.2828e-01],
          [-3.6227e-01,  8.5081e-01, -6.3915e-01,  ...,  1.3499e-01,
            4.5517e-01,  7.1918e-01]],

         [[ 1.8173e-01,  2.5872e-01, -2.0981e-01,  ...,  6.1839e-01,
           -2.0482e-01,  5.7007e-01],
          [-5.0441e-01,  5.5788e-01, -3.7060e-01,  ...,  3.8248e-01,
           -5.1513e-01,  4.9780e-01],
          [ 4.5534e-01,  7.5015e-01, -1.0134e-01,  ...,  1.0057e+00,
           -2.7143e-01,  3.0425e-01],
          [-4.3844e-01,  5.6080e-01, -1.7456e-01,  ...,  5.4180e-01,
           -3.1864e-01,  3.2549e-01]]]])
DESIRED: (shape=torch.Size([2, 8, 4, 8]), dtype=torch.float32)
tensor([[[[ 0.0851,  0.0352,  0.7169,  ...,  0.2035,  0.5214,  0.1527],
          [ 0.3032, -0.1876,  0.4649,  ...,  0.4271,  0.7361,  0.3774],
          [ 0.1278,  0.0160,  0.0483,  ...,  0.1330,  0.3278,  0.3883],
          [ 0.0758, -0.1198,  0.6684,  ...,  0.4538,  0.2614,  0.4354]],

         [[-0.2497,  0.0205,  0.3441,  ...,  0.4502,  0.6911,  0.2657],
          [-0.4554, -0.2478,  0.0783,  ...,  0.1150,  0.1113,  0.2477],
          [ 0.4517, -0.3952,  0.2467,  ...,  0.7266,  0.8350,  0.3787],
          [-0.3910,  0.1253,  0.1046,  ...,  0.6317,  0.4248,  0.4526]],

         [[-0.0338,  0.3738,  0.0520,  ...,  0.9761,  0.3782,  0.6653],
          [-0.3994,  0.2403, -0.1121,  ...,  0.9669,  0.3907,  0.7903],
          [-0.2759, -0.0687, -0.0462,  ...,  0.1002,  0.4725,  0.9882],
          [-0.3659, -0.6778, -0.1695,  ...,  0.7617,  0.5758,  0.9974]],

         ...,

         [[-0.3057,  0.0779,  0.2066,  ...,  0.2828,  0.9569,  1.1531],
          [-0.5913,  0.1108,  0.2888,  ...,  0.3358,  0.5158,  0.2829],
          [-0.8239,  0.1879, -0.3970,  ...,  1.1210,  0.9668,  0.9926],
          [-0.0900,  0.0607, -0.0921,  ...,  0.0741,  0.5828,  0.2790]],

         [[-0.3197,  0.1556, -0.6621,  ...,  0.2466,  0.7662,  0.2857],
          [-0.0056,  0.3896, -0.6598,  ...,  0.7357,  0.3668,  0.6715],
          [-0.1226,  0.0142, -0.4665,  ...,  0.9110,  0.4676,  0.3870],
          [-0.1805, -0.1989, -0.5920,  ...,  0.5099,  0.3796,  0.1319]],

         [[-0.2401,  0.0857, -0.0921,  ...,  0.6375,  0.5256,  1.3671],
          [ 0.1050,  0.1946, -0.1762,  ...,  0.2859,  0.4735,  0.5037],
          [ 0.4056, -0.4696, -0.2067,  ...,  0.6631,  0.3763,  1.1164],
          [ 0.0286, -0.2717,  0.0174,  ...,  0.1981,  0.0860,  0.5311]]],


        [[[ 0.0452, -0.0623,  0.1210,  ...,  0.7936,  0.6594,  0.1434],
          [ 0.0659, -0.1086,  0.7039,  ...,  0.6375,  0.6291,  0.3434],
          [ 0.1186, -0.0790,  0.2121,  ...,  0.3763,  1.0628,  0.4481],
          [ 0.1265, -0.1211,  0.6841,  ...,  0.2690,  0.6165,  0.1798]],

         [[-0.1466, -0.5937,  0.2675,  ...,  0.6318,  0.5239,  0.8792],
          [ 0.0451, -0.7405,  0.0717,  ...,  0.2955,  0.7662,  0.8105],
          [-0.4459, -0.2698,  0.5849,  ...,  0.1611,  0.5632,  0.2875],
          [-0.1524, -0.2963,  0.0085,  ...,  0.6504,  0.5208,  0.4137]],

         [[-0.7766, -0.2846, -0.0107,  ...,  0.7977,  0.5138,  1.0996],
          [-0.3902, -0.6373,  0.3736,  ...,  1.0242,  0.4782,  0.8648],
          [ 0.0686, -0.4678,  0.3177,  ...,  0.6770,  0.5959,  1.0983],
          [-0.6567,  0.0752, -0.0231,  ...,  0.6893,  0.6148,  0.6202]],

         ...,

         [[-0.4589, -0.0113, -0.5915,  ...,  0.0281,  0.6920,  0.9372],
          [-0.6244,  0.4966,  0.2950,  ...,  0.7429,  0.7592,  0.1782],
          [-0.0633,  0.2757, -0.0938,  ...,  0.2251,  0.6259,  0.5529],
          [-0.2481, -0.1131,  0.0676,  ...,  0.4323,  0.8610,  0.7242]],

         [[-0.0817,  0.2625, -0.2003,  ...,  1.0284,  0.2905,  0.1444],
          [-0.5770,  0.6267, -0.3334,  ...,  0.6329,  0.6957,  0.7007],
          [-0.0513,  0.0548, -0.1600,  ...,  0.0313,  0.1310,  0.8443],
          [ 0.1145,  0.7011, -0.4712,  ...,  0.3426,  0.6844,  0.7742]],

         [[ 0.0163, -0.2919, -0.3285,  ...,  0.2581,  0.3388,  0.7411],
          [-0.1959,  0.3824, -0.2668,  ...,  0.7259,  0.2833,  1.3666],
          [ 0.3200, -0.4422, -0.0619,  ...,  0.5412,  0.4644,  0.7462],
          [ 0.1023,  0.0366, -0.1796,  ...,  0.9014,  0.1745,  0.7694]]]])

2025-06-08 11:43:21.597802 GPU 5 64407 test begin: paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 4, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=False, )
[accuracy error] paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 4, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=False, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 243 / 512 (47.5%)
Greatest absolute difference: 0.7797980308532715 at index (1, 3, 2, 6) (up to 0.01 allowed)
Greatest relative difference: 14.89922046661377 at index (0, 4, 3, 7) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2, 8, 4, 8]), dtype=torch.float32)
tensor([[[[ 0.1343,  0.1859, -0.0999,  ...,  0.1992,  0.6340,  0.9531],
          [-0.1120, -0.3496, -0.1676,  ...,  0.1953,  0.3180,  0.1653],
          [-0.1742,  0.2284,  0.2098,  ...,  0.2298,  0.6669,  1.2759],
          [-0.3138, -0.1160,  0.6763,  ...,  0.1636,  0.4072,  0.8731]],

         [[ 0.0987, -0.1358, -0.1688,  ...,  0.1258,  0.4101,  0.4149],
          [-0.0655,  0.6458, -0.5693,  ...,  0.8657,  1.2069,  1.0623],
          [ 0.3520, -0.0187, -0.0395,  ...,  0.6991,  0.8495,  0.4799],
          [-0.3232,  0.6384, -0.3513,  ...,  0.8260,  0.5416,  0.7773]],

         [[-0.4627, -0.0247, -0.1637,  ...,  0.4893,  0.0697,  0.6001],
          [ 0.0116, -0.0804, -0.2227,  ...,  0.8187,  0.2168,  0.5080],
          [ 0.4081,  0.1484,  0.0917,  ...,  0.4876,  0.1177,  0.4119],
          [-0.5815,  0.0051, -0.3132,  ...,  0.8120,  0.1376,  0.2863]],

         ...,

         [[ 0.3403, -0.0269,  0.0855,  ...,  0.3283,  0.2001,  0.0907],
          [ 0.4675, -0.0035,  0.6075,  ...,  0.0834,  0.3049,  0.3277],
          [ 0.3276, -0.0171,  0.5814,  ...,  0.2265,  0.3002,  0.6322],
          [ 0.3638, -0.0740,  0.3553,  ...,  0.9795,  0.2692,  0.6617]],

         [[-0.3302,  0.3097,  0.1302,  ...,  0.1189,  0.4262,  0.6102],
          [-0.4665,  0.4406,  0.5793,  ...,  0.4178,  0.7420,  0.5659],
          [-0.1475,  0.6685,  0.2058,  ...,  0.4450,  0.4481,  0.5634],
          [-0.0614,  0.2216,  0.5748,  ...,  0.0637,  0.7595,  0.2281]],

         [[-0.0262,  0.3099,  0.4061,  ...,  0.5835,  0.7039,  0.4372],
          [ 0.3046, -0.0441,  0.5062,  ...,  0.0079,  0.9058,  0.2125],
          [ 0.6231,  0.0208,  0.1613,  ...,  0.2328,  0.5649,  0.5757],
          [ 0.1024,  0.1550,  0.6783,  ...,  0.1625,  0.8196,  0.4677]]],


        [[[-0.0661, -0.3593,  0.4221,  ...,  0.4400,  0.2565,  0.3801],
          [-0.3834, -0.2652,  0.5255,  ...,  0.4861,  0.3969,  1.0936],
          [-0.3730, -0.2023,  0.2338,  ...,  0.4281,  0.1387,  0.4920],
          [-0.1921, -0.4571,  0.2031,  ...,  0.4006,  0.6406,  0.6690]],

         [[-0.0637,  0.2416, -0.3462,  ...,  0.4441,  0.9188,  0.8204],
          [ 0.0256, -0.2532, -0.4461,  ...,  0.4799,  0.8014,  0.3802],
          [-0.5705,  0.6403, -0.1463,  ...,  0.5845,  1.2180,  1.0145],
          [ 0.3040, -0.3472, -0.1913,  ...,  0.3826,  0.9018,  0.8287]],

         [[-0.3066, -0.1505, -0.0868,  ...,  0.9019,  0.2458,  0.7331],
          [-0.1282,  0.1057, -0.6291,  ...,  0.5146,  0.1169,  0.6623],
          [ 0.1572, -0.0503, -0.2824,  ...,  0.9457,  0.1140,  0.4850],
          [-0.4253,  0.0591,  0.0053,  ...,  0.2930,  0.3990,  0.3575]],

         ...,

         [[ 0.1707,  0.1709,  0.2135,  ...,  0.9176,  0.1082,  0.0689],
          [ 0.3599,  0.1839, -0.2090,  ...,  0.8226,  0.0436,  0.3013],
          [ 0.1324,  0.1192,  0.3548,  ...,  0.4244,  0.2928,  0.2436],
          [ 0.1823,  0.0845,  0.0032,  ...,  0.3161,  0.1629,  0.5284]],

         [[-0.2603,  0.2765,  0.3781,  ...,  0.6014,  0.6372,  0.6031],
          [-0.0077,  0.6783,  0.0555,  ...,  0.4247,  0.3381,  0.1635],
          [-0.4218,  0.3698,  0.7377,  ...,  0.4755,  0.8001,  0.6104],
          [-0.0521,  0.0056, -0.0073,  ...,  0.0085,  0.0333,  0.1626]],

         [[ 0.0909,  0.5912,  0.5572,  ...,  0.7693,  0.4533,  0.2602],
          [ 0.2564,  0.5683,  0.8093,  ...,  0.7595,  0.5250,  0.4223],
          [-0.1459,  0.1482,  0.4518,  ...,  0.2051,  0.6164,  0.6058],
          [ 0.3315,  0.0186,  0.7079,  ...,  0.2545,  1.2834,  0.5827]]]])
DESIRED: (shape=torch.Size([2, 8, 4, 8]), dtype=torch.float32)
tensor([[[[ 0.1343,  0.1859, -0.0999,  ...,  0.6628,  0.8067,  1.0116],
          [-0.1120, -0.3496, -0.1676,  ...,  0.1927,  0.3977,  0.2072],
          [-0.1742,  0.2284,  0.2098,  ...,  0.7767,  0.8673,  1.5233],
          [-0.3138, -0.1160,  0.6763,  ...,  0.3136,  0.5621,  0.9591]],

         [[ 0.0987, -0.1358, -0.1688,  ...,  0.3130,  0.2068,  0.5403],
          [-0.0655,  0.6458, -0.5693,  ...,  0.9227,  0.5705,  1.1331],
          [ 0.3520, -0.0187, -0.0395,  ...,  1.1659,  0.5921,  0.4738],
          [-0.3232,  0.6384, -0.3513,  ...,  0.8631,  0.2055,  0.6815]],

         [[-0.4627, -0.0247, -0.1637,  ...,  0.2004,  0.2197,  0.6242],
          [ 0.0116, -0.0804, -0.2227,  ...,  0.3217,  0.5802,  0.7187],
          [ 0.4081,  0.1484,  0.0917,  ...,  0.2601,  0.2382,  0.7889],
          [-0.5815,  0.0051, -0.3132,  ...,  0.3487,  0.4302,  0.7142]],

         ...,

         [[ 0.3403, -0.0269,  0.0855,  ...,  0.1082,  0.6864,  0.5635],
          [ 0.4675, -0.0035,  0.6075,  ...,  0.0275,  0.2628,  0.6609],
          [ 0.3276, -0.0171,  0.5814,  ...,  0.0747,  0.2865,  0.9721],
          [ 0.3638, -0.0740,  0.3553,  ...,  0.3230,  0.5293,  0.5770]],

         [[-0.3302,  0.3097,  0.1302,  ...,  0.2228,  0.8784,  0.8939],
          [-0.4665,  0.4406,  0.5793,  ...,  0.8178,  0.5150,  0.8903],
          [-0.1475,  0.6685,  0.2058,  ...,  0.8603,  0.7252,  0.8056],
          [-0.0614,  0.2216,  0.5748,  ...,  0.1164,  0.5795,  0.2436]],

         [[-0.0262,  0.3099,  0.4061,  ...,  0.7944,  0.4027,  0.5322],
          [ 0.3046, -0.0441,  0.5062,  ...,  0.1209,  0.5248,  0.4455],
          [ 0.6231,  0.0208,  0.1613,  ...,  0.5511,  0.3895,  0.2305],
          [ 0.1024,  0.1550,  0.6783,  ...,  0.0648,  0.3862,  0.5405]]],


        [[[-0.0661, -0.3593,  0.4221,  ...,  0.8026,  0.3538,  0.4787],
          [-0.3834, -0.2652,  0.5255,  ...,  0.9999,  0.5398,  1.3098],
          [-0.3730, -0.2023,  0.2338,  ...,  0.9075,  0.1916,  0.6005],
          [-0.1921, -0.4571,  0.2031,  ...,  0.6190,  0.8332,  0.7462]],

         [[-0.0637,  0.2416, -0.3462,  ...,  0.5433,  0.4803,  0.8029],
          [ 0.0256, -0.2532, -0.4461,  ...,  0.9877,  0.3429,  0.3758],
          [-0.5705,  0.6403, -0.1463,  ...,  0.4640,  0.8017,  1.1701],
          [ 0.3040, -0.3472, -0.1913,  ...,  0.9007,  0.5497,  1.0088]],

         [[-0.3066, -0.1505, -0.0868,  ...,  0.3328,  0.5979,  1.2956],
          [-0.1282,  0.1057, -0.6291,  ...,  0.2567,  0.4966,  0.9751],
          [ 0.1572, -0.0503, -0.2824,  ...,  0.3864,  0.3648,  0.5954],
          [-0.4253,  0.0591,  0.0053,  ...,  0.1458,  0.9179,  0.4204]],

         ...,

         [[ 0.1707,  0.1709,  0.2135,  ...,  0.3028,  0.0966,  0.3279],
          [ 0.3599,  0.1839, -0.2090,  ...,  0.2715,  0.5230,  0.5067],
          [ 0.1324,  0.1192,  0.3548,  ...,  0.1401,  0.6277,  0.4463],
          [ 0.1823,  0.0845,  0.0032,  ...,  0.1043,  0.6678,  0.4903]],

         [[-0.2603,  0.2765,  0.3781,  ...,  1.1960,  0.7856,  0.7499],
          [-0.0077,  0.6783,  0.0555,  ...,  0.8190,  0.8341,  0.5528],
          [-0.4218,  0.3698,  0.7377,  ...,  0.9376,  0.2307,  0.9008],
          [-0.0521,  0.0056, -0.0073,  ...,  0.0168,  0.1189,  0.5014]],

         [[ 0.0909,  0.5912,  0.5572,  ...,  0.6316,  0.1403,  0.1405],
          [ 0.2564,  0.5683,  0.8093,  ...,  0.6585,  0.0965,  0.1080],
          [-0.1459,  0.1482,  0.4518,  ...,  0.1898,  0.3140,  0.4112],
          [ 0.3315,  0.0186,  0.7079,  ...,  0.6118,  0.7474,  0.5487]]]])

2025-06-08 11:43:21.696227 GPU 5 64401 test begin: paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 4, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=False, )
[accuracy error] paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 4, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=False, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 481 / 512 (93.9%)
Greatest absolute difference: 1.5178788900375366 at index (1, 2, 2, 6) (up to 0.01 allowed)
Greatest relative difference: 146.2488555908203 at index (1, 5, 2, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2, 8, 4, 8]), dtype=torch.float32)
tensor([[[[ 2.4109e-01,  4.9998e-01, -5.9615e-02,  ...,  6.4540e-01,
           -8.0839e-01,  8.6213e-01],
          [-4.6021e-02,  3.8741e-01, -1.0355e-01,  ...,  1.2755e+00,
           -1.9384e-01,  4.0442e-01],
          [ 2.6886e-02,  5.6734e-01,  2.6649e-03,  ...,  9.6004e-01,
           -5.1952e-01,  8.0059e-01],
          [-6.0037e-02,  3.5963e-01, -5.9909e-02,  ...,  5.9217e-01,
           -1.5637e-01,  5.5096e-01]],

         [[-7.2772e-01,  4.1456e-01,  2.5716e-01,  ...,  1.9142e-01,
            1.3002e-01,  8.7764e-01],
          [-2.5234e-04,  1.8491e-01,  5.5244e-02,  ...,  5.7276e-01,
            4.0599e-01,  9.3635e-01],
          [-7.6335e-01,  5.5533e-01,  1.8928e-01,  ...,  3.3364e-01,
            4.2049e-01,  4.9354e-01],
          [-2.1447e-01,  2.7008e-01,  3.8919e-02,  ...,  2.2052e-01,
            4.7645e-01,  3.5027e-01]],

         [[ 1.1996e-03,  7.3817e-02, -3.4103e-01,  ...,  1.6157e-01,
           -5.3617e-01,  7.7447e-01],
          [ 4.3794e-02,  6.9061e-01, -4.6665e-01,  ...,  3.5851e-01,
           -1.4957e-01,  9.0243e-01],
          [ 6.4758e-02,  3.0945e-01, -4.7904e-01,  ...,  3.3159e-01,
            2.4253e-01,  4.0281e-01],
          [-1.3595e-01,  6.6687e-01, -5.4178e-01,  ...,  2.1255e-01,
           -7.4509e-02,  1.1871e+00]],

         ...,

         [[-5.3289e-02,  6.8586e-01, -7.8940e-02,  ...,  1.0077e-01,
           -1.0614e-01,  8.4461e-01],
          [ 3.7267e-01,  7.2704e-01, -2.3077e-01,  ...,  1.5822e-01,
           -1.2511e-01,  6.0433e-01],
          [ 1.3285e-01,  5.4763e-01, -1.5922e-01,  ...,  2.4747e-01,
            5.5143e-02,  5.1502e-01],
          [ 1.9466e-01,  8.0025e-01, -1.3186e-01,  ...,  1.9624e-02,
           -3.4324e-03,  6.1049e-01]],

         [[-5.2027e-01,  3.9466e-01,  1.5231e-01,  ...,  2.3955e-01,
            9.8141e-02,  2.5816e-01],
          [-1.8993e-01,  4.5237e-01, -2.7657e-01,  ...,  3.6274e-01,
           -1.1399e-01,  2.2101e-01],
          [-7.1885e-02,  1.5073e-01, -2.8515e-01,  ...,  4.9231e-01,
           -3.9344e-02,  2.6604e-01],
          [ 1.6070e-01,  1.9877e-01, -1.0938e-01,  ...,  3.8743e-01,
            2.0627e-01,  2.4295e-01]],

         [[ 2.9069e-01,  1.2389e+00,  3.4040e-01,  ...,  9.5771e-02,
           -9.7462e-02,  3.3919e-01],
          [ 2.9285e-01,  1.0899e+00,  1.1772e-01,  ...,  1.0337e+00,
           -7.7955e-02,  2.5275e-01],
          [ 9.6385e-02,  2.5549e-01,  2.0914e-01,  ...,  5.6640e-01,
            1.9676e-01,  3.2532e-01],
          [ 2.8442e-01,  6.6965e-01, -2.2015e-01,  ...,  1.0333e+00,
           -1.9507e-01,  1.5530e-01]]],


        [[[ 1.9644e-02,  4.2696e-01, -9.2534e-02,  ...,  1.4167e+00,
           -2.6199e-01,  4.4170e-01],
          [ 1.3668e-01,  4.8380e-01,  6.5132e-03,  ...,  7.7500e-01,
           -5.3843e-01,  8.4318e-01],
          [ 1.6760e-01,  3.6952e-01, -7.4372e-02,  ...,  6.7604e-01,
           -2.5852e-01,  6.8424e-01],
          [-1.0496e-03,  4.7927e-01, -7.6893e-02,  ...,  9.0829e-01,
           -4.9099e-01,  6.0694e-01]],

         [[-1.6765e-01,  2.3672e-01,  2.6984e-01,  ...,  7.3767e-01,
            4.4879e-01,  5.5936e-01],
          [-6.9776e-01,  5.7781e-01,  1.8254e-01,  ...,  5.6989e-01,
            4.4904e-01,  5.4325e-01],
          [-1.5000e-01,  1.5389e-01,  1.5707e-01,  ...,  1.9870e-01,
           -9.1487e-02,  2.1967e-01],
          [-3.0577e-01,  2.0105e-01,  1.2452e-01,  ...,  3.7574e-01,
            2.6945e-01,  1.1130e+00]],

         [[ 4.6294e-02,  5.5601e-01, -2.8602e-01,  ...,  1.9865e-01,
           -7.6880e-01,  9.6706e-01],
          [-1.7797e-01,  4.8529e-01, -2.0956e-01,  ...,  4.2402e-01,
           -1.0368e-01,  8.6850e-01],
          [-1.3665e-01,  6.1654e-01,  4.4999e-01,  ...,  4.0628e-01,
           -6.4172e-01,  7.1006e-01],
          [-7.8120e-02,  7.4736e-01, -4.8460e-01,  ...,  4.6154e-01,
           -7.0795e-01,  1.1659e+00]],

         ...,

         [[-5.4003e-01,  9.0156e-01, -1.8730e-01,  ...,  2.1294e-01,
            7.1211e-02,  8.0868e-01],
          [ 1.9405e-01,  3.8598e-01, -2.0714e-02,  ...,  2.0261e-01,
           -6.8005e-02,  8.4622e-01],
          [-4.2949e-01,  5.1986e-01, -2.0140e-01,  ...,  5.0284e-02,
            5.7976e-03,  2.4871e-01],
          [-6.0342e-01,  3.3414e-01, -9.0147e-02,  ...,  2.1940e-01,
            2.6859e-02,  7.6387e-01]],

         [[-1.9043e-01,  3.7272e-01, -1.7099e-01,  ...,  2.1717e-01,
           -2.4878e-02,  3.1586e-01],
          [-1.0529e-01,  4.3314e-01, -2.0391e-01,  ...,  4.9676e-01,
            1.1256e-01,  3.0637e-01],
          [ 1.1096e-01,  1.8184e-01,  4.9472e-02,  ...,  2.9109e-01,
            2.2526e-01,  2.6399e-01],
          [-3.3554e-01,  3.8659e-01,  4.9052e-02,  ...,  5.2252e-01,
            1.6081e-01,  3.1565e-01]],

         [[ 2.9781e-01,  5.4247e-01, -1.8822e-01,  ...,  8.8230e-01,
           -1.4685e-02,  8.0156e-02],
          [ 1.7274e-01,  1.0487e+00,  5.3358e-01,  ...,  2.9847e-01,
            2.8245e-01,  4.6758e-01],
          [ 3.3724e-02,  6.0818e-02,  3.0022e-01,  ...,  5.2802e-01,
            2.6945e-01,  4.3040e-01],
          [ 6.0228e-02,  7.7727e-01,  1.8149e-01,  ...,  2.4057e-01,
            1.8092e-01,  3.8701e-01]]]])
DESIRED: (shape=torch.Size([2, 8, 4, 8]), dtype=torch.float32)
tensor([[[[ 0.2278, -0.1475, -0.0329,  ...,  0.2754,  0.1626,  0.8437],
          [-0.0251, -0.2974, -0.1007,  ...,  0.6073,  0.0460,  0.4809],
          [ 0.0970, -0.0867, -0.1349,  ...,  0.6019,  0.1180,  0.4237],
          [-0.0545,  0.1164, -0.1706,  ...,  0.4039,  0.0849,  0.3668]],

         [[-0.0623,  0.3502,  0.2515,  ...,  0.3423,  0.1860,  0.4517],
          [-0.0448, -0.1631,  0.0499,  ...,  0.3092,  0.2759,  0.4094],
          [-0.0724,  0.3364,  0.1917,  ...,  0.4343,  0.2199,  0.1764],
          [-0.2280,  0.0712,  0.0409,  ...,  0.1831,  0.2098,  0.0763]],

         [[-0.0063, -0.2210,  0.2988,  ...,  0.2135,  0.8809,  0.8915],
          [ 0.0414, -0.2745, -0.1694,  ...,  0.5519,  0.7347,  0.7335],
          [ 0.0413, -0.5077, -0.3291,  ...,  0.4086,  0.2655,  0.3192],
          [-0.0595,  0.3141, -0.3512,  ...,  0.6049,  0.8987,  0.8338]],

         ...,

         [[ 0.0716,  0.0409, -0.0595,  ...,  0.3642,  0.1073,  0.6731],
          [ 0.1990, -0.4035, -0.0164,  ...,  0.3191,  0.0080,  0.5736],
          [-0.4804, -0.0144, -0.1216,  ...,  0.1790,  0.1452,  0.2245],
          [ 0.4197,  0.0340, -0.0879,  ...,  0.2269,  0.1563,  0.3739]],

         [[-0.1642,  0.3476, -0.0716,  ...,  0.2739,  0.8037,  0.6472],
          [ 0.2229,  0.3419,  0.0188,  ...,  0.4357,  0.2458,  0.8739],
          [-0.3166,  0.0562,  0.0241,  ...,  0.4806,  0.5802,  1.0246],
          [-0.2050,  0.1091, -0.4627,  ...,  0.3058,  0.4515,  0.5175]],

         [[ 0.2925,  0.7581,  0.2121,  ...,  0.5980,  0.6035,  0.7141],
          [ 0.2927,  0.3251,  0.0195,  ...,  1.1893,  0.3259,  0.5385],
          [ 0.0961, -0.2819,  0.4111,  ...,  1.0137,  0.9752,  0.5155],
          [ 0.2831,  0.0751,  0.1964,  ...,  0.6459,  0.2498,  1.0338]]],


        [[[-0.0328, -0.3215, -0.0162,  ...,  0.5732,  0.2333,  0.7208],
          [ 0.2087, -0.2216, -0.1591,  ...,  0.4313,  0.0908,  0.3875],
          [ 0.0089,  0.0031, -0.1958,  ...,  0.1653,  0.0825,  0.4653],
          [-0.0274,  0.0255, -0.0597,  ...,  0.4940,  0.1002,  0.6374]],

         [[-0.5779, -0.1083,  0.2708,  ...,  0.4227,  0.2425,  0.2015],
          [-0.1003,  0.2311,  0.1760,  ...,  0.5386,  0.2360,  0.1655],
          [-0.0979,  0.0306,  0.1694,  ...,  0.1534,  0.0108,  0.1962],
          [-0.0605,  0.0572,  0.1163,  ...,  0.2997,  0.2611,  0.5400]],

         [[ 0.0859, -0.1914,  0.1322,  ...,  0.3904,  0.6274,  0.8845],
          [-0.1242, -0.0121, -0.1873,  ...,  0.8474,  0.7123,  0.5408],
          [-0.0516, -0.0839,  0.4221,  ...,  0.8729,  0.8762,  0.4476],
          [-0.1018, -0.0070, -0.0393,  ...,  0.7368,  0.6827,  1.0167]],

         ...,

         [[-0.3379,  0.2999, -0.2123,  ...,  0.7034,  0.0854,  0.3704],
          [ 0.0263, -0.6850, -0.1091,  ...,  0.4656,  0.0420,  0.6063],
          [ 0.0030,  0.2464, -0.0381,  ...,  0.4548,  0.0801,  0.1518],
          [-0.6212,  0.1518, -0.1280,  ...,  0.5596,  0.2333,  0.4121]],

         [[-0.3860,  0.3319, -0.0211,  ...,  0.0880,  0.6721,  1.0712],
          [-0.1532,  0.3128, -0.1014,  ...,  0.4629,  0.9162,  1.0154],
          [ 0.1696,  0.0950, -0.2970,  ...,  0.3252,  0.8234,  0.5876],
          [-0.2322,  0.2763, -0.4167,  ...,  0.5496,  0.5733,  0.6638]],

         [[ 0.2965, -0.0975, -0.0016,  ...,  0.6499,  0.1041,  0.3635],
          [ 0.1744,  0.4976,  0.1106,  ...,  1.1053,  0.9860,  0.0557],
          [ 0.0329, -0.1981,  0.2061,  ...,  0.5078,  1.0049,  0.3194],
          [ 0.0616,  0.4498, -0.1013,  ...,  0.8740,  0.6098,  0.1985]]]])

2025-06-08 11:43:21.702209 GPU 5 64402 test begin: paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 4, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=False, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([2, 8, 4, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([2, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=False, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 489 / 512 (95.5%)
Greatest absolute difference: 1.8949049711227417 at index (1, 6, 1, 1) (up to 0.01 allowed)
Greatest relative difference: 196.6034698486328 at index (1, 1, 2, 2) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2, 8, 4, 8]), dtype=torch.float32)
tensor([[[[ 2.9022e-02,  6.7285e-02, -2.1029e-01,  ...,  5.2192e-01,
           -6.9556e-01,  9.6166e-01],
          [ 8.1477e-02,  1.8473e-01, -2.7572e-01,  ...,  7.4113e-01,
           -2.3139e-01,  1.2073e+00],
          [ 5.1011e-01,  7.7828e-01, -3.9855e-01,  ...,  1.2870e+00,
           -1.1696e-01,  7.2378e-01],
          [ 1.1521e-01,  3.0743e-01,  7.5566e-03,  ...,  7.7015e-01,
           -1.0164e-01,  1.4861e-01]],

         [[ 1.5767e-01,  5.6962e-01,  4.1460e-01,  ...,  1.0657e+00,
            7.2888e-01,  3.5424e-01],
          [ 2.8186e-01,  1.6030e-01,  5.3652e-01,  ...,  1.4049e-01,
            9.2315e-01,  4.6214e-01],
          [ 1.3848e-01,  2.1128e-01,  9.3492e-01,  ...,  9.0611e-01,
            7.3538e-01,  3.6876e-01],
          [ 1.8357e-01,  3.8775e-01,  8.1217e-01,  ...,  6.0678e-01,
            2.1330e-01,  1.8039e-01]],

         [[ 1.5637e-01,  5.4443e-01, -1.6385e-01,  ...,  5.4737e-01,
           -1.2242e-01,  7.2217e-01],
          [ 1.0237e-01,  5.0924e-01, -8.0400e-01,  ...,  3.1211e-01,
            5.0872e-02,  7.3368e-01],
          [ 8.2971e-02,  1.4666e-01, -5.5847e-01,  ...,  1.0913e+00,
           -1.0158e-02,  7.1299e-02],
          [ 6.0187e-02,  4.2687e-01, -7.2196e-01,  ...,  8.6990e-01,
            1.1100e-02,  2.0518e-01]],

         ...,

         [[ 5.3735e-02,  2.8722e-01, -1.6553e-01,  ...,  4.2820e-01,
            5.2078e-02,  6.0480e-01],
          [ 7.4205e-02,  1.3459e-01, -1.5337e-01,  ...,  5.2444e-01,
            3.6249e-03,  6.9750e-01],
          [-2.4587e-01,  9.4846e-01, -1.8716e-01,  ...,  1.2437e+00,
            2.0153e-01,  7.6096e-01],
          [-2.5978e-01,  8.2893e-01, -4.8978e-03,  ...,  7.6635e-01,
            2.8790e-01,  1.3419e-01]],

         [[ 8.5671e-02,  7.4899e-01, -3.7319e-01,  ...,  4.7275e-01,
           -2.3758e-01,  1.6027e-01],
          [-4.2393e-01,  2.3192e-01, -5.7359e-01,  ...,  4.0884e-01,
           -2.8248e-01,  1.0349e-01],
          [-2.6161e-01,  2.1244e-01, -3.6917e-01,  ...,  3.2785e-01,
            7.6349e-02,  3.0054e-02],
          [ 2.3749e-01,  4.6563e-01,  1.0340e-02,  ...,  4.8415e-01,
           -3.0534e-01,  1.6187e-01]],

         [[-9.8067e-04,  1.9791e-01, -7.5486e-02,  ...,  3.1697e-01,
           -1.7259e-02,  4.5200e-01],
          [-5.9930e-02,  2.9749e-01, -1.8959e-01,  ...,  2.0016e-01,
           -1.4694e-01,  2.4563e-01],
          [ 1.8942e-02,  4.6319e-01,  1.4772e-02,  ...,  4.2317e-01,
            1.1445e-01,  2.8523e-01],
          [-4.0001e-01,  4.0407e-02, -3.1077e-01,  ...,  8.3955e-02,
            1.0857e-01,  2.9757e-01]]],


        [[[ 2.1147e-01,  2.8157e-01, -3.2253e-01,  ...,  1.3383e-01,
            1.1733e-01,  6.8471e-01],
          [ 2.1115e-01,  2.4229e-01, -5.4741e-02,  ...,  8.9595e-01,
           -7.1145e-01,  8.3397e-01],
          [ 4.2270e-01,  6.2533e-01, -9.4497e-02,  ...,  3.6175e-01,
           -4.4587e-01,  1.3340e+00],
          [ 5.6305e-02,  9.9106e-02,  6.0088e-02,  ...,  6.5220e-01,
           -4.7423e-01,  1.0580e+00]],

         [[ 3.4963e-01,  4.0560e-01, -3.3067e-02,  ...,  9.5605e-01,
            7.7907e-01,  3.7516e-01],
          [-1.8528e-01,  4.5155e-01,  7.0586e-01,  ...,  2.4299e-01,
            5.4470e-01,  2.9794e-01],
          [-4.1538e-01,  5.7315e-01, -1.6118e-02,  ...,  8.1480e-01,
            7.1229e-01,  3.7862e-01],
          [ 1.8120e-01,  4.6379e-01,  2.8219e-01,  ...,  1.2748e+00,
            5.5398e-01,  2.7455e-01]],

         [[ 3.3684e-02,  4.8449e-01, -2.5783e-01,  ...,  1.1378e+00,
            4.0240e-02,  4.6478e-01],
          [-5.7910e-03,  4.0640e-01, -6.8208e-01,  ...,  8.5829e-01,
           -5.1968e-02,  3.6802e-01],
          [ 8.5455e-02,  4.8500e-01, -5.6974e-01,  ...,  7.2451e-01,
            1.7584e-03,  7.8998e-01],
          [ 4.3211e-02,  4.5449e-01, -1.0594e-01,  ...,  1.0965e+00,
            8.1053e-03,  4.9562e-01]],

         ...,

         [[ 1.0544e-01,  5.4230e-01, -1.4440e-01,  ...,  9.4937e-01,
            2.8401e-01,  4.4836e-01],
          [-2.2516e-01,  5.0556e-01, -1.5221e-01,  ...,  8.3137e-01,
            1.3477e-01,  2.4902e-01],
          [ 6.9931e-02,  5.0717e-01, -9.5379e-03,  ...,  1.7865e-01,
            2.2872e-02,  1.0489e-01],
          [-1.1944e-01,  7.7197e-01, -9.3325e-02,  ...,  1.3511e+00,
            1.2970e-01,  5.5434e-01]],

         [[-2.5661e-01,  4.7158e-01, -1.7177e-01,  ...,  4.0022e-01,
           -9.0795e-02,  5.9922e-02],
          [ 5.4595e-01,  9.8359e-01, -1.5586e-01,  ...,  6.7231e-01,
           -1.5675e-01,  1.1895e-01],
          [ 1.4423e-01,  1.0101e+00, -2.0996e-02,  ...,  4.1191e-01,
           -5.2080e-01,  1.9183e-01],
          [ 1.0792e-01,  9.9490e-01, -1.7015e-02,  ...,  5.4884e-01,
           -2.7017e-01,  9.7873e-02]],

         [[-3.4197e-01,  2.9359e-01,  2.1872e-02,  ...,  8.4152e-02,
            4.4782e-01,  3.1682e-01],
          [ 3.8618e-01,  4.7929e-01, -1.2531e-02,  ...,  2.4517e-01,
           -4.4934e-02,  6.2831e-02],
          [-1.4564e-01,  4.2530e-01,  3.1864e-02,  ...,  6.4714e-01,
            1.8559e-01,  2.4166e-01],
          [-5.8300e-01,  2.3117e-01, -2.7039e-01,  ...,  2.7693e-01,
           -5.2650e-02,  2.2759e-01]]]])
DESIRED: (shape=torch.Size([2, 8, 4, 8]), dtype=torch.float32)
tensor([[[[-6.9585e-03, -1.1434e-01,  1.2509e-01,  ...,  1.3872e-01,
            5.9857e-01,  4.9701e-01],
          [ 8.5169e-02, -3.5203e-01, -7.1476e-01,  ...,  3.7697e-01,
            5.7212e-01,  2.9147e-01],
          [ 5.3196e-01, -5.4501e-01, -1.4927e-01,  ...,  7.9766e-01,
            8.9331e-01,  1.8870e-01],
          [ 1.7028e-01, -3.7182e-01,  1.9999e-01,  ...,  6.9232e-01,
            4.3071e-01,  8.0687e-02]],

         [[ 4.8354e-01,  2.7175e-01,  4.4784e-01,  ...,  6.4602e-01,
            7.9921e-01,  9.3065e-01],
          [ 2.9418e-01,  6.4752e-02,  4.5317e-01,  ...,  4.7422e-02,
            1.0197e+00,  3.5593e-01],
          [ 3.5472e-02,  5.3209e-02,  8.5095e-01,  ...,  3.4392e-01,
            8.8127e-01,  1.6420e-01],
          [ 1.4015e-01,  2.5542e-01,  8.3811e-01,  ...,  1.4232e-01,
            4.6453e-01,  6.3072e-01]],

         [[ 1.6181e-01,  4.2510e-01,  5.6504e-02,  ...,  3.4017e-01,
            7.3753e-01,  1.0863e+00],
          [ 1.1321e-01,  3.9354e-01, -6.8311e-01,  ...,  4.6771e-01,
            6.8141e-01,  1.5535e+00],
          [ 7.3999e-02,  2.4886e-02,  1.5638e-02,  ...,  5.2521e-01,
            1.8586e-01,  6.3681e-01],
          [ 6.1407e-02,  3.1638e-01, -1.3715e-01,  ...,  5.4752e-01,
            4.4598e-01,  9.4694e-01]],

         ...,

         [[-3.9380e-02,  4.5999e-02, -1.1190e-01,  ...,  2.0708e-01,
            6.0992e-02,  8.5787e-01],
          [ 6.7325e-02, -1.9155e-01,  6.5981e-03,  ...,  4.6071e-01,
            2.9202e-01,  1.0425e+00],
          [-2.3519e-01,  4.2870e-01, -2.3109e-01,  ...,  8.2918e-01,
            1.6573e-01,  9.9142e-01],
          [ 1.4046e-01,  3.0172e-01, -2.3632e-01,  ...,  9.5513e-01,
            1.2053e-01,  6.1875e-03]],

         [[ 3.2917e-01, -6.5150e-01, -2.8737e-01,  ...,  7.9440e-01,
            8.3991e-01,  4.8559e-01],
          [-2.3234e-01, -3.6975e-01, -1.2254e-02,  ...,  9.6315e-01,
            5.6626e-02,  4.1555e-01],
          [-2.2304e-01, -2.5252e-01, -3.5364e-01,  ...,  6.7598e-01,
            3.7024e-01,  1.2941e-01],
          [-1.4037e-01, -4.7314e-01, -1.8358e-01,  ...,  2.1649e-01,
            6.3548e-01,  3.9025e-01]],

         [[-1.2859e-01, -5.8332e-02, -1.0852e-01,  ...,  1.3429e-01,
            3.7848e-01,  5.6055e-01],
          [ 1.3376e-01, -2.8471e-01,  3.2230e-02,  ...,  2.3678e-01,
            3.0240e-01,  8.1501e-01],
          [ 7.3694e-02, -2.3458e-01, -3.5706e-02,  ...,  3.0403e-01,
            4.0284e-01,  3.5616e-01],
          [-4.4024e-02, -3.3158e-01, -1.4225e-01,  ...,  2.5157e-01,
            1.8379e-01,  9.1252e-01]]],


        [[[ 2.1850e-01,  1.8402e-03, -4.7460e-01,  ...,  1.5645e-01,
            7.3865e-01,  5.6576e-02],
          [ 1.5899e-01, -5.0064e-01,  2.0885e-01,  ...,  6.0487e-02,
            4.6524e-01,  4.7907e-01],
          [ 4.8608e-01, -1.5964e-01, -2.5584e-01,  ...,  5.6023e-01,
            1.1819e+00,  4.2381e-01],
          [-9.7989e-03, -3.0465e-02, -1.5054e-01,  ...,  1.3414e-01,
            7.7026e-01,  3.8722e-01]],

         [[ 5.3940e-01,  1.1190e-01, -6.8393e-02,  ...,  5.6521e-01,
            7.7244e-01,  4.9441e-01],
          [ 2.0705e-01,  3.5952e-01,  7.2928e-01,  ...,  2.4627e-01,
            7.0937e-01,  7.9237e-01],
          [-2.6903e-01,  5.0806e-01, -8.1569e-05,  ...,  2.6775e-01,
            7.7648e-01,  9.0014e-01],
          [-2.7443e-02,  2.6349e-01,  2.4863e-01,  ...,  3.4242e-01,
            6.0391e-01,  3.1830e-01]],

         [[ 3.1323e-02,  3.9438e-01, -4.3632e-01,  ...,  5.0336e-01,
            6.1785e-01,  7.6743e-01],
          [-6.0846e-03,  3.4965e-01,  6.2175e-02,  ...,  4.0328e-01,
            8.5556e-01,  1.1851e+00],
          [ 9.0983e-02,  3.5287e-01, -6.1556e-01,  ...,  6.1409e-01,
            1.0389e-01,  1.3403e+00],
          [ 4.1758e-02,  3.4779e-01, -2.7984e-01,  ...,  5.7506e-01,
            9.1205e-01,  7.2519e-01]],

         ...,

         [[-1.1856e-01,  5.3108e-02, -2.4275e-01,  ...,  4.5507e-01,
            2.1404e-01,  4.9747e-01],
          [-2.3112e-02,  1.1754e-01, -4.6985e-02,  ...,  8.3683e-01,
            2.9503e-01,  3.3641e-01],
          [ 2.1974e-01,  1.5134e-01, -1.4446e-03,  ...,  2.6119e-01,
            9.1142e-02,  1.4308e-01],
          [-2.1346e-01,  1.9007e-01, -1.6636e-01,  ...,  8.7018e-01,
            8.4848e-02,  7.1562e-01]],

         [[ 5.6648e-02, -4.4986e-01, -4.8480e-03,  ...,  9.8571e-01,
            4.8285e-01,  2.1907e-01],
          [ 3.5270e-01, -9.1131e-01, -2.9932e-01,  ...,  3.7848e-01,
            5.9178e-01,  3.0805e-01],
          [ 5.7627e-01, -5.7798e-01, -2.6147e-02,  ...,  9.9188e-01,
            1.1629e-01,  4.7543e-01],
          [ 3.4217e-01, -6.3818e-01, -1.7660e-02,  ...,  1.0378e+00,
            2.4365e-02,  2.4170e-01]],

         [[ 2.5533e-01, -4.1102e-02, -2.0197e-01,  ...,  3.8558e-01,
            3.3143e-01,  1.7412e-01],
          [ 3.0628e-01, -3.0821e-01,  9.2625e-02,  ...,  1.1420e-01,
            2.5551e-01,  3.2388e-01],
          [-2.3627e-01, -1.8975e-01, -6.4668e-02,  ...,  3.6834e-01,
            3.3195e-01,  2.2223e-01],
          [-4.6845e-02, -6.5276e-02, -6.9525e-02,  ...,  4.7638e-01,
            1.2568e-01,  7.9409e-01]]]])

2025-06-08 11:43:21.811632 GPU 5 64403 test begin: paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 1, 4, 8],"float32"), None, Tensor([8, 1, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=True, )
outputs format not support
[accuracy error] paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 1, 4, 8],"float32"), None, Tensor([8, 1, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=True, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 121 / 256 (47.3%)
Greatest absolute difference: 1.0753461122512817 at index (4, 0, 1, 5) (up to 0.01 allowed)
Greatest relative difference: 3.776653289794922 at index (1, 0, 0, 6) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([8, 1, 4, 8]), dtype=torch.float32)
tensor([[[[-0.0528,  0.2805, -0.0169,  ...,  0.8902,  0.0262,  0.6924],
          [ 0.0518,  0.2226,  0.0724,  ...,  0.7340,  0.2081,  1.1441],
          [ 0.4312, -0.0433,  0.0682,  ...,  0.1266,  0.0944,  1.3905],
          [-0.1786, -0.0770,  0.2319,  ...,  0.1536,  0.4579,  1.3540]]],


        [[[ 0.1513, -0.4316,  0.1335,  ...,  0.7318,  0.7070,  0.2756],
          [ 0.1068, -0.1930, -0.0403,  ...,  0.4556,  0.4260,  0.0738],
          [ 0.6912, -0.2535, -0.0128,  ...,  0.4773,  0.5136,  0.4121],
          [ 0.7135, -0.4048,  0.0349,  ...,  0.8132,  0.3048,  0.1604]]],


        [[[-0.1807, -0.2775, -0.1037,  ...,  0.1853,  0.6459,  0.3300],
          [-0.1074, -0.4970, -0.5178,  ...,  0.5549,  0.8329,  0.4188],
          [-0.2165,  0.2087, -0.3907,  ...,  0.2257,  0.6308,  0.2504],
          [-0.3265,  0.2108,  0.2915,  ...,  0.1001,  0.9514,  0.5828]]],


        ...,


        [[[-0.0278, -0.0228,  0.3922,  ...,  0.0839,  0.8673,  0.7238],
          [-0.0763,  0.2964,  0.4112,  ...,  0.6515,  0.4627,  0.6283],
          [-0.1165, -0.3580,  0.1688,  ...,  0.4057,  0.6968,  1.4212],
          [-0.0449,  0.5444,  0.1379,  ...,  0.5899,  0.6459,  0.3252]]],


        [[[ 0.3820,  0.2385,  0.0327,  ...,  0.4106,  0.1582,  0.8075],
          [ 0.2193, -0.1947,  0.8464,  ...,  1.0958,  0.4833,  0.4246],
          [ 0.1637, -0.1907,  0.4404,  ...,  0.3847,  0.9837,  0.3590],
          [ 0.0828,  0.0632,  0.1114,  ...,  0.8079,  0.9444,  0.5417]]],


        [[[-0.4448, -0.2920,  0.0655,  ...,  0.3683,  0.0068,  0.2182],
          [ 0.0631, -0.2017, -0.2010,  ...,  0.2038,  0.4812,  0.2483],
          [-0.6584,  0.0764,  0.1664,  ...,  0.2092,  0.1127,  0.5439],
          [-0.3891, -0.1339,  0.1793,  ...,  0.2368,  0.2292,  0.1275]]]])
DESIRED: (shape=torch.Size([8, 1, 4, 8]), dtype=torch.float32)
tensor([[[[-0.0528,  0.2805, -0.0169,  ...,  0.9891,  0.1234,  0.5768],
          [ 0.0518,  0.2226,  0.0724,  ...,  0.8245,  0.3060,  0.6887],
          [ 0.4312, -0.0433,  0.0682,  ...,  0.2257,  0.0235,  0.9554],
          [-0.1786, -0.0770,  0.2319,  ...,  0.2989,  0.4366,  0.8681]]],


        [[[ 0.1513, -0.4316,  0.1335,  ...,  0.7454,  0.1480,  0.6472],
          [ 0.1068, -0.1930, -0.0403,  ...,  0.4548,  0.2021,  0.1843],
          [ 0.6912, -0.2535, -0.0128,  ...,  0.4827,  0.2102,  0.5626],
          [ 0.7135, -0.4048,  0.0349,  ...,  0.8191,  0.0850,  0.7456]]],


        [[[-0.1807, -0.2775, -0.1037,  ...,  0.3496,  0.6404,  0.3356],
          [-0.1074, -0.4970, -0.5178,  ...,  1.1215,  0.9088,  0.4935],
          [-0.2165,  0.2087, -0.3907,  ...,  0.5479,  0.6879,  0.2337],
          [-0.3265,  0.2108,  0.2915,  ...,  0.2694,  0.8473,  0.6801]]],


        ...,


        [[[-0.0278, -0.0228,  0.3922,  ...,  0.1062,  0.5639,  0.5077],
          [-0.0763,  0.2964,  0.4112,  ...,  0.7739,  0.2300,  0.2880],
          [-0.1165, -0.3580,  0.1688,  ...,  0.5401,  0.5044,  0.7636],
          [-0.0449,  0.5444,  0.1379,  ...,  0.6711,  0.4741,  0.2959]]],


        [[[ 0.3820,  0.2385,  0.0327,  ...,  0.4377,  0.1753,  0.7847],
          [ 0.2193, -0.1947,  0.8464,  ...,  0.9634,  0.5032,  0.2505],
          [ 0.1637, -0.1907,  0.4404,  ...,  0.3081,  1.0802,  0.3120],
          [ 0.0828,  0.0632,  0.1114,  ...,  0.7612,  1.0507,  0.6395]]],


        [[[-0.4448, -0.2920,  0.0655,  ...,  0.7754,  0.1050,  0.3121],
          [ 0.0631, -0.2017, -0.2010,  ...,  0.3670,  1.1559,  0.4449],
          [-0.6584,  0.0764,  0.1664,  ...,  0.8153,  0.5478,  0.9100],
          [-0.3891, -0.1339,  0.1793,  ...,  0.5818,  0.9076,  0.2114]]]])

2025-06-08 11:43:21.830686 GPU 5 64404 test begin: paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 1, 4, 8],"float32"), None, Tensor([8, 1, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=True, )
outputs format not support
[accuracy error] paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 1, 4, 8],"float32"), None, Tensor([8, 1, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=True, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 237 / 256 (92.6%)
Greatest absolute difference: 1.8211407661437988 at index (4, 0, 2, 1) (up to 0.01 allowed)
Greatest relative difference: 716.3846435546875 at index (3, 0, 2, 1) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([8, 1, 4, 8]), dtype=torch.float32)
tensor([[[[ 0.2800,  0.6666,  0.0990,  ...,  0.7797, -0.0658,  0.4151],
          [ 0.4223,  0.5142, -0.4579,  ...,  0.0936,  0.1001,  0.2766],
          [ 0.6590,  0.7365,  0.3546,  ...,  0.5371,  0.0273,  0.2777],
          [ 0.6679,  0.5709,  0.4157,  ...,  0.2369, -0.1514,  0.7996]]],


        [[[-0.3869,  0.3025, -0.1259,  ...,  0.2992,  0.0522,  0.5300],
          [-0.4059,  0.3952, -0.5790,  ...,  0.9028,  0.2786,  1.1153],
          [-0.2170,  0.0851, -0.4947,  ...,  0.7601, -0.0055,  0.2213],
          [ 0.2802,  0.3078, -0.2328,  ...,  0.4074,  0.2766,  0.4488]]],


        [[[ 0.2870,  0.2406, -0.2654,  ...,  0.2339,  0.4680,  0.3761],
          [ 0.4589,  0.1215, -0.1591,  ...,  0.5024,  0.2554,  0.2437],
          [ 0.0403,  0.0608,  0.2323,  ...,  0.4236,  0.2302,  0.1699],
          [ 0.0501,  0.0533,  0.2907,  ...,  0.3586,  0.1476,  0.3093]]],


        ...,


        [[[ 0.0439,  0.1685,  0.1523,  ...,  0.2702, -0.0186,  0.0208],
          [ 0.4704,  0.6096,  0.1921,  ...,  0.0506, -0.3822,  0.1916],
          [-0.1543,  0.9512, -0.3075,  ...,  1.1749, -0.2342,  0.1016],
          [-0.0073,  0.6231,  0.1801,  ...,  0.9868,  0.2050,  0.4397]]],


        [[[-0.1520,  1.2843, -0.0235,  ...,  0.5458,  0.0724,  0.4664],
          [-0.0073,  0.2887, -0.0263,  ...,  0.3647, -0.4638,  0.8678],
          [-0.1953,  0.5843, -0.0204,  ...,  0.5943, -0.6691,  0.5992],
          [-0.0990,  0.6101, -0.0211,  ...,  0.9612, -0.3364,  0.8306]]],


        [[[ 0.4419,  0.1893, -0.3769,  ...,  0.2617, -0.0325,  0.3130],
          [ 0.5873,  0.2436, -0.3479,  ...,  0.4876, -0.3075,  1.0172],
          [ 0.0075,  0.0185, -0.2733,  ...,  0.7500, -0.1863,  0.6524],
          [-0.0744,  0.0359, -0.3324,  ...,  0.1661, -0.0511,  0.4324]]]])
DESIRED: (shape=torch.Size([8, 1, 4, 8]), dtype=torch.float32)
tensor([[[[ 0.2805, -0.1421,  0.0807,  ...,  1.1297,  0.5453,  0.3360],
          [ 0.4221,  0.1138, -0.3102,  ...,  0.1980,  0.3231,  0.5965],
          [ 0.6560, -0.1663,  0.2538,  ...,  0.6598,  0.7180,  0.2019],
          [ 0.6673, -0.1485,  0.0963,  ...,  0.2691,  0.9381,  0.2656]]],


        [[[-0.1634,  0.1430, -0.1770,  ...,  0.5980,  0.5732,  0.5100],
          [-0.0592, -0.4039, -0.6082,  ...,  0.9040,  0.4173,  1.1426],
          [-0.5325, -0.2301, -0.0386,  ...,  0.3501,  0.2505,  0.6554],
          [ 0.1525, -0.1877, -0.4587,  ...,  0.1725,  0.0671,  0.2586]]],


        [[[ 0.2907,  0.0853, -0.3688,  ...,  0.1507,  0.8879,  1.0509],
          [ 0.3292, -0.1237, -0.0048,  ...,  0.1723,  0.8599,  0.8731],
          [ 0.0546, -0.0823, -0.0773,  ...,  0.1950,  0.6099,  0.2414],
          [ 0.0824, -0.0760,  0.0422,  ...,  0.1699,  0.6986,  0.6860]]],


        ...,


        [[[-0.0123, -0.0805,  0.5280,  ...,  0.1753,  0.4545,  0.3869],
          [ 0.4663,  0.0089,  0.2285,  ...,  0.0421,  0.4163,  0.1629],
          [-0.2326,  0.1267,  0.0951,  ...,  0.9971,  0.1932,  0.4627],
          [-0.1942, -0.0797,  0.2097,  ...,  0.6725,  0.9301,  0.4044]]],


        [[[-0.0948,  0.4842, -0.0185,  ...,  0.8038,  0.0198,  0.4638],
          [-0.2291,  0.0482, -0.0246,  ...,  0.1826,  0.0099,  0.9645],
          [-0.2904,  0.2746, -0.0088,  ...,  0.6278,  0.0039,  0.9712],
          [-0.0893, -0.1803, -0.0204,  ...,  0.9337,  0.0398,  0.8665]]],


        [[[ 0.4278, -0.1234, -0.0613,  ...,  0.1533,  0.2833,  0.4038],
          [ 0.5770, -0.2766, -0.2495,  ...,  0.3008,  0.5102,  0.8541],
          [-0.6468, -0.0429, -0.0369,  ...,  0.0584,  0.6313,  0.6430],
          [-0.0406, -0.0492, -0.1683,  ...,  0.1167,  0.1867,  0.4046]]]])

2025-06-08 11:43:21.857858 GPU 5 64406 test begin: paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 1, 4, 8],"float32"), None, Tensor([8, 1, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([1, 8],"int64"), use_neox_rotary_style=True, time_major=True, )
outputs format not support
[accuracy error] paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 1, 4, 8],"float32"), None, Tensor([8, 1, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([1, 8],"int64"), use_neox_rotary_style=True, time_major=True, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 239 / 256 (93.4%)
Greatest absolute difference: 1.6714932918548584 at index (4, 0, 1, 3) (up to 0.01 allowed)
Greatest relative difference: 138.81146240234375 at index (4, 0, 0, 1) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([8, 1, 4, 8]), dtype=torch.float32)
tensor([[[[-0.3149,  1.0778,  0.0824,  ...,  0.5761,  0.2623,  0.3578],
          [-0.1058,  0.1529,  0.0750,  ...,  0.3018,  0.0425,  0.2812],
          [-0.3718,  0.5603,  0.1614,  ...,  0.5692,  0.0728,  0.1568],
          [-0.0138,  0.8415,  0.2141,  ...,  0.2164,  0.2943,  0.5044]]],


        [[[ 0.1293,  0.4482, -0.1760,  ...,  0.1624,  0.2703,  0.8299],
          [ 0.3767,  0.3358,  0.0554,  ...,  1.3328,  0.2989,  0.5018],
          [ 0.2123,  0.3205, -0.3921,  ...,  0.8230,  0.5755,  0.6568],
          [ 0.1683,  0.4659, -0.0314,  ...,  0.2155, -0.1218,  0.2248]]],


        [[[ 0.3269,  0.6260,  0.2917,  ...,  0.4883,  0.3735,  1.2914],
          [-0.0203,  0.9107,  0.1304,  ...,  0.1168,  0.4807,  0.8853],
          [-0.2285,  0.3691, -0.5413,  ...,  0.1946,  0.1250,  0.8611],
          [ 0.1795,  0.5733, -0.4685,  ...,  0.1658, -0.0039,  1.1354]]],


        ...,


        [[[ 0.4388,  0.8994,  0.5649,  ...,  0.4220,  0.1890,  0.2053],
          [ 0.0929,  0.1812,  0.3539,  ...,  0.3734, -0.0292,  0.9784],
          [ 0.3638,  0.6246, -0.0946,  ...,  0.3092,  0.1942,  0.5691],
          [-0.2104,  0.2492,  0.8314,  ...,  0.0659,  0.2820,  1.0406]]],


        [[[ 0.0021,  1.4007,  0.1011,  ...,  0.3425,  0.3512,  0.9873],
          [-0.0408,  0.9769,  0.0763,  ...,  0.9120,  0.2544,  1.0613],
          [ 0.0687,  1.7109,  0.1211,  ...,  0.6065,  0.6484,  0.6930],
          [ 0.0758,  1.3006,  0.1316,  ...,  0.9215,  0.8658,  0.8407]]],


        [[[ 0.3889,  0.3672,  0.1139,  ...,  0.4292, -0.1166,  0.2027],
          [ 0.4367,  0.4089, -0.0172,  ...,  0.4630, -0.3942,  0.6760],
          [ 0.2884,  0.2463,  0.0464,  ...,  0.5703,  0.0247,  0.6158],
          [ 0.1487,  0.1240,  0.2046,  ...,  0.2670, -0.0254,  0.5210]]]])
DESIRED: (shape=torch.Size([8, 1, 4, 8]), dtype=torch.float32)
tensor([[[[-0.5337,  0.0665,  0.0823,  ...,  1.0610,  0.1360,  0.0994],
          [-0.5294,  0.1310,  0.0751,  ...,  0.1295,  0.1052,  0.5172],
          [-0.5360, -0.0599,  0.1615,  ...,  1.1425,  0.0592,  0.2064],
          [-0.1587,  0.0486,  0.2141,  ...,  0.3112,  0.1910,  0.3506]]],


        [[[ 0.2230,  0.3812, -0.4328,  ...,  0.1507,  0.2316,  0.4331],
          [ 0.2742,  0.1372, -0.1651,  ...,  0.8045,  0.6537,  0.1476],
          [ 0.2159,  0.1754, -0.3882,  ...,  0.6661,  0.6269,  0.1025],
          [ 0.2540,  0.3878,  0.0380,  ...,  0.1665,  0.2223,  0.2897]]],


        [[[-0.0714, -0.4328,  0.2842,  ...,  0.3429,  1.5819,  1.0318],
          [ 0.3395,  0.2041,  0.0459,  ...,  0.6565,  1.3944,  0.7637],
          [-0.0786,  0.0391, -0.2339,  ...,  0.5255,  0.5473,  1.0270],
          [ 0.2216, -0.4436, -0.1412,  ...,  0.4660,  0.5258,  1.1221]]],


        ...,


        [[[ 0.4760, -0.6752,  0.4956,  ...,  0.8472,  1.0204,  0.2332],
          [-0.2832, -0.6080,  0.5617,  ...,  0.3882,  0.6551,  0.3530],
          [ 0.2232, -0.4546, -0.0710,  ...,  0.5161,  0.7927,  0.4002],
          [ 0.0055,  0.0670,  0.3450,  ...,  0.4829,  1.5344,  0.1488]]],


        [[[ 0.0731,  0.7054,  0.0779,  ...,  1.0338,  0.1910,  0.9103],
          [ 0.0121,  0.0518,  0.0630,  ...,  1.4723,  0.1771,  1.1634],
          [ 0.1784,  0.4067,  0.0812,  ...,  1.4075,  0.2160,  0.1657],
          [ 0.0656,  0.0349,  0.1092,  ...,  1.2515,  0.2795,  0.3870]]],


        [[[ 0.3750, -0.1050,  0.2188,  ...,  0.2278,  0.3993,  0.3318],
          [ 0.4267, -0.3827, -0.1941,  ...,  0.2742,  0.5080,  0.6218],
          [ 0.2459, -0.1015, -0.1572,  ...,  0.0455,  0.5643,  0.3116],
          [ 0.1337, -0.3342, -0.0207,  ...,  0.0462,  0.5673,  0.2405]]]])

2025-06-08 11:43:21.944829 GPU 5 64405 test begin: paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 1, 4, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), None, Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=True, )
outputs format not support
[accuracy error] paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 1, 4, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), None, Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=True, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 123 / 256 (48.0%)
Greatest absolute difference: 0.8243944048881531 at index (5, 0, 2, 5) (up to 0.01 allowed)
Greatest relative difference: 9.851943016052246 at index (0, 0, 2, 6) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([8, 1, 4, 8]), dtype=torch.float32)
tensor([[[[ 1.7776e-01, -5.2463e-01,  3.7536e-01,  ...,  4.5696e-01,
            1.2410e+00,  9.2010e-01],
          [-1.8915e-01, -7.7476e-01,  2.2984e-01,  ...,  7.9413e-01,
            1.0810e+00,  3.7822e-01],
          [-1.2190e-01, -1.8394e-01,  2.2091e-01,  ...,  4.1697e-01,
            3.2785e-01,  6.0444e-01],
          [ 2.9731e-01, -3.1808e-01,  1.0056e-01,  ...,  8.0617e-01,
            1.9941e-01,  4.8793e-01]]],


        [[[-3.0671e-01,  3.2665e-01, -2.9563e-02,  ...,  7.2353e-01,
            6.1213e-01,  3.7801e-01],
          [-2.8524e-01,  8.2818e-01, -1.1814e-01,  ...,  4.0571e-01,
            1.3928e-01,  1.9130e-01],
          [-3.7007e-01,  9.7300e-02, -2.4501e-01,  ...,  5.8191e-01,
            8.1210e-01,  4.5125e-01],
          [ 3.1693e-01,  6.1901e-02, -6.9864e-02,  ...,  6.6791e-01,
            5.0128e-01,  1.7264e-01]]],


        [[[ 1.4678e-02,  1.8961e-01, -5.6395e-01,  ...,  6.4692e-01,
            3.0274e-01,  4.6177e-01],
          [ 9.9340e-04,  3.5792e-02, -5.6033e-01,  ...,  2.1615e-01,
            3.3175e-01,  5.9588e-01],
          [-7.3331e-01,  2.4774e-01, -3.1132e-01,  ...,  8.7534e-01,
            8.0416e-01,  4.9875e-01],
          [-6.9114e-01,  4.3333e-02, -1.1990e-01,  ...,  2.5079e-01,
            3.6414e-01,  7.5624e-01]]],


        ...,


        [[[-5.9478e-01, -1.6582e-01, -3.1324e-01,  ...,  5.5207e-02,
            6.2739e-01,  4.0574e-01],
          [-1.2760e-01, -7.0533e-01, -3.1365e-01,  ...,  4.3725e-02,
            2.8309e-01,  2.2708e-01],
          [-3.9878e-02, -4.5727e-01,  2.9730e-01,  ...,  2.3417e-01,
            6.8562e-01,  4.7841e-01],
          [ 2.7222e-01, -5.0881e-01,  2.6201e-01,  ...,  8.0334e-02,
            3.6318e-01,  3.2693e-02]]],


        [[[-1.6104e-01, -1.2789e-02, -4.4658e-01,  ...,  7.4336e-02,
            8.2267e-01,  1.1749e-01],
          [-3.0205e-01, -3.3890e-02, -4.6462e-03,  ...,  3.2392e-01,
            1.1244e-01,  8.4644e-01],
          [ 5.3493e-02, -2.7500e-02, -4.4037e-01,  ...,  1.8167e-01,
            7.9616e-01,  2.8310e-01],
          [ 8.2010e-02, -8.9646e-03,  1.9932e-02,  ...,  2.2583e-01,
            7.4635e-01,  8.7906e-01]]],


        [[[-1.8138e-01,  1.4633e-01, -5.0523e-01,  ...,  1.0606e-01,
            8.9423e-01,  7.3773e-01],
          [ 9.0401e-02,  6.7844e-01, -6.1802e-01,  ...,  4.6221e-01,
            6.0629e-01,  1.0882e+00],
          [ 5.5453e-02,  2.6364e-01, -4.3662e-01,  ...,  2.5057e-01,
            4.3297e-01,  1.4485e+00],
          [ 6.7675e-02,  7.8210e-01, -6.0964e-02,  ...,  5.7835e-01,
            8.1434e-01,  4.6057e-01]]]])
DESIRED: (shape=torch.Size([8, 1, 4, 8]), dtype=torch.float32)
tensor([[[[ 1.7776e-01, -5.2463e-01,  3.7536e-01,  ...,  3.2903e-01,
            4.6936e-01,  4.7398e-01],
          [-1.8915e-01, -7.7476e-01,  2.2984e-01,  ...,  6.1206e-01,
            4.8362e-01,  2.5816e-01],
          [-1.2190e-01, -1.8394e-01,  2.2091e-01,  ...,  3.8685e-01,
            3.0211e-02,  4.3003e-01],
          [ 2.9731e-01, -3.1808e-01,  1.0056e-01,  ...,  7.5898e-01,
            4.4415e-02,  7.8382e-02]]],


        [[[-3.0671e-01,  3.2665e-01, -2.9563e-02,  ...,  6.6735e-01,
            4.5416e-01,  2.8921e-01],
          [-2.8524e-01,  8.2818e-01, -1.1814e-01,  ...,  3.8323e-01,
            1.4605e-01,  3.0899e-01],
          [-3.7007e-01,  9.7300e-02, -2.4501e-01,  ...,  5.3441e-01,
            6.8140e-01,  3.5013e-01],
          [ 3.1693e-01,  6.1901e-02, -6.9864e-02,  ...,  6.1270e-01,
            3.8942e-01,  2.8608e-01]]],


        [[[ 1.4678e-02,  1.8961e-01, -5.6395e-01,  ...,  7.6547e-02,
            2.7009e-01,  3.3305e-01],
          [ 9.9340e-04,  3.5792e-02, -5.6033e-01,  ...,  1.9789e-01,
            3.0688e-01,  4.4769e-01],
          [-7.3331e-01,  2.4774e-01, -3.1132e-01,  ...,  1.5866e-01,
            9.4191e-01,  4.2482e-01],
          [-6.9114e-01,  4.3333e-02, -1.1990e-01,  ...,  2.1832e-01,
            4.3051e-01,  4.7156e-01]]],


        ...,


        [[[-5.9478e-01, -1.6582e-01, -3.1324e-01,  ...,  2.7329e-01,
            1.1529e+00,  1.8154e-01],
          [-1.2760e-01, -7.0533e-01, -3.1365e-01,  ...,  4.5119e-01,
            5.5371e-01,  1.1298e-01],
          [-3.9878e-02, -4.5727e-01,  2.9730e-01,  ...,  1.0586e+00,
            1.1356e+00,  6.2130e-01],
          [ 2.7222e-01, -5.0881e-01,  2.6201e-01,  ...,  5.0708e-01,
            5.8122e-01,  6.0562e-02]]],


        [[[-1.6104e-01, -1.2789e-02, -4.4658e-01,  ...,  3.7101e-02,
            4.6553e-01,  4.2639e-02],
          [-3.0205e-01, -3.3890e-02, -4.6462e-03,  ...,  1.4609e-01,
            1.1212e-01,  1.8256e-01],
          [ 5.3493e-02, -2.7500e-02, -4.4037e-01,  ...,  8.7992e-02,
            4.4348e-01,  1.7912e-01],
          [ 8.2010e-02, -8.9646e-03,  1.9932e-02,  ...,  9.1391e-02,
            7.8786e-01,  1.6764e-01]]],


        [[[-1.8138e-01,  1.4633e-01, -5.0523e-01,  ...,  1.2294e-01,
            5.8066e-01,  4.1838e-01],
          [ 9.0401e-02,  6.7844e-01, -6.1802e-01,  ...,  3.0937e-01,
            3.6419e-01,  5.9011e-01],
          [ 5.5453e-02,  2.6364e-01, -4.3662e-01,  ...,  7.4679e-01,
            2.6059e-01,  7.9921e-01],
          [ 6.7675e-02,  7.8210e-01, -6.0964e-02,  ...,  7.5862e-01,
            5.7152e-01,  2.4926e-01]]]])

2025-06-08 11:43:22.005223 GPU 5 64401 test begin: paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 1, 4, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), None, Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=True, )
outputs format not support
[accuracy error] paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 1, 4, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), None, Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=True, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 244 / 256 (95.3%)
Greatest absolute difference: 1.7280526161193848 at index (3, 0, 1, 3) (up to 0.01 allowed)
Greatest relative difference: 29057.48046875 at index (0, 0, 1, 1) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([8, 1, 4, 8]), dtype=torch.float32)
tensor([[[[-0.1067,  0.2625, -0.0397,  ...,  0.5211,  0.2124,  1.2747],
          [-0.1092,  0.7300, -0.0335,  ...,  1.0652,  0.0249,  0.2497],
          [-0.1239,  0.4635,  0.0086,  ...,  0.7128,  0.3649,  1.1368],
          [ 0.0992,  0.6701, -0.1809,  ...,  0.6620,  0.3838,  0.6185]]],


        [[[ 0.3942,  0.1777, -0.1350,  ...,  0.1373,  0.0304,  0.0653],
          [ 0.0339,  0.4406, -0.4356,  ...,  0.7408, -0.3336,  0.2677],
          [-0.3481,  0.2869,  0.4199,  ...,  0.8949, -0.4184,  0.2534],
          [ 0.1224,  0.1902,  0.0485,  ...,  0.3146,  0.2938,  0.2376]]],


        [[[ 0.1697,  0.7303,  0.6559,  ...,  1.0615, -0.4137,  0.3907],
          [ 0.4406,  0.4205, -0.0795,  ...,  0.8948, -0.6718,  0.5735],
          [ 0.6265,  0.6653,  0.0413,  ...,  0.0296,  0.5151,  0.0947],
          [ 0.2586,  0.8415,  0.2357,  ...,  0.6998, -0.3417,  0.6349]]],


        ...,


        [[[ 0.0101,  0.3682,  0.5038,  ...,  0.5395, -0.2518,  1.0287],
          [-0.1973,  1.2593,  0.6305,  ...,  0.3247, -0.3090,  0.4795],
          [-0.3768,  1.0995, -0.0488,  ...,  0.5147,  0.0704,  0.2280],
          [-0.1175,  0.8119,  0.5004,  ...,  0.6266, -0.0847,  0.1465]]],


        [[[-0.3645,  0.1537, -0.0460,  ...,  0.4493,  0.2500,  0.8802],
          [-0.1518,  0.5218,  0.1966,  ...,  0.7973,  0.0175,  0.4849],
          [ 0.0100,  0.4100,  0.3467,  ...,  0.4853,  0.3677,  0.3605],
          [-0.1947,  0.4901,  0.5201,  ...,  0.1478,  0.1735,  0.3733]]],


        [[[-0.1147,  0.1914, -0.3035,  ...,  0.2311, -0.4122,  0.2504],
          [ 0.6492,  0.2261, -0.0459,  ...,  0.3819,  0.0820,  0.0649],
          [ 0.0424,  0.4576,  0.3387,  ...,  0.1217, -0.0595,  0.1363],
          [ 0.3229,  0.4920, -0.3923,  ...,  0.1560, -0.1337,  0.2443]]]])
DESIRED: (shape=torch.Size([8, 1, 4, 8]), dtype=torch.float32)
tensor([[[[-6.5257e-02, -3.1365e-03, -1.5874e-01,  ...,  5.0036e-01,
            9.0094e-02,  8.1900e-01],
          [-1.1327e-01, -2.5123e-05, -1.0657e-02,  ...,  7.9632e-01,
            4.4848e-02,  2.2734e-01],
          [-2.9617e-02, -1.0777e-01, -7.2618e-02,  ...,  7.2583e-01,
            3.8306e-01,  6.8123e-01],
          [-1.2255e-02, -1.1167e-01, -1.3375e-01,  ...,  1.5275e-01,
            1.8171e-01,  4.0195e-01]]],


        [[[ 3.1297e-01, -6.4249e-02,  1.9484e-01,  ...,  2.0020e-02,
            5.5022e-01,  3.7312e-01],
          [ 3.3710e-01, -2.4878e-01, -2.6893e-01,  ...,  4.6215e-01,
            2.3414e-01,  5.0597e-01],
          [-1.4754e-01, -3.1521e-01,  2.1286e-01,  ...,  4.9630e-01,
            7.8447e-01,  1.7151e-01],
          [ 2.3212e-01, -1.2007e-01,  1.8299e-02,  ...,  1.5888e-01,
            1.2046e+00,  4.2556e-01]]],


        [[[ 2.0387e-01,  3.7528e-01,  6.7253e-01,  ...,  8.9719e-01,
            2.0006e-01,  4.9051e-01],
          [ 3.0160e-01,  1.6374e-01,  1.8290e-02,  ...,  2.5285e-01,
            8.9633e-02,  1.1054e+00],
          [ 7.1422e-01,  3.7084e-01, -1.9263e-02,  ...,  1.4676e-01,
            7.9499e-01,  2.9180e-01],
          [ 3.6392e-01,  4.9906e-01,  2.4193e-01,  ...,  7.5285e-01,
            6.3027e-01,  9.7410e-01]]],


        ...,


        [[[-2.2100e-01, -6.7511e-01, -1.1199e-02,  ...,  7.2084e-01,
            1.3920e+00,  7.7516e-01],
          [-1.3735e-01,  3.1475e-01,  4.5448e-01,  ...,  6.3089e-01,
            9.1405e-01,  4.7957e-01],
          [-2.2099e-01,  1.8164e-01,  1.7420e-01,  ...,  1.3691e+00,
            6.9893e-01,  1.0220e-01],
          [-3.4219e-01,  1.3096e-01,  6.5182e-01,  ...,  4.4529e-01,
            8.9773e-01,  1.4504e-01]]],


        [[[-5.5877e-02, -4.7392e-01, -1.4474e-02,  ...,  6.3491e-01,
            5.9912e-01,  1.5650e+00],
          [-2.4264e-01, -2.8406e-01,  3.5323e-01,  ...,  3.8180e-01,
            4.6451e-01,  1.3269e+00],
          [-2.3025e-02, -5.3835e-01,  2.9622e-01,  ...,  1.4223e-01,
            5.2506e-01,  2.7463e-01],
          [ 8.2221e-03, -5.9303e-03,  4.1597e-01,  ...,  4.0715e-01,
            5.0628e-01,  2.9671e-01]]],


        [[[-4.4544e-02,  1.2188e-01,  1.4485e-01,  ...,  3.3319e-01,
            3.1763e-01,  1.4291e+00],
          [ 5.4287e-01,  5.2596e-02, -3.6027e-02,  ...,  3.9581e-01,
            4.8430e-01,  4.6132e-01],
          [ 2.0613e-01,  4.1226e-01,  1.6116e-01,  ...,  1.0694e-01,
            7.1799e-01,  4.2293e-01],
          [ 6.2616e-01,  3.5973e-01, -2.6286e-01,  ...,  3.3995e-01,
            4.8519e-01,  1.3167e+00]]]])

2025-06-08 11:43:22.059463 GPU 5 64406 test begin: paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 1, 4, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), None, Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([1, 8],"int64"), use_neox_rotary_style=True, time_major=True, )
outputs format not support
[accuracy error] paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 1, 4, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), None, Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([1, 8],"int64"), use_neox_rotary_style=True, time_major=True, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 245 / 256 (95.7%)
Greatest absolute difference: 1.8022512197494507 at index (7, 0, 2, 4) (up to 0.01 allowed)
Greatest relative difference: 255.4149932861328 at index (7, 0, 3, 3) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([8, 1, 4, 8]), dtype=torch.float32)
tensor([[[[ 0.2955,  0.3700,  0.1365,  ...,  0.6440, -0.3713,  0.5985],
          [-0.5197,  0.5317,  0.6166,  ...,  0.1582, -0.6092,  0.6278],
          [-0.2257,  0.5035,  0.4699,  ...,  0.4892, -0.1211,  0.7865],
          [ 0.0353,  0.7396,  0.5825,  ...,  0.2335, -0.4850,  0.9971]]],


        [[[-0.0687,  0.7748,  0.0618,  ...,  0.7532,  0.7298,  0.5924],
          [-0.3660,  0.1222, -0.0762,  ...,  0.5553,  0.0579,  0.7284],
          [-0.1609,  0.8255,  0.0048,  ...,  0.9579, -0.3516,  0.4306],
          [-0.1239,  0.1122, -0.0123,  ...,  0.6540, -0.0284,  0.4942]]],


        [[[-0.6348,  0.0165, -0.0095,  ...,  0.0806,  0.2516,  0.6544],
          [ 0.4592,  0.7563,  0.5753,  ...,  0.1234,  0.3028,  0.4932],
          [ 0.2891,  0.5282,  0.2143,  ...,  0.2232,  0.5698,  0.6951],
          [ 0.0504,  0.7166,  0.1887,  ...,  0.1119, -0.0109,  0.3591]]],


        ...,


        [[[-0.1918,  0.3972,  0.2832,  ...,  0.2931,  0.2581,  0.3456],
          [-0.1600,  0.5292,  0.0097,  ...,  0.6964,  0.1059,  0.2365],
          [ 0.3638,  1.0232,  0.3609,  ...,  0.4787, -0.0422,  0.0795],
          [-0.0388,  0.9778, -0.1187,  ...,  1.0225, -0.1676,  0.0850]]],


        [[[-0.7785,  0.7608, -0.1520,  ...,  1.1902, -0.9189,  0.0385],
          [-0.0449,  0.3599, -0.2918,  ...,  0.5516, -0.1734,  0.0404],
          [ 0.0025,  0.4703, -0.8366,  ...,  0.5108,  0.1585,  0.1604],
          [-0.5338,  0.6557, -0.1659,  ...,  1.0109, -0.5560,  0.1382]]],


        [[[ 0.1088,  1.2874,  0.2045,  ...,  0.5860,  0.3804,  0.5213],
          [-0.2169,  0.7184, -0.2937,  ...,  0.4234, -0.2350,  0.4913],
          [ 0.4858,  0.6684,  0.0308,  ...,  0.9395,  0.3898,  0.4783],
          [ 0.4669,  0.6873,  0.0865,  ...,  0.6245, -0.1954,  0.4791]]]])
DESIRED: (shape=torch.Size([8, 1, 4, 8]), dtype=torch.float32)
tensor([[[[ 0.3827, -0.4412,  0.1294,  ...,  0.6375,  0.4805,  0.3361],
          [-0.1059,  0.4495,  0.5195,  ...,  0.5059,  0.5698,  0.4666],
          [-0.2655,  0.2158,  0.1490,  ...,  0.4991,  0.8916,  0.1227],
          [ 0.3792,  0.2801,  0.2890,  ...,  0.5085,  0.9437,  0.3969]]],


        [[[-0.2491, -0.1423,  0.0167,  ...,  0.4906,  0.2067,  0.1394],
          [-0.4375,  0.0963, -0.0865,  ...,  0.6426,  0.1222,  0.3723],
          [-0.0888, -0.5263,  0.0360,  ...,  0.7318,  0.1229,  0.3583],
          [-0.1139, -0.4710, -0.0359,  ...,  0.3363,  0.0979,  0.2123]]],


        [[[-0.1728, -0.0365,  0.1087,  ...,  0.8721,  0.8597,  0.8268],
          [ 0.4481, -0.0961,  0.2323,  ...,  0.1505,  0.9421,  0.1088],
          [-0.2341, -0.0723, -0.0078,  ...,  0.1477,  1.1314,  0.4902],
          [ 0.1913, -0.0280,  0.1104,  ...,  0.6609,  0.3535,  0.2606]]],


        ...,


        [[[-0.0364,  0.0285,  0.1413,  ...,  0.5891,  0.5120,  0.2608],
          [-0.3356, -0.1013, -0.1012,  ...,  0.7378,  0.2005,  0.2039],
          [ 0.0916, -0.1518,  0.5836,  ...,  0.3081,  0.4279,  0.4409],
          [-0.1772, -0.3951,  0.2433,  ...,  1.1086,  0.1741,  0.7001]]],


        [[[-0.7768, -0.1918, -0.0155,  ...,  1.2283,  0.4045,  0.7330],
          [-0.2058, -0.3157, -0.1418,  ...,  0.4297,  0.2029,  0.2045],
          [-0.4860,  0.0237, -0.7024,  ...,  0.1749,  0.1400,  0.1452],
          [-0.4823, -0.3531, -0.4967,  ...,  1.0634,  0.1362,  0.5612]]],


        [[[ 0.2701,  0.0296, -0.4109,  ...,  0.9382,  1.0613,  0.0318],
          [-0.0121, -0.0855,  0.3002,  ...,  0.8019,  0.9176,  0.1064],
          [-0.3341, -0.7889, -0.5886,  ...,  0.5446,  0.6256,  0.0253],
          [ 0.0036, -0.5645,  0.1246,  ...,  0.4615,  0.6216,  0.0737]]]])

2025-06-08 11:43:22.151698 GPU 5 64404 test begin: paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 1, 4, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=True, )
[accuracy error] paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 1, 4, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=True, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 123 / 256 (48.0%)
Greatest absolute difference: 1.025583028793335 at index (3, 0, 0, 5) (up to 0.01 allowed)
Greatest relative difference: 36.89458465576172 at index (3, 0, 1, 5) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([8, 1, 4, 8]), dtype=torch.float32)
tensor([[[[ 1.7799e-01,  3.3058e-01, -1.0012e-01,  ...,  7.8919e-02,
            6.3450e-01,  5.8845e-01],
          [ 5.7778e-01, -5.8883e-01, -1.0494e-01,  ...,  5.2930e-01,
            3.8464e-01,  3.5676e-01],
          [ 4.3373e-01, -6.4153e-01, -5.2604e-02,  ...,  4.9124e-01,
            2.4676e-01,  2.7516e-01],
          [ 1.8968e-01,  1.6497e-01, -2.2228e-02,  ...,  3.4593e-01,
            2.2026e-01,  4.3337e-01]]],


        [[[ 1.0837e-01, -2.4853e-02, -3.5283e-01,  ...,  7.0274e-01,
            4.2124e-01,  7.1518e-01],
          [-9.9822e-02, -2.6613e-01, -6.3316e-01,  ...,  6.7572e-01,
            7.9999e-01,  5.3891e-01],
          [-8.9416e-02, -1.7148e-01, -6.7123e-01,  ...,  2.5039e-01,
            7.3179e-01,  5.8846e-01],
          [-1.1807e-01, -6.5264e-02, -8.2297e-01,  ...,  4.2242e-01,
            6.5360e-01,  6.7609e-01]]],


        [[[-1.9035e-01,  2.2710e-01,  9.2351e-03,  ...,  4.9566e-01,
            4.9744e-01,  2.4935e-01],
          [-2.0604e-01, -1.6253e-01,  4.0226e-01,  ...,  5.1812e-01,
            6.5967e-01,  4.5550e-01],
          [-7.6378e-02,  9.8463e-03,  3.6543e-01,  ...,  9.1140e-02,
            6.2017e-01,  4.8912e-01],
          [-3.2344e-01,  6.5519e-02,  1.5287e-01,  ...,  5.1713e-01,
            3.5538e-01,  4.2773e-01]]],


        ...,


        [[[ 3.0481e-01, -3.6912e-01,  8.7652e-02,  ...,  4.7383e-01,
            1.2815e-01,  1.9087e-01],
          [ 3.4782e-01, -1.9165e-01, -2.2786e-01,  ...,  1.4798e+00,
            1.7554e-01,  1.5255e-01],
          [ 1.2421e-01, -5.4882e-01, -4.7407e-01,  ...,  7.1266e-01,
            2.5666e-01,  2.5066e-01],
          [ 1.9725e-01,  2.1516e-02, -1.2070e-01,  ...,  1.5959e+00,
            1.5009e-01,  2.3816e-01]]],


        [[[ 3.9855e-01,  4.2365e-01,  1.3439e-01,  ...,  5.2060e-01,
            3.6261e-01,  3.0779e-01],
          [ 2.0489e-01,  1.5470e-01,  2.9320e-02,  ...,  2.0890e-01,
            2.3734e-01,  1.7153e-01],
          [ 3.0945e-01,  8.6277e-03,  8.3977e-04,  ...,  1.5392e-01,
            1.4334e-01,  2.5251e-01],
          [-2.7102e-02,  2.8437e-01, -4.0237e-03,  ...,  4.6626e-01,
            1.7773e-01,  8.4294e-01]]],


        [[[-5.6399e-01, -1.6344e-01, -3.6409e-01,  ...,  6.1960e-01,
            1.0165e+00,  6.8900e-01],
          [-5.1156e-01, -3.0679e-01, -4.1081e-01,  ...,  3.7755e-01,
            1.0712e+00,  4.6678e-01],
          [-3.2196e-01, -1.0336e-01, -1.6160e-01,  ...,  2.3542e-01,
            7.4599e-01,  1.4416e-01],
          [-7.7466e-01, -4.0600e-01,  9.3188e-04,  ...,  6.2042e-01,
            4.8767e-01,  3.5384e-01]]]])
DESIRED: (shape=torch.Size([8, 1, 4, 8]), dtype=torch.float32)
tensor([[[[ 1.7799e-01,  3.3058e-01, -1.0012e-01,  ...,  5.7791e-01,
            2.3562e-01,  1.0868e-01],
          [ 5.7778e-01, -5.8883e-01, -1.0494e-01,  ...,  1.2053e+00,
            9.1676e-02,  6.7331e-02],
          [ 4.3373e-01, -6.4153e-01, -5.2604e-02,  ...,  1.0281e+00,
            7.5832e-02,  5.4177e-02],
          [ 1.8968e-01,  1.6497e-01, -2.2228e-02,  ...,  1.3110e+00,
            9.6278e-02,  7.9316e-02]]],


        [[[ 1.0837e-01, -2.4853e-02, -3.5283e-01,  ...,  4.8729e-01,
            2.6642e-01,  2.7339e-01],
          [-9.9822e-02, -2.6613e-01, -6.3316e-01,  ...,  4.8165e-01,
            5.4968e-01,  2.1961e-01],
          [-8.9416e-02, -1.7148e-01, -6.7123e-01,  ...,  1.8241e-01,
            3.9382e-01,  2.6930e-01],
          [-1.1807e-01, -6.5264e-02, -8.2297e-01,  ...,  2.9563e-01,
            8.7154e-02,  3.0147e-01]]],


        [[[-1.9035e-01,  2.2710e-01,  9.2351e-03,  ...,  6.3420e-01,
            8.3293e-01,  1.7867e-01],
          [-2.0604e-01, -1.6253e-01,  4.0226e-01,  ...,  6.8571e-01,
            7.9718e-01,  4.5775e-01],
          [-7.6378e-02,  9.8463e-03,  3.6543e-01,  ...,  1.1843e-01,
            7.5951e-01,  5.0733e-01],
          [-3.2344e-01,  6.5519e-02,  1.5287e-01,  ...,  6.7143e-01,
            4.7978e-01,  4.4798e-01]]],


        ...,


        [[[ 3.0481e-01, -3.6912e-01,  8.7652e-02,  ...,  3.7601e-01,
            6.4822e-01,  5.0399e-01],
          [ 3.4782e-01, -1.9165e-01, -2.2786e-01,  ...,  1.3668e+00,
            5.8536e-01,  3.9883e-01],
          [ 1.2421e-01, -5.4882e-01, -4.7407e-01,  ...,  5.6682e-01,
            7.3332e-01,  6.8599e-01],
          [ 1.9725e-01,  2.1516e-02, -1.2070e-01,  ...,  1.5197e+00,
            5.6497e-01,  6.7833e-01]]],


        [[[ 3.9855e-01,  4.2365e-01,  1.3439e-01,  ...,  9.1428e-01,
            1.8194e-01,  4.5046e-01],
          [ 2.0489e-01,  1.5470e-01,  2.9320e-02,  ...,  3.7667e-01,
            1.8149e-01,  2.7789e-01],
          [ 3.0945e-01,  8.6277e-03,  8.3977e-04,  ...,  3.4508e-01,
            1.2756e-01,  3.0244e-01],
          [-2.7102e-02,  2.8437e-01, -4.0237e-03,  ...,  8.7979e-01,
            1.6357e-01,  1.0970e+00]]],


        [[[-5.6399e-01, -1.6344e-01, -3.6409e-01,  ...,  7.2098e-01,
            2.8952e-01,  6.0088e-01],
          [-5.1156e-01, -3.0679e-01, -4.1081e-01,  ...,  3.6800e-01,
            2.7132e-01,  1.6666e-01],
          [-3.2196e-01, -1.0336e-01, -1.6160e-01,  ...,  2.5974e-01,
            3.4392e-01,  1.8040e-01],
          [-7.7466e-01, -4.0600e-01,  9.3188e-04,  ...,  6.3851e-01,
            3.5750e-01,  5.2415e-01]]]])

2025-06-08 11:43:22.173896 GPU 5 64403 test begin: paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 1, 4, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=True, )
[accuracy error] paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 1, 4, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=True, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 244 / 256 (95.3%)
Greatest absolute difference: 1.4436709880828857 at index (5, 0, 3, 4) (up to 0.01 allowed)
Greatest relative difference: 113.91496276855469 at index (7, 0, 2, 1) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([8, 1, 4, 8]), dtype=torch.float32)
tensor([[[[-0.5920,  0.8622, -0.0783,  ...,  0.4725, -0.3679,  0.3248],
          [ 0.0057,  0.0861, -0.1106,  ...,  0.2772, -0.5090,  0.7560],
          [-0.2001,  0.3056,  0.0172,  ...,  0.8873, -0.0075,  0.0806],
          [-0.2469,  0.4592,  0.3268,  ...,  0.6656, -0.2437,  0.6528]]],


        [[[ 0.5586,  0.2000, -0.2035,  ...,  0.8028,  0.0341,  0.0672],
          [ 0.5709,  0.5081, -0.2998,  ...,  0.4575,  0.5203,  0.0747],
          [ 0.3820,  0.4242, -0.2602,  ...,  0.4730,  0.5972,  0.0619],
          [ 0.4619,  0.1949, -0.1363,  ...,  0.5861,  0.5291,  0.0392]]],


        [[[ 0.3401,  0.7285,  0.0806,  ...,  0.3540, -0.0945,  0.5214],
          [-0.1986,  0.3668,  0.2453,  ...,  0.3778,  0.0656,  0.6460],
          [-0.0454,  0.8806, -0.0236,  ...,  0.2808, -0.5117,  1.1789],
          [-0.2464,  0.2045,  0.3082,  ...,  0.3189,  0.1496,  0.4783]]],


        ...,


        [[[ 0.4581,  0.4651, -0.1822,  ...,  0.8052, -0.2947,  0.5606],
          [ 0.0204,  0.4913,  0.1761,  ...,  0.8749, -0.4289,  0.5762],
          [ 0.1812,  0.6481,  0.2274,  ...,  0.4497, -0.2664,  0.2348],
          [ 0.4551,  0.4171,  0.3117,  ...,  0.9381, -0.4039,  0.4705]]],


        [[[-0.2067,  0.2652, -0.0451,  ...,  0.3036,  0.0625,  0.3352],
          [-0.5039,  0.9917,  0.1923,  ...,  1.6155,  0.4306,  0.7001],
          [-0.3254,  0.5502,  0.1354,  ...,  1.0408, -0.0938,  0.2187],
          [-0.7849,  0.7007,  0.0249,  ...,  0.8580, -0.2233,  0.2135]]],


        [[[ 0.0715,  0.0892,  0.1794,  ...,  0.4152, -0.4218,  0.2162],
          [-0.4477,  0.1458,  0.1227,  ...,  0.4232,  0.1741,  0.2160],
          [-0.2832,  0.3702,  0.3562,  ...,  0.8358, -0.3350,  0.2671],
          [-0.0554,  0.1856, -0.1067,  ...,  0.9490, -0.2722,  0.5882]]]])
DESIRED: (shape=torch.Size([8, 1, 4, 8]), dtype=torch.float32)
tensor([[[[-0.6592,  0.5056, -0.0358,  ...,  0.3573,  0.1308,  0.3174],
          [-0.1014, -0.1155, -0.1054,  ...,  0.2955,  0.3832,  0.4967],
          [-0.6022, -0.1157,  0.0122,  ...,  0.8284,  0.0610,  0.0426],
          [-0.3026, -0.0261,  0.2264,  ...,  0.7593,  0.4942,  0.1294]]],


        [[[ 0.5345, -0.0755, -0.0360,  ...,  0.3381,  0.0390,  0.8309],
          [ 0.5911,  0.3560, -0.2969,  ...,  0.2219,  0.1059,  0.8444],
          [ 0.4027,  0.1961, -0.3136,  ...,  0.4374,  0.2598,  0.6818],
          [ 0.4518, -0.0874, -0.2832,  ...,  0.4011,  0.1539,  0.3361]]],


        [[[ 0.2951, -0.1746,  0.0732,  ...,  0.4010,  0.2597,  0.1016],
          [-0.0429, -0.2115,  0.1620,  ...,  0.5957,  0.4214,  0.0668],
          [ 0.1645,  0.2057,  0.0292,  ...,  0.7835,  0.4142,  0.3132],
          [-0.0862, -0.2246,  0.2017,  ...,  0.4967,  0.3894,  0.0158]]],


        ...,


        [[[ 0.2510, -0.1516, -0.1805,  ...,  0.2243,  0.6448,  0.4163],
          [-0.0034,  0.0740,  0.1685,  ...,  0.5991,  0.6524,  0.3520],
          [ 0.5070, -0.2082,  0.4003,  ...,  0.7734,  0.2827,  0.4141],
          [ 0.2969, -0.5006,  0.2934,  ...,  0.3223,  0.5300,  0.2406]]],


        [[[-0.3160,  0.2035,  0.0481,  ...,  0.1275,  0.3842,  0.6031],
          [-0.7130,  0.2255, -0.1593,  ...,  1.0570,  0.6610,  0.5097],
          [-0.6693,  0.1843,  0.1652,  ...,  0.5420,  0.3289,  0.4934],
          [-0.2408,  0.3547,  0.1921,  ...,  0.9376,  0.3129,  0.7237]]],


        [[[-0.1479, -0.2109,  0.3740,  ...,  0.0881,  0.1898,  1.2137],
          [-0.1324, -0.2014,  0.1607,  ...,  0.3166,  0.4676,  0.7711],
          [-0.4059, -0.0033,  0.3992,  ...,  0.2664,  0.3229,  0.7749],
          [-0.5747, -0.1582, -0.1447,  ...,  0.1585,  0.5608,  1.3192]]]])

2025-06-08 11:43:22.311178 GPU 5 64406 test begin: paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 1, 4, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([1, 8],"int64"), use_neox_rotary_style=True, time_major=True, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 1, 4, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([8, 1, 2, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([1, 8],"int64"), use_neox_rotary_style=True, time_major=True, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 225 / 256 (87.9%)
Greatest absolute difference: 1.3217140436172485 at index (3, 0, 2, 1) (up to 0.01 allowed)
Greatest relative difference: 54.14744567871094 at index (1, 0, 3, 3) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([8, 1, 4, 8]), dtype=torch.float32)
tensor([[[[ 1.4247e-02,  7.8362e-02,  3.7363e-01,  ...,  9.7696e-01,
            2.1373e-01,  2.9896e-01],
          [ 2.8099e-04,  1.9387e-01,  6.1226e-02,  ...,  3.9891e-01,
            5.3567e-01,  4.2797e-01],
          [ 3.3313e-01,  2.6341e-01,  3.4140e-01,  ...,  1.5485e-01,
            5.7588e-01,  4.6326e-01],
          [ 1.1571e-01,  9.4095e-02,  1.4464e-01,  ...,  6.8765e-01,
            7.4269e-01,  5.5546e-01]]],


        [[[-1.3745e-01,  2.3573e-01,  5.9523e-01,  ...,  2.9839e-01,
            4.5710e-01,  1.1784e-01],
          [-2.3138e-02,  3.8298e-01,  1.8330e-01,  ...,  6.4307e-01,
           -4.5406e-03,  2.9250e-02],
          [ 5.8765e-01,  1.6871e-01,  1.3627e-01,  ...,  7.7325e-01,
            1.9666e-01,  3.3956e-02],
          [-2.2410e-01,  1.4888e-01,  6.8211e-01,  ...,  3.8569e-01,
            3.9622e-01,  9.7347e-02]]],


        [[[ 2.2197e-02,  7.0460e-01,  1.3916e-03,  ...,  7.7408e-01,
           -1.6549e-01,  5.6470e-01],
          [ 5.8323e-04,  1.7066e-01, -1.3892e-02,  ...,  5.9104e-01,
           -5.7738e-02,  4.2550e-01],
          [-1.1694e-01,  8.3222e-01,  1.4157e-02,  ...,  2.8971e-01,
            1.3328e-01,  4.3690e-01],
          [-1.2471e-01,  8.0171e-01,  1.7063e-02,  ...,  7.0427e-01,
            8.5020e-02,  6.1163e-02]]],


        ...,


        [[[-8.7854e-02,  7.0716e-01,  1.0295e-01,  ...,  2.1125e-01,
           -1.9706e-01,  9.7834e-01],
          [-3.9352e-01,  6.4841e-01,  3.6437e-02,  ...,  6.2183e-01,
           -1.9097e-01,  7.6871e-01],
          [-1.0851e-01,  2.0066e-01,  4.6544e-02,  ...,  6.7176e-01,
           -9.7037e-02,  5.3508e-01],
          [-4.1402e-01,  6.1010e-01,  2.5920e-01,  ...,  1.0261e-01,
           -6.0713e-02,  2.6645e-01]]],


        [[[ 2.4088e-01,  3.2161e-01, -4.1398e-01,  ...,  3.7939e-02,
            2.9275e-02,  1.0741e+00],
          [ 1.0040e-02,  7.8970e-01, -3.2508e-01,  ...,  3.4497e-01,
            2.8609e-02,  1.0301e+00],
          [ 2.9779e-01,  2.2966e-01, -3.4846e-01,  ...,  6.0390e-01,
            1.5599e-01,  5.8372e-01],
          [ 2.2809e-01,  4.2800e-01,  2.0821e-02,  ...,  3.9820e-01,
           -2.0879e-01,  2.1034e-01]]],


        [[[ 4.3157e-01,  6.2919e-01, -2.3560e-02,  ...,  7.6229e-01,
            2.0428e-01,  4.5623e-01],
          [ 2.1552e-01,  9.2598e-01,  1.1941e-01,  ...,  6.9907e-01,
           -1.7866e-01,  2.7495e-01],
          [-5.1014e-01,  1.0044e+00,  1.5017e-01,  ...,  5.3281e-01,
           -6.6134e-01,  7.9805e-01],
          [-3.4559e-01,  9.7890e-01,  1.2763e-01,  ...,  5.2816e-01,
           -1.4522e-01,  3.1097e-01]]]])
DESIRED: (shape=torch.Size([8, 1, 4, 8]), dtype=torch.float32)
tensor([[[[ 4.0612e-03, -1.5888e-02,  3.7197e-01,  ...,  1.7266e-01,
            1.8164e-01,  5.8501e-01],
          [ 6.1359e-03,  1.1921e-02,  6.2337e-02,  ...,  3.8827e-01,
            2.9249e-01,  5.0808e-01],
          [ 3.3569e-01,  6.8500e-02,  3.3389e-01,  ...,  1.2634e-01,
            3.6227e-01,  4.9407e-01],
          [ 1.1272e-01, -1.8777e-01,  1.1049e-01,  ...,  3.5169e-01,
            4.0899e-01,  3.3320e-01]]],


        [[[ 2.3345e-02,  5.6746e-02,  5.8417e-01,  ...,  1.9484e-01,
            7.7892e-01,  5.7876e-01],
          [ 1.7344e-01, -8.0108e-03,  1.8449e-01,  ...,  3.6869e-01,
            7.7945e-02,  2.4700e-01],
          [-3.5540e-01, -1.7953e-01,  1.7473e-01,  ...,  1.9169e-01,
            2.9115e-01,  2.5571e-01],
          [-6.3824e-01,  6.0323e-02,  6.2762e-01,  ...,  1.3267e-01,
            6.7879e-01,  3.1288e-01]]],


        [[[-5.7374e-02, -5.2688e-01,  1.8276e-03,  ...,  7.6536e-01,
            4.1727e-03,  5.1319e-01],
          [-1.2851e-02, -5.7174e-01,  8.7895e-04,  ...,  7.4975e-01,
            9.8509e-03,  5.1150e-01],
          [-9.3540e-02,  6.2037e-01,  5.2050e-03,  ...,  5.5308e-01,
            3.4805e-02,  4.2888e-01],
          [-9.8023e-02,  1.7907e-01,  2.2034e-02,  ...,  1.1238e+00,
            3.2051e-02,  1.2765e-01]]],


        ...,


        [[[-3.2001e-02, -1.2279e-01, -1.7929e-01,  ...,  5.4357e-01,
            7.1946e-01,  4.3714e-01],
          [-3.5759e-01,  5.7217e-01,  2.4519e-01,  ...,  5.8939e-01,
            4.4907e-01,  9.7959e-01],
          [-3.3616e-01, -3.3377e-01,  1.6554e-01,  ...,  6.6780e-01,
            6.1824e-01,  8.6639e-01],
          [-3.2732e-02,  3.6073e-01,  4.6464e-01,  ...,  8.4489e-01,
            3.9361e-01,  6.4662e-01]]],


        [[[ 2.4456e-01,  2.3814e-01, -4.2557e-01,  ...,  4.2068e-02,
            4.5210e-01,  8.4270e-01],
          [ 3.5351e-02,  7.2269e-01, -4.7350e-01,  ...,  4.6375e-01,
            3.1452e-01,  5.8088e-01],
          [ 2.8672e-01,  4.0057e-02, -3.1447e-01,  ...,  7.4865e-01,
            1.8226e-01,  5.8582e-01],
          [ 2.1808e-01,  2.9439e-01, -4.4599e-03,  ...,  4.6701e-01,
            9.7047e-02,  3.3347e-02]]],


        [[[-4.2257e-02, -5.7171e-02, -1.4648e-02,  ...,  3.7103e-01,
            1.2836e-01,  1.9209e-01],
          [-4.9480e-02,  2.8659e-01,  1.1479e-01,  ...,  4.7898e-01,
            4.9489e-02,  2.5209e-01],
          [-1.3826e-01,  6.5426e-01,  1.4408e-01,  ...,  8.6394e-01,
            8.0867e-02,  7.9863e-01],
          [-2.8909e-01,  7.0232e-01,  1.4119e-01,  ...,  5.7306e-01,
            6.8160e-02,  2.6286e-01]]]])

2025-06-08 11:43:22.312411 GPU 5 64401 test begin: paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 2, 16],"float32"), None, None, Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=True, )
outputs format not support
[accuracy error] paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 2, 16],"float32"), None, None, Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=True, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 253 / 512 (49.4%)
Greatest absolute difference: 0.9363769292831421 at index (7, 1, 1, 8) (up to 0.01 allowed)
Greatest relative difference: 8.538002967834473 at index (0, 0, 1, 9) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([8, 2, 2, 16]), dtype=torch.float32)
tensor([[[[ 0.0674,  0.0806, -0.2323,  ...,  0.4137,  0.3224,  0.7058],
          [ 0.1446,  0.0794,  0.0579,  ...,  0.2631,  0.1924,  1.3335]],

         [[ 0.0761,  0.1457,  0.5003,  ...,  0.0743,  0.5002,  0.7766],
          [ 0.8243,  0.1661,  0.2299,  ...,  0.4397,  0.3527,  0.5789]]],


        [[[-0.0212, -0.5052,  0.4124,  ...,  0.5571,  0.6050,  0.3431],
          [-0.1867, -0.0143,  0.5311,  ...,  0.4505,  0.0616,  0.3172]],

         [[-0.3328, -0.4931,  0.4475,  ...,  0.2635,  0.4033,  0.4630],
          [-0.3330, -0.1547,  0.4803,  ...,  0.1142,  0.3442,  0.8609]]],


        [[[ 0.1066,  0.1413, -0.3160,  ...,  0.3568,  0.6569,  1.0413],
          [-0.0385,  0.7613, -0.2909,  ...,  0.3544,  0.7735,  0.3617]],

         [[-0.0796,  0.2319, -0.1765,  ...,  0.4575,  0.7260,  0.7540],
          [-0.1212,  0.7748, -0.2242,  ...,  0.9467,  0.7742,  0.5918]]],


        ...,


        [[[-0.0298, -0.6603,  0.0448,  ...,  0.0773,  0.8470,  0.0478],
          [-0.2889, -0.6746,  0.6047,  ...,  0.3858,  0.2288,  0.3117]],

         [[-0.4245, -0.3345,  0.0463,  ...,  0.0675,  0.5458,  0.0180],
          [-0.0450, -0.7153,  0.3271,  ...,  0.3043,  0.6326,  0.2122]]],


        [[[ 0.2739,  0.0092,  0.7137,  ...,  0.4966,  0.4919,  0.7076],
          [ 0.3548, -0.0178,  0.1380,  ...,  0.8129,  0.5504,  0.6407]],

         [[ 0.0430, -0.0284,  0.1557,  ...,  1.3184,  0.6691,  0.8815],
          [ 0.0292,  0.0191,  0.7195,  ...,  1.1919,  0.6466,  0.7451]]],


        [[[ 0.3093,  0.2279, -0.0238,  ...,  0.9001,  0.6558,  0.6115],
          [-0.3834, -0.0716, -0.0862,  ...,  0.4839,  0.2077,  0.5704]],

         [[-0.4630,  0.3083, -0.2336,  ...,  0.7628,  0.3980,  0.3077],
          [-0.2329,  0.0131,  0.0235,  ...,  0.5942,  0.5156,  0.3258]]]])
DESIRED: (shape=torch.Size([8, 2, 2, 16]), dtype=torch.float32)
tensor([[[[ 0.0674,  0.0806, -0.2323,  ...,  0.7055,  0.5149,  0.5660],
          [ 0.1446,  0.0794,  0.0579,  ...,  0.6261,  0.3162,  0.9868]],

         [[ 0.0761,  0.1457,  0.5003,  ...,  0.3601,  0.7877,  0.6549],
          [ 0.8243,  0.1661,  0.2299,  ...,  0.8951,  0.5500,  0.4077]]],


        [[[-0.0212, -0.5052,  0.4124,  ...,  1.3751,  0.2783,  0.4575],
          [-0.1867, -0.0143,  0.5311,  ...,  0.9770,  0.0315,  0.4921]],

         [[-0.3328, -0.4931,  0.4475,  ...,  0.6267,  0.2052,  0.5029],
          [-0.3330, -0.1547,  0.4803,  ...,  0.3267,  0.1539,  1.0488]]],


        [[[ 0.1066,  0.1413, -0.3160,  ...,  0.5338,  0.5489,  0.7674],
          [-0.0385,  0.7613, -0.2909,  ...,  0.4869,  0.6763,  0.3095]],

         [[-0.0796,  0.2319, -0.1765,  ...,  0.6987,  0.6464,  0.5469],
          [-0.1212,  0.7748, -0.2242,  ...,  0.6947,  0.6850,  0.3813]]],


        ...,


        [[[-0.0298, -0.6603,  0.0448,  ...,  0.0269,  0.2943,  0.1228],
          [-0.2889, -0.6746,  0.6047,  ...,  0.0601,  0.0669,  0.8982]],

         [[-0.4245, -0.3345,  0.0463,  ...,  0.0695,  0.1898,  0.0522],
          [-0.0450, -0.7153,  0.3271,  ...,  0.1002,  0.2021,  0.6139]]],


        [[[ 0.2739,  0.0092,  0.7137,  ...,  0.6210,  0.6598,  0.1877],
          [ 0.3548, -0.0178,  0.1380,  ...,  0.7776,  0.5882,  0.1079]],

         [[ 0.0430, -0.0284,  0.1557,  ...,  1.2401,  0.6245,  0.1663],
          [ 0.0292,  0.0191,  0.7195,  ...,  1.0748,  0.8091,  0.1822]]],


        [[[ 0.3093,  0.2279, -0.0238,  ...,  0.7885,  0.3359,  0.3722],
          [-0.3834, -0.0716, -0.0862,  ...,  0.2145,  0.1036,  0.2718]],

         [[-0.4630,  0.3083, -0.2336,  ...,  0.3516,  0.2054,  0.1573],
          [-0.2329,  0.0131,  0.0235,  ...,  0.2819,  0.2675,  0.1655]]]])

2025-06-08 11:43:22.318913 GPU 5 64405 test begin: paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 2, 16],"float32"), None, None, Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=True, )
outputs format not support
[accuracy error] paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 2, 16],"float32"), None, None, Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=True, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 494 / 512 (96.5%)
Greatest absolute difference: 1.710384726524353 at index (0, 0, 0, 5) (up to 0.01 allowed)
Greatest relative difference: 686.1251831054688 at index (6, 1, 1, 4) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([8, 2, 2, 16]), dtype=torch.float32)
tensor([[[[ 0.7444,  0.6305,  0.0430,  ...,  0.3818,  0.7647,  0.9666],
          [ 0.3372,  0.4684, -0.2291,  ...,  0.0572, -0.4098,  0.1604]],

         [[ 0.0810,  0.5601, -0.0249,  ...,  0.0395,  0.0662,  0.7915],
          [ 0.1338,  0.5796,  0.2930,  ...,  0.2952,  0.3600,  0.4020]]],


        [[[ 0.3292,  0.7620, -0.0100,  ...,  0.7215, -0.4156,  0.7343],
          [ 0.5592,  0.6630, -0.3507,  ...,  0.4824,  0.0868,  0.8452]],

         [[ 0.0895,  0.4887, -0.2012,  ...,  0.3061,  0.2806,  0.4442],
          [ 0.2720,  0.4550, -0.3099,  ...,  0.6095,  0.2269,  0.9129]]],


        [[[-0.8298,  0.3502,  0.0101,  ...,  0.3662,  0.1931,  0.8124],
          [-0.1482,  0.0425, -0.1600,  ...,  0.1500,  0.2412,  0.2920]],

         [[-0.5069,  0.3313, -0.1853,  ...,  0.1388,  0.0641,  0.6244],
          [-0.4909,  0.3839, -0.2690,  ...,  0.1995,  0.0680,  0.6174]]],


        ...,


        [[[ 0.4536,  0.8019, -0.5605,  ...,  0.0938, -0.1071,  0.5026],
          [ 0.5568,  1.1683,  0.0306,  ...,  0.1198, -0.1223,  0.7257]],

         [[ 0.6785,  1.0224, -0.1008,  ...,  0.0873, -0.1451,  0.7964],
          [ 0.0157,  0.3202, -0.8171,  ...,  0.0327, -0.1317,  0.6394]]],


        [[[ 0.2164,  0.4360, -0.0179,  ...,  0.5439, -0.1456,  0.6334],
          [ 0.0114,  0.2018,  0.2048,  ...,  0.1810,  0.3822,  1.1365]],

         [[ 0.2577,  0.5283,  0.5215,  ...,  0.4170,  0.2476,  0.8567],
          [ 0.1889,  0.3224,  0.7759,  ...,  0.3215, -0.0014,  0.7807]]],


        [[[ 0.0895,  0.5063,  0.0578,  ...,  0.2704, -0.1631,  0.6774],
          [ 0.1178,  0.4787, -0.3445,  ...,  0.1441,  0.2520,  0.1129]],

         [[ 0.0723,  0.1005,  0.0271,  ...,  0.1026,  0.2278,  0.0446],
          [-0.0777,  0.7527, -0.0710,  ...,  0.2796,  0.1817,  0.2253]]]])
DESIRED: (shape=torch.Size([8, 2, 2, 16]), dtype=torch.float32)
tensor([[[[ 0.7746, -0.1539,  0.0327,  ...,  1.2503,  0.8114,  0.7049],
          [ 0.4707,  0.0036,  0.1219,  ...,  0.5756,  0.0699,  0.6024]],

         [[ 0.3842,  0.1507, -0.0244,  ...,  0.8874,  0.6299,  0.3702],
          [ 0.3381, -0.3717,  0.1892,  ...,  1.4413,  0.3902,  0.3837]]],


        [[[ 0.3012,  0.1543,  0.4628,  ...,  0.9308,  1.0893,  0.3498],
          [ 0.5115,  0.1580,  0.0290,  ...,  0.5599,  1.7219,  0.2005]],

         [[ 0.1047,  0.1745, -0.1420,  ...,  0.2031,  1.5611,  0.0385],
          [ 0.2871, -0.2236, -0.3175,  ...,  0.8295,  1.8759,  0.2065]]],


        [[[-0.2313, -0.1351, -0.0634,  ...,  1.0491,  0.1950,  1.0633],
          [-0.3859, -0.3370, -0.2389,  ...,  0.8506,  0.5297,  0.2572]],

         [[-0.3062, -0.1214, -0.0634,  ...,  1.5626,  0.2503,  0.4848],
          [-0.6384, -0.2160, -0.1671,  ...,  0.8934,  0.2322,  0.5257]]],


        ...,


        [[[ 0.5160,  0.1298, -0.4077,  ...,  0.0776,  1.0527,  0.1055],
          [ 0.6329,  0.6003, -0.1456,  ...,  0.6560,  0.7537,  0.1940]],

         [[ 0.7648,  0.5336, -0.6267,  ...,  0.5996,  1.0169,  0.2672],
          [ 0.0943,  0.1190, -0.0547,  ...,  0.1800,  0.6482,  0.1986]]],


        [[[ 0.2090, -0.2205, -0.0328,  ...,  0.3875,  0.5375,  0.3948],
          [-0.0051, -0.1794,  0.2006,  ...,  0.1109,  1.1504,  0.2769]],

         [[ 0.2559, -0.3426,  0.5225,  ...,  0.3482,  1.5127,  0.2878],
          [ 0.1736, -0.4287,  0.7737,  ...,  0.5286,  0.6930,  0.3168]]],


        [[[ 0.3245,  0.2616,  0.2018,  ...,  0.4206,  0.1342,  0.7990],
          [ 0.2094,  0.1150, -0.0348,  ...,  0.1627,  0.4179,  0.2607]],

         [[ 0.0938, -0.0286, -0.0420,  ...,  0.1337,  0.5189,  0.5440],
          [-0.0212,  0.4679, -0.0436,  ...,  0.6736,  0.5110,  0.6946]]]])

2025-06-08 11:43:22.360806 GPU 5 64407 test begin: paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 2, 16],"float32"), None, None, Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=True, )
outputs format not support
[accuracy error] paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 2, 16],"float32"), None, None, Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=True, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 494 / 512 (96.5%)
Greatest absolute difference: 1.738473892211914 at index (7, 1, 1, 7) (up to 0.01 allowed)
Greatest relative difference: 2508.43701171875 at index (0, 1, 1, 6) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([8, 2, 2, 16]), dtype=torch.float32)
tensor([[[[-0.1137,  0.6147, -0.1183,  ...,  0.7689, -0.1000,  0.2957],
          [ 0.2966,  0.2744, -0.1256,  ...,  0.7971,  0.0838,  0.0693]],

         [[ 0.1843,  0.0972,  0.0782,  ...,  0.6330,  0.3466,  0.2533],
          [ 0.0293,  0.5422, -0.0713,  ...,  0.3341, -0.0282,  0.0704]]],


        [[[-0.0137,  0.3633, -0.4673,  ...,  0.4482,  0.1967,  0.4217],
          [-0.0613,  0.3292,  0.1355,  ...,  0.3558,  0.2741,  0.2486]],

         [[-0.5348,  0.2641, -0.0834,  ...,  1.1921,  0.4479,  0.2603],
          [ 0.1899,  0.4421, -0.1137,  ...,  1.1623,  0.3507,  0.1680]]],


        [[[-0.2101,  0.4594,  0.3989,  ...,  0.3724, -0.0347,  0.5446],
          [-0.2204,  0.7076,  0.5140,  ...,  0.6158,  0.0327,  0.3223]],

         [[-0.0127,  0.3717,  0.4780,  ...,  0.1912, -0.0253,  0.2334],
          [-0.1975,  0.5850,  0.7045,  ...,  0.3233, -0.0556,  0.2407]]],


        ...,


        [[[ 0.6974,  0.8437,  0.3078,  ...,  0.5404,  0.3339,  0.4853],
          [ 0.2142,  0.5769,  0.2730,  ...,  0.4169,  0.4432,  0.6408]],

         [[-0.0199,  0.3210, -0.0687,  ...,  0.4878,  0.0451,  0.2395],
          [ 0.0589,  0.1907,  0.5108,  ...,  0.2639,  0.4075,  0.7608]]],


        [[[-0.1191,  0.7485, -0.8565,  ...,  0.2218,  0.3519,  0.3927],
          [ 0.2609,  0.6707, -0.0362,  ...,  0.0385,  0.4309,  0.6335]],

         [[-0.2272,  0.7606, -0.0219,  ...,  0.8126, -0.4707,  0.6605],
          [ 0.3828,  0.7923,  0.3155,  ...,  0.5213,  0.3087,  0.1850]]],


        [[[ 0.1751,  0.5955, -0.0334,  ...,  1.0044,  0.4831,  0.5531],
          [ 0.1457,  1.0964,  0.0658,  ...,  0.7228, -0.0058,  0.9071]],

         [[ 0.0793,  0.9926,  0.1968,  ...,  1.1493, -0.1485,  0.5758],
          [-0.0509,  0.7126, -0.3139,  ...,  0.3803, -0.0151,  1.3621]]]])
DESIRED: (shape=torch.Size([8, 2, 2, 16]), dtype=torch.float32)
tensor([[[[ 0.0134,  0.5697, -0.2111,  ...,  0.9447,  0.0059,  1.0293],
          [ 0.2537,  0.1364, -0.1569,  ...,  0.4980,  0.0068,  0.4136]],

         [[ 0.1108,  0.0143, -0.0040,  ...,  0.3534,  0.0205,  0.5879],
          [ 0.0710,  0.4752,  0.1002,  ...,  0.3489,  0.0095,  0.8215]]],


        [[[-0.2301, -0.4222,  0.0550,  ...,  0.5227,  1.2436,  0.9607],
          [ 0.1074, -0.1502, -0.2173,  ...,  0.4887,  1.0733,  0.5141]],

         [[ 0.1108, -0.1390,  0.0677,  ...,  0.7501,  1.1502,  0.6347],
          [-0.1039, -0.4432,  0.1773,  ...,  0.5827,  0.9456,  0.4662]]],


        [[[-0.3409, -0.8705,  0.5599,  ...,  0.7939,  1.3846,  0.3246],
          [-0.0204, -0.7261,  0.6776,  ...,  1.5365,  1.0252,  0.0939]],

         [[-0.4271, -0.4456,  0.4523,  ...,  0.7923,  0.3087,  0.1687],
          [ 0.0447, -0.7083,  0.7738,  ...,  0.4079,  0.1218,  0.2811]]],


        ...,


        [[[ 0.6871, -0.3969,  0.1919,  ...,  0.7329,  0.3063,  0.1905],
          [ 0.1879, -0.2235,  0.1370,  ...,  0.3293,  0.2051,  0.2916]],

         [[ 0.0356, -0.3643, -0.0642,  ...,  0.5642,  0.2620,  0.3314],
          [ 0.0425, -0.1106,  0.6782,  ...,  0.4864,  0.3151,  0.4838]]],


        [[[-0.0648, -0.2314, -0.9314,  ...,  0.5687,  0.4486,  0.4683],
          [ 0.1788, -0.1828, -0.2837,  ...,  0.4231,  0.5794,  0.4550]],

         [[-0.1079,  0.4258,  0.2542,  ...,  0.4238,  0.3431,  0.7500],
          [ 0.3680, -0.2595,  0.3349,  ...,  0.2598,  0.2063,  0.4734]]],


        [[[ 0.1578, -0.0019,  0.6763,  ...,  0.6447,  0.7094,  0.2303],
          [ 0.1171,  0.1311,  0.4741,  ...,  0.4869,  0.4143,  0.3693]],

         [[ 0.1690, -0.4265,  0.0078,  ...,  0.6923,  0.2630,  0.8629],
          [-0.0662,  0.1738, -0.4151,  ...,  0.4801,  0.8156,  1.1827]]]])

2025-06-08 11:43:22.470774 GPU 5 64404 test begin: paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 2, 16],"float32"), None, Tensor([8, 2, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=True, )
outputs format not support
[accuracy error] paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 2, 16],"float32"), None, Tensor([8, 2, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=True, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 246 / 512 (48.0%)
Greatest absolute difference: 1.1103861331939697 at index (3, 0, 1, 13) (up to 0.01 allowed)
Greatest relative difference: 8.286291122436523 at index (3, 0, 1, 12) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([8, 2, 2, 16]), dtype=torch.float32)
tensor([[[[ 0.0127,  0.0269,  0.1261,  ...,  0.5360,  0.8628,  0.4698],
          [-0.0246, -0.0023,  0.7377,  ...,  0.6362,  0.8623,  0.1663]],

         [[ 0.2364,  0.4679,  0.5572,  ...,  0.5192,  0.4840,  0.4392],
          [ 0.4013, -0.1649,  0.6905,  ...,  0.4368,  0.6682,  0.2651]]],


        [[[-0.0455, -0.0485,  0.1322,  ...,  0.9470,  0.1118,  0.4963],
          [-0.0255,  0.2347, -0.1035,  ...,  1.4753,  0.6847,  0.4296]],

         [[ 0.0107,  0.0158,  0.0930,  ...,  1.2744,  0.2904,  0.7295],
          [-0.1337,  0.3818, -0.0465,  ...,  0.7796,  0.1245,  0.4524]]],


        [[[-0.5338,  0.2734, -0.2152,  ...,  0.9563,  0.9702,  0.6891],
          [-0.4315, -0.0601,  0.1341,  ...,  0.4640,  0.6633,  0.5733]],

         [[ 0.2201,  0.1334,  0.3755,  ...,  0.4746,  0.2979,  0.2807],
          [ 0.5829,  0.3208,  0.1207,  ...,  0.5763,  0.3749,  0.8011]]],


        ...,


        [[[ 0.2626,  0.1208,  0.4906,  ...,  0.3462,  0.7951,  1.5006],
          [ 0.2712, -0.1458, -0.1792,  ...,  0.4736,  0.2708,  0.8177]],

         [[-0.1213,  0.0397, -0.1355,  ...,  0.9601,  1.0913,  0.8522],
          [ 0.4727,  0.0757,  0.5934,  ...,  0.7510,  0.5085,  0.1327]]],


        [[[ 0.3780, -0.0813, -0.7604,  ...,  1.3286,  0.6397,  0.1051],
          [ 0.1963,  0.1529, -0.0708,  ...,  1.3945,  0.5399,  0.3840]],

         [[ 0.2554,  0.2732,  0.3876,  ...,  0.2672,  0.8945,  0.2799],
          [ 0.1341,  0.3296, -0.4767,  ...,  0.2846,  0.4552,  0.3549]]],


        [[[-0.1139, -0.4865, -0.2549,  ...,  0.7882,  0.3019,  0.6716],
          [-0.1412, -0.5830,  0.1514,  ...,  0.9821,  0.3647,  0.4417]],

         [[-0.0070, -0.4166,  0.4941,  ...,  1.1497,  0.4448,  0.9461],
          [-0.0417, -0.5062, -0.1479,  ...,  1.3059,  0.7374,  0.8689]]]])
DESIRED: (shape=torch.Size([8, 2, 2, 16]), dtype=torch.float32)
tensor([[[[ 0.0127,  0.0269,  0.1261,  ...,  0.5719,  0.7321,  0.4876],
          [-0.0246, -0.0023,  0.7377,  ...,  0.7005,  0.6006,  0.2777]],

         [[ 0.2364,  0.4679,  0.5572,  ...,  0.5843,  0.4675,  0.3750],
          [ 0.4013, -0.1649,  0.6905,  ...,  0.4854,  0.6239,  0.2980]]],


        [[[-0.0455, -0.0485,  0.1322,  ...,  0.5223,  0.2979,  0.3852],
          [-0.0255,  0.2347, -0.1035,  ...,  0.6963,  1.0434,  0.3845]],

         [[ 0.0107,  0.0158,  0.0930,  ...,  0.3970,  0.4300,  0.5532],
          [-0.1337,  0.3818, -0.0465,  ...,  0.2075,  0.1725,  0.3899]]],


        [[[-0.5338,  0.2734, -0.2152,  ...,  0.6893,  0.2799,  0.3553],
          [-0.4315, -0.0601,  0.1341,  ...,  0.5190,  0.2273,  0.1870]],

         [[ 0.2201,  0.1334,  0.3755,  ...,  0.3782,  0.0719,  0.1676],
          [ 0.5829,  0.3208,  0.1207,  ...,  0.4938,  0.1547,  0.4692]]],


        ...,


        [[[ 0.2626,  0.1208,  0.4906,  ...,  0.6163,  0.6694,  1.1638],
          [ 0.2712, -0.1458, -0.1792,  ...,  0.8763,  0.4346,  0.8091]],

         [[-0.1213,  0.0397, -0.1355,  ...,  1.7011,  0.9230,  0.7249],
          [ 0.4727,  0.0757,  0.5934,  ...,  1.3381,  0.2514,  0.1004]]],


        [[[ 0.3780, -0.0813, -0.7604,  ...,  1.1054,  0.1417,  0.3439],
          [ 0.1963,  0.1529, -0.0708,  ...,  1.1613,  0.0840,  0.6410]],

         [[ 0.2554,  0.2732,  0.3876,  ...,  0.2225,  0.1469,  1.2835],
          [ 0.1341,  0.3296, -0.4767,  ...,  0.2395,  0.0895,  0.6212]]],


        [[[-0.1139, -0.4865, -0.2549,  ...,  0.5334,  0.5592,  0.6160],
          [-0.1412, -0.5830,  0.1514,  ...,  0.4593,  0.7497,  0.3691]],

         [[-0.0070, -0.4166,  0.4941,  ...,  0.6082,  0.9351,  0.7643],
          [-0.0417, -0.5062, -0.1479,  ...,  0.7954,  1.5016,  0.6640]]]])

2025-06-08 11:43:22.541959 GPU 5 64403 test begin: paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 2, 16],"float32"), None, Tensor([8, 2, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=True, )
outputs format not support
[accuracy error] paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 2, 16],"float32"), None, Tensor([8, 2, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=True, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 483 / 512 (94.3%)
Greatest absolute difference: 1.479372262954712 at index (2, 1, 1, 7) (up to 0.01 allowed)
Greatest relative difference: 1203.1929931640625 at index (2, 0, 1, 7) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([8, 2, 2, 16]), dtype=torch.float32)
tensor([[[[-0.3378,  0.9253, -0.1320,  ...,  0.4084,  0.3089,  0.4449],
          [ 0.1733,  0.5421, -0.1919,  ...,  0.4767,  0.0998,  0.0650]],

         [[ 0.0418,  0.8800, -0.1585,  ...,  0.1160, -0.1254,  0.6169],
          [-0.3440,  0.8174, -0.0764,  ...,  0.5673,  0.5596,  0.9031]]],


        [[[ 0.2429,  0.4546, -0.0348,  ...,  0.3679, -0.1626,  0.5248],
          [ 0.3958,  0.6299,  0.0061,  ...,  0.5514,  0.0144,  0.6148]],

         [[ 0.3996,  0.3703, -0.5393,  ...,  0.9488,  0.2139,  0.3408],
          [ 0.3753,  0.6565, -0.4531,  ...,  0.6402, -0.2231,  0.6931]]],


        [[[-0.1171,  0.4406, -0.0149,  ...,  0.4381,  0.1739,  0.1682],
          [ 0.1163,  0.5955, -0.0205,  ...,  0.4821,  0.1497,  0.2043]],

         [[-0.3753,  0.5580,  0.0293,  ...,  0.7205,  0.1917,  0.1798],
          [-0.0619,  0.0873, -0.0428,  ...,  0.3342, -0.1309,  0.4093]]],


        ...,


        [[[-0.7498,  0.8044, -0.0733,  ...,  0.1803,  0.2715,  0.2202],
          [ 0.1602,  0.7216,  0.1407,  ...,  0.0425, -0.2780,  0.2637]],

         [[-0.2536,  0.1254,  0.1991,  ...,  0.3088,  0.3282,  0.4923],
          [-0.6962,  0.4244,  0.5839,  ...,  0.2928,  0.4396,  0.3805]]],


        [[[ 0.7217,  0.1599,  0.2473,  ...,  0.8376, -0.4934,  0.4511],
          [ 0.3364,  0.3132,  0.4651,  ...,  0.7613,  0.3022,  0.0905]],

         [[ 0.6882,  0.0683,  0.0345,  ...,  0.2337, -0.2620,  0.2460],
          [ 0.2270,  0.0789,  0.5635,  ...,  0.5250, -0.1547,  0.2398]]],


        [[[-0.0429,  0.1738,  0.0848,  ...,  0.1762, -0.6256,  1.2918],
          [ 0.3804,  0.0322, -0.0500,  ...,  0.3452,  0.1574,  0.8956]],

         [[ 0.1203,  0.3871, -0.0318,  ...,  0.2180, -0.0605,  0.7022],
          [ 0.1414,  0.6418,  0.0539,  ...,  0.1667, -0.7320,  1.0219]]]])
DESIRED: (shape=torch.Size([8, 2, 2, 16]), dtype=torch.float32)
tensor([[[[-0.4067, -0.0670, -0.1857,  ...,  0.5938,  0.2351,  0.5467],
          [-0.0095, -0.3806, -0.0228,  ...,  0.5887,  0.0758,  0.2484]],

         [[-0.2589, -0.0796, -0.0575,  ...,  0.1872,  0.0411,  0.6741],
          [-0.2605, -0.3127, -0.0320,  ...,  1.0232,  0.4174,  0.8540]]],


        [[[ 0.2224,  0.1750, -0.1231,  ...,  0.1145,  0.3387,  0.9488],
          [ 0.4162, -0.0724, -0.5277,  ...,  0.0691,  0.3939,  0.5572]],

         [[ 0.4026, -0.0391, -0.2447,  ...,  0.0809,  0.3111,  0.7936],
          [ 0.3795,  0.2467,  0.0207,  ...,  0.0528,  0.0788,  1.0414]]],


        [[[-0.1724,  0.0465, -0.0787,  ...,  0.4286,  0.5477,  0.3995],
          [-0.1885, -0.5047,  0.0202,  ...,  0.3938,  0.7500,  0.5990]],

         [[-0.4623,  0.4640, -0.0934,  ...,  0.0862,  0.6383,  0.3030],
          [-0.0581, -0.1390, -0.1013,  ...,  0.3419,  1.0930,  1.0138]]],


        ...,


        [[[-0.1382, -0.1577, -0.1438,  ...,  0.2296,  0.8734,  0.9703],
          [-0.4635, -0.7050,  0.3260,  ...,  0.0651,  0.7641,  0.9336]],

         [[-0.8981, -0.4187,  0.1272,  ...,  0.1515,  0.5156,  1.0091],
          [-0.0163,  0.0906,  0.5627,  ...,  0.1617,  1.1097,  1.1023]]],


        [[[ 0.5877,  0.0623,  0.0692,  ...,  0.8976,  0.5506,  0.4826],
          [ 0.5512,  0.2063,  0.5450,  ...,  0.8213,  0.7878,  0.2669]],

         [[ 0.3510, -0.0489, -0.3307,  ...,  0.8246,  0.5335,  0.5833],
          [ 0.2647,  0.0191,  0.6645,  ...,  1.1029,  0.6122,  0.2485]]],


        [[[-0.1218,  0.1699,  0.0840,  ...,  0.3149,  0.4962,  0.6925],
          [ 0.1505,  0.0148,  0.0328,  ...,  0.3182,  0.6004,  0.1366]],

         [[ 0.0613,  0.3727, -0.0595,  ...,  0.3408,  0.5215,  0.8582],
          [ 0.2008,  0.6282,  0.0595,  ...,  0.0812,  0.4050,  1.0644]]]])

2025-06-08 11:43:22.583540 GPU 5 64401 test begin: paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 2, 16],"float32"), None, Tensor([8, 2, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=True, )
outputs format not support
[accuracy error] paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 2, 16],"float32"), None, Tensor([8, 2, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=True, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 472 / 512 (92.2%)
Greatest absolute difference: 1.423496961593628 at index (3, 0, 1, 7) (up to 0.01 allowed)
Greatest relative difference: 367.84637451171875 at index (4, 0, 0, 5) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([8, 2, 2, 16]), dtype=torch.float32)
tensor([[[[ 0.1642,  0.0637,  0.0612,  ...,  0.2394,  0.0138,  0.1225],
          [ 0.1374,  0.5464,  0.4539,  ...,  1.0089, -0.1034,  0.0712]],

         [[ 0.4898,  0.4219,  0.1431,  ...,  0.6858,  0.0309,  0.7996],
          [ 0.6523,  0.2378,  0.0880,  ...,  1.1651,  0.2280,  0.3508]]],


        [[[-0.5244,  0.8177, -0.2474,  ...,  0.5193, -0.0990,  0.8652],
          [-0.0249,  0.3593, -0.0435,  ...,  1.1334, -0.3705,  0.1566]],

         [[-0.0582,  0.8814, -0.2924,  ...,  0.5952, -0.0997,  0.1774],
          [ 0.0460,  0.3691, -0.3060,  ...,  0.3797, -0.2752,  0.7949]]],


        [[[-0.0097,  0.1401,  0.0229,  ...,  0.7510, -0.2660,  0.1627],
          [-0.1322,  0.1044,  0.0780,  ...,  0.7239, -0.3731,  0.3856]],

         [[-0.2141,  0.1251,  0.0978,  ...,  0.1759,  0.0959,  0.2311],
          [ 0.1094,  0.1801,  0.1198,  ...,  1.1161,  0.1487,  0.2127]]],


        ...,


        [[[-0.0055,  0.5224,  0.0993,  ...,  0.7670, -0.1338,  0.6289],
          [-0.1701,  0.8062, -0.3033,  ...,  0.5059,  0.0908,  0.2014]],

         [[-0.2596,  0.9282,  0.1258,  ...,  1.3032,  0.0929,  0.3004],
          [-0.0099,  0.2377, -0.2049,  ...,  0.5820, -0.3134,  0.4695]]],


        [[[-0.0561,  0.4669, -0.0096,  ...,  0.2862, -0.2756,  1.1635],
          [-0.0099,  0.2731,  0.0722,  ...,  0.1233, -0.1239,  0.7379]],

         [[-0.0988,  0.3310,  0.3380,  ...,  0.1837, -0.2938,  1.0115],
          [-0.0144,  0.1887,  0.0791,  ...,  0.1260, -0.4086,  0.9125]]],


        [[[ 0.1570,  0.2386,  0.1987,  ...,  1.0569, -0.0022,  0.1835],
          [-0.3366,  0.1918, -0.2327,  ...,  0.8918, -0.0728,  0.6816]],

         [[ 0.3985,  0.1583, -0.0399,  ...,  0.7375, -0.3084,  0.2223],
          [ 0.0128,  0.2946, -0.2200,  ...,  0.5389, -0.0987,  0.3362]]]])
DESIRED: (shape=torch.Size([8, 2, 2, 16]), dtype=torch.float32)
tensor([[[[ 0.1054,  0.0406,  0.0534,  ...,  0.1015,  0.0371,  0.0393],
          [ 0.1195,  0.5306,  0.6732,  ...,  0.1342,  0.0092,  0.2158]],

         [[ 0.4521,  0.3900,  0.1029,  ...,  0.0835,  0.2088,  0.2196],
          [ 0.6182,  0.1825, -0.2568,  ...,  0.1394,  0.1249,  0.1772]]],


        [[[-0.5177,  0.0630, -0.6162,  ...,  0.3663,  0.5106,  0.2125],
          [-0.0959, -0.6471,  0.0827,  ...,  0.5460,  0.4857,  0.2870]],

         [[ 0.0519, -0.1658, -0.0967,  ...,  0.2779,  0.2650,  0.1012],
          [ 0.0041, -0.1839, -0.1701,  ...,  0.3777,  0.4889,  0.3267]]],


        [[[ 0.0491, -0.0845,  0.0919,  ...,  0.3958,  0.5279,  0.1541],
          [-0.2272,  0.0037,  0.1249,  ...,  0.5729,  0.7471,  0.3397]],

         [[-0.0690,  0.0028,  0.0970,  ...,  0.3564,  1.3662,  0.1605],
          [-0.0674,  0.0234,  0.1204,  ...,  0.8398,  0.9059,  0.1467]]],


        ...,


        [[[-0.0936, -0.5288, -0.2296,  ...,  0.2672,  0.4541,  1.3932],
          [-0.2294,  0.1326, -0.0796,  ...,  0.2787,  0.4374,  0.3188]],

         [[-0.0832,  0.0426, -0.1512,  ...,  0.4255,  0.3201,  0.3685],
          [-0.2149, -0.4574,  0.1136,  ...,  0.0408,  0.1201,  0.8469]]],


        [[[-0.0063, -0.0614, -0.0014,  ...,  0.6394,  0.4748,  1.0308],
          [-0.1513, -0.5089,  0.0665,  ...,  0.3362,  0.3330,  0.6363]],

         [[-0.2739, -0.1895,  0.3416,  ...,  1.0538,  0.3969,  1.1868],
          [-0.0105, -0.0392,  0.0773,  ...,  0.8138,  0.3232,  0.5823]]],


        [[[ 0.1425,  0.0839, -0.0377,  ...,  0.6410,  0.2214,  0.0779],
          [-0.0759,  0.0743, -0.2812,  ...,  0.3064,  0.7645,  0.3216]],

         [[-0.0329, -0.0511, -0.1784,  ...,  0.4705,  0.1743,  0.3317],
          [ 0.0993,  0.1042, -0.0944,  ...,  0.5812,  0.2964,  0.2300]]]])

2025-06-08 11:43:22.614919 GPU 5 64407 test begin: paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), None, Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=True, )
outputs format not support
[accuracy error] paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), None, Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=True, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 247 / 512 (48.2%)
Greatest absolute difference: 0.8471618890762329 at index (6, 0, 1, 12) (up to 0.01 allowed)
Greatest relative difference: 19.25348472595215 at index (3, 0, 0, 9) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([8, 2, 2, 16]), dtype=torch.float32)
tensor([[[[ 0.1670, -0.0993, -0.2509,  ...,  0.7456,  0.8582,  0.9317],
          [ 0.2164,  0.0805, -0.1356,  ...,  0.1984,  0.6877,  0.7334]],

         [[-0.0031, -0.0517, -0.0495,  ...,  0.8163,  0.0226,  0.5817],
          [-0.2614,  0.0067, -0.1973,  ...,  0.4983,  0.3321,  0.8089]]],


        [[[ 0.2399,  0.4676, -0.0166,  ...,  0.9028,  0.4889,  0.5415],
          [ 0.0818, -0.6785, -0.0466,  ...,  0.8152,  0.3714,  1.0557]],

         [[-0.1867, -0.6502, -0.0479,  ...,  0.7864,  0.5388,  0.9860],
          [-0.1087,  0.3276,  0.0046,  ...,  0.8253,  0.6269,  0.6781]]],


        [[[ 0.2526, -0.0271,  0.2510,  ...,  0.6550,  0.8727,  0.8473],
          [ 0.0839,  0.0549, -0.0606,  ...,  0.2533,  0.3712,  0.6175]],

         [[ 0.2647, -0.0434,  0.2952,  ...,  0.5919,  0.7197,  0.7049],
          [ 0.2686,  0.0209,  0.1869,  ...,  0.7022,  0.5106,  0.4037]]],


        ...,


        [[[ 0.0741, -0.0758, -0.6816,  ...,  0.6565,  0.5397,  0.4103],
          [ 0.1313,  0.0514, -0.7110,  ...,  0.8053,  0.2702,  0.9856]],

         [[ 0.2397, -0.5513,  0.6520,  ...,  0.4931,  0.6719,  0.6302],
          [-0.0914, -0.0120,  0.4082,  ...,  0.8691,  0.7614,  0.4718]]],


        [[[ 0.2879,  0.4638, -0.6206,  ...,  0.7398,  0.8012,  0.5404],
          [-0.0895,  0.0174, -0.3816,  ...,  0.4392,  0.2056,  1.0489]],

         [[ 0.0200,  0.3356, -0.4952,  ...,  0.3343,  0.3365,  0.7841],
          [ 0.0889, -0.0277, -0.2579,  ...,  0.2032,  0.1131,  0.6678]]],


        [[[-0.1053,  0.0300,  0.1447,  ...,  0.1349,  1.0688,  0.0727],
          [ 0.1175,  0.3539, -0.0574,  ...,  0.1503,  0.9483,  0.3244]],

         [[ 0.2348,  0.1631, -0.2029,  ...,  0.1862,  0.5041,  0.2685],
          [ 0.0306, -0.0500, -0.0611,  ...,  0.3080,  1.0379,  0.0864]]]])
DESIRED: (shape=torch.Size([8, 2, 2, 16]), dtype=torch.float32)
tensor([[[[ 0.1670, -0.0993, -0.2509,  ...,  0.5675,  0.9540,  1.0074],
          [ 0.2164,  0.0805, -0.1356,  ...,  0.1526,  0.8641,  0.7833]],

         [[-0.0031, -0.0517, -0.0495,  ...,  0.5892,  0.0366,  0.6492],
          [-0.2614,  0.0067, -0.1973,  ...,  0.3592,  0.4520,  0.8871]]],


        [[[ 0.2399,  0.4676, -0.0166,  ...,  1.0261,  0.1684,  0.0791],
          [ 0.0818, -0.6785, -0.0466,  ...,  1.0837,  0.2820,  0.2694]],

         [[-0.1867, -0.6502, -0.0479,  ...,  0.6988,  0.6640,  0.2548],
          [-0.1087,  0.3276,  0.0046,  ...,  0.7400,  0.5764,  0.2347]]],


        [[[ 0.2526, -0.0271,  0.2510,  ...,  0.3199,  0.7253,  0.2447],
          [ 0.0839,  0.0549, -0.0606,  ...,  0.1386,  0.3223,  0.4273]],

         [[ 0.2647, -0.0434,  0.2952,  ...,  0.1812,  0.6267,  0.4043],
          [ 0.2686,  0.0209,  0.1869,  ...,  0.3109,  0.4639,  0.2648]]],


        ...,


        [[[ 0.0741, -0.0758, -0.6816,  ...,  0.2907,  0.4834,  0.4878],
          [ 0.1313,  0.0514, -0.7110,  ...,  0.4223,  0.2245,  1.3237]],

         [[ 0.2397, -0.5513,  0.6520,  ...,  0.2641,  0.7018,  0.8789],
          [-0.0914, -0.0120,  0.4082,  ...,  0.4402,  0.6672,  0.7616]]],


        [[[ 0.2879,  0.4638, -0.6206,  ...,  0.7036,  0.9678,  0.1173],
          [-0.0895,  0.0174, -0.3816,  ...,  0.7303,  0.0541,  0.6644]],

         [[ 0.0200,  0.3356, -0.4952,  ...,  0.1352,  1.0044,  0.3370],
          [ 0.0889, -0.0277, -0.2579,  ...,  0.4636,  0.7256,  0.5804]]],


        [[[-0.1053,  0.0300,  0.1447,  ...,  0.2753,  0.8043,  0.0839],
          [ 0.1175,  0.3539, -0.0574,  ...,  0.2577,  0.5360,  0.4621]],

         [[ 0.2348,  0.1631, -0.2029,  ...,  0.3463,  0.3182,  0.3435],
          [ 0.0306, -0.0500, -0.0611,  ...,  0.4825,  0.8037,  0.1120]]]])

2025-06-08 11:43:22.690627 GPU 5 64405 test begin: paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), None, Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=True, )
outputs format not support
[accuracy error] paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), None, Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=True, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 490 / 512 (95.7%)
Greatest absolute difference: 1.4917547702789307 at index (1, 1, 0, 12) (up to 0.01 allowed)
Greatest relative difference: 760.5579223632812 at index (3, 0, 1, 10) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([8, 2, 2, 16]), dtype=torch.float32)
tensor([[[[ 0.1128,  0.5870, -0.1328,  ...,  0.4977, -0.2826,  0.3946],
          [ 0.1193,  0.3873, -0.3727,  ...,  0.4001,  0.0124,  0.6708]],

         [[ 0.1570,  1.1460, -0.3257,  ...,  0.3224, -0.3974,  0.9719],
          [ 0.3328,  1.3076, -0.3533,  ...,  0.4866,  0.0513,  0.1966]]],


        [[[ 0.3108,  0.2934, -0.1761,  ...,  0.7277,  0.1173,  0.2416],
          [ 0.3257,  0.5950, -0.4795,  ...,  0.6782, -0.0081,  0.0539]],

         [[ 0.5452,  0.4918,  0.0694,  ...,  1.1716,  0.1276,  0.2571],
          [ 0.0530,  0.1192,  0.1181,  ...,  0.6449,  0.4230,  0.4298]]],


        [[[-0.0567,  0.7102, -0.2288,  ...,  0.5035, -0.2301,  0.5349],
          [ 0.0036,  0.8093, -0.1756,  ...,  0.6757, -0.0093,  1.1051]],

         [[-0.0490,  1.1758, -0.0401,  ...,  0.2286, -0.0836,  0.8441],
          [ 0.1394,  0.8004,  0.1343,  ...,  0.3366, -0.1127,  0.5454]]],


        ...,


        [[[-0.0556,  0.0464,  0.0642,  ...,  0.8705, -0.2117,  0.4071],
          [-0.2879,  0.5531,  0.0811,  ...,  0.6628, -0.2891,  0.3774]],

         [[-0.1306,  0.3550,  0.0070,  ...,  0.4210, -0.4852,  0.8649],
          [ 0.0649,  0.4737,  0.3681,  ...,  0.5042, -0.0444,  0.2635]]],


        [[[-0.5967,  0.5852,  0.0398,  ...,  0.2057, -0.0367,  0.6143],
          [-0.7218,  0.6926,  0.6290,  ...,  0.2731,  0.1124,  1.0450]],

         [[-0.4892,  0.4641,  0.6903,  ...,  0.5054, -0.0599,  0.4547],
          [-0.6572,  0.6092, -0.0942,  ...,  0.4112,  0.0015,  0.1278]]],


        [[[ 0.4215,  0.8145, -0.1793,  ...,  0.3781, -0.3204,  0.7834],
          [ 0.3280,  0.3427, -0.2203,  ...,  0.0850,  0.3784,  0.4533]],

         [[ 0.4655,  0.5498,  0.2501,  ...,  0.1486, -0.1040,  0.5634],
          [ 0.3375,  0.7775,  0.0435,  ...,  0.3573,  0.1846,  0.5870]]]])
DESIRED: (shape=torch.Size([8, 2, 2, 16]), dtype=torch.float32)
tensor([[[[ 0.1134,  0.1770, -0.3524,  ...,  0.1899,  0.1766,  0.1013],
          [ 0.1184, -0.3580, -0.0552,  ...,  0.1432,  0.5650,  0.0898]],

         [[ 0.1569,  0.6757, -0.1163,  ...,  0.3573,  0.5309,  0.1945],
          [ 0.3333,  0.5027, -0.0690,  ...,  0.3841,  0.1924,  0.0206]]],


        [[[ 0.3062, -0.1138,  0.0123,  ...,  0.6378,  0.2116,  0.7103],
          [ 0.3289, -0.1916, -0.1638,  ...,  0.7894,  0.3963,  0.5204]],

         [[ 0.4960, -0.4741, -0.4100,  ...,  0.9961,  0.9176,  0.7623],
          [ 0.0652, -0.1925, -0.1412,  ...,  0.6204,  0.8979,  0.4855]]],


        [[[-0.0779,  0.2418, -0.1496,  ...,  0.1265,  0.5986,  0.2851],
          [-0.0125,  0.4195, -0.0670,  ...,  0.2554,  0.3048,  0.4260]],

         [[-0.0097,  0.7477, -0.1011,  ...,  0.4721,  0.4532,  0.6468],
          [ 0.0321, -0.0143,  0.0149,  ...,  0.3275,  0.3374,  0.3137]]],


        ...,


        [[[-0.3800, -0.1692,  0.1516,  ...,  1.0224,  0.3036,  0.4793],
          [-0.1897,  0.3157,  0.1700,  ...,  0.6029,  0.1978,  0.3079]],

         [[-0.3045,  0.1436,  0.0249,  ...,  0.5810,  0.4595,  0.6174],
          [-0.1405,  0.2428,  0.2149,  ...,  0.7861,  0.3501,  0.8782]]],


        [[[-0.0572,  0.4410, -0.0436,  ...,  0.5526,  0.0455,  1.0610],
          [-0.1695,  0.5991,  0.6187,  ...,  0.6265,  0.2585,  0.9333]],

         [[-0.6091,  0.3538,  0.5893,  ...,  0.7427,  0.0059,  0.6543],
          [-0.0275,  0.5076,  0.0213,  ...,  0.7829,  0.0269,  0.0514]]],


        [[[ 0.3855,  0.1585,  0.0528,  ...,  0.0506,  0.4647,  0.0711],
          [ 0.1746, -0.1087,  0.0047,  ...,  0.0282,  0.9808,  0.0467]],

         [[ 0.4345,  0.1209,  0.1378,  ...,  0.3243,  0.6280,  0.0325],
          [ 0.3371,  0.0540, -0.3098,  ...,  0.2463,  0.7870,  0.0409]]]])

2025-06-08 11:43:22.751786 GPU 5 64402 test begin: paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), None, Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=True, )
outputs format not support
[accuracy error] paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), None, Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=True, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 491 / 512 (95.9%)
Greatest absolute difference: 1.7685518264770508 at index (0, 1, 0, 5) (up to 0.01 allowed)
Greatest relative difference: 2452.36572265625 at index (2, 1, 0, 1) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([8, 2, 2, 16]), dtype=torch.float32)
tensor([[[[ 0.1758,  0.0461,  0.1505,  ...,  0.5776, -0.1609,  0.3067],
          [-0.0023,  0.0750, -0.2890,  ...,  0.4297, -0.2587,  0.0976]],

         [[ 0.2477,  0.4818,  0.1159,  ...,  0.6607, -0.4241,  0.3675],
          [ 0.1836,  0.2361,  0.3068,  ...,  0.6293, -0.1065,  0.6734]]],


        [[[ 0.0800,  0.4338,  0.1839,  ...,  0.4450,  0.0367,  0.5689],
          [ 0.0271,  0.6597,  0.3299,  ...,  0.1522, -0.0489,  0.0772]],

         [[-0.0696,  0.7164,  0.1708,  ...,  0.4960, -0.7358,  0.8262],
          [ 0.0438,  0.6982,  0.1780,  ...,  0.5773,  0.1188,  0.4056]]],


        [[[-0.1943,  0.2993,  0.5163,  ...,  0.5881,  0.0903,  0.2986],
          [-0.1355,  0.3729,  0.0406,  ...,  0.3622,  0.1704,  0.3009]],

         [[-0.1197,  0.3919,  0.2054,  ...,  0.3552,  0.3063,  0.5443],
          [-0.0211,  0.1670,  0.2029,  ...,  0.1437,  0.1146,  0.3279]]],


        ...,


        [[[-0.0449,  0.4041,  0.5892,  ...,  0.0967,  0.3913,  0.3467],
          [-0.0469,  0.1980,  0.4246,  ...,  0.0190, -0.1480,  0.2069]],

         [[ 0.0806,  0.4293,  0.6041,  ...,  0.3056,  0.3597,  0.6597],
          [-0.2411,  0.5627,  0.1909,  ...,  0.1362,  0.6643,  0.3011]]],


        [[[ 0.2928,  1.2646, -0.0498,  ...,  0.6912, -0.6748,  0.1219],
          [ 0.3141,  1.0057, -0.1239,  ...,  0.7791, -0.2885,  0.1112]],

         [[ 0.5523,  1.5981, -0.0152,  ...,  0.6091, -0.5485,  0.0992],
          [ 0.4136,  1.2022, -0.1374,  ...,  0.6305,  0.3250,  0.0762]]],


        [[[ 0.2065,  0.9527, -0.2228,  ...,  0.5487, -0.4611,  0.7456],
          [ 0.1997,  0.5479, -0.2281,  ...,  0.6738, -0.0417,  0.0629]],

         [[ 0.0879,  0.9443, -0.2117,  ...,  0.6931, -0.2599,  0.6631],
          [-0.2912,  0.8081, -0.3787,  ...,  0.5709, -0.2733,  0.6584]]]])
DESIRED: (shape=torch.Size([8, 2, 2, 16]), dtype=torch.float32)
tensor([[[[ 8.9883e-02, -8.2721e-02,  1.5500e-01,  ...,  1.0410e+00,
            3.8731e-01,  9.1500e-01],
          [-1.7537e-02,  2.2421e-02,  2.1570e-03,  ...,  8.2259e-01,
            1.6008e-01,  1.0291e+00]],

         [[ 3.1111e-01,  3.6972e-01,  1.6752e-01,  ...,  7.7309e-01,
            4.0146e-01,  7.3039e-01],
          [ 1.3752e-01,  1.8345e-01,  2.6481e-01,  ...,  1.3410e+00,
            8.9572e-01,  3.6143e-01]]],


        [[[ 6.2516e-02, -4.1489e-01,  1.5848e-01,  ...,  2.6911e-01,
            1.5549e-01,  2.0284e-01],
          [ 1.7534e-02,  1.6667e-01,  2.6812e-01,  ...,  1.6719e-01,
            1.3305e-01,  5.6951e-02]],

         [[-6.8854e-03,  5.5478e-01,  1.6643e-01,  ...,  3.3973e-01,
            2.3516e-01,  6.5561e-01],
          [ 8.9209e-03,  1.6189e-01,  2.2210e-01,  ...,  1.7171e-01,
            1.7686e-01,  1.0005e-01]]],


        [[[-1.5850e-01,  2.2695e-01,  4.4673e-01,  ...,  7.5841e-01,
            2.7644e-01,  1.2649e+00],
          [-2.7700e-02,  1.0695e-01,  3.8636e-02,  ...,  4.7944e-01,
            7.7249e-01,  8.0286e-01]],

         [[-1.4098e-01,  1.5974e-04,  1.8985e-01,  ...,  4.9301e-01,
            4.5210e-01,  3.7569e-01],
          [-1.0531e-01, -1.6042e-02,  2.4352e-01,  ...,  1.6547e-01,
            2.7417e-01,  9.8527e-01]]],


        ...,


        [[[-9.6447e-02,  1.1706e-01,  6.9597e-01,  ...,  3.4655e-01,
            3.8520e-01,  5.3146e-01],
          [-2.8764e-01, -3.0384e-01,  2.2939e-01,  ...,  2.7753e-01,
            1.2120e-01,  5.7896e-01]],

         [[-5.2584e-02, -4.0398e-01,  6.7435e-01,  ...,  4.7769e-01,
            6.8364e-01,  5.9914e-01],
          [-2.6883e-01,  1.5218e-01, -2.6632e-02,  ...,  9.0884e-01,
            6.8998e-01,  3.7764e-01]]],


        [[[ 2.8291e-01,  3.5449e-01, -1.2666e-01,  ...,  1.3466e-01,
            3.0662e-01,  1.0292e+00],
          [ 3.6693e-01,  7.8479e-02, -4.9808e-02,  ...,  2.2948e-01,
            4.1224e-01,  4.9397e-01]],

         [[ 6.7431e-01,  3.5889e-01, -1.2396e-02,  ...,  1.0699e-01,
            2.8419e-01,  4.2015e-01],
          [ 4.9439e-01,  2.7554e-01, -6.9729e-02,  ...,  8.5624e-02,
            2.7755e-01,  8.2871e-01]]],


        [[[ 2.3421e-01,  4.7053e-01, -2.3341e-01,  ...,  3.6467e-01,
            1.6302e-01,  4.6965e-01],
          [-5.3649e-02,  1.2479e-01, -8.6639e-02,  ...,  3.8054e-01,
            3.6151e-01,  2.4191e-01]],

         [[ 4.6981e-02,  6.5079e-01, -4.9664e-01,  ...,  4.5161e-01,
            3.2367e-01,  4.3946e-01],
          [ 1.9879e-01,  6.8237e-01, -4.4612e-01,  ...,  3.4074e-01,
            4.8712e-01,  4.6879e-01]]]])

2025-06-08 11:43:22.795926 GPU 5 64404 test begin: paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=True, )
[accuracy error] paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=True, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 243 / 512 (47.5%)
Greatest absolute difference: 1.0736501216888428 at index (3, 1, 1, 10) (up to 0.01 allowed)
Greatest relative difference: 64.74724578857422 at index (7, 0, 0, 8) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([8, 2, 2, 16]), dtype=torch.float32)
tensor([[[[ 1.3260e-01,  2.3815e-01,  2.4466e-01,  ...,  1.5062e-01,
            5.2154e-02,  3.6453e-01],
          [ 7.3123e-02, -2.1304e-01,  1.1745e-01,  ...,  3.1175e-01,
            3.9880e-01,  8.1954e-01]],

         [[-1.2337e-01,  5.2381e-02,  2.1630e-01,  ...,  6.6613e-01,
            3.4281e-01,  5.9897e-01],
          [-6.0196e-01, -3.2881e-01, -9.6764e-02,  ...,  6.0600e-01,
            3.1040e-01,  8.1359e-01]]],


        [[[ 4.2936e-02,  1.8407e-01,  9.2816e-02,  ...,  9.4546e-01,
            8.9131e-01,  9.6617e-01],
          [ 7.9020e-02,  2.7735e-01, -1.1499e-01,  ...,  1.0871e+00,
            7.5442e-01,  8.2767e-01]],

         [[ 3.5425e-02,  3.5471e-01, -5.5900e-01,  ...,  5.8707e-01,
            5.8609e-01,  4.2697e-02],
          [-1.5712e-03,  2.8839e-01, -2.4810e-01,  ...,  2.0476e-01,
            6.9809e-01,  1.8921e-01]]],


        [[[-3.6347e-01, -4.7858e-03,  2.3205e-01,  ...,  7.2157e-01,
            5.6792e-01,  6.2484e-01],
          [-1.1251e-01,  3.5026e-02,  4.3320e-01,  ...,  1.2606e+00,
            3.9201e-01,  8.3547e-01]],

         [[-3.4795e-01, -1.0785e-01,  3.7205e-02,  ...,  4.8029e-01,
            1.3451e-02,  8.9399e-01],
          [-1.6746e-01, -1.6302e-01,  3.8356e-02,  ...,  7.0053e-01,
            2.2980e-01,  6.5101e-01]]],


        ...,


        [[[ 2.8182e-01, -2.0535e-02, -1.8418e-02,  ...,  1.1795e-01,
            2.9478e-01,  5.7019e-02],
          [ 4.5732e-02,  2.0084e-01,  1.3551e-01,  ...,  1.6828e-01,
            7.7465e-01,  5.4193e-01]],

         [[-5.5821e-04, -4.7051e-02, -1.7396e-01,  ...,  7.2253e-02,
            1.1199e+00,  3.0051e-01],
          [ 3.9161e-01,  9.4265e-02,  7.5187e-02,  ...,  2.3733e-01,
            5.3226e-01,  3.9320e-01]]],


        [[[ 7.1536e-01, -1.9163e-01,  4.2784e-01,  ...,  1.8159e-01,
            6.0637e-01,  5.2023e-01],
          [ 3.3765e-01, -1.5304e-01,  9.1537e-02,  ...,  5.6919e-01,
            6.1126e-01,  5.1192e-01]],

         [[ 7.1966e-01, -1.9635e-01,  3.0922e-01,  ...,  9.9423e-01,
            4.5736e-02,  6.9953e-01],
          [ 3.3874e-01, -1.3986e-01,  5.1670e-01,  ...,  7.5535e-01,
            6.2473e-01,  6.3646e-01]]],


        [[[ 3.3974e-02, -5.0070e-01,  3.2345e-01,  ...,  4.6154e-01,
            1.5549e-01,  1.1714e+00],
          [ 8.4045e-02, -5.0533e-01,  3.6162e-01,  ...,  3.5220e-01,
            9.9682e-01,  7.3101e-01]],

         [[ 2.0718e-02, -5.8577e-02,  5.9361e-01,  ...,  6.7380e-01,
            7.0814e-01,  9.4683e-01],
          [ 6.3756e-02, -2.7558e-01,  2.0556e-01,  ...,  1.2197e+00,
            5.8250e-01,  5.1193e-01]]]])
DESIRED: (shape=torch.Size([8, 2, 2, 16]), dtype=torch.float32)
tensor([[[[ 1.3260e-01,  2.3815e-01,  2.4466e-01,  ...,  1.5427e-01,
            1.4222e-01,  3.6926e-01],
          [ 7.3123e-02, -2.1304e-01,  1.1745e-01,  ...,  2.5467e-01,
            1.0880e+00,  1.0245e+00]],

         [[-1.2337e-01,  5.2381e-02,  2.1630e-01,  ...,  6.3303e-01,
            9.2756e-01,  6.0881e-01],
          [-6.0196e-01, -3.2881e-01, -9.6764e-02,  ...,  5.5534e-01,
            8.3937e-01,  7.5060e-01]]],


        [[[ 4.2936e-02,  1.8407e-01,  9.2816e-02,  ...,  3.2289e-01,
            9.7039e-01,  4.3102e-01],
          [ 7.9020e-02,  2.7735e-01, -1.1499e-01,  ...,  4.1497e-01,
            8.2555e-01,  4.5396e-01]],

         [[ 3.5425e-02,  3.5471e-01, -5.5900e-01,  ...,  2.1318e-01,
            7.5885e-01,  1.5587e-02],
          [-1.5712e-03,  2.8839e-01, -2.4810e-01,  ...,  7.2161e-02,
            7.0614e-01,  1.5106e-01]]],


        [[[-3.6347e-01, -4.7858e-03,  2.3205e-01,  ...,  3.0379e-01,
            5.0199e-01,  9.1797e-01],
          [-1.1251e-01,  3.5026e-02,  4.3320e-01,  ...,  6.2766e-01,
            3.8471e-01,  1.0002e+00]],

         [[-3.4795e-01, -1.0785e-01,  3.7205e-02,  ...,  2.6038e-01,
            8.9282e-03,  1.2613e+00],
          [-1.6746e-01, -1.6302e-01,  3.8356e-02,  ...,  2.9039e-01,
            4.0396e-01,  7.1846e-01]]],


        ...,


        [[[ 2.8182e-01, -2.0535e-02, -1.8418e-02,  ...,  4.8658e-01,
            3.6440e-01,  5.1532e-03],
          [ 4.5732e-02,  2.0084e-01,  1.3551e-01,  ...,  7.5349e-01,
            7.2104e-01,  2.6088e-01]],

         [[-5.5820e-04, -4.7051e-02, -1.7396e-01,  ...,  3.9271e-01,
            8.9981e-01,  1.3868e-01],
          [ 3.9161e-01,  9.4265e-02,  7.5187e-02,  ...,  1.0447e+00,
            3.0927e-01,  1.6567e-01]]],


        [[[ 7.1536e-01, -1.9163e-01,  4.2784e-01,  ...,  1.2130e-01,
            3.2435e-01,  2.7166e-01],
          [ 3.3765e-01, -1.5304e-01,  9.1537e-02,  ...,  4.7058e-01,
            3.7284e-01,  2.6183e-01]],

         [[ 7.1966e-01, -1.9635e-01,  3.0922e-01,  ...,  7.8378e-01,
            4.5844e-02,  4.0604e-01],
          [ 3.3874e-01, -1.3986e-01,  5.1670e-01,  ...,  6.0304e-01,
            4.3343e-01,  3.1107e-01]]],


        [[[ 3.3974e-02, -5.0070e-01,  3.2345e-01,  ...,  3.2100e-01,
            1.6818e-01,  6.4406e-01],
          [ 8.4045e-02, -5.0533e-01,  3.6162e-01,  ...,  1.4717e-01,
            1.1481e+00,  6.0156e-01]],

         [[ 2.0718e-02, -5.8577e-02,  5.9361e-01,  ...,  4.4694e-01,
            8.9017e-01,  2.7103e-01],
          [ 6.3756e-02, -2.7558e-01,  2.0556e-01,  ...,  7.4648e-01,
            7.3280e-01,  4.8868e-02]]]])

2025-06-08 11:43:22.884617 GPU 5 64401 test begin: paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=True, )
[accuracy error] paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=True, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 490 / 512 (95.7%)
Greatest absolute difference: 1.888321876525879 at index (1, 0, 1, 14) (up to 0.01 allowed)
Greatest relative difference: 608.2578735351562 at index (5, 1, 1, 5) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([8, 2, 2, 16]), dtype=torch.float32)
tensor([[[[-0.1558,  0.2212, -0.1963,  ...,  0.7227, -0.2901,  0.7226],
          [-0.8357,  0.9115, -0.0338,  ...,  0.6233,  0.5377,  1.3397]],

         [[-0.7025,  1.4642,  0.1275,  ...,  0.1690,  0.0334,  0.5281],
          [-0.2804,  0.3033,  0.3611,  ...,  0.6817, -0.1691,  1.0279]]],


        [[[-0.2693,  0.4163, -0.7518,  ...,  0.3408, -0.2455,  0.9016],
          [ 0.5067,  0.0981, -0.4994,  ...,  0.2959, -0.6082,  0.6900]],

         [[ 0.4249,  0.0801, -0.3034,  ...,  0.1068, -0.2107,  0.1132],
          [ 0.1527,  0.1924, -0.5741,  ...,  0.0256, -0.3994,  0.1889]]],


        [[[-0.2134,  0.5094,  0.0137,  ...,  1.0912, -0.2147,  0.1511],
          [-0.1407,  0.7473,  0.1181,  ...,  0.7685,  0.0703,  0.1705]],

         [[ 0.0228,  0.1992,  0.0335,  ...,  0.3459,  0.1933,  0.2109],
          [ 0.1014,  0.4039,  0.3978,  ...,  0.9838,  0.1671,  0.1718]]],


        ...,


        [[[-0.4584,  0.8063, -0.0918,  ...,  0.9106,  0.1319,  0.4754],
          [-0.3933,  1.0031, -0.0482,  ...,  0.6472,  0.1942,  0.7437]],

         [[-0.0213,  0.0808, -0.0549,  ...,  1.0235,  0.3072,  0.9897],
          [-0.3898,  0.8908, -0.0709,  ...,  0.6579,  0.1621,  0.4953]]],


        [[[ 0.2085,  0.7830,  0.4787,  ...,  1.3945, -0.0504,  0.1500],
          [ 0.0386,  0.8182,  0.4646,  ...,  0.6195, -0.1285,  0.2350]],

         [[-0.2968,  0.6673,  0.0860,  ...,  0.4807, -0.1318,  0.3714],
          [-0.4007,  0.6696,  0.6361,  ...,  0.4982, -0.1836,  0.1516]]],


        [[[ 0.4277,  0.2973, -0.1793,  ...,  0.2609, -0.2804,  0.9419],
          [ 0.3266,  0.1935,  0.1036,  ...,  0.0516,  0.1296,  1.3520]],

         [[-0.0894,  0.2989,  0.0969,  ...,  0.1912, -0.0235,  1.1174],
          [ 0.4303,  0.2395,  0.2082,  ...,  0.0356, -0.0857,  0.2313]]]])
DESIRED: (shape=torch.Size([8, 2, 2, 16]), dtype=torch.float32)
tensor([[[[-0.3463, -0.3973, -0.0266,  ...,  0.3560,  0.0720,  0.4969],
          [-0.2879,  0.2017, -0.2957,  ...,  0.0357,  0.7266,  0.2980]],

         [[-0.0121,  0.3674,  0.1800,  ...,  0.3594,  0.4638,  0.3192],
          [-0.1089, -0.1647,  0.2383,  ...,  0.3073,  0.3152,  0.2846]]],


        [[[-0.0053,  0.4035, -0.5948,  ...,  0.5737,  1.2896,  0.4046],
          [ 0.4230,  0.0475, -0.6137,  ...,  0.5105,  1.2801,  0.7313]],

         [[ 0.1369,  0.0391, -0.5303,  ...,  0.1673,  0.6690,  0.4531],
          [-0.0716,  0.1458,  0.0531,  ...,  0.0464,  0.2847,  0.4828]]],


        [[[-0.1952,  0.2673,  0.0114,  ...,  0.4631,  0.0680,  1.0173],
          [-0.1226,  0.2614,  0.1101,  ...,  0.4298,  0.2321,  0.6364]],

         [[-0.0406, -0.0615,  0.0189,  ...,  0.2333,  0.3725,  0.8314],
          [-0.0565, -0.0359,  0.3933,  ...,  0.6036,  0.3187,  0.1275]]],


        ...,


        [[[-0.0452,  0.7408, -0.0964,  ...,  1.0715,  0.2664,  0.7733],
          [ 0.1124,  0.9005,  0.0245,  ...,  1.1526,  0.3139,  0.7834]],

         [[ 0.0188,  0.0558, -0.0504,  ...,  0.3919,  0.7640,  1.0656],
          [-0.3845,  0.7942, -0.0479,  ...,  1.4430,  0.4825,  0.3740]]],


        [[[ 0.2516,  0.1546,  0.4460,  ...,  0.6934,  0.0988,  0.4108],
          [ 0.2679,  0.1451,  0.5424,  ...,  0.1299,  0.3246,  0.8190]],

         [[-0.4520,  0.2413,  0.0980,  ...,  0.1771,  0.2790,  0.7875],
          [-0.3432,  0.5308,  0.7946,  ...,  0.1699,  0.3752,  0.2722]]],


        [[[ 0.3525,  0.0268,  0.2330,  ...,  0.5667,  0.0896,  0.5163],
          [ 0.3333, -0.1063,  0.3993,  ...,  0.7656,  0.3482,  0.5175]],

         [[-0.0483,  0.1959, -0.0100,  ...,  0.7325,  0.2395,  0.5404],
          [ 0.4726, -0.1388, -0.0413,  ...,  0.1935,  0.4905,  0.3010]]]])

2025-06-08 11:43:22.935572 GPU 5 64403 test begin: paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=True, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([8, 2, 2, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), Tensor([1, 8, 1, 16],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=True, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 486 / 512 (94.9%)
Greatest absolute difference: 1.509608507156372 at index (4, 1, 1, 14) (up to 0.01 allowed)
Greatest relative difference: 342.1275329589844 at index (5, 1, 1, 6) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([8, 2, 2, 16]), dtype=torch.float32)
tensor([[[[ 0.1284,  0.2293, -0.0269,  ...,  0.3215, -0.7130,  0.6317],
          [-0.1306,  0.4419,  0.4669,  ...,  0.2807, -0.3813,  0.3132]],

         [[-0.1900,  0.5036,  0.1794,  ...,  0.9778, -0.3223,  0.6470],
          [ 0.1821,  0.8731, -0.1348,  ...,  0.5977, -0.8018,  0.6745]]],


        [[[-0.0077,  0.3767,  0.1088,  ...,  0.7102,  0.0431,  0.5134],
          [ 0.1453,  0.3333, -0.3902,  ...,  0.1127, -0.1313,  0.1235]],

         [[-0.0086,  0.6434, -0.1508,  ...,  0.4993,  0.0163,  0.0297],
          [ 0.2163,  0.5097, -0.5889,  ...,  0.2389,  0.0346,  0.2639]]],


        [[[ 0.0156,  0.1542, -0.3667,  ...,  0.2057,  0.2925,  0.6826],
          [ 0.0806,  0.3075, -0.0842,  ...,  0.2870,  0.6734,  0.7111]],

         [[ 0.0120,  0.0677, -0.3282,  ...,  0.6093, -0.0876,  0.3678],
          [ 0.0175,  0.4573, -0.4360,  ...,  0.8571,  0.4475,  0.7400]]],


        ...,


        [[[ 0.1194,  0.1880, -0.4978,  ...,  0.3462,  0.0248,  0.5183],
          [ 0.5558,  0.2170, -0.2882,  ...,  0.5453, -0.0203,  0.0604]],

         [[ 0.4985,  0.2850, -0.1363,  ...,  0.4826, -0.1755,  0.8196],
          [-0.2845,  0.6020, -0.5331,  ...,  0.4430, -0.2899,  1.0567]]],


        [[[ 0.6200,  0.6612, -0.0172,  ...,  0.4206, -0.1290,  0.2932],
          [ 0.2170,  0.4561,  0.0627,  ...,  0.7932, -0.1661,  0.1765]],

         [[ 0.3785,  0.6470,  0.1451,  ...,  0.9788, -0.2004,  0.3283],
          [ 0.8835,  0.8669, -0.0229,  ...,  0.5167, -0.2675,  0.3309]]],


        [[[ 0.3092,  0.3490,  0.5742,  ...,  0.5740, -0.0416,  0.1542],
          [ 0.2218,  0.2778,  0.5527,  ...,  0.7753, -0.0126,  0.8237]],

         [[-0.0300,  0.1660,  0.2212,  ...,  0.4465,  0.0342,  0.5983],
          [ 0.3522,  0.4881,  0.6976,  ...,  0.3702, -0.3745,  0.9296]]]])
DESIRED: (shape=torch.Size([8, 2, 2, 16]), dtype=torch.float32)
tensor([[[[-0.0339, -0.3385, -0.4753,  ...,  0.3528,  0.1314,  0.7757],
          [-0.2080,  0.2963,  0.5698,  ...,  0.2658,  0.0524,  0.7247]],

         [[-0.0729,  0.1288, -0.2321,  ...,  0.5785,  0.2896,  1.0422],
          [ 0.1169,  0.1014,  0.1635,  ...,  0.4857,  0.1193,  1.3794]]],


        [[[-0.0611,  0.3247,  0.0325,  ...,  0.8285,  0.4846,  0.6312],
          [ 0.2009,  0.2242, -0.4980,  ...,  0.1593,  0.1883,  0.5251]],

         [[ 0.0027,  0.5809, -0.4511,  ...,  0.7523,  0.1597,  0.0678],
          [ 0.1577,  0.3307, -0.3943,  ...,  0.2153,  0.2266,  0.2651]]],


        [[[-0.0185, -0.0454, -0.4988,  ...,  0.8152,  0.5848,  0.4763],
          [-0.0510, -0.1781, -0.4198,  ...,  0.2502,  0.3582,  0.1946]],

         [[ 0.0165,  0.0120, -0.4484,  ...,  0.7537,  0.6494,  0.2336],
          [ 0.0624, -0.1876, -0.5215,  ...,  1.0266,  0.5373,  0.2415]]],


        ...,


        [[[ 0.1566,  0.1349, -0.0276,  ...,  0.3011,  1.2090,  0.7875],
          [ 0.5847,  0.1467, -0.6075,  ...,  0.1248,  0.3249,  0.0552]],

         [[ 0.4167,  0.1530, -0.1088,  ...,  0.4463,  0.6778,  0.6785],
          [-0.2523,  0.5317, -0.1983,  ...,  0.4871,  1.1598,  0.7380]]],


        [[[ 0.6266, -0.0778, -0.0832,  ...,  0.7873,  0.2195,  0.9594],
          [ 0.2130,  0.1477,  0.1535,  ...,  0.8022,  0.1629,  0.7562]],

         [[ 0.3817, -0.0828,  0.1255,  ...,  0.4012,  0.1606,  1.0689],
          [ 0.8705, -0.3144,  0.0467,  ...,  0.7576,  0.1511,  0.9917]]],


        [[[ 0.0577, -0.1003,  0.5214,  ...,  0.4493,  0.0875,  0.0088],
          [ 0.2295, -0.2192,  0.4634,  ...,  0.4159,  0.4225,  0.2237]],

         [[-0.1483,  0.0397,  0.2206,  ...,  0.1946,  0.3568,  0.2565],
          [ 0.3929, -0.1907,  0.7802,  ...,  0.2748,  0.2228,  0.3387]]]])

2025-06-08 11:43:22.949705 GPU 5 64407 test begin: paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 4, 8],"float32"), None, Tensor([8, 2, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=True, )
outputs format not support
[accuracy error] paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 4, 8],"float32"), None, Tensor([8, 2, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=True, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 244 / 512 (47.7%)
Greatest absolute difference: 0.8024446964263916 at index (1, 1, 3, 6) (up to 0.01 allowed)
Greatest relative difference: 6.0202178955078125 at index (1, 1, 3, 6) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([8, 2, 4, 8]), dtype=torch.float32)
tensor([[[[-0.2015, -0.0564,  0.1086,  ...,  0.2020,  0.3647,  0.8550],
          [-0.3304,  0.5608,  0.0342,  ...,  0.4667,  0.2656,  0.7715],
          [ 0.0535,  0.1520,  0.1255,  ...,  0.2513,  0.2666,  0.6539],
          [ 0.2927,  0.0201, -0.0138,  ...,  0.1259,  0.0771,  0.7442]],

         [[-0.1660,  0.4715,  0.0047,  ...,  0.4411,  0.1903,  0.9288],
          [ 0.1432,  0.7041,  0.1929,  ...,  0.4252,  0.5279,  0.8131],
          [ 0.1736,  0.2832,  0.1423,  ...,  0.2602,  0.3220,  1.1838],
          [-0.2985,  0.1646,  0.1069,  ...,  0.1588,  0.3898,  1.4057]]],


        [[[ 0.2942,  0.0504,  0.0935,  ...,  0.0745,  0.9499,  0.5566],
          [ 0.3276,  0.1400, -0.0362,  ...,  0.1163,  0.7752,  0.2241],
          [-0.0816,  0.1361,  0.5157,  ...,  0.1371,  0.9086,  0.3010],
          [ 0.0671, -0.0363,  0.1331,  ...,  0.1450,  0.3581,  0.6154]],

         [[ 0.3963, -0.0270,  0.0675,  ...,  0.1484,  0.5591,  0.2869],
          [-0.0369,  0.0335,  0.4360,  ...,  0.1574,  1.0523,  0.6235],
          [ 0.0335, -0.0393,  0.5742,  ...,  0.1236,  0.9850,  0.0348],
          [ 0.0965,  0.0384,  0.5979,  ...,  0.2381,  0.9357,  0.0723]]],


        [[[ 0.7863,  0.3488,  0.1972,  ...,  0.5761,  0.7425,  0.0566],
          [ 0.4221,  0.1001,  0.0481,  ...,  0.6078,  0.9648,  0.4892],
          [-0.0498,  0.2260,  0.3465,  ...,  0.7257,  0.8891,  0.5294],
          [ 0.5977,  0.2623,  0.1651,  ...,  0.5977,  0.5556,  0.4582]],

         [[ 0.1218,  0.3829,  0.2569,  ...,  0.8729,  1.3176,  0.5947],
          [ 0.2967,  0.2301,  0.1369,  ...,  0.6790,  0.4281,  0.4668],
          [ 0.9103,  0.5036,  0.1268,  ...,  0.6726,  0.2568,  0.4556],
          [ 0.8489, -0.1542,  0.1549,  ...,  0.1806,  0.3358,  0.7366]]],


        ...,


        [[[-0.3560,  0.0516,  0.7973,  ...,  0.5452,  0.6669,  0.3162],
          [-0.1381, -0.1511,  0.8206,  ...,  0.2762,  0.5934,  0.4104],
          [-0.0335, -0.2090,  0.0067,  ...,  0.3418,  0.1107,  0.4718],
          [-0.1778, -0.0900,  0.2350,  ...,  0.2819,  0.4538,  0.6747]],

         [[ 0.0241,  0.2510,  0.6297,  ...,  0.1913,  0.6369,  0.6659],
          [-0.1413,  0.5246,  0.0062,  ...,  0.6290,  0.3453,  0.2243],
          [-0.1904,  0.3691,  0.0353,  ...,  0.5254,  0.3494,  0.6392],
          [-0.1497, -0.5835,  0.1208,  ...,  0.2804,  0.1311,  0.2714]]],


        [[[ 0.0293,  0.0785,  0.1006,  ...,  0.6322,  0.1867,  0.3593],
          [-0.3424,  0.1282,  0.1066,  ...,  0.8678,  0.2411,  0.4909],
          [-0.6572,  0.5716, -0.0134,  ...,  1.0703,  0.3814,  0.4040],
          [-0.7766,  0.4084,  0.0794,  ...,  0.9370,  0.0514,  0.5065]],

         [[ 0.0662,  0.0637,  0.0945,  ...,  0.4932,  0.1642,  0.5130],
          [-0.5296,  0.5646,  0.0246,  ...,  0.9394,  0.4856,  0.2384],
          [ 0.1271, -0.1088,  0.2376,  ...,  0.6435,  0.1495,  0.7300],
          [-0.4341, -0.1914,  0.1335,  ...,  0.5899,  0.5604,  0.4300]]],


        [[[-0.2464, -0.0317, -0.1056,  ...,  0.8041,  0.9505,  0.5692],
          [-0.3399, -0.1601, -0.4791,  ...,  0.7241,  0.9243,  0.9964],
          [-0.3736, -0.1002, -0.6636,  ...,  0.2946,  0.9527,  0.3666],
          [-0.4655, -0.3242, -0.6219,  ...,  0.8996,  0.3420,  0.8668]],

         [[-0.7947, -0.0766, -0.1606,  ...,  0.7697,  0.6761,  0.1624],
          [-0.1549,  0.1107, -0.3889,  ...,  0.6113,  0.6978,  1.0703],
          [-0.2017,  0.0976, -0.4335,  ...,  0.7756,  0.7133,  0.4732],
          [-0.0072,  0.1885, -0.3117,  ...,  0.1133,  0.1965,  0.6487]]]])
DESIRED: (shape=torch.Size([8, 2, 4, 8]), dtype=torch.float32)
tensor([[[[-0.2015, -0.0564,  0.1086,  ...,  0.8287,  0.2646,  0.5942],
          [-0.3304,  0.5608,  0.0342,  ...,  0.8563,  0.2789,  0.4960],
          [ 0.0535,  0.1520,  0.1255,  ...,  0.6906,  0.1049,  0.6476],
          [ 0.2927,  0.0201, -0.0138,  ...,  0.4320,  0.1264,  0.6369]],

         [[-0.1660,  0.4715,  0.0047,  ...,  0.8991,  0.2379,  0.6309],
          [ 0.1432,  0.7041,  0.1929,  ...,  0.4845,  0.3145,  0.7263],
          [ 0.1736,  0.2832,  0.1423,  ...,  0.5225,  0.1446,  0.9666],
          [-0.2985,  0.1646,  0.1069,  ...,  0.3316,  0.3005,  1.1573]]],


        [[[ 0.2942,  0.0504,  0.0935,  ...,  0.0521,  0.5601,  0.3342],
          [ 0.3276,  0.1400, -0.0362,  ...,  0.0649,  0.5502,  0.0757],
          [-0.0816,  0.1361,  0.5157,  ...,  0.0843,  0.1831,  0.3667],
          [ 0.0671, -0.0363,  0.1331,  ...,  0.1375,  0.1302,  0.3401]],

         [[ 0.3963, -0.0270,  0.0675,  ...,  0.1380,  0.3194,  0.0426],
          [-0.0369,  0.0335,  0.4360,  ...,  0.1297,  0.3454,  0.4123],
          [ 0.0335, -0.0393,  0.5742,  ...,  0.1195,  0.1859,  0.2415],
          [ 0.0965,  0.0384,  0.5979,  ...,  0.1995,  0.1333,  0.1160]]],


        [[[ 0.7863,  0.3488,  0.1972,  ...,  0.3576,  0.2952,  0.2071],
          [ 0.4221,  0.1001,  0.0481,  ...,  0.7866,  0.5203,  1.0442],
          [-0.0498,  0.2260,  0.3465,  ...,  0.7766,  0.2809,  0.4119],
          [ 0.5977,  0.2623,  0.1651,  ...,  0.5232,  0.2094,  0.7713]],

         [[ 0.1218,  0.3829,  0.2569,  ...,  0.7644,  0.5849,  0.8882],
          [ 0.2967,  0.2301,  0.1369,  ...,  0.6981,  0.1549,  0.9407],
          [ 0.9103,  0.5036,  0.1268,  ...,  0.2702,  0.0636,  1.1033],
          [ 0.8489, -0.1542,  0.1549,  ...,  0.5149,  0.0903,  0.8251]]],


        ...,


        [[[-0.3560,  0.0516,  0.7973,  ...,  1.0974,  0.4832,  0.2703],
          [-0.1381, -0.1511,  0.8206,  ...,  0.6737,  0.2608,  0.4817],
          [-0.0335, -0.2090,  0.0067,  ...,  0.8485,  0.2713,  0.3231],
          [-0.1778, -0.0900,  0.2350,  ...,  0.6450,  0.7966,  0.6029]],

         [[ 0.0241,  0.2510,  0.6297,  ...,  0.2302,  0.6622,  0.3758],
          [-0.1413,  0.5246,  0.0062,  ...,  0.9571,  0.8690,  0.1309],
          [-0.1904,  0.3691,  0.0353,  ...,  0.8453,  0.8349,  0.5803],
          [-0.1497, -0.5835,  0.1208,  ...,  0.9700,  0.1496,  0.3512]]],


        [[[ 0.0293,  0.0785,  0.1006,  ...,  0.7861,  0.1127,  0.7404],
          [-0.3424,  0.1282,  0.1066,  ...,  1.0603,  0.1405,  0.9695],
          [-0.6572,  0.5716, -0.0134,  ...,  0.9263,  0.1836,  0.9603],
          [-0.7766,  0.4084,  0.0794,  ...,  0.8958,  0.0420,  1.0878]],

         [[ 0.0662,  0.0637,  0.0945,  ...,  0.6110,  0.1003,  1.1440],
          [-0.5296,  0.5646,  0.0246,  ...,  0.7551,  0.2427,  0.5733],
          [ 0.1271, -0.1088,  0.2376,  ...,  0.9743,  0.1236,  1.5226],
          [-0.4341, -0.1914,  0.1335,  ...,  0.9776,  0.3024,  0.9706]]],


        [[[-0.2464, -0.0317, -0.1056,  ...,  0.8203,  0.9104,  0.4819],
          [-0.3399, -0.1601, -0.4791,  ...,  0.6834,  0.7777,  0.8394],
          [-0.3736, -0.1002, -0.6636,  ...,  0.2633,  0.7531,  0.3359],
          [-0.4655, -0.3242, -0.6219,  ...,  0.7964,  0.1606,  0.7445]],

         [[-0.7947, -0.0766, -0.1606,  ...,  0.7658,  0.6232,  0.1490],
          [-0.1549,  0.1107, -0.3889,  ...,  0.6802,  0.5793,  0.9081],
          [-0.2017,  0.0976, -0.4335,  ...,  0.8450,  0.5819,  0.3438],
          [-0.0072,  0.1885, -0.3117,  ...,  0.1966,  0.1053,  0.4971]]]])

2025-06-08 11:43:22.987870 GPU 5 64406 test begin: paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 4, 8],"float32"), None, Tensor([8, 2, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=True, )
outputs format not support
[accuracy error] paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 4, 8],"float32"), None, Tensor([8, 2, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=True, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 473 / 512 (92.4%)
Greatest absolute difference: 1.482279896736145 at index (2, 1, 1, 3) (up to 0.01 allowed)
Greatest relative difference: 118.1974868774414 at index (6, 0, 3, 5) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([8, 2, 4, 8]), dtype=torch.float32)
tensor([[[[ 0.3211,  0.2179,  0.0071,  ...,  0.3327, -0.1440,  0.5329],
          [ 0.3266,  0.6018,  0.0120,  ...,  0.4023, -0.3016,  0.2514],
          [-0.1049,  0.2269, -0.0449,  ...,  0.9254,  0.0816,  0.5575],
          [ 0.0942,  0.3592, -0.0480,  ...,  0.5555, -0.1433,  0.3929]],

         [[ 0.1916,  0.3980, -0.0637,  ...,  0.4708,  0.0149,  0.5775],
          [ 0.2606,  0.1522, -0.0072,  ...,  0.4091, -0.2379,  0.6462],
          [ 0.1182,  0.1089,  0.1623,  ...,  0.8084,  0.0179,  0.2075],
          [ 0.4222,  0.5980,  0.0393,  ...,  0.7139, -0.3419,  0.6459]]],


        [[[ 0.6009,  0.4738,  0.0241,  ...,  0.4364, -0.1261,  1.1046],
          [ 0.2811,  0.8327,  0.3070,  ...,  0.5537, -0.3219,  0.3956],
          [ 0.1196,  0.1746, -0.0254,  ...,  0.4043, -0.1558,  0.2057],
          [ 0.6539,  0.2066,  0.2683,  ...,  0.1553,  0.2217,  1.0129]],

         [[ 0.0198,  0.6814,  0.1251,  ...,  0.0475, -0.3540,  0.8639],
          [ 0.1719,  0.4581,  0.2175,  ...,  0.2460, -0.0874,  0.5936],
          [ 0.3217,  0.4953,  0.0630,  ...,  0.2882, -0.2665,  0.2667],
          [ 0.5496,  0.2445,  0.2785,  ...,  0.4138,  0.1209,  0.7688]]],


        [[[ 0.4237,  0.8682,  0.0356,  ...,  0.4563,  0.0474,  0.3693],
          [ 0.1578,  0.4737, -0.0460,  ...,  0.2654, -0.1520,  0.4568],
          [ 0.4878,  0.9062, -0.1535,  ...,  0.0978, -0.3087,  0.0954],
          [ 0.3164,  0.5393, -0.0206,  ...,  0.7360,  0.0690,  0.3409]],

         [[ 0.1751,  0.4665,  0.0705,  ...,  0.4641, -0.3601,  0.1239],
          [ 0.3712,  0.6892, -0.0046,  ...,  0.3999, -0.2661,  0.1076],
          [ 0.1106,  0.2554,  0.0303,  ...,  0.2907, -0.0714,  0.0449],
          [ 0.2154,  0.3810, -0.0581,  ...,  0.2064,  0.1035,  0.3088]]],


        ...,


        [[[ 0.2048,  0.1066, -0.0221,  ...,  0.6542,  0.0584,  0.1235],
          [ 0.1714,  0.0577, -0.0662,  ...,  0.8678,  0.5403,  0.3809],
          [ 0.0875,  0.0219,  0.4927,  ...,  1.0675,  0.6318,  0.3247],
          [ 0.1717,  0.1653,  0.1636,  ...,  0.9715,  0.6424,  0.2674]],

         [[ 0.5444,  0.1018,  0.1348,  ...,  0.7265,  0.1964,  0.2542],
          [ 0.0130,  0.1149,  0.2416,  ...,  0.6560,  0.1651,  0.0124],
          [-0.2372,  0.1018,  0.1700,  ...,  0.4969,  0.1935,  0.1643],
          [ 0.0659,  0.0967,  0.5385,  ...,  0.6437,  0.2175,  0.3147]]],


        [[[ 0.4703,  0.3182,  0.0032,  ...,  0.7242,  0.5074,  0.1136],
          [ 0.2278,  0.2554,  0.0587,  ...,  0.5850, -0.1465,  0.2247],
          [ 0.5022,  0.1665,  0.0126,  ...,  0.8240,  0.3142,  0.0250],
          [ 0.5099,  0.0646, -0.0119,  ...,  0.6321, -0.0310,  0.0883]],

         [[ 0.6089,  0.1030,  0.0518,  ...,  0.8808, -0.3018,  0.3626],
          [ 0.2718,  0.1242,  0.0450,  ...,  0.5892,  0.2705,  0.0154],
          [ 0.0076,  0.1773, -0.0403,  ...,  0.3144,  0.1091,  0.1114],
          [ 0.1731,  0.1548,  0.0125,  ...,  0.3301,  0.6880,  0.0173]]],


        [[[ 0.4607,  0.1987, -0.4533,  ...,  0.8437, -0.2098,  0.2736],
          [ 0.3084,  0.1155, -0.8604,  ...,  0.9615, -0.1155,  0.0765],
          [ 0.7312,  0.2415, -0.4543,  ...,  1.1531, -0.1521,  0.3134],
          [ 0.1206,  0.0905, -0.2384,  ...,  1.0225, -0.1423,  0.2142]],

         [[ 0.6556,  0.2733,  0.1752,  ...,  0.6783, -0.3767,  0.1006],
          [ 0.4042,  0.1252,  0.1824,  ...,  1.2125, -0.0291,  0.4774],
          [ 0.1229,  0.1029,  0.3357,  ...,  0.8039, -0.1695,  0.3958],
          [ 0.3296,  0.1296, -0.1535,  ...,  0.3859, -0.0668,  0.4254]]]])
DESIRED: (shape=torch.Size([8, 2, 4, 8]), dtype=torch.float32)
tensor([[[[ 2.4533e-01, -4.0257e-02, -8.5947e-03,  ...,  1.5250e-01,
            2.1353e-01,  4.2743e-01],
          [ 4.7539e-01,  1.6042e-01,  1.1745e-01,  ...,  4.9575e-01,
            1.1207e-01,  6.1039e-01],
          [-2.2281e-01, -1.0606e-01, -6.1531e-02,  ...,  5.5691e-01,
            2.6232e-01,  1.6430e-01],
          [ 2.3696e-02,  1.5327e-01, -4.3657e-02,  ...,  2.9874e-01,
            1.1753e-01,  3.7781e-01]],

         [[ 3.2469e-01, -7.2342e-02, -5.5987e-02,  ...,  5.6432e-01,
            2.5419e-01,  2.8247e-01],
          [ 1.6248e-01, -1.1937e-01, -1.1439e-01,  ...,  1.9203e-01,
            1.6121e-01,  4.9843e-01],
          [-9.0350e-02, -2.2343e-01,  1.5855e-01,  ...,  3.5626e-01,
            2.2705e-01,  7.9045e-02],
          [ 4.4664e-01,  3.2890e-02,  9.4715e-02,  ...,  5.7671e-01,
            2.8025e-01,  8.0387e-01]]],


        [[[ 5.9435e-01,  4.3413e-01, -8.2350e-02,  ...,  8.8018e-01,
            4.1574e-01,  4.1370e-01],
          [ 2.8149e-01,  8.0069e-01,  3.5131e-01,  ...,  9.1328e-01,
            2.3672e-01,  3.3852e-01],
          [ 6.5876e-02,  1.6844e-01,  6.5871e-02,  ...,  1.0243e-01,
            6.6871e-02,  3.9482e-01],
          [ 6.4553e-01,  1.8468e-01,  1.7324e-01,  ...,  1.2624e-01,
            6.4552e-01,  4.7304e-01]],

         [[ 6.8089e-02,  6.7480e-01,  4.3841e-02,  ...,  2.0425e-01,
            2.7951e-01,  2.6521e-01],
          [ 1.7383e-01,  4.4503e-01,  2.4349e-01,  ...,  3.0266e-01,
            3.6546e-01,  4.8026e-01],
          [ 3.1025e-01,  4.8297e-01,  2.8679e-01,  ...,  1.0290e-01,
            1.6585e-01,  8.2881e-01],
          [ 4.9809e-01,  2.2618e-01,  1.4278e-01,  ...,  9.8810e-02,
            4.7691e-01,  1.4605e-01]]],


        [[[ 4.9892e-01, -5.3475e-01, -6.7832e-02,  ...,  7.5692e-01,
            3.1148e-01,  6.0084e-01],
          [ 2.3971e-01, -2.6991e-01, -1.3308e-01,  ...,  7.1209e-01,
            2.5307e-01,  1.1818e+00],
          [ 5.4754e-01, -2.8268e-02,  6.9494e-03,  ...,  5.1524e-01,
            1.0644e-02,  1.3490e+00],
          [ 2.7501e-01, -7.9506e-01, -1.1157e-01,  ...,  3.2709e-01,
            2.3072e-01,  5.4159e-01]],

         [[ 2.3692e-01, -5.5755e-01,  7.5545e-02,  ...,  6.6777e-01,
            1.1493e-01,  8.4424e-01],
          [ 3.8674e-01, -3.8820e-01,  1.2559e-01,  ...,  4.5110e-01,
            1.9417e-01,  1.2039e+00],
          [ 1.0239e-01, -2.1099e-01,  1.4145e-01,  ...,  2.8929e-01,
            2.1164e-01,  6.9152e-01],
          [ 2.0860e-01, -1.5192e-01, -9.2524e-02,  ...,  1.9732e-01,
            2.3341e-01,  6.4095e-01]]],


        ...,


        [[[ 1.2311e-01, -2.4356e-03,  2.4357e-01,  ...,  9.3151e-02,
            2.1723e-01,  4.2649e-01],
          [-6.8410e-02, -5.0329e-02, -2.5418e-01,  ...,  6.9856e-02,
            6.4805e-01,  8.4364e-01],
          [-1.3655e-01, -1.1566e-01,  3.4027e-01,  ...,  8.5756e-02,
            1.0657e+00,  7.7059e-01],
          [ 3.0631e-01, -3.5613e-02, -4.5003e-02,  ...,  1.9738e-01,
            8.7807e-01,  6.2099e-01]],

         [[ 2.8409e-01, -4.4490e-02,  1.4131e-01,  ...,  4.1118e-02,
            3.6802e-01,  5.9266e-01],
          [ 2.3742e-01, -3.4161e-02,  3.8217e-01,  ...,  1.6651e-01,
            4.1800e-01,  1.5093e-01],
          [ 2.4513e-02,  1.9825e-02,  3.8105e-01,  ...,  1.6834e-01,
            4.7443e-01,  5.1858e-01],
          [-2.9234e-02,  2.0061e-02,  4.9703e-01,  ...,  9.5849e-02,
            5.8385e-01,  6.9868e-01]]],


        [[[ 4.7162e-01,  2.3286e-01, -3.6900e-02,  ...,  4.2213e-01,
            1.0629e-01,  3.3013e-01],
          [ 2.2709e-01,  2.2309e-01,  2.8304e-02,  ...,  1.3772e-01,
            9.4284e-02,  4.5634e-01],
          [ 4.9661e-01,  8.0625e-02, -1.1110e-03,  ...,  3.8959e-01,
            6.3870e-02,  1.2520e-01],
          [ 5.0014e-01,  2.2221e-02, -9.6142e-03,  ...,  5.3030e-03,
            2.4876e-02,  2.5886e-01]],

         [[ 5.9837e-01,  2.6088e-02,  1.5361e-02,  ...,  2.3210e-01,
            1.1642e-01,  7.7357e-01],
          [ 2.6979e-01,  5.2604e-02,  3.1536e-02,  ...,  4.2719e-01,
            7.8581e-02,  8.1614e-02],
          [ 1.1839e-02,  1.3621e-01, -2.6688e-02,  ...,  3.6035e-01,
            4.5085e-02,  4.3493e-01],
          [ 1.7376e-01,  1.2343e-01, -1.0265e-02,  ...,  1.5889e-01,
            1.1743e-01,  1.9999e-01]]],


        [[[ 5.0017e-01, -6.1054e-02, -4.8617e-01,  ...,  1.9318e-01,
            4.3116e-01,  5.9439e-01],
          [ 2.0994e-01, -5.1329e-02, -9.4048e-02,  ...,  8.9824e-02,
            1.6549e-01,  8.2381e-01],
          [ 6.7190e-01, -1.2010e-01, -5.3297e-01,  ...,  1.3618e-01,
            5.4806e-01,  6.1155e-01],
          [ 7.3205e-02, -5.7654e-02, -1.6919e-01,  ...,  1.4969e-01,
            6.3760e-01,  5.3416e-01]],

         [[ 7.5751e-01, -1.6967e-02,  2.7841e-01,  ...,  2.3920e-01,
            7.2483e-01,  4.3383e-01],
          [ 2.2079e-01, -6.5512e-02, -4.6629e-01,  ...,  5.5436e-02,
            1.3649e+00,  4.1705e-01],
          [ 2.4707e-01, -1.9134e-01, -2.8013e-01,  ...,  2.0301e-01,
            1.2456e+00,  3.4060e-01],
          [ 4.0299e-01, -8.1679e-02, -4.9273e-01,  ...,  1.1582e-01,
            1.0986e+00,  5.8348e-01]]]])

2025-06-08 11:43:23.120346 GPU 5 64402 test begin: paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 4, 8],"float32"), None, Tensor([8, 2, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=True, )
outputs format not support
[accuracy error] paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 4, 8],"float32"), None, Tensor([8, 2, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=True, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 496 / 512 (96.9%)
Greatest absolute difference: 1.8183064460754395 at index (7, 1, 2, 6) (up to 0.01 allowed)
Greatest relative difference: 115.71194458007812 at index (6, 1, 3, 2) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([8, 2, 4, 8]), dtype=torch.float32)
tensor([[[[-0.1485,  0.1151,  0.0172,  ...,  0.0947, -0.0431,  0.2137],
          [ 0.0028,  0.8300, -0.0286,  ...,  0.0875,  0.1313,  0.6004],
          [ 0.3342,  0.6877, -0.0308,  ...,  0.0694, -0.0047,  0.6578],
          [ 0.1835,  0.8473,  0.4193,  ...,  0.0451, -0.0426,  0.0947]],

         [[-0.4572,  0.5430,  0.5197,  ...,  0.0631,  0.1561,  0.4425],
          [-0.1430,  0.9936,  0.0441,  ...,  0.0798, -0.3367,  0.7738],
          [ 0.0448,  0.4750,  0.3047,  ...,  0.0203, -0.2917,  0.6886],
          [-0.3269,  0.6042,  0.3785,  ...,  0.0573,  0.2633,  0.6928]]],


        [[[ 0.2632,  0.3905,  0.6740,  ...,  1.3723,  0.5182,  0.5344],
          [ 0.1673,  0.7591,  0.6177,  ...,  0.7999,  0.7492,  1.0879],
          [-0.3248,  0.7342,  0.6226,  ...,  0.9440,  0.3822,  0.7004],
          [-0.2102,  0.8012,  0.3911,  ...,  0.1001,  0.7337,  0.6771]],

         [[-0.2551,  0.5100,  0.4491,  ...,  1.5112, -0.0399,  0.1562],
          [-0.1598,  0.2436,  0.5944,  ...,  0.5262, -0.0662,  0.3636],
          [ 0.0286,  0.9140,  0.0611,  ...,  1.4073,  0.3373,  0.5201],
          [ 0.3076,  0.2653,  0.3015,  ...,  0.0939,  0.7206,  1.1020]]],


        [[[-0.3581,  1.1460,  0.4853,  ...,  0.3844,  0.1921,  0.5292],
          [-0.5518,  0.6771,  0.0237,  ...,  0.6271,  0.2020,  0.2563],
          [-0.2141,  0.3389,  0.7133,  ...,  0.5256,  0.5401,  0.4987],
          [-0.2761,  0.9031,  0.7826,  ...,  0.1052,  0.0840,  0.1088]],

         [[ 0.2153,  0.4487,  0.8028,  ...,  0.3158,  0.2255,  0.5537],
          [-0.2785,  0.8121,  0.3278,  ...,  0.8892,  0.4247,  0.5707],
          [-0.2538,  1.0699,  0.1131,  ...,  0.7346,  0.3723,  0.3992],
          [-0.2879,  0.5238,  0.9128,  ...,  0.7279,  0.3871,  0.4050]]],


        ...,


        [[[-0.0872,  0.5635,  0.1341,  ...,  0.3134, -0.3901,  0.6057],
          [-0.1086,  1.3366, -0.1651,  ...,  0.3299, -0.3783,  0.7132],
          [-0.0514,  0.9842, -0.2420,  ...,  0.6238,  0.0238,  0.1583],
          [ 0.0981,  0.7244, -0.1952,  ...,  0.4801,  0.0239,  0.2168]],

         [[ 0.0635,  0.7494, -0.6307,  ...,  0.5448,  0.0206,  0.3592],
          [-0.1391,  1.1285, -0.2674,  ...,  0.3375, -0.3497,  0.4748],
          [ 0.1403,  0.8084,  0.1629,  ...,  0.8026, -0.0121,  0.4009],
          [-0.0717,  0.9351, -0.0486,  ...,  0.5381, -0.5593,  0.7305]]],


        [[[-0.1561,  0.3601,  0.0954,  ...,  0.2349,  0.0547,  0.4332],
          [-0.1301,  0.3914, -0.0598,  ...,  0.1255,  0.2256,  0.9677],
          [ 0.1253,  0.4262, -0.0572,  ...,  0.1459, -0.0226,  0.4781],
          [ 0.0197,  0.2355, -0.1068,  ...,  0.2765,  0.0873,  0.2636]],

         [[-0.2049,  0.3705, -0.0248,  ...,  0.1120, -0.0142,  0.2057],
          [-0.1188,  0.3212, -0.0087,  ...,  0.1863,  0.1148,  0.4596],
          [-0.1815,  0.2583, -0.1112,  ...,  0.2085,  0.2796,  0.5264],
          [ 0.1175,  0.3611, -0.1350,  ...,  0.1597,  0.0855,  0.4306]]],


        [[[ 0.0646,  0.7848,  0.3088,  ...,  0.1202, -0.0718,  0.7651],
          [-0.0392,  0.9124,  0.0321,  ...,  0.1031, -0.5276,  1.2127],
          [-0.0119,  0.7912,  0.4365,  ...,  0.1724, -0.2000,  0.1892],
          [-0.0246,  0.6374,  0.2321,  ...,  0.4695, -0.3910,  1.0704]],

         [[ 0.3998,  1.0104, -0.3097,  ...,  0.4629, -0.3405,  0.9317],
          [-0.1309,  0.5840, -0.0440,  ...,  0.1120, -0.1447,  0.6748],
          [ 0.0229,  0.9492, -0.1958,  ...,  0.5161, -0.6137,  1.0443],
          [ 0.4940,  0.6677, -0.6067,  ...,  0.6687, -0.2583,  0.7139]]]])
DESIRED: (shape=torch.Size([8, 2, 4, 8]), dtype=torch.float32)
tensor([[[[-7.2731e-01, -3.5722e-01,  1.3321e-01,  ...,  6.0063e-01,
            1.1756e-01,  6.3931e-01],
          [-1.0198e-02, -6.5351e-02,  5.7438e-02,  ...,  8.4747e-01,
            3.8588e-01,  9.4455e-01],
          [ 4.6733e-02, -6.8590e-02, -9.3452e-02,  ...,  5.0140e-01,
            2.7127e-01,  2.4223e-01],
          [ 2.3916e-01,  2.0402e-01,  4.4184e-01,  ...,  4.4715e-01,
            1.6941e-01,  1.4017e-01]],

         [[-2.1652e-01,  4.6383e-02,  4.7944e-01,  ...,  7.5561e-01,
            4.7482e-01,  2.9068e-01],
          [-5.0791e-02,  1.9545e-01,  1.4359e-01,  ...,  8.0697e-01,
            1.9002e-01,  7.8835e-01],
          [ 1.9945e-01,  1.2375e-01,  3.1376e-01,  ...,  2.7819e-01,
            2.3879e-01,  3.6259e-01],
          [-4.8294e-01,  3.2569e-01,  3.8719e-01,  ...,  4.1833e-01,
            6.2980e-01,  7.8081e-01]]],


        [[[-2.8432e-02,  3.0160e-01,  6.8521e-01,  ...,  5.0669e-01,
            5.1684e-01,  4.7981e-01],
          [ 3.0554e-01,  6.7756e-01,  6.0087e-01,  ...,  2.9009e-01,
            7.9633e-01,  7.3995e-01],
          [-2.9831e-01,  7.0220e-01,  6.3277e-01,  ...,  2.4399e-01,
            4.4991e-01,  8.1259e-01],
          [ 2.7030e-01,  7.6913e-01,  3.7487e-01,  ...,  8.4403e-02,
            6.9062e-01,  1.7392e-01]],

         [[-3.4542e-01,  4.3816e-01,  4.5804e-01,  ...,  7.7099e-01,
            2.2276e-02,  3.6382e-01],
          [-6.4205e-02,  2.1120e-01,  6.0969e-01,  ...,  3.8550e-01,
            5.2299e-02,  7.5732e-01],
          [ 2.9581e-01,  7.8631e-01,  6.5084e-02,  ...,  8.6788e-01,
            3.5631e-01,  5.1746e-01],
          [ 4.1059e-01,  2.2032e-01,  2.8126e-01,  ...,  3.2971e-02,
            7.6517e-01,  7.4120e-01]]],


        [[[ 1.0231e-01,  7.3535e-01,  4.3865e-01,  ...,  6.3926e-01,
            6.3758e-01,  7.5493e-01],
          [-7.7122e-01,  4.6009e-01,  1.5455e-02,  ...,  6.5371e-01,
            4.0949e-01,  3.8309e-01],
          [-6.0166e-01,  1.4751e-01,  6.1524e-01,  ...,  4.4930e-01,
            1.0306e+00,  2.7564e-01],
          [ 3.8417e-01,  6.2695e-01,  8.3820e-01,  ...,  3.9292e-01,
            2.6748e-01,  4.5095e-01]],

         [[ 4.0706e-01,  7.5590e-02,  8.3710e-01,  ...,  3.7116e-01,
            7.3843e-01,  1.1825e+00],
          [-1.4554e-01,  3.0068e-01,  2.6043e-01,  ...,  9.6361e-01,
            9.0936e-01,  6.2651e-01],
          [ 2.1438e-01,  4.9760e-01,  1.2976e-01,  ...,  9.3483e-01,
            7.1529e-01,  7.1279e-01],
          [-2.8810e-01,  1.8396e-01,  8.7204e-01,  ...,  7.4934e-01,
            8.2144e-01,  4.3802e-01]]],


        ...,


        [[[-2.2636e-03, -6.7017e-02,  5.7755e-01,  ...,  9.8274e-01,
            9.3667e-01,  7.8289e-01],
          [ 7.7785e-02,  2.4410e-01, -3.8156e-01,  ...,  1.4477e+00,
            6.3019e-01,  4.1816e-01],
          [-9.6832e-03, -2.8185e-01, -7.2277e-02,  ...,  1.3992e+00,
            6.2661e-01,  4.4952e-01],
          [-1.4907e-03, -3.2748e-01, -2.4464e-01,  ...,  4.9861e-01,
            7.0595e-01,  3.6081e-01]],

         [[ 4.3153e-03, -4.4700e-01, -6.7200e-01,  ...,  8.0831e-01,
            8.7642e-01,  6.0249e-01],
          [-3.5667e-02,  5.7250e-01, -2.1966e-02,  ...,  1.0769e+00,
            1.6797e-01,  4.5678e-01],
          [-5.6738e-02, -6.5565e-01, -4.7658e-01,  ...,  7.0347e-01,
            1.0373e+00,  1.0933e-01],
          [-4.8770e-02,  3.1490e-02,  4.2175e-01,  ...,  1.1343e+00,
            5.2125e-01,  7.4861e-01]]],


        [[[-7.2934e-02, -3.2123e-02,  8.7567e-02,  ...,  5.1263e-01,
            2.5017e-01,  3.2379e-01],
          [ 1.6372e-01,  2.0206e-02, -9.7434e-02,  ...,  4.8281e-01,
            3.0059e-01,  7.2593e-01],
          [ 2.1086e-01,  3.1195e-02,  6.5349e-02,  ...,  3.4211e-01,
            1.6499e-01,  6.8703e-01],
          [-1.3596e-01, -1.8876e-01, -2.8306e-02,  ...,  4.0225e-01,
            1.0276e-01,  4.6894e-01]],

         [[ 8.8819e-02,  8.7604e-02,  6.7778e-02,  ...,  4.5073e-01,
            1.1440e-01,  4.0775e-01],
          [-2.0157e-01,  1.8211e-01, -4.2699e-02,  ...,  2.5894e-01,
            1.5385e-01,  3.0279e-01],
          [-1.2940e-01, -5.1917e-02, -1.3221e-01,  ...,  4.3884e-01,
            2.0829e-01,  4.8556e-01],
          [ 2.4659e-01, -1.3211e-01, -1.1564e-03,  ...,  4.2141e-01,
            1.7095e-01,  7.4846e-01]]],


        [[[ 9.9996e-02,  4.8432e-01, -4.5822e-01,  ...,  5.6405e-01,
            1.3235e+00,  3.4792e-01],
          [ 4.3557e-02,  6.8544e-01, -6.7554e-01,  ...,  7.0186e-01,
            1.1598e+00,  9.2671e-01],
          [ 1.4333e-02,  5.1508e-01,  4.9384e-01,  ...,  6.6699e-01,
            6.4743e-01,  2.7033e-01],
          [-1.8238e-02,  1.6319e-01, -4.4576e-01,  ...,  8.6808e-01,
            1.3932e+00,  7.8185e-01]],

         [[ 4.6308e-01,  9.7692e-02, -3.9056e-01,  ...,  8.2569e-01,
            1.2091e+00,  1.0976e+00],
          [-8.4772e-02,  4.9429e-01, -3.6598e-01,  ...,  5.6172e-01,
            1.0182e+00,  5.8931e-01],
          [ 1.6159e-01,  3.1947e-01, -1.0981e-01,  ...,  1.0988e+00,
            1.2046e+00,  1.3519e+00],
          [ 3.9880e-01, -4.0663e-01, -3.2246e-01,  ...,  7.2630e-01,
            9.0361e-01,  1.1249e+00]]]])

2025-06-08 11:43:23.175911 GPU 5 64404 test begin: paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 4, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), None, Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=True, )
outputs format not support
[accuracy error] paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 4, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), None, Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=True, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 251 / 512 (49.0%)
Greatest absolute difference: 0.9516579508781433 at index (0, 0, 3, 7) (up to 0.01 allowed)
Greatest relative difference: 11.894841194152832 at index (1, 0, 0, 6) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([8, 2, 4, 8]), dtype=torch.float32)
tensor([[[[-0.2042,  0.1993,  0.1554,  ...,  1.1228,  0.6803,  0.2069],
          [ 0.2951, -0.3358,  0.6590,  ...,  0.8232,  0.2964,  0.2581],
          [ 0.1465,  0.4852,  0.5110,  ...,  0.9384,  0.2885,  0.2433],
          [-0.1855, -0.0124,  0.1178,  ...,  0.4256,  0.3531,  0.5950]],

         [[-0.0891, -0.2550,  0.1070,  ...,  0.6151,  0.3554,  0.3414],
          [ 0.5798,  0.5328,  0.2904,  ...,  0.7193,  0.3795,  0.1624],
          [-0.2860,  0.5941, -0.1052,  ...,  1.0301,  0.2805,  0.0723],
          [ 0.1984,  0.4398,  0.6405,  ...,  0.4860,  0.3442,  0.4785]]],


        [[[ 0.0396,  0.0278,  0.2900,  ...,  0.0516,  0.0610,  1.1452],
          [ 0.1402,  0.1412,  0.4444,  ...,  0.1198,  0.1515,  0.6853],
          [ 0.0684,  0.3837,  0.5348,  ...,  0.2339,  0.8859,  0.4986],
          [-0.0460, -0.0234,  0.4541,  ...,  0.0468,  0.8479,  0.5604]],

         [[-0.0504,  0.4084,  0.0955,  ...,  0.2520,  0.7138,  0.7687],
          [-0.2369,  0.3758,  0.5608,  ...,  0.2676,  0.8970,  0.9670],
          [-0.1336, -0.0699,  0.2440,  ...,  0.0570,  0.8248,  0.6330],
          [-0.1236,  0.1121,  0.8780,  ...,  0.1134,  0.5811,  0.8908]]],


        [[[ 0.0756,  0.0444, -0.0481,  ...,  0.0948,  0.2362,  0.1408],
          [ 0.0991, -0.5888, -0.1546,  ...,  0.5073,  0.3639,  0.5698],
          [ 0.0113, -0.6318, -0.3711,  ...,  0.7728,  0.8555,  0.2000],
          [ 0.1253, -0.1655, -0.3066,  ...,  0.2985,  0.7006,  0.1728]],

         [[-0.0548, -0.6311, -0.2206,  ...,  0.5335,  0.6770,  0.3530],
          [-0.0183,  0.0076, -0.0036,  ...,  0.4769,  0.8962,  0.4076],
          [-0.0113, -0.1407, -0.3154,  ...,  0.5376,  0.5778,  0.2598],
          [ 0.0042,  0.2018,  0.1428,  ...,  0.5307,  0.3187,  0.1091]]],


        ...,


        [[[ 0.2795, -0.3940,  0.0972,  ...,  0.5523,  0.7798,  1.1116],
          [-0.2220, -0.1328, -0.0287,  ...,  0.3102,  1.1232,  0.9167],
          [-0.2091, -0.3306,  0.0421,  ...,  0.5813,  1.2275,  1.0612],
          [-0.2675, -0.3852, -0.0739,  ...,  0.5729,  0.3900,  0.8995]],

         [[-0.2396, -0.3898,  0.0379,  ...,  0.3468,  1.2101,  0.2832],
          [-0.3799, -0.3506,  0.2080,  ...,  0.3010,  0.8614,  0.4020],
          [-0.3813, -0.5146, -0.1256,  ...,  0.3787,  0.5259,  0.6281],
          [-0.0306, -0.2329, -0.0980,  ...,  0.3175,  0.6664,  0.4786]]],


        [[[-0.1478, -0.5268, -0.1158,  ...,  0.8788,  0.4653,  0.7543],
          [-0.0520, -0.0562, -0.2007,  ...,  0.9677,  0.8762,  0.9803],
          [ 0.1213,  0.2431, -0.3355,  ...,  0.7166,  0.6303,  0.7179],
          [-0.0082,  0.0720, -0.1820,  ...,  0.5940,  0.6988,  1.0429]],

         [[-0.0865, -0.4597, -0.1594,  ...,  0.9255,  0.1574,  0.9164],
          [-0.0829, -0.1485, -0.2435,  ...,  0.4786,  0.3408,  0.6844],
          [ 0.2222, -0.3365, -0.2906,  ...,  0.6728,  0.7139,  1.2668],
          [ 0.0614,  0.1973, -0.2892,  ...,  0.5592,  0.3158,  1.4488]]],


        [[[ 0.5760, -0.1668,  0.9266,  ...,  0.6284,  0.3154,  0.5829],
          [-0.4449, -0.0413,  0.0786,  ...,  0.2446,  0.0751,  0.3450],
          [ 0.3949, -0.3687,  0.5253,  ...,  0.7114,  0.6457,  0.8972],
          [-0.3410, -0.3593,  0.3856,  ...,  0.7933,  0.9917,  0.3786]],

         [[ 0.4987, -0.1295, -0.0333,  ...,  0.5231,  0.5363,  0.7015],
          [ 0.5095, -0.5968,  0.6742,  ...,  0.8346,  0.3717,  0.6045],
          [-0.1992, -0.1192, -0.1540,  ...,  0.2101,  0.8239,  0.6460],
          [-0.5940, -0.0108,  0.0115,  ...,  0.0610,  0.2546,  0.4617]]]])
DESIRED: (shape=torch.Size([8, 2, 4, 8]), dtype=torch.float32)
tensor([[[[-0.2042,  0.1993,  0.1554,  ...,  0.9055,  1.1157,  0.9460],
          [ 0.2951, -0.3358,  0.6590,  ...,  0.6805,  0.4335,  0.5023],
          [ 0.1465,  0.4852,  0.5110,  ...,  0.7459,  0.4336,  0.5376],
          [-0.1855, -0.0124,  0.1178,  ...,  0.3463,  0.5758,  1.5466]],

         [[-0.0891, -0.2550,  0.1070,  ...,  0.5086,  0.5806,  0.6400],
          [ 0.5798,  0.5328,  0.2904,  ...,  0.5662,  0.6043,  0.4527],
          [-0.2860,  0.5941, -0.1052,  ...,  0.8166,  0.4752,  0.3349],
          [ 0.1984,  0.4398,  0.6405,  ...,  0.3798,  0.5145,  1.3581]]],


        [[[ 0.0396,  0.0278,  0.2900,  ...,  0.2001,  0.0047,  1.4309],
          [ 0.1402,  0.1412,  0.4444,  ...,  0.2863,  0.0659,  0.8720],
          [ 0.0684,  0.3837,  0.5348,  ...,  0.3078,  0.7890,  0.6399],
          [-0.0460, -0.0234,  0.4541,  ...,  0.2946,  0.7664,  0.6763]],

         [[-0.0504,  0.4084,  0.0955,  ...,  0.3431,  0.7015,  0.9460],
          [-0.2369,  0.3758,  0.5608,  ...,  0.4992,  0.7951,  1.2188],
          [-0.1336, -0.0699,  0.2440,  ...,  0.4555,  0.7843,  0.7973],
          [-0.1236,  0.1121,  0.8780,  ...,  0.3212,  0.4143,  1.0988]]],


        [[[ 0.0756,  0.0444, -0.0481,  ...,  0.2243,  0.2294,  0.2439],
          [ 0.0991, -0.5888, -0.1546,  ...,  0.5621,  0.3026,  0.9693],
          [ 0.0113, -0.6318, -0.3711,  ...,  1.0611,  0.7064,  0.3352],
          [ 0.1253, -0.1655, -0.3066,  ...,  0.4705,  0.5768,  0.2672]],

         [[-0.0548, -0.6311, -0.2206,  ...,  0.5818,  0.6053,  0.5998],
          [-0.0183,  0.0076, -0.0036,  ...,  0.9618,  0.9838,  0.6234],
          [-0.0113, -0.1407, -0.3154,  ...,  0.9689,  0.4361,  0.4354],
          [ 0.0042,  0.2018,  0.1428,  ...,  1.2196,  0.4410,  0.1784]]],


        ...,


        [[[ 0.2795, -0.3940,  0.0972,  ...,  0.6271,  0.3576,  0.9283],
          [-0.2220, -0.1328, -0.0287,  ...,  0.3645,  0.4746,  0.7596],
          [-0.2091, -0.3306,  0.0421,  ...,  0.6717,  0.5363,  0.8150],
          [-0.2675, -0.3852, -0.0739,  ...,  0.6537,  0.1495,  0.6214]],

         [[-0.2396, -0.3898,  0.0379,  ...,  0.3740,  0.5278,  0.2498],
          [-0.3799, -0.3506,  0.2080,  ...,  0.3229,  0.4192,  0.4384],
          [-0.3813, -0.5146, -0.1256,  ...,  0.3961,  0.1953,  0.6554],
          [-0.0306, -0.2329, -0.0980,  ...,  0.3597,  0.2621,  0.4576]]],


        [[[-0.1478, -0.5268, -0.1158,  ...,  0.5865,  0.3131,  0.4867],
          [-0.0520, -0.0562, -0.2007,  ...,  0.9165,  0.5977,  0.7087],
          [ 0.1213,  0.2431, -0.3355,  ...,  0.8258,  0.3400,  0.5310],
          [-0.0082,  0.0720, -0.1820,  ...,  0.6176,  0.4663,  0.7262]],

         [[-0.0865, -0.4597, -0.1594,  ...,  0.6668,  0.0493,  0.6722],
          [-0.0829, -0.1485, -0.2435,  ...,  0.3909,  0.1546,  0.4601],
          [ 0.2222, -0.3365, -0.2906,  ...,  0.4835,  0.4272,  0.9526],
          [ 0.0614,  0.1973, -0.2892,  ...,  0.6483,  0.1133,  1.0746]]],


        [[[ 0.5760, -0.1668,  0.9266,  ...,  0.7493,  0.7500,  0.6778],
          [-0.4449, -0.0413,  0.0786,  ...,  0.3359,  0.1334,  0.8982],
          [ 0.3949, -0.3687,  0.5253,  ...,  0.5103,  1.1001,  1.5451],
          [-0.3410, -0.3593,  0.3856,  ...,  0.6666,  1.5560,  0.6425]],

         [[ 0.4987, -0.1295, -0.0333,  ...,  0.6412,  0.7646,  0.8197],
          [ 0.5095, -0.5968,  0.6742,  ...,  0.2904,  0.7512,  0.8745],
          [-0.1992, -0.1192, -0.1540,  ...,  0.1314,  1.1421,  1.2187],
          [-0.5940, -0.0108,  0.0115,  ...,  0.0829,  0.3717,  0.6171]]]])

2025-06-08 11:43:23.221032 GPU 5 64405 test begin: paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 4, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), None, Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=True, )
outputs format not support
[accuracy error] paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 4, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), None, Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=True, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 492 / 512 (96.1%)
Greatest absolute difference: 1.638353943824768 at index (2, 0, 1, 3) (up to 0.01 allowed)
Greatest relative difference: 343.2958068847656 at index (0, 1, 1, 1) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([8, 2, 4, 8]), dtype=torch.float32)
tensor([[[[-2.1894e-01,  8.1460e-01, -1.1622e-01,  ...,  4.8292e-01,
            5.5234e-01,  1.4422e-01],
          [-1.4347e-01,  6.9657e-01, -9.0892e-02,  ...,  6.9882e-01,
            6.0149e-01,  1.5373e-01],
          [-7.7681e-02,  1.9741e-01,  2.0899e-01,  ...,  1.0432e-01,
            4.5554e-01,  1.1193e-01],
          [-1.1073e-01,  3.4944e-01,  6.8137e-02,  ...,  2.3827e-01,
           -3.7626e-02,  9.3594e-02]],

         [[-2.4934e-01,  4.5966e-01,  1.2558e-01,  ...,  7.2905e-01,
           -2.4517e-01,  8.0251e-02],
          [-2.3377e-01,  6.4281e-01, -1.8773e-01,  ...,  5.2198e-01,
            1.8246e-01,  1.6144e-01],
          [-7.0687e-02,  9.1603e-01,  1.8541e-01,  ...,  6.4525e-01,
            2.3553e-01,  1.0161e-01],
          [-1.4111e-01,  7.6807e-01, -3.1273e-01,  ...,  2.7921e-01,
           -3.7554e-02,  9.2680e-02]]],


        [[[-5.7791e-01,  6.4080e-01,  6.8459e-01,  ...,  2.5295e-01,
            4.3286e-05,  3.4931e-01],
          [ 1.7144e-02,  3.5771e-01,  1.8045e-01,  ...,  4.2005e-01,
           -3.5599e-02,  6.7939e-02],
          [-4.4413e-01,  6.4298e-01,  3.9929e-01,  ...,  4.4036e-01,
           -3.1308e-01,  3.1744e-01],
          [-4.3611e-01,  4.9927e-01,  3.9121e-01,  ...,  4.1728e-01,
            1.9074e-02,  1.4902e-01]],

         [[ 4.3827e-02,  1.9008e-01,  4.3426e-01,  ...,  3.1354e-01,
           -2.8736e-01,  4.5030e-01],
          [-2.1854e-01,  5.2859e-01,  3.7112e-02,  ...,  3.8871e-01,
           -4.0574e-01,  4.3430e-01],
          [-3.2497e-01,  2.6847e-01,  6.3812e-02,  ...,  3.6253e-01,
           -1.0374e-01,  3.4320e-01],
          [-7.3036e-03,  1.6580e-01,  1.1243e-02,  ...,  4.8191e-01,
           -1.7769e-01,  2.2528e-01]]],


        [[[-6.5992e-02,  7.7946e-01, -5.6295e-01,  ...,  1.5881e-01,
           -9.2815e-02,  1.5878e-01],
          [-3.3249e-03,  2.9000e-01, -4.4742e-01,  ...,  3.3177e-01,
            2.6638e-01,  1.3057e+00],
          [-5.8947e-03,  2.0559e-01, -2.2146e-01,  ...,  8.8283e-01,
            8.2865e-02,  1.5127e-01],
          [-7.7456e-02,  1.0406e+00, -3.0586e-01,  ...,  1.1395e+00,
            1.8807e-01,  1.0484e+00]],

         [[-7.6268e-02,  1.1688e+00, -1.6614e-01,  ...,  5.7251e-01,
            2.5288e-01,  7.9659e-01],
          [-1.1779e-02,  6.5159e-01, -6.0829e-02,  ...,  1.0562e+00,
            1.5771e-01,  1.1393e+00],
          [-1.6966e-02,  4.4215e-01, -2.7480e-02,  ...,  7.9735e-01,
            4.0645e-01,  1.1372e+00],
          [-7.0651e-02,  8.4872e-01, -3.4443e-01,  ...,  1.8189e-01,
            1.9411e-01,  1.0641e+00]]],


        ...,


        [[[ 3.1814e-01,  2.2882e-01, -8.9611e-02,  ...,  2.6027e-01,
           -1.6020e-01,  4.3829e-01],
          [ 1.7840e-01,  3.3700e-01, -1.7581e-01,  ...,  2.6422e-01,
           -2.5263e-01,  1.6722e-01],
          [-2.1110e-01,  1.1087e-01, -6.0063e-02,  ...,  3.2853e-01,
           -7.7535e-01,  8.8328e-01],
          [ 1.0452e-01,  2.8046e-01,  4.5473e-02,  ...,  2.4084e-01,
           -6.5825e-01,  5.0715e-01]],

         [[-1.5484e-01,  1.3505e-01, -4.0026e-01,  ...,  8.9581e-02,
           -4.4156e-01,  7.2132e-01],
          [ 1.9513e-01,  3.2643e-01, -5.9893e-02,  ...,  2.6433e-01,
           -1.8766e-01,  2.9742e-01],
          [-6.3908e-03,  6.1894e-02, -6.1042e-01,  ...,  9.6064e-02,
           -2.3606e-01,  7.0848e-01],
          [ 1.3804e-02,  3.5221e-01, -3.5672e-01,  ...,  1.3203e-01,
           -1.5156e-01,  5.0290e-01]]],


        [[[ 5.1555e-01,  4.3222e-01,  1.8576e-01,  ...,  4.3301e-01,
           -9.1515e-05,  8.8239e-02],
          [-2.8739e-02,  1.1427e-01,  3.7150e-01,  ...,  4.8612e-01,
            5.0747e-01,  1.0431e+00],
          [-1.9094e-01,  8.7824e-01,  2.6265e-01,  ...,  5.0091e-01,
           -4.9650e-02,  6.7850e-01],
          [-1.0630e-01,  2.6052e-01, -1.3109e-02,  ...,  3.2564e-01,
            2.0901e-01,  6.2321e-01]],

         [[ 4.0234e-01,  5.9663e-01,  9.7922e-02,  ...,  4.4236e-01,
            3.0745e-01,  8.4062e-01],
          [ 4.3322e-01,  2.0528e-01,  7.3403e-01,  ...,  2.7800e-01,
            6.0781e-01,  8.2642e-01],
          [ 1.4930e-01,  6.5359e-01,  1.4897e-01,  ...,  3.5834e-01,
           -9.1623e-02,  3.6066e-01],
          [-1.3569e-01,  5.2317e-01,  7.8784e-01,  ...,  2.6488e-01,
            3.6695e-01,  8.5963e-01]]],


        [[[-9.0461e-02,  2.0272e-01, -1.3400e-01,  ...,  1.3610e+00,
           -7.5172e-02,  5.1027e-01],
          [ 6.9042e-01,  1.0456e-01, -5.3414e-01,  ...,  8.7644e-01,
           -3.4364e-02,  5.2411e-01],
          [ 7.2330e-01,  7.0084e-02, -4.1068e-01,  ...,  1.3513e+00,
           -7.3063e-02,  5.3511e-01],
          [ 5.5463e-02,  7.5132e-02, -3.5339e-01,  ...,  8.1138e-01,
           -1.3589e-01,  3.0830e-01]],

         [[ 5.8543e-02,  3.4354e-01, -1.0317e-01,  ...,  7.6882e-01,
            7.0203e-02,  3.4512e-01],
          [ 5.9567e-01,  2.3483e-01, -2.0095e-01,  ...,  3.6538e-01,
           -1.1363e-01,  5.5225e-01],
          [ 3.8457e-01,  4.1773e-01, -7.1291e-01,  ...,  7.6881e-01,
           -1.8232e-01,  5.9113e-01],
          [ 7.9106e-02,  4.2921e-01, -7.3776e-01,  ...,  2.4231e-01,
            1.4332e-02,  3.2306e-01]]]])
DESIRED: (shape=torch.Size([8, 2, 4, 8]), dtype=torch.float32)
tensor([[[[-1.5012e-01,  4.9573e-01, -1.2509e-01,  ...,  4.7333e-01,
            1.2192e+00,  2.4841e-01],
          [-1.5235e-01, -5.1710e-02, -2.8723e-02,  ...,  8.6470e-01,
            1.4283e+00,  2.8718e-01],
          [-3.1062e-02,  1.1755e-01,  1.6443e-01,  ...,  1.6773e-01,
            1.2619e+00,  1.8245e-01],
          [ 3.3744e-02, -2.2091e-01, -1.8165e-02,  ...,  7.3753e-01,
            3.7498e-01,  1.1975e-01]],

         [[-3.7386e-01,  3.8367e-01,  3.3198e-01,  ...,  4.0282e-01,
            4.3704e-01,  1.7911e-01],
          [-9.6348e-02,  1.8670e-03, -3.5802e-01,  ...,  9.4676e-01,
            5.9595e-01,  2.1057e-01],
          [-1.6314e-01,  3.9036e-01, -1.6575e-01,  ...,  3.6841e-01,
            5.8717e-01,  6.3278e-02],
          [-2.0544e-02,  3.9806e-01,  2.6986e-01,  ...,  3.9358e-01,
            6.8228e-01,  3.2231e-01]]],


        [[[-4.5353e-02,  2.5095e-01,  6.6026e-01,  ...,  6.7472e-01,
            7.3735e-01,  3.5220e-01],
          [-3.6450e-01, -2.7998e-02,  2.0103e-01,  ...,  4.7570e-01,
            7.9122e-02,  1.2097e-01],
          [-3.5056e-01,  2.0993e-01,  4.2531e-01,  ...,  6.6712e-01,
            3.7330e-02,  3.3748e-01],
          [-4.6884e-01,  1.8868e-01,  4.0088e-01,  ...,  5.2949e-01,
            3.6207e-01,  2.0766e-01]],

         [[-3.0841e-01, -9.2519e-02,  4.1354e-01,  ...,  3.8121e-01,
            3.4677e-01,  3.8467e-01],
          [-3.0958e-01,  1.8645e-01,  7.6953e-02,  ...,  4.2215e-01,
            5.3867e-02,  4.8013e-01],
          [-6.2950e-01,  2.0196e-01,  4.4483e-02,  ...,  1.4928e-01,
            4.6947e-01,  3.2285e-01],
          [-6.9638e-01, -8.7191e-02,  2.1399e-02,  ...,  3.7601e-01,
            9.1127e-02,  2.3330e-01]]],


        [[[-3.7524e-03,  5.4494e-01,  3.6449e-02,  ...,  6.6815e-01,
            2.9725e-01,  8.5827e-01],
          [-1.3094e-02, -1.2546e-01, -6.2867e-01,  ...,  4.6766e-01,
            7.7169e-01,  9.5526e-01],
          [-6.7043e-02, -1.5669e-01, -8.3455e-02,  ...,  5.2603e-01,
            2.0860e-01,  3.2215e-01],
          [-8.3497e-02,  5.0008e-01, -4.9643e-01,  ...,  1.1204e+00,
            5.7766e-01,  7.0425e-01]],

         [[-4.5873e-02,  8.6978e-01, -4.5463e-01,  ...,  4.7498e-01,
            3.8238e-01,  3.8436e-01],
          [-7.8856e-02,  6.6438e-02, -5.1791e-01,  ...,  4.7482e-01,
            5.8850e-01,  4.4187e-01],
          [-4.3508e-02, -2.2570e-01, -6.5167e-01,  ...,  1.0022e+00,
            6.8734e-01,  2.9583e-01],
          [ 5.4759e-04,  4.9489e-01, -5.3642e-01,  ...,  8.9057e-01,
            4.1473e-01,  7.1746e-01]]],


        ...,


        [[[ 3.5150e-01, -2.6460e-01, -2.7817e-01,  ...,  1.8736e-01,
            8.2076e-01,  3.6539e-01],
          [ 1.2586e-01, -1.7615e-01, -3.1599e-02,  ...,  3.3840e-01,
            1.3278e-01,  3.1432e-01],
          [-1.1065e-01, -2.5529e-01, -5.6432e-01,  ...,  3.7553e-01,
            4.8130e-01,  5.7985e-01],
          [ 2.3102e-01, -1.6521e-01, -1.5020e-01,  ...,  3.1762e-01,
            4.5301e-01,  3.9596e-01]],

         [[-9.6030e-04,  7.5699e-04, -4.5811e-01,  ...,  2.3393e-01,
            8.9453e-01,  8.1021e-01],
          [ 2.6172e-01, -1.9105e-01, -1.0625e-01,  ...,  3.2507e-01,
            6.9759e-01,  3.1332e-01],
          [-2.8626e-01, -6.2017e-02, -5.7649e-01,  ...,  1.0103e-01,
            8.5875e-01,  8.9688e-01],
          [ 2.6028e-01,  7.3891e-03, -4.2389e-01,  ...,  3.5733e-01,
            5.8952e-01,  5.5634e-01]]],


        [[[ 4.8423e-01,  1.4600e-01,  2.0739e-01,  ...,  4.5741e-01,
            5.3997e-02,  1.7783e-01],
          [-1.0035e-01,  3.1916e-03,  3.7463e-01,  ...,  4.9607e-01,
            6.9205e-01,  8.1644e-01],
          [-1.5952e-01,  7.4118e-01,  3.4395e-01,  ...,  5.5758e-01,
            1.8419e-01,  1.1515e+00],
          [-3.5605e-01,  2.2226e-01,  7.2539e-03,  ...,  2.1966e-01,
            3.0992e-01,  6.3803e-01]],

         [[ 5.3559e-01,  3.0897e-01,  9.6484e-02,  ...,  5.5463e-01,
            4.5046e-01,  7.4562e-01],
          [ 2.2325e-01,  2.0025e-02,  7.0916e-01,  ...,  1.9174e-01,
            7.6505e-01,  3.5918e-01],
          [ 3.5230e-02,  4.8645e-01,  2.6146e-01,  ...,  3.2544e-01,
            6.1782e-02,  8.9169e-01],
          [-5.0828e-02,  4.4818e-01,  7.6888e-01,  ...,  3.3106e-01,
            6.0396e-01,  6.5637e-01]]],


        [[[-1.6107e-01,  1.4210e-01, -5.0596e-01,  ...,  3.8959e-01,
            8.0488e-01,  3.0952e-01],
          [ 6.8719e-01, -1.3192e-02, -7.1915e-01,  ...,  3.4975e-01,
            1.0818e-01,  4.3490e-01],
          [ 4.8301e-01, -3.9886e-02, -6.1439e-01,  ...,  2.8992e-01,
            3.5043e-01,  4.2443e-01],
          [ 5.7967e-02,  1.7419e-02, -1.1927e-01,  ...,  3.1502e-01,
            3.6728e-01,  4.0033e-01]],

         [[ 4.2564e-02,  3.0870e-01, -6.0496e-01,  ...,  1.3221e-01,
            6.1064e-01,  1.1530e-01],
          [ 6.7391e-01,  1.5374e-01, -4.9164e-01,  ...,  1.5383e-01,
            7.5516e-01,  3.8382e-01],
          [ 5.8977e-01,  3.1442e-01, -4.2545e-01,  ...,  3.7288e-01,
            5.5946e-01,  7.0696e-01],
          [ 2.4501e-01,  3.9919e-01, -4.6848e-01,  ...,  7.8958e-02,
            4.4781e-01,  4.8081e-01]]]])

2025-06-08 11:43:23.226178 GPU 5 64401 test begin: paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 4, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), None, Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=True, )
outputs format not support
[accuracy error] paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 4, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), None, Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=True, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 499 / 512 (97.5%)
Greatest absolute difference: 1.6295222043991089 at index (5, 1, 1, 6) (up to 0.01 allowed)
Greatest relative difference: 179.53392028808594 at index (0, 0, 3, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([8, 2, 4, 8]), dtype=torch.float32)
tensor([[[[ 2.0437e-01,  4.8433e-02,  7.3933e-01,  ...,  6.4735e-01,
            6.1750e-01,  8.0237e-01],
          [ 1.0730e-01,  2.3884e-01,  4.8647e-01,  ...,  4.5620e-01,
            5.2533e-01,  1.0273e+00],
          [ 1.7195e-01,  3.9709e-02, -2.4378e-01,  ...,  9.7119e-01,
           -1.6622e-02,  9.2086e-01],
          [-4.4944e-01,  3.6287e-01,  1.4477e-01,  ...,  1.6142e-01,
            1.9801e-01,  7.8839e-01]],

         [[-2.2302e-01,  4.4465e-01, -1.5901e-01,  ...,  1.7023e-01,
            9.1292e-01,  6.1724e-01],
          [-5.4068e-02,  9.0955e-02,  7.2425e-01,  ...,  2.5816e-01,
            5.8244e-01,  7.6249e-01],
          [-1.5564e-01,  3.4234e-01,  9.1266e-02,  ...,  3.5992e-01,
            4.9260e-01,  3.4094e-01],
          [-8.8727e-02,  4.2968e-01, -1.4582e-01,  ...,  2.6250e-01,
            3.9884e-01,  1.1215e+00]]],


        [[[ 6.9784e-02,  3.7566e-01,  2.4463e-01,  ...,  3.1495e-01,
            2.7442e-01,  3.8599e-01],
          [ 4.4537e-01,  5.2944e-01,  3.8827e-01,  ...,  6.6709e-01,
            8.0403e-01,  6.7866e-01],
          [-1.8669e-02,  1.5838e-01, -4.0292e-01,  ...,  8.0035e-01,
            2.7290e-01,  2.3764e-01],
          [-5.9720e-02,  2.2538e-01,  1.6150e-01,  ...,  4.9990e-01,
           -2.6317e-02,  1.9211e-02]],

         [[ 5.0822e-01,  6.5521e-01,  7.4686e-01,  ...,  8.4383e-01,
            8.0126e-01,  8.1985e-01],
          [ 1.9491e-01,  2.3115e-01,  4.7175e-01,  ...,  8.5234e-01,
           -1.5243e-01,  1.0127e-01],
          [ 3.6262e-01,  5.2929e-01, -1.9544e-01,  ...,  2.7194e-01,
            8.3988e-01,  8.2879e-01],
          [ 3.3162e-01,  3.6867e-01, -4.1968e-02,  ...,  3.3055e-01,
            3.5930e-01,  5.1449e-01]]],


        [[[ 4.9114e-02,  7.0945e-01,  2.8044e-01,  ...,  2.1064e-01,
            3.2931e-01,  8.4383e-01],
          [ 7.9051e-02,  5.1536e-01, -1.6983e-01,  ...,  6.3020e-01,
           -3.4532e-01,  7.2088e-02],
          [ 8.1170e-02,  4.0335e-01,  1.3981e-01,  ...,  5.0088e-01,
           -2.7588e-01,  1.4529e-01],
          [ 3.2088e-03,  1.3588e-01,  3.0769e-01,  ...,  4.5095e-01,
            3.5780e-01,  4.4945e-01]],

         [[ 1.1612e-01,  1.0150e+00,  8.8924e-01,  ...,  1.1953e+00,
            6.7155e-02,  2.7417e-01],
          [ 1.1742e-01,  5.5819e-01, -5.0046e-01,  ...,  5.1316e-01,
           -3.4857e-01,  8.6784e-02],
          [ 5.9285e-02,  7.2434e-01,  4.7705e-01,  ...,  1.3521e+00,
           -4.9430e-02,  1.6932e-01],
          [ 1.3590e-01,  6.1379e-01,  2.6867e-02,  ...,  5.6176e-01,
           -4.0204e-02,  1.5875e-01]]],


        ...,


        [[[-1.2467e-02,  1.6031e-01,  3.4692e-01,  ...,  4.7194e-01,
            1.6341e-01,  1.3510e-01],
          [-5.4220e-01,  8.5418e-01,  6.2657e-01,  ...,  4.4259e-01,
            1.7664e-01,  2.8011e-02],
          [ 6.2482e-01,  9.8665e-01, -2.2475e-01,  ...,  8.9017e-01,
           -2.0233e-01,  4.1762e-01],
          [-1.0648e-01,  8.0916e-01,  8.7727e-01,  ...,  7.1275e-01,
            1.3280e-02,  6.1174e-02]],

         [[ 4.6869e-01,  1.3739e+00, -6.9230e-02,  ...,  4.0735e-01,
            9.7731e-02,  2.2049e-01],
          [ 2.9688e-01,  6.2167e-01,  2.8349e-01,  ...,  6.3902e-01,
           -8.5170e-02,  4.2641e-01],
          [ 4.8423e-04,  1.3373e+00,  4.4398e-01,  ...,  7.3069e-01,
           -5.1933e-01,  4.6675e-01],
          [ 5.5084e-02,  2.0093e-01,  3.5528e-01,  ...,  3.9396e-01,
           -3.1985e-01,  2.9903e-01]]],


        [[[-1.5983e-01,  9.1337e-02,  5.8243e-02,  ...,  2.6086e-01,
            1.3212e-01,  3.3590e-01],
          [-1.5338e-01,  1.1472e-01,  2.9091e-01,  ...,  4.5272e-01,
            4.4014e-01,  5.8844e-01],
          [-2.2902e-02,  1.8244e-01, -3.9620e-01,  ...,  4.4891e-01,
            7.0948e-02,  1.4753e-01],
          [ 1.9353e-01,  1.9418e-01,  1.9710e-01,  ...,  7.5200e-01,
            2.1523e-01,  5.3817e-01]],

         [[ 3.9383e-01,  2.4381e-01,  1.4096e-01,  ...,  8.6939e-01,
            2.4519e-01,  4.2515e-01],
          [-1.3132e-01,  6.0956e-02, -3.3767e-01,  ...,  1.3597e-01,
            4.8867e-01,  7.1663e-01],
          [ 1.7280e-01,  3.6514e-02, -3.1576e-01,  ...,  2.4811e-01,
           -6.1979e-02,  5.3449e-01],
          [ 5.5572e-01,  1.7887e-01,  9.6564e-02,  ...,  3.8007e-01,
           -5.1956e-02,  9.0681e-02]]],


        [[[ 2.0623e-01,  6.0840e-02, -4.8115e-02,  ...,  3.8478e-01,
            1.3980e-01,  8.1704e-01],
          [-1.9036e-02,  4.9303e-01, -1.8384e-01,  ...,  5.2175e-01,
           -4.4432e-01,  7.6552e-01],
          [ 2.2188e-01,  1.1694e-01,  1.9972e-01,  ...,  5.7978e-01,
            3.5685e-01,  3.3368e-01],
          [ 9.4602e-02,  7.2244e-02, -4.4042e-02,  ...,  1.2295e+00,
            3.0002e-01,  2.8606e-01]],

         [[ 1.5725e-01,  4.2477e-01,  8.4726e-01,  ...,  1.1283e+00,
           -5.7433e-02,  5.6725e-01],
          [-2.7665e-02,  2.4669e-01,  2.8001e-01,  ...,  4.5574e-01,
           -3.8725e-02,  5.8474e-02],
          [ 3.9994e-01,  6.3183e-02, -2.5123e-01,  ...,  3.0898e-01,
            1.9260e-01,  7.0605e-01],
          [ 5.6940e-01,  1.6141e-01,  5.2620e-01,  ...,  3.8097e-01,
            4.1814e-01,  4.4250e-01]]]])
DESIRED: (shape=torch.Size([8, 2, 4, 8]), dtype=torch.float32)
tensor([[[[ 2.4137e-01,  5.1771e-03,  5.0105e-01,  ...,  3.8768e-01,
            1.0375e+00,  1.1389e-01],
          [ 2.3425e-01,  1.9789e-01,  2.3078e-01,  ...,  2.2297e-01,
            7.9789e-01,  4.2063e-02],
          [-4.1196e-01,  1.4068e-03,  1.0287e-01,  ...,  3.5428e-01,
            1.0826e-01,  4.9000e-01],
          [-2.4895e-03,  3.5364e-01,  3.6267e-01,  ...,  9.7251e-02,
            4.8659e-01,  4.5034e-01]],

         [[ 3.0089e-01,  4.1532e-01, -1.9839e-01,  ...,  1.0261e-01,
            9.6040e-01,  5.5770e-01],
          [-4.7292e-02,  7.8604e-02,  4.7168e-01,  ...,  1.1763e-01,
            9.7854e-01,  7.0804e-02],
          [-2.6154e-01,  3.2245e-01,  2.1735e-01,  ...,  2.7644e-02,
            7.0222e-01,  4.9656e-01],
          [ 4.6122e-01,  3.8834e-01, -1.9115e-01,  ...,  1.7768e-01,
            4.2414e-01,  2.4442e-01]]],


        [[[ 2.7608e-01, -2.3705e-01,  3.7249e-01,  ...,  4.5220e-01,
            8.2536e-01,  7.5067e-01],
          [ 1.0154e-01, -3.9285e-01,  3.3483e-01,  ...,  1.1964e-01,
            1.4025e+00,  7.4951e-01],
          [ 4.4026e-02, -6.7329e-01, -3.2540e-02,  ...,  2.6863e-01,
            3.8282e-01,  8.3636e-01],
          [ 1.6079e-01, -4.2354e-01,  1.7251e-01,  ...,  4.2604e-01,
            1.2613e-01,  6.4438e-02]],

         [[ 4.9947e-01, -6.9533e-01,  2.6242e-01,  ...,  2.1444e-01,
            1.5046e+00,  3.7710e-01],
          [-1.6093e-01, -5.7926e-01,  8.7452e-01,  ...,  5.5908e-02,
            6.3340e-01,  8.5123e-01],
          [ 8.5737e-02, -2.2432e-02, -4.8255e-01,  ...,  2.3903e-01,
            1.0196e+00,  6.6260e-01],
          [ 4.9428e-02, -1.4012e-01,  1.4737e-01,  ...,  4.9771e-02,
            8.5508e-01,  1.0315e+00]]],


        [[[ 7.8301e-02,  3.7541e-01, -4.0477e-01,  ...,  4.2104e-01,
            1.1135e+00,  1.7637e-01],
          [ 6.8088e-02,  6.1847e-02,  5.5065e-01,  ...,  3.3220e-01,
            4.5814e-01,  7.0217e-01],
          [ 9.0361e-02, -1.6333e-01,  6.9599e-01,  ...,  4.0987e-01,
            7.1790e-01,  6.2671e-01],
          [-1.0170e-02,  8.1844e-03,  2.0638e-01,  ...,  1.8683e-01,
            1.0031e+00,  2.6987e-01]],

         [[ 1.2796e-01,  7.0845e-02,  6.6458e-01,  ...,  9.1534e-01,
            1.0093e+00,  6.3004e-02],
          [ 1.1737e-01, -5.6549e-02,  2.9034e-02,  ...,  3.4277e-01,
            4.7579e-02,  5.6469e-01],
          [ 4.5983e-02,  3.0225e-02,  6.0009e-01,  ...,  7.9703e-01,
            7.5087e-01,  2.6346e-01],
          [ 1.1768e-01,  4.1579e-02,  5.0657e-01,  ...,  2.2076e-01,
            6.5949e-01,  5.3522e-01]]],


        ...,


        [[[-5.0548e-01, -5.7813e-02, -1.2135e-01,  ...,  3.1127e-01,
            9.3053e-01,  2.0432e-01],
          [-4.6454e-01,  6.4283e-01,  6.6935e-01,  ...,  8.3996e-01,
            1.1461e+00,  1.3374e-01],
          [ 3.1278e-01, -2.9184e-01, -3.9779e-02,  ...,  1.1721e+00,
            9.5368e-01,  8.4888e-01],
          [-2.9461e-01,  1.5728e-01,  7.5631e-01,  ...,  1.0145e+00,
            8.3660e-01,  9.7039e-02]],

         [[ 5.7735e-01,  4.9858e-01,  4.6963e-02,  ...,  8.0475e-01,
            1.1817e+00,  5.2670e-01],
          [ 3.1642e-01, -3.6356e-01,  2.2631e-01,  ...,  1.0684e+00,
            1.5444e+00,  8.3929e-01],
          [ 3.2741e-01,  2.3662e-01,  5.1458e-01,  ...,  1.5420e+00,
            5.8049e-01,  8.0462e-01],
          [-2.7435e-01, -8.2515e-02,  7.2894e-01,  ...,  3.3715e-01,
            7.0747e-01,  6.1473e-01]]],


        [[[-1.2457e-01,  6.1077e-02,  6.6342e-02,  ...,  1.0404e-01,
            7.3057e-01,  5.0848e-01],
          [-1.8542e-01,  5.6412e-02, -1.8045e-01,  ...,  1.3473e-01,
            9.1313e-01,  8.3588e-02],
          [-4.2597e-02,  9.4439e-02,  4.7316e-02,  ...,  1.5451e-01,
            3.5000e-01,  6.0104e-01],
          [ 1.8778e-01, -2.2975e-03, -1.6038e-01,  ...,  1.9051e-01,
            7.9325e-01,  4.7135e-01]],

         [[ 4.0304e-01, -2.1197e-02, -1.3644e-01,  ...,  2.1544e-01,
            6.3229e-01,  2.4533e-01],
          [-7.4734e-03,  3.4102e-02, -4.1539e-01,  ...,  8.0948e-02,
            8.2237e-01,  6.3632e-01],
          [ 6.0013e-02, -2.8084e-02, -4.3318e-01,  ...,  2.3115e-02,
            3.2804e-01,  1.1671e+00],
          [ 4.5828e-01,  3.4403e-03,  3.3688e-01,  ...,  7.5434e-02,
            6.2688e-01,  5.0735e-01]]],


        [[[-3.8071e-01,  3.5985e-02, -6.4639e-01,  ...,  6.0930e-02,
            9.9979e-01,  2.2094e-01],
          [ 3.0361e-01,  4.2778e-01,  3.6065e-01,  ...,  3.1170e-01,
            5.2316e-01,  6.7343e-01],
          [ 2.8126e-01,  5.6695e-02, -3.2550e-01,  ...,  3.5480e-01,
            9.7690e-01,  8.4636e-02],
          [-5.0840e-01,  1.1634e-03, -4.8313e-01,  ...,  5.7499e-01,
            6.6227e-01,  7.7217e-02]],

         [[-9.8047e-02,  3.2852e-01,  6.2475e-01,  ...,  5.3900e-01,
            1.2334e+00,  1.9499e-01],
          [-1.7739e-01,  2.1207e-01,  2.9325e-01,  ...,  1.8725e-01,
            2.4237e-01,  2.5091e-02],
          [ 2.1767e-01,  1.7348e-02, -3.3279e-01,  ...,  1.3218e-01,
            1.1923e+00,  5.9436e-01],
          [ 3.8999e-01,  9.4130e-02, -3.3468e-02,  ...,  1.5965e-01,
            1.5001e+00,  1.8189e-01]]]])

2025-06-08 11:43:23.311078 GPU 5 64407 test begin: paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 4, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=True, )
[accuracy error] paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 4, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=False, time_major=True, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 245 / 512 (47.9%)
Greatest absolute difference: 1.1371756792068481 at index (3, 0, 3, 7) (up to 0.01 allowed)
Greatest relative difference: 14.72314167022705 at index (3, 1, 3, 7) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([8, 2, 4, 8]), dtype=torch.float32)
tensor([[[[-0.2890,  0.0097,  0.3446,  ...,  0.0617,  0.6644,  0.5296],
          [ 0.0230, -0.0724,  0.1773,  ...,  0.2446,  0.7164,  0.2757],
          [ 0.3566,  0.1362, -0.2767,  ...,  0.8050,  0.3147,  0.6555],
          [ 0.0276,  0.0358, -0.1484,  ...,  0.8915,  0.5469,  0.3158]],

         [[ 0.6251, -0.0416,  0.1331,  ...,  0.6343,  0.5540,  0.4421],
          [-0.1965,  0.1785, -0.1715,  ...,  1.1518,  0.3957,  0.7644],
          [-0.0915, -0.1747,  0.4072,  ...,  0.4186,  0.5068,  0.3833],
          [ 0.1417,  0.0516, -0.5223,  ...,  0.5904,  0.4965,  0.7203]]],


        [[[-0.2980,  0.2751, -0.0539,  ...,  0.8424,  0.6795,  0.2273],
          [-0.3977, -0.1957,  0.5038,  ...,  0.3483,  0.1719,  0.2858],
          [-0.1852,  0.1221,  0.4400,  ...,  0.6775,  0.3198,  0.5904],
          [-0.1063,  0.0611,  0.2512,  ...,  1.0255,  0.6329,  0.1084]],

         [[-0.3742,  0.1076,  0.0350,  ...,  0.6531,  0.2500,  0.2851],
          [-0.3241, -0.0180,  0.1093,  ...,  0.2713,  0.2843,  0.1022],
          [-0.2528, -0.0068, -0.0604,  ...,  0.1053,  0.7661,  0.3032],
          [-0.0509,  0.0244,  0.6020,  ...,  0.8537,  0.3480,  0.2377]]],


        [[[-0.3286, -0.1000,  0.0873,  ...,  0.1280,  0.9543,  0.4725],
          [-0.3726, -0.0470,  0.0369,  ...,  0.1134,  0.6268,  0.5347],
          [-0.0436,  0.1696,  0.1391,  ...,  0.5981,  0.6238,  0.2984],
          [-0.0137,  0.0385,  0.0102,  ...,  0.5341,  0.1212,  0.6653]],

         [[-0.0173, -0.1264,  0.0825,  ...,  0.2116,  0.6005,  0.5977],
          [ 0.0069,  0.1432,  0.1371,  ...,  0.5296,  1.0127,  0.3057],
          [ 0.2902,  0.2146,  0.0441,  ...,  0.6829,  0.2186,  0.3429],
          [-0.0248,  0.0705,  0.0042,  ...,  0.7117,  0.2699,  0.3191]]],


        ...,


        [[[-0.0209,  0.1038, -0.0218,  ...,  0.1802,  0.2945,  0.2803],
          [-0.3042, -0.0495, -0.0699,  ...,  0.2785,  0.4506,  0.6647],
          [-0.0091,  0.0654,  0.0715,  ...,  0.1929,  0.1970,  0.8194],
          [-0.4555,  0.0098,  0.0123,  ...,  0.1366,  0.2166,  0.1133]],

         [[-0.0211,  0.0758,  0.0580,  ...,  0.0703,  0.4160,  0.1705],
          [-0.6179,  0.1287, -0.0248,  ...,  0.2265,  0.4697,  0.7873],
          [-0.0113,  0.0817,  0.0859,  ...,  0.3208,  0.6638,  0.7611],
          [-0.1373,  0.1297,  0.1847,  ...,  0.1195,  0.3428,  0.5574]]],


        [[[-0.3052,  0.1064,  0.4060,  ...,  0.3463,  0.3099,  0.2645],
          [-0.0690,  0.2574, -0.0032,  ...,  0.3733,  0.0740,  0.0823],
          [-0.0513,  0.2030,  0.0606,  ...,  0.5757,  0.6753,  0.0474],
          [ 0.2544,  0.4973,  0.3759,  ...,  0.4832,  0.5000,  0.1164]],

         [[-0.0489,  0.2993,  0.3551,  ...,  0.2171,  0.6629,  0.3027],
          [ 0.1816,  0.2692, -0.0084,  ...,  0.3500,  0.7470,  0.3780],
          [-0.2119,  0.3162,  0.0214,  ...,  0.5288,  0.4590,  0.2351],
          [ 0.0945,  0.6436,  0.2968,  ...,  0.3807,  0.5607,  0.0677]]],


        [[[-0.5225,  0.4290, -0.6005,  ...,  1.0116,  0.7444,  0.5226],
          [ 0.4034,  0.0250, -0.2794,  ...,  0.3651,  0.2816,  0.1972],
          [ 0.2319,  0.0476,  0.0291,  ...,  0.9330,  0.9087,  0.1420],
          [ 0.4856,  0.0223, -0.5229,  ...,  0.3437,  0.5495,  0.5401]],

         [[-0.4554,  0.2880, -0.6534,  ...,  0.4560,  0.6829,  0.7851],
          [-0.1636,  0.2182, -0.5198,  ...,  0.7237,  0.8130,  0.6957],
          [ 0.2565,  0.1818, -0.2870,  ...,  0.2783,  0.6408,  0.6439],
          [-0.6932,  0.1718, -0.2064,  ...,  0.7708,  0.2226,  0.4079]]]])
DESIRED: (shape=torch.Size([8, 2, 4, 8]), dtype=torch.float32)
tensor([[[[-0.2890,  0.0097,  0.3446,  ...,  0.0455,  0.7613,  0.4140],
          [ 0.0230, -0.0724,  0.1773,  ...,  0.1963,  0.8243,  0.4373],
          [ 0.3566,  0.1362, -0.2767,  ...,  0.5917,  0.3682,  0.3968],
          [ 0.0276,  0.0358, -0.1484,  ...,  0.6721,  0.6341,  0.3795]],

         [[ 0.6251, -0.0416,  0.1331,  ...,  0.4879,  0.6375,  0.0972],
          [-0.1965,  0.1785, -0.1715,  ...,  0.8491,  0.4599,  0.5316],
          [-0.0915, -0.1747,  0.4072,  ...,  0.3433,  0.5783,  0.2239],
          [ 0.1417,  0.0516, -0.5223,  ...,  0.4410,  0.5822,  0.4483]]],


        [[[-0.2980,  0.2751, -0.0539,  ...,  0.2942,  1.3000,  0.3182],
          [-0.3977, -0.1957,  0.5038,  ...,  0.2742,  0.6395,  0.3934],
          [-0.1852,  0.1221,  0.4400,  ...,  0.2854,  0.8912,  0.8174],
          [-0.1063,  0.0611,  0.2512,  ...,  0.4931,  1.3917,  0.1523]],

         [[-0.3742,  0.1076,  0.0350,  ...,  0.2801,  0.5112,  0.3893],
          [-0.3241, -0.0180,  0.1093,  ...,  0.1473,  0.6231,  0.1345],
          [-0.2528, -0.0068, -0.0604,  ...,  0.0571,  1.4658,  0.4246],
          [-0.0509,  0.0244,  0.6020,  ...,  0.4235,  1.0436,  0.3356]]],


        [[[-0.3286, -0.1000,  0.0873,  ...,  0.1957,  0.1460,  0.7481],
          [-0.3726, -0.0470,  0.0369,  ...,  0.1231,  0.1044,  0.7296],
          [-0.0436,  0.1696,  0.1391,  ...,  0.1454,  0.0613,  0.4358],
          [-0.0137,  0.0385,  0.0102,  ...,  0.2663,  0.0189,  0.9915]],

         [[-0.0173, -0.1264,  0.0825,  ...,  0.2765,  0.0804,  0.8481],
          [ 0.0069,  0.1432,  0.1371,  ...,  0.1372,  0.1364,  0.3873],
          [ 0.2902,  0.2146,  0.0441,  ...,  0.1407,  0.0234,  0.5025],
          [-0.0248,  0.0705,  0.0042,  ...,  0.3316,  0.0498,  0.4698]]],


        ...,


        [[[-0.0209,  0.1038, -0.0218,  ...,  0.1266,  0.2228,  0.2946],
          [-0.3042, -0.0495, -0.0699,  ...,  0.1927,  0.3635,  0.7455],
          [-0.0091,  0.0654,  0.0715,  ...,  0.1349,  0.0960,  0.8039],
          [-0.4555,  0.0098,  0.0123,  ...,  0.0950,  0.1464,  0.1524]],

         [[-0.0211,  0.0758,  0.0580,  ...,  0.0499,  0.2600,  0.1993],
          [-0.6179,  0.1287, -0.0248,  ...,  0.1591,  0.3492,  0.8437],
          [-0.0113,  0.0817,  0.0859,  ...,  0.2239,  0.4189,  0.8935],
          [-0.1373,  0.1297,  0.1847,  ...,  0.0848,  0.1297,  0.6832]]],


        [[[-0.3052,  0.1064,  0.4060,  ...,  0.6261,  0.0629,  0.5117],
          [-0.0690,  0.2574, -0.0032,  ...,  0.6199,  0.0752,  0.2376],
          [-0.0513,  0.2030,  0.0606,  ...,  1.0307,  0.6323,  0.1516],
          [ 0.2544,  0.4973,  0.3759,  ...,  0.7391,  0.2694,  0.2225]],

         [[-0.0489,  0.2993,  0.3551,  ...,  0.3028,  0.4431,  0.5853],
          [ 0.1816,  0.2692, -0.0084,  ...,  0.5705,  0.7448,  0.7042],
          [-0.2119,  0.3162,  0.0214,  ...,  0.8968,  0.4417,  0.3974],
          [ 0.0945,  0.6436,  0.2968,  ...,  0.4852,  0.3769,  0.1240]]],


        [[[-0.5225,  0.4290, -0.6005,  ...,  0.9441,  0.3642,  0.5536],
          [ 0.4034,  0.0250, -0.2794,  ...,  0.3271,  0.1090,  0.0880],
          [ 0.2319,  0.0476,  0.0291,  ...,  0.8343,  0.8650,  0.1081],
          [ 0.4856,  0.0223, -0.5229,  ...,  0.3079,  0.2250,  0.7839]],

         [[-0.4554,  0.2880, -0.6534,  ...,  0.4355,  0.2777,  0.5715],
          [-0.1636,  0.2182, -0.5198,  ...,  0.6661,  0.4728,  0.7453],
          [ 0.2565,  0.1818, -0.2870,  ...,  0.2664,  0.4404,  0.2668],
          [-0.6932,  0.1718, -0.2064,  ...,  0.7031,  0.0941,  0.7603]]]])

2025-06-08 11:43:23.316650 GPU 5 64403 test begin: paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 4, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=True, )
[accuracy error] paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 4, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=None, use_neox_rotary_style=True, time_major=True, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 496 / 512 (96.9%)
Greatest absolute difference: 1.7524638175964355 at index (1, 0, 3, 3) (up to 0.01 allowed)
Greatest relative difference: 2697.136474609375 at index (7, 1, 3, 1) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([8, 2, 4, 8]), dtype=torch.float32)
tensor([[[[ 0.2194,  1.0917, -0.2861,  ...,  0.3549,  0.3302,  0.9824],
          [-0.0732,  0.3871, -0.6362,  ...,  0.3625,  0.1325,  0.4046],
          [-0.1960,  0.6109, -0.1079,  ...,  0.2660,  0.4462,  1.0878],
          [ 0.3144,  1.0586, -0.6111,  ...,  0.2227,  0.0839,  0.5898]],

         [[ 0.1772,  0.7956, -0.1482,  ...,  0.1971,  0.5722,  1.1131],
          [-0.2434,  0.7985,  0.2203,  ...,  0.2340,  0.7506,  0.9582],
          [ 0.2079,  1.0047, -0.0583,  ...,  0.2031,  0.0618,  0.1970],
          [-0.3755,  0.7795, -0.1000,  ...,  0.1497,  0.3346,  0.7550]]],


        [[[ 0.4040,  0.8247, -0.7953,  ...,  0.8545, -0.0273,  0.9328],
          [ 0.1989,  1.3865, -0.1125,  ...,  1.2338, -0.0253,  0.6502],
          [-0.1603,  0.8196,  0.0039,  ...,  0.8371,  0.2330,  0.5030],
          [-0.1907,  1.2583, -0.6557,  ...,  1.0809,  0.1191,  1.2312]],

         [[ 0.3141,  1.1184, -0.0630,  ...,  0.8439,  0.0268,  0.6378],
          [-0.1007,  0.4128, -0.8620,  ...,  1.1179,  0.0640,  0.5174],
          [-0.0300,  1.0464, -0.6984,  ...,  1.1394,  0.0597,  0.3126],
          [ 0.1346,  1.1423, -0.2071,  ...,  1.1263,  0.0664,  0.7674]]],


        [[[ 0.0797,  0.0976,  0.6721,  ...,  0.6900, -0.5850,  0.7184],
          [ 0.0875,  0.2943, -0.0078,  ...,  0.9821, -0.6290,  1.0741],
          [-0.2688,  0.2438,  0.4943,  ...,  0.5623, -0.4640,  0.3852],
          [-0.0060,  0.0040,  0.1389,  ...,  0.9069, -0.5757,  0.5192]],

         [[ 0.1136,  0.1691, -0.4636,  ...,  0.3451, -0.1661,  0.4726],
          [ 0.1967,  0.2303,  0.0770,  ...,  0.0545, -0.5870,  0.6477],
          [ 0.1310,  0.2595,  0.0453,  ...,  0.8926, -0.6321,  0.5049],
          [-0.0503,  0.2097,  0.0923,  ...,  0.5055, -0.1474,  0.4755]]],


        ...,


        [[[-0.2352,  0.8260,  0.5052,  ...,  0.3723,  0.2127,  0.2795],
          [-0.0612,  0.2908,  0.6917,  ...,  0.1895,  0.3452,  0.9054],
          [-0.1081,  0.5021,  0.4205,  ...,  0.1804,  0.0855,  0.6048],
          [-0.0124,  0.0531,  0.3244,  ...,  0.2546,  0.4299,  0.5995]],

         [[-0.0330,  0.2005,  0.4729,  ...,  0.1846,  0.4005,  0.4249],
          [-0.1891,  0.7825,  0.5073,  ...,  0.3360,  0.2860,  0.7520],
          [-0.1649,  0.6020,  0.8925,  ...,  0.0683,  0.0433,  0.2654],
          [-0.1636,  0.5176,  0.2611,  ...,  0.3300,  0.1584,  0.3857]]],


        [[[ 0.1498,  0.3641,  0.5763,  ...,  0.0685, -0.3282,  0.8975],
          [ 0.1489,  0.2713, -0.1580,  ...,  0.0483, -0.5365,  0.7054],
          [ 0.0410,  0.4211,  0.2287,  ...,  0.1965,  0.0416,  0.6451],
          [-0.1789,  0.6256, -0.1004,  ...,  0.7130, -0.0726,  0.5270]],

         [[ 0.3236,  0.2794,  0.2313,  ...,  0.3481, -0.1335,  0.6221],
          [ 0.4233,  0.1350, -0.4510,  ...,  0.4202, -0.1365,  0.5021],
          [ 0.0231,  0.1177, -0.5227,  ...,  0.6329, -0.4200,  0.8429],
          [-0.0281,  0.1311,  0.0944,  ...,  0.6297, -0.1911,  0.2117]]],


        [[[ 0.1146,  0.1117,  0.5219,  ...,  0.1943, -0.1238,  0.0287],
          [-0.2547,  0.1326, -0.6182,  ...,  0.7360,  0.0588,  0.0800],
          [-0.0825,  0.5582,  0.0110,  ...,  0.4786,  0.2016,  0.0737],
          [-0.5310,  0.2017,  0.1236,  ...,  0.7307, -0.3396,  0.0321]],

         [[-0.1091,  0.3767,  0.3067,  ...,  0.0636,  0.2133,  0.0978],
          [-0.2436,  0.1781,  0.0799,  ...,  0.4709,  0.0507,  0.0300],
          [-0.0496,  0.0670, -0.4717,  ...,  0.6450,  0.1870,  0.0817],
          [ 0.1738,  0.4892,  0.1324,  ...,  0.1190,  0.2389,  0.0682]]]])
DESIRED: (shape=torch.Size([8, 2, 4, 8]), dtype=torch.float32)
tensor([[[[ 4.6793e-01,  1.7796e-02, -1.2151e-01,  ...,  1.1232e+00,
            7.3875e-01,  5.6198e-01],
          [-1.2838e-01, -2.9093e-01, -1.4101e-01,  ...,  8.6304e-01,
            2.2752e-01,  3.3597e-01],
          [ 5.9652e-02,  4.0391e-02, -3.0793e-01,  ...,  8.7588e-01,
            7.8163e-01,  4.8521e-01],
          [ 6.9537e-01,  1.5021e-01, -1.2939e-01,  ...,  8.5116e-01,
            2.5456e-01,  4.9364e-01]],

         [[-3.2524e-02,  1.5103e-01, -5.1930e-01,  ...,  6.4930e-01,
            7.8315e-01,  3.9138e-01],
          [ 2.2358e-02,  2.4065e-01, -3.5674e-01,  ...,  9.2395e-01,
            1.0712e+00,  1.2980e-01],
          [ 1.1094e-01,  2.5363e-01,  4.1411e-01,  ...,  7.6373e-01,
            4.9130e-01,  2.2058e-01],
          [ 1.7290e-01,  3.9669e-01, -1.6221e-01,  ...,  8.4322e-01,
            6.1489e-01,  3.4106e-01]]],


        [[[ 4.2208e-01, -4.3025e-01, -3.2367e-01,  ...,  8.5338e-01,
            2.1597e-01,  1.3694e+00],
          [ 3.3919e-01, -2.8129e-02, -1.6775e-01,  ...,  1.3897e+00,
            3.8644e-01,  5.6070e-01],
          [-1.9944e-01,  5.1370e-01, -6.2555e-01,  ...,  6.4487e-01,
            1.4631e-01,  1.0336e-01],
          [ 1.4101e-01,  2.0779e-01, -5.8252e-01,  ...,  1.5833e+00,
            9.5150e-01,  1.4138e+00]],

         [[ 4.0825e-01, -9.0221e-02, -2.6509e-01,  ...,  9.5359e-01,
            3.5211e-01,  4.5421e-01],
          [-2.0287e-01, -1.5797e-01, -2.7474e-01,  ...,  8.4623e-01,
            3.7900e-01,  1.1700e+00],
          [ 1.0134e-01,  2.6631e-02, -1.0322e-01,  ...,  1.2818e+00,
            7.4645e-01,  9.7116e-01],
          [-3.2318e-02,  4.1133e-01, -4.1650e-01,  ...,  6.8173e-01,
            2.4691e-01,  6.1594e-01]]],


        [[[-2.0044e-01, -7.8085e-02,  6.2045e-01,  ...,  4.3926e-02,
            1.0123e+00,  3.5325e-01],
          [-1.1813e-01, -2.2456e-01, -3.8329e-01,  ...,  2.1471e-01,
            1.0701e+00,  3.6922e-01],
          [-1.1589e-01,  6.9515e-02,  5.9417e-01,  ...,  2.5738e-01,
            4.6915e-01,  2.2573e-01],
          [-3.3832e-01, -2.3020e-01,  6.7308e-01,  ...,  1.0948e-01,
            6.3036e-01,  7.8206e-01]],

         [[ 1.2032e-02, -4.1956e-02, -2.3142e-01,  ...,  4.7977e-02,
            6.0764e-01,  6.8040e-01],
          [ 2.0705e-01, -3.4506e-02,  2.0675e-01,  ...,  3.1128e-02,
            5.9264e-01,  4.7236e-01],
          [-1.3938e-01, -1.1210e-01,  4.1193e-01,  ...,  1.1982e-01,
            3.4293e-01,  5.4059e-01],
          [-6.9781e-02,  1.4275e-02,  3.8594e-02,  ...,  1.3869e-01,
            8.1594e-01,  3.7979e-01]]],


        ...,


        [[[-2.5541e-02,  5.7629e-01,  7.9398e-01,  ...,  9.7951e-01,
            8.4468e-01,  8.3936e-01],
          [-4.3902e-03,  1.3199e-01,  5.2147e-01,  ...,  4.5958e-01,
            1.1433e+00,  8.7105e-01],
          [-1.0124e-01,  3.0800e-01,  7.1332e-01,  ...,  4.8109e-01,
            7.2071e-01,  1.2209e+00],
          [-1.2663e-02, -8.6921e-02,  1.4077e-01,  ...,  5.5379e-01,
            9.7110e-01,  4.9158e-01]],

         [[-4.1469e-03,  4.5765e-02,  3.3650e-01,  ...,  4.2776e-01,
            9.6099e-01,  3.5257e-01],
          [-2.2958e-01,  4.9098e-01,  4.1292e-01,  ...,  8.7584e-01,
            9.3799e-01,  7.9973e-01],
          [-1.2529e-01,  5.1240e-01,  8.6889e-01,  ...,  2.7717e-01,
            6.0964e-01,  2.8936e-01],
          [-7.3124e-02,  3.4217e-01,  5.8730e-01,  ...,  8.2733e-01,
            6.9173e-01,  1.0208e+00]]],


        [[[ 2.0839e-01,  3.0930e-01,  3.4633e-01,  ...,  7.6192e-02,
            1.1225e+00,  4.9474e-01],
          [ 1.9364e-01,  2.2461e-01, -9.6452e-02,  ...,  5.4667e-02,
            2.3895e-01,  6.4092e-01],
          [-8.8725e-02,  3.7446e-01,  2.8245e-01,  ...,  1.3506e-01,
            1.1985e+00,  5.1467e-01],
          [-2.7557e-02,  5.2999e-01, -8.1645e-02,  ...,  8.3247e-01,
            6.0492e-01,  4.1182e-01]],

         [[ 1.1574e-01,  1.7926e-01, -5.9891e-02,  ...,  2.9154e-01,
            6.7823e-01,  2.1332e-01],
          [ 4.1527e-01,  8.4191e-03, -8.2346e-02,  ...,  4.7536e-01,
            4.8405e-01,  7.1367e-01],
          [-1.6939e-01,  4.0889e-02, -1.5136e-01,  ...,  6.3556e-01,
            5.5061e-01,  1.0024e+00],
          [-4.0612e-02,  5.4278e-02,  6.8144e-01,  ...,  7.0862e-01,
            5.6248e-01,  7.0274e-01]]],


        [[[-2.8955e-02, -1.8237e-01,  5.7833e-01,  ...,  5.8873e-02,
            8.4637e-01,  2.8212e-01],
          [-5.4514e-01, -1.8109e-01, -3.4812e-01,  ...,  2.9884e-01,
            4.1921e-01,  7.7459e-01],
          [ 1.2640e-01, -5.6312e-02, -1.4670e-01,  ...,  4.7238e-01,
            6.0408e-01,  2.6501e-01],
          [-5.1531e-01, -2.2766e-01,  2.1701e-01,  ...,  5.2964e-01,
            4.4967e-01,  4.0788e-01]],

         [[ 3.1484e-01, -2.2765e-01,  2.3884e-01,  ...,  4.0034e-01,
            1.2395e+00,  5.0862e-01],
          [-2.6679e-01, -1.5914e-01,  9.7544e-02,  ...,  3.1960e-01,
            4.0195e-01,  1.9871e-01],
          [-4.8468e-01, -3.7703e-01, -3.0226e-01,  ...,  1.7667e-01,
            5.1428e-01,  6.4591e-01],
          [ 4.1258e-01,  1.8131e-04,  1.0869e-01,  ...,  2.5125e-01,
            8.2602e-01,  3.5003e-01]]]])

2025-06-08 11:43:23.338557 GPU 5 64406 test begin: paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 4, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=True, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.incubate.nn.functional.fused_rotary_position_embedding(Tensor([8, 2, 4, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([8, 2, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), Tensor([1, 8, 1, 8],"float32"), position_ids=Tensor([2, 8],"int64"), use_neox_rotary_style=True, time_major=True, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 491 / 512 (95.9%)
Greatest absolute difference: 1.9492924213409424 at index (7, 0, 2, 4) (up to 0.01 allowed)
Greatest relative difference: 13825.6728515625 at index (3, 1, 3, 1) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([8, 2, 4, 8]), dtype=torch.float32)
tensor([[[[-0.0131,  0.6240, -0.1127,  ...,  0.4968,  0.1866,  0.3713],
          [-0.1231,  0.4989,  0.2176,  ...,  0.0891,  0.2546,  0.3603],
          [ 0.5841,  0.8032, -0.0103,  ...,  0.4617,  0.0118,  0.4245],
          [ 0.0560,  0.1070,  0.0802,  ...,  0.1313,  0.1045,  0.1463]],

         [[-0.3171,  0.3092,  0.1175,  ...,  0.2814, -0.2066,  0.9692],
          [ 0.1629,  0.5931,  0.1098,  ...,  0.4415, -0.0671,  0.4398],
          [ 0.0722,  0.7573, -0.0173,  ...,  0.2975, -0.1468,  0.7694],
          [-0.1466,  0.3342,  0.0394,  ...,  0.3192, -0.1728,  0.8450]]],


        [[[ 0.4463,  0.3902,  0.1385,  ...,  0.4134,  0.1073,  0.3048],
          [ 0.1832,  0.1434, -0.0199,  ...,  0.1644,  0.2907,  0.1065],
          [ 0.4246,  0.3309,  0.1050,  ...,  0.3132, -0.1776,  0.2888],
          [ 0.3771,  0.3105, -0.2358,  ...,  0.3726,  0.1442,  0.3232]],

         [[ 0.9166,  0.7109,  0.1204,  ...,  0.1863,  0.1778,  0.1038],
          [ 0.0263,  0.0973, -0.0142,  ...,  0.3284,  0.5706,  0.2193],
          [ 0.2053,  0.2177, -0.3434,  ...,  0.2687,  0.6993,  0.2164],
          [ 0.2353,  0.2358, -0.4670,  ...,  0.3454,  0.2448,  0.2269]]],


        [[[ 0.1440,  0.1935,  0.1499,  ...,  0.2602,  0.6880,  0.8311],
          [ 0.7981,  0.7278,  0.4431,  ...,  0.1674,  0.2876,  0.4398],
          [ 0.8259,  0.6410,  0.2347,  ...,  0.3113,  0.5501,  0.6706],
          [ 0.4668,  0.5444,  0.4377,  ...,  0.3703,  0.6525,  0.7271]],

         [[ 0.0601,  0.1674,  0.3604,  ...,  0.2377,  0.3707,  0.5279],
          [ 0.2739,  0.4132,  0.2193,  ...,  0.2535,  0.1834,  0.4477],
          [-0.1142,  0.1328, -0.0072,  ...,  0.1234,  0.0178,  0.0789],
          [ 0.7834,  0.6300, -0.1171,  ...,  0.3170,  0.2550,  0.3660]]],


        ...,


        [[[ 0.4214,  1.1708, -0.1935,  ...,  0.4045, -0.0174,  0.0205],
          [ 0.0512,  0.2617, -0.0889,  ...,  0.2573,  0.5256,  0.6057],
          [ 0.1301,  0.4331, -0.3122,  ...,  0.7805, -0.1158,  0.1024],
          [ 0.2871,  0.9715, -0.4658,  ...,  0.7605, -0.2843,  0.3453]],

         [[ 0.3302,  0.6409, -0.2314,  ...,  0.1950,  0.1962,  0.1056],
          [ 0.6683,  1.0744, -0.4292,  ...,  0.6768,  0.6474,  0.4083],
          [ 0.6845,  0.7922, -0.2407,  ...,  0.7114,  0.1765,  0.1109],
          [ 0.1557,  0.7943, -0.0693,  ...,  0.8607, -0.0323,  0.4146]]],


        [[[-0.5500,  0.3422, -0.4021,  ...,  0.6849,  0.0725,  0.3152],
          [-0.3244,  0.4401, -0.6262,  ...,  0.7803,  0.1251,  0.5056],
          [ 0.0679,  0.3244, -0.5212,  ...,  0.5155,  0.3359,  0.5844],
          [ 0.0751,  0.3758, -0.7534,  ...,  0.8745,  0.1765,  0.5359]],

         [[-0.2219,  0.2053, -0.0708,  ...,  1.1532,  0.2599,  0.7506],
          [-0.3528,  0.3891, -0.5690,  ...,  0.5902,  0.2847,  0.8144],
          [-0.5858,  0.6247,  0.1142,  ...,  0.7105,  0.1875,  0.4462],
          [-0.1837,  0.2598, -0.3171,  ...,  0.9642,  0.0980,  0.3856]]],


        [[[ 0.2139,  0.4723,  0.3201,  ...,  0.3213,  0.8640,  0.4572],
          [ 0.0687,  0.7832,  0.4321,  ...,  0.1366,  0.4196,  0.5659],
          [-0.0657,  0.8223,  0.5112,  ...,  0.7433,  0.0798,  0.3231],
          [-0.1389,  0.6961,  0.1647,  ...,  0.4960,  0.0114,  0.6879]],

         [[-0.2735,  0.2093, -0.2576,  ...,  0.3383,  0.4017,  0.7248],
          [-0.0763,  0.4095,  0.0855,  ...,  0.3572,  0.3999,  0.3271],
          [-0.2426,  0.3414,  0.2960,  ...,  0.0598, -0.0078,  0.8233],
          [-0.5840,  0.5379,  0.5690,  ...,  0.0785, -0.0760,  0.4470]]]])
DESIRED: (shape=torch.Size([8, 2, 4, 8]), dtype=torch.float32)
tensor([[[[ 0.0108, -0.2378, -0.0962,  ...,  0.8112,  0.2172,  0.3331],
          [ 0.2234, -0.1257,  0.0737,  ...,  0.7521,  0.3993,  0.1192],
          [ 0.3641, -0.2758, -0.0352,  ...,  0.3476,  0.1293,  0.2045],
          [ 0.0416, -0.5945,  0.0721,  ...,  0.2865,  0.1947,  0.1258]],

         [[-0.1116, -0.2860,  0.1412,  ...,  0.8210,  0.2582,  0.4627],
          [ 0.1152, -0.4116,  0.1730,  ...,  0.6428,  0.2216,  0.3043],
          [ 0.2580,  0.1110, -0.0394,  ...,  0.7300,  0.1066,  0.3142],
          [-0.0466, -0.5003,  0.0620,  ...,  0.7376,  0.1858,  0.4102]]],


        [[[ 0.4580, -0.5682, -0.0614,  ...,  0.3885,  0.4873,  0.8119],
          [ 0.1686, -0.0490,  0.0880,  ...,  0.0428,  0.6113,  0.2569],
          [ 0.4289, -0.6715,  0.2255,  ...,  0.1455,  0.5862,  0.9503],
          [ 0.3560, -0.1753, -0.1342,  ...,  0.1855,  0.4455,  0.9452]],

         [[ 0.9269, -0.3452,  0.0143,  ...,  0.1852,  0.3730,  0.2205],
          [ 0.0412, -0.1929, -0.2701,  ...,  0.4748,  0.5469,  0.3946],
          [ 0.2311, -0.4008, -0.3553,  ...,  0.4172,  0.5537,  0.4182],
          [ 0.2514, -0.4513, -0.2181,  ...,  0.3968,  0.2820,  0.6713]]],


        [[[ 0.1663, -0.3535,  0.1338,  ...,  0.3382,  0.6164,  0.4562],
          [ 0.8407, -0.1517,  0.4192,  ...,  0.5024,  0.4332,  0.1931],
          [ 0.7464, -0.4224,  0.2294,  ...,  0.2568,  0.5376,  0.3898],
          [ 0.4977, -0.4332,  0.3117,  ...,  0.7066,  0.6116,  0.0822]],

         [[ 0.0026, -0.2572,  0.4203,  ...,  0.4120,  0.4955,  0.4865],
          [ 0.2922, -0.2353,  0.2087,  ...,  0.6780,  0.3528,  0.2295],
          [-0.0496, -0.0495,  0.0415,  ...,  0.6194,  0.0618,  0.1840],
          [ 0.8066, -0.4578, -0.0710,  ...,  0.3188,  0.2212,  0.3502]]],


        ...,


        [[[ 0.6378, -0.2304,  0.0151,  ...,  1.0318,  0.0905,  0.1176],
          [ 0.0237,  0.0251, -0.5629,  ...,  0.2359,  0.7355,  0.6125],
          [-0.1306, -0.1368,  0.0288,  ...,  0.4387,  0.1458,  0.2996],
          [ 0.2430,  0.1102, -0.0503,  ...,  0.7592,  0.0806,  0.6947]],

         [[ 0.4336, -0.5479, -0.0824,  ...,  0.6876,  0.4973,  0.1919],
          [ 0.5608, -0.5117, -0.5337,  ...,  0.8010,  0.5773,  0.4714],
          [ 0.3906, -0.5115, -0.1153,  ...,  0.4524,  0.3014,  0.1918],
          [ 0.0404, -0.1736, -0.2316,  ...,  0.8537,  0.1411,  0.5274]]],


        [[[-0.6418,  0.2681,  0.0907,  ...,  0.3588,  0.6298,  0.9274],
          [-0.4825,  0.1302, -0.2452,  ...,  0.3703,  0.4452,  1.0569],
          [-0.3669,  0.0248, -0.8364,  ...,  0.0842,  0.6281,  0.6669],
          [-0.0592, -0.2380, -0.4582,  ...,  0.4064,  0.3867,  1.0631]],

         [[-0.4534, -0.1878, -0.5764,  ...,  0.5197,  0.7085,  0.5125],
          [-0.0853,  0.0508, -0.6013,  ...,  0.4591,  0.8198,  1.1179],
          [ 0.0498,  0.1241, -0.3829,  ...,  0.7055,  0.5269,  0.1375],
          [-0.5945, -0.0360, -0.1222,  ...,  0.3411,  0.4542,  0.7062]]],


        [[[-0.0631,  0.2363,  0.2084,  ...,  0.3529,  1.1388,  0.1899],
          [ 0.3285,  0.5441,  0.4601,  ...,  0.2807,  0.9591,  0.4336],
          [ 0.1859,  0.4422,  0.8122,  ...,  0.8098,  0.6638,  0.4423],
          [ 0.1126,  0.4244,  0.2226,  ...,  0.5778,  0.5966,  0.6175]],

         [[-0.8755,  0.1275, -0.2877,  ...,  0.3307,  0.7166,  0.5366],
          [-0.0909,  0.2328,  0.2480,  ...,  0.3914,  0.6776,  0.3141],
          [ 0.0691,  0.2877,  0.3547,  ...,  0.1413,  0.7363,  0.7359],
          [-0.8026,  0.5007,  0.6437,  ...,  0.2037,  0.5447,  0.4361]]]])

2025-06-08 11:43:23.490190 GPU 5 64402 test begin: paddle.incubate.nn.functional.variable_length_memory_efficient_attention(Tensor([1, 8, 64, 16],"float32"), Tensor([1, 2, 64, 16],"float32"), Tensor([1, 2, 64, 16],"float32"), Tensor([1],"int32"), Tensor([1],"int32"), Tensor([1, 1, 64, 64],"float32"), 0.25, )
[accuracy error] paddle.incubate.nn.functional.variable_length_memory_efficient_attention(Tensor([1, 8, 64, 16],"float32"), Tensor([1, 2, 64, 16],"float32"), Tensor([1, 2, 64, 16],"float32"), Tensor([1],"int32"), Tensor([1],"int32"), Tensor([1, 1, 64, 64],"float32"), 0.25, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 7424 / 8192 (90.6%)
Greatest absolute difference: nan at index (0, 0, 0, 0) (up to 0.01 allowed)
Greatest relative difference: nan at index (0, 0, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 8, 64, 16]), dtype=torch.float32)
tensor([[[[nan, nan, nan,  ..., nan, nan, nan],
          [nan, nan, nan,  ..., nan, nan, nan],
          [nan, nan, nan,  ..., nan, nan, nan],
          ...,
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.]],

         [[nan, nan, nan,  ..., nan, nan, nan],
          [nan, nan, nan,  ..., nan, nan, nan],
          [nan, nan, nan,  ..., nan, nan, nan],
          ...,
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.]],

         [[nan, nan, nan,  ..., nan, nan, nan],
          [nan, nan, nan,  ..., nan, nan, nan],
          [nan, nan, nan,  ..., nan, nan, nan],
          ...,
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.]],

         ...,

         [[nan, nan, nan,  ..., nan, nan, nan],
          [nan, nan, nan,  ..., nan, nan, nan],
          [nan, nan, nan,  ..., nan, nan, nan],
          ...,
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.]],

         [[nan, nan, nan,  ..., nan, nan, nan],
          [nan, nan, nan,  ..., nan, nan, nan],
          [nan, nan, nan,  ..., nan, nan, nan],
          ...,
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.]],

         [[nan, nan, nan,  ..., nan, nan, nan],
          [nan, nan, nan,  ..., nan, nan, nan],
          [nan, nan, nan,  ..., nan, nan, nan],
          ...,
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.],
          [0., 0., 0.,  ..., 0., 0., 0.]]]])
DESIRED: (shape=torch.Size([1, 8, 64, 16]), dtype=torch.float32)
tensor([[[[-0.1613, -0.2990,  0.1758,  ..., -0.0945, -0.0008,  0.0655],
          [-0.2179, -0.0316, -0.1953,  ...,  0.2152,  0.3673, -0.0520],
          [ 0.1738, -0.3130, -0.0230,  ..., -0.2470, -0.1191,  0.2981],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[ 0.1385,  0.0750,  0.0846,  ..., -0.4306, -0.1824,  0.2346],
          [ 0.0019, -0.4192,  0.3446,  ..., -0.1816,  0.2028,  0.1496],
          [-0.2446,  0.0899, -0.4502,  ...,  0.2828, -0.0372, -0.3677],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[-0.1613, -0.2990,  0.1758,  ..., -0.0945, -0.0008,  0.0655],
          [-0.2179, -0.0316, -0.1953,  ...,  0.2152,  0.3673, -0.0520],
          [ 0.1738, -0.3130, -0.0230,  ..., -0.2470, -0.1191,  0.2981],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         ...,

         [[ 0.1385,  0.0750,  0.0846,  ..., -0.4306, -0.1824,  0.2346],
          [ 0.0019, -0.4192,  0.3446,  ..., -0.1816,  0.2028,  0.1496],
          [-0.2446,  0.0899, -0.4502,  ...,  0.2828, -0.0372, -0.3677],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[-0.1613, -0.2990,  0.1758,  ..., -0.0945, -0.0008,  0.0655],
          [-0.2179, -0.0316, -0.1953,  ...,  0.2152,  0.3673, -0.0520],
          [ 0.1738, -0.3130, -0.0230,  ..., -0.2470, -0.1191,  0.2981],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[ 0.1385,  0.0750,  0.0846,  ..., -0.4306, -0.1824,  0.2346],
          [ 0.0019, -0.4192,  0.3446,  ..., -0.1816,  0.2028,  0.1496],
          [-0.2446,  0.0899, -0.4502,  ...,  0.2828, -0.0372, -0.3677],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]]]])

2025-06-08 11:43:25.249710 GPU 5 64402 test begin: paddle.incubate.nn.functional.variable_length_memory_efficient_attention(Tensor([2, 1, 57, 64],"float16"), Tensor([2, 1, 57, 64],"float16"), Tensor([2, 1, 57, 64],"float16"), Tensor([2, 1],"int32"), Tensor([2, 1],"int32"), mask=Tensor([2, 1, 4096, 4096],"float16"), scale=0.125, )
[accuracy error] paddle.incubate.nn.functional.variable_length_memory_efficient_attention(Tensor([2, 1, 57, 64],"float16"), Tensor([2, 1, 57, 64],"float16"), Tensor([2, 1, 57, 64],"float16"), Tensor([2, 1],"int32"), Tensor([2, 1],"int32"), mask=Tensor([2, 1, 4096, 4096],"float16"), scale=0.125, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 3705 / 7296 (50.8%)
Greatest absolute difference: nan at index (0, 0, 46, 1) (up to 0.01 allowed)
Greatest relative difference: nan at index (0, 0, 46, 1) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2, 1, 57, 64]), dtype=torch.float16)
tensor([[[[-2.4377e-01,  2.4878e-01, -4.8999e-01,  ...,  1.5137e-01,
           -2.4536e-01, -4.2017e-01],
          [ 4.0381e-01, -1.6321e-01, -1.0065e-01,  ...,  4.5068e-01,
           -1.9531e-01, -4.1821e-01],
          [-9.0210e-02, -2.2009e-01, -1.1426e-01,  ...,  3.6377e-01,
            5.3253e-02,  4.3140e-01],
          ...,
          [ 5.8789e-01,         nan, -1.7567e-03,  ...,         nan,
           -1.0586e-04,         nan],
          [-3.3200e+03,         nan,  4.0725e+02,  ...,         nan,
           -5.4469e+01,         nan],
          [-7.2403e-03,         nan, -1.3150e+03,  ...,         nan,
            1.1528e-02,         nan]]],


        [[[ 7.3975e-02, -1.8298e-01,  1.0577e-01,  ...,  4.7876e-01,
           -4.1382e-01, -4.4922e-01],
          [ 3.3750e+02,         nan, -4.8904e-03,  ...,         nan,
            6.9188e+01,         nan],
          [-5.5450e+02,         nan,  4.0430e-01,  ...,         nan,
            1.3879e-01,         nan],
          ...,
          [ 1.0150e+03,         nan,  4.9875e+02,  ...,         nan,
            5.0724e-05,         nan],
          [-5.9875e-02,         nan, -2.0027e-05,  ...,         nan,
                   nan,         nan],
          [-7.3320e+00,         nan,  5.3062e-03,  ...,         nan,
            7.4756e-01,         nan]]]], dtype=torch.float16)
DESIRED: (shape=torch.Size([2, 1, 57, 64]), dtype=torch.float16)
tensor([[[[-0.2438,  0.2488, -0.4900,  ...,  0.1514, -0.2454, -0.4202],
          [ 0.4038, -0.1632, -0.1006,  ...,  0.4507, -0.1953, -0.4182],
          [-0.0902, -0.2201, -0.1143,  ...,  0.3638,  0.0533,  0.4314],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]]],


        [[[ 0.0740, -0.1830,  0.1058,  ...,  0.4788, -0.4138, -0.4492],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]]]],
       dtype=torch.float16)

2025-06-08 11:43:26.078102 GPU 5 64406 test begin: paddle.incubate.nn.functional.variable_length_memory_efficient_attention(Tensor([2, 4, 38, 128],"float16"), Tensor([2, 2, 38, 128],"float16"), Tensor([2, 2, 38, 128],"float16"), Tensor([2, 1],"int32"), Tensor([2, 1],"int32"), mask=Tensor([2, 1, 32768, 32768],"float16"), scale=0.08838834764831845, )
[accuracy error] paddle.incubate.nn.functional.variable_length_memory_efficient_attention(Tensor([2, 4, 38, 128],"float16"), Tensor([2, 2, 38, 128],"float16"), Tensor([2, 2, 38, 128],"float16"), Tensor([2, 1],"int32"), Tensor([2, 1],"int32"), mask=Tensor([2, 1, 32768, 32768],"float16"), scale=0.08838834764831845, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 8503 / 38912 (21.9%)
Greatest absolute difference: 0.9794921875 at index (1, 1, 3, 20) (up to 0.01 allowed)
Greatest relative difference: 5296.0 at index (0, 1, 18, 109) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2, 4, 38, 128]), dtype=torch.float16)
tensor([[[[-0.1204, -0.1738,  0.4700,  ...,  0.1423, -0.3823,  0.1146],
          [-0.3674, -0.0047, -0.3342,  ...,  0.4951,  0.1205,  0.1843],
          [-0.2112, -0.0326, -0.1855,  ...,  0.3643, -0.2849, -0.2408],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[-0.1204, -0.1738,  0.4700,  ...,  0.1423, -0.3823,  0.1146],
          [-0.3674, -0.0047, -0.3342,  ...,  0.4951,  0.1205,  0.1843],
          [-0.2112, -0.0326, -0.1855,  ...,  0.3643, -0.2849, -0.2408],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[-0.3401, -0.2307, -0.4104,  ..., -0.4863,  0.2932,  0.1692],
          [-0.4338,  0.4832,  0.0770,  ...,  0.4634, -0.3816, -0.2363],
          [ 0.1796, -0.4216,  0.4268,  ..., -0.3669,  0.1334, -0.0214],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[-0.3401, -0.2307, -0.4104,  ..., -0.4863,  0.2932,  0.1692],
          [-0.4338,  0.4832,  0.0770,  ...,  0.4634, -0.3816, -0.2363],
          [ 0.1796, -0.4216,  0.4268,  ..., -0.3669,  0.1334, -0.0214],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]]],


        [[[-0.4658, -0.0782, -0.1940,  ...,  0.1300,  0.4631,  0.2123],
          [ 0.1166, -0.3572, -0.0467,  ...,  0.2305, -0.3591, -0.0769],
          [ 0.1442,  0.2659,  0.2397,  ...,  0.4700, -0.0401,  0.0800],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[-0.4658, -0.0782, -0.1940,  ...,  0.1300,  0.4631,  0.2123],
          [ 0.1166, -0.3572, -0.0467,  ...,  0.2305, -0.3591, -0.0769],
          [ 0.1442,  0.2659,  0.2397,  ...,  0.4700, -0.0401,  0.0800],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[-0.3313,  0.0009,  0.2510,  ..., -0.4910,  0.3369,  0.4080],
          [ 0.0904,  0.1603,  0.1218,  ..., -0.2583, -0.2661, -0.0213],
          [ 0.3748, -0.1836,  0.1418,  ...,  0.4866,  0.3960, -0.1300],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[-0.3313,  0.0009,  0.2510,  ..., -0.4910,  0.3369,  0.4080],
          [ 0.0904,  0.1603,  0.1218,  ..., -0.2583, -0.2661, -0.0213],
          [ 0.3748, -0.1836,  0.1418,  ...,  0.4866,  0.3960, -0.1300],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]]]],
       dtype=torch.float16)
DESIRED: (shape=torch.Size([2, 4, 38, 128]), dtype=torch.float16)
tensor([[[[-0.1204, -0.1738,  0.4700,  ...,  0.1423, -0.3823,  0.1146],
          [-0.3674, -0.0047, -0.3342,  ...,  0.4951,  0.1205,  0.1843],
          [-0.2112, -0.0326, -0.1855,  ...,  0.3643, -0.2849, -0.2408],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[-0.3401, -0.2307, -0.4104,  ..., -0.4863,  0.2932,  0.1692],
          [-0.4338,  0.4832,  0.0770,  ...,  0.4634, -0.3816, -0.2363],
          [ 0.1796, -0.4216,  0.4268,  ..., -0.3669,  0.1334, -0.0214],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[-0.1204, -0.1738,  0.4700,  ...,  0.1423, -0.3823,  0.1146],
          [-0.3674, -0.0047, -0.3342,  ...,  0.4951,  0.1205,  0.1843],
          [-0.2112, -0.0326, -0.1855,  ...,  0.3643, -0.2849, -0.2408],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[-0.3401, -0.2307, -0.4104,  ..., -0.4863,  0.2932,  0.1692],
          [-0.4338,  0.4832,  0.0770,  ...,  0.4634, -0.3816, -0.2363],
          [ 0.1796, -0.4216,  0.4268,  ..., -0.3669,  0.1334, -0.0214],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]]],


        [[[-0.4658, -0.0782, -0.1940,  ...,  0.1300,  0.4631,  0.2123],
          [ 0.1166, -0.3572, -0.0467,  ...,  0.2305, -0.3591, -0.0769],
          [ 0.1442,  0.2659,  0.2397,  ...,  0.4700, -0.0401,  0.0800],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[-0.3313,  0.0009,  0.2510,  ..., -0.4910,  0.3369,  0.4080],
          [ 0.0904,  0.1603,  0.1218,  ..., -0.2583, -0.2661, -0.0213],
          [ 0.3748, -0.1836,  0.1418,  ...,  0.4866,  0.3960, -0.1300],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[-0.4658, -0.0782, -0.1940,  ...,  0.1300,  0.4631,  0.2123],
          [ 0.1166, -0.3572, -0.0467,  ...,  0.2305, -0.3591, -0.0769],
          [ 0.1442,  0.2659,  0.2397,  ...,  0.4700, -0.0401,  0.0800],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[-0.3313,  0.0009,  0.2510,  ..., -0.4910,  0.3369,  0.4080],
          [ 0.0904,  0.1603,  0.1218,  ..., -0.2583, -0.2661, -0.0213],
          [ 0.3748, -0.1836,  0.1418,  ...,  0.4866,  0.3960, -0.1300],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]]]],
       dtype=torch.float16)

2025-06-08 11:43:26.278991 GPU 5 64403 test begin: paddle.incubate.nn.functional.variable_length_memory_efficient_attention(Tensor([2, 4, 39, 128],"float16"), Tensor([2, 2, 39, 128],"float16"), Tensor([2, 2, 39, 128],"float16"), Tensor([2, 1],"int32"), Tensor([2, 1],"int32"), mask=Tensor([2, 1, 32768, 32768],"float16"), scale=0.08838834764831845, )
[accuracy error] paddle.incubate.nn.functional.variable_length_memory_efficient_attention(Tensor([2, 4, 39, 128],"float16"), Tensor([2, 2, 39, 128],"float16"), Tensor([2, 2, 39, 128],"float16"), Tensor([2, 1],"int32"), Tensor([2, 1],"int32"), mask=Tensor([2, 1, 32768, 32768],"float16"), scale=0.08838834764831845, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 5752 / 39936 (14.4%)
Greatest absolute difference: 0.99462890625 at index (0, 1, 2, 59) (up to 0.01 allowed)
Greatest relative difference: 3956.0 at index (0, 1, 8, 35) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2, 4, 39, 128]), dtype=torch.float16)
tensor([[[[-0.2499, -0.0414,  0.3635,  ...,  0.0774, -0.4004,  0.3113],
          [-0.4719,  0.4165, -0.1807,  ...,  0.0359,  0.0784,  0.1993],
          [-0.4993,  0.2074,  0.2042,  ..., -0.2783, -0.2388, -0.3188],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[-0.2499, -0.0414,  0.3635,  ...,  0.0774, -0.4004,  0.3113],
          [-0.4719,  0.4165, -0.1807,  ...,  0.0359,  0.0784,  0.1993],
          [-0.4993,  0.2074,  0.2042,  ..., -0.2783, -0.2388, -0.3188],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[ 0.2144, -0.3647,  0.2869,  ..., -0.0846, -0.4216, -0.3274],
          [-0.2339,  0.3994,  0.4084,  ...,  0.4443, -0.3350,  0.1534],
          [-0.0652,  0.4353,  0.4731,  ...,  0.3745, -0.4817,  0.1659],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[ 0.2144, -0.3647,  0.2869,  ..., -0.0846, -0.4216, -0.3274],
          [-0.2339,  0.3994,  0.4084,  ...,  0.4443, -0.3350,  0.1534],
          [-0.0652,  0.4353,  0.4731,  ...,  0.3745, -0.4817,  0.1659],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]]],


        [[[ 0.2859,  0.1222,  0.4165,  ...,  0.1008,  0.3633,  0.3865],
          [ 0.1090,  0.1086, -0.1895,  ...,  0.2220,  0.3052,  0.0126],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[ 0.2859,  0.1222,  0.4165,  ...,  0.1008,  0.3633,  0.3865],
          [ 0.1090,  0.1086, -0.1895,  ...,  0.2220,  0.3052,  0.0126],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[ 0.0073, -0.0509, -0.1400,  ...,  0.4036,  0.4766,  0.2678],
          [-0.4692,  0.0777,  0.3120,  ..., -0.3530, -0.1694, -0.2563],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[ 0.0073, -0.0509, -0.1400,  ...,  0.4036,  0.4766,  0.2678],
          [-0.4692,  0.0777,  0.3120,  ..., -0.3530, -0.1694, -0.2563],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]]]],
       dtype=torch.float16)
DESIRED: (shape=torch.Size([2, 4, 39, 128]), dtype=torch.float16)
tensor([[[[-0.2499, -0.0414,  0.3635,  ...,  0.0774, -0.4004,  0.3113],
          [-0.4719,  0.4165, -0.1807,  ...,  0.0359,  0.0784,  0.1993],
          [-0.4993,  0.2074,  0.2042,  ..., -0.2783, -0.2388, -0.3188],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[ 0.2144, -0.3647,  0.2869,  ..., -0.0846, -0.4216, -0.3274],
          [-0.2339,  0.3994,  0.4084,  ...,  0.4443, -0.3350,  0.1534],
          [-0.0652,  0.4353,  0.4731,  ...,  0.3745, -0.4817,  0.1659],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[-0.2499, -0.0414,  0.3635,  ...,  0.0774, -0.4004,  0.3113],
          [-0.4719,  0.4165, -0.1807,  ...,  0.0359,  0.0784,  0.1993],
          [-0.4993,  0.2074,  0.2042,  ..., -0.2783, -0.2388, -0.3188],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[ 0.2144, -0.3647,  0.2869,  ..., -0.0846, -0.4216, -0.3274],
          [-0.2339,  0.3994,  0.4084,  ...,  0.4443, -0.3350,  0.1534],
          [-0.0652,  0.4353,  0.4731,  ...,  0.3745, -0.4817,  0.1659],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]]],


        [[[ 0.2859,  0.1222,  0.4165,  ...,  0.1008,  0.3633,  0.3865],
          [ 0.1090,  0.1086, -0.1895,  ...,  0.2220,  0.3052,  0.0126],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[ 0.0073, -0.0509, -0.1400,  ...,  0.4036,  0.4766,  0.2678],
          [-0.4692,  0.0777,  0.3120,  ..., -0.3530, -0.1694, -0.2563],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[ 0.2859,  0.1222,  0.4165,  ...,  0.1008,  0.3633,  0.3865],
          [ 0.1090,  0.1086, -0.1895,  ...,  0.2220,  0.3052,  0.0126],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[ 0.0073, -0.0509, -0.1400,  ...,  0.4036,  0.4766,  0.2678],
          [-0.4692,  0.0777,  0.3120,  ..., -0.3530, -0.1694, -0.2563],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]]]],
       dtype=torch.float16)

2025-06-08 11:43:26.283182 GPU 5 64401 test begin: paddle.incubate.nn.functional.variable_length_memory_efficient_attention(Tensor([2, 4, 40, 128],"float16"), Tensor([2, 2, 40, 128],"float16"), Tensor([2, 2, 40, 128],"float16"), Tensor([2, 1],"int32"), Tensor([2, 1],"int32"), mask=Tensor([2, 1, 32768, 32768],"float16"), scale=0.08838834764831845, )
[accuracy error] paddle.incubate.nn.functional.variable_length_memory_efficient_attention(Tensor([2, 4, 40, 128],"float16"), Tensor([2, 2, 40, 128],"float16"), Tensor([2, 2, 40, 128],"float16"), Tensor([2, 1],"int32"), Tensor([2, 1],"int32"), mask=Tensor([2, 1, 32768, 32768],"float16"), scale=0.08838834764831845, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 8956 / 40960 (21.9%)
Greatest absolute difference: 0.9765625 at index (1, 1, 4, 41) (up to 0.01 allowed)
Greatest relative difference: 10584.0 at index (1, 2, 12, 114) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2, 4, 40, 128]), dtype=torch.float16)
tensor([[[[-0.2629,  0.1041, -0.1567,  ...,  0.0475,  0.4429, -0.3188],
          [ 0.1321,  0.3594,  0.4792,  ...,  0.2473,  0.4172, -0.4768],
          [ 0.1181,  0.2622,  0.3130,  ..., -0.3032,  0.4062, -0.3494],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[-0.2629,  0.1041, -0.1567,  ...,  0.0475,  0.4429, -0.3188],
          [ 0.1321,  0.3594,  0.4792,  ...,  0.2473,  0.4172, -0.4768],
          [ 0.1181,  0.2622,  0.3130,  ..., -0.3032,  0.4062, -0.3494],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[ 0.2666,  0.0157,  0.0950,  ..., -0.3262,  0.2079, -0.2585],
          [ 0.2081, -0.4409, -0.1781,  ...,  0.4426, -0.2319, -0.4758],
          [-0.0219,  0.0090, -0.3025,  ..., -0.1807, -0.3240,  0.2275],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[ 0.2666,  0.0157,  0.0950,  ..., -0.3262,  0.2079, -0.2585],
          [ 0.2081, -0.4409, -0.1781,  ...,  0.4426, -0.2319, -0.4758],
          [-0.0219,  0.0090, -0.3025,  ..., -0.1807, -0.3240,  0.2275],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]]],


        [[[-0.4568, -0.0507, -0.3340,  ...,  0.4934, -0.1017,  0.3291],
          [ 0.3049,  0.4055,  0.1456,  ..., -0.0515, -0.2649, -0.4612],
          [-0.4568, -0.0507, -0.3340,  ...,  0.4934, -0.1017,  0.3291],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[-0.4568, -0.0507, -0.3340,  ...,  0.4934, -0.1017,  0.3291],
          [ 0.3049,  0.4055,  0.1456,  ..., -0.0515, -0.2649, -0.4612],
          [-0.4568, -0.0507, -0.3340,  ...,  0.4934, -0.1017,  0.3291],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[-0.2407,  0.3186, -0.4375,  ..., -0.2830, -0.3176,  0.1808],
          [-0.1185,  0.3135,  0.2742,  ...,  0.2340, -0.0150,  0.3413],
          [-0.2407,  0.3186, -0.4375,  ..., -0.2830, -0.3176,  0.1808],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[-0.2407,  0.3186, -0.4375,  ..., -0.2830, -0.3176,  0.1808],
          [-0.1185,  0.3135,  0.2742,  ...,  0.2340, -0.0150,  0.3413],
          [-0.2407,  0.3186, -0.4375,  ..., -0.2830, -0.3176,  0.1808],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]]]],
       dtype=torch.float16)
DESIRED: (shape=torch.Size([2, 4, 40, 128]), dtype=torch.float16)
tensor([[[[-0.2629,  0.1041, -0.1567,  ...,  0.0475,  0.4429, -0.3188],
          [ 0.1321,  0.3594,  0.4792,  ...,  0.2473,  0.4172, -0.4768],
          [ 0.1181,  0.2622,  0.3130,  ..., -0.3032,  0.4062, -0.3494],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[ 0.2666,  0.0157,  0.0950,  ..., -0.3262,  0.2079, -0.2585],
          [ 0.2081, -0.4409, -0.1781,  ...,  0.4426, -0.2319, -0.4758],
          [-0.0219,  0.0090, -0.3025,  ..., -0.1807, -0.3240,  0.2275],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[-0.2629,  0.1041, -0.1567,  ...,  0.0475,  0.4429, -0.3188],
          [ 0.1321,  0.3594,  0.4792,  ...,  0.2473,  0.4172, -0.4768],
          [ 0.1181,  0.2622,  0.3130,  ..., -0.3032,  0.4062, -0.3494],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[ 0.2666,  0.0157,  0.0950,  ..., -0.3262,  0.2079, -0.2585],
          [ 0.2081, -0.4409, -0.1781,  ...,  0.4426, -0.2319, -0.4758],
          [-0.0219,  0.0090, -0.3025,  ..., -0.1807, -0.3240,  0.2275],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]]],


        [[[-0.4568, -0.0507, -0.3340,  ...,  0.4934, -0.1017,  0.3291],
          [ 0.3049,  0.4055,  0.1456,  ..., -0.0515, -0.2649, -0.4612],
          [-0.4568, -0.0507, -0.3340,  ...,  0.4934, -0.1017,  0.3291],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[-0.2407,  0.3186, -0.4375,  ..., -0.2830, -0.3176,  0.1808],
          [-0.1185,  0.3135,  0.2742,  ...,  0.2340, -0.0150,  0.3413],
          [-0.2407,  0.3186, -0.4375,  ..., -0.2830, -0.3176,  0.1808],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[-0.4568, -0.0507, -0.3340,  ...,  0.4934, -0.1017,  0.3291],
          [ 0.3049,  0.4055,  0.1456,  ..., -0.0515, -0.2649, -0.4612],
          [-0.4568, -0.0507, -0.3340,  ...,  0.4934, -0.1017,  0.3291],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[-0.2407,  0.3186, -0.4375,  ..., -0.2830, -0.3176,  0.1808],
          [-0.1185,  0.3135,  0.2742,  ...,  0.2340, -0.0150,  0.3413],
          [-0.2407,  0.3186, -0.4375,  ..., -0.2830, -0.3176,  0.1808],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]]]],
       dtype=torch.float16)

2025-06-08 11:43:26.366177 GPU 5 64407 test begin: paddle.incubate.nn.functional.variable_length_memory_efficient_attention(Tensor([2, 4, 41, 128],"float16"), Tensor([2, 2, 41, 128],"float16"), Tensor([2, 2, 41, 128],"float16"), Tensor([2, 1],"int32"), Tensor([2, 1],"int32"), mask=Tensor([2, 1, 32768, 32768],"float16"), scale=0.08838834764831845, )
[accuracy error] paddle.incubate.nn.functional.variable_length_memory_efficient_attention(Tensor([2, 4, 41, 128],"float16"), Tensor([2, 2, 41, 128],"float16"), Tensor([2, 2, 41, 128],"float16"), Tensor([2, 1],"int32"), Tensor([2, 1],"int32"), mask=Tensor([2, 1, 32768, 32768],"float16"), scale=0.08838834764831845, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 12310 / 41984 (29.3%)
Greatest absolute difference: 0.98193359375 at index (0, 1, 14, 20) (up to 0.01 allowed)
Greatest relative difference: 2716.0 at index (1, 1, 9, 43) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2, 4, 41, 128]), dtype=torch.float16)
tensor([[[[ 0.2747, -0.2593,  0.1366,  ..., -0.2285,  0.2123, -0.0547],
          [ 0.0459,  0.2864,  0.4709,  ..., -0.4885,  0.4209,  0.1780],
          [ 0.2524,  0.0772,  0.4636,  ..., -0.1500,  0.4180, -0.0830],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[ 0.2747, -0.2593,  0.1366,  ..., -0.2285,  0.2123, -0.0547],
          [ 0.0459,  0.2864,  0.4709,  ..., -0.4885,  0.4209,  0.1780],
          [ 0.2524,  0.0772,  0.4636,  ..., -0.1500,  0.4180, -0.0830],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[ 0.3247, -0.2900, -0.0345,  ...,  0.3250, -0.3887,  0.0576],
          [ 0.3005, -0.3140,  0.3054,  ...,  0.3303,  0.1870, -0.3704],
          [-0.0293, -0.3718, -0.4941,  ...,  0.0620, -0.0585,  0.1923],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[ 0.3247, -0.2900, -0.0345,  ...,  0.3250, -0.3887,  0.0576],
          [ 0.3005, -0.3140,  0.3054,  ...,  0.3303,  0.1870, -0.3704],
          [-0.0293, -0.3718, -0.4941,  ...,  0.0620, -0.0585,  0.1923],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]]],


        [[[ 0.0595,  0.3135,  0.2686,  ...,  0.1908,  0.2881, -0.1519],
          [-0.2023,  0.3069,  0.1689,  ..., -0.1655,  0.4282,  0.4775],
          [-0.3213,  0.1229,  0.2338,  ...,  0.3948,  0.2350, -0.2944],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[ 0.0595,  0.3135,  0.2686,  ...,  0.1908,  0.2881, -0.1519],
          [-0.2023,  0.3069,  0.1689,  ..., -0.1655,  0.4282,  0.4775],
          [-0.3213,  0.1229,  0.2338,  ...,  0.3948,  0.2350, -0.2944],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[-0.1672, -0.1805, -0.2086,  ...,  0.0388, -0.0348,  0.0898],
          [-0.0431, -0.0038, -0.4897,  ..., -0.0929,  0.1257,  0.3784],
          [ 0.3406, -0.2844, -0.4958,  ..., -0.3320, -0.2627, -0.2507],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[-0.1672, -0.1805, -0.2086,  ...,  0.0388, -0.0348,  0.0898],
          [-0.0431, -0.0038, -0.4897,  ..., -0.0929,  0.1257,  0.3784],
          [ 0.3406, -0.2844, -0.4958,  ..., -0.3320, -0.2627, -0.2507],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]]]],
       dtype=torch.float16)
DESIRED: (shape=torch.Size([2, 4, 41, 128]), dtype=torch.float16)
tensor([[[[ 0.2747, -0.2593,  0.1366,  ..., -0.2285,  0.2123, -0.0547],
          [ 0.0459,  0.2864,  0.4709,  ..., -0.4885,  0.4209,  0.1780],
          [ 0.2524,  0.0772,  0.4636,  ..., -0.1500,  0.4180, -0.0830],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[ 0.3247, -0.2900, -0.0345,  ...,  0.3250, -0.3887,  0.0576],
          [ 0.3005, -0.3140,  0.3054,  ...,  0.3303,  0.1870, -0.3704],
          [-0.0293, -0.3718, -0.4941,  ...,  0.0620, -0.0585,  0.1923],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[ 0.2747, -0.2593,  0.1366,  ..., -0.2285,  0.2123, -0.0547],
          [ 0.0459,  0.2864,  0.4709,  ..., -0.4885,  0.4209,  0.1780],
          [ 0.2524,  0.0772,  0.4636,  ..., -0.1500,  0.4180, -0.0830],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[ 0.3247, -0.2900, -0.0345,  ...,  0.3250, -0.3887,  0.0576],
          [ 0.3005, -0.3140,  0.3054,  ...,  0.3303,  0.1870, -0.3704],
          [-0.0293, -0.3718, -0.4941,  ...,  0.0620, -0.0585,  0.1923],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]]],


        [[[ 0.0595,  0.3135,  0.2686,  ...,  0.1908,  0.2881, -0.1519],
          [-0.2023,  0.3069,  0.1689,  ..., -0.1655,  0.4282,  0.4775],
          [-0.3213,  0.1229,  0.2338,  ...,  0.3948,  0.2350, -0.2944],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[-0.1672, -0.1805, -0.2086,  ...,  0.0388, -0.0348,  0.0898],
          [-0.0431, -0.0038, -0.4897,  ..., -0.0929,  0.1257,  0.3784],
          [ 0.3406, -0.2844, -0.4958,  ..., -0.3320, -0.2627, -0.2507],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[ 0.0595,  0.3135,  0.2686,  ...,  0.1908,  0.2881, -0.1519],
          [-0.2023,  0.3069,  0.1689,  ..., -0.1655,  0.4282,  0.4775],
          [-0.3213,  0.1229,  0.2338,  ...,  0.3948,  0.2350, -0.2944],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[-0.1672, -0.1805, -0.2086,  ...,  0.0388, -0.0348,  0.0898],
          [-0.0431, -0.0038, -0.4897,  ..., -0.0929,  0.1257,  0.3784],
          [ 0.3406, -0.2844, -0.4958,  ..., -0.3320, -0.2627, -0.2507],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]]]],
       dtype=torch.float16)

2025-06-08 11:43:26.370045 GPU 5 64402 test begin: paddle.incubate.nn.functional.variable_length_memory_efficient_attention(Tensor([2, 4, 47, 128],"float16"), Tensor([2, 2, 47, 128],"float16"), Tensor([2, 2, 47, 128],"float16"), Tensor([2, 1],"int32"), Tensor([2, 1],"int32"), mask=Tensor([2, 1, 32768, 32768],"float16"), scale=0.08838834764831845, )
[accuracy error] paddle.incubate.nn.functional.variable_length_memory_efficient_attention(Tensor([2, 4, 47, 128],"float16"), Tensor([2, 2, 47, 128],"float16"), Tensor([2, 2, 47, 128],"float16"), Tensor([2, 1],"int32"), Tensor([2, 1],"int32"), mask=Tensor([2, 1, 32768, 32768],"float16"), scale=0.08838834764831845, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 11504 / 48128 (23.9%)
Greatest absolute difference: 0.98583984375 at index (1, 1, 13, 21) (up to 0.01 allowed)
Greatest relative difference: 2194.0 at index (0, 1, 7, 50) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2, 4, 47, 128]), dtype=torch.float16)
tensor([[[[ 0.1980, -0.1957, -0.1450,  ...,  0.0050, -0.0295, -0.2598],
          [-0.4636, -0.1370,  0.2961,  ...,  0.4670,  0.1558,  0.2952],
          [-0.4407, -0.1848,  0.4573,  ...,  0.2454, -0.0088,  0.2925],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[ 0.1980, -0.1957, -0.1450,  ...,  0.0050, -0.0295, -0.2598],
          [-0.4636, -0.1370,  0.2961,  ...,  0.4670,  0.1558,  0.2952],
          [-0.4407, -0.1848,  0.4573,  ...,  0.2454, -0.0088,  0.2925],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[-0.3945,  0.2925, -0.3081,  ...,  0.2454, -0.1616, -0.3389],
          [-0.1908,  0.1154,  0.2871,  ..., -0.1869,  0.4746,  0.4897],
          [ 0.0446, -0.4456, -0.0561,  ...,  0.4639,  0.1136, -0.2374],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[-0.3945,  0.2925, -0.3081,  ...,  0.2454, -0.1616, -0.3389],
          [-0.1908,  0.1154,  0.2871,  ..., -0.1869,  0.4746,  0.4897],
          [ 0.0446, -0.4456, -0.0561,  ...,  0.4639,  0.1136, -0.2374],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]]],


        [[[ 0.1210, -0.1377,  0.0491,  ..., -0.2455,  0.1442, -0.0280],
          [ 0.1127,  0.1450,  0.0364,  ...,  0.0645,  0.0594,  0.2271],
          [-0.4895,  0.2673, -0.3083,  ..., -0.2654, -0.1478, -0.4167],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[ 0.1210, -0.1377,  0.0491,  ..., -0.2455,  0.1442, -0.0280],
          [ 0.1127,  0.1450,  0.0364,  ...,  0.0645,  0.0594,  0.2271],
          [-0.4895,  0.2673, -0.3083,  ..., -0.2654, -0.1478, -0.4167],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[-0.2061, -0.3779, -0.3899,  ...,  0.4771, -0.4539, -0.3823],
          [-0.0782,  0.1411, -0.2512,  ...,  0.3967, -0.2585, -0.1257],
          [ 0.2944, -0.1870,  0.2998,  ..., -0.0634,  0.2676,  0.4043],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[-0.2061, -0.3779, -0.3899,  ...,  0.4771, -0.4539, -0.3823],
          [-0.0782,  0.1411, -0.2512,  ...,  0.3967, -0.2585, -0.1257],
          [ 0.2944, -0.1870,  0.2998,  ..., -0.0634,  0.2676,  0.4043],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]]]],
       dtype=torch.float16)
DESIRED: (shape=torch.Size([2, 4, 47, 128]), dtype=torch.float16)
tensor([[[[ 0.1980, -0.1957, -0.1450,  ...,  0.0050, -0.0295, -0.2598],
          [-0.4636, -0.1370,  0.2961,  ...,  0.4670,  0.1558,  0.2952],
          [-0.4407, -0.1848,  0.4573,  ...,  0.2454, -0.0088,  0.2925],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[-0.3945,  0.2925, -0.3081,  ...,  0.2454, -0.1616, -0.3389],
          [-0.1908,  0.1154,  0.2871,  ..., -0.1869,  0.4746,  0.4897],
          [ 0.0446, -0.4456, -0.0561,  ...,  0.4639,  0.1136, -0.2374],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[ 0.1980, -0.1957, -0.1450,  ...,  0.0050, -0.0295, -0.2598],
          [-0.4636, -0.1370,  0.2961,  ...,  0.4670,  0.1558,  0.2952],
          [-0.4407, -0.1848,  0.4573,  ...,  0.2454, -0.0088,  0.2925],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[-0.3945,  0.2925, -0.3081,  ...,  0.2454, -0.1616, -0.3389],
          [-0.1908,  0.1154,  0.2871,  ..., -0.1869,  0.4746,  0.4897],
          [ 0.0446, -0.4456, -0.0561,  ...,  0.4639,  0.1136, -0.2374],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]]],


        [[[ 0.1210, -0.1377,  0.0491,  ..., -0.2455,  0.1442, -0.0280],
          [ 0.1127,  0.1450,  0.0364,  ...,  0.0645,  0.0594,  0.2271],
          [-0.4895,  0.2673, -0.3083,  ..., -0.2654, -0.1478, -0.4167],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[-0.2061, -0.3779, -0.3899,  ...,  0.4771, -0.4539, -0.3823],
          [-0.0782,  0.1411, -0.2512,  ...,  0.3967, -0.2585, -0.1257],
          [ 0.2944, -0.1870,  0.2998,  ..., -0.0634,  0.2676,  0.4043],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[ 0.1210, -0.1377,  0.0491,  ..., -0.2455,  0.1442, -0.0280],
          [ 0.1127,  0.1450,  0.0364,  ...,  0.0645,  0.0594,  0.2271],
          [-0.4895,  0.2673, -0.3083,  ..., -0.2654, -0.1478, -0.4167],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[-0.2061, -0.3779, -0.3899,  ...,  0.4771, -0.4539, -0.3823],
          [-0.0782,  0.1411, -0.2512,  ...,  0.3967, -0.2585, -0.1257],
          [ 0.2944, -0.1870,  0.2998,  ..., -0.0634,  0.2676,  0.4043],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]]]],
       dtype=torch.float16)

2025-06-08 11:43:26.465533 GPU 5 64405 test begin: paddle.incubate.nn.functional.variable_length_memory_efficient_attention(Tensor([2, 4, 51, 128],"float16"), Tensor([2, 2, 51, 128],"float16"), Tensor([2, 2, 51, 128],"float16"), Tensor([2, 1],"int32"), Tensor([2, 1],"int32"), mask=Tensor([2, 1, 32768, 32768],"float16"), scale=0.08838834764831845, )
[accuracy error] paddle.incubate.nn.functional.variable_length_memory_efficient_attention(Tensor([2, 4, 51, 128],"float16"), Tensor([2, 2, 51, 128],"float16"), Tensor([2, 2, 51, 128],"float16"), Tensor([2, 1],"int32"), Tensor([2, 1],"int32"), mask=Tensor([2, 1, 32768, 32768],"float16"), scale=0.08838834764831845, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 11974 / 52224 (22.9%)
Greatest absolute difference: 0.97265625 at index (0, 1, 11, 88) (up to 0.01 allowed)
Greatest relative difference: 3966.0 at index (0, 1, 14, 101) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2, 4, 51, 128]), dtype=torch.float16)
tensor([[[[-0.3013, -0.2224, -0.4463,  ...,  0.3254, -0.3020,  0.4092],
          [ 0.1862,  0.3311,  0.4290,  ..., -0.3088, -0.0498,  0.2744],
          [ 0.4048, -0.2615, -0.4802,  ...,  0.0144,  0.3630, -0.4082],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[-0.3013, -0.2224, -0.4463,  ...,  0.3254, -0.3020,  0.4092],
          [ 0.1862,  0.3311,  0.4290,  ..., -0.3088, -0.0498,  0.2744],
          [ 0.4048, -0.2615, -0.4802,  ...,  0.0144,  0.3630, -0.4082],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[-0.1548, -0.3574,  0.2751,  ..., -0.0917, -0.2234, -0.1032],
          [ 0.4653, -0.2722,  0.3608,  ..., -0.0165,  0.0513,  0.3088],
          [-0.2834, -0.3408,  0.0536,  ...,  0.3096,  0.0720, -0.2976],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[-0.1548, -0.3574,  0.2751,  ..., -0.0917, -0.2234, -0.1032],
          [ 0.4653, -0.2722,  0.3608,  ..., -0.0165,  0.0513,  0.3088],
          [-0.2834, -0.3408,  0.0536,  ...,  0.3096,  0.0720, -0.2976],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]]],


        [[[ 0.3528, -0.3818,  0.0044,  ..., -0.4358, -0.3237,  0.2178],
          [-0.2737, -0.1376,  0.4331,  ..., -0.3992, -0.2168,  0.0798],
          [-0.0559,  0.3645,  0.2974,  ...,  0.0696,  0.1519,  0.3486],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[ 0.3528, -0.3818,  0.0044,  ..., -0.4358, -0.3237,  0.2178],
          [-0.2737, -0.1376,  0.4331,  ..., -0.3992, -0.2168,  0.0798],
          [-0.0559,  0.3645,  0.2974,  ...,  0.0696,  0.1519,  0.3486],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[-0.4363,  0.4795, -0.2886,  ..., -0.4622, -0.3923, -0.0844],
          [-0.2201,  0.0426, -0.2781,  ...,  0.2761,  0.1865, -0.1016],
          [-0.2277,  0.0050, -0.0845,  ..., -0.3147,  0.1854,  0.4580],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[-0.4363,  0.4795, -0.2886,  ..., -0.4622, -0.3923, -0.0844],
          [-0.2201,  0.0426, -0.2781,  ...,  0.2761,  0.1865, -0.1016],
          [-0.2277,  0.0050, -0.0845,  ..., -0.3147,  0.1854,  0.4580],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]]]],
       dtype=torch.float16)
DESIRED: (shape=torch.Size([2, 4, 51, 128]), dtype=torch.float16)
tensor([[[[-0.3013, -0.2224, -0.4463,  ...,  0.3254, -0.3020,  0.4092],
          [ 0.1862,  0.3311,  0.4290,  ..., -0.3088, -0.0498,  0.2744],
          [ 0.4048, -0.2615, -0.4802,  ...,  0.0144,  0.3630, -0.4082],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[-0.1548, -0.3574,  0.2751,  ..., -0.0917, -0.2234, -0.1032],
          [ 0.4653, -0.2722,  0.3608,  ..., -0.0165,  0.0513,  0.3088],
          [-0.2834, -0.3408,  0.0536,  ...,  0.3096,  0.0720, -0.2976],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[-0.3013, -0.2224, -0.4463,  ...,  0.3254, -0.3020,  0.4092],
          [ 0.1862,  0.3311,  0.4290,  ..., -0.3088, -0.0498,  0.2744],
          [ 0.4048, -0.2615, -0.4802,  ...,  0.0144,  0.3630, -0.4082],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[-0.1548, -0.3574,  0.2751,  ..., -0.0917, -0.2234, -0.1032],
          [ 0.4653, -0.2722,  0.3608,  ..., -0.0165,  0.0513,  0.3088],
          [-0.2834, -0.3408,  0.0536,  ...,  0.3096,  0.0720, -0.2976],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]]],


        [[[ 0.3528, -0.3818,  0.0044,  ..., -0.4358, -0.3237,  0.2178],
          [-0.2737, -0.1376,  0.4331,  ..., -0.3992, -0.2168,  0.0798],
          [-0.0559,  0.3645,  0.2974,  ...,  0.0696,  0.1519,  0.3486],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[-0.4363,  0.4795, -0.2886,  ..., -0.4622, -0.3923, -0.0844],
          [-0.2201,  0.0426, -0.2781,  ...,  0.2761,  0.1865, -0.1016],
          [-0.2277,  0.0050, -0.0845,  ..., -0.3147,  0.1854,  0.4580],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[ 0.3528, -0.3818,  0.0044,  ..., -0.4358, -0.3237,  0.2178],
          [-0.2737, -0.1376,  0.4331,  ..., -0.3992, -0.2168,  0.0798],
          [-0.0559,  0.3645,  0.2974,  ...,  0.0696,  0.1519,  0.3486],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[-0.4363,  0.4795, -0.2886,  ..., -0.4622, -0.3923, -0.0844],
          [-0.2201,  0.0426, -0.2781,  ...,  0.2761,  0.1865, -0.1016],
          [-0.2277,  0.0050, -0.0845,  ..., -0.3147,  0.1854,  0.4580],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]]]],
       dtype=torch.float16)

2025-06-08 11:43:26.933214 GPU 5 64404 test begin: paddle.incubate.nn.functional.variable_length_memory_efficient_attention(Tensor([2, 4, 53, 128],"float16"), Tensor([2, 2, 53, 128],"float16"), Tensor([2, 2, 53, 128],"float16"), Tensor([2, 1],"int32"), Tensor([2, 1],"int32"), mask=Tensor([2, 1, 32768, 32768],"float16"), scale=0.08838834764831845, )
[accuracy error] paddle.incubate.nn.functional.variable_length_memory_efficient_attention(Tensor([2, 4, 53, 128],"float16"), Tensor([2, 2, 53, 128],"float16"), Tensor([2, 2, 53, 128],"float16"), Tensor([2, 1],"int32"), Tensor([2, 1],"int32"), mask=Tensor([2, 1, 32768, 32768],"float16"), scale=0.08838834764831845, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 13537 / 54272 (24.9%)
Greatest absolute difference: 0.9716796875 at index (1, 1, 30, 24) (up to 0.01 allowed)
Greatest relative difference: 4644.0 at index (1, 2, 10, 31) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2, 4, 53, 128]), dtype=torch.float16)
tensor([[[[-0.4668,  0.1331,  0.1072,  ...,  0.2164,  0.0504, -0.2301],
          [-0.4668,  0.1331,  0.1072,  ...,  0.2164,  0.0504, -0.2301],
          [-0.0340,  0.2771, -0.3528,  ..., -0.2732, -0.3606,  0.3120],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[-0.4668,  0.1331,  0.1072,  ...,  0.2164,  0.0504, -0.2301],
          [-0.4668,  0.1331,  0.1072,  ...,  0.2164,  0.0504, -0.2301],
          [-0.0340,  0.2771, -0.3528,  ..., -0.2732, -0.3606,  0.3120],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[-0.3857,  0.1120,  0.2698,  ...,  0.3491, -0.2375, -0.3528],
          [-0.3857,  0.1120,  0.2698,  ...,  0.3491, -0.2375, -0.3528],
          [ 0.1714,  0.1075, -0.0812,  ..., -0.2551, -0.3071, -0.4983],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[-0.3857,  0.1120,  0.2698,  ...,  0.3491, -0.2375, -0.3528],
          [-0.3857,  0.1120,  0.2698,  ...,  0.3491, -0.2375, -0.3528],
          [ 0.1714,  0.1075, -0.0812,  ..., -0.2551, -0.3071, -0.4983],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]]],


        [[[-0.1914,  0.4216,  0.4143,  ...,  0.1899, -0.4692,  0.0646],
          [ 0.0101, -0.1842, -0.0654,  ...,  0.4119, -0.1864, -0.0008],
          [-0.1852, -0.4553,  0.2108,  ...,  0.1122, -0.2372, -0.1495],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[-0.1914,  0.4216,  0.4143,  ...,  0.1899, -0.4692,  0.0646],
          [ 0.0101, -0.1842, -0.0654,  ...,  0.4119, -0.1864, -0.0008],
          [-0.1852, -0.4553,  0.2108,  ...,  0.1122, -0.2372, -0.1495],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[-0.4788, -0.2573,  0.2322,  ..., -0.2903, -0.4963, -0.3745],
          [-0.0963, -0.3555, -0.3235,  ...,  0.1663, -0.1865,  0.3560],
          [ 0.2344, -0.0626,  0.1777,  ..., -0.3494, -0.2086,  0.3083],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[-0.4788, -0.2573,  0.2322,  ..., -0.2903, -0.4963, -0.3745],
          [-0.0963, -0.3555, -0.3235,  ...,  0.1663, -0.1865,  0.3560],
          [ 0.2344, -0.0626,  0.1777,  ..., -0.3494, -0.2086,  0.3083],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]]]],
       dtype=torch.float16)
DESIRED: (shape=torch.Size([2, 4, 53, 128]), dtype=torch.float16)
tensor([[[[-0.4668,  0.1331,  0.1072,  ...,  0.2164,  0.0504, -0.2301],
          [-0.4668,  0.1331,  0.1072,  ...,  0.2164,  0.0504, -0.2301],
          [-0.0340,  0.2771, -0.3528,  ..., -0.2732, -0.3606,  0.3120],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[-0.3857,  0.1120,  0.2698,  ...,  0.3491, -0.2375, -0.3528],
          [-0.3857,  0.1120,  0.2698,  ...,  0.3491, -0.2375, -0.3528],
          [ 0.1714,  0.1075, -0.0812,  ..., -0.2551, -0.3071, -0.4983],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[-0.4668,  0.1331,  0.1072,  ...,  0.2164,  0.0504, -0.2301],
          [-0.4668,  0.1331,  0.1072,  ...,  0.2164,  0.0504, -0.2301],
          [-0.0340,  0.2771, -0.3528,  ..., -0.2732, -0.3606,  0.3120],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[-0.3857,  0.1120,  0.2698,  ...,  0.3491, -0.2375, -0.3528],
          [-0.3857,  0.1120,  0.2698,  ...,  0.3491, -0.2375, -0.3528],
          [ 0.1714,  0.1075, -0.0812,  ..., -0.2551, -0.3071, -0.4983],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]]],


        [[[-0.1914,  0.4216,  0.4143,  ...,  0.1899, -0.4692,  0.0646],
          [ 0.0101, -0.1842, -0.0654,  ...,  0.4119, -0.1864, -0.0008],
          [-0.1852, -0.4553,  0.2108,  ...,  0.1122, -0.2372, -0.1495],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[-0.4788, -0.2573,  0.2322,  ..., -0.2903, -0.4963, -0.3745],
          [-0.0963, -0.3555, -0.3235,  ...,  0.1663, -0.1865,  0.3560],
          [ 0.2344, -0.0626,  0.1777,  ..., -0.3494, -0.2086,  0.3083],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[-0.1914,  0.4216,  0.4143,  ...,  0.1899, -0.4692,  0.0646],
          [ 0.0101, -0.1842, -0.0654,  ...,  0.4119, -0.1864, -0.0008],
          [-0.1852, -0.4553,  0.2108,  ...,  0.1122, -0.2372, -0.1495],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[-0.4788, -0.2573,  0.2322,  ..., -0.2903, -0.4963, -0.3745],
          [-0.0963, -0.3555, -0.3235,  ...,  0.1663, -0.1865,  0.3560],
          [ 0.2344, -0.0626,  0.1777,  ..., -0.3494, -0.2086,  0.3083],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]]]],
       dtype=torch.float16)

2025-06-08 11:44:15.395751 GPU 5 64405 test begin: paddle.incubate.nn.functional.variable_length_memory_efficient_attention(Tensor([2, 4, 54, 128],"float16"), Tensor([2, 2, 54, 128],"float16"), Tensor([2, 2, 54, 128],"float16"), Tensor([2, 1],"int32"), Tensor([2, 1],"int32"), mask=Tensor([2, 1, 32768, 32768],"float16"), scale=0.08838834764831845, )
[accuracy error] paddle.incubate.nn.functional.variable_length_memory_efficient_attention(Tensor([2, 4, 54, 128],"float16"), Tensor([2, 2, 54, 128],"float16"), Tensor([2, 2, 54, 128],"float16"), Tensor([2, 1],"int32"), Tensor([2, 1],"int32"), mask=Tensor([2, 1, 32768, 32768],"float16"), scale=0.08838834764831845, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 25100 / 55296 (45.4%)
Greatest absolute difference: 0.9892578125 at index (1, 1, 19, 63) (up to 0.01 allowed)
Greatest relative difference: inf at index (0, 1, 51, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2, 4, 54, 128]), dtype=torch.float16)
tensor([[[[ 0.3652, -0.1060, -0.0580,  ...,  0.0042, -0.0348, -0.2888],
          [ 0.1692,  0.0201,  0.1318,  ...,  0.4778,  0.2469,  0.4575],
          [-0.0098, -0.0815,  0.3354,  ..., -0.3293, -0.4727,  0.4944],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[ 0.3652, -0.1060, -0.0580,  ...,  0.0042, -0.0348, -0.2888],
          [ 0.1692,  0.0201,  0.1318,  ...,  0.4778,  0.2469,  0.4575],
          [-0.0098, -0.0815,  0.3354,  ..., -0.3293, -0.4727,  0.4944],
          ...,
          [-0.1548, -0.3574,  0.2751,  ..., -0.0917, -0.2234, -0.1032],
          [ 0.4653, -0.2722,  0.3608,  ..., -0.0165,  0.0513,  0.3088],
          [-0.2834, -0.3408,  0.0536,  ...,  0.3096,  0.0720, -0.2976]],

         [[-0.3093,  0.3369,  0.1318,  ..., -0.4546,  0.0157, -0.4780],
          [ 0.4966, -0.0454,  0.2382,  ..., -0.4902,  0.1802,  0.4507],
          [-0.1853,  0.4951,  0.0618,  ...,  0.3960, -0.0756,  0.0178],
          ...,
          [ 0.1338,  0.1746,  0.2593,  ...,  0.3164,  0.4600,  0.1309],
          [-0.0097, -0.2766, -0.4368,  ..., -0.1660,  0.3088, -0.1602],
          [-0.0653, -0.4041, -0.2566,  ...,  0.3440, -0.3782,  0.1388]],

         [[-0.3093,  0.3369,  0.1318,  ..., -0.4546,  0.0157, -0.4780],
          [ 0.4966, -0.0454,  0.2382,  ..., -0.4902,  0.1802,  0.4507],
          [-0.1853,  0.4951,  0.0618,  ...,  0.3960, -0.0756,  0.0178],
          ...,
          [-0.1852,  0.2015,  0.4006,  ...,  0.0283,  0.4114, -0.2037],
          [ 0.0787,  0.4016,  0.2944,  ...,  0.3718,  0.1503, -0.1459],
          [ 0.0322, -0.3140,  0.2211,  ..., -0.2058, -0.3267,  0.4241]]],


        [[[ 0.1229,  0.1242, -0.3633,  ...,  0.0461,  0.0707,  0.2976],
          [-0.3381, -0.3379,  0.2122,  ..., -0.2469,  0.4277,  0.4155],
          [-0.1827,  0.0853,  0.4441,  ..., -0.0604,  0.0601, -0.1322],
          ...,
          [ 0.0301, -0.3005,  0.2629,  ...,  0.0595,  0.1052,  0.3560],
          [ 0.1869,  0.3130,  0.1445,  ...,  0.4985,  0.3640, -0.1102],
          [ 0.1151,  0.3848, -0.2632,  ..., -0.1053, -0.3396, -0.1923]],

         [[ 0.1229,  0.1242, -0.3633,  ...,  0.0461,  0.0707,  0.2976],
          [-0.3381, -0.3379,  0.2122,  ..., -0.2469,  0.4277,  0.4155],
          [-0.1827,  0.0853,  0.4441,  ..., -0.0604,  0.0601, -0.1322],
          ...,
          [ 0.2322,  0.2649,  0.2576,  ...,  0.3975,  0.4534, -0.0767],
          [ 0.0301, -0.3005,  0.2629,  ...,  0.0595,  0.1052,  0.3560],
          [-0.4355,  0.3367,  0.1339,  ...,  0.0259,  0.1046, -0.2134]],

         [[-0.2429, -0.0876,  0.0944,  ...,  0.3083,  0.4644,  0.1777],
          [-0.2563, -0.3616,  0.4509,  ..., -0.1322,  0.0227, -0.4995],
          [ 0.3303,  0.1451, -0.4939,  ..., -0.1232,  0.0565,  0.2676],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[-0.2429, -0.0876,  0.0944,  ...,  0.3083,  0.4644,  0.1777],
          [-0.2563, -0.3616,  0.4509,  ..., -0.1322,  0.0227, -0.4995],
          [ 0.3303,  0.1451, -0.4939,  ..., -0.1232,  0.0565,  0.2676],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]]]],
       dtype=torch.float16)
DESIRED: (shape=torch.Size([2, 4, 54, 128]), dtype=torch.float16)
tensor([[[[ 0.3652, -0.1060, -0.0580,  ...,  0.0042, -0.0348, -0.2888],
          [ 0.1692,  0.0201,  0.1318,  ...,  0.4778,  0.2469,  0.4575],
          [-0.0098, -0.0815,  0.3354,  ..., -0.3293, -0.4727,  0.4944],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[-0.3093,  0.3369,  0.1318,  ..., -0.4546,  0.0157, -0.4780],
          [ 0.4966, -0.0454,  0.2382,  ..., -0.4902,  0.1802,  0.4507],
          [-0.1853,  0.4951,  0.0618,  ...,  0.3960, -0.0756,  0.0178],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[ 0.3652, -0.1060, -0.0580,  ...,  0.0042, -0.0348, -0.2888],
          [ 0.1692,  0.0201,  0.1318,  ...,  0.4778,  0.2469,  0.4575],
          [-0.0098, -0.0815,  0.3354,  ..., -0.3293, -0.4727,  0.4944],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[-0.3093,  0.3369,  0.1318,  ..., -0.4546,  0.0157, -0.4780],
          [ 0.4966, -0.0454,  0.2382,  ..., -0.4902,  0.1802,  0.4507],
          [-0.1853,  0.4951,  0.0618,  ...,  0.3960, -0.0756,  0.0178],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]]],


        [[[ 0.1229,  0.1242, -0.3633,  ...,  0.0461,  0.0707,  0.2976],
          [-0.3381, -0.3379,  0.2122,  ..., -0.2469,  0.4277,  0.4155],
          [-0.1827,  0.0853,  0.4441,  ..., -0.0604,  0.0601, -0.1322],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[-0.2429, -0.0876,  0.0944,  ...,  0.3083,  0.4644,  0.1777],
          [-0.2563, -0.3616,  0.4509,  ..., -0.1322,  0.0227, -0.4995],
          [ 0.3303,  0.1451, -0.4939,  ..., -0.1232,  0.0565,  0.2676],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[ 0.1229,  0.1242, -0.3633,  ...,  0.0461,  0.0707,  0.2976],
          [-0.3381, -0.3379,  0.2122,  ..., -0.2469,  0.4277,  0.4155],
          [-0.1827,  0.0853,  0.4441,  ..., -0.0604,  0.0601, -0.1322],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[-0.2429, -0.0876,  0.0944,  ...,  0.3083,  0.4644,  0.1777],
          [-0.2563, -0.3616,  0.4509,  ..., -0.1322,  0.0227, -0.4995],
          [ 0.3303,  0.1451, -0.4939,  ..., -0.1232,  0.0565,  0.2676],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]]]],
       dtype=torch.float16)

2025-06-08 11:44:15.399924 GPU 5 64406 test begin: paddle.incubate.nn.functional.variable_length_memory_efficient_attention(Tensor([2, 4, 57, 128],"float16"), Tensor([2, 2, 57, 128],"float16"), Tensor([2, 2, 57, 128],"float16"), Tensor([2, 1],"int32"), Tensor([2, 1],"int32"), mask=Tensor([2, 1, 32768, 32768],"float16"), scale=0.08838834764831845, )
[accuracy error] paddle.incubate.nn.functional.variable_length_memory_efficient_attention(Tensor([2, 4, 57, 128],"float16"), Tensor([2, 2, 57, 128],"float16"), Tensor([2, 2, 57, 128],"float16"), Tensor([2, 1],"int32"), Tensor([2, 1],"int32"), mask=Tensor([2, 1, 32768, 32768],"float16"), scale=0.08838834764831845, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 12449 / 58368 (21.3%)
Greatest absolute difference: 0.9931640625 at index (0, 1, 0, 124) (up to 0.01 allowed)
Greatest relative difference: 4720.0 at index (1, 2, 4, 95) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2, 4, 57, 128]), dtype=torch.float16)
tensor([[[[ 0.0304,  0.4392, -0.0990,  ...,  0.4939, -0.4363,  0.4011],
          [ 0.2438,  0.0595,  0.4102,  ..., -0.1046,  0.4497,  0.2766],
          [ 0.1002,  0.4080, -0.3828,  ..., -0.3049,  0.2368,  0.4004],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[ 0.0304,  0.4392, -0.0990,  ...,  0.4939, -0.4363,  0.4011],
          [ 0.2438,  0.0595,  0.4102,  ..., -0.1046,  0.4497,  0.2766],
          [ 0.1002,  0.4080, -0.3828,  ..., -0.3049,  0.2368,  0.4004],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[ 0.3665, -0.1868, -0.4092,  ..., -0.0911, -0.1533,  0.2690],
          [ 0.3586, -0.0622, -0.3218,  ...,  0.3337, -0.3040, -0.3870],
          [ 0.2649,  0.2217, -0.2209,  ..., -0.0864,  0.0678,  0.0707],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[ 0.3665, -0.1868, -0.4092,  ..., -0.0911, -0.1533,  0.2690],
          [ 0.3586, -0.0622, -0.3218,  ...,  0.3337, -0.3040, -0.3870],
          [ 0.2649,  0.2217, -0.2209,  ..., -0.0864,  0.0678,  0.0707],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]]],


        [[[-0.2888, -0.1148,  0.0049,  ..., -0.4082,  0.3899, -0.2141],
          [-0.1177,  0.1552,  0.4517,  ..., -0.0803, -0.1809,  0.1782],
          [-0.0621,  0.0813, -0.1024,  ..., -0.2051,  0.1016, -0.3562],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[-0.2888, -0.1148,  0.0049,  ..., -0.4082,  0.3899, -0.2141],
          [-0.1177,  0.1552,  0.4517,  ..., -0.0803, -0.1809,  0.1782],
          [-0.0621,  0.0813, -0.1024,  ..., -0.2051,  0.1016, -0.3562],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[-0.2908,  0.4990, -0.4456,  ..., -0.4358, -0.2952, -0.3389],
          [-0.3428, -0.3772,  0.1964,  ..., -0.1666, -0.2014, -0.1881],
          [ 0.2812, -0.0381,  0.3403,  ...,  0.3835, -0.1736,  0.2405],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[-0.2908,  0.4990, -0.4456,  ..., -0.4358, -0.2952, -0.3389],
          [-0.3428, -0.3772,  0.1964,  ..., -0.1666, -0.2014, -0.1881],
          [ 0.2812, -0.0381,  0.3403,  ...,  0.3835, -0.1736,  0.2405],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]]]],
       dtype=torch.float16)
DESIRED: (shape=torch.Size([2, 4, 57, 128]), dtype=torch.float16)
tensor([[[[ 0.0304,  0.4392, -0.0990,  ...,  0.4939, -0.4363,  0.4011],
          [ 0.2438,  0.0595,  0.4102,  ..., -0.1046,  0.4497,  0.2766],
          [ 0.1002,  0.4080, -0.3828,  ..., -0.3049,  0.2368,  0.4004],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[ 0.3665, -0.1868, -0.4092,  ..., -0.0911, -0.1533,  0.2690],
          [ 0.3586, -0.0622, -0.3218,  ...,  0.3337, -0.3040, -0.3870],
          [ 0.2649,  0.2217, -0.2209,  ..., -0.0864,  0.0678,  0.0707],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[ 0.0304,  0.4392, -0.0990,  ...,  0.4939, -0.4363,  0.4011],
          [ 0.2438,  0.0595,  0.4102,  ..., -0.1046,  0.4497,  0.2766],
          [ 0.1002,  0.4080, -0.3828,  ..., -0.3049,  0.2368,  0.4004],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[ 0.3665, -0.1868, -0.4092,  ..., -0.0911, -0.1533,  0.2690],
          [ 0.3586, -0.0622, -0.3218,  ...,  0.3337, -0.3040, -0.3870],
          [ 0.2649,  0.2217, -0.2209,  ..., -0.0864,  0.0678,  0.0707],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]]],


        [[[-0.2888, -0.1148,  0.0049,  ..., -0.4082,  0.3899, -0.2141],
          [-0.1177,  0.1552,  0.4517,  ..., -0.0803, -0.1809,  0.1782],
          [-0.0621,  0.0813, -0.1024,  ..., -0.2051,  0.1016, -0.3562],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[-0.2908,  0.4990, -0.4456,  ..., -0.4358, -0.2952, -0.3389],
          [-0.3428, -0.3772,  0.1964,  ..., -0.1666, -0.2014, -0.1881],
          [ 0.2812, -0.0381,  0.3403,  ...,  0.3835, -0.1736,  0.2405],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[-0.2888, -0.1148,  0.0049,  ..., -0.4082,  0.3899, -0.2141],
          [-0.1177,  0.1552,  0.4517,  ..., -0.0803, -0.1809,  0.1782],
          [-0.0621,  0.0813, -0.1024,  ..., -0.2051,  0.1016, -0.3562],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[-0.2908,  0.4990, -0.4456,  ..., -0.4358, -0.2952, -0.3389],
          [-0.3428, -0.3772,  0.1964,  ..., -0.1666, -0.2014, -0.1881],
          [ 0.2812, -0.0381,  0.3403,  ...,  0.3835, -0.1736,  0.2405],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]]]],
       dtype=torch.float16)

2025-06-08 11:44:15.560055 GPU 5 64404 test begin: paddle.incubate.nn.functional.variable_length_memory_efficient_attention(Tensor([2, 8, 107, 96],"float16"), Tensor([2, 8, 107, 96],"float16"), Tensor([2, 8, 107, 96],"float16"), Tensor([2, 1],"int32"), Tensor([2, 1],"int32"), mask=Tensor([2, 1, 4096, 4096],"float16"), scale=0.10206207261596575, )
[accuracy error] paddle.incubate.nn.functional.variable_length_memory_efficient_attention(Tensor([2, 8, 107, 96],"float16"), Tensor([2, 8, 107, 96],"float16"), Tensor([2, 8, 107, 96],"float16"), Tensor([2, 1],"int32"), Tensor([2, 1],"int32"), mask=Tensor([2, 1, 4096, 4096],"float16"), scale=0.10206207261596575, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 60 / 164352 (0.0%)
Greatest absolute difference: 0.021728515625 at index (1, 5, 77, 10) (up to 0.01 allowed)
Greatest relative difference: 0.84814453125 at index (1, 5, 77, 85) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2, 8, 107, 96]), dtype=torch.float16)
tensor([[[[ 4.9438e-01, -6.7993e-02, -2.3279e-01,  ..., -5.3406e-02,
           -2.3193e-01,  2.2351e-01],
          [-2.3999e-01,  1.6858e-01,  2.6660e-01,  ...,  1.2231e-01,
            4.6362e-01,  1.4868e-01],
          [-3.1152e-01, -6.0547e-02,  4.1577e-01,  ..., -3.7744e-01,
            4.7876e-01, -2.5488e-01],
          ...,
          [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  ...,  0.0000e+00,
            0.0000e+00,  0.0000e+00],
          [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  ...,  0.0000e+00,
            0.0000e+00,  0.0000e+00],
          [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  ...,  0.0000e+00,
            0.0000e+00,  0.0000e+00]],

         [[ 4.6729e-01,  3.2520e-01, -3.8477e-01,  ...,  1.4343e-02,
            2.7588e-01,  2.1912e-01],
          [-4.8975e-01,  5.5603e-02,  1.5613e-01,  ..., -2.1655e-01,
            2.1997e-01,  4.6240e-01],
          [ 3.4497e-01,  4.8706e-01,  3.5522e-02,  ..., -9.8450e-02,
            2.9468e-01, -1.3588e-02],
          ...,
          [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  ...,  0.0000e+00,
            0.0000e+00,  0.0000e+00],
          [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  ...,  0.0000e+00,
            0.0000e+00,  0.0000e+00],
          [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  ...,  0.0000e+00,
            0.0000e+00,  0.0000e+00]],

         [[ 1.2732e-01, -1.0541e-01,  8.6060e-02,  ..., -4.8462e-01,
           -2.9370e-01,  7.1472e-02],
          [ 3.9111e-01, -4.7803e-01, -1.6125e-01,  ...,  1.4600e-01,
            2.5269e-01,  3.3936e-01],
          [-1.3257e-01,  4.0405e-01,  5.1666e-02,  ..., -1.8896e-01,
           -2.5366e-01, -1.9507e-01],
          ...,
          [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  ...,  0.0000e+00,
            0.0000e+00,  0.0000e+00],
          [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  ...,  0.0000e+00,
            0.0000e+00,  0.0000e+00],
          [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  ...,  0.0000e+00,
            0.0000e+00,  0.0000e+00]],

         ...,

         [[ 1.7993e-01,  1.6772e-01, -1.1542e-01,  ...,  4.7876e-01,
            8.5144e-02, -2.3389e-01],
          [ 2.6294e-01, -8.3923e-02, -2.9492e-01,  ...,  2.4805e-01,
           -4.2017e-01, -1.9745e-02],
          [-4.0991e-01, -2.8101e-01,  1.4062e-01,  ...,  2.1875e-01,
           -2.9370e-01, -3.2422e-01],
          ...,
          [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  ...,  0.0000e+00,
            0.0000e+00,  0.0000e+00],
          [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  ...,  0.0000e+00,
            0.0000e+00,  0.0000e+00],
          [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  ...,  0.0000e+00,
            0.0000e+00,  0.0000e+00]],

         [[-1.4160e-01, -7.8278e-03, -1.3538e-01,  ..., -4.6631e-01,
           -3.7769e-01,  4.2236e-01],
          [ 2.4060e-01,  3.4027e-02, -2.8418e-01,  ...,  4.1064e-01,
           -8.5266e-02,  3.9160e-01],
          [-2.5366e-01, -3.7427e-01, -3.3252e-01,  ...,  6.3293e-02,
            2.7563e-01, -2.8101e-01],
          ...,
          [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  ...,  0.0000e+00,
            0.0000e+00,  0.0000e+00],
          [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  ...,  0.0000e+00,
            0.0000e+00,  0.0000e+00],
          [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  ...,  0.0000e+00,
            0.0000e+00,  0.0000e+00]],

         [[ 4.0918e-01,  3.9600e-01,  1.4473e-02,  ...,  4.1333e-01,
           -2.3352e-01,  3.1952e-02],
          [ 3.8867e-01,  1.4172e-01, -3.4302e-01,  ..., -2.0227e-01,
            4.2755e-02,  3.6670e-01],
          [-2.2803e-01,  2.7588e-01,  3.3032e-01,  ...,  7.3975e-02,
            4.0649e-01,  2.3962e-01],
          ...,
          [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  ...,  0.0000e+00,
            0.0000e+00,  0.0000e+00],
          [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  ...,  0.0000e+00,
            0.0000e+00,  0.0000e+00],
          [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  ...,  0.0000e+00,
            0.0000e+00,  0.0000e+00]]],


        [[[ 3.6719e-01,  3.0502e-02,  1.3708e-01,  ...,  4.7266e-01,
           -2.8442e-01, -1.5576e-01],
          [ 3.6035e-01, -2.6367e-01,  3.7769e-01,  ...,  2.9834e-01,
            4.7705e-01,  3.2666e-01],
          [ 3.0957e-01,  4.3872e-01,  3.8916e-01,  ..., -4.4702e-01,
            3.1445e-01, -3.7183e-01],
          ...,
          [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  ...,  0.0000e+00,
            0.0000e+00,  0.0000e+00],
          [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  ...,  0.0000e+00,
            0.0000e+00,  0.0000e+00],
          [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  ...,  0.0000e+00,
            0.0000e+00,  0.0000e+00]],

         [[-9.0027e-02, -2.1765e-01,  1.9238e-01,  ...,  3.3838e-01,
            3.3569e-01,  2.7985e-02],
          [ 2.1631e-01, -4.8413e-01,  3.4668e-01,  ..., -3.9185e-01,
           -3.7891e-01, -3.5791e-01],
          [ 1.1993e-01,  4.9365e-01,  4.7089e-02,  ..., -1.4636e-01,
           -4.1724e-01,  2.2461e-01],
          ...,
          [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  ...,  0.0000e+00,
            0.0000e+00,  0.0000e+00],
          [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  ...,  0.0000e+00,
            0.0000e+00,  0.0000e+00],
          [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  ...,  0.0000e+00,
            0.0000e+00,  0.0000e+00]],

         [[-4.4098e-02, -6.4468e-03,  1.7822e-02,  ..., -3.2495e-01,
           -2.1252e-01,  3.9355e-01],
          [-3.8647e-01, -4.9316e-01, -3.3496e-01,  ..., -3.6987e-02,
            2.9883e-01, -3.7402e-01],
          [-5.8167e-02, -2.5195e-01,  3.0273e-01,  ...,  1.9360e-01,
           -6.9466e-03,  3.0701e-02],
          ...,
          [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  ...,  0.0000e+00,
            0.0000e+00,  0.0000e+00],
          [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  ...,  0.0000e+00,
            0.0000e+00,  0.0000e+00],
          [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  ...,  0.0000e+00,
            0.0000e+00,  0.0000e+00]],

         ...,

         [[-3.4155e-01,  3.1885e-01, -4.9463e-01,  ..., -4.3872e-01,
           -9.6008e-02,  9.1370e-02],
          [ 1.3025e-01,  1.1322e-01,  1.7761e-01,  ...,  9.6359e-03,
            4.9561e-02, -1.4209e-01],
          [ 1.9055e-01,  1.1334e-01,  2.6636e-01,  ..., -4.6112e-02,
           -3.1177e-01, -5.0110e-02],
          ...,
          [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  ...,  0.0000e+00,
            0.0000e+00,  0.0000e+00],
          [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  ...,  0.0000e+00,
            0.0000e+00,  0.0000e+00],
          [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  ...,  0.0000e+00,
            0.0000e+00,  0.0000e+00]],

         [[-3.7170e-02, -2.1155e-01,  3.6926e-02,  ...,  2.2602e-03,
            5.7709e-02, -1.6736e-01],
          [ 4.3121e-02,  3.3447e-02, -1.3647e-01,  ...,  8.6975e-03,
            4.3604e-01,  4.7339e-01],
          [-3.2324e-01, -9.5901e-03, -1.2695e-01,  ..., -1.9214e-01,
            3.0981e-01, -3.0615e-01],
          ...,
          [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  ...,  0.0000e+00,
            0.0000e+00,  0.0000e+00],
          [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  ...,  0.0000e+00,
            0.0000e+00,  0.0000e+00],
          [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  ...,  0.0000e+00,
            0.0000e+00,  0.0000e+00]],

         [[-7.7454e-02,  2.3877e-01, -4.4312e-01,  ..., -3.9673e-01,
            2.6855e-01,  2.4036e-01],
          [ 4.2358e-02,  3.5205e-01,  1.3672e-01,  ...,  1.2732e-01,
            3.4277e-01, -3.8867e-01],
          [ 4.7070e-01, -2.1194e-02,  3.5370e-02,  ..., -3.1860e-01,
           -1.8537e-05, -1.5356e-01],
          ...,
          [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  ...,  0.0000e+00,
            0.0000e+00,  0.0000e+00],
          [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  ...,  0.0000e+00,
            0.0000e+00,  0.0000e+00],
          [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  ...,  0.0000e+00,
            0.0000e+00,  0.0000e+00]]]], dtype=torch.float16)
DESIRED: (shape=torch.Size([2, 8, 107, 96]), dtype=torch.float16)
tensor([[[[ 4.9463e-01, -6.7932e-02, -2.3279e-01,  ..., -5.3406e-02,
           -2.3193e-01,  2.2351e-01],
          [-2.3999e-01,  1.6858e-01,  2.6660e-01,  ...,  1.2231e-01,
            4.6362e-01,  1.4868e-01],
          [-3.1152e-01, -6.0547e-02,  4.1577e-01,  ..., -3.7744e-01,
            4.7876e-01, -2.5488e-01],
          ...,
          [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  ...,  0.0000e+00,
            0.0000e+00,  0.0000e+00],
          [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  ...,  0.0000e+00,
            0.0000e+00,  0.0000e+00],
          [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  ...,  0.0000e+00,
            0.0000e+00,  0.0000e+00]],

         [[ 4.6729e-01,  3.2520e-01, -3.8477e-01,  ...,  1.4351e-02,
            2.7588e-01,  2.1912e-01],
          [-4.8975e-01,  5.5603e-02,  1.5613e-01,  ..., -2.1655e-01,
            2.1997e-01,  4.6240e-01],
          [ 3.4497e-01,  4.8706e-01,  3.5522e-02,  ..., -9.8450e-02,
            2.9468e-01, -1.3588e-02],
          ...,
          [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  ...,  0.0000e+00,
            0.0000e+00,  0.0000e+00],
          [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  ...,  0.0000e+00,
            0.0000e+00,  0.0000e+00],
          [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  ...,  0.0000e+00,
            0.0000e+00,  0.0000e+00]],

         [[ 1.2732e-01, -1.0541e-01,  8.6060e-02,  ..., -4.8462e-01,
           -2.9370e-01,  7.1533e-02],
          [ 3.9111e-01, -4.7803e-01, -1.6125e-01,  ...,  1.4600e-01,
            2.5269e-01,  3.3936e-01],
          [-1.3257e-01,  4.0405e-01,  5.1666e-02,  ..., -1.8896e-01,
           -2.5366e-01, -1.9507e-01],
          ...,
          [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  ...,  0.0000e+00,
            0.0000e+00,  0.0000e+00],
          [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  ...,  0.0000e+00,
            0.0000e+00,  0.0000e+00],
          [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  ...,  0.0000e+00,
            0.0000e+00,  0.0000e+00]],

         ...,

         [[ 1.7993e-01,  1.6772e-01, -1.1536e-01,  ...,  4.7900e-01,
            8.5205e-02, -2.3376e-01],
          [ 2.6294e-01, -8.3923e-02, -2.9492e-01,  ...,  2.4805e-01,
           -4.2017e-01, -1.9745e-02],
          [-4.0991e-01, -2.8101e-01,  1.4062e-01,  ...,  2.1875e-01,
           -2.9370e-01, -3.2422e-01],
          ...,
          [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  ...,  0.0000e+00,
            0.0000e+00,  0.0000e+00],
          [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  ...,  0.0000e+00,
            0.0000e+00,  0.0000e+00],
          [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  ...,  0.0000e+00,
            0.0000e+00,  0.0000e+00]],

         [[-1.4160e-01, -7.8049e-03, -1.3525e-01,  ..., -4.6631e-01,
           -3.7769e-01,  4.2236e-01],
          [ 2.4060e-01,  3.4027e-02, -2.8418e-01,  ...,  4.1064e-01,
           -8.5266e-02,  3.9160e-01],
          [-2.5366e-01, -3.7427e-01, -3.3252e-01,  ...,  6.3293e-02,
            2.7563e-01, -2.8101e-01],
          ...,
          [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  ...,  0.0000e+00,
            0.0000e+00,  0.0000e+00],
          [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  ...,  0.0000e+00,
            0.0000e+00,  0.0000e+00],
          [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  ...,  0.0000e+00,
            0.0000e+00,  0.0000e+00]],

         [[ 4.0894e-01,  3.9575e-01,  1.4465e-02,  ...,  4.1333e-01,
           -2.3352e-01,  3.1830e-02],
          [ 3.8867e-01,  1.4172e-01, -3.4302e-01,  ..., -2.0227e-01,
            4.2755e-02,  3.6670e-01],
          [-2.2803e-01,  2.7588e-01,  3.3032e-01,  ...,  7.3975e-02,
            4.0649e-01,  2.3962e-01],
          ...,
          [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  ...,  0.0000e+00,
            0.0000e+00,  0.0000e+00],
          [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  ...,  0.0000e+00,
            0.0000e+00,  0.0000e+00],
          [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  ...,  0.0000e+00,
            0.0000e+00,  0.0000e+00]]],


        [[[ 3.6719e-01,  3.0502e-02,  1.3708e-01,  ...,  4.7266e-01,
           -2.8442e-01, -1.5576e-01],
          [ 3.6035e-01, -2.6367e-01,  3.7769e-01,  ...,  2.9834e-01,
            4.7705e-01,  3.2666e-01],
          [ 3.0957e-01,  4.3872e-01,  3.8916e-01,  ..., -4.4702e-01,
            3.1445e-01, -3.7183e-01],
          ...,
          [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  ...,  0.0000e+00,
            0.0000e+00,  0.0000e+00],
          [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  ...,  0.0000e+00,
            0.0000e+00,  0.0000e+00],
          [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  ...,  0.0000e+00,
            0.0000e+00,  0.0000e+00]],

         [[-9.0027e-02, -2.1765e-01,  1.9238e-01,  ...,  3.3838e-01,
            3.3569e-01,  2.7985e-02],
          [ 2.1631e-01, -4.8413e-01,  3.4668e-01,  ..., -3.9185e-01,
           -3.7891e-01, -3.5791e-01],
          [ 1.1993e-01,  4.9365e-01,  4.7089e-02,  ..., -1.4636e-01,
           -4.1724e-01,  2.2461e-01],
          ...,
          [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  ...,  0.0000e+00,
            0.0000e+00,  0.0000e+00],
          [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  ...,  0.0000e+00,
            0.0000e+00,  0.0000e+00],
          [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  ...,  0.0000e+00,
            0.0000e+00,  0.0000e+00]],

         [[-4.4098e-02, -6.4468e-03,  1.7822e-02,  ..., -3.2495e-01,
           -2.1252e-01,  3.9355e-01],
          [-3.8647e-01, -4.9316e-01, -3.3496e-01,  ..., -3.6987e-02,
            2.9883e-01, -3.7402e-01],
          [-5.8167e-02, -2.5195e-01,  3.0273e-01,  ...,  1.9360e-01,
           -6.9466e-03,  3.0701e-02],
          ...,
          [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  ...,  0.0000e+00,
            0.0000e+00,  0.0000e+00],
          [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  ...,  0.0000e+00,
            0.0000e+00,  0.0000e+00],
          [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  ...,  0.0000e+00,
            0.0000e+00,  0.0000e+00]],

         ...,

         [[-3.4155e-01,  3.1885e-01, -4.9463e-01,  ..., -4.3872e-01,
           -9.6008e-02,  9.1370e-02],
          [ 1.3025e-01,  1.1322e-01,  1.7761e-01,  ...,  9.6359e-03,
            4.9561e-02, -1.4209e-01],
          [ 1.9055e-01,  1.1334e-01,  2.6636e-01,  ..., -4.6112e-02,
           -3.1177e-01, -5.0110e-02],
          ...,
          [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  ...,  0.0000e+00,
            0.0000e+00,  0.0000e+00],
          [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  ...,  0.0000e+00,
            0.0000e+00,  0.0000e+00],
          [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  ...,  0.0000e+00,
            0.0000e+00,  0.0000e+00]],

         [[-3.7170e-02, -2.1155e-01,  3.6926e-02,  ...,  2.2602e-03,
            5.7709e-02, -1.6736e-01],
          [ 4.3121e-02,  3.3447e-02, -1.3647e-01,  ...,  8.6975e-03,
            4.3604e-01,  4.7339e-01],
          [-3.2324e-01, -9.5901e-03, -1.2695e-01,  ..., -1.9214e-01,
            3.0981e-01, -3.0615e-01],
          ...,
          [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  ...,  0.0000e+00,
            0.0000e+00,  0.0000e+00],
          [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  ...,  0.0000e+00,
            0.0000e+00,  0.0000e+00],
          [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  ...,  0.0000e+00,
            0.0000e+00,  0.0000e+00]],

         [[-7.7454e-02,  2.3877e-01, -4.4312e-01,  ..., -3.9673e-01,
            2.6855e-01,  2.4036e-01],
          [ 4.2358e-02,  3.5205e-01,  1.3672e-01,  ...,  1.2732e-01,
            3.4277e-01, -3.8867e-01],
          [ 4.7070e-01, -2.1194e-02,  3.5370e-02,  ..., -3.1860e-01,
           -1.8537e-05, -1.5356e-01],
          ...,
          [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  ...,  0.0000e+00,
            0.0000e+00,  0.0000e+00],
          [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  ...,  0.0000e+00,
            0.0000e+00,  0.0000e+00],
          [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  ...,  0.0000e+00,
            0.0000e+00,  0.0000e+00]]]], dtype=torch.float16)

2025-06-08 11:44:17.084106 GPU 5 64407 test begin: paddle.incubate.nn.functional.variable_length_memory_efficient_attention(Tensor([2, 8, 110, 96],"float16"), Tensor([2, 8, 110, 96],"float16"), Tensor([2, 8, 110, 96],"float16"), Tensor([2, 1],"int32"), Tensor([2, 1],"int32"), mask=Tensor([2, 1, 4096, 4096],"float16"), scale=0.10206207261596575, )
[accuracy error] paddle.incubate.nn.functional.variable_length_memory_efficient_attention(Tensor([2, 8, 110, 96],"float16"), Tensor([2, 8, 110, 96],"float16"), Tensor([2, 8, 110, 96],"float16"), Tensor([2, 1],"int32"), Tensor([2, 1],"int32"), mask=Tensor([2, 1, 4096, 4096],"float16"), scale=0.10206207261596575, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 33366 / 168960 (19.7%)
Greatest absolute difference: 0.5 at index (0, 0, 105, 36) (up to 0.01 allowed)
Greatest relative difference: inf at index (0, 0, 61, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2, 8, 110, 96]), dtype=torch.float16)
tensor([[[[-0.4324, -0.4697,  0.0648,  ...,  0.3982, -0.2301, -0.0732],
          [ 0.4424,  0.3215, -0.4019,  ..., -0.1300, -0.1835, -0.3501],
          [ 0.0713,  0.2798, -0.3362,  ..., -0.1738,  0.3186, -0.0972],
          ...,
          [ 0.0586, -0.4421,  0.4517,  ..., -0.4331,  0.0787, -0.4326],
          [ 0.3020,  0.2615,  0.3333,  ...,  0.1580, -0.3799, -0.3728],
          [-0.1153, -0.3801,  0.0675,  ...,  0.4863, -0.4412, -0.4595]],

         [[-0.0891, -0.3135,  0.4839,  ..., -0.1115,  0.3108,  0.3196],
          [-0.3538, -0.4724,  0.0275,  ..., -0.2008,  0.2035, -0.1139],
          [ 0.4055,  0.2301, -0.3943,  ...,  0.4387,  0.2949, -0.3936],
          ...,
          [-0.2412, -0.3796, -0.1329,  ...,  0.2515, -0.4097,  0.2429],
          [ 0.3340, -0.1077,  0.2374,  ..., -0.1343,  0.4468,  0.2145],
          [-0.1178,  0.0790,  0.4470,  ..., -0.0834,  0.2761,  0.4807]],

         [[-0.1367,  0.2791,  0.1719,  ...,  0.2986,  0.3213,  0.4863],
          [ 0.1017,  0.3325,  0.1543,  ...,  0.1139,  0.1941,  0.1598],
          [ 0.0919,  0.2642,  0.1486,  ...,  0.1818,  0.4629, -0.1611],
          ...,
          [ 0.1421, -0.2013, -0.2396,  ..., -0.3613, -0.3633,  0.3367],
          [ 0.2798, -0.2048,  0.4114,  ..., -0.0893, -0.2952,  0.1588],
          [-0.0668,  0.1019, -0.4138,  ..., -0.4504, -0.4272,  0.4390]],

         ...,

         [[-0.4666,  0.4653, -0.3635,  ..., -0.1680,  0.0342,  0.4446],
          [ 0.3547, -0.0711,  0.4048,  ...,  0.3555,  0.2355, -0.4473],
          [-0.4360,  0.4729, -0.3149,  ..., -0.4551,  0.4365, -0.1705],
          ...,
          [-0.2971,  0.0662, -0.4053,  ...,  0.0152, -0.1804,  0.0190],
          [ 0.3904,  0.1713,  0.3486,  ...,  0.1230, -0.4290, -0.4912],
          [ 0.0671, -0.1809,  0.4482,  ..., -0.2537,  0.3625,  0.0501]],

         [[ 0.1804, -0.3892,  0.2949,  ...,  0.0331,  0.2561,  0.2148],
          [-0.1393, -0.2761,  0.0544,  ...,  0.4771, -0.1635,  0.2993],
          [-0.0706,  0.1942, -0.1896,  ..., -0.1976,  0.4385, -0.0576],
          ...,
          [ 0.2130, -0.2874,  0.1183,  ...,  0.3315,  0.1561, -0.0842],
          [ 0.2402,  0.2542, -0.2007,  ..., -0.3521, -0.2788,  0.3813],
          [-0.0508, -0.3105, -0.3501,  ..., -0.1511,  0.3948,  0.0506]],

         [[ 0.3645, -0.1140,  0.0801,  ...,  0.1429,  0.1004, -0.4585],
          [ 0.4536, -0.1317,  0.3584,  ..., -0.0237,  0.4963, -0.4634],
          [-0.2079, -0.3606, -0.3235,  ...,  0.4487,  0.4482, -0.4810],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]]],


        [[[ 0.4019,  0.1709,  0.1875,  ...,  0.4568,  0.2803, -0.1433],
          [-0.3833,  0.2050, -0.1714,  ...,  0.1823, -0.4900,  0.1663],
          [-0.4990,  0.3479,  0.1877,  ..., -0.1180,  0.0725, -0.2888],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[-0.2072, -0.4419,  0.3962,  ..., -0.3794, -0.2428,  0.3635],
          [-0.2191,  0.1398, -0.0077,  ...,  0.0268,  0.0756,  0.4292],
          [-0.0995, -0.2035,  0.2338,  ...,  0.4497,  0.2881, -0.1416],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[ 0.4548,  0.3970, -0.4807,  ...,  0.2013, -0.0235, -0.4146],
          [ 0.2781,  0.3469,  0.1284,  ..., -0.2252,  0.0946,  0.3169],
          [-0.0630,  0.0583, -0.1058,  ..., -0.0451, -0.4812, -0.4067],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         ...,

         [[-0.4978, -0.2188, -0.2576,  ...,  0.1362, -0.3628,  0.0150],
          [-0.3015,  0.4055,  0.3777,  ...,  0.2832, -0.3787, -0.0990],
          [-0.2444, -0.4705, -0.1868,  ..., -0.4771,  0.3474,  0.2032],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[ 0.3486,  0.3943, -0.2314,  ...,  0.0961, -0.3323, -0.1730],
          [-0.3979, -0.2422, -0.3447,  ..., -0.2949, -0.3179,  0.3728],
          [-0.4233, -0.1595,  0.2240,  ..., -0.3286,  0.0595,  0.2421],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[ 0.2664,  0.1438, -0.4604,  ..., -0.4287,  0.0566,  0.3801],
          [-0.1448,  0.4570, -0.4968,  ...,  0.4656, -0.0760, -0.0835],
          [ 0.0207,  0.2273,  0.1114,  ..., -0.3464, -0.1844,  0.3567],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]]]],
       dtype=torch.float16)
DESIRED: (shape=torch.Size([2, 8, 110, 96]), dtype=torch.float16)
tensor([[[[-0.4324, -0.4697,  0.0648,  ...,  0.3982, -0.2301, -0.0732],
          [ 0.4424,  0.3215, -0.4019,  ..., -0.1300, -0.1835, -0.3501],
          [ 0.0713,  0.2798, -0.3362,  ..., -0.1738,  0.3186, -0.0972],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[-0.0891, -0.3135,  0.4839,  ..., -0.1115,  0.3108,  0.3196],
          [-0.3538, -0.4724,  0.0275,  ..., -0.2008,  0.2035, -0.1139],
          [ 0.4055,  0.2301, -0.3943,  ...,  0.4387,  0.2949, -0.3936],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[-0.1367,  0.2791,  0.1719,  ...,  0.2986,  0.3213,  0.4863],
          [ 0.1017,  0.3325,  0.1543,  ...,  0.1139,  0.1941,  0.1598],
          [ 0.0919,  0.2642,  0.1486,  ...,  0.1818,  0.4629, -0.1611],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         ...,

         [[-0.4666,  0.4653, -0.3635,  ..., -0.1680,  0.0342,  0.4446],
          [ 0.3547, -0.0711,  0.4048,  ...,  0.3555,  0.2355, -0.4473],
          [-0.4360,  0.4729, -0.3149,  ..., -0.4551,  0.4365, -0.1705],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[ 0.1804, -0.3892,  0.2949,  ...,  0.0331,  0.2561,  0.2148],
          [-0.1393, -0.2761,  0.0544,  ...,  0.4771, -0.1635,  0.2993],
          [-0.0706,  0.1942, -0.1896,  ..., -0.1976,  0.4385, -0.0576],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[ 0.3645, -0.1140,  0.0801,  ...,  0.1429,  0.1004, -0.4585],
          [ 0.4536, -0.1317,  0.3584,  ..., -0.0237,  0.4963, -0.4634],
          [-0.2079, -0.3606, -0.3235,  ...,  0.4487,  0.4482, -0.4810],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]]],


        [[[ 0.4019,  0.1709,  0.1875,  ...,  0.4568,  0.2803, -0.1433],
          [-0.3833,  0.2050, -0.1714,  ...,  0.1823, -0.4900,  0.1663],
          [-0.4990,  0.3479,  0.1877,  ..., -0.1180,  0.0725, -0.2888],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[-0.2072, -0.4419,  0.3962,  ..., -0.3794, -0.2428,  0.3635],
          [-0.2191,  0.1398, -0.0077,  ...,  0.0268,  0.0756,  0.4292],
          [-0.0995, -0.2035,  0.2338,  ...,  0.4497,  0.2881, -0.1416],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[ 0.4548,  0.3970, -0.4807,  ...,  0.2013, -0.0235, -0.4146],
          [ 0.2781,  0.3469,  0.1284,  ..., -0.2252,  0.0946,  0.3169],
          [-0.0630,  0.0583, -0.1058,  ..., -0.0451, -0.4812, -0.4067],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         ...,

         [[-0.4978, -0.2188, -0.2576,  ...,  0.1362, -0.3628,  0.0150],
          [-0.3015,  0.4055,  0.3777,  ...,  0.2832, -0.3787, -0.0990],
          [-0.2444, -0.4705, -0.1868,  ..., -0.4771,  0.3474,  0.2032],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[ 0.3486,  0.3943, -0.2314,  ...,  0.0961, -0.3323, -0.1730],
          [-0.3979, -0.2422, -0.3447,  ..., -0.2949, -0.3179,  0.3728],
          [-0.4233, -0.1595,  0.2240,  ..., -0.3286,  0.0595,  0.2421],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[ 0.2664,  0.1438, -0.4604,  ..., -0.4287,  0.0566,  0.3801],
          [-0.1448,  0.4570, -0.4968,  ...,  0.4656, -0.0760, -0.0835],
          [ 0.0207,  0.2273,  0.1114,  ..., -0.3464, -0.1844,  0.3567],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]]]],
       dtype=torch.float16)

2025-06-08 11:44:18.177470 GPU 5 64402 test begin: paddle.incubate.nn.functional.variable_length_memory_efficient_attention(Tensor([2, 8, 111, 96],"float16"), Tensor([2, 8, 239, 96],"float16"), Tensor([2, 8, 239, 96],"float16"), Tensor([2, 1],"int32"), Tensor([2, 1],"int32"), mask=Tensor([2, 1, 4096, 4096],"float16"), scale=0.10206207261596575, )
[accuracy error] paddle.incubate.nn.functional.variable_length_memory_efficient_attention(Tensor([2, 8, 111, 96],"float16"), Tensor([2, 8, 239, 96],"float16"), Tensor([2, 8, 239, 96],"float16"), Tensor([2, 1],"int32"), Tensor([2, 1],"int32"), mask=Tensor([2, 1, 4096, 4096],"float16"), scale=0.10206207261596575, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 201 / 170496 (0.1%)
Greatest absolute difference: 0.034454345703125 at index (0, 0, 44, 89) (up to 0.01 allowed)
Greatest relative difference: 13.1484375 at index (0, 2, 44, 52) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2, 8, 111, 96]), dtype=torch.float16)
tensor([[[[ 0.3601, -0.4346,  0.0675,  ...,  0.0873, -0.2756,  0.1281],
          [-0.1643,  0.1346, -0.3459,  ...,  0.2585, -0.0033,  0.3708],
          [ 0.2006, -0.2390, -0.4304,  ...,  0.1148, -0.4426,  0.1348],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[-0.0974,  0.3242, -0.1073,  ..., -0.0855, -0.0666,  0.0987],
          [ 0.3257, -0.2489, -0.3291,  ..., -0.3994,  0.0437, -0.3530],
          [-0.1242, -0.2118,  0.4197,  ...,  0.0238, -0.4849, -0.4763],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[ 0.3601, -0.2130,  0.3286,  ..., -0.2971,  0.3123, -0.2966],
          [ 0.2097, -0.4387,  0.3462,  ...,  0.1284,  0.4792, -0.3831],
          [-0.1177,  0.4949, -0.0729,  ..., -0.0394,  0.3884, -0.0005],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         ...,

         [[-0.1702,  0.4707,  0.1711,  ..., -0.1813, -0.4272,  0.4080],
          [ 0.3213, -0.1786, -0.2810,  ...,  0.1821,  0.1215,  0.0839],
          [ 0.1519,  0.1849,  0.1938,  ..., -0.4595,  0.1086, -0.4531],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[-0.3777, -0.0891, -0.3135,  ...,  0.0757, -0.2920, -0.4976],
          [-0.2595, -0.1190, -0.3188,  ...,  0.3511, -0.1558,  0.0296],
          [ 0.0613, -0.2605,  0.2019,  ...,  0.3101, -0.1318, -0.2734],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[ 0.0338, -0.2152, -0.3003,  ..., -0.2976,  0.1477, -0.2422],
          [ 0.4275, -0.4629, -0.3457,  ..., -0.1503,  0.2125,  0.0124],
          [ 0.0696,  0.4009, -0.3467,  ...,  0.2278, -0.0617,  0.2732],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]]],


        [[[ 0.3357, -0.0081,  0.3589,  ..., -0.2235,  0.3965,  0.4839],
          [ 0.0206,  0.4006,  0.4773,  ..., -0.1193, -0.0809,  0.3025],
          [ 0.1782,  0.0172, -0.1465,  ..., -0.4666, -0.3721,  0.4543],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[ 0.3625, -0.1705,  0.4866,  ..., -0.0543, -0.4194,  0.4688],
          [-0.3445,  0.0602, -0.1698,  ...,  0.1676, -0.3965,  0.2878],
          [ 0.1670,  0.3096, -0.2642,  ..., -0.3901,  0.3977, -0.4656],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[-0.4243, -0.2220,  0.4568,  ..., -0.3672, -0.3601,  0.3911],
          [-0.1147, -0.4683, -0.1439,  ...,  0.3640,  0.0308, -0.1635],
          [-0.3608,  0.4685, -0.3130,  ...,  0.3916, -0.2532,  0.4756],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         ...,

         [[-0.3196,  0.3513,  0.1771,  ...,  0.1236,  0.3010,  0.3230],
          [ 0.1715,  0.0991,  0.4263,  ..., -0.1534, -0.2363, -0.1655],
          [-0.4946, -0.4451,  0.0553,  ...,  0.2467,  0.1571,  0.2334],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[ 0.2881, -0.1157,  0.2490,  ...,  0.0008, -0.3713,  0.2708],
          [ 0.1647, -0.1082, -0.1125,  ...,  0.3274, -0.3767,  0.1315],
          [-0.1914, -0.0239, -0.1188,  ..., -0.3882, -0.2749,  0.4673],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[ 0.4060,  0.3999, -0.1665,  ...,  0.3596,  0.3105,  0.4636],
          [-0.3240, -0.3318,  0.1848,  ..., -0.3918,  0.0973, -0.1481],
          [ 0.0436,  0.2349, -0.4041,  ...,  0.4651, -0.0143, -0.2756],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]]]],
       dtype=torch.float16)
DESIRED: (shape=torch.Size([2, 8, 111, 96]), dtype=torch.float16)
tensor([[[[ 0.3601, -0.4346,  0.0675,  ...,  0.0873, -0.2756,  0.1281],
          [-0.1643,  0.1346, -0.3459,  ...,  0.2585, -0.0033,  0.3708],
          [ 0.2006, -0.2390, -0.4304,  ...,  0.1148, -0.4426,  0.1348],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[-0.0974,  0.3242, -0.1073,  ..., -0.0855, -0.0666,  0.0987],
          [ 0.3257, -0.2489, -0.3291,  ..., -0.3994,  0.0437, -0.3530],
          [-0.1242, -0.2118,  0.4197,  ...,  0.0238, -0.4849, -0.4763],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[ 0.3601, -0.2130,  0.3286,  ..., -0.2971,  0.3123, -0.2966],
          [ 0.2097, -0.4387,  0.3462,  ...,  0.1284,  0.4792, -0.3831],
          [-0.1177,  0.4949, -0.0729,  ..., -0.0394,  0.3884, -0.0005],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         ...,

         [[-0.1702,  0.4707,  0.1711,  ..., -0.1813, -0.4272,  0.4080],
          [ 0.3213, -0.1786, -0.2810,  ...,  0.1821,  0.1215,  0.0839],
          [ 0.1519,  0.1849,  0.1938,  ..., -0.4595,  0.1086, -0.4531],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[-0.3777, -0.0891, -0.3135,  ...,  0.0757, -0.2920, -0.4976],
          [-0.2595, -0.1190, -0.3188,  ...,  0.3511, -0.1558,  0.0296],
          [ 0.0613, -0.2605,  0.2019,  ...,  0.3101, -0.1318, -0.2734],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[ 0.0338, -0.2152, -0.3003,  ..., -0.2976,  0.1477, -0.2422],
          [ 0.4275, -0.4629, -0.3457,  ..., -0.1503,  0.2125,  0.0124],
          [ 0.0696,  0.4009, -0.3467,  ...,  0.2278, -0.0617,  0.2732],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]]],


        [[[ 0.3357, -0.0081,  0.3589,  ..., -0.2235,  0.3965,  0.4839],
          [ 0.0206,  0.4006,  0.4773,  ..., -0.1193, -0.0809,  0.3025],
          [ 0.1782,  0.0172, -0.1465,  ..., -0.4666, -0.3721,  0.4543],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[ 0.3625, -0.1705,  0.4866,  ..., -0.0543, -0.4194,  0.4688],
          [-0.3445,  0.0602, -0.1698,  ...,  0.1676, -0.3965,  0.2878],
          [ 0.1670,  0.3096, -0.2642,  ..., -0.3901,  0.3977, -0.4656],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[-0.4243, -0.2220,  0.4568,  ..., -0.3672, -0.3601,  0.3911],
          [-0.1147, -0.4683, -0.1439,  ...,  0.3640,  0.0308, -0.1635],
          [-0.3608,  0.4685, -0.3130,  ...,  0.3916, -0.2532,  0.4756],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         ...,

         [[-0.3196,  0.3513,  0.1771,  ...,  0.1236,  0.3010,  0.3230],
          [ 0.1715,  0.0991,  0.4263,  ..., -0.1534, -0.2363, -0.1655],
          [-0.4946, -0.4451,  0.0553,  ...,  0.2467,  0.1571,  0.2334],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[ 0.2881, -0.1157,  0.2490,  ...,  0.0008, -0.3713,  0.2708],
          [ 0.1647, -0.1082, -0.1125,  ...,  0.3274, -0.3767,  0.1315],
          [-0.1914, -0.0239, -0.1188,  ..., -0.3882, -0.2749,  0.4673],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[ 0.4060,  0.3999, -0.1665,  ...,  0.3596,  0.3105,  0.4636],
          [-0.3240, -0.3318,  0.1848,  ..., -0.3918,  0.0973, -0.1481],
          [ 0.0436,  0.2349, -0.4041,  ...,  0.4651, -0.0143, -0.2756],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]]]],
       dtype=torch.float16)

2025-06-08 11:44:18.723863 GPU 5 64404 test begin: paddle.incubate.nn.functional.variable_length_memory_efficient_attention(Tensor([2, 8, 112, 96],"float16"), Tensor([2, 8, 112, 96],"float16"), Tensor([2, 8, 112, 96],"float16"), Tensor([2, 1],"int32"), Tensor([2, 1],"int32"), mask=Tensor([2, 1, 4096, 4096],"float16"), scale=0.10206207261596575, )
[accuracy error] paddle.incubate.nn.functional.variable_length_memory_efficient_attention(Tensor([2, 8, 112, 96],"float16"), Tensor([2, 8, 112, 96],"float16"), Tensor([2, 8, 112, 96],"float16"), Tensor([2, 1],"int32"), Tensor([2, 1],"int32"), mask=Tensor([2, 1, 4096, 4096],"float16"), scale=0.10206207261596575, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 79022 / 172032 (45.9%)
Greatest absolute difference: 0.5 at index (0, 0, 106, 87) (up to 0.01 allowed)
Greatest relative difference: inf at index (0, 0, 74, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2, 8, 112, 96]), dtype=torch.float16)
tensor([[[[ 0.2952,  0.1069,  0.0368,  ..., -0.2595,  0.4268, -0.4329],
          [ 0.1288,  0.2979, -0.0420,  ..., -0.4939, -0.1602, -0.0492],
          [ 0.4197,  0.4651,  0.4485,  ..., -0.2827,  0.0337,  0.0076],
          ...,
          [ 0.3696,  0.4050,  0.0098,  ..., -0.3906, -0.2028,  0.2183],
          [ 0.2384,  0.4724, -0.3582,  ..., -0.1481, -0.3870, -0.0565],
          [ 0.2502,  0.1301, -0.3398,  ...,  0.3208, -0.2573, -0.0233]],

         [[ 0.2284,  0.1592,  0.2091,  ..., -0.1246, -0.2681, -0.1379],
          [-0.4438,  0.2008, -0.2173,  ..., -0.2905, -0.3569, -0.2086],
          [ 0.4651,  0.2546, -0.0931,  ..., -0.0081, -0.0252, -0.1998],
          ...,
          [ 0.4873,  0.3623,  0.1368,  ..., -0.4392, -0.2815, -0.1766],
          [-0.1451, -0.3989,  0.3047,  ..., -0.1686, -0.4697,  0.2313],
          [-0.1296, -0.0206,  0.2476,  ...,  0.2915,  0.3264, -0.1461]],

         [[-0.0338,  0.1838,  0.0364,  ...,  0.1232, -0.0763, -0.1392],
          [ 0.3252, -0.1813, -0.0187,  ...,  0.1602, -0.3257, -0.3228],
          [ 0.1517, -0.1519, -0.2595,  ..., -0.1759,  0.3799,  0.1683],
          ...,
          [-0.3044, -0.3020,  0.3877,  ...,  0.2839,  0.1685, -0.1311],
          [ 0.1932, -0.3113,  0.2903,  ...,  0.0822,  0.0052,  0.1028],
          [ 0.3579,  0.0742,  0.1050,  ..., -0.4492,  0.4504,  0.3496]],

         ...,

         [[ 0.0405,  0.2452,  0.2686,  ...,  0.3438, -0.4070,  0.1884],
          [ 0.1559, -0.1675,  0.1749,  ...,  0.0880,  0.3552, -0.1553],
          [-0.1692, -0.4192,  0.3047,  ..., -0.3054, -0.4172,  0.0616],
          ...,
          [ 0.1603,  0.3342, -0.4165,  ...,  0.3252,  0.2302,  0.2852],
          [-0.2083, -0.3372,  0.0950,  ..., -0.1718,  0.4580, -0.3562],
          [-0.3430, -0.0126, -0.1901,  ...,  0.4360,  0.2917, -0.2847]],

         [[ 0.0813, -0.3625,  0.1451,  ..., -0.2261, -0.3225, -0.1547],
          [ 0.1965, -0.3894,  0.2854,  ...,  0.0760, -0.1199,  0.3909],
          [-0.4907, -0.3813, -0.4971,  ..., -0.1315, -0.3389,  0.1237],
          ...,
          [-0.3755,  0.3647, -0.1031,  ..., -0.2622,  0.4966, -0.3918],
          [ 0.1426,  0.4192,  0.4199,  ..., -0.2441, -0.1658, -0.4309],
          [-0.0895,  0.3313,  0.1987,  ...,  0.3823, -0.4924, -0.3086]],

         [[-0.3855,  0.3870,  0.1350,  ...,  0.1664, -0.3359,  0.1321],
          [ 0.2015,  0.4299, -0.0324,  ...,  0.1907,  0.0737, -0.0923],
          [-0.1790,  0.0108,  0.4480,  ...,  0.1653, -0.4055,  0.2908],
          ...,
          [-0.2849, -0.2188, -0.1086,  ..., -0.3833,  0.4575, -0.0420],
          [ 0.0818,  0.1920,  0.4768,  ...,  0.4810, -0.4443,  0.0617],
          [-0.4043,  0.3442,  0.1733,  ...,  0.2318,  0.0341, -0.3743]]],


        [[[-0.3782, -0.0084,  0.2993,  ...,  0.1040,  0.4980, -0.4272],
          [ 0.2124,  0.0100,  0.3154,  ...,  0.0305,  0.0055, -0.1198],
          [-0.0732,  0.3152,  0.0372,  ..., -0.1411, -0.2344, -0.3381],
          ...,
          [-0.1039, -0.0069,  0.1593,  ..., -0.4009, -0.4595,  0.1267],
          [-0.3813, -0.3525,  0.1588,  ...,  0.2944, -0.0099,  0.1533],
          [-0.3564, -0.1791, -0.3484,  ...,  0.0300, -0.2334, -0.0030]],

         [[ 0.0121,  0.0300, -0.1532,  ...,  0.1772, -0.3540, -0.4722],
          [-0.1194, -0.2698, -0.0527,  ..., -0.4631, -0.2764, -0.0384],
          [-0.0140,  0.1562,  0.2988,  ...,  0.1853,  0.3406, -0.3613],
          ...,
          [-0.2316,  0.1368,  0.1304,  ...,  0.4229, -0.2345,  0.1038],
          [ 0.3804,  0.2437, -0.1193,  ..., -0.3367,  0.2319, -0.2351],
          [-0.3569, -0.2223, -0.1807,  ..., -0.3252,  0.4646, -0.4338]],

         [[ 0.4070, -0.2007, -0.3987,  ...,  0.2598, -0.4888, -0.3774],
          [ 0.3457, -0.2216,  0.1216,  ...,  0.3552,  0.4873, -0.1945],
          [ 0.3018,  0.4014, -0.3704,  ...,  0.4810, -0.0975, -0.0846],
          ...,
          [ 0.3687,  0.0134, -0.1207,  ..., -0.4067,  0.0118,  0.0187],
          [ 0.3083,  0.1367, -0.1080,  ..., -0.1881, -0.0265, -0.0459],
          [-0.0395, -0.4104,  0.1851,  ..., -0.3445,  0.1587, -0.2418]],

         ...,

         [[ 0.3828,  0.4119,  0.4194,  ..., -0.4043, -0.4917,  0.2168],
          [-0.0663, -0.0168,  0.2681,  ...,  0.1381,  0.3669, -0.0043],
          [ 0.3174, -0.4031,  0.0038,  ..., -0.0768, -0.2969, -0.0193],
          ...,
          [-0.2546,  0.3862,  0.4854,  ..., -0.2273, -0.3203, -0.0964],
          [-0.3596,  0.4050,  0.1410,  ...,  0.0858,  0.1332, -0.1575],
          [-0.1056,  0.4675,  0.1302,  ...,  0.1791,  0.3022,  0.4932]],

         [[ 0.0964,  0.3794,  0.1131,  ..., -0.4412, -0.3979, -0.4395],
          [-0.0905, -0.0019,  0.0663,  ..., -0.3352, -0.1699,  0.3965],
          [ 0.1400,  0.2313, -0.0863,  ..., -0.0498,  0.3582, -0.4114],
          ...,
          [-0.3049,  0.2693, -0.4656,  ...,  0.3096, -0.4285, -0.0470],
          [-0.0571, -0.3098, -0.1649,  ..., -0.3843,  0.0601,  0.3206],
          [-0.0068, -0.2450, -0.4666,  ..., -0.2749, -0.3586, -0.0696]],

         [[ 0.1262, -0.0483, -0.4807,  ..., -0.4863,  0.4143,  0.3035],
          [ 0.0162,  0.1522,  0.3962,  ...,  0.0872, -0.0080,  0.1603],
          [ 0.3567,  0.2253, -0.4744,  ...,  0.1591,  0.3809,  0.0575],
          ...,
          [ 0.0199, -0.2354, -0.0242,  ...,  0.1654,  0.4771,  0.1216],
          [-0.0609,  0.3352,  0.0264,  ...,  0.1654, -0.4475, -0.0594],
          [ 0.0621, -0.4460,  0.4822,  ..., -0.3677, -0.1969, -0.4763]]]],
       dtype=torch.float16)
DESIRED: (shape=torch.Size([2, 8, 112, 96]), dtype=torch.float16)
tensor([[[[ 0.2935,  0.1064,  0.0376,  ..., -0.2595,  0.4258, -0.4326],
          [ 0.1288,  0.2979, -0.0420,  ..., -0.4939, -0.1602, -0.0492],
          [ 0.4197,  0.4651,  0.4485,  ..., -0.2827,  0.0337,  0.0076],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[ 0.2281,  0.1593,  0.2091,  ..., -0.1247, -0.2676, -0.1378],
          [-0.4438,  0.2008, -0.2173,  ..., -0.2905, -0.3569, -0.2086],
          [ 0.4651,  0.2546, -0.0931,  ..., -0.0081, -0.0252, -0.1998],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[-0.0360,  0.1852,  0.0358,  ...,  0.1228, -0.0782, -0.1420],
          [ 0.3252, -0.1813, -0.0187,  ...,  0.1602, -0.3257, -0.3228],
          [ 0.1517, -0.1519, -0.2595,  ..., -0.1759,  0.3799,  0.1683],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         ...,

         [[ 0.0405,  0.2451,  0.2688,  ...,  0.3438, -0.4070,  0.1884],
          [ 0.1559, -0.1675,  0.1749,  ...,  0.0880,  0.3552, -0.1553],
          [-0.1692, -0.4192,  0.3047,  ..., -0.3054, -0.4172,  0.0616],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[ 0.0813, -0.3625,  0.1451,  ..., -0.2260, -0.3223, -0.1547],
          [ 0.1965, -0.3894,  0.2854,  ...,  0.0760, -0.1199,  0.3909],
          [-0.4907, -0.3813, -0.4971,  ..., -0.1315, -0.3389,  0.1237],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[-0.3857,  0.3872,  0.1350,  ...,  0.1665, -0.3359,  0.1320],
          [ 0.2015,  0.4299, -0.0324,  ...,  0.1907,  0.0737, -0.0923],
          [-0.1790,  0.0108,  0.4480,  ...,  0.1653, -0.4055,  0.2908],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]]],


        [[[-0.3782, -0.0084,  0.2993,  ...,  0.1040,  0.4980, -0.4272],
          [ 0.2124,  0.0100,  0.3154,  ...,  0.0305,  0.0055, -0.1198],
          [-0.0732,  0.3152,  0.0372,  ..., -0.1411, -0.2344, -0.3381],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[ 0.0121,  0.0300, -0.1532,  ...,  0.1772, -0.3540, -0.4722],
          [-0.1194, -0.2698, -0.0527,  ..., -0.4631, -0.2764, -0.0384],
          [-0.0140,  0.1562,  0.2988,  ...,  0.1853,  0.3406, -0.3613],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[ 0.4070, -0.2007, -0.3987,  ...,  0.2598, -0.4888, -0.3774],
          [ 0.3457, -0.2216,  0.1216,  ...,  0.3552,  0.4873, -0.1945],
          [ 0.3018,  0.4014, -0.3704,  ...,  0.4810, -0.0975, -0.0846],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         ...,

         [[ 0.3828,  0.4119,  0.4194,  ..., -0.4043, -0.4917,  0.2168],
          [-0.0663, -0.0168,  0.2681,  ...,  0.1381,  0.3669, -0.0043],
          [ 0.3174, -0.4031,  0.0038,  ..., -0.0768, -0.2969, -0.0193],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[ 0.0964,  0.3794,  0.1131,  ..., -0.4412, -0.3979, -0.4395],
          [-0.0905, -0.0019,  0.0663,  ..., -0.3352, -0.1699,  0.3965],
          [ 0.1400,  0.2313, -0.0863,  ..., -0.0498,  0.3582, -0.4114],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[ 0.1262, -0.0483, -0.4807,  ..., -0.4863,  0.4143,  0.3035],
          [ 0.0162,  0.1522,  0.3962,  ...,  0.0872, -0.0080,  0.1603],
          [ 0.3567,  0.2253, -0.4744,  ...,  0.1591,  0.3809,  0.0575],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]]]],
       dtype=torch.float16)

2025-06-08 11:44:19.520226 GPU 5 64403 test begin: paddle.incubate.nn.functional.variable_length_memory_efficient_attention(Tensor([2, 8, 79, 96],"float16"), Tensor([2, 8, 207, 96],"float16"), Tensor([2, 8, 207, 96],"float16"), Tensor([2, 1],"int32"), Tensor([2, 1],"int32"), mask=Tensor([2, 1, 4096, 4096],"float16"), scale=0.10206207261596575, )
[accuracy error] paddle.incubate.nn.functional.variable_length_memory_efficient_attention(Tensor([2, 8, 79, 96],"float16"), Tensor([2, 8, 207, 96],"float16"), Tensor([2, 8, 207, 96],"float16"), Tensor([2, 1],"int32"), Tensor([2, 1],"int32"), mask=Tensor([2, 1, 4096, 4096],"float16"), scale=0.10206207261596575, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 63219 / 121344 (52.1%)
Greatest absolute difference: 0.5 at index (0, 0, 53, 85) (up to 0.01 allowed)
Greatest relative difference: inf at index (0, 0, 49, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2, 8, 79, 96]), dtype=torch.float16)
tensor([[[[-0.4194, -0.1103,  0.1566,  ...,  0.3691,  0.3462, -0.0115],
          [-0.1565, -0.3103,  0.2949,  ..., -0.3164, -0.2311,  0.2908],
          [ 0.3464, -0.1450, -0.1047,  ..., -0.3965,  0.1608,  0.3789],
          ...,
          [ 0.2766, -0.4932, -0.0284,  ..., -0.3015,  0.2039,  0.4868],
          [ 0.3391,  0.2148,  0.2296,  ...,  0.0327, -0.3489,  0.1593],
          [-0.0132, -0.1909,  0.1318,  ..., -0.1301, -0.2991, -0.1527]],

         [[ 0.2656, -0.1124,  0.2566,  ...,  0.4182,  0.1664, -0.3762],
          [-0.0754,  0.4417, -0.3994,  ..., -0.3960,  0.1560, -0.4771],
          [ 0.2583, -0.0759, -0.2367,  ..., -0.0951,  0.1193,  0.3770],
          ...,
          [-0.0204, -0.2216,  0.2064,  ...,  0.2588,  0.0451,  0.2729],
          [ 0.1525,  0.4927, -0.2708,  ...,  0.0348, -0.1549,  0.2061],
          [ 0.0887,  0.3481, -0.3511,  ..., -0.4502,  0.4253, -0.4551]],

         [[ 0.3572,  0.3362,  0.1188,  ...,  0.1571,  0.3723, -0.3503],
          [ 0.1538, -0.3303, -0.2715,  ...,  0.1194, -0.4438,  0.2505],
          [ 0.2423,  0.4644,  0.4707,  ...,  0.2893,  0.3301,  0.2764],
          ...,
          [-0.1613, -0.0989, -0.0344,  ...,  0.2460, -0.2367,  0.2966],
          [-0.0150,  0.3872, -0.0285,  ..., -0.2568,  0.3259, -0.0735],
          [ 0.1747, -0.0405, -0.0738,  ...,  0.4814,  0.2048,  0.4236]],

         ...,

         [[-0.0219, -0.0568,  0.0941,  ..., -0.2114, -0.2920,  0.3542],
          [ 0.0500, -0.3953,  0.3245,  ..., -0.3933,  0.1273,  0.2162],
          [-0.1289,  0.4260,  0.0760,  ...,  0.3662,  0.2734,  0.0989],
          ...,
          [-0.2898,  0.4792, -0.3503,  ...,  0.1924, -0.0784, -0.1456],
          [-0.3735, -0.4292, -0.4688,  ...,  0.3650, -0.3176,  0.4753],
          [-0.3640, -0.0646, -0.3889,  ..., -0.4397, -0.3345, -0.0157]],

         [[-0.3530,  0.0021,  0.4768,  ...,  0.0053,  0.3562, -0.0623],
          [-0.3499,  0.4277,  0.2693,  ...,  0.4897, -0.0336,  0.4749],
          [ 0.4067, -0.3291,  0.1594,  ...,  0.3230,  0.1986, -0.4053],
          ...,
          [ 0.3423, -0.4922, -0.3225,  ...,  0.0308,  0.4221,  0.1890],
          [ 0.4160, -0.0771,  0.4766,  ...,  0.4697, -0.1494, -0.0843],
          [-0.0166,  0.1907, -0.5000,  ...,  0.0418, -0.2373, -0.0790]],

         [[-0.1536, -0.2979, -0.4417,  ..., -0.1615,  0.4043, -0.1433],
          [ 0.0419,  0.2935,  0.4106,  ..., -0.0388, -0.4756, -0.0159],
          [-0.4626,  0.0828,  0.3196,  ...,  0.1725,  0.0506, -0.4490],
          ...,
          [ 0.3164, -0.3992, -0.4402,  ...,  0.2480, -0.1048,  0.3713],
          [-0.1364,  0.0484, -0.3201,  ..., -0.3179,  0.4739, -0.2451],
          [-0.2554, -0.1681, -0.3320,  ...,  0.1794, -0.2034, -0.3892]]],


        [[[ 0.4431,  0.4348, -0.1727,  ..., -0.3030,  0.1412, -0.3057],
          [-0.3564,  0.4875,  0.4612,  ..., -0.1818,  0.1439, -0.0044],
          [ 0.0185,  0.2732,  0.2378,  ..., -0.2334,  0.0424, -0.3616],
          ...,
          [-0.4905,  0.2098,  0.3250,  ...,  0.3850,  0.2522, -0.2390],
          [ 0.0080,  0.4185,  0.1595,  ...,  0.2051,  0.3982,  0.4954],
          [ 0.0367, -0.3125,  0.0898,  ...,  0.1104,  0.2546,  0.1218]],

         [[-0.0763,  0.3333, -0.4829,  ..., -0.3850, -0.2842,  0.1295],
          [-0.4199,  0.4565, -0.3381,  ...,  0.4780, -0.1964, -0.1229],
          [-0.4011, -0.4280,  0.2644,  ..., -0.1214, -0.1414,  0.3652],
          ...,
          [ 0.0164,  0.0618, -0.1851,  ..., -0.2771,  0.3816,  0.4114],
          [ 0.4204, -0.0437,  0.0715,  ...,  0.0486, -0.3721, -0.2036],
          [-0.2297,  0.1272,  0.1334,  ...,  0.1748, -0.3076,  0.4919]],

         [[ 0.2727,  0.0390, -0.2673,  ...,  0.3630,  0.0149,  0.2441],
          [ 0.2069,  0.0757,  0.1053,  ...,  0.3010,  0.3481,  0.2114],
          [ 0.0887, -0.3591, -0.2922,  ..., -0.4678,  0.2600,  0.3806],
          ...,
          [ 0.0983,  0.2446, -0.0379,  ...,  0.0472,  0.4731,  0.1571],
          [-0.2213, -0.1085,  0.3223,  ...,  0.0689,  0.0468, -0.4226],
          [-0.2925, -0.4011, -0.2097,  ...,  0.3164,  0.1338, -0.1542]],

         ...,

         [[-0.2532, -0.0936, -0.0276,  ...,  0.1616, -0.2062, -0.0816],
          [-0.2222,  0.1243,  0.3586,  ..., -0.0187, -0.1317, -0.0285],
          [ 0.4382, -0.4395,  0.1833,  ..., -0.1378, -0.4246,  0.2405],
          ...,
          [-0.0580, -0.2654,  0.0039,  ..., -0.4509,  0.3972, -0.1914],
          [-0.1366,  0.3616, -0.0440,  ...,  0.2966, -0.3247,  0.0199],
          [-0.4221, -0.2568, -0.3682,  ...,  0.2104, -0.0876, -0.0270]],

         [[-0.2905,  0.3420,  0.0706,  ..., -0.3237,  0.2549, -0.2620],
          [ 0.3455,  0.1670, -0.2954,  ...,  0.2898,  0.3364,  0.1216],
          [-0.1559,  0.3164, -0.4114,  ...,  0.4363, -0.2367,  0.1182],
          ...,
          [ 0.2156,  0.3611, -0.0801,  ...,  0.4302, -0.0270,  0.0369],
          [-0.3467, -0.0039, -0.2744,  ..., -0.1124,  0.0458,  0.1998],
          [-0.1218,  0.3850, -0.4595,  ..., -0.1909, -0.0870,  0.4580]],

         [[-0.4109,  0.1107, -0.1428,  ...,  0.1236, -0.0879, -0.3643],
          [ 0.4690, -0.2229,  0.1587,  ..., -0.2532, -0.1459, -0.2942],
          [ 0.2612, -0.4968,  0.1616,  ..., -0.4871, -0.4778, -0.4849],
          ...,
          [-0.2656,  0.2986,  0.1812,  ...,  0.0980, -0.1952,  0.3555],
          [-0.4358, -0.2400, -0.1538,  ..., -0.0296, -0.3059,  0.4268],
          [-0.4333,  0.1677,  0.4709,  ..., -0.3740,  0.4756, -0.0208]]]],
       dtype=torch.float16)
DESIRED: (shape=torch.Size([2, 8, 79, 96]), dtype=torch.float16)
tensor([[[[-0.4194, -0.1103,  0.1566,  ...,  0.3691,  0.3462, -0.0115],
          [-0.1565, -0.3103,  0.2949,  ..., -0.3164, -0.2311,  0.2908],
          [ 0.3464, -0.1450, -0.1047,  ..., -0.3965,  0.1608,  0.3789],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[ 0.2656, -0.1124,  0.2566,  ...,  0.4182,  0.1664, -0.3762],
          [-0.0754,  0.4417, -0.3994,  ..., -0.3960,  0.1560, -0.4771],
          [ 0.2583, -0.0759, -0.2367,  ..., -0.0951,  0.1193,  0.3770],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[ 0.3572,  0.3362,  0.1188,  ...,  0.1571,  0.3723, -0.3503],
          [ 0.1538, -0.3303, -0.2715,  ...,  0.1194, -0.4438,  0.2505],
          [ 0.2423,  0.4644,  0.4707,  ...,  0.2893,  0.3301,  0.2764],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         ...,

         [[-0.0219, -0.0568,  0.0941,  ..., -0.2114, -0.2920,  0.3542],
          [ 0.0500, -0.3953,  0.3245,  ..., -0.3933,  0.1273,  0.2162],
          [-0.1289,  0.4260,  0.0760,  ...,  0.3662,  0.2734,  0.0989],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[-0.3530,  0.0021,  0.4768,  ...,  0.0053,  0.3562, -0.0623],
          [-0.3499,  0.4277,  0.2693,  ...,  0.4897, -0.0336,  0.4749],
          [ 0.4067, -0.3291,  0.1594,  ...,  0.3230,  0.1986, -0.4053],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[-0.1536, -0.2979, -0.4417,  ..., -0.1615,  0.4043, -0.1433],
          [ 0.0419,  0.2935,  0.4106,  ..., -0.0388, -0.4756, -0.0159],
          [-0.4626,  0.0828,  0.3196,  ...,  0.1725,  0.0506, -0.4490],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]]],


        [[[ 0.4429,  0.4348, -0.1727,  ..., -0.3030,  0.1411, -0.3057],
          [-0.3564,  0.4875,  0.4612,  ..., -0.1818,  0.1439, -0.0044],
          [ 0.0185,  0.2732,  0.2378,  ..., -0.2334,  0.0424, -0.3616],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[-0.0763,  0.3333, -0.4827,  ..., -0.3850, -0.2839,  0.1295],
          [-0.4199,  0.4565, -0.3381,  ...,  0.4780, -0.1964, -0.1229],
          [-0.4011, -0.4280,  0.2644,  ..., -0.1214, -0.1414,  0.3652],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[ 0.2727,  0.0390, -0.2673,  ...,  0.3628,  0.0149,  0.2440],
          [ 0.2069,  0.0757,  0.1053,  ...,  0.3010,  0.3481,  0.2114],
          [ 0.0887, -0.3591, -0.2922,  ..., -0.4678,  0.2600,  0.3806],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         ...,

         [[-0.2532, -0.0936, -0.0276,  ...,  0.1616, -0.2061, -0.0816],
          [-0.2222,  0.1243,  0.3586,  ..., -0.0187, -0.1317, -0.0285],
          [ 0.4382, -0.4395,  0.1833,  ..., -0.1378, -0.4246,  0.2405],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[-0.2905,  0.3420,  0.0706,  ..., -0.3235,  0.2549, -0.2620],
          [ 0.3455,  0.1670, -0.2954,  ...,  0.2898,  0.3364,  0.1216],
          [-0.1559,  0.3164, -0.4114,  ...,  0.4363, -0.2367,  0.1182],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[-0.4106,  0.1107, -0.1428,  ...,  0.1235, -0.0878, -0.3643],
          [ 0.4690, -0.2229,  0.1587,  ..., -0.2532, -0.1459, -0.2942],
          [ 0.2612, -0.4968,  0.1616,  ..., -0.4871, -0.4778, -0.4849],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]]]],
       dtype=torch.float16)

2025-06-08 11:44:19.523306 GPU 5 64401 test begin: paddle.incubate.nn.functional.variable_length_memory_efficient_attention(Tensor([2, 8, 79, 96],"float16"), Tensor([2, 8, 79, 96],"float16"), Tensor([2, 8, 79, 96],"float16"), Tensor([2, 1],"int32"), Tensor([2, 1],"int32"), mask=Tensor([2, 1, 4096, 4096],"float16"), scale=0.10206207261596575, )
[accuracy error] paddle.incubate.nn.functional.variable_length_memory_efficient_attention(Tensor([2, 8, 79, 96],"float16"), Tensor([2, 8, 79, 96],"float16"), Tensor([2, 8, 79, 96],"float16"), Tensor([2, 1],"int32"), Tensor([2, 1],"int32"), mask=Tensor([2, 1, 4096, 4096],"float16"), scale=0.10206207261596575, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 72177 / 121344 (59.5%)
Greatest absolute difference: 0.5 at index (0, 0, 76, 88) (up to 0.01 allowed)
Greatest relative difference: inf at index (0, 0, 36, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2, 8, 79, 96]), dtype=torch.float16)
tensor([[[[ 0.2832, -0.4329, -0.1318,  ..., -0.3025, -0.3335, -0.2727],
          [ 0.4783,  0.0215,  0.2279,  ..., -0.3442,  0.4741,  0.2070],
          [-0.0947, -0.2189,  0.2825,  ...,  0.4617,  0.1803,  0.2637],
          ...,
          [-0.0690, -0.0206, -0.1532,  ...,  0.4985,  0.0224, -0.4697],
          [-0.4490,  0.4592, -0.3652,  ...,  0.3662,  0.4763,  0.1782],
          [ 0.4226,  0.0757, -0.3630,  ...,  0.1400,  0.4294,  0.4111]],

         [[-0.1661, -0.2993, -0.0174,  ...,  0.4353, -0.4111, -0.2312],
          [ 0.0332, -0.0936,  0.1392,  ...,  0.4431, -0.4299, -0.4756],
          [-0.1633,  0.3005, -0.2937,  ...,  0.1638,  0.0128, -0.2207],
          ...,
          [-0.1693, -0.4170, -0.0401,  ...,  0.2974, -0.0040,  0.0662],
          [ 0.3926, -0.4868, -0.0837,  ...,  0.0943,  0.1863,  0.3342],
          [-0.1331,  0.3149, -0.1443,  ...,  0.0168,  0.3511,  0.2900]],

         [[-0.4595, -0.3889,  0.3660,  ..., -0.2424,  0.4045,  0.1970],
          [-0.3877, -0.2323, -0.1148,  ...,  0.2612, -0.0491, -0.4382],
          [ 0.0903,  0.4082, -0.0446,  ..., -0.2025,  0.0295,  0.3003],
          ...,
          [ 0.2966,  0.2878,  0.0030,  ...,  0.4167,  0.1307, -0.3218],
          [-0.4324, -0.1829, -0.3557,  ...,  0.0953, -0.1147,  0.0792],
          [ 0.0705,  0.1099,  0.2859,  ..., -0.4280,  0.1379, -0.0279]],

         ...,

         [[-0.1632, -0.3870,  0.3850,  ...,  0.1660,  0.2771, -0.1444],
          [-0.1259,  0.0699, -0.2120,  ..., -0.0272, -0.3403, -0.2172],
          [ 0.1970, -0.1105,  0.3091,  ..., -0.4165,  0.2542,  0.2686],
          ...,
          [ 0.3958,  0.0571, -0.4924,  ...,  0.1020, -0.3386,  0.2856],
          [ 0.0894, -0.4473, -0.3306,  ..., -0.2363,  0.2155,  0.4648],
          [-0.4868,  0.4204,  0.3372,  ...,  0.2673, -0.4158,  0.2727]],

         [[-0.2668,  0.1284,  0.0643,  ..., -0.4187,  0.3232,  0.1405],
          [-0.4585,  0.2756, -0.4155,  ..., -0.1681,  0.4033, -0.2139],
          [-0.1813, -0.0150,  0.4041,  ..., -0.0111,  0.0892, -0.2131],
          ...,
          [-0.1223,  0.1840,  0.0961,  ...,  0.1852,  0.3315,  0.1891],
          [-0.2812,  0.2480, -0.1562,  ..., -0.4878, -0.0822, -0.2827],
          [ 0.0090, -0.0764, -0.0200,  ..., -0.0184,  0.0207,  0.2330]],

         [[-0.3748,  0.3369,  0.2996,  ...,  0.4658, -0.2120,  0.2876],
          [ 0.3970, -0.1448, -0.0428,  ..., -0.0378,  0.3440,  0.2026],
          [-0.4473, -0.1438, -0.4004,  ...,  0.0461,  0.0556,  0.2871],
          ...,
          [ 0.2568, -0.1920, -0.2148,  ...,  0.0467,  0.4485,  0.0881],
          [ 0.3594,  0.0030, -0.3374,  ..., -0.3853,  0.4763, -0.1145],
          [-0.1915,  0.4866, -0.4304,  ..., -0.3230,  0.1641, -0.2334]]],


        [[[ 0.2153, -0.1036,  0.3069,  ..., -0.2964,  0.4084, -0.1560],
          [-0.3281, -0.4299,  0.4050,  ...,  0.4272,  0.0632,  0.4746],
          [ 0.2153, -0.1036,  0.3069,  ..., -0.2964,  0.4084, -0.1560],
          ...,
          [-0.1796, -0.2067, -0.3257,  ..., -0.0316, -0.0213, -0.4067],
          [ 0.3904,  0.4312, -0.3057,  ..., -0.3467,  0.4668, -0.3469],
          [ 0.2322, -0.1575,  0.4470,  ..., -0.2164, -0.4578, -0.1825]],

         [[ 0.3997, -0.3962, -0.3076,  ..., -0.1360,  0.2012, -0.3906],
          [-0.4692, -0.4043,  0.3032,  ..., -0.1147, -0.2496,  0.1868],
          [ 0.3997, -0.3962, -0.3076,  ..., -0.1360,  0.2012, -0.3906],
          ...,
          [ 0.1924, -0.0829,  0.1605,  ..., -0.1411,  0.0245, -0.0189],
          [-0.0708, -0.0493, -0.1312,  ..., -0.3433,  0.0341, -0.0445],
          [-0.2593,  0.4551, -0.4033,  ..., -0.4561,  0.2695, -0.1187]],

         [[ 0.2484, -0.1619,  0.4507,  ..., -0.4353,  0.4482, -0.4172],
          [-0.1261, -0.4014, -0.0865,  ...,  0.2776,  0.2690, -0.2966],
          [ 0.2484, -0.1619,  0.4507,  ..., -0.4353,  0.4482, -0.4172],
          ...,
          [-0.1591, -0.2505,  0.4573,  ..., -0.4822,  0.2094,  0.1874],
          [-0.0123, -0.3745, -0.0997,  ..., -0.0841,  0.0755,  0.2026],
          [-0.4690,  0.4983,  0.1504,  ...,  0.1407, -0.2632, -0.1832]],

         ...,

         [[-0.0851, -0.4150,  0.3193,  ..., -0.3774,  0.0872,  0.0178],
          [-0.1034, -0.0150, -0.2460,  ..., -0.4841, -0.1304, -0.2405],
          [-0.0851, -0.4150,  0.3193,  ..., -0.3774,  0.0872,  0.0178],
          ...,
          [-0.0981, -0.2262, -0.1432,  ...,  0.2688,  0.4390,  0.2583],
          [-0.0771,  0.0022,  0.1592,  ...,  0.0622,  0.2781, -0.0512],
          [ 0.0393,  0.0534,  0.4336,  ..., -0.3118,  0.3127,  0.1173]],

         [[ 0.4651,  0.2996,  0.3799,  ..., -0.3845,  0.2124, -0.3269],
          [-0.4958, -0.4089, -0.0851,  ..., -0.1226,  0.2908,  0.3645],
          [ 0.4651,  0.2996,  0.3799,  ..., -0.3845,  0.2124, -0.3269],
          ...,
          [-0.0626,  0.1931, -0.2272,  ..., -0.2981,  0.2034, -0.2549],
          [ 0.4631, -0.4614,  0.4050,  ...,  0.0463, -0.1984,  0.0336],
          [ 0.1982, -0.3386,  0.0276,  ..., -0.4329,  0.1885, -0.2015]],

         [[-0.0367,  0.1069,  0.2937,  ...,  0.3274,  0.1642,  0.3113],
          [-0.3706,  0.3535, -0.2122,  ...,  0.3931,  0.3188, -0.4341],
          [-0.0367,  0.1069,  0.2937,  ...,  0.3274,  0.1642,  0.3113],
          ...,
          [ 0.3108, -0.4507, -0.4954,  ..., -0.1013,  0.0065,  0.2496],
          [-0.3503,  0.1008, -0.0555,  ...,  0.0133,  0.1021,  0.0333],
          [ 0.2502, -0.0552,  0.3860,  ..., -0.3303, -0.0388, -0.1556]]]],
       dtype=torch.float16)
DESIRED: (shape=torch.Size([2, 8, 79, 96]), dtype=torch.float16)
tensor([[[[ 0.2832, -0.4329, -0.1318,  ..., -0.3025, -0.3335, -0.2727],
          [ 0.4783,  0.0215,  0.2279,  ..., -0.3442,  0.4741,  0.2070],
          [-0.0947, -0.2189,  0.2825,  ...,  0.4617,  0.1803,  0.2637],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[-0.1661, -0.2993, -0.0174,  ...,  0.4353, -0.4111, -0.2312],
          [ 0.0332, -0.0936,  0.1392,  ...,  0.4431, -0.4299, -0.4756],
          [-0.1633,  0.3005, -0.2937,  ...,  0.1638,  0.0128, -0.2207],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[-0.4595, -0.3889,  0.3660,  ..., -0.2424,  0.4045,  0.1970],
          [-0.3877, -0.2323, -0.1148,  ...,  0.2612, -0.0491, -0.4382],
          [ 0.0903,  0.4082, -0.0446,  ..., -0.2025,  0.0295,  0.3003],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         ...,

         [[-0.1632, -0.3870,  0.3850,  ...,  0.1660,  0.2771, -0.1444],
          [-0.1259,  0.0699, -0.2120,  ..., -0.0272, -0.3403, -0.2172],
          [ 0.1970, -0.1105,  0.3091,  ..., -0.4165,  0.2542,  0.2686],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[-0.2668,  0.1284,  0.0643,  ..., -0.4187,  0.3232,  0.1405],
          [-0.4585,  0.2756, -0.4155,  ..., -0.1681,  0.4033, -0.2139],
          [-0.1813, -0.0150,  0.4041,  ..., -0.0111,  0.0892, -0.2131],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[-0.3748,  0.3369,  0.2996,  ...,  0.4658, -0.2120,  0.2876],
          [ 0.3970, -0.1448, -0.0428,  ..., -0.0378,  0.3440,  0.2026],
          [-0.4473, -0.1438, -0.4004,  ...,  0.0461,  0.0556,  0.2871],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]]],


        [[[ 0.2153, -0.1036,  0.3069,  ..., -0.2964,  0.4084, -0.1560],
          [-0.3281, -0.4299,  0.4050,  ...,  0.4272,  0.0632,  0.4746],
          [ 0.2153, -0.1036,  0.3069,  ..., -0.2964,  0.4084, -0.1560],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[ 0.3997, -0.3962, -0.3076,  ..., -0.1360,  0.2012, -0.3906],
          [-0.4692, -0.4043,  0.3032,  ..., -0.1147, -0.2496,  0.1868],
          [ 0.3997, -0.3962, -0.3076,  ..., -0.1360,  0.2012, -0.3906],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[ 0.2484, -0.1619,  0.4507,  ..., -0.4353,  0.4482, -0.4172],
          [-0.1261, -0.4014, -0.0865,  ...,  0.2776,  0.2690, -0.2966],
          [ 0.2484, -0.1619,  0.4507,  ..., -0.4353,  0.4482, -0.4172],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         ...,

         [[-0.0851, -0.4150,  0.3193,  ..., -0.3774,  0.0872,  0.0178],
          [-0.1034, -0.0150, -0.2460,  ..., -0.4841, -0.1304, -0.2405],
          [-0.0851, -0.4150,  0.3193,  ..., -0.3774,  0.0872,  0.0178],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[ 0.4651,  0.2996,  0.3799,  ..., -0.3845,  0.2124, -0.3269],
          [-0.4958, -0.4089, -0.0851,  ..., -0.1226,  0.2908,  0.3645],
          [ 0.4651,  0.2996,  0.3799,  ..., -0.3845,  0.2124, -0.3269],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[-0.0367,  0.1069,  0.2937,  ...,  0.3274,  0.1642,  0.3113],
          [-0.3706,  0.3535, -0.2122,  ...,  0.3931,  0.3188, -0.4341],
          [-0.0367,  0.1069,  0.2937,  ...,  0.3274,  0.1642,  0.3113],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]]]],
       dtype=torch.float16)

2025-06-08 11:44:19.544319 GPU 5 64402 test begin: paddle.incubate.nn.functional.variable_length_memory_efficient_attention(Tensor([2, 8, 80, 96],"float16"), Tensor([2, 8, 208, 96],"float16"), Tensor([2, 8, 208, 96],"float16"), Tensor([2, 1],"int32"), Tensor([2, 1],"int32"), mask=Tensor([2, 1, 4096, 4096],"float16"), scale=0.10206207261596575, )
[accuracy error] paddle.incubate.nn.functional.variable_length_memory_efficient_attention(Tensor([2, 8, 80, 96],"float16"), Tensor([2, 8, 208, 96],"float16"), Tensor([2, 8, 208, 96],"float16"), Tensor([2, 1],"int32"), Tensor([2, 1],"int32"), mask=Tensor([2, 1, 4096, 4096],"float16"), scale=0.10206207261596575, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 81445 / 122880 (66.3%)
Greatest absolute difference: 0.5 at index (0, 1, 43, 62) (up to 0.01 allowed)
Greatest relative difference: inf at index (0, 0, 18, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2, 8, 80, 96]), dtype=torch.float16)
tensor([[[[ 0.2299, -0.2324,  0.4263,  ..., -0.4150, -0.1084, -0.2805],
          [ 0.2993, -0.3518, -0.1290,  ...,  0.1930,  0.3020, -0.1355],
          [ 0.0923,  0.4280, -0.3728,  ...,  0.1022, -0.1654,  0.1438],
          ...,
          [-0.1582, -0.4648,  0.0783,  ...,  0.4575,  0.0447,  0.2522],
          [ 0.0498,  0.4038,  0.0746,  ..., -0.4827, -0.1245,  0.1692],
          [ 0.2537,  0.4338,  0.3855,  ..., -0.1570, -0.1172,  0.2505]],

         [[ 0.1396,  0.2366, -0.2167,  ...,  0.4958,  0.0115, -0.1620],
          [ 0.1738, -0.3376,  0.1060,  ..., -0.2969, -0.4966,  0.4243],
          [-0.3374, -0.4028,  0.3892,  ...,  0.1576,  0.4578,  0.3562],
          ...,
          [-0.0569,  0.0923, -0.3953,  ...,  0.0844,  0.1399, -0.2269],
          [-0.0506, -0.0641, -0.2477,  ...,  0.1951,  0.2632, -0.0359],
          [-0.3413,  0.3884,  0.0880,  ..., -0.4526,  0.4048, -0.0654]],

         [[ 0.0243,  0.1691,  0.0439,  ..., -0.3457, -0.2649,  0.4551],
          [ 0.2065,  0.1783,  0.3157,  ...,  0.2084, -0.4524, -0.0651],
          [-0.4792,  0.1329, -0.4172,  ...,  0.0402, -0.1791,  0.2247],
          ...,
          [-0.0886, -0.4250,  0.2559,  ..., -0.3105,  0.1190, -0.2252],
          [-0.2615,  0.4368,  0.3337,  ...,  0.1442, -0.2715, -0.4141],
          [ 0.3884, -0.0699, -0.3855,  ...,  0.1608, -0.0269, -0.2418]],

         ...,

         [[ 0.3723,  0.2230,  0.3591,  ..., -0.1406,  0.4551, -0.3918],
          [-0.1915, -0.0431, -0.4465,  ..., -0.4177,  0.3171,  0.3630],
          [ 0.2139, -0.1953,  0.4504,  ..., -0.4763, -0.1486,  0.0219],
          ...,
          [-0.4431, -0.4558, -0.3286,  ...,  0.0539,  0.4358, -0.3503],
          [-0.3633, -0.0016, -0.1122,  ...,  0.3232, -0.4331, -0.1221],
          [-0.3435, -0.3828, -0.1541,  ..., -0.0047, -0.3225, -0.0989]],

         [[ 0.2834, -0.3220, -0.4570,  ..., -0.1355, -0.0551, -0.0887],
          [ 0.3293, -0.4109,  0.3757,  ..., -0.4893, -0.1477,  0.4080],
          [-0.1620, -0.4749, -0.0309,  ...,  0.2052,  0.1058,  0.0385],
          ...,
          [-0.0975, -0.0045, -0.3044,  ...,  0.3560, -0.3962, -0.4788],
          [ 0.0512, -0.1194,  0.2998,  ..., -0.2471, -0.4524,  0.0739],
          [ 0.1753,  0.4961,  0.3408,  ...,  0.1580, -0.4436,  0.1333]],

         [[-0.2178, -0.0251,  0.0774,  ...,  0.1224, -0.1510,  0.4883],
          [-0.2983, -0.3103,  0.1375,  ...,  0.1224, -0.2350, -0.0673],
          [-0.4036,  0.3013, -0.2686,  ..., -0.1893,  0.2219, -0.1384],
          ...,
          [ 0.1827, -0.3030,  0.3223,  ..., -0.0044, -0.0645,  0.1565],
          [ 0.2747,  0.1918,  0.4382,  ...,  0.4092,  0.0144,  0.1046],
          [ 0.1704,  0.0994,  0.3904,  ...,  0.2603, -0.1532, -0.3083]]],


        [[[-0.4160,  0.2307,  0.0159,  ...,  0.0362,  0.1914, -0.3086],
          [ 0.0551, -0.3862, -0.0789,  ..., -0.4548, -0.3813, -0.4790],
          [ 0.0270, -0.2021,  0.2905,  ...,  0.4536,  0.2155, -0.2817],
          ...,
          [-0.4875, -0.4219,  0.2391,  ...,  0.2186, -0.2688,  0.3743],
          [-0.3086, -0.0837, -0.0204,  ...,  0.3567, -0.3333,  0.2773],
          [-0.2654, -0.0139,  0.2234,  ..., -0.2898, -0.0974,  0.0172]],

         [[ 0.0680,  0.4346, -0.1820,  ..., -0.4399, -0.1967,  0.3628],
          [-0.3618,  0.2825, -0.1764,  ..., -0.1755, -0.0610, -0.4807],
          [-0.2671,  0.4023, -0.1159,  ..., -0.1332, -0.1044, -0.3027],
          ...,
          [ 0.0198,  0.4343, -0.0808,  ..., -0.0842, -0.3757, -0.3674],
          [ 0.3254,  0.2986, -0.1547,  ..., -0.1040, -0.2581, -0.0462],
          [-0.4641, -0.4963, -0.4526,  ..., -0.4731,  0.0243, -0.0088]],

         [[-0.3494, -0.1384,  0.4497,  ...,  0.1604, -0.3691,  0.4988],
          [-0.1091,  0.1437,  0.0179,  ...,  0.2886, -0.0254, -0.1539],
          [-0.4031,  0.3796,  0.0673,  ...,  0.0995,  0.0096, -0.1732],
          ...,
          [ 0.2294,  0.2080, -0.2247,  ...,  0.1843,  0.4651,  0.1560],
          [-0.4661,  0.3372, -0.4343,  ...,  0.4375,  0.1970,  0.3796],
          [-0.2321,  0.1018, -0.3538,  ..., -0.1587, -0.3811,  0.1133]],

         ...,

         [[-0.1630, -0.0586,  0.3027,  ..., -0.0056, -0.2966,  0.4585],
          [ 0.0690,  0.3564,  0.2581,  ...,  0.3730,  0.4810,  0.4727],
          [ 0.0387,  0.3843, -0.3000,  ...,  0.4624, -0.0502, -0.2283],
          ...,
          [-0.2778, -0.0169,  0.4155,  ..., -0.2328,  0.2917, -0.2107],
          [-0.3298,  0.2416, -0.0038,  ..., -0.2301, -0.3191,  0.0555],
          [ 0.3325, -0.3567,  0.1003,  ..., -0.4470, -0.4019,  0.4507]],

         [[ 0.2297, -0.4524,  0.3025,  ..., -0.4158, -0.3467, -0.1267],
          [-0.3906,  0.3318, -0.2090,  ..., -0.0961, -0.3325,  0.0817],
          [-0.2130, -0.1267, -0.4839,  ..., -0.4836, -0.1501,  0.3899],
          ...,
          [-0.1259,  0.3040, -0.3687,  ..., -0.4080, -0.0201, -0.3877],
          [ 0.0649, -0.4761, -0.2771,  ..., -0.3252,  0.2125, -0.3235],
          [ 0.3140, -0.4165, -0.2137,  ...,  0.3887,  0.1705,  0.3940]],

         [[-0.2930,  0.4321,  0.0946,  ..., -0.4387,  0.4937, -0.3540],
          [ 0.1898,  0.4578, -0.0178,  ...,  0.4404,  0.1469,  0.2859],
          [-0.0345, -0.3115,  0.2937,  ..., -0.1877,  0.1170,  0.3633],
          ...,
          [ 0.1013, -0.0468, -0.4214,  ...,  0.0035, -0.2544,  0.4521],
          [ 0.2532, -0.1088,  0.4490,  ..., -0.3562, -0.1042, -0.3875],
          [-0.3000, -0.0116, -0.3757,  ..., -0.3625, -0.1434, -0.1776]]]],
       dtype=torch.float16)
DESIRED: (shape=torch.Size([2, 8, 80, 96]), dtype=torch.float16)
tensor([[[[ 0.2299, -0.2324,  0.4263,  ..., -0.4150, -0.1084, -0.2805],
          [ 0.2993, -0.3518, -0.1290,  ...,  0.1930,  0.3020, -0.1355],
          [ 0.0923,  0.4280, -0.3728,  ...,  0.1022, -0.1654,  0.1438],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[ 0.1396,  0.2366, -0.2167,  ...,  0.4958,  0.0115, -0.1620],
          [ 0.1738, -0.3376,  0.1060,  ..., -0.2969, -0.4966,  0.4243],
          [-0.3374, -0.4028,  0.3892,  ...,  0.1576,  0.4578,  0.3562],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[ 0.0243,  0.1691,  0.0439,  ..., -0.3457, -0.2649,  0.4551],
          [ 0.2065,  0.1783,  0.3157,  ...,  0.2084, -0.4524, -0.0651],
          [-0.4792,  0.1329, -0.4172,  ...,  0.0402, -0.1791,  0.2247],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         ...,

         [[ 0.3723,  0.2230,  0.3591,  ..., -0.1406,  0.4551, -0.3918],
          [-0.1915, -0.0431, -0.4465,  ..., -0.4177,  0.3171,  0.3630],
          [ 0.2139, -0.1953,  0.4504,  ..., -0.4763, -0.1486,  0.0219],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[ 0.2834, -0.3220, -0.4570,  ..., -0.1355, -0.0551, -0.0887],
          [ 0.3293, -0.4109,  0.3757,  ..., -0.4893, -0.1477,  0.4080],
          [-0.1620, -0.4749, -0.0309,  ...,  0.2052,  0.1058,  0.0385],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[-0.2178, -0.0251,  0.0774,  ...,  0.1224, -0.1510,  0.4883],
          [-0.2983, -0.3103,  0.1375,  ...,  0.1224, -0.2350, -0.0673],
          [-0.4036,  0.3013, -0.2686,  ..., -0.1893,  0.2219, -0.1384],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]]],


        [[[-0.4160,  0.2307,  0.0159,  ...,  0.0362,  0.1914, -0.3086],
          [ 0.0551, -0.3862, -0.0789,  ..., -0.4548, -0.3813, -0.4790],
          [ 0.0270, -0.2021,  0.2905,  ...,  0.4536,  0.2155, -0.2817],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[ 0.0680,  0.4346, -0.1820,  ..., -0.4399, -0.1967,  0.3628],
          [-0.3618,  0.2825, -0.1764,  ..., -0.1755, -0.0610, -0.4807],
          [-0.2671,  0.4023, -0.1159,  ..., -0.1332, -0.1044, -0.3027],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[-0.3494, -0.1384,  0.4497,  ...,  0.1604, -0.3691,  0.4988],
          [-0.1091,  0.1437,  0.0179,  ...,  0.2886, -0.0254, -0.1539],
          [-0.4031,  0.3796,  0.0673,  ...,  0.0995,  0.0096, -0.1732],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         ...,

         [[-0.1630, -0.0586,  0.3027,  ..., -0.0056, -0.2966,  0.4585],
          [ 0.0690,  0.3564,  0.2581,  ...,  0.3730,  0.4810,  0.4727],
          [ 0.0387,  0.3843, -0.3000,  ...,  0.4624, -0.0502, -0.2283],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[ 0.2297, -0.4524,  0.3025,  ..., -0.4158, -0.3467, -0.1267],
          [-0.3906,  0.3318, -0.2090,  ..., -0.0961, -0.3325,  0.0817],
          [-0.2130, -0.1267, -0.4839,  ..., -0.4836, -0.1501,  0.3899],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[-0.2930,  0.4321,  0.0946,  ..., -0.4387,  0.4937, -0.3540],
          [ 0.1898,  0.4578, -0.0178,  ...,  0.4404,  0.1469,  0.2859],
          [-0.0345, -0.3115,  0.2937,  ..., -0.1877,  0.1170,  0.3633],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]]]],
       dtype=torch.float16)

2025-06-08 11:44:19.784657 GPU 5 64404 test begin: paddle.incubate.nn.functional.variable_length_memory_efficient_attention(Tensor([2, 8, 80, 96],"float16"), Tensor([2, 8, 80, 96],"float16"), Tensor([2, 8, 80, 96],"float16"), Tensor([2, 1],"int32"), Tensor([2, 1],"int32"), mask=Tensor([2, 1, 4096, 4096],"float16"), scale=0.10206207261596575, )
[accuracy error] paddle.incubate.nn.functional.variable_length_memory_efficient_attention(Tensor([2, 8, 80, 96],"float16"), Tensor([2, 8, 80, 96],"float16"), Tensor([2, 8, 80, 96],"float16"), Tensor([2, 1],"int32"), Tensor([2, 1],"int32"), mask=Tensor([2, 1, 4096, 4096],"float16"), scale=0.10206207261596575, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 66984 / 122880 (54.5%)
Greatest absolute difference: 0.5 at index (0, 0, 52, 50) (up to 0.01 allowed)
Greatest relative difference: inf at index (0, 0, 28, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2, 8, 80, 96]), dtype=torch.float16)
tensor([[[[ 0.0400, -0.4695, -0.0559,  ...,  0.1313, -0.1960, -0.0442],
          [ 0.4265, -0.4666, -0.3608,  ...,  0.3459,  0.1545, -0.3521],
          [ 0.3958,  0.0210, -0.2510,  ..., -0.0179, -0.3813,  0.1344],
          ...,
          [ 0.1941,  0.3923, -0.2068,  ..., -0.2368,  0.2335,  0.4189],
          [ 0.1089,  0.2469, -0.4417,  ..., -0.1249,  0.2336,  0.0049],
          [-0.4675, -0.0115,  0.1021,  ..., -0.3621, -0.4729, -0.0124]],

         [[-0.0767,  0.0589, -0.0298,  ...,  0.2646,  0.1381,  0.0520],
          [ 0.0490, -0.4795,  0.4795,  ...,  0.1832,  0.0543,  0.1220],
          [ 0.3230, -0.3091, -0.2201,  ...,  0.3394,  0.3237, -0.0449],
          ...,
          [ 0.1769, -0.2474, -0.3430,  ..., -0.0594,  0.3723,  0.1046],
          [-0.2749,  0.2849,  0.3557,  ..., -0.2681,  0.2069,  0.3523],
          [ 0.2466,  0.3494, -0.2534,  ...,  0.1658,  0.0627,  0.3816]],

         [[ 0.1041,  0.4043, -0.1678,  ..., -0.3457,  0.4202,  0.0779],
          [ 0.4460, -0.4453, -0.2438,  ...,  0.1809, -0.4395, -0.1663],
          [ 0.1501,  0.1166, -0.4307,  ..., -0.0607,  0.4758,  0.3252],
          ...,
          [ 0.2532, -0.0328,  0.2927,  ...,  0.0676,  0.2659, -0.3860],
          [-0.3733,  0.3650, -0.3977,  ...,  0.1719,  0.2988,  0.2278],
          [-0.1405,  0.2145, -0.4333,  ..., -0.1055, -0.3772,  0.1349]],

         ...,

         [[ 0.4634, -0.0925,  0.4038,  ..., -0.3040,  0.3967, -0.4385],
          [-0.0186, -0.2744, -0.0592,  ..., -0.0955, -0.1584,  0.3247],
          [ 0.1156,  0.1154,  0.2274,  ..., -0.0602,  0.2581, -0.2271],
          ...,
          [ 0.1971, -0.1387,  0.3413,  ..., -0.2725,  0.4622,  0.0367],
          [ 0.2559, -0.0569,  0.2024,  ..., -0.3445, -0.2344,  0.3381],
          [-0.1881,  0.1260,  0.0353,  ...,  0.2031, -0.0706, -0.2169]],

         [[-0.1816, -0.0867, -0.1367,  ..., -0.1145,  0.3682,  0.1914],
          [-0.2246,  0.2233, -0.1121,  ..., -0.1498,  0.0944, -0.0210],
          [-0.1166,  0.1918,  0.0476,  ...,  0.1536, -0.2262,  0.3577],
          ...,
          [ 0.2284,  0.2629,  0.4114,  ...,  0.3870, -0.1006,  0.1719],
          [-0.1699, -0.2363, -0.1332,  ..., -0.0139,  0.0059, -0.4094],
          [-0.0638, -0.1440,  0.0286,  ...,  0.0380, -0.0142, -0.3633]],

         [[-0.0231, -0.2211, -0.2937,  ..., -0.3320, -0.2037, -0.3127],
          [ 0.0017,  0.1804, -0.1543,  ..., -0.3850, -0.1238,  0.1917],
          [ 0.3032, -0.0822, -0.4893,  ...,  0.2266, -0.0088,  0.3408],
          ...,
          [ 0.1581, -0.0507, -0.2629,  ...,  0.1339,  0.3494,  0.1214],
          [-0.3364,  0.3945,  0.2993,  ...,  0.4541, -0.0851,  0.2081],
          [ 0.2832, -0.2556,  0.3530,  ...,  0.1881,  0.1760,  0.1918]]],


        [[[-0.4590, -0.0266, -0.4910,  ...,  0.2690,  0.4868,  0.3560],
          [-0.4048, -0.0023, -0.4875,  ..., -0.0891, -0.1189, -0.1611],
          [-0.4312, -0.2081, -0.0617,  ...,  0.1891,  0.4243, -0.1298],
          ...,
          [-0.2128,  0.3433,  0.3206,  ..., -0.4756, -0.1643, -0.4758],
          [ 0.2183,  0.3171,  0.4578,  ..., -0.1569,  0.0627,  0.0869],
          [-0.0009,  0.3301,  0.1001,  ..., -0.0517, -0.2781, -0.0242]],

         [[-0.3953,  0.4102, -0.2404,  ...,  0.1481,  0.4375,  0.2340],
          [ 0.1387,  0.2491, -0.0958,  ...,  0.3997,  0.4397,  0.2188],
          [ 0.2290,  0.1570, -0.3767,  ..., -0.0457,  0.0712,  0.2971],
          ...,
          [ 0.4485, -0.2271,  0.3928,  ..., -0.4951,  0.0696, -0.1356],
          [-0.0351,  0.0281, -0.0704,  ...,  0.3337,  0.1273,  0.0712],
          [-0.1001,  0.4832,  0.3757,  ..., -0.1281,  0.2871, -0.2439]],

         [[ 0.1458,  0.2321,  0.2003,  ...,  0.4194, -0.1118,  0.4465],
          [-0.3108, -0.4360,  0.2375,  ...,  0.4851,  0.4082, -0.2827],
          [ 0.2527, -0.3774,  0.3506,  ...,  0.4824, -0.1389,  0.4895],
          ...,
          [ 0.2642,  0.2942, -0.2388,  ...,  0.0983,  0.3054, -0.0986],
          [ 0.1379,  0.1100,  0.4438,  ...,  0.2225,  0.4143,  0.4089],
          [ 0.2021,  0.4146, -0.4192,  ..., -0.0699,  0.2751,  0.4363]],

         ...,

         [[-0.1125, -0.1300, -0.0855,  ..., -0.1849, -0.1057, -0.3965],
          [ 0.4290, -0.1262,  0.1567,  ..., -0.1354, -0.3179, -0.2258],
          [ 0.2651, -0.3560, -0.0467,  ..., -0.1235,  0.3721, -0.2191],
          ...,
          [-0.1832, -0.2466,  0.0824,  ..., -0.4048, -0.2585, -0.1353],
          [ 0.4639, -0.3640, -0.3184,  ...,  0.3105,  0.2507, -0.4197],
          [-0.3262, -0.4915, -0.2188,  ...,  0.1141, -0.3069, -0.4207]],

         [[-0.1465, -0.0836,  0.0549,  ...,  0.1195,  0.0747, -0.0740],
          [-0.0693, -0.4343, -0.1730,  ...,  0.3049,  0.4575, -0.1840],
          [ 0.0101, -0.2637,  0.2588,  ..., -0.2783,  0.3289, -0.1141],
          ...,
          [-0.2031,  0.4341,  0.3845,  ..., -0.2388,  0.3418, -0.3257],
          [-0.3318,  0.4199, -0.0953,  ...,  0.4045,  0.3499,  0.4329],
          [-0.4219,  0.0529, -0.0515,  ..., -0.0270, -0.2725, -0.2690]],

         [[ 0.2913, -0.4392, -0.1141,  ...,  0.1692, -0.2145, -0.0955],
          [-0.1876,  0.4995,  0.4314,  ...,  0.3667,  0.4558,  0.1254],
          [ 0.4988,  0.0669,  0.0883,  ..., -0.4539,  0.3748, -0.0365],
          ...,
          [-0.4341, -0.1754,  0.1858,  ...,  0.2454, -0.2335,  0.0441],
          [-0.1879, -0.1316, -0.2429,  ..., -0.0840, -0.0366,  0.3401],
          [ 0.0706,  0.0106, -0.1155,  ...,  0.4187,  0.4409,  0.0565]]]],
       dtype=torch.float16)
DESIRED: (shape=torch.Size([2, 8, 80, 96]), dtype=torch.float16)
tensor([[[[ 0.0400, -0.4695, -0.0559,  ...,  0.1313, -0.1960, -0.0442],
          [ 0.4265, -0.4666, -0.3608,  ...,  0.3459,  0.1545, -0.3521],
          [ 0.3958,  0.0210, -0.2510,  ..., -0.0179, -0.3813,  0.1344],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[-0.0767,  0.0589, -0.0298,  ...,  0.2646,  0.1381,  0.0520],
          [ 0.0490, -0.4795,  0.4795,  ...,  0.1832,  0.0543,  0.1220],
          [ 0.3230, -0.3091, -0.2201,  ...,  0.3394,  0.3237, -0.0449],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[ 0.1041,  0.4043, -0.1678,  ..., -0.3457,  0.4202,  0.0779],
          [ 0.4460, -0.4453, -0.2438,  ...,  0.1809, -0.4395, -0.1663],
          [ 0.1501,  0.1166, -0.4307,  ..., -0.0607,  0.4758,  0.3252],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         ...,

         [[ 0.4634, -0.0925,  0.4038,  ..., -0.3040,  0.3967, -0.4385],
          [-0.0186, -0.2744, -0.0592,  ..., -0.0955, -0.1584,  0.3247],
          [ 0.1156,  0.1154,  0.2274,  ..., -0.0602,  0.2581, -0.2271],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[-0.1816, -0.0867, -0.1367,  ..., -0.1145,  0.3682,  0.1914],
          [-0.2246,  0.2233, -0.1121,  ..., -0.1498,  0.0944, -0.0210],
          [-0.1166,  0.1918,  0.0476,  ...,  0.1536, -0.2262,  0.3577],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[-0.0231, -0.2211, -0.2937,  ..., -0.3320, -0.2037, -0.3127],
          [ 0.0017,  0.1804, -0.1543,  ..., -0.3850, -0.1238,  0.1917],
          [ 0.3032, -0.0822, -0.4893,  ...,  0.2266, -0.0088,  0.3408],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]]],


        [[[-0.4590, -0.0266, -0.4910,  ...,  0.2690,  0.4868,  0.3560],
          [-0.4048, -0.0023, -0.4875,  ..., -0.0891, -0.1189, -0.1611],
          [-0.4312, -0.2081, -0.0617,  ...,  0.1891,  0.4243, -0.1298],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[-0.3953,  0.4102, -0.2404,  ...,  0.1481,  0.4375,  0.2340],
          [ 0.1387,  0.2491, -0.0958,  ...,  0.3997,  0.4397,  0.2188],
          [ 0.2290,  0.1570, -0.3767,  ..., -0.0457,  0.0712,  0.2971],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[ 0.1458,  0.2321,  0.2003,  ...,  0.4194, -0.1118,  0.4465],
          [-0.3108, -0.4360,  0.2375,  ...,  0.4851,  0.4082, -0.2827],
          [ 0.2527, -0.3774,  0.3506,  ...,  0.4824, -0.1389,  0.4895],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         ...,

         [[-0.1125, -0.1300, -0.0855,  ..., -0.1849, -0.1057, -0.3965],
          [ 0.4290, -0.1262,  0.1567,  ..., -0.1354, -0.3179, -0.2258],
          [ 0.2651, -0.3560, -0.0467,  ..., -0.1235,  0.3721, -0.2191],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[-0.1465, -0.0836,  0.0549,  ...,  0.1195,  0.0747, -0.0740],
          [-0.0693, -0.4343, -0.1730,  ...,  0.3049,  0.4575, -0.1840],
          [ 0.0101, -0.2637,  0.2588,  ..., -0.2783,  0.3289, -0.1141],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[ 0.2913, -0.4392, -0.1141,  ...,  0.1692, -0.2145, -0.0955],
          [-0.1876,  0.4995,  0.4314,  ...,  0.3667,  0.4558,  0.1254],
          [ 0.4988,  0.0669,  0.0883,  ..., -0.4539,  0.3748, -0.0365],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]]]],
       dtype=torch.float16)

2025-06-08 11:44:20.415083 GPU 5 64407 test begin: paddle.incubate.nn.functional.variable_length_memory_efficient_attention(Tensor([2, 8, 82, 96],"float16"), Tensor([2, 8, 210, 96],"float16"), Tensor([2, 8, 210, 96],"float16"), Tensor([2, 1],"int32"), Tensor([2, 1],"int32"), mask=Tensor([2, 1, 4096, 4096],"float16"), scale=0.10206207261596575, )
[accuracy error] paddle.incubate.nn.functional.variable_length_memory_efficient_attention(Tensor([2, 8, 82, 96],"float16"), Tensor([2, 8, 210, 96],"float16"), Tensor([2, 8, 210, 96],"float16"), Tensor([2, 1],"int32"), Tensor([2, 1],"int32"), mask=Tensor([2, 1, 4096, 4096],"float16"), scale=0.10206207261596575, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 11948 / 125952 (9.5%)
Greatest absolute difference: 0.5 at index (0, 0, 62, 18) (up to 0.01 allowed)
Greatest relative difference: inf at index (0, 0, 60, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2, 8, 82, 96]), dtype=torch.float16)
tensor([[[[ 0.0994, -0.3342, -0.2598,  ..., -0.2878, -0.2262,  0.2920],
          [ 0.4104, -0.3325,  0.0414,  ..., -0.3557, -0.2213,  0.2786],
          [-0.0176, -0.2186, -0.1936,  ...,  0.3755,  0.4443,  0.1150],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[-0.2480, -0.0660, -0.0945,  ..., -0.0985, -0.0219,  0.1039],
          [ 0.4360,  0.1225,  0.4939,  ..., -0.3318, -0.1464, -0.3018],
          [-0.2507, -0.3125, -0.0233,  ...,  0.4873,  0.0784, -0.2534],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[ 0.1698,  0.2898, -0.1273,  ...,  0.1650,  0.2593, -0.4316],
          [-0.0218,  0.1924, -0.2847,  ..., -0.2534, -0.1459, -0.3491],
          [-0.2352,  0.4734,  0.1467,  ..., -0.3254,  0.1256, -0.1954],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         ...,

         [[ 0.4631,  0.2954, -0.2441,  ...,  0.3279,  0.1849, -0.0180],
          [-0.3347, -0.0860, -0.4966,  ..., -0.0735,  0.3188, -0.3398],
          [-0.0737,  0.2288, -0.4160,  ...,  0.1030,  0.1516, -0.1604],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[-0.1987, -0.0850, -0.2656,  ..., -0.2651,  0.2345, -0.4729],
          [-0.2123, -0.2244,  0.3318,  ..., -0.4990, -0.3184, -0.0754],
          [-0.4746,  0.2352,  0.2490,  ...,  0.4316, -0.2325,  0.2336],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[ 0.3894,  0.3303, -0.4214,  ...,  0.0607,  0.0916, -0.2302],
          [ 0.0367,  0.1866,  0.4534,  ...,  0.0738, -0.2098, -0.3303],
          [-0.1388, -0.1893,  0.1792,  ..., -0.3118,  0.4761,  0.4041],
          ...,
          [ 0.4297, -0.0161,  0.0496,  ..., -0.3142, -0.0811, -0.4939],
          [ 0.0481,  0.4988,  0.0226,  ..., -0.1729,  0.4778,  0.1045],
          [ 0.2891, -0.0868,  0.3481,  ..., -0.1226, -0.2256,  0.1913]]],


        [[[ 0.2172, -0.4443, -0.0440,  ..., -0.2113,  0.2878, -0.1824],
          [-0.4866,  0.4329, -0.4080,  ...,  0.3152, -0.0163, -0.3308],
          [-0.3169,  0.0876,  0.1265,  ...,  0.4436,  0.2239,  0.0858],
          ...,
          [-0.0994, -0.3940, -0.2052,  ..., -0.0569, -0.1431,  0.0233],
          [-0.1434,  0.2030,  0.1356,  ..., -0.4241, -0.3533, -0.2042],
          [-0.0125, -0.4102,  0.3855,  ..., -0.4763, -0.0414,  0.3176]],

         [[ 0.0169,  0.2778, -0.3118,  ...,  0.0695, -0.3835,  0.1674],
          [ 0.1082, -0.3040, -0.0318,  ..., -0.3528,  0.2959, -0.3997],
          [-0.3911, -0.0869, -0.3796,  ...,  0.3123,  0.3281, -0.1493],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[ 0.4487, -0.1058,  0.0156,  ..., -0.0411,  0.2830,  0.2769],
          [ 0.4722, -0.0941,  0.3464,  ..., -0.3040, -0.4346,  0.3484],
          [-0.1160,  0.3296, -0.4475,  ...,  0.3516, -0.1992,  0.0795],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         ...,

         [[ 0.4695,  0.4668,  0.4233,  ...,  0.2747, -0.2064, -0.0328],
          [-0.4851,  0.1561, -0.3831,  ...,  0.1853, -0.3616, -0.0769],
          [-0.3950, -0.4846,  0.2145,  ..., -0.2294, -0.2878, -0.2688],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[-0.3508, -0.1306, -0.3701,  ...,  0.4602, -0.5000, -0.1553],
          [-0.1141, -0.0901, -0.2081,  ...,  0.1372,  0.4797,  0.1033],
          [ 0.1704, -0.2786,  0.3237,  ..., -0.2998,  0.2742,  0.1353],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[-0.2440, -0.0599, -0.3411,  ...,  0.3455,  0.1541,  0.4951],
          [-0.2515,  0.3103,  0.1346,  ..., -0.4814,  0.0963,  0.3726],
          [-0.3274, -0.2839, -0.3362,  ..., -0.0063,  0.0687, -0.4973],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]]]],
       dtype=torch.float16)
DESIRED: (shape=torch.Size([2, 8, 82, 96]), dtype=torch.float16)
tensor([[[[ 0.0994, -0.3342, -0.2598,  ..., -0.2878, -0.2262,  0.2920],
          [ 0.4104, -0.3325,  0.0414,  ..., -0.3557, -0.2213,  0.2786],
          [-0.0176, -0.2186, -0.1936,  ...,  0.3755,  0.4443,  0.1150],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[-0.2480, -0.0660, -0.0945,  ..., -0.0985, -0.0219,  0.1039],
          [ 0.4360,  0.1225,  0.4939,  ..., -0.3318, -0.1464, -0.3018],
          [-0.2507, -0.3125, -0.0233,  ...,  0.4873,  0.0784, -0.2534],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[ 0.1698,  0.2898, -0.1273,  ...,  0.1650,  0.2593, -0.4316],
          [-0.0218,  0.1924, -0.2847,  ..., -0.2534, -0.1459, -0.3491],
          [-0.2352,  0.4734,  0.1467,  ..., -0.3254,  0.1256, -0.1954],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         ...,

         [[ 0.4631,  0.2954, -0.2441,  ...,  0.3279,  0.1849, -0.0180],
          [-0.3347, -0.0860, -0.4966,  ..., -0.0735,  0.3188, -0.3398],
          [-0.0737,  0.2288, -0.4160,  ...,  0.1030,  0.1516, -0.1604],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[-0.1987, -0.0850, -0.2656,  ..., -0.2651,  0.2345, -0.4729],
          [-0.2123, -0.2244,  0.3318,  ..., -0.4990, -0.3184, -0.0754],
          [-0.4746,  0.2352,  0.2490,  ...,  0.4316, -0.2325,  0.2336],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[ 0.3894,  0.3303, -0.4214,  ...,  0.0607,  0.0916, -0.2302],
          [ 0.0367,  0.1866,  0.4534,  ...,  0.0738, -0.2098, -0.3303],
          [-0.1388, -0.1893,  0.1792,  ..., -0.3118,  0.4761,  0.4041],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]]],


        [[[ 0.2172, -0.4443, -0.0440,  ..., -0.2113,  0.2878, -0.1824],
          [-0.4866,  0.4329, -0.4080,  ...,  0.3152, -0.0163, -0.3308],
          [-0.3169,  0.0876,  0.1265,  ...,  0.4436,  0.2239,  0.0858],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[ 0.0169,  0.2778, -0.3118,  ...,  0.0695, -0.3835,  0.1674],
          [ 0.1082, -0.3040, -0.0318,  ..., -0.3528,  0.2959, -0.3997],
          [-0.3911, -0.0869, -0.3796,  ...,  0.3123,  0.3281, -0.1493],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[ 0.4487, -0.1058,  0.0156,  ..., -0.0411,  0.2830,  0.2769],
          [ 0.4722, -0.0941,  0.3464,  ..., -0.3040, -0.4346,  0.3484],
          [-0.1159,  0.3293, -0.4473,  ...,  0.3513, -0.1991,  0.0795],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         ...,

         [[ 0.4695,  0.4668,  0.4233,  ...,  0.2747, -0.2064, -0.0328],
          [-0.4851,  0.1561, -0.3831,  ...,  0.1853, -0.3616, -0.0769],
          [-0.3950, -0.4846,  0.2145,  ..., -0.2294, -0.2878, -0.2688],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[-0.3508, -0.1306, -0.3701,  ...,  0.4602, -0.5000, -0.1553],
          [-0.1141, -0.0901, -0.2081,  ...,  0.1372,  0.4797,  0.1033],
          [ 0.1704, -0.2786,  0.3237,  ..., -0.2998,  0.2742,  0.1353],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[-0.2440, -0.0599, -0.3411,  ...,  0.3455,  0.1541,  0.4951],
          [-0.2515,  0.3103,  0.1346,  ..., -0.4814,  0.0963,  0.3726],
          [-0.3274, -0.2839, -0.3362,  ..., -0.0063,  0.0687, -0.4973],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]]]],
       dtype=torch.float16)


2025-06-08 11:44:20.538994 GPU 5 64403 test begin: paddle.incubate.nn.functional.variable_length_memory_efficient_attention(Tensor([2, 8, 82, 96],"float16"), Tensor([2, 8, 82, 96],"float16"), Tensor([2, 8, 82, 96],"float16"), Tensor([2, 1],"int32"), Tensor([2, 1],"int32"), mask=Tensor([2, 1, 4096, 4096],"float16"), scale=0.10206207261596575, )
[accuracy error] paddle.incubate.nn.functional.variable_length_memory_efficient_attention(Tensor([2, 8, 82, 96],"float16"), Tensor([2, 8, 82, 96],"float16"), Tensor([2, 8, 82, 96],"float16"), Tensor([2, 1],"int32"), Tensor([2, 1],"int32"), mask=Tensor([2, 1, 4096, 4096],"float16"), scale=0.10206207261596575, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 67707 / 125952 (53.8%)
Greatest absolute difference: 0.5 at index (0, 0, 58, 72) (up to 0.01 allowed)
Greatest relative difference: inf at index (0, 0, 13, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2, 8, 82, 96]), dtype=torch.float16)
tensor([[[[ 2.8223e-01, -3.6523e-01, -4.6753e-01,  ..., -4.5013e-02,
            2.9395e-01,  1.2854e-01],
          [-2.0300e-01, -7.0679e-02, -2.0264e-01,  ...,  7.5989e-02,
           -2.0923e-01, -2.1866e-02],
          [-3.6572e-01, -3.3844e-02,  4.2236e-01,  ...,  1.9116e-01,
            2.6685e-01, -2.4377e-01],
          ...,
          [-5.3955e-02, -2.8467e-01, -1.3904e-01,  ..., -2.6001e-01,
           -2.7539e-01, -4.4995e-01],
          [-2.9395e-01, -1.6272e-01,  3.8452e-01,  ..., -2.0044e-01,
            3.2007e-01, -1.0657e-01],
          [ 2.2705e-01, -1.9971e-01, -2.4689e-02,  ..., -4.3115e-01,
            9.8877e-02, -3.2080e-01]],

         [[ 1.8579e-01, -4.2065e-01, -4.0918e-01,  ...,  2.3239e-02,
            4.6436e-01, -9.9792e-02],
          [-2.4402e-01,  3.1543e-01, -2.8516e-01,  ..., -4.9634e-01,
            2.5732e-01,  2.6538e-01],
          [ 2.6318e-01,  1.3222e-02,  1.3762e-03,  ...,  3.0176e-01,
            3.4253e-01,  5.1147e-02],
          ...,
          [-4.8340e-01,  3.0200e-01,  2.2021e-01,  ...,  1.2036e-01,
           -3.4302e-01,  4.6460e-01],
          [-1.4246e-01,  6.0486e-02,  2.5195e-01,  ..., -2.1729e-01,
            4.9316e-01, -3.2227e-02],
          [ 3.3081e-01, -5.6648e-03,  2.7283e-02,  ..., -2.9395e-01,
           -6.5552e-02, -4.6191e-01]],

         [[ 3.9209e-01, -1.1078e-02,  5.7648e-02,  ..., -5.1758e-02,
            3.3325e-01, -6.6406e-02],
          [ 1.9714e-02, -4.6655e-01,  2.8467e-01,  ..., -4.7949e-01,
           -2.2278e-01,  2.4561e-01],
          [ 4.6875e-01, -9.2346e-02, -4.6265e-01,  ...,  2.9810e-01,
           -5.0568e-02,  2.8152e-02],
          ...,
          [ 2.7490e-01, -4.7803e-01,  3.5034e-01,  ...,  4.8096e-01,
            1.5625e-01,  2.5220e-01],
          [-7.6111e-02, -4.4727e-01,  3.1323e-01,  ..., -2.2144e-01,
           -7.4272e-03,  6.6406e-02],
          [-1.7517e-01, -3.2446e-01, -4.0308e-01,  ..., -1.6174e-01,
           -4.6883e-03,  5.0232e-02]],

         ...,

         [[ 4.8462e-01, -2.3706e-01, -3.5303e-01,  ...,  2.0068e-01,
           -4.0234e-01, -1.1633e-01],
          [ 4.2139e-01,  4.0234e-01,  4.5776e-01,  ...,  6.9824e-02,
           -3.4595e-01, -1.2585e-01],
          [ 9.5032e-02,  3.9258e-01, -4.7803e-01,  ..., -1.8567e-01,
           -4.6533e-01,  1.6418e-02],
          ...,
          [ 3.9160e-01, -2.4268e-01, -3.3032e-01,  ...,  1.9226e-02,
           -2.0477e-02, -7.1960e-02],
          [ 1.6772e-01, -3.9819e-01, -3.4570e-01,  ..., -3.5034e-01,
           -4.6167e-01, -7.3547e-02],
          [-3.6230e-01,  1.2671e-01, -3.8354e-01,  ...,  8.2169e-03,
            1.9104e-01,  7.9590e-02]],

         [[ 7.8186e-02,  3.0493e-01,  1.2939e-01,  ...,  4.3237e-01,
            2.4072e-01, -9.5337e-02],
          [ 4.9731e-01,  6.9885e-02,  3.9062e-01,  ..., -3.3765e-01,
            8.6243e-02, -3.3447e-02],
          [-1.1249e-01, -4.0576e-01,  3.8916e-01,  ..., -4.2676e-01,
           -1.9580e-01,  2.2620e-01],
          ...,
          [-2.2046e-01, -3.8159e-01, -3.6621e-01,  ..., -3.3276e-01,
            3.0908e-01, -1.7017e-01],
          [ 3.4155e-01,  3.6108e-01, -4.2261e-01,  ..., -3.2227e-01,
           -3.8135e-01,  1.9800e-01],
          [ 1.6846e-01,  9.5947e-02, -3.2202e-01,  ...,  1.1987e-01,
           -1.5125e-01,  3.3350e-01]],

         [[ 3.8721e-01,  2.5586e-01, -4.0894e-01,  ..., -4.4043e-01,
           -3.4790e-02, -4.5288e-01],
          [-9.6985e-02, -6.1279e-02, -1.1505e-01,  ..., -8.2581e-02,
           -1.6150e-01, -3.7671e-01],
          [ 4.1797e-01, -4.6875e-01,  3.5352e-01,  ..., -2.9321e-01,
           -4.0625e-01, -4.5679e-01],
          ...,
          [ 3.3984e-01, -1.6162e-01,  4.6289e-01,  ..., -3.6646e-01,
            1.7407e-01,  2.2388e-01],
          [ 3.9429e-01, -1.4441e-01, -1.4366e-02,  ...,  4.1504e-01,
            1.5015e-01, -2.7832e-01],
          [ 3.5742e-01, -8.0444e-02,  2.1313e-01,  ...,  3.5461e-02,
           -3.9990e-01,  2.4829e-01]]],


        [[[-3.7744e-01,  2.9709e-02, -1.6565e-01,  ...,  8.3374e-02,
            4.6899e-01,  1.5613e-01],
          [-3.0322e-01,  8.1848e-02,  1.4191e-02,  ..., -2.7173e-01,
           -4.7388e-01, -3.4961e-01],
          [ 1.7383e-01, -3.3423e-01,  8.4412e-02,  ..., -1.3770e-01,
           -1.0574e-02, -2.9907e-01],
          ...,
          [-1.7688e-01, -3.2666e-01,  4.2383e-01,  ...,  4.1406e-01,
            2.7759e-01, -2.6099e-01],
          [-4.5020e-01,  2.3364e-01,  1.6880e-03,  ...,  4.3457e-01,
           -3.2788e-01, -2.9443e-01],
          [-3.8257e-01, -9.1919e-02, -2.4988e-01,  ...,  1.4551e-01,
            1.1066e-01, -2.1338e-01]],

         [[-1.7566e-01, -6.0822e-02,  4.2871e-01,  ..., -4.6289e-01,
           -3.7573e-01,  3.6475e-01],
          [ 1.7102e-01, -1.8127e-02, -4.1846e-01,  ..., -2.9761e-01,
            3.1079e-01,  2.5464e-01],
          [-1.1011e-01,  1.8774e-01, -1.4473e-02,  ..., -3.1177e-01,
            1.0187e-01, -4.7095e-01],
          ...,
          [-9.0027e-02,  8.5327e-02,  2.0288e-01,  ...,  7.2998e-02,
           -4.0820e-01, -4.4897e-01],
          [ 1.6870e-01,  1.2976e-01, -2.6074e-01,  ..., -3.4253e-01,
           -2.4329e-01,  1.6431e-01],
          [ 3.5327e-01,  7.3730e-02, -2.6050e-01,  ..., -7.0679e-02,
           -1.7456e-02, -2.0276e-01]],

         [[ 7.7576e-02,  3.3984e-01, -4.7607e-01,  ...,  1.3351e-02,
           -2.7832e-01, -4.1187e-01],
          [-6.3599e-02,  1.0345e-01, -8.8562e-02,  ..., -3.8428e-01,
           -1.1102e-01, -3.2959e-01],
          [ 3.3521e-01, -1.3831e-01,  1.1884e-01,  ..., -2.5464e-01,
            3.7689e-02, -4.6484e-01],
          ...,
          [-2.1924e-01,  2.9297e-01,  4.1650e-01,  ..., -4.7900e-01,
            1.0217e-01,  3.4766e-01],
          [ 5.6641e-02, -4.9854e-01,  1.1938e-01,  ...,  3.9185e-01,
           -1.1530e-01, -6.1401e-02],
          [-7.2937e-02,  1.7383e-01, -1.4197e-01,  ...,  1.7688e-01,
            3.2593e-01,  3.4155e-01]],

         ...,

         [[-7.8125e-02,  4.4312e-01, -3.4149e-02,  ..., -1.0876e-01,
            2.2375e-01,  1.2231e-01],
          [-1.6003e-01, -3.1787e-01,  4.2041e-01,  ...,  1.5930e-01,
           -4.7583e-01,  1.7957e-01],
          [-8.6792e-02,  3.1665e-01, -2.7759e-01,  ..., -4.7852e-02,
            4.2236e-01,  3.6279e-01],
          ...,
          [ 3.3472e-01, -3.9404e-01, -2.0300e-01,  ..., -2.5024e-01,
           -3.0908e-01,  5.2094e-02],
          [-4.0625e-01, -4.9097e-01,  4.8364e-01,  ..., -1.6919e-01,
            8.9661e-02,  3.2178e-01],
          [-1.5137e-01, -2.7783e-01, -1.4990e-01,  ...,  6.9351e-03,
           -2.6392e-01,  2.0251e-01]],

         [[-1.6431e-01,  4.7314e-01, -4.1553e-01,  ..., -3.4155e-01,
           -2.7393e-01,  4.4861e-03],
          [ 4.9731e-01, -2.7222e-01, -3.4131e-01,  ..., -3.9453e-01,
            2.6392e-01,  1.3718e-02],
          [-9.0881e-02,  4.2786e-02, -2.8473e-02,  ...,  1.0109e-02,
           -8.1177e-02,  3.6621e-02],
          ...,
          [ 2.6611e-01, -1.8115e-01,  4.6069e-01,  ...,  2.1033e-01,
            4.8657e-01, -4.7266e-01],
          [ 3.3301e-01, -3.0273e-01, -1.9458e-01,  ..., -6.0211e-02,
            4.2529e-01, -1.5833e-01],
          [ 2.1423e-01,  4.1162e-01,  1.1371e-01,  ...,  4.2969e-01,
           -3.1137e-04, -4.7046e-01]],

         [[ 2.7246e-01,  2.3157e-01,  4.0771e-01,  ...,  3.4131e-01,
           -3.1543e-01, -2.1069e-01],
          [-1.3513e-01, -4.5557e-01,  4.6094e-01,  ..., -2.9541e-01,
            4.0552e-01,  2.0886e-01],
          [ 1.9055e-01, -7.3242e-02,  4.3408e-01,  ..., -2.7710e-01,
            2.7563e-01, -1.2988e-01],
          ...,
          [ 2.2510e-01,  3.5229e-01,  2.6685e-01,  ...,  6.4392e-02,
            4.2456e-01, -4.6973e-01],
          [-3.7231e-01,  2.4463e-01, -2.3022e-01,  ...,  2.1167e-01,
           -3.8428e-01, -3.7207e-01],
          [ 3.1323e-01, -1.0254e-01, -2.2293e-02,  ...,  4.2993e-01,
           -2.2974e-01,  4.2383e-01]]]], dtype=torch.float16)
DESIRED: (shape=torch.Size([2, 8, 82, 96]), dtype=torch.float16)
tensor([[[[ 0.2822, -0.3652, -0.4675,  ..., -0.0450,  0.2939,  0.1285],
          [-0.2030, -0.0707, -0.2026,  ...,  0.0760, -0.2092, -0.0219],
          [-0.3657, -0.0338,  0.4224,  ...,  0.1912,  0.2668, -0.2438],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[ 0.1858, -0.4207, -0.4092,  ...,  0.0232,  0.4644, -0.0998],
          [-0.2440,  0.3154, -0.2852,  ..., -0.4963,  0.2573,  0.2654],
          [ 0.2632,  0.0132,  0.0014,  ...,  0.3018,  0.3425,  0.0511],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[ 0.3921, -0.0111,  0.0576,  ..., -0.0518,  0.3333, -0.0664],
          [ 0.0197, -0.4666,  0.2847,  ..., -0.4795, -0.2228,  0.2456],
          [ 0.4688, -0.0923, -0.4626,  ...,  0.2981, -0.0506,  0.0282],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         ...,

         [[ 0.4846, -0.2371, -0.3530,  ...,  0.2007, -0.4023, -0.1163],
          [ 0.4214,  0.4023,  0.4578,  ...,  0.0698, -0.3459, -0.1259],
          [ 0.0950,  0.3926, -0.4780,  ..., -0.1857, -0.4653,  0.0164],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[ 0.0782,  0.3049,  0.1294,  ...,  0.4324,  0.2407, -0.0953],
          [ 0.4973,  0.0699,  0.3906,  ..., -0.3376,  0.0862, -0.0334],
          [-0.1125, -0.4058,  0.3892,  ..., -0.4268, -0.1958,  0.2262],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[ 0.3872,  0.2559, -0.4089,  ..., -0.4404, -0.0348, -0.4529],
          [-0.0970, -0.0613, -0.1151,  ..., -0.0826, -0.1615, -0.3767],
          [ 0.4180, -0.4688,  0.3535,  ..., -0.2932, -0.4062, -0.4568],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]]],


        [[[-0.3774,  0.0297, -0.1656,  ...,  0.0834,  0.4690,  0.1561],
          [-0.3032,  0.0818,  0.0142,  ..., -0.2717, -0.4739, -0.3496],
          [ 0.1738, -0.3342,  0.0844,  ..., -0.1377, -0.0106, -0.2991],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[-0.1757, -0.0608,  0.4287,  ..., -0.4629, -0.3757,  0.3647],
          [ 0.1710, -0.0181, -0.4185,  ..., -0.2976,  0.3108,  0.2546],
          [-0.1101,  0.1877, -0.0145,  ..., -0.3118,  0.1019, -0.4709],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[ 0.0776,  0.3398, -0.4761,  ...,  0.0134, -0.2783, -0.4119],
          [-0.0636,  0.1035, -0.0886,  ..., -0.3843, -0.1110, -0.3296],
          [ 0.3352, -0.1383,  0.1188,  ..., -0.2546,  0.0377, -0.4648],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         ...,

         [[-0.0781,  0.4431, -0.0341,  ..., -0.1088,  0.2238,  0.1223],
          [-0.1600, -0.3179,  0.4204,  ...,  0.1593, -0.4758,  0.1796],
          [-0.0868,  0.3167, -0.2776,  ..., -0.0479,  0.4224,  0.3628],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[-0.1643,  0.4731, -0.4155,  ..., -0.3416, -0.2739,  0.0045],
          [ 0.4973, -0.2722, -0.3413,  ..., -0.3945,  0.2639,  0.0137],
          [-0.0909,  0.0428, -0.0285,  ...,  0.0101, -0.0812,  0.0366],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[ 0.2725,  0.2316,  0.4077,  ...,  0.3413, -0.3154, -0.2107],
          [-0.1351, -0.4556,  0.4609,  ..., -0.2954,  0.4055,  0.2089],
          [ 0.1906, -0.0732,  0.4341,  ..., -0.2771,  0.2756, -0.1299],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]]]],
       dtype=torch.float16)

2025-06-08 11:44:20.613033 GPU 5 64402 test begin: paddle.incubate.nn.functional.variable_length_memory_efficient_attention(Tensor([2, 8, 91, 96],"float16"), Tensor([2, 8, 91, 96],"float16"), Tensor([2, 8, 91, 96],"float16"), Tensor([2, 1],"int32"), Tensor([2, 1],"int32"), mask=Tensor([2, 1, 4096, 4096],"float16"), scale=0.10206207261596575, )
[accuracy error] paddle.incubate.nn.functional.variable_length_memory_efficient_attention(Tensor([2, 8, 91, 96],"float16"), Tensor([2, 8, 91, 96],"float16"), Tensor([2, 8, 91, 96],"float16"), Tensor([2, 1],"int32"), Tensor([2, 1],"int32"), mask=Tensor([2, 1, 4096, 4096],"float16"), scale=0.10206207261596575, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 31574 / 139776 (22.6%)
Greatest absolute difference: 0.5 at index (0, 0, 73, 30) (up to 0.01 allowed)
Greatest relative difference: inf at index (0, 0, 57, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2, 8, 91, 96]), dtype=torch.float16)
tensor([[[[-2.2064e-02,  3.2178e-01,  9.8083e-02,  ..., -2.7124e-01,
           -1.6357e-01,  2.8223e-01],
          [-3.1689e-01, -2.6904e-01, -3.0457e-02,  ...,  3.1445e-01,
            1.0876e-01, -5.5969e-02],
          [ 2.5586e-01, -1.6296e-01, -1.8726e-01,  ...,  1.6125e-01,
           -3.8599e-01, -3.9087e-01],
          ...,
          [-4.1357e-01,  3.8770e-01, -1.4380e-01,  ..., -1.8262e-01,
           -3.0664e-01, -2.3059e-01],
          [ 3.9160e-01, -3.8574e-01,  8.9233e-02,  ..., -3.6255e-02,
            7.1899e-02, -1.7776e-02],
          [ 4.0698e-01, -2.1008e-01,  8.5510e-02,  ..., -3.9941e-01,
           -1.2598e-01, -7.9651e-02]],

         [[-3.7622e-01, -4.0161e-01,  2.4048e-01,  ..., -8.3801e-02,
            4.1772e-01,  4.7070e-01],
          [-7.2632e-02, -1.7883e-01,  2.5146e-01,  ...,  2.6367e-01,
            9.0942e-02, -3.4302e-01],
          [-4.7412e-01,  4.5557e-01,  1.6541e-01,  ..., -3.7231e-02,
            1.6870e-01,  4.6313e-01],
          ...,
          [ 4.7168e-01,  4.8218e-01,  2.2681e-01,  ..., -9.2041e-02,
            2.8784e-01,  1.7542e-01],
          [-3.5327e-01,  1.7676e-01,  1.2390e-02,  ..., -3.7305e-01,
           -2.5903e-01, -1.1865e-01],
          [ 1.8005e-01,  2.4133e-01, -2.1887e-01,  ...,  2.8027e-01,
            1.2854e-01,  4.4800e-01]],

         [[ 4.4165e-01, -4.6509e-02,  3.0371e-01,  ...,  3.8452e-01,
            1.3098e-01,  3.9111e-01],
          [-7.8979e-02,  3.6133e-01, -4.0039e-01,  ..., -4.7241e-01,
            4.2212e-01,  6.9847e-03],
          [-8.6548e-02,  4.7046e-01, -6.8970e-02,  ..., -2.2131e-01,
            6.8237e-02, -5.7434e-02],
          ...,
          [ 3.7378e-01,  2.9810e-01,  3.8940e-01,  ...,  3.1403e-02,
           -1.4905e-01, -4.2480e-01],
          [-4.4897e-01, -5.7892e-02,  2.2839e-01,  ...,  2.2742e-01,
           -2.4487e-01,  4.2847e-01],
          [ 3.1543e-01,  1.0052e-01, -4.7388e-01,  ..., -5.4291e-02,
           -2.2949e-01, -1.7957e-01]],

         ...,

         [[ 9.9548e-02,  4.0552e-01,  3.7939e-01,  ..., -3.2593e-01,
            9.3140e-02,  2.1118e-01],
          [-3.3374e-01,  1.1670e-01, -1.1212e-01,  ..., -2.3340e-01,
           -4.8779e-01, -8.8867e-02],
          [-1.1035e-01, -3.8110e-01,  4.8706e-01,  ..., -1.5076e-01,
            4.7266e-01, -2.6611e-01],
          ...,
          [-1.8103e-01,  2.0178e-01,  2.2461e-01,  ..., -4.7754e-01,
            3.6084e-01, -1.7078e-01],
          [ 4.8438e-01, -4.7607e-01, -2.8320e-01,  ..., -4.8462e-01,
            3.5767e-01,  1.6586e-02],
          [-4.7876e-01, -9.3140e-02,  3.3984e-01,  ...,  2.0862e-01,
            2.9102e-01,  1.4673e-01]],

         [[-3.8232e-01,  9.0332e-02, -2.5620e-02,  ...,  7.2205e-02,
            1.3611e-01, -2.3450e-01],
          [-1.8018e-01,  3.7036e-01, -3.8721e-01,  ..., -1.5320e-01,
           -1.8457e-01, -1.3733e-01],
          [-4.5874e-01, -3.7427e-01,  7.0923e-02,  ..., -4.7217e-01,
           -1.3647e-01,  4.7998e-01],
          ...,
          [ 8.8501e-02,  2.6929e-01, -1.3023e-02,  ...,  2.6489e-01,
            3.6694e-01,  4.0527e-01],
          [ 3.6572e-01, -5.1971e-02, -4.7949e-01,  ...,  3.3130e-01,
            3.7134e-01,  1.9617e-01],
          [ 6.7505e-02, -4.1650e-01,  4.9072e-01,  ..., -4.5996e-01,
            2.6294e-01,  4.2651e-01]],

         [[ 1.0205e-01,  1.3220e-01,  1.9507e-01,  ...,  4.7827e-01,
            4.6875e-01,  3.3130e-01],
          [-9.2529e-02, -4.7241e-01, -2.7808e-01,  ..., -1.6797e-01,
            3.9160e-01, -4.3848e-01],
          [ 1.4990e-01, -2.4841e-02,  1.5515e-01,  ...,  4.6680e-01,
            2.6636e-01,  1.7029e-01],
          ...,
          [ 3.9795e-01, -3.7964e-01, -2.2339e-01,  ...,  8.9905e-02,
           -2.6001e-01,  2.5757e-01],
          [ 3.7695e-01,  1.6016e-01, -4.2773e-01,  ...,  3.1519e-01,
            3.5059e-01, -8.9539e-02],
          [-2.8198e-01,  1.5283e-01, -2.0972e-01,  ...,  2.4744e-01,
           -1.1877e-01, -3.4302e-02]]],


        [[[-2.1802e-01, -4.5166e-01, -3.8525e-01,  ...,  2.2705e-01,
           -2.2559e-01,  8.1970e-02],
          [ 1.9006e-01,  2.6807e-01, -2.3669e-01,  ..., -9.8816e-02,
           -1.8323e-01, -4.7119e-01],
          [ 4.7559e-01,  2.4329e-01,  2.1973e-03,  ...,  2.6880e-01,
           -3.0884e-01,  1.0852e-01],
          ...,
          [-1.9373e-01,  2.1472e-01,  4.2212e-01,  ..., -4.0625e-01,
           -4.6509e-01, -3.5742e-01],
          [ 3.1665e-01,  2.4756e-01,  1.9641e-01,  ..., -4.7510e-01,
            2.0728e-01, -4.2529e-01],
          [-2.2852e-01,  1.5942e-01, -1.4124e-01,  ..., -2.9785e-01,
            3.9526e-01, -4.3457e-01]],

         [[ 7.9834e-02,  1.0902e-02, -4.3701e-01,  ..., -1.5236e-02,
           -2.1643e-01,  7.6233e-02],
          [-3.0807e-02,  3.0762e-01,  1.2134e-01,  ...,  7.0923e-02,
           -3.9551e-01,  3.1641e-01],
          [ 1.5637e-01,  5.6396e-02,  2.5903e-01,  ...,  3.2593e-01,
            4.2920e-01,  2.1094e-01],
          ...,
          [-2.6758e-01, -3.5034e-01,  1.1273e-01,  ...,  2.7515e-01,
            2.5085e-02,  2.9663e-02],
          [-2.6953e-01, -4.4141e-01,  3.7646e-01,  ...,  4.5972e-01,
            3.5583e-02, -4.6167e-01],
          [-1.6467e-01, -2.2534e-01,  2.8979e-01,  ..., -4.2139e-01,
           -4.4312e-01,  4.4312e-01]],

         [[ 2.0654e-01, -3.1104e-01, -1.8884e-01,  ...,  1.2489e-02,
           -1.4282e-02,  3.9673e-01],
          [-1.6003e-01,  2.9639e-01, -4.0625e-01,  ..., -1.3940e-01,
           -2.9883e-01,  5.2368e-02],
          [-7.6050e-02, -2.7344e-01,  2.1252e-01,  ...,  4.8706e-01,
            1.6296e-01, -2.5732e-01],
          ...,
          [-4.1406e-01,  1.3831e-01, -3.1519e-01,  ...,  3.1274e-01,
           -3.9355e-01,  3.6120e-04],
          [-4.7058e-02, -1.9470e-01,  3.1860e-01,  ..., -1.4917e-01,
           -2.4927e-01,  2.8149e-01],
          [-2.3889e-01, -2.4927e-01,  7.5317e-02,  ...,  2.3267e-01,
           -9.4238e-02, -3.8843e-01]],

         ...,

         [[-3.1177e-01, -2.1619e-01,  5.4382e-02,  ..., -2.3169e-01,
            3.8257e-01,  2.6636e-01],
          [-1.2988e-01,  2.9663e-01, -4.1968e-01,  ...,  1.0565e-01,
            9.8816e-02, -3.5553e-02],
          [ 7.2693e-02,  9.8511e-02, -2.5635e-02,  ...,  2.7148e-01,
           -6.5369e-02, -4.9512e-01],
          ...,
          [ 3.8525e-01,  2.7832e-01, -2.6953e-01,  ..., -7.5928e-02,
            4.0894e-01,  3.6804e-02],
          [-2.3438e-02, -1.1420e-01,  2.5122e-01,  ...,  1.9531e-01,
           -1.5393e-01,  3.1079e-01],
          [ 3.3984e-01,  4.4165e-01,  5.5603e-02,  ..., -4.2139e-01,
           -1.4038e-01, -3.4088e-02]],

         [[-4.5044e-01, -3.5254e-01,  4.3799e-01,  ...,  3.0005e-01,
            1.6638e-01,  2.1667e-01],
          [-4.9164e-02,  3.6841e-01,  3.8623e-01,  ..., -3.5791e-01,
           -2.7664e-02,  2.9077e-01],
          [-4.0259e-01,  4.4678e-01, -1.5312e-02,  ..., -4.0991e-01,
           -1.5186e-01,  1.5601e-01],
          ...,
          [-2.0154e-01, -3.8037e-01,  3.6597e-01,  ..., -4.1235e-01,
            3.1958e-01, -3.7354e-01],
          [ 3.6670e-01,  2.9785e-01,  1.0168e-01,  ..., -4.2944e-01,
           -2.3010e-01, -2.3853e-01],
          [ 3.0960e-02,  4.1479e-01,  4.9951e-01,  ..., -4.4482e-01,
            2.6025e-01,  8.7402e-02]],

         [[-3.7915e-01, -6.1707e-02, -4.9268e-01,  ...,  1.1499e-01,
           -4.1382e-01, -7.4158e-02],
          [ 2.2217e-01,  8.8501e-02, -3.5645e-01,  ..., -3.0176e-01,
            3.6890e-01,  1.8103e-01],
          [ 4.8828e-01,  4.3164e-01,  3.4448e-01,  ..., -3.9746e-01,
           -2.1021e-01,  9.8755e-02],
          ...,
          [ 2.5830e-01, -3.4058e-01,  1.2042e-01,  ...,  3.5278e-01,
            2.6221e-01, -1.4026e-01],
          [-1.2305e-01,  1.0492e-01,  4.6143e-01,  ..., -3.2251e-01,
            2.4829e-01, -2.1155e-01],
          [ 2.5806e-01,  3.3398e-01,  9.1553e-02,  ..., -1.2878e-01,
            5.9265e-02, -4.7656e-01]]]], dtype=torch.float16)
DESIRED: (shape=torch.Size([2, 8, 91, 96]), dtype=torch.float16)
tensor([[[[-0.0221,  0.3218,  0.0981,  ..., -0.2712, -0.1636,  0.2822],
          [-0.3169, -0.2690, -0.0305,  ...,  0.3145,  0.1088, -0.0560],
          [ 0.2559, -0.1630, -0.1873,  ...,  0.1613, -0.3860, -0.3909],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[-0.3762, -0.4016,  0.2405,  ..., -0.0838,  0.4177,  0.4707],
          [-0.0726, -0.1788,  0.2515,  ...,  0.2637,  0.0909, -0.3430],
          [-0.4741,  0.4556,  0.1654,  ..., -0.0372,  0.1687,  0.4631],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[ 0.4417, -0.0465,  0.3037,  ...,  0.3845,  0.1310,  0.3911],
          [-0.0790,  0.3613, -0.4004,  ..., -0.4724,  0.4221,  0.0070],
          [-0.0865,  0.4705, -0.0690,  ..., -0.2213,  0.0682, -0.0574],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         ...,

         [[ 0.0995,  0.4055,  0.3794,  ..., -0.3259,  0.0931,  0.2112],
          [-0.3337,  0.1167, -0.1121,  ..., -0.2334, -0.4878, -0.0889],
          [-0.1104, -0.3811,  0.4871,  ..., -0.1508,  0.4727, -0.2661],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[-0.3823,  0.0903, -0.0256,  ...,  0.0722,  0.1361, -0.2345],
          [-0.1802,  0.3704, -0.3872,  ..., -0.1532, -0.1846, -0.1373],
          [-0.4587, -0.3743,  0.0709,  ..., -0.4722, -0.1365,  0.4800],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[ 0.1021,  0.1322,  0.1951,  ...,  0.4783,  0.4688,  0.3313],
          [-0.0925, -0.4724, -0.2781,  ..., -0.1680,  0.3916, -0.4385],
          [ 0.1499, -0.0248,  0.1552,  ...,  0.4668,  0.2664,  0.1703],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]]],


        [[[-0.2180, -0.4517, -0.3853,  ...,  0.2271, -0.2256,  0.0820],
          [ 0.1901,  0.2681, -0.2367,  ..., -0.0988, -0.1832, -0.4712],
          [ 0.4756,  0.2433,  0.0022,  ...,  0.2688, -0.3088,  0.1085],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[ 0.0798,  0.0109, -0.4370,  ..., -0.0152, -0.2164,  0.0762],
          [-0.0308,  0.3076,  0.1213,  ...,  0.0709, -0.3955,  0.3164],
          [ 0.1564,  0.0564,  0.2590,  ...,  0.3259,  0.4292,  0.2109],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[ 0.2065, -0.3110, -0.1888,  ...,  0.0125, -0.0143,  0.3967],
          [-0.1600,  0.2964, -0.4062,  ..., -0.1394, -0.2988,  0.0524],
          [-0.0760, -0.2734,  0.2125,  ...,  0.4871,  0.1630, -0.2573],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         ...,

         [[-0.3118, -0.2162,  0.0544,  ..., -0.2317,  0.3826,  0.2664],
          [-0.1299,  0.2966, -0.4197,  ...,  0.1057,  0.0988, -0.0356],
          [ 0.0727,  0.0985, -0.0256,  ...,  0.2715, -0.0654, -0.4951],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[-0.4504, -0.3525,  0.4380,  ...,  0.3000,  0.1664,  0.2167],
          [-0.0492,  0.3684,  0.3862,  ..., -0.3579, -0.0277,  0.2908],
          [-0.4026,  0.4468, -0.0153,  ..., -0.4099, -0.1519,  0.1560],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[-0.3792, -0.0617, -0.4927,  ...,  0.1150, -0.4138, -0.0742],
          [ 0.2222,  0.0885, -0.3564,  ..., -0.3018,  0.3689,  0.1810],
          [ 0.4883,  0.4316,  0.3445,  ..., -0.3975, -0.2102,  0.0988],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]]]],
       dtype=torch.float16)

2025-06-08 11:44:20.672027 GPU 5 64401 test begin: paddle.incubate.nn.functional.variable_length_memory_efficient_attention(Tensor([3, 16, 64, 32],"float16"), Tensor([3, 2, 64, 32],"float16"), Tensor([3, 2, 64, 32],"float16"), Tensor([3],"int32"), Tensor([3],"int32"), Tensor([3, 1, 64, 64],"float16"), 0.17677669529663687, )
[accuracy error] paddle.incubate.nn.functional.variable_length_memory_efficient_attention(Tensor([3, 16, 64, 32],"float16"), Tensor([3, 2, 64, 32],"float16"), Tensor([3, 2, 64, 32],"float16"), Tensor([3],"int32"), Tensor([3],"int32"), Tensor([3, 1, 64, 64],"float16"), 0.17677669529663687, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 71819 / 98304 (73.1%)
Greatest absolute difference: 0.96484375 at index (0, 1, 2, 12) (up to 0.01 allowed)
Greatest relative difference: inf at index (0, 0, 21, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([3, 16, 64, 32]), dtype=torch.float16)
tensor([[[[-3.5986e-01,  4.2554e-01, -3.9185e-01,  ...,  4.6777e-01,
            4.0625e-01,  4.4067e-01],
          [ 4.2480e-02, -3.7329e-01, -1.8823e-01,  ..., -2.3792e-01,
            4.1870e-01,  7.4829e-02],
          [ 3.2275e-01,  1.8994e-01,  2.5195e-01,  ..., -4.2236e-02,
           -1.3416e-01,  4.7095e-01],
          ...,
          [-1.9897e-01,  4.5135e-02, -4.3335e-02,  ..., -2.8027e-01,
           -1.7590e-01, -3.3276e-01],
          [-9.0576e-02,  4.7925e-01, -4.4482e-01,  ...,  2.5146e-01,
            4.1382e-02, -2.6343e-01],
          [-2.3303e-01, -2.3328e-01,  8.2825e-02,  ..., -2.8418e-01,
            3.2007e-01,  7.4707e-02]],

         [[-3.5986e-01,  4.2554e-01, -3.9185e-01,  ...,  4.6777e-01,
            4.0625e-01,  4.4067e-01],
          [ 4.2480e-02, -3.7329e-01, -1.8823e-01,  ..., -2.3792e-01,
            4.1870e-01,  7.4829e-02],
          [ 3.2275e-01,  1.8994e-01,  2.5195e-01,  ..., -4.2236e-02,
           -1.3416e-01,  4.7095e-01],
          ...,
          [-3.5327e-01,  4.4238e-01,  8.8806e-03,  ...,  1.3611e-01,
            3.7158e-01,  3.7695e-01],
          [-3.9771e-01,  2.7124e-01,  2.7466e-01,  ..., -5.1971e-02,
            1.4896e-03,  2.5342e-01],
          [-2.7637e-01, -3.9478e-01, -3.4839e-01,  ..., -2.2168e-01,
            8.8684e-02,  2.2021e-01]],

         [[-3.5986e-01,  4.2554e-01, -3.9185e-01,  ...,  4.6777e-01,
            4.0625e-01,  4.4067e-01],
          [ 4.2480e-02, -3.7329e-01, -1.8823e-01,  ..., -2.3792e-01,
            4.1870e-01,  7.4829e-02],
          [ 3.2275e-01,  1.8994e-01,  2.5195e-01,  ..., -4.2236e-02,
           -1.3416e-01,  4.7095e-01],
          ...,
          [-3.5571e-01, -9.9945e-03,  4.2310e-01,  ..., -2.9175e-01,
           -3.2031e-01, -4.1943e-01],
          [ 1.6260e-01,  4.5850e-01, -1.6064e-01,  ..., -4.0283e-01,
            4.9707e-01,  8.7952e-02],
          [-7.1106e-02, -2.3767e-01,  4.3237e-01,  ..., -7.8247e-02,
           -8.2886e-02,  4.8413e-01]],

         ...,

         [[ 3.3887e-01, -8.6853e-02, -2.9395e-01,  ...,  6.7810e-02,
           -3.1030e-01, -1.6577e-01],
          [-9.2346e-02,  1.6724e-01, -4.7241e-01,  ..., -4.4604e-01,
            1.4221e-01, -4.9487e-01],
          [-3.9624e-01, -4.9707e-01,  6.3049e-02,  ...,  4.9170e-01,
           -1.3504e-02, -4.0552e-01],
          ...,
          [-2.1509e-01,  2.7359e-02, -9.1370e-02,  ...,  2.3975e-01,
            1.1334e-01,  4.8920e-02],
          [-3.1299e-01, -9.0393e-02,  1.9385e-01,  ..., -2.2449e-01,
           -1.3062e-01, -3.2031e-01],
          [-2.5195e-01, -9.3262e-02, -2.7319e-01,  ...,  9.1614e-02,
           -2.2595e-01,  1.9128e-01]],

         [[ 3.3887e-01, -8.6853e-02, -2.9395e-01,  ...,  6.7810e-02,
           -3.1030e-01, -1.6577e-01],
          [-9.2346e-02,  1.6724e-01, -4.7241e-01,  ..., -4.4604e-01,
            1.4221e-01, -4.9487e-01],
          [-3.9624e-01, -4.9707e-01,  6.3049e-02,  ...,  4.9170e-01,
           -1.3504e-02, -4.0552e-01],
          ...,
          [-2.1838e-01,  2.4084e-01,  4.5923e-01,  ..., -2.6001e-01,
           -3.5620e-01, -1.0187e-01],
          [ 3.1982e-01,  2.7856e-01,  1.5088e-01,  ..., -2.6196e-01,
            7.2815e-02,  3.3203e-01],
          [-4.4995e-01,  3.9185e-01, -8.0109e-05,  ..., -1.8506e-01,
           -1.5454e-01, -3.7646e-01]],

         [[ 3.3887e-01, -8.6853e-02, -2.9395e-01,  ...,  6.7810e-02,
           -3.1030e-01, -1.6577e-01],
          [-9.2346e-02,  1.6724e-01, -4.7241e-01,  ..., -4.4604e-01,
            1.4221e-01, -4.9487e-01],
          [-3.9624e-01, -4.9707e-01,  6.3049e-02,  ...,  4.9170e-01,
           -1.3504e-02, -4.0552e-01],
          ...,
          [ 3.8818e-01, -2.0789e-01,  3.0670e-02,  ..., -6.7566e-02,
           -3.9478e-01, -1.6248e-01],
          [-6.1401e-02, -2.0691e-01,  1.2213e-01,  ...,  1.4420e-02,
           -4.2773e-01,  3.6621e-01],
          [-1.7371e-01, -3.2886e-01,  4.4019e-01,  ..., -4.4629e-01,
            4.8901e-01, -2.0386e-01]]],


        [[[-1.8738e-01, -2.5366e-01,  4.8560e-01,  ...,  6.8420e-02,
           -5.3101e-02,  4.9438e-02],
          [ 2.5708e-01,  1.6699e-01,  3.2397e-01,  ...,  3.9429e-01,
            4.0430e-01, -2.7295e-01],
          [ 3.7402e-01, -4.1138e-01,  1.3147e-01,  ..., -1.6040e-01,
           -5.3223e-02, -3.4692e-01],
          ...,
          [ 3.1525e-02, -4.7314e-01,  2.2314e-01,  ...,  4.5197e-02,
            9.0637e-02,  4.8193e-01],
          [-3.2007e-01, -7.3914e-02,  2.2852e-01,  ...,  3.4741e-01,
           -7.3425e-02,  3.7085e-01],
          [ 4.8511e-01, -6.1676e-02,  7.2021e-02,  ..., -1.1310e-01,
            3.7402e-01,  4.9390e-01]],

         [[-1.8738e-01, -2.5366e-01,  4.8560e-01,  ...,  6.8420e-02,
           -5.3101e-02,  4.9438e-02],
          [ 2.5708e-01,  1.6699e-01,  3.2397e-01,  ...,  3.9429e-01,
            4.0430e-01, -2.7295e-01],
          [ 3.7402e-01, -4.1138e-01,  1.3147e-01,  ..., -1.6040e-01,
           -5.3223e-02, -3.4692e-01],
          ...,
          [ 2.4146e-01, -4.6143e-01, -2.1985e-01,  ...,  2.0276e-01,
           -3.3423e-01,  1.6028e-01],
          [-6.2164e-02,  2.7023e-02, -1.1633e-01,  ..., -3.0322e-01,
            2.6978e-01,  4.5264e-01],
          [ 2.6172e-01,  4.1895e-01, -4.1992e-02,  ...,  1.5808e-01,
           -1.3013e-01,  2.8711e-01]],

         [[-1.8738e-01, -2.5366e-01,  4.8560e-01,  ...,  6.8420e-02,
           -5.3101e-02,  4.9438e-02],
          [ 2.5708e-01,  1.6699e-01,  3.2397e-01,  ...,  3.9429e-01,
            4.0430e-01, -2.7295e-01],
          [ 3.7402e-01, -4.1138e-01,  1.3147e-01,  ..., -1.6040e-01,
           -5.3223e-02, -3.4692e-01],
          ...,
          [-3.5645e-01, -6.9763e-02,  2.8711e-01,  ...,  3.4082e-01,
            3.9087e-01,  2.3132e-01],
          [-3.8745e-01, -1.4270e-01, -4.1968e-01,  ...,  4.9146e-01,
           -8.5083e-02, -1.3013e-01],
          [ 2.1936e-01, -8.2886e-02, -1.5503e-01,  ..., -2.9639e-01,
            1.4267e-03, -3.3105e-01]],

         ...,

         [[ 2.8955e-01,  2.0007e-01, -1.3196e-01,  ...,  4.8975e-01,
           -1.9714e-01,  2.4792e-01],
          [ 4.1089e-01,  2.3486e-01,  2.8101e-01,  ...,  2.2620e-01,
            1.8890e-02,  3.6133e-01],
          [-4.0869e-01,  3.2812e-01,  3.0127e-01,  ...,  4.8267e-01,
           -2.2034e-01, -3.8550e-01],
          ...,
          [ 3.2593e-01, -4.7577e-02, -4.6021e-01,  ..., -2.9248e-01,
            8.3008e-02,  3.7500e-01],
          [-2.0776e-01, -4.1455e-01, -1.2415e-01,  ..., -3.2275e-01,
            4.7900e-01,  2.0593e-01],
          [-2.4841e-02, -2.9883e-01,  2.3145e-01,  ...,  1.1298e-01,
            1.0602e-01, -2.1899e-01]],

         [[ 2.8955e-01,  2.0007e-01, -1.3196e-01,  ...,  4.8975e-01,
           -1.9714e-01,  2.4792e-01],
          [ 4.1089e-01,  2.3486e-01,  2.8101e-01,  ...,  2.2620e-01,
            1.8890e-02,  3.6133e-01],
          [-4.0869e-01,  3.2812e-01,  3.0127e-01,  ...,  4.8267e-01,
           -2.2034e-01, -3.8550e-01],
          ...,
          [-4.7900e-01,  2.2681e-01, -3.1396e-01,  ..., -2.1863e-01,
            4.4250e-02,  4.6899e-01],
          [ 4.8682e-01, -4.7021e-01, -3.0273e-01,  ..., -3.0493e-01,
           -1.9739e-01,  4.7119e-01],
          [-9.0485e-03, -7.7026e-02,  4.4482e-01,  ...,  3.1226e-01,
           -4.5068e-01, -2.3169e-01]],

         [[ 2.8955e-01,  2.0007e-01, -1.3196e-01,  ...,  4.8975e-01,
           -1.9714e-01,  2.4792e-01],
          [ 4.1089e-01,  2.3486e-01,  2.8101e-01,  ...,  2.2620e-01,
            1.8890e-02,  3.6133e-01],
          [-4.0869e-01,  3.2812e-01,  3.0127e-01,  ...,  4.8267e-01,
           -2.2034e-01, -3.8550e-01],
          ...,
          [-2.2827e-01, -2.6953e-01,  2.6514e-01,  ...,  2.3950e-01,
            4.7577e-02,  3.5303e-01],
          [ 4.0674e-01,  1.5686e-01,  2.6025e-01,  ...,  4.3854e-02,
            1.0504e-01, -1.6815e-02],
          [-4.8145e-01,  2.7344e-01,  2.5146e-01,  ...,  3.8208e-02,
            8.7952e-02,  4.9219e-01]]],


        [[[-2.8174e-01, -9.5032e-02,  1.0089e-01,  ..., -3.1934e-01,
            4.5605e-01, -3.9246e-02],
          [ 3.6011e-01,  1.5015e-01,  4.7241e-01,  ...,  3.0371e-01,
            3.4741e-01, -2.5787e-03],
          [-4.8779e-01, -2.1332e-02,  9.8450e-02,  ...,  1.5698e-01,
           -5.1971e-02,  4.7095e-01],
          ...,
          [-3.7231e-02, -7.1228e-02,  4.7949e-01,  ..., -4.9194e-01,
           -4.4800e-01, -4.1284e-01],
          [ 1.0785e-01, -3.9355e-01, -2.2485e-01,  ..., -2.3511e-01,
           -2.6904e-01,  4.8315e-01],
          [ 1.3416e-01, -4.4189e-02,  2.0483e-01,  ...,  1.7944e-01,
           -4.8633e-01, -3.7109e-02]],

         [[-2.8174e-01, -9.5032e-02,  1.0089e-01,  ..., -3.1934e-01,
            4.5605e-01, -3.9246e-02],
          [ 3.6011e-01,  1.5015e-01,  4.7241e-01,  ...,  3.0371e-01,
            3.4741e-01, -2.5787e-03],
          [-4.8779e-01, -2.1332e-02,  9.8450e-02,  ...,  1.5698e-01,
           -5.1971e-02,  4.7095e-01],
          ...,
          [-3.6426e-01, -1.2805e-01, -4.0747e-01,  ...,  2.3730e-01,
            4.1650e-01, -4.1473e-02],
          [-4.1431e-01,  4.4214e-01,  3.6987e-01,  ...,  2.6050e-01,
            9.9548e-02,  1.6528e-01],
          [ 5.1727e-03,  1.7834e-01, -1.6345e-01,  ..., -4.8553e-02,
            1.6699e-01, -3.7451e-01]],

         [[-2.8174e-01, -9.5032e-02,  1.0089e-01,  ..., -3.1934e-01,
            4.5605e-01, -3.9246e-02],
          [ 3.6011e-01,  1.5015e-01,  4.7241e-01,  ...,  3.0371e-01,
            3.4741e-01, -2.5787e-03],
          [-4.8779e-01, -2.1332e-02,  9.8450e-02,  ...,  1.5698e-01,
           -5.1971e-02,  4.7095e-01],
          ...,
          [ 4.8755e-01,  4.5068e-01,  3.4766e-01,  ...,  3.8269e-02,
            2.0593e-01,  5.6610e-02],
          [ 1.2085e-01,  2.4756e-01, -4.9829e-01,  ..., -4.4409e-01,
            4.9170e-01,  1.7542e-01],
          [ 4.2188e-01,  3.8483e-02, -4.6948e-01,  ...,  2.3669e-01,
           -4.6289e-01, -3.6597e-01]],

         ...,

         [[ 3.5254e-01, -4.6851e-01,  8.5449e-03,  ..., -4.3872e-01,
            1.8359e-01,  1.1670e-01],
          [ 3.7817e-01, -3.8013e-01, -2.0923e-01,  ...,  7.3181e-02,
            4.9194e-01, -3.2617e-01],
          [-3.0322e-01,  4.3042e-01,  5.6580e-02,  ..., -1.2634e-01,
           -4.2090e-01, -2.5122e-01],
          ...,
          [-1.0382e-01, -3.3569e-01,  2.5220e-01,  ..., -3.0933e-01,
           -2.6807e-01,  1.6772e-01],
          [ 4.0771e-01, -1.5857e-01,  3.4497e-01,  ..., -3.0859e-01,
            8.3313e-02, -2.4634e-01],
          [-2.1082e-01,  1.6528e-01,  3.8916e-01,  ..., -2.4255e-01,
            4.6143e-01,  1.3416e-01]],

         [[ 3.5254e-01, -4.6851e-01,  8.5449e-03,  ..., -4.3872e-01,
            1.8359e-01,  1.1670e-01],
          [ 3.7817e-01, -3.8013e-01, -2.0923e-01,  ...,  7.3181e-02,
            4.9194e-01, -3.2617e-01],
          [-3.0322e-01,  4.3042e-01,  5.6580e-02,  ..., -1.2634e-01,
           -4.2090e-01, -2.5122e-01],
          ...,
          [-6.6284e-02,  5.2582e-02, -3.3838e-01,  ...,  3.8599e-01,
            2.6782e-01, -9.1553e-02],
          [-1.0687e-01, -1.1151e-01, -1.5417e-01,  ...,  3.6133e-01,
            1.5723e-01,  3.7671e-01],
          [ 1.5076e-01, -3.6890e-01, -3.7061e-01,  ...,  8.9111e-02,
            4.8242e-01, -2.4854e-01]],

         [[ 3.5254e-01, -4.6851e-01,  8.5449e-03,  ..., -4.3872e-01,
            1.8359e-01,  1.1670e-01],
          [ 3.7817e-01, -3.8013e-01, -2.0923e-01,  ...,  7.3181e-02,
            4.9194e-01, -3.2617e-01],
          [-3.0322e-01,  4.3042e-01,  5.6580e-02,  ..., -1.2634e-01,
           -4.2090e-01, -2.5122e-01],
          ...,
          [ 1.1353e-01,  8.7891e-02,  7.1167e-02,  ..., -3.1885e-01,
           -3.3057e-01, -3.1982e-01],
          [ 2.5439e-01,  2.8760e-01,  2.4170e-01,  ...,  4.3335e-01,
           -2.5659e-01, -3.7671e-01],
          [ 2.8174e-01, -4.3091e-01,  2.3279e-01,  ..., -4.2188e-01,
            7.0801e-02,  9.8328e-02]]]], dtype=torch.float16)
DESIRED: (shape=torch.Size([3, 16, 64, 32]), dtype=torch.float16)
tensor([[[[-0.3599,  0.4255, -0.3918,  ...,  0.4678,  0.4062,  0.4407],
          [ 0.0425, -0.3733, -0.1882,  ..., -0.2379,  0.4187,  0.0748],
          [ 0.3228,  0.1899,  0.2520,  ..., -0.0422, -0.1342,  0.4709],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[ 0.3389, -0.0869, -0.2939,  ...,  0.0678, -0.3103, -0.1658],
          [-0.0923,  0.1672, -0.4724,  ..., -0.4460,  0.1422, -0.4949],
          [-0.3962, -0.4971,  0.0630,  ...,  0.4917, -0.0135, -0.4055],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[-0.3599,  0.4255, -0.3918,  ...,  0.4678,  0.4062,  0.4407],
          [ 0.0425, -0.3733, -0.1882,  ..., -0.2379,  0.4187,  0.0748],
          [ 0.3228,  0.1899,  0.2520,  ..., -0.0422, -0.1342,  0.4709],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         ...,

         [[ 0.3389, -0.0869, -0.2939,  ...,  0.0678, -0.3103, -0.1658],
          [-0.0923,  0.1672, -0.4724,  ..., -0.4460,  0.1422, -0.4949],
          [-0.3962, -0.4971,  0.0630,  ...,  0.4917, -0.0135, -0.4055],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[-0.3599,  0.4255, -0.3918,  ...,  0.4678,  0.4062,  0.4407],
          [ 0.0425, -0.3733, -0.1882,  ..., -0.2379,  0.4187,  0.0748],
          [ 0.3228,  0.1899,  0.2520,  ..., -0.0422, -0.1342,  0.4709],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[ 0.3389, -0.0869, -0.2939,  ...,  0.0678, -0.3103, -0.1658],
          [-0.0923,  0.1672, -0.4724,  ..., -0.4460,  0.1422, -0.4949],
          [-0.3962, -0.4971,  0.0630,  ...,  0.4917, -0.0135, -0.4055],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]]],


        [[[-0.1874, -0.2537,  0.4856,  ...,  0.0684, -0.0531,  0.0494],
          [ 0.2571,  0.1670,  0.3240,  ...,  0.3943,  0.4043, -0.2729],
          [ 0.3740, -0.4114,  0.1315,  ..., -0.1604, -0.0532, -0.3469],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[ 0.2896,  0.2001, -0.1320,  ...,  0.4897, -0.1971,  0.2479],
          [ 0.4109,  0.2349,  0.2810,  ...,  0.2262,  0.0189,  0.3613],
          [-0.4087,  0.3281,  0.3013,  ...,  0.4827, -0.2203, -0.3855],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[-0.1874, -0.2537,  0.4856,  ...,  0.0684, -0.0531,  0.0494],
          [ 0.2571,  0.1670,  0.3240,  ...,  0.3943,  0.4043, -0.2729],
          [ 0.3740, -0.4114,  0.1315,  ..., -0.1604, -0.0532, -0.3469],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         ...,

         [[ 0.2896,  0.2001, -0.1320,  ...,  0.4897, -0.1971,  0.2479],
          [ 0.4109,  0.2349,  0.2810,  ...,  0.2262,  0.0189,  0.3613],
          [-0.4087,  0.3281,  0.3013,  ...,  0.4827, -0.2203, -0.3855],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[-0.1874, -0.2537,  0.4856,  ...,  0.0684, -0.0531,  0.0494],
          [ 0.2571,  0.1670,  0.3240,  ...,  0.3943,  0.4043, -0.2729],
          [ 0.3740, -0.4114,  0.1315,  ..., -0.1604, -0.0532, -0.3469],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[ 0.2896,  0.2001, -0.1320,  ...,  0.4897, -0.1971,  0.2479],
          [ 0.4109,  0.2349,  0.2810,  ...,  0.2262,  0.0189,  0.3613],
          [-0.4087,  0.3281,  0.3013,  ...,  0.4827, -0.2203, -0.3855],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]]],


        [[[-0.2817, -0.0950,  0.1009,  ..., -0.3193,  0.4561, -0.0392],
          [ 0.3601,  0.1501,  0.4724,  ...,  0.3037,  0.3474, -0.0026],
          [-0.4878, -0.0213,  0.0984,  ...,  0.1570, -0.0520,  0.4709],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[ 0.3525, -0.4685,  0.0085,  ..., -0.4387,  0.1836,  0.1167],
          [ 0.3782, -0.3801, -0.2092,  ...,  0.0732,  0.4919, -0.3262],
          [-0.3032,  0.4304,  0.0566,  ..., -0.1263, -0.4209, -0.2512],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[-0.2817, -0.0950,  0.1009,  ..., -0.3193,  0.4561, -0.0392],
          [ 0.3601,  0.1501,  0.4724,  ...,  0.3037,  0.3474, -0.0026],
          [-0.4878, -0.0213,  0.0984,  ...,  0.1570, -0.0520,  0.4709],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         ...,

         [[ 0.3525, -0.4685,  0.0085,  ..., -0.4387,  0.1836,  0.1167],
          [ 0.3782, -0.3801, -0.2092,  ...,  0.0732,  0.4919, -0.3262],
          [-0.3032,  0.4304,  0.0566,  ..., -0.1263, -0.4209, -0.2512],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[-0.2817, -0.0950,  0.1009,  ..., -0.3193,  0.4561, -0.0392],
          [ 0.3601,  0.1501,  0.4724,  ...,  0.3037,  0.3474, -0.0026],
          [-0.4878, -0.0213,  0.0984,  ...,  0.1570, -0.0520,  0.4709],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],

         [[ 0.3525, -0.4685,  0.0085,  ..., -0.4387,  0.1836,  0.1167],
          [ 0.3782, -0.3801, -0.2092,  ...,  0.0732,  0.4919, -0.3262],
          [-0.3032,  0.4304,  0.0566,  ..., -0.1263, -0.4209, -0.2512],
          ...,
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
          [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]]]],
       dtype=torch.float16)

2025-06-08 11:44:21.480449 GPU 5 64404 test begin: paddle.nn.functional.avg_pool3d(Tensor([2, 3, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,2,1,], ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, )
[accuracy error] paddle.nn.functional.avg_pool3d(Tensor([2, 3, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,2,1,], ceil_mode=False, exclusive=True, divisor_override=None, data_format="NCDHW", name=None, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 394 / 720 (54.7%)
Greatest absolute difference: 0.22531900818315048 at index (1, 0, 1, 0, 7) (up to 0.01 allowed)
Greatest relative difference: 5.750000000000001 at index (0, 2, 0, 0, 7) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2, 3, 3, 5, 8]), dtype=torch.float64)
tensor([[[[[ 3.6518e-02,  3.6922e-02,  1.9727e-01,  ...,  3.8043e-02,
             4.9500e-02, -2.1724e-02],
           [ 1.2803e-01,  7.9952e-02,  8.9501e-02,  ..., -1.3791e-01,
            -1.9859e-02,  3.3260e-02],
           [ 9.2153e-02,  3.0977e-02, -4.5156e-02,  ..., -7.3200e-02,
            -2.2478e-02,  2.9431e-02],
           [-7.5378e-02, -5.6007e-02, -4.8136e-02,  ..., -5.7234e-02,
            -7.7072e-02, -1.6507e-01],
           [ 1.0791e-02,  5.7712e-02,  3.7108e-02,  ..., -5.8655e-02,
            -1.4013e-01, -2.2622e-01]],

          [[-8.7091e-02, -4.9485e-02, -9.1829e-02,  ...,  2.5361e-02,
            -1.1540e-01, -6.4228e-02],
           [-1.1432e-02, -2.6736e-02, -5.6672e-02,  ...,  3.1018e-03,
            -2.3923e-02,  3.6411e-02],
           [-3.6133e-02, -2.0049e-02,  1.7477e-02,  ..., -5.7306e-02,
            -2.1880e-02,  3.4489e-02],
           [ 7.9847e-02,  6.4278e-02,  7.8081e-02,  ..., -7.4975e-02,
            -8.6414e-02, -6.8976e-02],
           [ 8.8221e-02,  3.3207e-02, -6.4436e-02,  ...,  3.2612e-02,
             1.0297e-02, -1.7501e-02]],

          [[ 2.0318e-01,  1.6961e-01,  1.2442e-01,  ..., -6.7118e-02,
            -1.1912e-01, -1.3080e-01],
           [ 1.7524e-02,  2.1026e-03, -5.7844e-02,  ..., -9.3847e-03,
            -5.9284e-02, -2.6921e-02],
           [-8.2356e-02, -5.1196e-02, -7.2108e-02,  ...,  6.6896e-02,
             1.2148e-01,  1.2461e-01],
           [-8.7993e-02, -7.2480e-02,  1.9807e-03,  ...,  1.6814e-02,
             1.3663e-02, -2.7644e-02],
           [-5.9065e-02, -3.5360e-02,  7.9901e-02,  ..., -1.5034e-01,
            -1.1541e-01, -1.5327e-01]]],


         [[[ 1.1806e-01,  1.2782e-01,  1.4146e-01,  ..., -1.2586e-01,
            -8.2758e-02, -5.5177e-02],
           [ 4.4846e-02,  5.2206e-02,  4.6410e-02,  ..., -8.7995e-02,
            -5.4169e-02, -4.0180e-02],
           [ 2.0078e-04,  5.5836e-02,  4.1592e-02,  ..., -2.3541e-02,
            -5.0817e-02, -3.5825e-02],
           [ 1.4981e-01,  1.7480e-01,  1.8736e-01,  ...,  1.4061e-02,
            -3.5937e-03, -4.7510e-02],
           [ 2.0927e-01,  1.4381e-01,  1.9911e-01,  ...,  1.0737e-01,
             1.9258e-01,  1.4924e-01]],

          [[-1.1277e-02,  9.8477e-02,  1.6160e-01,  ..., -1.7998e-01,
            -2.0528e-01, -2.2306e-01],
           [-2.7361e-02, -2.4259e-02,  9.1467e-03,  ..., -6.6987e-02,
            -4.7412e-02, -4.2131e-02],
           [-7.3807e-02, -7.7031e-02, -1.1723e-01,  ...,  2.7910e-02,
             2.3587e-03, -3.8175e-02],
           [-3.6125e-02, -2.3148e-02, -5.1608e-02,  ..., -9.8048e-03,
             1.1192e-02,  8.0459e-02],
           [-4.5520e-02, -3.2121e-02, -7.0456e-02,  ...,  8.2953e-02,
             7.5322e-02,  1.2350e-01]],

          [[ 1.9584e-01,  1.5465e-01,  1.0680e-01,  ..., -4.4399e-02,
             3.8985e-03,  3.1564e-02],
           [ 9.1518e-02,  4.1997e-02,  4.3228e-02,  ..., -6.4868e-02,
            -2.9519e-02, -4.3321e-03],
           [ 8.9024e-02,  3.8307e-02,  2.1595e-03,  ..., -1.8419e-02,
             2.4505e-02,  2.3076e-02],
           [-1.1343e-02,  2.1647e-02, -6.2160e-03,  ..., -2.6439e-03,
             5.3247e-02,  4.3973e-02],
           [-5.7842e-02, -1.1487e-02,  8.2528e-04,  ...,  3.2361e-03,
            -3.4141e-02,  2.6044e-02]]],


         [[[ 7.4665e-02,  5.0059e-02, -6.3838e-02,  ..., -1.3559e-01,
            -1.4141e-01, -2.2377e-01],
           [ 2.3709e-02,  6.4382e-03,  5.4482e-02,  ...,  3.5833e-03,
            -3.8563e-02, -9.0908e-02],
           [ 1.2482e-01,  8.2661e-02,  1.0844e-01,  ..., -7.0052e-03,
             3.5892e-03,  4.2289e-02],
           [ 1.4756e-01,  1.4705e-01,  1.8168e-01,  ...,  1.3113e-02,
            -3.1962e-02,  2.8714e-04],
           [-4.5690e-02,  5.2382e-02,  1.0506e-01,  ...,  3.3499e-02,
             2.1945e-02,  5.2385e-02]],

          [[-5.9699e-02, -4.0950e-02, -5.8725e-02,  ..., -9.1036e-02,
            -1.1375e-02,  4.5985e-03],
           [ 1.9741e-02,  2.7673e-02,  2.9773e-02,  ..., -7.1614e-02,
            -6.0143e-02, -1.4772e-02],
           [ 9.3148e-02,  6.9251e-02,  4.8602e-02,  ...,  3.6450e-02,
             1.5658e-02,  3.3056e-02],
           [ 2.2059e-02, -4.3139e-03, -8.5736e-03,  ...,  3.6767e-02,
             3.4189e-02,  7.3364e-02],
           [ 4.1049e-03, -2.9504e-03, -1.4772e-02,  ...,  4.0659e-02,
             2.8990e-02,  6.4829e-02]],

          [[-1.3231e-02, -4.2007e-02, -4.9116e-02,  ..., -7.1821e-02,
             1.1368e-02, -3.9339e-02],
           [ 7.5734e-02,  3.2480e-02,  1.0686e-02,  ...,  3.7081e-02,
             3.2000e-02, -5.1591e-03],
           [ 5.3914e-02,  2.0201e-02,  2.8001e-02,  ...,  1.1295e-01,
             5.8840e-02,  2.2318e-02],
           [-4.4992e-02, -8.4487e-03, -8.2161e-03,  ...,  1.3874e-01,
             7.9177e-02,  3.8816e-02],
           [-1.4757e-01, -7.0455e-02,  1.2466e-02,  ..., -2.3288e-03,
            -1.6258e-02,  1.1180e-02]]]],



        [[[[-2.8073e-02, -7.3308e-02,  7.7447e-02,  ...,  7.7744e-02,
             7.8195e-02,  1.7462e-01],
           [-7.6788e-02, -8.5625e-02, -3.7029e-02,  ..., -6.9809e-03,
             8.5405e-02,  2.2511e-01],
           [-1.1984e-01, -1.0401e-01, -1.2126e-01,  ..., -2.3032e-02,
             1.3222e-02,  1.3552e-02],
           [-3.9663e-02, -3.8557e-02, -1.0762e-01,  ..., -1.0492e-01,
            -5.7978e-02,  2.9623e-02],
           [ 3.3072e-02,  4.3179e-03,  1.5275e-02,  ..., -1.5773e-01,
            -6.2630e-02,  6.2852e-02]],

          [[ 1.2337e-01,  5.0482e-02, -7.1184e-02,  ...,  1.1719e-01,
             2.8585e-01,  2.8970e-01],
           [ 6.1258e-02,  5.8691e-02,  2.5590e-02,  ...,  2.5308e-02,
             9.6292e-02,  1.1142e-01],
           [-4.8617e-02, -2.7868e-02,  1.4680e-02,  ...,  9.0032e-03,
             4.7671e-02,  1.9252e-02],
           [-6.4844e-02, -2.4384e-02,  4.9391e-02,  ...,  7.4597e-02,
             1.4567e-02, -4.4712e-02],
           [-8.0818e-02, -6.1577e-02, -3.0312e-02,  ..., -1.8484e-02,
            -4.2548e-02, -4.0531e-02]],

          [[ 2.6974e-02, -5.2830e-02, -1.8716e-01,  ..., -7.5746e-02,
            -9.9100e-02, -6.2344e-02],
           [ 6.0958e-02,  2.6149e-02, -4.2085e-02,  ..., -2.4744e-02,
            -4.7905e-02, -7.9308e-02],
           [ 8.7935e-02,  1.2118e-01,  1.1574e-01,  ...,  6.5442e-03,
            -8.8062e-03, -3.6426e-02],
           [ 3.7322e-02,  1.0059e-01,  1.2460e-01,  ...,  1.3611e-02,
             3.5081e-02,  4.3694e-02],
           [ 7.4617e-02,  7.3584e-02,  7.6924e-02,  ..., -8.9901e-02,
            -9.2400e-02, -2.0798e-02]]],


         [[[-9.0852e-02, -1.1987e-01, -1.4613e-01,  ..., -2.8146e-02,
            -2.8393e-02, -5.1627e-02],
           [-1.3446e-01, -7.7203e-02, -5.7898e-03,  ..., -6.2285e-02,
            -9.8576e-03,  8.4651e-03],
           [-1.1522e-01, -4.2861e-02, -1.4336e-02,  ..., -1.0960e-01,
            -1.0969e-01, -1.5516e-01],
           [-9.0940e-02, -4.5002e-02, -9.5326e-02,  ..., -1.1845e-01,
            -1.0016e-01, -8.4274e-02],
           [ 5.3977e-02,  3.8052e-02, -7.9623e-02,  ..., -1.6008e-01,
            -8.6744e-02, -4.7604e-02]],

          [[ 1.4708e-01,  6.4944e-02, -4.2385e-02,  ..., -1.2289e-01,
             1.9982e-02, -5.1407e-02],
           [-5.1542e-02, -3.5455e-02, -6.7871e-02,  ..., -2.7578e-02,
             9.2547e-03, -6.2243e-02],
           [-6.5496e-02, -3.9430e-02, -4.1024e-02,  ..., -2.2644e-02,
            -6.2060e-02, -1.1974e-01],
           [-4.4198e-04,  3.8968e-02,  4.5617e-03,  ..., -5.6840e-02,
            -4.0864e-02, -6.7320e-02],
           [ 9.7238e-02,  7.5035e-02,  9.3205e-02,  ..., -1.1115e-01,
            -8.7549e-02, -9.5950e-02]],

          [[ 2.6282e-01,  1.1080e-01,  3.8565e-02,  ...,  1.2992e-01,
             1.0604e-02,  2.1419e-03],
           [ 5.9126e-02,  1.9793e-02, -3.4141e-02,  ...,  5.0627e-02,
             4.3544e-02,  6.7647e-02],
           [-4.9644e-02, -2.5638e-02, -1.0935e-01,  ..., -5.3536e-02,
            -5.7136e-02, -8.7444e-02],
           [ 1.3006e-02,  9.4723e-03, -9.9961e-03,  ..., -1.1943e-02,
            -5.0479e-02, -3.8925e-02],
           [-3.4278e-02,  5.6053e-02,  1.1181e-01,  ...,  8.0356e-02,
             5.0165e-03,  2.5525e-03]]],


         [[[-1.5573e-01,  3.2239e-02,  4.3893e-02,  ..., -2.3926e-01,
            -2.0032e-01, -2.1262e-01],
           [-4.3814e-03,  2.2781e-02,  1.3269e-02,  ..., -1.1264e-01,
            -9.7199e-02, -1.3681e-01],
           [ 6.1498e-02,  3.8302e-02,  1.9522e-03,  ..., -1.6005e-03,
            -6.7829e-03,  2.1667e-02],
           [ 8.8874e-02,  1.0710e-01,  1.3192e-01,  ...,  3.6849e-02,
             4.4358e-02,  6.1212e-02],
           [ 1.8692e-01,  2.0526e-01,  1.8188e-01,  ...,  2.1731e-02,
            -6.1668e-02, -4.0664e-02]],

          [[ 7.6307e-02,  1.3204e-01,  3.2372e-02,  ..., -1.5468e-01,
            -7.8802e-02,  4.0069e-02],
           [-7.6463e-02, -7.6003e-03, -2.8841e-02,  ..., -2.5237e-02,
            -1.1134e-02,  8.4905e-03],
           [-1.5578e-02, -2.1791e-02, -6.1582e-02,  ..., -1.5398e-03,
             1.9046e-02,  1.0264e-02],
           [-7.8023e-02, -1.2302e-01, -9.0285e-02,  ..., -5.4823e-02,
            -3.5682e-02, -2.0825e-02],
           [-6.5236e-02, -8.5995e-02, -4.5904e-02,  ..., -9.5908e-02,
             1.0481e-02,  5.5406e-03]],

          [[-2.3342e-02, -9.1027e-02, -1.2634e-01,  ...,  2.2140e-02,
            -6.3727e-02, -4.5007e-03],
           [-5.4359e-02, -8.2934e-02, -1.9479e-02,  ..., -3.7021e-02,
            -3.9165e-03,  7.1953e-02],
           [-1.2479e-01, -1.2457e-01, -1.4659e-02,  ..., -3.8930e-02,
             9.2820e-03,  7.9469e-02],
           [ 7.7409e-02,  4.4875e-02, -2.6534e-03,  ..., -5.0033e-02,
            -7.6648e-02, -2.1100e-02],
           [ 8.6284e-02,  5.0732e-03,  5.1492e-03,  ...,  2.0918e-02,
            -4.5632e-02,  5.2746e-03]]]]], dtype=torch.float64)
DESIRED: (shape=torch.Size([2, 3, 3, 5, 8]), dtype=torch.float64)
tensor([[[[[ 5.4100e-03,  8.2048e-03,  4.3837e-02,  ...,  8.4541e-03,
             1.1000e-02, -3.2183e-03],
           [ 5.6902e-02,  5.3302e-02,  5.9667e-02,  ..., -9.1942e-02,
            -1.3239e-02,  1.4782e-02],
           [ 4.0957e-02,  2.0652e-02, -3.0104e-02,  ..., -4.8800e-02,
            -1.4985e-02,  1.3080e-02],
           [-3.3501e-02, -3.7338e-02, -3.2090e-02,  ..., -3.8156e-02,
            -5.1382e-02, -7.3364e-02],
           [ 3.1972e-03,  2.5650e-02,  1.6492e-02,  ..., -2.6069e-02,
            -6.2280e-02, -6.7028e-02]],

          [[-1.9353e-02, -1.6495e-02, -3.0610e-02,  ...,  8.4537e-03,
            -3.8467e-02, -1.4273e-02],
           [-7.6214e-03, -2.6736e-02, -5.6672e-02,  ...,  3.1018e-03,
            -2.3923e-02,  2.4274e-02],
           [-2.4089e-02, -2.0049e-02,  1.7477e-02,  ..., -5.7306e-02,
            -2.1880e-02,  2.2993e-02],
           [ 5.3231e-02,  6.4278e-02,  7.8081e-02,  ..., -7.4975e-02,
            -8.6414e-02, -4.5984e-02],
           [ 3.9209e-02,  2.2138e-02, -4.2957e-02,  ...,  2.1742e-02,
             6.8646e-03, -7.7784e-03]],

          [[ 4.5150e-02,  5.6538e-02,  4.1473e-02,  ..., -2.2373e-02,
            -3.9707e-02, -2.9067e-02],
           [ 1.1683e-02,  2.1026e-03, -5.7844e-02,  ..., -9.3847e-03,
            -5.9284e-02, -1.7947e-02],
           [-5.4904e-02, -5.1196e-02, -7.2108e-02,  ...,  6.6896e-02,
             1.2148e-01,  8.3070e-02],
           [-5.8662e-02, -7.2480e-02,  1.9807e-03,  ...,  1.6814e-02,
             1.3663e-02, -1.8430e-02],
           [-2.6251e-02, -2.3573e-02,  5.3268e-02,  ..., -1.0023e-01,
            -7.6942e-02, -6.8121e-02]]],


         [[[ 1.7490e-02,  2.8404e-02,  3.1436e-02,  ..., -2.7968e-02,
            -1.8391e-02, -8.1744e-03],
           [ 1.9931e-02,  3.4804e-02,  3.0940e-02,  ..., -5.8664e-02,
            -3.6113e-02, -1.7858e-02],
           [ 8.9237e-05,  3.7224e-02,  2.7728e-02,  ..., -1.5694e-02,
            -3.3878e-02, -1.5922e-02],
           [ 6.6581e-02,  1.1653e-01,  1.2491e-01,  ...,  9.3738e-03,
            -2.3958e-03, -2.1115e-02],
           [ 6.2007e-02,  6.3914e-02,  8.8491e-02,  ...,  4.7720e-02,
             8.5592e-02,  4.4219e-02]],

          [[-2.5059e-03,  3.2826e-02,  5.3867e-02,  ..., -5.9993e-02,
            -6.8426e-02, -4.9570e-02],
           [-1.8240e-02, -2.4259e-02,  9.1467e-03,  ..., -6.6987e-02,
            -4.7412e-02, -2.8087e-02],
           [-4.9205e-02, -7.7031e-02, -1.1723e-01,  ...,  2.7910e-02,
             2.3587e-03, -2.5450e-02],
           [-2.4083e-02, -2.3148e-02, -5.1608e-02,  ..., -9.8048e-03,
             1.1192e-02,  5.3640e-02],
           [-2.0231e-02, -2.1414e-02, -4.6971e-02,  ...,  5.5302e-02,
             5.0214e-02,  5.4888e-02]],

          [[ 4.3521e-02,  5.1549e-02,  3.5598e-02,  ..., -1.4800e-02,
             1.2995e-03,  7.0142e-03],
           [ 6.1012e-02,  4.1997e-02,  4.3228e-02,  ..., -6.4868e-02,
            -2.9519e-02, -2.8881e-03],
           [ 5.9350e-02,  3.8307e-02,  2.1595e-03,  ..., -1.8419e-02,
             2.4505e-02,  1.5384e-02],
           [-7.5622e-03,  2.1647e-02, -6.2160e-03,  ..., -2.6439e-03,
             5.3247e-02,  2.9315e-02],
           [-2.5707e-02, -7.6580e-03,  5.5019e-04,  ...,  2.1574e-03,
            -2.2760e-02,  1.1575e-02]]],


         [[[ 1.1061e-02,  1.1124e-02, -1.4186e-02,  ..., -3.0131e-02,
            -3.1424e-02, -3.3152e-02],
           [ 1.0537e-02,  4.2921e-03,  3.6321e-02,  ...,  2.3888e-03,
            -2.5709e-02, -4.0403e-02],
           [ 5.5476e-02,  5.5108e-02,  7.2296e-02,  ..., -4.6701e-03,
             2.3928e-03,  1.8795e-02],
           [ 6.5582e-02,  9.8031e-02,  1.2112e-01,  ...,  8.7420e-03,
            -2.1308e-02,  1.2762e-04],
           [-1.3538e-02,  2.3281e-02,  4.6692e-02,  ...,  1.4889e-02,
             9.7532e-03,  1.5522e-02]],

          [[-1.3266e-02, -1.3650e-02, -1.9575e-02,  ..., -3.0345e-02,
            -3.7916e-03,  1.0219e-03],
           [ 1.3161e-02,  2.7673e-02,  2.9773e-02,  ..., -7.1614e-02,
            -6.0143e-02, -9.8478e-03],
           [ 6.2099e-02,  6.9251e-02,  4.8602e-02,  ...,  3.6450e-02,
             1.5658e-02,  2.2038e-02],
           [ 1.4706e-02, -4.3139e-03, -8.5736e-03,  ...,  3.6767e-02,
             3.4189e-02,  4.8909e-02],
           [ 1.8244e-03, -1.9669e-03, -9.8478e-03,  ...,  2.7106e-02,
             1.9327e-02,  2.8813e-02]],

          [[-2.9401e-03, -1.4002e-02, -1.6372e-02,  ..., -2.3940e-02,
             3.7895e-03, -8.7421e-03],
           [ 5.0489e-02,  3.2480e-02,  1.0686e-02,  ...,  3.7081e-02,
             3.2000e-02, -3.4394e-03],
           [ 3.5943e-02,  2.0201e-02,  2.8001e-02,  ...,  1.1295e-01,
             5.8840e-02,  1.4879e-02],
           [-2.9995e-02, -8.4487e-03, -8.2161e-03,  ...,  1.3874e-01,
             7.9177e-02,  2.5877e-02],
           [-6.5588e-02, -4.6970e-02,  8.3106e-03,  ..., -1.5525e-03,
            -1.0839e-02,  4.9690e-03]]]],



        [[[[-4.1589e-03, -1.6291e-02,  1.7210e-02,  ...,  1.7276e-02,
             1.7377e-02,  2.5869e-02],
           [-3.4128e-02, -5.7083e-02, -2.4686e-02,  ..., -4.6539e-03,
             5.6937e-02,  1.0005e-01],
           [-5.3260e-02, -6.9341e-02, -8.0840e-02,  ..., -1.5355e-02,
             8.8147e-03,  6.0230e-03],
           [-1.7628e-02, -2.5705e-02, -7.1749e-02,  ..., -6.9950e-02,
            -3.8652e-02,  1.3166e-02],
           [ 9.7992e-03,  1.9191e-03,  6.7889e-03,  ..., -7.0104e-02,
            -2.7836e-02,  1.8623e-02]],

          [[ 2.7415e-02,  1.6827e-02, -2.3728e-02,  ...,  3.9062e-02,
             9.5284e-02,  6.4377e-02],
           [ 4.0839e-02,  5.8691e-02,  2.5590e-02,  ...,  2.5308e-02,
             9.6292e-02,  7.4282e-02],
           [-3.2412e-02, -2.7868e-02,  1.4680e-02,  ...,  9.0032e-03,
             4.7671e-02,  1.2835e-02],
           [-4.3229e-02, -2.4384e-02,  4.9391e-02,  ...,  7.4597e-02,
             1.4567e-02, -2.9808e-02],
           [-3.5919e-02, -4.1051e-02, -2.0208e-02,  ..., -1.2323e-02,
            -2.8365e-02, -1.8014e-02]],

          [[ 5.9943e-03, -1.7610e-02, -6.2388e-02,  ..., -2.5249e-02,
            -3.3033e-02, -1.3854e-02],
           [ 4.0639e-02,  2.6149e-02, -4.2085e-02,  ..., -2.4744e-02,
            -4.7905e-02, -5.2872e-02],
           [ 5.8624e-02,  1.2118e-01,  1.1574e-01,  ...,  6.5442e-03,
            -8.8062e-03, -2.4284e-02],
           [ 2.4881e-02,  1.0059e-01,  1.2460e-01,  ...,  1.3611e-02,
             3.5081e-02,  2.9129e-02],
           [ 3.3163e-02,  4.9056e-02,  5.1283e-02,  ..., -5.9934e-02,
            -6.1600e-02, -9.2434e-03]]],


         [[[-1.3460e-02, -2.6638e-02, -3.2474e-02,  ..., -6.2547e-03,
            -6.3097e-03, -7.6485e-03],
           [-5.9761e-02, -5.1469e-02, -3.8599e-03,  ..., -4.1523e-02,
            -6.5717e-03,  3.7623e-03],
           [-5.1211e-02, -2.8574e-02, -9.5573e-03,  ..., -7.3064e-02,
            -7.3126e-02, -6.8959e-02],
           [-4.0418e-02, -3.0002e-02, -6.3551e-02,  ..., -7.8964e-02,
            -6.6775e-02, -3.7455e-02],
           [ 1.5993e-02,  1.6912e-02, -3.5388e-02,  ..., -7.1145e-02,
            -3.8553e-02, -1.4105e-02]],

          [[ 3.2684e-02,  2.1648e-02, -1.4128e-02,  ..., -4.0963e-02,
             6.6608e-03, -1.1424e-02],
           [-3.4362e-02, -3.5455e-02, -6.7871e-02,  ..., -2.7578e-02,
             9.2547e-03, -4.1496e-02],
           [-4.3664e-02, -3.9430e-02, -4.1024e-02,  ..., -2.2644e-02,
            -6.2060e-02, -7.9829e-02],
           [-2.9465e-04,  3.8968e-02,  4.5617e-03,  ..., -5.6840e-02,
            -4.0864e-02, -4.4880e-02],
           [ 4.3217e-02,  5.0023e-02,  6.2136e-02,  ..., -7.4100e-02,
            -5.8366e-02, -4.2645e-02]],

          [[ 5.8405e-02,  3.6933e-02,  1.2855e-02,  ...,  4.3305e-02,
             3.5346e-03,  4.7599e-04],
           [ 3.9417e-02,  1.9793e-02, -3.4141e-02,  ...,  5.0627e-02,
             4.3544e-02,  4.5098e-02],
           [-3.3096e-02, -2.5638e-02, -1.0935e-01,  ..., -5.3536e-02,
            -5.7136e-02, -5.8296e-02],
           [ 8.6706e-03,  9.4723e-03, -9.9961e-03,  ..., -1.1943e-02,
            -5.0479e-02, -2.5950e-02],
           [-1.5234e-02,  3.7368e-02,  7.4543e-02,  ...,  5.3570e-02,
             3.3444e-03,  1.1344e-03]]],


         [[[-2.3072e-02,  7.1642e-03,  9.7539e-03,  ..., -5.3169e-02,
            -4.4516e-02, -3.1500e-02],
           [-1.9473e-03,  1.5187e-02,  8.8460e-03,  ..., -7.5092e-02,
            -6.4799e-02, -6.0805e-02],
           [ 2.7332e-02,  2.5535e-02,  1.3015e-03,  ..., -1.0670e-03,
            -4.5219e-03,  9.6300e-03],
           [ 3.9499e-02,  7.1402e-02,  8.7946e-02,  ...,  2.4566e-02,
             2.9572e-02,  2.7205e-02],
           [ 5.5385e-02,  9.1225e-02,  8.0835e-02,  ...,  9.6583e-03,
            -2.7408e-02, -1.2049e-02]],

          [[ 1.6957e-02,  4.4013e-02,  1.0791e-02,  ..., -5.1559e-02,
            -2.6267e-02,  8.9043e-03],
           [-5.0975e-02, -7.6003e-03, -2.8841e-02,  ..., -2.5237e-02,
            -1.1134e-02,  5.6603e-03],
           [-1.0386e-02, -2.1791e-02, -6.1582e-02,  ..., -1.5398e-03,
             1.9046e-02,  6.8426e-03],
           [-5.2015e-02, -1.2302e-01, -9.0285e-02,  ..., -5.4823e-02,
            -3.5682e-02, -1.3884e-02],
           [-2.8994e-02, -5.7330e-02, -3.0603e-02,  ..., -6.3938e-02,
             6.9872e-03,  2.4625e-03]],

          [[-5.1871e-03, -3.0342e-02, -4.2113e-02,  ...,  7.3800e-03,
            -2.1242e-02, -1.0001e-03],
           [-3.6240e-02, -8.2934e-02, -1.9479e-02,  ..., -3.7021e-02,
            -3.9165e-03,  4.7969e-02],
           [-8.3194e-02, -1.2457e-01, -1.4659e-02,  ..., -3.8930e-02,
             9.2820e-03,  5.2979e-02],
           [ 5.1606e-02,  4.4875e-02, -2.6534e-03,  ..., -5.0033e-02,
            -7.6648e-02, -1.4066e-02],
           [ 3.8348e-02,  3.3821e-03,  3.4328e-03,  ...,  1.3945e-02,
            -3.0421e-02,  2.3443e-03]]]]], dtype=torch.float64)

2025-06-08 11:44:21.612899 GPU 5 64401 test begin: paddle.nn.functional.avg_pool3d(x=Tensor([2, 3, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,2,1,], exclusive=True, )
[accuracy error] paddle.nn.functional.avg_pool3d(x=Tensor([2, 3, 8, 8, 8],"float64"), kernel_size=list[3,3,3,], stride=list[3,2,1,], padding=list[1,2,1,], exclusive=True, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 386 / 720 (53.6%)
Greatest absolute difference: 0.29721087975021865 at index (1, 1, 0, 0, 7) (up to 0.01 allowed)
Greatest relative difference: 5.750000000000001 at index (0, 1, 0, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2, 3, 3, 5, 8]), dtype=torch.float64)
tensor([[[[[-2.9407e-03,  3.7251e-02,  7.9051e-02,  ..., -1.4355e-01,
            -5.0688e-02, -2.3889e-01],
           [-4.1182e-03, -6.4178e-03, -2.2732e-02,  ..., -9.0222e-02,
            -2.0033e-02, -4.6085e-02],
           [-4.8771e-02, -4.4946e-02,  1.0883e-02,  ...,  1.1009e-01,
             1.8749e-01,  2.2332e-01],
           [ 6.7253e-02,  8.8947e-02,  1.5819e-01,  ...,  6.6775e-02,
             8.7040e-02,  1.4581e-01],
           [ 6.7168e-02,  8.4518e-02,  5.4850e-02,  ..., -3.4591e-02,
             9.5137e-03, -2.4800e-03]],

          [[ 1.6680e-01,  1.7495e-01,  1.7704e-01,  ...,  1.5514e-01,
             1.0835e-01,  1.0263e-01],
           [ 1.0080e-01,  1.1407e-01,  8.0842e-02,  ...,  7.1802e-02,
             2.3490e-02, -2.7905e-02],
           [ 5.8670e-02,  1.6952e-02, -5.5970e-02,  ..., -1.2794e-01,
            -9.2330e-02, -1.1823e-01],
           [ 8.5130e-02,  4.7462e-02,  3.3168e-02,  ..., -3.9504e-02,
            -1.0926e-02,  9.7653e-03],
           [ 7.2226e-02,  5.2012e-02,  4.8513e-03,  ...,  1.0917e-01,
             1.2434e-01,  9.4082e-02]],

          [[-6.1481e-02, -1.5317e-02,  1.0257e-01,  ..., -1.8265e-01,
            -1.0264e-01, -6.4491e-02],
           [-5.8552e-02, -5.9695e-02, -2.4914e-02,  ..., -1.7435e-02,
            -3.3846e-02, -5.7795e-02],
           [-7.2151e-03, -2.6757e-02, -4.2368e-02,  ...,  7.0232e-02,
             4.5966e-03, -8.0724e-02],
           [-2.3177e-02, -2.7930e-03,  4.8626e-02,  ...,  5.4967e-02,
             5.1877e-02,  1.0291e-02],
           [-2.6664e-02, -7.7434e-02,  4.5085e-02,  ..., -2.3732e-02,
             2.8467e-02,  7.2328e-02]]],


         [[[ 1.5112e-01,  2.0173e-02, -4.7972e-02,  ..., -3.7118e-02,
             1.9445e-02, -1.6562e-02],
           [ 4.9100e-02,  3.2044e-02,  8.0288e-03,  ...,  6.5780e-02,
             2.3882e-02,  3.8011e-02],
           [-3.5330e-02, -1.3687e-03, -5.7589e-02,  ...,  7.8201e-02,
             2.9504e-02,  5.4887e-02],
           [-2.6203e-02, -3.9114e-02, -6.7335e-02,  ...,  2.5401e-02,
            -3.1771e-02, -1.1141e-02],
           [ 3.3145e-02,  7.8930e-02,  1.2573e-01,  ..., -6.3366e-02,
            -5.5021e-02, -2.5077e-02]],

          [[ 1.3509e-01,  1.6262e-01,  1.8933e-01,  ...,  9.0228e-02,
             6.0643e-02,  9.4619e-02],
           [ 7.5676e-02,  5.8641e-02,  3.6519e-02,  ...,  4.9799e-02,
             3.5236e-02,  6.3915e-02],
           [-6.0293e-02, -8.6139e-02, -1.3346e-01,  ...,  9.1205e-02,
             7.6566e-02,  3.3037e-02],
           [-7.8076e-02, -1.0353e-01, -8.7429e-02,  ...,  6.9608e-02,
             2.1786e-02,  8.7253e-03],
           [-1.0289e-02, -5.8082e-02, -8.4316e-02,  ..., -2.9311e-02,
            -1.2130e-02,  4.4277e-02]],

          [[-9.6490e-02, -9.8158e-02, -1.2692e-01,  ...,  3.0447e-02,
            -1.4478e-02, -2.1097e-02],
           [-3.8120e-02, -2.0461e-02, -3.8178e-02,  ...,  5.2845e-02,
             7.9200e-02,  1.1010e-01],
           [ 1.2041e-02,  1.0042e-02, -2.2194e-02,  ...,  1.0093e-01,
             1.0086e-01,  1.0100e-01],
           [ 3.1523e-02,  1.9830e-02, -1.1719e-02,  ..., -2.1352e-02,
            -2.4341e-03, -3.7437e-02],
           [ 1.2645e-01,  5.1059e-02, -1.4314e-02,  ..., -6.5933e-02,
            -6.1635e-02, -6.5654e-02]]],


         [[[ 3.4187e-01,  1.4650e-01,  6.0101e-02,  ..., -1.5987e-01,
            -2.0492e-01, -2.5828e-01],
           [ 2.6993e-02,  7.7801e-03, -2.1156e-02,  ..., -8.8164e-02,
            -1.0014e-01, -7.7359e-02],
           [-7.0477e-02, -7.3521e-02, -3.7601e-02,  ...,  2.0820e-02,
             3.9404e-02,  1.2665e-01],
           [-1.5381e-01, -6.9261e-02, -3.0656e-03,  ..., -2.7553e-03,
             5.6725e-03,  4.7117e-03],
           [-6.3775e-02, -2.2679e-02,  2.1365e-04,  ..., -4.2129e-02,
             3.6750e-02,  1.7687e-02]],

          [[-6.5051e-02, -1.0111e-01, -1.4343e-01,  ...,  6.7481e-02,
             2.9303e-02, -1.4114e-03],
           [ 7.6388e-03, -1.6980e-02, -1.6431e-02,  ..., -3.8694e-02,
            -2.6099e-02,  3.4448e-02],
           [ 7.9916e-02,  3.9145e-02, -3.1642e-02,  ...,  5.7687e-03,
            -2.2475e-02,  1.3859e-02],
           [ 4.5374e-02,  5.1209e-03, -3.7675e-02,  ..., -4.8351e-02,
            -1.7487e-02,  2.5886e-03],
           [ 9.9524e-02,  5.4692e-02, -6.0006e-03,  ..., -6.4788e-02,
            -3.2596e-02,  5.8781e-02]],

          [[ 2.0805e-01,  4.7195e-02,  7.2763e-02,  ..., -1.2794e-01,
             2.2657e-02,  1.8986e-01],
           [ 7.8810e-02, -2.1816e-02, -7.4831e-02,  ..., -3.3340e-02,
             1.5365e-02,  8.4015e-02],
           [ 1.2249e-02,  2.2571e-02, -2.6220e-02,  ..., -5.4772e-02,
             2.3677e-02,  4.7288e-02],
           [ 1.9065e-02,  8.6504e-02,  3.8538e-02,  ...,  1.7090e-02,
             4.3615e-02,  8.0781e-02],
           [-9.9186e-02, -4.0649e-02,  1.2384e-03,  ..., -6.2923e-02,
            -3.6642e-02,  4.1899e-02]]]],



        [[[[-2.7103e-01, -1.3237e-01, -9.5504e-02,  ...,  1.1105e-01,
             1.4840e-01,  3.1516e-01],
           [-1.1141e-01, -5.9263e-02, -6.9856e-02,  ..., -4.0186e-02,
             1.4946e-02,  5.7053e-02],
           [-8.2629e-03, -4.3557e-02, -9.5440e-02,  ..., -5.2445e-02,
            -6.6818e-02, -3.2366e-02],
           [ 2.0381e-02,  1.0293e-02, -1.3450e-02,  ...,  3.6579e-02,
             4.0539e-02,  5.9667e-02],
           [-2.9814e-02, -1.4880e-02,  9.3978e-02,  ...,  1.0081e-01,
             1.7364e-01,  1.7430e-01]],

          [[ 8.6901e-03,  4.7767e-02,  8.2965e-02,  ...,  3.1905e-02,
            -6.2633e-03,  1.5212e-01],
           [-8.3324e-02,  3.4200e-03,  4.9408e-02,  ...,  1.6953e-02,
            -6.3298e-02, -2.6653e-02],
           [-9.0491e-02, -5.3039e-02, -1.6736e-02,  ..., -2.3594e-02,
            -9.5049e-02, -4.8389e-02],
           [-4.0012e-02, -1.2698e-02, -1.4831e-02,  ...,  8.9017e-03,
             1.3807e-02, -2.3866e-02],
           [-1.1186e-01, -9.5565e-02, -1.1587e-01,  ...,  7.2878e-03,
             3.2078e-02, -5.3470e-02]],

          [[-2.1225e-01, -2.0892e-01, -2.1233e-01,  ..., -1.1379e-02,
             4.6646e-02,  2.1466e-02],
           [-1.3395e-01, -1.1657e-01, -5.4939e-02,  ..., -9.6842e-02,
             1.4211e-02,  4.4798e-03],
           [-6.1718e-02, -2.1181e-02,  1.9662e-02,  ..., -4.5872e-02,
             1.5394e-02,  5.3632e-02],
           [ 7.1697e-02,  2.4662e-02, -3.8421e-02,  ..., -3.5421e-02,
            -3.3338e-03,  5.6049e-02],
           [ 1.1224e-01,  5.5209e-02, -1.5056e-02,  ...,  7.5878e-03,
             1.0426e-02,  2.6906e-02]]],


         [[[ 1.1943e-01,  7.1892e-03, -3.5379e-02,  ...,  2.4157e-01,
             2.4436e-01,  3.4890e-01],
           [ 8.2659e-02,  3.8368e-02, -8.3603e-03,  ...,  6.3988e-02,
             8.4040e-02,  1.1470e-01],
           [-2.8068e-02,  7.4611e-02,  9.2326e-02,  ..., -4.7850e-02,
            -2.5716e-02, -8.6007e-02],
           [ 7.1329e-02,  9.5563e-02,  3.4728e-02,  ...,  6.8590e-02,
            -1.6177e-02, -7.5503e-02],
           [ 1.0680e-02, -5.0529e-04,  7.2458e-03,  ..., -1.4288e-02,
            -8.7003e-02, -1.4982e-02]],

          [[-1.4916e-01, -1.3685e-01, -4.5550e-02,  ...,  1.1180e-01,
             9.9701e-02,  5.5535e-02],
           [-3.8462e-02, -6.2271e-02, -7.8972e-02,  ...,  9.1801e-02,
             7.1293e-02,  4.7116e-02],
           [-1.1504e-01, -1.1624e-01, -1.3596e-01,  ...,  2.0915e-04,
             3.7232e-03,  5.6743e-02],
           [-1.2578e-01, -1.0829e-01, -1.4458e-01,  ...,  1.0360e-02,
             5.4290e-02,  7.8885e-02],
           [ 1.0398e-02,  1.9216e-02, -9.7730e-03,  ..., -5.7069e-02,
            -4.2232e-02, -7.7194e-02]],

          [[-1.5895e-01, -1.0454e-01,  8.7098e-02,  ..., -2.2062e-01,
            -1.0118e-01, -1.1706e-01],
           [-3.9796e-02, -3.3512e-02,  5.7016e-02,  ..., -6.8755e-02,
             6.0231e-03, -4.0200e-02],
           [-3.5632e-02, -5.2670e-02, -8.6510e-02,  ...,  2.6360e-02,
             4.7339e-02, -3.6762e-02],
           [-1.3791e-02, -4.3016e-02, -8.3273e-02,  ..., -4.3249e-02,
            -9.1913e-02, -1.2693e-01],
           [-7.5945e-03, -1.1055e-02,  1.0813e-02,  ..., -5.6920e-02,
            -1.1461e-01, -1.7937e-01]]],


         [[[ 1.8786e-01,  1.6755e-01,  2.2058e-01,  ..., -5.4335e-02,
            -1.9897e-01, -2.6263e-01],
           [ 1.8336e-01,  1.3032e-01,  7.8628e-02,  ..., -3.1879e-02,
            -4.7494e-02, -8.1211e-02],
           [-3.0123e-02, -1.0009e-02,  6.6541e-02,  ...,  2.5935e-02,
            -4.9204e-02, -9.7961e-02],
           [-1.2980e-01, -8.1997e-02, -1.6557e-02,  ...,  9.4776e-02,
            -3.7386e-03, -3.0718e-02],
           [ 1.7278e-02, -3.4186e-02, -3.5314e-02,  ...,  3.7992e-02,
             2.3017e-02,  6.2490e-02]],

          [[-4.3050e-02, -5.0729e-02,  2.5289e-02,  ...,  3.7851e-02,
             7.2558e-02,  1.1707e-01],
           [ 1.0782e-02, -6.6014e-03,  9.7432e-03,  ..., -2.4862e-02,
             4.8909e-02,  7.7825e-02],
           [-6.1168e-03, -4.3492e-03, -1.1235e-02,  ...,  1.2215e-02,
             4.4869e-02,  6.3691e-02],
           [ 2.0962e-02, -8.9429e-03, -6.8952e-02,  ...,  4.5079e-02,
             6.3235e-02,  3.3686e-02],
           [ 3.8084e-02,  3.0303e-02,  8.2134e-02,  ..., -4.1592e-02,
             7.0241e-03,  9.5036e-03]],

          [[-1.5410e-01, -1.5301e-01, -2.3588e-01,  ...,  1.6331e-01,
             2.3512e-01,  2.7479e-01],
           [-7.1547e-03, -2.9649e-02, -8.7740e-02,  ...,  1.8141e-02,
             4.7287e-02,  8.6232e-02],
           [ 1.3958e-01,  9.3816e-02,  3.5188e-02,  ..., -3.3084e-03,
            -4.3019e-02,  3.2496e-03],
           [ 4.1766e-03,  2.9354e-02,  1.5202e-02,  ...,  5.7016e-02,
             6.1058e-03, -8.2049e-02],
           [-5.3279e-02, -1.6051e-02,  1.1480e-01,  ...,  4.7978e-02,
             4.9906e-02,  4.7295e-02]]]]], dtype=torch.float64)
DESIRED: (shape=torch.Size([2, 3, 3, 5, 8]), dtype=torch.float64)
tensor([[[[[-4.3566e-04,  8.2781e-03,  1.7567e-02,  ..., -3.1901e-02,
            -1.1264e-02, -3.5392e-02],
           [-1.8303e-03, -4.2785e-03, -1.5155e-02,  ..., -6.0148e-02,
            -1.3356e-02, -2.0482e-02],
           [-2.1676e-02, -2.9964e-02,  7.2553e-03,  ...,  7.3390e-02,
             1.2499e-01,  9.9252e-02],
           [ 2.9890e-02,  5.9298e-02,  1.0546e-01,  ...,  4.4517e-02,
             5.8026e-02,  6.4804e-02],
           [ 1.9902e-02,  3.7564e-02,  2.4378e-02,  ..., -1.5374e-02,
             4.2283e-03, -7.3482e-04]],

          [[ 3.7068e-02,  5.8315e-02,  5.9013e-02,  ...,  5.1714e-02,
             3.6118e-02,  2.2806e-02],
           [ 6.7201e-02,  1.1407e-01,  8.0842e-02,  ...,  7.1802e-02,
             2.3490e-02, -1.8603e-02],
           [ 3.9113e-02,  1.6952e-02, -5.5970e-02,  ..., -1.2794e-01,
            -9.2330e-02, -7.8818e-02],
           [ 5.6753e-02,  4.7462e-02,  3.3168e-02,  ..., -3.9504e-02,
            -1.0926e-02,  6.5102e-03],
           [ 3.2101e-02,  3.4675e-02,  3.2342e-03,  ...,  7.2782e-02,
             8.2891e-02,  4.1814e-02]],

          [[-1.3662e-02, -5.1056e-03,  3.4189e-02,  ..., -6.0882e-02,
            -3.4214e-02, -1.4331e-02],
           [-3.9035e-02, -5.9695e-02, -2.4914e-02,  ..., -1.7435e-02,
            -3.3846e-02, -3.8530e-02],
           [-4.8101e-03, -2.6757e-02, -4.2368e-02,  ...,  7.0232e-02,
             4.5966e-03, -5.3816e-02],
           [-1.5451e-02, -2.7930e-03,  4.8626e-02,  ...,  5.4967e-02,
             5.1877e-02,  6.8604e-03],
           [-1.1850e-02, -5.1623e-02,  3.0057e-02,  ..., -1.5821e-02,
             1.8978e-02,  3.2146e-02]]],


         [[[ 2.2389e-02,  4.4829e-03, -1.0661e-02,  ..., -8.2486e-03,
             4.3212e-03, -2.4536e-03],
           [ 2.1822e-02,  2.1363e-02,  5.3526e-03,  ...,  4.3853e-02,
             1.5921e-02,  1.6894e-02],
           [-1.5702e-02, -9.1246e-04, -3.8393e-02,  ...,  5.2134e-02,
             1.9669e-02,  2.4394e-02],
           [-1.1646e-02, -2.6076e-02, -4.4890e-02,  ...,  1.6934e-02,
            -2.1180e-02, -4.9517e-03],
           [ 9.8207e-03,  3.5080e-02,  5.5879e-02,  ..., -2.8163e-02,
            -2.4454e-02, -7.4303e-03]],

          [[ 3.0019e-02,  5.4206e-02,  6.3109e-02,  ...,  3.0076e-02,
             2.0214e-02,  2.1026e-02],
           [ 5.0450e-02,  5.8641e-02,  3.6519e-02,  ...,  4.9799e-02,
             3.5236e-02,  4.2610e-02],
           [-4.0195e-02, -8.6139e-02, -1.3346e-01,  ...,  9.1205e-02,
             7.6566e-02,  2.2025e-02],
           [-5.2051e-02, -1.0353e-01, -8.7429e-02,  ...,  6.9608e-02,
             2.1786e-02,  5.8169e-03],
           [-4.5730e-03, -3.8721e-02, -5.6210e-02,  ..., -1.9541e-02,
            -8.0868e-03,  1.9679e-02]],

          [[-2.1442e-02, -3.2719e-02, -4.2308e-02,  ...,  1.0149e-02,
            -4.8259e-03, -4.6881e-03],
           [-2.5413e-02, -2.0461e-02, -3.8178e-02,  ...,  5.2845e-02,
             7.9200e-02,  7.3401e-02],
           [ 8.0272e-03,  1.0042e-02, -2.2194e-02,  ...,  1.0093e-01,
             1.0086e-01,  6.7336e-02],
           [ 2.1015e-02,  1.9830e-02, -1.1719e-02,  ..., -2.1352e-02,
            -2.4341e-03, -2.4958e-02],
           [ 5.6200e-02,  3.4039e-02, -9.5427e-03,  ..., -4.3955e-02,
            -4.1090e-02, -2.9180e-02]]],


         [[[ 5.0647e-02,  3.2555e-02,  1.3356e-02,  ..., -3.5527e-02,
            -4.5539e-02, -3.8263e-02],
           [ 1.1997e-02,  5.1867e-03, -1.4104e-02,  ..., -5.8776e-02,
            -6.6759e-02, -3.4382e-02],
           [-3.1323e-02, -4.9014e-02, -2.5067e-02,  ...,  1.3880e-02,
             2.6270e-02,  5.6287e-02],
           [-6.8361e-02, -4.6174e-02, -2.0437e-03,  ..., -1.8369e-03,
             3.7816e-03,  2.0941e-03],
           [-1.8896e-02, -1.0080e-02,  9.4955e-05,  ..., -1.8724e-02,
             1.6333e-02,  5.2405e-03]],

          [[-1.4456e-02, -3.3704e-02, -4.7810e-02,  ...,  2.2494e-02,
             9.7678e-03, -3.1364e-04],
           [ 5.0926e-03, -1.6980e-02, -1.6431e-02,  ..., -3.8694e-02,
            -2.6099e-02,  2.2965e-02],
           [ 5.3277e-02,  3.9145e-02, -3.1642e-02,  ...,  5.7687e-03,
            -2.2475e-02,  9.2391e-03],
           [ 3.0250e-02,  5.1209e-03, -3.7675e-02,  ..., -4.8351e-02,
            -1.7487e-02,  1.7257e-03],
           [ 4.4233e-02,  3.6461e-02, -4.0004e-03,  ..., -4.3192e-02,
            -2.1731e-02,  2.6125e-02]],

          [[ 4.6234e-02,  1.5732e-02,  2.4254e-02,  ..., -4.2646e-02,
             7.5522e-03,  4.2192e-02],
           [ 5.2540e-02, -2.1816e-02, -7.4831e-02,  ..., -3.3340e-02,
             1.5365e-02,  5.6010e-02],
           [ 8.1660e-03,  2.2571e-02, -2.6220e-02,  ..., -5.4772e-02,
             2.3677e-02,  3.1526e-02],
           [ 1.2710e-02,  8.6504e-02,  3.8538e-02,  ...,  1.7090e-02,
             4.3615e-02,  5.3854e-02],
           [-4.4083e-02, -2.7100e-02,  8.2558e-04,  ..., -4.1949e-02,
            -2.4428e-02,  1.8622e-02]]]],



        [[[[-4.0152e-02, -2.9416e-02, -2.1223e-02,  ...,  2.4678e-02,
             3.2977e-02,  4.6690e-02],
           [-4.9517e-02, -3.9509e-02, -4.6571e-02,  ..., -2.6790e-02,
             9.9641e-03,  2.5357e-02],
           [-3.6724e-03, -2.9038e-02, -6.3627e-02,  ..., -3.4963e-02,
            -4.4545e-02, -1.4385e-02],
           [ 9.0583e-03,  6.8621e-03, -8.9669e-03,  ...,  2.4386e-02,
             2.7026e-02,  2.6519e-02],
           [-8.8337e-03, -6.6133e-03,  4.1768e-02,  ...,  4.4806e-02,
             7.7174e-02,  5.1644e-02]],

          [[ 1.9311e-03,  1.5922e-02,  2.7655e-02,  ...,  1.0635e-02,
            -2.0878e-03,  3.3803e-02],
           [-5.5550e-02,  3.4200e-03,  4.9408e-02,  ...,  1.6953e-02,
            -6.3298e-02, -1.7768e-02],
           [-6.0327e-02, -5.3039e-02, -1.6736e-02,  ..., -2.3594e-02,
            -9.5049e-02, -3.2260e-02],
           [-2.6674e-02, -1.2698e-02, -1.4831e-02,  ...,  8.9017e-03,
             1.3807e-02, -1.5911e-02],
           [-4.9714e-02, -6.3710e-02, -7.7246e-02,  ...,  4.8585e-03,
             2.1386e-02, -2.3764e-02]],

          [[-4.7166e-02, -6.9638e-02, -7.0776e-02,  ..., -3.7929e-03,
             1.5549e-02,  4.7703e-03],
           [-8.9298e-02, -1.1657e-01, -5.4939e-02,  ..., -9.6842e-02,
             1.4211e-02,  2.9865e-03],
           [-4.1145e-02, -2.1181e-02,  1.9662e-02,  ..., -4.5872e-02,
             1.5394e-02,  3.5755e-02],
           [ 4.7798e-02,  2.4662e-02, -3.8421e-02,  ..., -3.5421e-02,
            -3.3338e-03,  3.7366e-02],
           [ 4.9886e-02,  3.6806e-02, -1.0037e-02,  ...,  5.0585e-03,
             6.9504e-03,  1.1958e-02]]],


         [[[ 1.7694e-02,  1.5976e-03, -7.8621e-03,  ...,  5.3682e-02,
             5.4302e-02,  5.1689e-02],
           [ 3.6737e-02,  2.5578e-02, -5.5735e-03,  ...,  4.2659e-02,
             5.6027e-02,  5.0978e-02],
           [-1.2475e-02,  4.9741e-02,  6.1551e-02,  ..., -3.1900e-02,
            -1.7144e-02, -3.8225e-02],
           [ 3.1702e-02,  6.3709e-02,  2.3152e-02,  ...,  4.5726e-02,
            -1.0785e-02, -3.3557e-02],
           [ 3.1644e-03, -2.2457e-04,  3.2204e-03,  ..., -6.3503e-03,
            -3.8668e-02, -4.4390e-03]],

          [[-3.3146e-02, -4.5616e-02, -1.5183e-02,  ...,  3.7268e-02,
             3.3234e-02,  1.2341e-02],
           [-2.5641e-02, -6.2271e-02, -7.8972e-02,  ...,  9.1801e-02,
             7.1293e-02,  3.1411e-02],
           [-7.6693e-02, -1.1624e-01, -1.3596e-01,  ...,  2.0915e-04,
             3.7232e-03,  3.7829e-02],
           [-8.3856e-02, -1.0829e-01, -1.4458e-01,  ...,  1.0360e-02,
             5.4290e-02,  5.2590e-02],
           [ 4.6214e-03,  1.2811e-02, -6.5153e-03,  ..., -3.8046e-02,
            -2.8155e-02, -3.4308e-02]],

          [[-3.5323e-02, -3.4846e-02,  2.9033e-02,  ..., -7.3541e-02,
            -3.3726e-02, -2.6013e-02],
           [-2.6530e-02, -3.3512e-02,  5.7016e-02,  ..., -6.8755e-02,
             6.0231e-03, -2.6800e-02],
           [-2.3755e-02, -5.2670e-02, -8.6510e-02,  ...,  2.6360e-02,
             4.7339e-02, -2.4508e-02],
           [-9.1937e-03, -4.3016e-02, -8.3273e-02,  ..., -4.3249e-02,
            -9.1913e-02, -8.4622e-02],
           [-3.3753e-03, -7.3700e-03,  7.2086e-03,  ..., -3.7947e-02,
            -7.6407e-02, -7.9720e-02]]],


         [[[ 2.7831e-02,  3.7234e-02,  4.9017e-02,  ..., -1.2074e-02,
            -4.4216e-02, -3.8908e-02],
           [ 8.1493e-02,  8.6879e-02,  5.2419e-02,  ..., -2.1252e-02,
            -3.1663e-02, -3.6094e-02],
           [-1.3388e-02, -6.6724e-03,  4.4361e-02,  ...,  1.7290e-02,
            -3.2803e-02, -4.3538e-02],
           [-5.7690e-02, -5.4665e-02, -1.1038e-02,  ...,  6.3184e-02,
            -2.4924e-03, -1.3653e-02],
           [ 5.1195e-03, -1.5194e-02, -1.5695e-02,  ...,  1.6885e-02,
             1.0230e-02,  1.8515e-02]],

          [[-9.5668e-03, -1.6910e-02,  8.4298e-03,  ...,  1.2617e-02,
             2.4186e-02,  2.6015e-02],
           [ 7.1878e-03, -6.6014e-03,  9.7432e-03,  ..., -2.4862e-02,
             4.8909e-02,  5.1883e-02],
           [-4.0779e-03, -4.3492e-03, -1.1235e-02,  ...,  1.2215e-02,
             4.4869e-02,  4.2461e-02],
           [ 1.3974e-02, -8.9429e-03, -6.8952e-02,  ...,  4.5079e-02,
             6.3235e-02,  2.2457e-02],
           [ 1.6926e-02,  2.0202e-02,  5.4756e-02,  ..., -2.7728e-02,
             4.6828e-03,  4.2238e-03]],

          [[-3.4245e-02, -5.1003e-02, -7.8626e-02,  ...,  5.4438e-02,
             7.8374e-02,  6.1065e-02],
           [-4.7698e-03, -2.9649e-02, -8.7740e-02,  ...,  1.8141e-02,
             4.7287e-02,  5.7488e-02],
           [ 9.3056e-02,  9.3816e-02,  3.5188e-02,  ..., -3.3084e-03,
            -4.3019e-02,  2.1664e-03],
           [ 2.7844e-03,  2.9354e-02,  1.5202e-02,  ...,  5.7016e-02,
             6.1058e-03, -5.4699e-02],
           [-2.3679e-02, -1.0701e-02,  7.6534e-02,  ...,  3.1985e-02,
             3.3271e-02,  2.1020e-02]]]]], dtype=torch.float64)

