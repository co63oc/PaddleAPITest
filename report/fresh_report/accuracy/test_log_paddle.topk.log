paddle.topk(Tensor([1, 101, 40656],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([1, 102, 37044],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([1, 102, 65856],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([1, 105, 75600],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([1, 107, 24276],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([1, 109, 33600],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([1, 113, 56784],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([1, 122, 75600],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([1, 127, 70644],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([1, 129, 65856],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([1, 13, 75600],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([1, 131, 24276],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([1, 138, 56784],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([1, 139, 44436],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([1, 14, 21504],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([1, 14, 7056],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([1, 140, 30324],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([1, 15, 24276],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([1, 156, 30324],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([1, 16, 40656],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([1, 16, 70644],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([1, 168, 40656],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([1, 17, 27216],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([1, 17, 30324],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([1, 172, 37044],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([1, 19, 40656],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([1, 190, 52500],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([1, 196, 75600],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([1, 20, 37044],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([1, 209, 33600],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([1, 21, 52500],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([1, 21, 61236],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([1, 210, 75600],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([1, 218, 70644],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([1, 22, 30324],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([1, 22, 33600],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([1, 22, 44436],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([1, 225, 44436],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([1, 24, 44436],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([1, 24, 70644],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([1, 249, 48384],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([1, 25, 33600],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([1, 26, 37044],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([1, 26, 44436],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([1, 28, 61236],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([1, 28, 70644],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([1, 29, 44436],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([1, 29, 75600],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([1, 296, 24276],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([1, 3, 44436],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([1, 30, 33600],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([1, 30, 65856],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([1, 30, 70644],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([1, 31, 21504],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([1, 329, 33600],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([1, 333, 40656],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([1, 34, 52500],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([1, 35, 40656],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([1, 35, 44436],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([1, 36, 33600],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([1, 36, 65856],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([1, 37, 44436],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([1, 37, 56784],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([1, 37, 70644],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([1, 38, 24276],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([1, 38, 56784],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([1, 39, 44436],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([1, 39, 61236],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([1, 39, 65856],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([1, 39, 70644],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([1, 4, 56784],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([1, 40, 65856],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([1, 400, 65856],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([1, 41, 40656],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([1, 41, 70644],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([1, 42, 65856],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([1, 43, 65856],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([1, 44, 30324],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([1, 44, 56784],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([1, 45, 40656],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([1, 46, 44436],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([1, 46, 61236],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([1, 47, 30324],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([1, 47, 61236],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([1, 49, 40656],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([1, 49, 65856],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([1, 50, 48384],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([1, 51, 37044],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([1, 51, 56784],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([1, 51, 61236],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([1, 52, 52500],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([1, 54, 61236],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([1, 55, 70644],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([1, 56, 37044],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([1, 56, 75600],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([1, 59, 27216],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([1, 59, 48384],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([1, 6, 48384],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([1, 60, 52500],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([1, 60, 56784],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([1, 60, 61236],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([1, 62, 27216],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([1, 62, 75600],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([1, 63, 30324],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([1, 65, 48384],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([1, 65, 61236],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([1, 65, 65856],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([1, 65, 75600],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([1, 67, 75600],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([1, 68, 56784],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([1, 69, 44436],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([1, 70, 24276],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([1, 70, 52500],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([1, 71, 33600],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([1, 73, 56784],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([1, 73, 70644],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([1, 73, 75600],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([1, 74, 65856],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([1, 76, 70644],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([1, 80, 27216],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([1, 80, 56784],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([1, 80, 70644],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([1, 81, 48384],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([1, 83, 52500],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([1, 83, 65856],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([1, 84, 75600],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([1, 87, 70644],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([1, 91, 52500],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([1, 93, 37044],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([1, 96, 52500],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([1, 99, 27216],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([1022, 14],"float32"), 10, axis=0, )
paddle.topk(Tensor([128, 1000],"float16"), k=5, )
paddle.topk(Tensor([12906, 215],"float32"), 10, axis=0, )
paddle.topk(Tensor([1302, 7],"float32"), 10, axis=0, )
paddle.topk(Tensor([14, 400],"float16"), k=5, )
paddle.topk(Tensor([14877, 420],"float32"), 10, axis=0, )
paddle.topk(Tensor([1490, 7],"float32"), 10, axis=0, )
paddle.topk(Tensor([15548, 1358],"float32"), k=3, largest=True, )
paddle.topk(Tensor([1593, 31],"float32"), 10, axis=0, )
paddle.topk(Tensor([16, 10, 9216],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([16, 13, 3600],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([16, 14, 1936],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([16, 14, 5776],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([16, 15, 6400],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([16, 16, 5184],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([16, 17, 7744],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([16, 18, 9216],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([16, 19, 1156],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([16, 19, 1296],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([16, 19, 7744],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([16, 19, 9216],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([16, 20, 2304],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([16, 20, 6400],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([16, 20, 7056],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([16, 21, 1156],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([16, 21, 5184],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([16, 21, 9216],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([16, 23, 169],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([16, 23, 8464],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([16, 24, 1764],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([16, 24, 3600],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([16, 24, 5776],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([16, 24, 7744],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([16, 25, 1764],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([16, 26, 6400],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([16, 27, 2304],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([16, 27, 7744],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([16, 27, 8464],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([16, 29, 4624],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([16, 29, 7744],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([16, 30, 2304],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([16, 30, 7056],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([16, 30, 7744],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([16, 31, 7744],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([16, 32, 4096],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([16, 33, 1296],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([16, 33, 3600],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([16, 35, 8464],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([16, 36, 7056],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([16, 37, 7056],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([16, 38, 5184],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([16, 38, 5776],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([16, 39, 6400],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([16, 40, 2704],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([16, 40, 6400],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([16, 400],"float16"), k=5, )
paddle.topk(Tensor([16, 42, 1024],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([16, 42, 2704],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([16, 42, 4096],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([16, 43, 2116],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([16, 43, 4624],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([16, 43, 7744],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([16, 43, 8464],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([16, 45, 1936],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([16, 45, 7744],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([16, 55, 6400],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([16121, 811],"float32"), 10, axis=0, )
paddle.topk(Tensor([1726, 17],"float32"), 10, axis=0, )
paddle.topk(Tensor([1876, 18],"float32"), 10, axis=0, )
paddle.topk(Tensor([1944, 42],"float32"), 10, axis=0, )
paddle.topk(Tensor([2, 102, 4725],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([2, 103, 4725],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([2, 103, 8400],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([2, 106, 8400],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([2, 11, 3136],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([2, 117, 10164],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([2, 119, 6804],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([2, 122, 10164],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([2, 123, 3024],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([2, 123, 7581],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([2, 125, 6069],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([2, 131, 2541],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([2, 133, 6069],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([2, 138, 6069],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([2, 141, 12096],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([2, 145, 7581],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([2, 146, 8400],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([2, 149, 11109],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([2, 155, 7581],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([2, 156, 12096],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([2, 157, 5376],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([2, 158, 11109],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([2, 169, 12096],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([2, 176, 5376],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([2, 194, 6804],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([2, 196, 5376],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([2, 227, 5376],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([2, 240, 9261],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([2, 249, 12096],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([2, 249, 7581],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([2, 25, 8400],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([2, 28, 12096],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([2, 283, 4725],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([2, 284, 8400],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([2, 293, 10164],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([2, 296, 9261],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([2, 30, 3549],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([2, 31, 9261],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([2, 319, 2541],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([2, 32, 4116],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([2, 324, 6804],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([2, 329, 3549],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([2, 329, 4725],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([2, 333, 8400],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([2, 34, 11109],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([2, 36, 6804],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([2, 36, 9261],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([2, 37, 10164],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([2, 37, 8400],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([2, 4, 6069],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([2, 40, 10164],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([2, 41, 10164],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([2, 41, 9261],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([2, 42, 11109],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([2, 42, 5376],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([2, 44, 11109],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([2, 461, 2541],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([2, 461, 3549],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([2, 47, 4116],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([2, 52, 11109],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([2, 52, 4725],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([2, 52, 9261],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([2, 56, 11109],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([2, 57, 11109],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([2, 58, 4116],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([2, 59, 5376],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([2, 63, 5376],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([2, 66, 3549],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([2, 68, 11109],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([2, 68, 4116],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([2, 69, 4116],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([2, 71, 10164],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([2, 71, 11109],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([2, 73, 7581],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([2, 76, 10164],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([2, 76, 11109],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([2, 78, 11109],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([2, 78, 9261],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([2, 79, 11109],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([2, 79, 4116],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([2, 80, 10164],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([2, 81, 11109],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([2, 81, 6804],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([2, 81, 7581],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([2, 84, 6804],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([2, 85, 10164],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([2, 85, 11109],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([2, 87, 9261],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([2, 9, 11109],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([2, 9, 5376],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([2, 93, 10164],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([2, 94, 8400],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([2, 96, 8400],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([2, 97, 7581],"float32"), 13, axis=-1, largest=True, )
paddle.topk(Tensor([2053, 3],"float32"), 10, axis=0, )
paddle.topk(Tensor([2102, 12],"float32"), 10, axis=0, )
paddle.topk(Tensor([2254, 11],"float32"), 10, axis=0, )
paddle.topk(Tensor([2313, 12],"float32"), 10, axis=0, )
paddle.topk(Tensor([2399, 17],"float32"), 10, axis=0, )
paddle.topk(Tensor([2515, 4],"float32"), 10, axis=0, )
paddle.topk(Tensor([26736, 3029],"float32"), k=3, largest=True, )
paddle.topk(Tensor([3032, 5],"float32"), 10, axis=0, )
paddle.topk(Tensor([32, 400],"float16"), k=5, )
paddle.topk(Tensor([3223, 49],"float32"), 10, axis=0, )
paddle.topk(Tensor([3593, 58],"float32"), 10, axis=0, )
paddle.topk(Tensor([3897, 13],"float32"), 10, axis=0, )
paddle.topk(Tensor([4, 120, 6400],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([4, 127, 1444],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([4, 130, 900],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([4, 163, 196],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([4, 163, 784],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([4, 171, 7744],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([4, 173, 1444],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([4, 180, 5776],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([4, 22, 7744],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([4, 26, 225],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([4, 272, 7056],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([4, 29, 7056],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([4, 39, 8464],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([4, 50, 2304],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([4, 525, 9216],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([4, 83, 6400],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([4, 89, 7744],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([4, 92, 1444],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([4, 97, 4096],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([4789, 15],"float32"), 10, axis=0, )
paddle.topk(Tensor([64, 16, 400],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([64, 17, 2304],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([64, 18, 1296],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([64, 18, 2304],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([64, 19, 2304],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([64, 20, 1600],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([64, 20, 484],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([64, 21, 1024],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([64, 21, 1296],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([64, 22, 1936],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([64, 22, 2304],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([64, 23, 1296],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([64, 23, 484],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([64, 24, 484],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([64, 26, 1024],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([64, 26, 1600],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([64, 26, 2304],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([64, 27, 1600],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([64, 28, 1600],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([64, 29, 1936],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([64, 30, 144],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([64, 31, 576],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([64, 32, 1024],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([64, 35, 2304],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([64, 35, 576],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([64, 36, 2304],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([64, 36, 400],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([64, 36, 576],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([64, 37, 1936],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([64, 39, 2304],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([64, 43, 484],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([64, 46, 324],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([64, 47, 2304],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([64, 48, 1600],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([64, 50, 2304],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([64, 53, 1296],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([64, 54, 576],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([6684, 3029],"float32"), k=3, largest=True, )
paddle.topk(Tensor([8, 11, 6400],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([8, 11, 7056],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([8, 14, 441],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([8, 16, 4096],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([8, 16, 4624],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([8, 19, 7056],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([8, 20, 9216],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([8, 22, 5776],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([8, 23, 9216],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([8, 24, 484],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([8, 25, 5776],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([8, 26, 4624],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([8, 26, 7056],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([8, 27, 5776],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([8, 27, 8464],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([8, 28, 2116],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([8, 29, 1600],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([8, 30, 5184],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([8, 31, 1600],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([8, 33, 3136],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([8, 33, 441],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([8, 35, 3136],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([8, 35, 7744],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([8, 37, 4624],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([8, 37, 6400],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([8, 37, 8464],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([8, 4, 7056],"float32"), 9, axis=-1, largest=False, )
paddle.topk(Tensor([8, 41, 7056],"float32"), 9, axis=-1, largest=False, )


grep: warning: GREP_OPTIONS is deprecated; please use an alias or script
2025-05-27 04:46:00.239376 test begin: paddle.topk(Tensor([1, 101, 40656],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
W0527 04:46:04.907534 155689 gpu_resources.cc:119] Please NOTE: device: 0, GPU Compute Capability: 8.0, Driver API Version: 12.0, Runtime API Version: 11.8
W0527 04:46:04.908689 155689 gpu_resources.cc:164] device: 0, cuDNN Version: 8.8.
[accuracy error] paddle.topk(Tensor([1, 101, 40656],"float32"), 13, axis=-1, largest=True, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 4 / 1313 (0.3%)
Greatest absolute difference: 16467 at index (0, 99, 4) (up to 0.01 allowed)
Greatest relative difference: 45.875 at index (0, 42, 1) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 101, 13]), dtype=torch.int64)
First 100 elements: tensor([35386, 32064,  3114, 10626, 16568, 25281, 16945,   359, 13807,  6434,
         8581, 31759,  2889, 33537, 24010, 11081, 10700, 23627, 15716, 35954,
         8744,   516,  6460,  1112, 18925, 19923,  4842, 23409,  2856, 21639,
        16660, 39414, 15395, 30337, 32734, 33458, 19534, 31541, 22677, 37724,
        29876, 39291, 20937, 39170, 26160,  8151,   301, 24402, 14578,  9921,
         4586, 20701, 31621, 22535,  8144, 36957, 18738, 40043,   383, 32588,
         5036, 13691, 39156, 24685,  8945, 13807, 16229, 21228, 13007, 12977,
         1654, 16268, 30472, 25304, 16329, 29190,  2730, 18748, 40047, 25515,
        13440, 13998, 16052, 31483, 27374,  5795, 15826, 10487, 11131,  1148,
        21982, 32448, 27907, 14851, 12793, 39848, 18648, 39506, 33955, 14587])
DESIRED: (shape=torch.Size([1, 101, 13]), dtype=torch.int64)
First 100 elements: tensor([35386, 32064,  3114, 10626, 16568, 25281, 16945,   359, 13807,  6434,
         8581, 31759,  2889, 33537, 24010, 11081, 10700, 23627, 15716, 35954,
         8744,   516,  6460,  1112, 18925, 19923,  4842, 23409,  2856, 21639,
        16660, 39414, 15395, 30337, 32734, 33458, 19534, 31541, 22677, 37724,
        29876, 39291, 20937, 39170, 26160,  8151,   301, 24402, 14578,  9921,
         4586, 20701, 31621, 22535,  8144, 36957, 18738, 40043,   383, 32588,
         5036, 13691, 39156, 24685,  8945, 13807, 16229, 21228, 13007, 12977,
         1654, 16268, 30472, 25304, 16329, 29190,  2730, 18748, 40047, 25515,
        13440, 13998, 16052, 31483, 27374,  5795, 15826, 10487, 11131,  1148,
        21982, 32448, 27907, 14851, 12793, 39848, 18648, 39506, 33955, 14587])
2025-05-27 04:46:04.933925 test begin: paddle.topk(Tensor([1, 102, 37044],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.topk(Tensor([1, 102, 37044],"float32"), 13, axis=-1, largest=True, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 4 / 1326 (0.3%)
Greatest absolute difference: 35304 at index (0, 98, 4) (up to 0.01 allowed)
Greatest relative difference: 77.93377685546875 at index (0, 98, 5) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 102, 13]), dtype=torch.int64)
First 100 elements: tensor([23096, 35056,  4814, 11856, 31866, 29409,  7242, 29560, 14625,   705,
        22183, 11822, 28578, 36759, 11886,  2789, 29893,  9774, 14798, 22863,
         4684, 21732,   693, 18778, 20498, 13987,   869, 20691, 35907, 32862,
        32860, 27530, 13627, 17120, 34242, 33425, 25533,   793,  5394,  4478,
        30171, 26282, 10218, 36365,  4985, 29016, 24231,  9839, 32401, 22497,
         4735, 13309, 16844,  3420, 30700, 19799, 35703, 13415, 33477, 13595,
        34274, 12592,  2841, 11803, 10355, 15695, 14248,  4821,  9778, 18270,
         5553, 21924,  1158, 18045, 16072, 17204, 21816,  8429, 35094, 18270,
         5910, 18894, 27757, 31057,  6058, 14640,  7045, 26223,  6800,  1178,
        35229, 23004,  7277, 20592, 23081,  2480, 14380, 29631, 28927, 11071])
DESIRED: (shape=torch.Size([1, 102, 13]), dtype=torch.int64)
First 100 elements: tensor([23096, 35056,  4814, 11856, 31866, 29409,  7242, 29560, 14625,   705,
        22183, 11822, 28578, 36759, 11886,  2789, 29893,  9774, 14798, 22863,
         4684, 21732,   693, 18778, 20498, 13987,   869, 20691, 35907, 32862,
        32860, 27530, 13627, 17120, 34242, 33425, 25533,   793,  5394,  4478,
        30171, 26282, 10218, 36365,  4985, 29016, 24231,  9839, 32401, 22497,
         4735, 13309, 16844,  3420, 30700, 19799, 35703, 13415, 33477, 13595,
        34274, 12592,  2841, 11803, 10355, 15695, 14248,  4821,  9778, 18270,
         5553, 21924,  1158, 18045, 16072, 17204, 21816,  8429, 35094, 18270,
         5910, 18894, 27757, 31057,  6058, 14640,  7045, 26223,  6800,  1178,
        35229, 23004,  7277, 20592, 23081,  2480, 14380, 29631, 28927, 11071])
2025-05-27 04:46:05.130447 test begin: paddle.topk(Tensor([1, 102, 65856],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([1, 102, 65856],"float32"), 13, axis=-1, largest=True, )
2025-05-27 04:46:05.334308 test begin: paddle.topk(Tensor([1, 105, 75600],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.topk(Tensor([1, 105, 75600],"float32"), 13, axis=-1, largest=True, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 2 / 1365 (0.1%)
Greatest absolute difference: 21240 at index (0, 31, 9) (up to 0.01 allowed)
Greatest relative difference: 0.3909658193588257 at index (0, 31, 10) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 105, 13]), dtype=torch.int64)
First 100 elements: tensor([33963, 58772, 21002, 34137, 63921, 48968, 41904, 14412,   977, 10682,
        16375, 24632, 16712, 24525, 30232, 64533,  9700, 42332, 15192,  1974,
        65110,  2483,    51, 53932, 35703, 44875, 51383, 25113, 58038, 35378,
         1865, 11420, 30035, 33320, 31542, 13261, 48752, 27569, 40980, 56221,
        38206, 27035, 43436, 21282, 29632,  9246, 66690, 38201, 45436, 49026,
         5450, 23323, 52497, 57701, 52138, 46918, 30950, 61645, 19331, 54101,
        16026,   586, 58917,  7799,  4034, 26866, 19729, 58922, 31364, 75156,
        24766, 58696, 17568, 41014, 74234, 40440, 69148, 56291, 45815, 60321,
        14167, 30219,  8419,  6190, 24140,  6163, 12840, 51108, 23462, 22419,
        73095, 58574, 44780, 62026, 52691,  9910, 25288, 62245,  1966, 24184])
DESIRED: (shape=torch.Size([1, 105, 13]), dtype=torch.int64)
First 100 elements: tensor([33963, 58772, 21002, 34137, 63921, 48968, 41904, 14412,   977, 10682,
        16375, 24632, 16712, 24525, 30232, 64533,  9700, 42332, 15192,  1974,
        65110,  2483,    51, 53932, 35703, 44875, 51383, 25113, 58038, 35378,
         1865, 11420, 30035, 33320, 31542, 13261, 48752, 27569, 40980, 56221,
        38206, 27035, 43436, 21282, 29632,  9246, 66690, 38201, 45436, 49026,
         5450, 23323, 52497, 57701, 52138, 46918, 30950, 61645, 19331, 54101,
        16026,   586, 58917,  7799,  4034, 26866, 19729, 58922, 31364, 75156,
        24766, 58696, 17568, 41014, 74234, 40440, 69148, 56291, 45815, 60321,
        14167, 30219,  8419,  6190, 24140,  6163, 12840, 51108, 23462, 22419,
        73095, 58574, 44780, 62026, 52691,  9910, 25288, 62245,  1966, 24184])
2025-05-27 04:46:05.552337 test begin: paddle.topk(Tensor([1, 107, 24276],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([1, 107, 24276],"float32"), 13, axis=-1, largest=True, )
2025-05-27 04:46:05.684041 test begin: paddle.topk(Tensor([1, 109, 33600],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([1, 109, 33600],"float32"), 13, axis=-1, largest=True, )
2025-05-27 04:46:05.829031 test begin: paddle.topk(Tensor([1, 113, 56784],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.topk(Tensor([1, 113, 56784],"float32"), 13, axis=-1, largest=True, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 2 / 1469 (0.1%)
Greatest absolute difference: 10313 at index (0, 33, 5) (up to 0.01 allowed)
Greatest relative difference: 0.6538388133049011 at index (0, 33, 6) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 113, 13]), dtype=torch.int64)
First 100 elements: tensor([35942,  9511, 15636, 14547, 48163, 41749,  8048, 31367, 40565, 50526,
        25342,  8350,  1601, 31419, 19726, 17455,  6862, 21980, 25785, 14604,
        49952, 51259, 49115, 45759, 36368, 11506, 40519, 36855, 42066, 52836,
        34368,  8661, 18965, 20710, 44712, 56376, 31373, 50093, 49353, 27070,
        30248,  6575, 28169, 16073, 49500, 39030, 28047, 29880, 10981, 31077,
        22507, 26073, 49665, 39714, 45493,  4125, 37903, 11269, 11931, 22807,
        52691, 15568, 18589, 54858,   460, 42106, 21302, 39836, 19514, 48103,
        43821, 13256, 40867, 12491, 19728,  4385, 40852, 15242, 43086, 54072,
         9047, 37610, 53661,  9924, 37434,  6671, 53540, 25100, 48072, 32789,
        10652, 53818,  3719,  7764,   196, 51337, 43846,   349, 20413,  4456])
DESIRED: (shape=torch.Size([1, 113, 13]), dtype=torch.int64)
First 100 elements: tensor([35942,  9511, 15636, 14547, 48163, 41749,  8048, 31367, 40565, 50526,
        25342,  8350,  1601, 31419, 19726, 17455,  6862, 21980, 25785, 14604,
        49952, 51259, 49115, 45759, 36368, 11506, 40519, 36855, 42066, 52836,
        34368,  8661, 18965, 20710, 44712, 56376, 31373, 50093, 49353, 27070,
        30248,  6575, 28169, 16073, 49500, 39030, 28047, 29880, 10981, 31077,
        22507, 26073, 49665, 39714, 45493,  4125, 37903, 11269, 11931, 22807,
        52691, 15568, 18589, 54858,   460, 42106, 21302, 39836, 19514, 48103,
        43821, 13256, 40867, 12491, 19728,  4385, 40852, 15242, 43086, 54072,
         9047, 37610, 53661,  9924, 37434,  6671, 53540, 25100, 48072, 32789,
        10652, 53818,  3719,  7764,   196, 51337, 43846,   349, 20413,  4456])
2025-05-27 04:46:06.028470 test begin: paddle.topk(Tensor([1, 122, 75600],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([1, 122, 75600],"float32"), 13, axis=-1, largest=True, )
2025-05-27 04:46:06.281425 test begin: paddle.topk(Tensor([1, 127, 70644],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([1, 127, 70644],"float32"), 13, axis=-1, largest=True, )
2025-05-27 04:46:06.529308 test begin: paddle.topk(Tensor([1, 129, 65856],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.topk(Tensor([1, 129, 65856],"float32"), 13, axis=-1, largest=True, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 4 / 1677 (0.2%)
Greatest absolute difference: 13773 at index (0, 35, 4) (up to 0.01 allowed)
Greatest relative difference: 0.3206901252269745 at index (0, 35, 5) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 129, 13]), dtype=torch.int64)
First 100 elements: tensor([65496, 56109,  8653, 17066, 12572, 58362, 39808, 45165,  3168,  2721,
        25706, 16978,  8291, 17752, 13373, 60537, 22094, 25021, 20536, 57773,
        18962, 50754, 30306, 26959, 41744, 37719,  8782, 12575,  9990, 13947,
        40410, 65157, 47215, 12777, 40231, 41051,  5580, 14324, 25529, 37307,
        58417, 54011,  7182, 52456, 36711,   791, 54920, 31600, 19788, 63985,
          800,   527, 39495, 65286, 59205, 56968, 51501, 38396, 34301, 53484,
         4085, 12640, 25048, 26658, 28118, 45404,  6618, 65485, 58351, 28599,
         5853,  8371, 38495,  6167, 28388, 28316,  5895,  1536, 60952, 17312,
         7018, 61982, 37403, 54410, 64654,  3793, 31568,   369, 40939, 57569,
        28349, 15090,  5172, 17927, 50109, 42866, 61116, 53918, 30952,  3557])
DESIRED: (shape=torch.Size([1, 129, 13]), dtype=torch.int64)
First 100 elements: tensor([65496, 56109,  8653, 17066, 12572, 58362, 39808, 45165,  3168,  2721,
        25706, 16978,  8291, 17752, 13373, 60537, 22094, 25021, 20536, 57773,
        18962, 50754, 30306, 26959, 41744, 37719,  8782, 12575,  9990, 13947,
        40410, 65157, 47215, 12777, 40231, 41051,  5580, 14324, 25529, 37307,
        58417, 54011,  7182, 52456, 36711,   791, 54920, 31600, 19788, 63985,
          800,   527, 39495, 65286, 59205, 56968, 51501, 38396, 34301, 53484,
         4085, 12640, 25048, 26658, 28118, 45404,  6618, 65485, 58351, 28599,
         5853,  8371, 38495,  6167, 28388, 28316,  5895,  1536, 60952, 17312,
         7018, 61982, 37403, 54410, 64654,  3793, 31568,   369, 40939, 57569,
        28349, 15090,  5172, 17927, 50109, 42866, 61116, 53918, 30952,  3557])
2025-05-27 04:46:06.770979 test begin: paddle.topk(Tensor([1, 13, 75600],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([1, 13, 75600],"float32"), 13, axis=-1, largest=True, )
2025-05-27 04:46:06.886131 test begin: paddle.topk(Tensor([1, 131, 24276],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.topk(Tensor([1, 131, 24276],"float32"), 13, axis=-1, largest=True, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 2 / 1703 (0.1%)
Greatest absolute difference: 4475 at index (0, 80, 6) (up to 0.01 allowed)
Greatest relative difference: 3.901482105255127 at index (0, 80, 7) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 131, 13]), dtype=torch.int64)
First 100 elements: tensor([ 5619,  1661, 18385, 21127,  3502,  4179, 19597,  4428, 20317, 23663,
         8832,  2639,  5209, 11856,  6103,  4181, 15088, 16337,  3551,  6939,
        17031,  6949,  9587,  5115, 18035,  7511, 15493,  5896, 12746,  2566,
        16271,  4107, 20675, 14419,  2503, 11687, 18011,  7437,  4555,  3263,
        23517, 19346, 19258, 20325, 16915,  8268,  6969,  7584, 14986, 13829,
         8800,  6380, 22290,  6855, 14546, 13547,  1280,  3291,  1794, 15841,
         6888, 10873, 19015,  1112, 22552, 21268,  8952, 10322, 10522, 20375,
        16129, 10417,  2645,  7193, 18032, 23037,  2942,  7461, 11538, 14114,
         1946, 21198,  3309,  8846, 10761, 10864, 17423,   469, 10802,  4077,
        21778, 10533,  9027, 17141, 12911, 10074,    68,  8085, 18720,  5827])
DESIRED: (shape=torch.Size([1, 131, 13]), dtype=torch.int64)
First 100 elements: tensor([ 5619,  1661, 18385, 21127,  3502,  4179, 19597,  4428, 20317, 23663,
         8832,  2639,  5209, 11856,  6103,  4181, 15088, 16337,  3551,  6939,
        17031,  6949,  9587,  5115, 18035,  7511, 15493,  5896, 12746,  2566,
        16271,  4107, 20675, 14419,  2503, 11687, 18011,  7437,  4555,  3263,
        23517, 19346, 19258, 20325, 16915,  8268,  6969,  7584, 14986, 13829,
         8800,  6380, 22290,  6855, 14546, 13547,  1280,  3291,  1794, 15841,
         6888, 10873, 19015,  1112, 22552, 21268,  8952, 10322, 10522, 20375,
        16129, 10417,  2645,  7193, 18032, 23037,  2942,  7461, 11538, 14114,
         1946, 21198,  3309,  8846, 10761, 10864, 17423,   469, 10802,  4077,
        21778, 10533,  9027, 17141, 12911, 10074,    68,  8085, 18720,  5827])
2025-05-27 04:46:07.026758 test begin: paddle.topk(Tensor([1, 138, 56784],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.topk(Tensor([1, 138, 56784],"float32"), 13, axis=-1, largest=True, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 4 / 1794 (0.2%)
Greatest absolute difference: 32140 at index (0, 0, 10) (up to 0.01 allowed)
Greatest relative difference: 2.1297333240509033 at index (0, 64, 11) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 138, 13]), dtype=torch.int64)
First 100 elements: tensor([11423, 14695, 43757, 27058, 12192,  2233,  6353, 52694, 34145, 44170,
        16125, 48265, 47417, 42492, 23931, 47325,  9732, 39323, 54967, 18644,
         4834,  3242, 43236, 11766,   379, 14191, 43182, 11895, 19913, 16053,
        21979, 51768, 42904, 41374, 48435, 32174, 34139, 34527, 19659, 20767,
        48487, 42363, 12007,  2136, 46542, 10482, 52985, 24761,  1186,  1420,
        18788, 54924, 16584, 38709, 28415, 42999, 19381, 33398, 24859, 27077,
        39872, 29013, 48488, 17194,  5490, 29624, 39837, 27318, 33029, 19636,
        46818, 35448, 27107, 14538, 31782, 50960, 41453, 56235, 50796, 46296,
        18494, 53044, 10147, 11809, 37929, 49870, 17824, 52524,  7515, 43691,
        55952,  1063, 10321,   104, 47313, 41359, 32968, 36177,  3639, 10601])
DESIRED: (shape=torch.Size([1, 138, 13]), dtype=torch.int64)
First 100 elements: tensor([11423, 14695, 43757, 27058, 12192,  2233,  6353, 52694, 34145, 44170,
        48265, 16125, 47417, 42492, 23931, 47325,  9732, 39323, 54967, 18644,
         4834,  3242, 43236, 11766,   379, 14191, 43182, 11895, 19913, 16053,
        21979, 51768, 42904, 41374, 48435, 32174, 34139, 34527, 19659, 20767,
        48487, 42363, 12007,  2136, 46542, 10482, 52985, 24761,  1186,  1420,
        18788, 54924, 16584, 38709, 28415, 42999, 19381, 33398, 24859, 27077,
        39872, 29013, 48488, 17194,  5490, 29624, 39837, 27318, 33029, 19636,
        46818, 35448, 27107, 14538, 31782, 50960, 41453, 56235, 50796, 46296,
        18494, 53044, 10147, 11809, 37929, 49870, 17824, 52524,  7515, 43691,
        55952,  1063, 10321,   104, 47313, 41359, 32968, 36177,  3639, 10601])
2025-05-27 04:46:07.248991 test begin: paddle.topk(Tensor([1, 139, 44436],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([1, 139, 44436],"float32"), 13, axis=-1, largest=True, )
2025-05-27 04:46:07.446408 test begin: paddle.topk(Tensor([1, 14, 21504],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([1, 14, 21504],"float32"), 13, axis=-1, largest=True, )
2025-05-27 04:46:07.551518 test begin: paddle.topk(Tensor([1, 14, 7056],"float32"), 9, axis=-1, largest=False, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([1, 14, 7056],"float32"), 9, axis=-1, largest=False, )
2025-05-27 04:46:07.658141 test begin: paddle.topk(Tensor([1, 140, 30324],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([1, 140, 30324],"float32"), 13, axis=-1, largest=True, )
2025-05-27 04:46:07.830275 test begin: paddle.topk(Tensor([1, 15, 24276],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([1, 15, 24276],"float32"), 13, axis=-1, largest=True, )
2025-05-27 04:46:07.939731 test begin: paddle.topk(Tensor([1, 156, 30324],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.topk(Tensor([1, 156, 30324],"float32"), 13, axis=-1, largest=True, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 4 / 2028 (0.2%)
Greatest absolute difference: 12199 at index (0, 1, 5) (up to 0.01 allowed)
Greatest relative difference: 29.826406478881836 at index (0, 1, 6) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 156, 13]), dtype=torch.int64)
First 100 elements: tensor([ 2853, 17788, 11603, 21979, 26999, 21167, 12230, 25491, 26153,  6416,
        25525, 15309, 20414,  6637, 18117, 24320,  5366, 13936,   409, 12608,
        13445, 20235, 27441, 19887, 27105, 20671, 29297, 10285,  5800, 21999,
        14298, 12647, 22860, 27041,  4271,  2270,  6067,  7125, 21762,   299,
         4522, 26966, 10593, 22520, 15470, 23920,  3563, 10552, 11385, 15407,
        11080,  6819, 16644,  2353, 23780, 26094, 27453,  1621,  7708, 14196,
        24430,  6226, 17184,   439, 22122, 18515,    26, 29419,   319, 28085,
        13120, 28946, 28171, 29719,    68,  3962,  8264, 17766, 28626,  4614,
        27859, 28953, 21435,  8669, 27841,  6535, 10287,  3930,  2649, 24326,
        28678,   723, 10593, 16143, 18752, 23727, 21186, 29268,  8637,  2270])
DESIRED: (shape=torch.Size([1, 156, 13]), dtype=torch.int64)
First 100 elements: tensor([ 2853, 17788, 11603, 21979, 26999, 21167, 12230, 25491, 26153,  6416,
        25525, 15309, 20414,  6637, 18117, 24320,  5366, 13936, 12608,   409,
        13445, 20235, 27441, 19887, 27105, 20671, 29297, 10285,  5800, 21999,
        14298, 12647, 22860, 27041,  4271,  2270,  6067,  7125, 21762,   299,
         4522, 26966, 10593, 22520, 15470, 23920,  3563, 10552, 11385, 15407,
        11080,  6819, 16644,  2353, 23780, 26094, 27453,  1621,  7708, 14196,
        24430,  6226, 17184,   439, 22122, 18515,    26, 29419,   319, 28085,
        13120, 28946, 28171, 29719,    68,  3962,  8264, 17766, 28626,  4614,
        27859, 28953, 21435,  8669, 27841,  6535, 10287,  3930,  2649, 24326,
        28678,   723, 10593, 16143, 18752, 23727, 21186, 29268,  8637,  2270])
2025-05-27 04:46:08.115885 test begin: paddle.topk(Tensor([1, 16, 40656],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([1, 16, 40656],"float32"), 13, axis=-1, largest=True, )
2025-05-27 04:46:08.228405 test begin: paddle.topk(Tensor([1, 16, 70644],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([1, 16, 70644],"float32"), 13, axis=-1, largest=True, )
2025-05-27 04:46:08.361990 test begin: paddle.topk(Tensor([1, 168, 40656],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([1, 168, 40656],"float32"), 13, axis=-1, largest=True, )
2025-05-27 04:46:08.569458 test begin: paddle.topk(Tensor([1, 17, 27216],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([1, 17, 27216],"float32"), 13, axis=-1, largest=True, )
2025-05-27 04:46:08.692574 test begin: paddle.topk(Tensor([1, 17, 30324],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.topk(Tensor([1, 17, 30324],"float32"), 13, axis=-1, largest=True, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 2 / 221 (0.9%)
Greatest absolute difference: 8891 at index (0, 8, 2) (up to 0.01 allowed)
Greatest relative difference: 1.941266417503357 at index (0, 8, 3) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 17, 13]), dtype=torch.int64)
First 100 elements: tensor([28747,  3226, 16982, 18544, 16451,  1083, 20364,  8140, 19349,  6970,
         3971,  7568, 27669,  9139, 21388, 14601, 26347, 27894, 28458, 29345,
        26586, 22884,     3, 27828, 16415, 24239,  3314,   272, 13450, 13047,
        11546,  3165, 11842,  3420, 23855,   664, 22437,  3657, 10560,  5089,
          545, 21980, 18641,  1074, 15679, 11573,  3977, 17445, 20215,  6726,
          624, 26091, 16992,  9347, 24907, 30307, 11798,  5639, 13222, 11660,
        18316, 27982, 14705, 16989,  5072, 16985, 18494,  1548, 22940, 26937,
        21406, 11670, 28704, 22124, 11937, 11176,  9906, 20792,  7939, 23639,
        12857, 11496, 10092, 20902, 19446,   611,  8347,   601,  1981,  8179,
        25127, 23753, 26333, 17550,  6565, 12751, 20795, 27982,  9191, 11268])
DESIRED: (shape=torch.Size([1, 17, 13]), dtype=torch.int64)
First 100 elements: tensor([28747,  3226, 16982, 18544, 16451,  1083, 20364,  8140, 19349,  6970,
         3971,  7568, 27669,  9139, 21388, 14601, 26347, 27894, 28458, 29345,
        26586, 22884,     3, 27828, 16415, 24239,  3314,   272, 13450, 13047,
        11546,  3165, 11842,  3420, 23855,   664, 22437,  3657, 10560,  5089,
          545, 21980, 18641,  1074, 15679, 11573,  3977, 17445, 20215,  6726,
          624, 26091, 16992,  9347, 24907, 30307, 11798,  5639, 13222, 11660,
        18316, 27982, 14705, 16989,  5072, 16985, 18494,  1548, 22940, 26937,
        21406, 11670, 28704, 22124, 11937, 11176,  9906, 20792,  7939, 23639,
        12857, 11496, 10092, 20902, 19446,   611,  8347,   601,  1981,  8179,
        25127, 23753, 26333, 17550,  6565, 12751, 20795, 27982,  9191, 11268])
2025-05-27 04:46:08.816168 test begin: paddle.topk(Tensor([1, 172, 37044],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.topk(Tensor([1, 172, 37044],"float32"), 13, axis=-1, largest=True, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 2 / 2236 (0.1%)
Greatest absolute difference: 2057 at index (0, 79, 5) (up to 0.01 allowed)
Greatest relative difference: 0.10618418455123901 at index (0, 79, 6) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 172, 13]), dtype=torch.int64)
First 100 elements: tensor([18810,  1683, 19195, 20980,  1160, 18496,  5354, 34275, 18659, 29124,
        17789, 34195,  7910, 24029, 22624,  7563,  5274, 21017,  8463,  8526,
        17061, 14576,  7624, 28941, 14781, 30549, 11161, 21804,  6007, 36104,
        33526, 28060, 26175, 19643,   286, 31591,  7702,  2220, 25713, 22755,
        27608, 32265, 12911, 22618, 13005, 11854, 36162,  3012, 21327, 24940,
        26059, 34137,  8056, 19302, 30432,  8886, 18969,  6967, 11219, 18250,
        13199,  8367, 13513, 19580, 28419,  3387,  4169,  1363,  8122, 28432,
        27380,  7226,  7627,  3175, 15316, 26505, 30732, 29123, 18247, 18628,
        10671, 13968, 21919,  8399, 22694,  4502, 12777, 19391, 25809,  5630,
        35636,  7502, 20908, 25804, 17197, 21392, 23250, 12158, 15740,  3182])
DESIRED: (shape=torch.Size([1, 172, 13]), dtype=torch.int64)
First 100 elements: tensor([18810,  1683, 19195, 20980,  1160, 18496,  5354, 34275, 18659, 29124,
        17789, 34195,  7910, 24029, 22624,  7563,  5274, 21017,  8463,  8526,
        17061, 14576,  7624, 28941, 14781, 30549, 11161, 21804,  6007, 36104,
        33526, 28060, 26175, 19643,   286, 31591,  7702,  2220, 25713, 22755,
        27608, 32265, 12911, 22618, 13005, 11854, 36162,  3012, 21327, 24940,
        26059, 34137,  8056, 19302, 30432,  8886, 18969,  6967, 11219, 18250,
        13199,  8367, 13513, 19580, 28419,  3387,  4169,  1363,  8122, 28432,
        27380,  7226,  7627,  3175, 15316, 26505, 30732, 29123, 18247, 18628,
        10671, 13968, 21919,  8399, 22694,  4502, 12777, 19391, 25809,  5630,
        35636,  7502, 20908, 25804, 17197, 21392, 23250, 12158, 15740,  3182])
2025-05-27 04:46:09.032009 test begin: paddle.topk(Tensor([1, 19, 40656],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.topk(Tensor([1, 19, 40656],"float32"), 13, axis=-1, largest=True, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 2 / 247 (0.8%)
Greatest absolute difference: 22306 at index (0, 14, 1) (up to 0.01 allowed)
Greatest relative difference: 10.199359893798828 at index (0, 14, 2) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 19, 13]), dtype=torch.int64)
First 100 elements: tensor([ 4814, 13782, 26179, 25524, 21946,  1441,  4130, 34015, 30135,  1833,
        24566, 37087, 33829,   594,  9548,  5454, 21550, 19804, 23032,  8004,
         8540, 25823, 36092, 27926, 22735, 11303,  7930, 21547, 20558, 17150,
        10421,  3499, 34768, 11245,  2481, 31395, 14853, 26353,  6112, 31705,
        34372, 29593, 36104, 34787, 30812,  8576, 21138,  6810, 10392, 17220,
        14365,  1619, 27142,  8969,  5696, 33335, 10215,   702, 23631, 17452,
        32439, 35379,   192, 22415,  6126,  6934, 29552,   630, 11415, 26710,
        37751, 27275,  9650, 14191, 16275, 11388, 10941, 30669, 26525, 25152,
         7687, 40254, 14404, 10019, 11456,  6062, 24208, 38524, 16768,  1202,
         7843, 34231,  4450,  2410,  4117, 34250, 17075, 19604, 35890, 26684])
DESIRED: (shape=torch.Size([1, 19, 13]), dtype=torch.int64)
First 100 elements: tensor([ 4814, 13782, 26179, 25524, 21946,  1441,  4130, 34015, 30135,  1833,
        24566, 37087, 33829,   594,  9548,  5454, 21550, 19804, 23032,  8004,
         8540, 25823, 36092, 27926, 22735, 11303,  7930, 21547, 20558, 17150,
        10421,  3499, 34768, 11245,  2481, 31395, 14853, 26353,  6112, 31705,
        34372, 29593, 36104, 34787, 30812,  8576, 21138,  6810, 10392, 17220,
        14365,  1619, 27142,  8969,  5696, 33335, 10215,   702, 23631, 17452,
        32439, 35379,   192, 22415,  6126,  6934, 29552,   630, 11415, 26710,
        37751, 27275,  9650, 14191, 16275, 11388, 10941, 30669, 26525, 25152,
         7687, 40254, 14404, 10019, 11456,  6062, 24208, 38524, 16768,  1202,
         7843, 34231,  4450,  2410,  4117, 34250, 17075, 19604, 35890, 26684])
2025-05-27 04:46:09.145670 test begin: paddle.topk(Tensor([1, 190, 52500],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([1, 190, 52500],"float32"), 13, axis=-1, largest=True, )
2025-05-27 04:46:09.417137 test begin: paddle.topk(Tensor([1, 196, 75600],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.topk(Tensor([1, 196, 75600],"float32"), 13, axis=-1, largest=True, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 4 / 2548 (0.2%)
Greatest absolute difference: 52807 at index (0, 170, 3) (up to 0.01 allowed)
Greatest relative difference: 76.5318832397461 at index (0, 170, 4) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 196, 13]), dtype=torch.int64)
First 100 elements: tensor([73353, 22256, 66666, 55711, 10098, 68690, 61944, 10807, 42868, 70414,
        72908, 30466, 69466, 10132,  7287, 63828, 39600, 50944, 15290, 49752,
        23541, 48278, 20857, 28954, 40817, 74126, 57159, 58209,   180, 74947,
        43337, 70742, 59653, 35208, 12304, 19784, 56971, 48077, 54778, 14805,
        18640, 45199, 30938, 23298, 50197, 49195,  2997, 26425, 14993, 33819,
        54451, 62089, 75340, 31131, 51649,  2787, 20842, 49761, 16448, 53051,
        18863, 73053, 68238, 27668,  8734,  3370, 18277, 18570,   892, 43452,
        36096, 66724, 37365, 36717,  8449, 24316, 44677, 38238, 17243, 36143,
        51326, 44118,  5570, 55663, 63594, 36934, 18250, 36572, 39854,  3558,
        37304, 35161,  4811, 17880, 36151, 49062, 42428, 72281, 70053, 44122])
DESIRED: (shape=torch.Size([1, 196, 13]), dtype=torch.int64)
First 100 elements: tensor([73353, 22256, 66666, 55711, 10098, 68690, 61944, 10807, 42868, 70414,
        72908, 30466, 69466, 10132,  7287, 63828, 39600, 50944, 15290, 49752,
        23541, 48278, 20857, 28954, 40817, 74126, 57159, 58209,   180, 74947,
        43337, 70742, 59653, 35208, 12304, 19784, 56971, 48077, 54778, 14805,
        18640, 45199, 30938, 23298, 50197, 49195,  2997, 26425, 14993, 33819,
        54451, 62089, 75340, 31131, 51649,  2787, 20842, 49761, 16448, 53051,
        18863, 73053, 68238, 27668,  8734,  3370, 18277, 18570,   892, 43452,
        36096, 66724, 37365, 36717,  8449, 24316, 44677, 38238, 17243, 36143,
        51326, 44118,  5570, 55663, 63594, 36934, 18250, 36572, 39854,  3558,
        37304, 35161,  4811, 17880, 36151, 49062, 42428, 72281, 70053, 44122])
2025-05-27 04:46:09.762083 test begin: paddle.topk(Tensor([1, 20, 37044],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([1, 20, 37044],"float32"), 13, axis=-1, largest=True, )
2025-05-27 04:46:09.874362 test begin: paddle.topk(Tensor([1, 209, 33600],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.topk(Tensor([1, 209, 33600],"float32"), 13, axis=-1, largest=True, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 4 / 2717 (0.1%)
Greatest absolute difference: 978 at index (0, 0, 7) (up to 0.01 allowed)
Greatest relative difference: 0.295468270778656 at index (0, 0, 8) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 209, 13]), dtype=torch.int64)
First 100 elements: tensor([ 9661, 16236, 25846, 32696, 27800, 23982,  3772,  3310,  4288,  3909,
        21457, 15189,  7061, 21613, 24973, 31493, 31166,  9108, 26222,  5771,
         7889, 21272,  2664, 17359, 24092, 21400,  2394, 28871,  8331,  3544,
         8225, 19148, 27754, 22419, 12318, 30787, 11845,  4468,  6801,  2533,
         4240, 13044, 18071, 31129,   891, 12781, 17477, 16715,  4039, 21140,
        30718, 12865, 13012,  7881, 12930, 20011,  6108, 28908,  5464, 13109,
         5625, 24921, 17525, 17390, 14224,  9202, 17851,  4895, 19357, 22505,
        26625, 11301,  8360, 10682, 15796, 28734,  6941, 29728,  2421, 26746,
        25811, 20515, 31639, 16475, 12453, 24037,  6183, 13475,  6015,  2207,
        19569,  5749,  1875, 19355, 27722,   984, 21586, 29578,  7533, 20542])
DESIRED: (shape=torch.Size([1, 209, 13]), dtype=torch.int64)
First 100 elements: tensor([ 9661, 16236, 25846, 32696, 27800, 23982,  3772,  4288,  3310,  3909,
        21457, 15189,  7061, 21613, 24973, 31493, 31166,  9108, 26222,  5771,
         7889, 21272,  2664, 17359, 24092, 21400,  2394, 28871,  8331,  3544,
         8225, 19148, 27754, 22419, 12318, 30787, 11845,  4468,  6801,  2533,
         4240, 13044, 18071, 31129,   891, 12781, 17477, 16715,  4039, 21140,
        30718, 12865, 13012,  7881, 12930, 20011,  6108, 28908,  5464, 13109,
         5625, 24921, 17525, 17390, 14224,  9202, 17851,  4895, 19357, 22505,
        26625, 11301,  8360, 10682, 15796, 28734,  6941, 29728,  2421, 26746,
        25811, 20515, 31639, 16475, 12453, 24037,  6183, 13475,  6015,  2207,
        19569,  5749,  1875, 19355, 27722,   984, 21586, 29578,  7533, 20542])
2025-05-27 04:46:10.083027 test begin: paddle.topk(Tensor([1, 21, 52500],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([1, 21, 52500],"float32"), 13, axis=-1, largest=True, )
2025-05-27 04:46:10.204188 test begin: paddle.topk(Tensor([1, 21, 61236],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([1, 21, 61236],"float32"), 13, axis=-1, largest=True, )
2025-05-27 04:46:10.346553 test begin: paddle.topk(Tensor([1, 210, 75600],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.topk(Tensor([1, 210, 75600],"float32"), 13, axis=-1, largest=True, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 2 / 2730 (0.1%)
Greatest absolute difference: 26121 at index (0, 140, 11) (up to 0.01 allowed)
Greatest relative difference: 0.6103750467300415 at index (0, 140, 12) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 210, 13]), dtype=torch.int64)
First 100 elements: tensor([ 6950, 16085, 32606, 54486, 73259,  3024, 47359, 50677, 62866,  6702,
         4267,  3674,  4043, 33709, 15561, 11298,  1923, 52546, 21668, 11789,
        32498, 20462, 43392, 25219,  7316, 62550,  2105, 66738, 33697, 60519,
        28726, 59087, 23220, 21909, 12932, 18021, 46064, 43635,  7724, 56533,
        59763, 72985, 38725, 22949, 54443, 42612, 12159, 12365, 10370, 28637,
        43605, 22173, 59462,  1228, 61527, 17208, 32059, 14914, 63348, 22820,
        42911,  4850,  5717, 57114, 61509, 23647, 29027, 10319, 42792, 61830,
         5325, 12567, 31812, 11309, 64553, 59394, 60868, 26331, 33256, 41286,
        21371, 53031, 58042, 66315, 59356, 46417, 28616,  2338, 22152, 72825,
        53652, 57839,  4911, 23637, 19380,  8532, 28110,  1035, 35959, 63438])
DESIRED: (shape=torch.Size([1, 210, 13]), dtype=torch.int64)
First 100 elements: tensor([ 6950, 16085, 32606, 54486, 73259,  3024, 47359, 50677, 62866,  6702,
         4267,  3674,  4043, 33709, 15561, 11298,  1923, 52546, 21668, 11789,
        32498, 20462, 43392, 25219,  7316, 62550,  2105, 66738, 33697, 60519,
        28726, 59087, 23220, 21909, 12932, 18021, 46064, 43635,  7724, 56533,
        59763, 72985, 38725, 22949, 54443, 42612, 12159, 12365, 10370, 28637,
        43605, 22173, 59462,  1228, 61527, 17208, 32059, 14914, 63348, 22820,
        42911,  4850,  5717, 57114, 61509, 23647, 29027, 10319, 42792, 61830,
         5325, 12567, 31812, 11309, 64553, 59394, 60868, 26331, 33256, 41286,
        21371, 53031, 58042, 66315, 59356, 46417, 28616,  2338, 22152, 72825,
        53652, 57839,  4911, 23637, 19380,  8532, 28110,  1035, 35959, 63438])
2025-05-27 04:46:10.716684 test begin: paddle.topk(Tensor([1, 218, 70644],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.topk(Tensor([1, 218, 70644],"float32"), 13, axis=-1, largest=True, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 4 / 2834 (0.1%)
Greatest absolute difference: 7332 at index (0, 89, 4) (up to 0.01 allowed)
Greatest relative difference: 0.5536928176879883 at index (0, 89, 5) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 218, 13]), dtype=torch.int64)
First 100 elements: tensor([ 1844, 44054, 22993, 61923, 50671, 46260, 59240, 50366, 22190, 42928,
        65856, 30292, 41820, 54835, 33838, 26099, 36910, 36719,   776, 46320,
        51110, 69244, 14564,  3261, 59584, 40925, 52043, 25376, 39192, 61056,
        41103, 16923, 66806, 30030, 50745, 66955, 26388, 45239,  1873, 62526,
        22010, 31462, 62463, 51890,  8605, 56689, 51125, 16627, 20669, 20415,
        57194, 38284,  6484,  5116, 42819, 20407, 14272, 68231, 26072, 13832,
        65875, 26220, 40354, 46323, 31152, 24612, 69862, 15077, 17153,  1444,
        60337, 49435, 33943, 31420, 15714, 64639, 51149, 26484, 24520, 17445,
        59956, 11718, 17671, 22243, 10184, 49884,  9526, 28910, 47907, 57861,
        40419, 13388, 54632, 57344, 12475, 43353, 61259, 27917,   656, 70409])
DESIRED: (shape=torch.Size([1, 218, 13]), dtype=torch.int64)
First 100 elements: tensor([ 1844, 44054, 22993, 61923, 50671, 46260, 59240, 50366, 22190, 42928,
        65856, 30292, 41820, 54835, 33838, 26099, 36910, 36719,   776, 46320,
        51110, 69244, 14564,  3261, 59584, 40925, 52043, 25376, 39192, 61056,
        41103, 16923, 66806, 30030, 50745, 66955, 26388, 45239,  1873, 62526,
        22010, 31462, 62463, 51890,  8605, 56689, 51125, 16627, 20669, 20415,
        57194, 38284,  6484,  5116, 42819, 20407, 14272, 68231, 26072, 13832,
        65875, 26220, 40354, 46323, 31152, 24612, 69862, 15077, 17153,  1444,
        60337, 49435, 33943, 31420, 15714, 64639, 51149, 26484, 24520, 17445,
        59956, 11718, 17671, 22243, 10184, 49884,  9526, 28910, 47907, 57861,
        40419, 13388, 54632, 57344, 12475, 43353, 61259, 27917,   656, 70409])
2025-05-27 04:46:11.078722 test begin: paddle.topk(Tensor([1, 22, 30324],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([1, 22, 30324],"float32"), 13, axis=-1, largest=True, )
2025-05-27 04:46:11.194198 test begin: paddle.topk(Tensor([1, 22, 33600],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([1, 22, 33600],"float32"), 13, axis=-1, largest=True, )
2025-05-27 04:46:11.308758 test begin: paddle.topk(Tensor([1, 22, 44436],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([1, 22, 44436],"float32"), 13, axis=-1, largest=True, )
2025-05-27 04:46:11.423743 test begin: paddle.topk(Tensor([1, 225, 44436],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([1, 225, 44436],"float32"), 13, axis=-1, largest=True, )
2025-05-27 04:46:11.697182 test begin: paddle.topk(Tensor([1, 24, 44436],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.topk(Tensor([1, 24, 44436],"float32"), 13, axis=-1, largest=True, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 2 / 312 (0.6%)
Greatest absolute difference: 2462 at index (0, 13, 8) (up to 0.01 allowed)
Greatest relative difference: 0.2799636125564575 at index (0, 13, 9) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 24, 13]), dtype=torch.int64)
First 100 elements: tensor([31904,  2529, 37876, 12486, 16976, 43019, 15089,  3036, 20174,  9915,
          602, 29865, 10003,  7809,  5548, 28514, 16400, 29560,     9,  7637,
        18816, 19387, 14911, 26128, 15334, 15181,  2116, 35711, 39101, 25296,
        12316,  1723, 30313, 32606, 33887, 42542, 40362, 19566, 25316, 37829,
         4297,  5513, 42346, 17868,  4431, 17703, 23177, 42963,  6874,  9848,
        14189,   155, 22774, 41931, 19253,  2806, 39872, 31077,  4325,  7787,
        18175, 21930, 28845,  4584, 25112, 18245, 36068,  4902, 31843, 31737,
        18333, 32805, 26309,  3060, 19219,  2827, 21614, 26479, 22460, 37073,
        39718, 13282, 17743, 34669, 40074, 23680, 32553, 36341, 26838,  4968,
        21152, 31303, 37402, 19132, 17996,  3245,   255, 31714, 39255, 31146])
DESIRED: (shape=torch.Size([1, 24, 13]), dtype=torch.int64)
First 100 elements: tensor([31904,  2529, 37876, 12486, 16976, 43019, 15089,  3036, 20174,  9915,
          602, 29865, 10003,  7809,  5548, 28514, 16400, 29560,     9,  7637,
        18816, 19387, 14911, 26128, 15334, 15181,  2116, 35711, 39101, 25296,
        12316,  1723, 30313, 32606, 33887, 42542, 40362, 19566, 25316, 37829,
         4297,  5513, 42346, 17868,  4431, 17703, 23177, 42963,  6874,  9848,
        14189,   155, 22774, 41931, 19253,  2806, 39872, 31077,  4325,  7787,
        18175, 21930, 28845,  4584, 25112, 18245, 36068,  4902, 31843, 31737,
        18333, 32805, 26309,  3060, 19219,  2827, 21614, 26479, 22460, 37073,
        39718, 13282, 17743, 34669, 40074, 23680, 32553, 36341, 26838,  4968,
        21152, 31303, 37402, 19132, 17996,  3245,   255, 31714, 39255, 31146])
2025-05-27 04:46:11.813951 test begin: paddle.topk(Tensor([1, 24, 70644],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([1, 24, 70644],"float32"), 13, axis=-1, largest=True, )
2025-05-27 04:46:11.934227 test begin: paddle.topk(Tensor([1, 249, 48384],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.topk(Tensor([1, 249, 48384],"float32"), 13, axis=-1, largest=True, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 2 / 3237 (0.1%)
Greatest absolute difference: 5199 at index (0, 72, 5) (up to 0.01 allowed)
Greatest relative difference: 0.2346966415643692 at index (0, 72, 6) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 249, 13]), dtype=torch.int64)
First 100 elements: tensor([ 8260, 10234, 27369,  1660, 32416, 42315, 43225, 30747,  1913, 26476,
        27218, 15347, 38180, 43112, 47293, 37086, 37291, 43698, 13073, 33105,
        45452, 10309, 39593, 41418, 11527,  9589,  3773,  6581, 26812,  1420,
        11747, 17680, 46958, 28653,   318, 17423,  5959, 47074, 17206, 11184,
         8686, 31264,  4622, 39944, 36306, 38361,  4965, 12974,  7483,  3753,
        39141, 12701, 13536,  3855, 30154, 19370,  1059,  5658, 46537, 46361,
        38408, 27219, 39442, 15699, 11946, 24619, 33586, 38170, 18820, 41189,
        28548, 21897,  3773, 18879, 27654, 43991, 45492, 12785, 22076,  2047,
        45433, 44729,  1280, 19692, 37818, 40886,  9921,  8934, 31172, 39581,
        21221, 26397, 46299, 39666, 19768, 44750, 33523,  6987, 39635,   748])
DESIRED: (shape=torch.Size([1, 249, 13]), dtype=torch.int64)
First 100 elements: tensor([ 8260, 10234, 27369,  1660, 32416, 42315, 43225, 30747,  1913, 26476,
        27218, 15347, 38180, 43112, 47293, 37086, 37291, 43698, 13073, 33105,
        45452, 10309, 39593, 41418, 11527,  9589,  3773,  6581, 26812,  1420,
        11747, 17680, 46958, 28653,   318, 17423,  5959, 47074, 17206, 11184,
         8686, 31264,  4622, 39944, 36306, 38361,  4965, 12974,  7483,  3753,
        39141, 12701, 13536,  3855, 30154, 19370,  1059,  5658, 46537, 46361,
        38408, 27219, 39442, 15699, 11946, 24619, 33586, 38170, 18820, 41189,
        28548, 21897,  3773, 18879, 27654, 43991, 45492, 12785, 22076,  2047,
        45433, 44729,  1280, 19692, 37818, 40886,  9921,  8934, 31172, 39581,
        21221, 26397, 46299, 39666, 19768, 44750, 33523,  6987, 39635,   748])
2025-05-27 04:46:12.236599 test begin: paddle.topk(Tensor([1, 25, 33600],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([1, 25, 33600],"float32"), 13, axis=-1, largest=True, )
2025-05-27 04:46:12.347499 test begin: paddle.topk(Tensor([1, 26, 37044],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([1, 26, 37044],"float32"), 13, axis=-1, largest=True, )
2025-05-27 04:46:12.460067 test begin: paddle.topk(Tensor([1, 26, 44436],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([1, 26, 44436],"float32"), 13, axis=-1, largest=True, )
2025-05-27 04:46:12.570557 test begin: paddle.topk(Tensor([1, 28, 61236],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([1, 28, 61236],"float32"), 13, axis=-1, largest=True, )
2025-05-27 04:46:12.688494 test begin: paddle.topk(Tensor([1, 28, 70644],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([1, 28, 70644],"float32"), 13, axis=-1, largest=True, )
2025-05-27 04:46:12.813248 test begin: paddle.topk(Tensor([1, 29, 44436],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([1, 29, 44436],"float32"), 13, axis=-1, largest=True, )
2025-05-27 04:46:12.933670 test begin: paddle.topk(Tensor([1, 29, 75600],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([1, 29, 75600],"float32"), 13, axis=-1, largest=True, )
2025-05-27 04:46:13.061291 test begin: paddle.topk(Tensor([1, 296, 24276],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([1, 296, 24276],"float32"), 13, axis=-1, largest=True, )
2025-05-27 04:46:13.274072 test begin: paddle.topk(Tensor([1, 3, 44436],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([1, 3, 44436],"float32"), 13, axis=-1, largest=True, )
2025-05-27 04:46:13.377992 test begin: paddle.topk(Tensor([1, 30, 33600],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([1, 30, 33600],"float32"), 13, axis=-1, largest=True, )
2025-05-27 04:46:13.484698 test begin: paddle.topk(Tensor([1, 30, 65856],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([1, 30, 65856],"float32"), 13, axis=-1, largest=True, )
2025-05-27 04:46:13.599778 test begin: paddle.topk(Tensor([1, 30, 70644],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([1, 30, 70644],"float32"), 13, axis=-1, largest=True, )
2025-05-27 04:46:13.717758 test begin: paddle.topk(Tensor([1, 31, 21504],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([1, 31, 21504],"float32"), 13, axis=-1, largest=True, )
2025-05-27 04:46:13.814890 test begin: paddle.topk(Tensor([1, 329, 33600],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([1, 329, 33600],"float32"), 13, axis=-1, largest=True, )
2025-05-27 04:46:14.146779 test begin: paddle.topk(Tensor([1, 333, 40656],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.topk(Tensor([1, 333, 40656],"float32"), 13, axis=-1, largest=True, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 4 / 4329 (0.1%)
Greatest absolute difference: 23009 at index (0, 7, 3) (up to 0.01 allowed)
Greatest relative difference: 1.4254119396209717 at index (0, 7, 4) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 333, 13]), dtype=torch.int64)
First 100 elements: tensor([32477,  9182, 21352, 29856, 28244, 31572, 11379,  5607, 21800,  9841,
        10448,  1621, 37594, 38589, 12557, 36352, 30926, 23285, 32538, 17269,
         7421, 17389, 16722, 30094,  7200, 28547, 19824,  6620,  7574, 26867,
        19402, 29147,  7558, 26773, 32035, 38485, 11539, 29532, 11077, 25425,
        33292,  6631, 33582, 20371,  2384, 21246, 39421, 13128, 28825, 21130,
        39489,  3911,  5597,  5397, 28123, 11382, 22076, 12838, 31757, 20613,
        19210,  9358, 30859, 33215, 12602,  6401, 14505, 28408,   501, 35993,
        20615, 25942, 29209,  4005, 17673,  2247,  6623, 16524, 30382, 21697,
        36553, 37376, 23363,  3887, 24902, 14580, 35768, 13283, 30151, 15427,
        29498, 38815, 20529, 29529, 16142, 39151, 16274,   904,  6597, 35648])
DESIRED: (shape=torch.Size([1, 333, 13]), dtype=torch.int64)
First 100 elements: tensor([32477,  9182, 21352, 29856, 28244, 31572, 11379,  5607, 21800,  9841,
        10448,  1621, 37594, 38589, 12557, 36352, 30926, 23285, 32538, 17269,
         7421, 17389, 16722, 30094,  7200, 28547, 19824,  6620,  7574, 26867,
        19402, 29147,  7558, 26773, 32035, 38485, 11539, 29532, 11077, 25425,
        33292,  6631, 33582, 20371,  2384, 21246, 39421, 13128, 28825, 21130,
        39489,  3911,  5597,  5397, 28123, 11382, 22076, 12838, 31757, 20613,
        19210,  9358, 30859, 33215, 12602,  6401, 14505, 28408,   501, 35993,
        20615, 25942, 29209,  4005, 17673,  2247,  6623, 16524, 30382, 21697,
        36553, 37376, 23363,  3887, 24902, 14580, 35768, 13283, 30151, 15427,
        29498, 38815, 20529, 29529, 39151, 16142, 16274,   904,  6597, 35648])
2025-05-27 04:46:14.465674 test begin: paddle.topk(Tensor([1, 34, 52500],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.topk(Tensor([1, 34, 52500],"float32"), 13, axis=-1, largest=True, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 2 / 442 (0.5%)
Greatest absolute difference: 27147 at index (0, 29, 10) (up to 0.01 allowed)
Greatest relative difference: 2.6851632595062256 at index (0, 29, 11) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 34, 13]), dtype=torch.int64)
First 100 elements: tensor([14976, 20624, 47409,   560, 52325, 30691,   816, 46932, 37019, 14293,
        27130, 24095, 50975, 42936, 30949, 29065, 40612, 13597, 49307, 50200,
        30690, 25107,  4643,  6392, 27832, 41812, 32449, 16783, 28014, 44736,
        17924,  1292, 41835, 24486, 22472, 51259, 14195, 42904, 32973, 16936,
        12343, 12708, 18933, 22729,  2035, 39389, 27912, 49717, 21945, 25533,
        16562, 43983,  1351,  9227,  4464, 21127,  2669,  6724, 35776,  1296,
        19679, 11861, 11308,  4238, 43477, 45132, 35887, 41928,  2826, 36696,
         2190, 17820, 50523, 20341, 48972, 43869, 27182,  8514, 12309, 31456,
        36768, 46511, 27535, 16505, 34113,  1381, 33981, 34188, 49265, 12831,
        24405, 24283, 16273, 47981, 43283,   519, 51622, 47029, 40862, 36445])
DESIRED: (shape=torch.Size([1, 34, 13]), dtype=torch.int64)
First 100 elements: tensor([14976, 20624, 47409,   560, 52325, 30691,   816, 46932, 37019, 14293,
        27130, 24095, 50975, 42936, 30949, 29065, 40612, 13597, 49307, 50200,
        30690, 25107,  4643,  6392, 27832, 41812, 32449, 16783, 28014, 44736,
        17924,  1292, 41835, 24486, 22472, 51259, 14195, 42904, 32973, 16936,
        12343, 12708, 18933, 22729,  2035, 39389, 27912, 49717, 21945, 25533,
        16562, 43983,  1351,  9227,  4464, 21127,  2669,  6724, 35776,  1296,
        19679, 11861, 11308,  4238, 43477, 45132, 35887, 41928,  2826, 36696,
         2190, 17820, 50523, 20341, 48972, 43869, 27182,  8514, 12309, 31456,
        36768, 46511, 27535, 16505, 34113,  1381, 33981, 34188, 49265, 12831,
        24405, 24283, 16273, 47981, 43283,   519, 51622, 47029, 40862, 36445])
2025-05-27 04:46:14.582249 test begin: paddle.topk(Tensor([1, 35, 40656],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([1, 35, 40656],"float32"), 13, axis=-1, largest=True, )
2025-05-27 04:46:14.690988 test begin: paddle.topk(Tensor([1, 35, 44436],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.topk(Tensor([1, 35, 44436],"float32"), 13, axis=-1, largest=True, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 2 / 455 (0.4%)
Greatest absolute difference: 12131 at index (0, 16, 7) (up to 0.01 allowed)
Greatest relative difference: 1.1437865495681763 at index (0, 16, 8) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 35, 13]), dtype=torch.int64)
First 100 elements: tensor([21094,  8471, 36221, 30899, 22929, 40419, 30344, 12444,  3349,  1843,
        30425, 25433, 28992, 11826, 29457, 20235, 30607,  6667, 37708, 44320,
         2334,  8786, 22007,   417,  9918, 23426, 36463, 34303,  4700,  3276,
        30119, 20462, 25561, 28411, 37989,  9927, 40429,   238, 19062,  8104,
        12946, 34404, 37356,  6929, 17791, 37445, 31109, 31350, 15742,  2187,
         4592, 38854,   803,  3541, 15180, 30267, 14170,  8652, 33606,  8993,
        24024,  2807, 18534, 33703, 14892, 36262, 35859, 33233, 16028, 11685,
        12880,  7917, 20572, 40330,  5154, 32818, 32629, 38104, 31841,  5683,
        10866, 38030, 31355, 10106, 18704, 37579, 13534,  6762, 15230,  6987,
        30140, 33105,  6274, 12689, 37539, 43362, 26477, 32841,  3088, 24161])
DESIRED: (shape=torch.Size([1, 35, 13]), dtype=torch.int64)
First 100 elements: tensor([21094,  8471, 36221, 30899, 22929, 40419, 30344, 12444,  3349,  1843,
        30425, 25433, 28992, 11826, 29457, 20235, 30607,  6667, 37708, 44320,
         2334,  8786, 22007,   417,  9918, 23426, 36463, 34303,  4700,  3276,
        30119, 20462, 25561, 28411, 37989,  9927, 40429,   238, 19062,  8104,
        12946, 34404, 37356,  6929, 17791, 37445, 31109, 31350, 15742,  2187,
         4592, 38854,   803,  3541, 15180, 30267, 14170,  8652, 33606,  8993,
        24024,  2807, 18534, 33703, 14892, 36262, 35859, 33233, 16028, 11685,
        12880,  7917, 20572, 40330,  5154, 32818, 32629, 38104, 31841,  5683,
        10866, 38030, 31355, 10106, 18704, 37579, 13534,  6762, 15230,  6987,
        30140, 33105,  6274, 12689, 37539, 43362, 26477, 32841,  3088, 24161])
2025-05-27 04:46:14.799465 test begin: paddle.topk(Tensor([1, 36, 33600],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([1, 36, 33600],"float32"), 13, axis=-1, largest=True, )
2025-05-27 04:46:14.903810 test begin: paddle.topk(Tensor([1, 36, 65856],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.topk(Tensor([1, 36, 65856],"float32"), 13, axis=-1, largest=True, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 2 / 468 (0.4%)
Greatest absolute difference: 12192 at index (0, 27, 0) (up to 0.01 allowed)
Greatest relative difference: 0.5005131363868713 at index (0, 27, 1) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 36, 13]), dtype=torch.int64)
First 100 elements: tensor([45759, 31179, 65090, 45867, 31187, 23257, 57492, 17414, 19138, 65736,
        43562, 20533, 30189, 43279,  5782, 53017, 32443, 42113, 49674, 54730,
        45879, 64662,  3448, 63623, 28446, 31572, 57430, 35791, 65468, 33152,
        33362, 13573, 61780, 23798, 35889, 32731,  7503,  9546, 36700, 30258,
        53530, 63842, 23153, 23555, 41739, 30001, 42014, 14547, 12668, 20840,
        59193,  3881, 29614, 65641, 61023, 37719, 12847, 61929, 21830, 62731,
         7845, 21638, 58991, 55860,  3461, 45888, 59406, 45369, 34331, 51650,
          295, 12718,  4085, 24911, 48992, 12432, 59513, 52189, 54869, 28358,
        20865, 50020, 27590,  4467, 54126, 34807,  5042, 60683,  8457, 13536,
        65789,  3659, 45022, 20398, 12701,  9166, 36169, 34451, 33700,  5514])
DESIRED: (shape=torch.Size([1, 36, 13]), dtype=torch.int64)
First 100 elements: tensor([45759, 31179, 65090, 45867, 31187, 23257, 57492, 17414, 19138, 65736,
        43562, 20533, 30189, 43279,  5782, 53017, 32443, 42113, 49674, 54730,
        45879, 64662,  3448, 63623, 28446, 31572, 57430, 35791, 65468, 33152,
        33362, 13573, 61780, 23798, 35889, 32731,  7503,  9546, 36700, 30258,
        53530, 63842, 23153, 23555, 41739, 30001, 42014, 14547, 12668, 20840,
        59193,  3881, 29614, 65641, 61023, 37719, 12847, 61929, 21830, 62731,
         7845, 21638, 58991, 55860,  3461, 45888, 59406, 45369, 34331, 51650,
          295, 12718,  4085, 24911, 48992, 12432, 59513, 52189, 54869, 28358,
        20865, 50020, 27590,  4467, 54126, 34807,  5042, 60683,  8457, 13536,
        65789,  3659, 45022, 20398, 12701,  9166, 36169, 34451, 33700,  5514])
2025-05-27 04:46:15.024367 test begin: paddle.topk(Tensor([1, 37, 44436],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([1, 37, 44436],"float32"), 13, axis=-1, largest=True, )
2025-05-27 04:46:15.151443 test begin: paddle.topk(Tensor([1, 37, 56784],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.topk(Tensor([1, 37, 56784],"float32"), 13, axis=-1, largest=True, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 4 / 481 (0.8%)
Greatest absolute difference: 16413 at index (0, 14, 7) (up to 0.01 allowed)
Greatest relative difference: 0.5133394002914429 at index (0, 14, 8) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 37, 13]), dtype=torch.int64)
First 100 elements: tensor([ 6240, 42862, 26183, 54225, 54028, 41259,  2537, 44414, 16749, 44127,
        46605, 47869, 39386, 35541,  9562, 42540, 23410, 49241, 21824, 48633,
        35129,  5151, 52033, 54399, 46759, 46136, 56224, 14489, 14333, 45975,
        45980, 51761, 26178, 28690, 18415, 51193, 31336, 15197, 35152, 22154,
         9299, 19988, 25536, 33553, 25518, 27520, 48431, 20374, 36903, 23052,
        30579, 25192, 16569, 29750, 38768, 44768,  1124, 41359, 45208,  5244,
        39055,  2786, 32055, 49301, 42364, 29513, 45458, 49765, 54906, 49413,
        38639, 31091,  8670, 26713, 34764, 34428, 47228, 35402, 34577, 34792,
          546, 35308, 38001, 27034, 39380, 37144, 24848,  5097, 24387, 54555,
        21854, 26131, 41256,  5469, 46606, 35045, 53465, 13233, 21539, 45054])
DESIRED: (shape=torch.Size([1, 37, 13]), dtype=torch.int64)
First 100 elements: tensor([ 6240, 42862, 26183, 54225, 54028, 41259,  2537, 44414, 16749, 44127,
        46605, 47869, 39386, 35541,  9562, 42540, 23410, 49241, 21824, 48633,
        35129,  5151, 52033, 54399, 46759, 46136, 56224, 14489, 14333, 45975,
        45980, 51761, 26178, 28690, 18415, 51193, 31336, 15197, 35152, 22154,
         9299, 19988, 25536, 33553, 25518, 27520, 48431, 20374, 36903, 30579,
        23052, 25192, 16569, 29750, 38768, 44768,  1124, 41359, 45208,  5244,
        39055,  2786, 32055, 49301, 42364, 29513, 45458, 49765, 54906, 49413,
        38639, 31091,  8670, 26713, 34764, 34428, 47228, 35402, 34577, 34792,
          546, 35308, 38001, 27034, 39380, 37144, 24848,  5097, 24387, 54555,
        21854, 26131, 41256,  5469, 46606, 35045, 53465, 13233, 21539, 45054])
2025-05-27 04:46:15.274461 test begin: paddle.topk(Tensor([1, 37, 70644],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([1, 37, 70644],"float32"), 13, axis=-1, largest=True, )
2025-05-27 04:46:15.394519 test begin: paddle.topk(Tensor([1, 38, 24276],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([1, 38, 24276],"float32"), 13, axis=-1, largest=True, )
2025-05-27 04:46:15.507244 test begin: paddle.topk(Tensor([1, 38, 56784],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([1, 38, 56784],"float32"), 13, axis=-1, largest=True, )
2025-05-27 04:46:15.629902 test begin: paddle.topk(Tensor([1, 39, 44436],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([1, 39, 44436],"float32"), 13, axis=-1, largest=True, )
2025-05-27 04:46:15.768715 test begin: paddle.topk(Tensor([1, 39, 61236],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([1, 39, 61236],"float32"), 13, axis=-1, largest=True, )
2025-05-27 04:46:15.915943 test begin: paddle.topk(Tensor([1, 39, 65856],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([1, 39, 65856],"float32"), 13, axis=-1, largest=True, )
2025-05-27 04:46:16.042091 test begin: paddle.topk(Tensor([1, 39, 70644],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([1, 39, 70644],"float32"), 13, axis=-1, largest=True, )
2025-05-27 04:46:16.171546 test begin: paddle.topk(Tensor([1, 4, 56784],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([1, 4, 56784],"float32"), 13, axis=-1, largest=True, )
2025-05-27 04:46:16.263867 test begin: paddle.topk(Tensor([1, 40, 65856],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([1, 40, 65856],"float32"), 13, axis=-1, largest=True, )
2025-05-27 04:46:16.388100 test begin: paddle.topk(Tensor([1, 400, 65856],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.topk(Tensor([1, 400, 65856],"float32"), 13, axis=-1, largest=True, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 4 / 5200 (0.1%)
Greatest absolute difference: 15630 at index (0, 254, 11) (up to 0.01 allowed)
Greatest relative difference: 2.488457202911377 at index (0, 254, 12) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 400, 13]), dtype=torch.int64)
First 100 elements: tensor([ 8556, 56245, 34134, 52050, 38728, 27978, 24231, 50928, 17850, 34360,
        46009, 52146, 62149, 12109,  2244, 45502, 42650, 62621,  7825, 59669,
        44005, 40209, 48219, 19687, 44787, 35411, 35762, 40551, 24327, 42674,
        61339, 62301,  6994, 19228, 38729, 42566, 11515,  8578, 39756, 26194,
        10412, 43321, 11693, 57075,  3864, 45157, 25737, 30435,  7023, 18368,
        60039, 36280, 25106, 41154, 26288, 50647, 26808, 52884, 31378, 10273,
        20143, 26320, 16351, 43277, 55277,  5965, 47720, 13821, 51336, 15655,
        37772,  2755, 34038, 59866, 26594, 14970, 65567, 38183, 36454, 53401,
        49671, 42132, 53891, 11079, 11062,  2730, 63002, 46797, 35697,   200,
        17000, 43280, 50865,  3846, 43459, 63844, 13455, 44236, 54297, 51374])
DESIRED: (shape=torch.Size([1, 400, 13]), dtype=torch.int64)
First 100 elements: tensor([ 8556, 56245, 34134, 52050, 38728, 27978, 24231, 50928, 17850, 34360,
        46009, 52146, 62149, 12109,  2244, 45502, 42650, 62621,  7825, 59669,
        44005, 40209, 48219, 19687, 44787, 35411, 35762, 40551, 24327, 42674,
        61339, 62301,  6994, 19228, 38729, 42566, 11515,  8578, 39756, 26194,
        10412, 43321, 11693, 57075,  3864, 45157, 25737, 30435,  7023, 18368,
        60039, 36280, 25106, 41154, 26288, 50647, 26808, 52884, 31378, 10273,
        20143, 26320, 16351, 43277, 55277,  5965, 47720, 13821, 51336, 15655,
        37772,  2755, 34038, 59866, 26594, 14970, 65567, 38183, 36454, 53401,
        49671, 42132, 53891, 11079, 11062,  2730, 63002, 46797, 35697,   200,
        17000, 43280, 50865,  3846, 43459, 63844, 13455, 44236, 54297, 51374])
2025-05-27 04:46:16.925029 test begin: paddle.topk(Tensor([1, 41, 40656],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([1, 41, 40656],"float32"), 13, axis=-1, largest=True, )
2025-05-27 04:46:17.039309 test begin: paddle.topk(Tensor([1, 41, 70644],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.topk(Tensor([1, 41, 70644],"float32"), 13, axis=-1, largest=True, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 2 / 533 (0.4%)
Greatest absolute difference: 53011 at index (0, 38, 8) (up to 0.01 allowed)
Greatest relative difference: 4.623321056365967 at index (0, 38, 9) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 41, 13]), dtype=torch.int64)
First 100 elements: tensor([14582,  9232, 12681, 58266, 20991, 65147, 53824, 54066, 18390, 33253,
          774, 45266, 61495, 33065, 58701, 54863, 25590, 50008, 43253, 28648,
        45688, 38934, 66953, 29032, 23995,  3892,  7985, 30493, 38603, 70583,
        51171,  7312, 58947, 10347, 18363, 17628, 20431, 51895, 42032, 40551,
        60714, 34044, 38329, 28177, 12088, 64871, 63148, 36580, 55628, 39560,
        14234, 30441, 58356,  2195, 47157,  2073, 54744,  6957, 11233, 48964,
        66521, 67777, 55547, 17650, 66984, 61108,  1196, 31753, 26470, 55905,
        69691, 60727,  3470, 21530, 69873, 12685, 24667,  9791, 27114, 35629,
        51551, 16498, 48075, 12378,  6097, 10776, 65362, 35308, 23194, 14198,
        57806, 39142, 14738, 33341, 37275, 42174, 52247, 65825, 20075, 35098])
DESIRED: (shape=torch.Size([1, 41, 13]), dtype=torch.int64)
First 100 elements: tensor([14582,  9232, 12681, 58266, 20991, 65147, 53824, 54066, 18390, 33253,
          774, 45266, 61495, 33065, 58701, 54863, 25590, 50008, 43253, 28648,
        45688, 38934, 66953, 29032, 23995,  3892,  7985, 30493, 38603, 70583,
        51171,  7312, 58947, 10347, 18363, 17628, 20431, 51895, 42032, 40551,
        60714, 34044, 38329, 28177, 12088, 64871, 63148, 36580, 55628, 39560,
        14234, 30441, 58356,  2195, 47157,  2073, 54744,  6957, 11233, 48964,
        66521, 67777, 55547, 17650, 66984, 61108,  1196, 31753, 26470, 55905,
        69691, 60727,  3470, 21530, 69873, 12685, 24667,  9791, 27114, 35629,
        51551, 16498, 48075, 12378,  6097, 10776, 65362, 35308, 23194, 14198,
        57806, 39142, 14738, 33341, 37275, 42174, 52247, 65825, 20075, 35098])
2025-05-27 04:46:17.165526 test begin: paddle.topk(Tensor([1, 42, 65856],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([1, 42, 65856],"float32"), 13, axis=-1, largest=True, )
2025-05-27 04:46:17.289373 test begin: paddle.topk(Tensor([1, 43, 65856],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([1, 43, 65856],"float32"), 13, axis=-1, largest=True, )
2025-05-27 04:46:17.413261 test begin: paddle.topk(Tensor([1, 44, 30324],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([1, 44, 30324],"float32"), 13, axis=-1, largest=True, )
2025-05-27 04:46:17.519558 test begin: paddle.topk(Tensor([1, 44, 56784],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([1, 44, 56784],"float32"), 13, axis=-1, largest=True, )
2025-05-27 04:46:17.640774 test begin: paddle.topk(Tensor([1, 45, 40656],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([1, 45, 40656],"float32"), 13, axis=-1, largest=True, )
2025-05-27 04:46:17.754516 test begin: paddle.topk(Tensor([1, 46, 44436],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([1, 46, 44436],"float32"), 13, axis=-1, largest=True, )
2025-05-27 04:46:17.871006 test begin: paddle.topk(Tensor([1, 46, 61236],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([1, 46, 61236],"float32"), 13, axis=-1, largest=True, )
2025-05-27 04:46:17.997878 test begin: paddle.topk(Tensor([1, 47, 30324],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([1, 47, 30324],"float32"), 13, axis=-1, largest=True, )
2025-05-27 04:46:18.111050 test begin: paddle.topk(Tensor([1, 47, 61236],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([1, 47, 61236],"float32"), 13, axis=-1, largest=True, )
2025-05-27 04:46:18.235811 test begin: paddle.topk(Tensor([1, 49, 40656],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([1, 49, 40656],"float32"), 13, axis=-1, largest=True, )
2025-05-27 04:46:18.351686 test begin: paddle.topk(Tensor([1, 49, 65856],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([1, 49, 65856],"float32"), 13, axis=-1, largest=True, )
2025-05-27 04:46:18.490994 test begin: paddle.topk(Tensor([1, 50, 48384],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.topk(Tensor([1, 50, 48384],"float32"), 13, axis=-1, largest=True, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 2 / 650 (0.3%)
Greatest absolute difference: 15163 at index (0, 20, 5) (up to 0.01 allowed)
Greatest relative difference: 0.5746825933456421 at index (0, 20, 6) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 50, 13]), dtype=torch.int64)
First 100 elements: tensor([28517, 38290, 25453, 23589, 36846, 45504, 35112, 48253,  6784,  8704,
        26244, 27080, 24500, 29017, 33790, 34022, 31086, 34126, 19053, 28203,
        20092, 34621,  5705, 23897, 32021, 15914, 38940, 40758, 21923, 13079,
         1966, 16416, 10179,  6650, 12538,   901, 32150, 22232,  2012, 40967,
        20100, 21992, 14170, 23197, 23726, 47195, 26159, 40478, 48069,  1237,
        31606, 37681, 17660, 13447,  7298, 19791,  5824, 28726, 39922, 15039,
        15464, 27365,  5096, 14343, 24017, 45690, 28244, 26536, 16461,  3970,
        16895, 17806, 37933, 17584, 46603, 19476, 38133, 31520, 45498, 43584,
        16397,  6903, 33247, 43204, 19852, 28396, 46920, 32954, 35522, 38529,
        31529, 30674, 26075, 21074, 39725, 16435,  3803, 26051, 35280,  8919])
DESIRED: (shape=torch.Size([1, 50, 13]), dtype=torch.int64)
First 100 elements: tensor([28517, 38290, 25453, 23589, 36846, 45504, 35112, 48253,  6784,  8704,
        26244, 27080, 24500, 29017, 33790, 34022, 31086, 34126, 19053, 28203,
        20092, 34621,  5705, 23897, 32021, 15914, 38940, 40758, 21923, 13079,
         1966, 16416, 10179,  6650, 12538,   901, 32150, 22232,  2012, 40967,
        20100, 21992, 14170, 23197, 23726, 47195, 26159, 40478, 48069,  1237,
        31606, 37681, 17660, 13447,  7298, 19791,  5824, 28726, 39922, 15039,
        15464, 27365,  5096, 14343, 24017, 45690, 28244, 26536, 16461,  3970,
        16895, 17806, 37933, 17584, 46603, 19476, 38133, 31520, 45498, 43584,
        16397,  6903, 33247, 43204, 19852, 28396, 46920, 32954, 35522, 38529,
        31529, 30674, 26075, 21074, 39725, 16435,  3803, 26051, 35280,  8919])
2025-05-27 04:46:18.611464 test begin: paddle.topk(Tensor([1, 51, 37044],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.topk(Tensor([1, 51, 37044],"float32"), 13, axis=-1, largest=True, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 4 / 663 (0.6%)
Greatest absolute difference: 28249 at index (0, 50, 6) (up to 0.01 allowed)
Greatest relative difference: 18.367687225341797 at index (0, 1, 6) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 51, 13]), dtype=torch.int64)
First 100 elements: tensor([15792,  4425, 32038, 25637,  8671, 34099, 26901, 29449, 31999,  2467,
         3921, 23429, 31447, 21908,  7410,  1797, 16078, 29077,   359,  6953,
        28364, 24288, 23854, 32679, 16263,  4196, 20930, 13550,  1405, 13285,
        20535,  2614, 18015,  3720,  3376, 25253, 14314,  1720,    59, 10490,
        33642,   840, 26602,  2683, 23834, 32423,   608,  9398,   460, 30603,
        27659, 12449, 30248,  2288, 11872, 32961, 36904, 31352,  1596, 32089,
        31470, 25086, 19211,  9105, 11586,  5423,  3540,  6520,  5255, 30109,
        17070, 10705, 16659,  1470, 25427, 20435, 31170, 34952,  6982, 33905,
        12124, 23768, 22691, 32854, 10403, 21251, 32245, 24465,  6692, 10897,
         3030, 20577, 36052, 24624,  1542, 18184, 13507, 25541,  1873,  7940])
DESIRED: (shape=torch.Size([1, 51, 13]), dtype=torch.int64)
First 100 elements: tensor([15792,  4425, 32038, 25637,  8671, 34099, 26901, 29449, 31999,  2467,
         3921, 23429, 31447, 21908,  7410,  1797, 16078, 29077,  6953,   359,
        28364, 24288, 23854, 32679, 16263,  4196, 20930, 13550,  1405, 13285,
        20535,  2614, 18015,  3720,  3376, 25253, 14314,  1720,    59, 10490,
        33642,   840, 26602,  2683, 23834, 32423,   608,  9398,   460, 30603,
        27659, 12449, 30248,  2288, 11872, 32961, 36904, 31352,  1596, 32089,
        31470, 25086, 19211,  9105, 11586,  5423,  3540,  6520,  5255, 30109,
        17070, 10705, 16659,  1470, 25427, 20435, 31170, 34952,  6982, 33905,
        12124, 23768, 22691, 32854, 10403, 21251, 32245, 24465,  6692, 10897,
         3030, 20577, 36052, 24624,  1542, 18184, 13507, 25541,  1873,  7940])
2025-05-27 04:46:18.728251 test begin: paddle.topk(Tensor([1, 51, 56784],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([1, 51, 56784],"float32"), 13, axis=-1, largest=True, )
2025-05-27 04:46:18.871546 test begin: paddle.topk(Tensor([1, 51, 61236],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([1, 51, 61236],"float32"), 13, axis=-1, largest=True, )
2025-05-27 04:46:19.009020 test begin: paddle.topk(Tensor([1, 52, 52500],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([1, 52, 52500],"float32"), 13, axis=-1, largest=True, )
2025-05-27 04:46:19.141501 test begin: paddle.topk(Tensor([1, 54, 61236],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([1, 54, 61236],"float32"), 13, axis=-1, largest=True, )
2025-05-27 04:46:19.277413 test begin: paddle.topk(Tensor([1, 55, 70644],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([1, 55, 70644],"float32"), 13, axis=-1, largest=True, )
2025-05-27 04:46:19.439350 test begin: paddle.topk(Tensor([1, 56, 37044],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([1, 56, 37044],"float32"), 13, axis=-1, largest=True, )
2025-05-27 04:46:19.566602 test begin: paddle.topk(Tensor([1, 56, 75600],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.topk(Tensor([1, 56, 75600],"float32"), 13, axis=-1, largest=True, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 2 / 728 (0.3%)
Greatest absolute difference: 27682 at index (0, 50, 5) (up to 0.01 allowed)
Greatest relative difference: 1.1245074272155762 at index (0, 50, 6) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 56, 13]), dtype=torch.int64)
First 100 elements: tensor([18805, 63077, 26416, 71968, 58983, 37506, 61951, 69140, 38795,  9443,
        15899, 23045, 25246, 71618, 62874, 43250, 74390, 25236, 48452, 71860,
          333, 61652, 26676, 20669, 22635, 70956, 14666, 46492, 48513, 46273,
        59537, 20844, 70834, 24622, 48025, 31360, 75051,  7711, 51346, 31326,
        13672,  3418, 53292,  7718,  5324, 33179,  3935,  4111, 39747, 74627,
        53619, 18828, 59550, 73789, 42280, 30882, 47704,  8122, 67773, 17360,
        40329, 32982, 27540, 57296,  4391, 10825, 68619, 37732, 70007, 33790,
        40541, 13046, 15233, 34512, 34326, 67187,  6321, 26702, 52892, 72351,
        10622,  3565, 75175, 26778, 30056, 54254, 40744, 15945, 48239, 19381,
        72426, 73886, 66979,  4164, 60626, 64600, 37503, 35382,  3966, 10679])
DESIRED: (shape=torch.Size([1, 56, 13]), dtype=torch.int64)
First 100 elements: tensor([18805, 63077, 26416, 71968, 58983, 37506, 61951, 69140, 38795,  9443,
        15899, 23045, 25246, 71618, 62874, 43250, 74390, 25236, 48452, 71860,
          333, 61652, 26676, 20669, 22635, 70956, 14666, 46492, 48513, 46273,
        59537, 20844, 70834, 24622, 48025, 31360, 75051,  7711, 51346, 31326,
        13672,  3418, 53292,  7718,  5324, 33179,  3935,  4111, 39747, 74627,
        53619, 18828, 59550, 73789, 42280, 30882, 47704,  8122, 67773, 17360,
        40329, 32982, 27540, 57296,  4391, 10825, 68619, 37732, 70007, 33790,
        40541, 13046, 15233, 34512, 34326, 67187,  6321, 26702, 52892, 72351,
        10622,  3565, 75175, 26778, 30056, 54254, 40744, 15945, 48239, 19381,
        72426, 73886, 66979,  4164, 60626, 64600, 37503, 35382,  3966, 10679])
2025-05-27 04:46:19.733967 test begin: paddle.topk(Tensor([1, 59, 27216],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([1, 59, 27216],"float32"), 13, axis=-1, largest=True, )
2025-05-27 04:46:19.852804 test begin: paddle.topk(Tensor([1, 59, 48384],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.topk(Tensor([1, 59, 48384],"float32"), 13, axis=-1, largest=True, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 2 / 767 (0.3%)
Greatest absolute difference: 24668 at index (0, 12, 0) (up to 0.01 allowed)
Greatest relative difference: 27.873445510864258 at index (0, 12, 1) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 59, 13]), dtype=torch.int64)
First 100 elements: tensor([ 4993, 18399, 26679, 22262, 13989, 19742, 46965, 39308,  3944, 21350,
        37133, 36229,  3580,  2143, 19583, 30563, 29924, 26693, 24343, 46143,
        22721, 29903, 45876, 33140, 17795,  8043, 47634, 34956, 47056, 31687,
        37573, 29112,  2672, 26234,  8480, 20047, 19977, 18874, 11260, 18285,
        44115, 12136, 34041, 37896, 22260, 30561, 22536, 16670, 44991, 23284,
        30099, 25719, 29364, 44101, 15890, 30977, 12737, 32069, 24243, 11388,
        12666,  6869,  9089, 11967,  3629, 28066,  1185,  9079, 21224, 10762,
        28695, 23217, 24441,  8127,  9297, 21990,  5340,  7068, 10404,   361,
        32024,  9579, 11807, 45753, 10840, 34241,  1934, 10401, 23109, 24467,
        29020,  1335, 12000,  5516, 40401, 35782, 11263,  2518, 28977, 42333])
DESIRED: (shape=torch.Size([1, 59, 13]), dtype=torch.int64)
First 100 elements: tensor([ 4993, 18399, 26679, 22262, 13989, 19742, 46965, 39308,  3944, 21350,
        37133, 36229,  3580,  2143, 19583, 30563, 29924, 26693, 24343, 46143,
        22721, 29903, 45876, 33140, 17795,  8043, 47634, 34956, 47056, 31687,
        37573, 29112,  2672, 26234,  8480, 20047, 19977, 18874, 11260, 18285,
        44115, 12136, 34041, 37896, 22260, 30561, 22536, 16670, 44991, 23284,
        30099, 25719, 29364, 44101, 15890, 30977, 12737, 32069, 24243, 11388,
        12666,  6869,  9089, 11967,  3629, 28066,  1185,  9079, 21224, 10762,
        28695, 23217, 24441,  8127,  9297, 21990,  5340,  7068, 10404,   361,
        32024,  9579, 11807, 45753, 10840, 34241,  1934, 10401, 23109, 24467,
        29020,  1335, 12000,  5516, 40401, 35782, 11263,  2518, 28977, 42333])
2025-05-27 04:46:19.999531 test begin: paddle.topk(Tensor([1, 6, 48384],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([1, 6, 48384],"float32"), 13, axis=-1, largest=True, )
2025-05-27 04:46:20.102720 test begin: paddle.topk(Tensor([1, 60, 52500],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.topk(Tensor([1, 60, 52500],"float32"), 13, axis=-1, largest=True, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 2 / 780 (0.3%)
Greatest absolute difference: 21251 at index (0, 59, 2) (up to 0.01 allowed)
Greatest relative difference: 0.7109259963035583 at index (0, 59, 3) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 60, 13]), dtype=torch.int64)
First 100 elements: tensor([43125, 30404, 13509, 17653, 32819, 40112, 28927, 17395, 10356, 33218,
        40464, 52294, 49015, 15141, 40535,  3220, 38109, 41829, 19023,  9435,
        42546, 44885, 25252, 19289, 20612, 22778, 14473, 36604,  3272, 45580,
        15960, 49376, 29963, 32965, 29192,  4469, 49753, 20402, 16552, 21309,
        19584,  6365,  8859, 51194, 24710, 14895, 37771, 22681, 12197,   593,
        11055, 28755, 47123,  1235, 26571, 30420, 48594,   958, 11903, 28638,
        34500, 20824,  1477, 37367,  9461, 31304, 39142, 36871,  5451, 19985,
         1875, 39783,   746, 18603, 13233, 34336, 19821, 18573, 28691,  7184,
        31625, 12233, 45083, 45621, 38349, 17207,   264, 43873, 31924, 12726,
        21250, 21619, 44858, 40015, 34201, 29810, 19455, 10629, 16527, 25039])
DESIRED: (shape=torch.Size([1, 60, 13]), dtype=torch.int64)
First 100 elements: tensor([43125, 30404, 13509, 17653, 32819, 40112, 28927, 17395, 10356, 33218,
        40464, 52294, 49015, 15141, 40535,  3220, 38109, 41829, 19023,  9435,
        42546, 44885, 25252, 19289, 20612, 22778, 14473, 36604,  3272, 45580,
        15960, 49376, 29963, 32965, 29192,  4469, 49753, 20402, 16552, 21309,
        19584,  6365,  8859, 51194, 24710, 14895, 37771, 22681, 12197,   593,
        11055, 28755, 47123,  1235, 26571, 30420, 48594,   958, 11903, 28638,
        34500, 20824,  1477, 37367,  9461, 31304, 39142, 36871,  5451, 19985,
         1875, 39783,   746, 18603, 13233, 34336, 19821, 18573, 28691,  7184,
        31625, 12233, 45083, 45621, 38349, 17207,   264, 43873, 31924, 12726,
        21250, 21619, 44858, 40015, 34201, 29810, 19455, 10629, 16527, 25039])
2025-05-27 04:46:20.241191 test begin: paddle.topk(Tensor([1, 60, 56784],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([1, 60, 56784],"float32"), 13, axis=-1, largest=True, )
2025-05-27 04:46:20.375896 test begin: paddle.topk(Tensor([1, 60, 61236],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([1, 60, 61236],"float32"), 13, axis=-1, largest=True, )
2025-05-27 04:46:20.508161 test begin: paddle.topk(Tensor([1, 62, 27216],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([1, 62, 27216],"float32"), 13, axis=-1, largest=True, )
2025-05-27 04:46:20.621579 test begin: paddle.topk(Tensor([1, 62, 75600],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.topk(Tensor([1, 62, 75600],"float32"), 13, axis=-1, largest=True, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 2 / 806 (0.2%)
Greatest absolute difference: 49869 at index (0, 40, 3) (up to 0.01 allowed)
Greatest relative difference: 3.3968393802642822 at index (0, 40, 4) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 62, 13]), dtype=torch.int64)
First 100 elements: tensor([60366, 12834, 74553,  2749, 39822, 37335, 18544, 32284, 48094, 43703,
        16741, 68803, 15871, 11856, 28536, 21056, 18393, 69085, 59814,  8985,
        48274, 22970, 32231, 24076, 49314, 16806, 24330, 22199,  1130, 47390,
        25481, 42684, 51722, 40790, 37044,  4706, 67575, 38355, 16830, 55418,
        54582, 57873, 19095, 21903, 31733, 62001, 22786, 51881, 12081, 54411,
        54002, 53933, 26184, 52899, 62653, 66384, 17534, 51372, 23272, 61615,
        52096, 48264, 20263, 67368, 41170, 19657, 73166, 66805, 40314, 70692,
        60105, 49198,  4273,  6940, 68846,   834, 32650, 16074,  4306, 11017,
        30902, 58477, 14530, 30939, 59678, 42679, 66756, 43969, 51862,  4899,
        61182, 14598, 27358, 53636, 56695, 60546, 43855, 24881, 18579, 50383])
DESIRED: (shape=torch.Size([1, 62, 13]), dtype=torch.int64)
First 100 elements: tensor([60366, 12834, 74553,  2749, 39822, 37335, 18544, 32284, 48094, 43703,
        16741, 68803, 15871, 11856, 28536, 21056, 18393, 69085, 59814,  8985,
        48274, 22970, 32231, 24076, 49314, 16806, 24330, 22199,  1130, 47390,
        25481, 42684, 51722, 40790, 37044,  4706, 67575, 38355, 16830, 55418,
        54582, 57873, 19095, 21903, 31733, 62001, 22786, 51881, 12081, 54411,
        54002, 53933, 26184, 52899, 62653, 66384, 17534, 51372, 23272, 61615,
        52096, 48264, 20263, 67368, 41170, 19657, 73166, 66805, 40314, 70692,
        60105, 49198,  4273,  6940, 68846,   834, 32650, 16074,  4306, 11017,
        30902, 58477, 14530, 30939, 59678, 42679, 66756, 43969, 51862,  4899,
        61182, 14598, 27358, 53636, 56695, 60546, 43855, 24881, 18579, 50383])
2025-05-27 04:46:20.797040 test begin: paddle.topk(Tensor([1, 63, 30324],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([1, 63, 30324],"float32"), 13, axis=-1, largest=True, )
2025-05-27 04:46:20.916007 test begin: paddle.topk(Tensor([1, 65, 48384],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.topk(Tensor([1, 65, 48384],"float32"), 13, axis=-1, largest=True, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 2 / 845 (0.2%)
Greatest absolute difference: 19701 at index (0, 40, 1) (up to 0.01 allowed)
Greatest relative difference: 1.0808097124099731 at index (0, 40, 2) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 65, 13]), dtype=torch.int64)
First 100 elements: tensor([37554, 18327, 22371, 13674, 23581, 21208, 24034, 33994, 16301, 43197,
         8580, 23437, 43941,  4212, 41905,  5617, 21993, 35515, 28758, 40271,
        22616,  4453, 19896, 24371, 36814, 37128, 25081, 25465,  6453, 38572,
        12474, 20099, 17988, 25855, 43510, 29998, 32040, 29163, 19973, 10909,
        25994, 19637, 17110,  6201, 34935, 10088, 44929, 11289, 47962, 29980,
         5919, 34186, 47837, 18672, 48137, 26100, 33889, 29179, 27905, 11560,
        40189, 43005, 29681, 36278, 20842,  9154, 30725, 10182,  7074, 27626,
         2590, 18661,  7822, 24664, 48237, 25600, 16826, 29630, 27782, 25222,
         6838, 32140, 14164, 13803, 10133, 12165, 15405, 16696, 48002, 35282,
        22616, 44249,  8307, 36522, 40368,  8971, 34977,  7330, 26714,  3004])
DESIRED: (shape=torch.Size([1, 65, 13]), dtype=torch.int64)
First 100 elements: tensor([37554, 18327, 22371, 13674, 23581, 21208, 24034, 33994, 16301, 43197,
         8580, 23437, 43941,  4212, 41905,  5617, 21993, 35515, 28758, 40271,
        22616,  4453, 19896, 24371, 36814, 37128, 25081, 25465,  6453, 38572,
        12474, 20099, 17988, 25855, 43510, 29998, 32040, 29163, 19973, 10909,
        25994, 19637, 17110,  6201, 34935, 10088, 44929, 11289, 47962, 29980,
         5919, 34186, 47837, 18672, 48137, 26100, 33889, 29179, 27905, 11560,
        40189, 43005, 29681, 36278, 20842,  9154, 30725, 10182,  7074, 27626,
         2590, 18661,  7822, 24664, 48237, 25600, 16826, 29630, 27782, 25222,
         6838, 32140, 14164, 13803, 10133, 12165, 15405, 16696, 48002, 35282,
        22616, 44249,  8307, 36522, 40368,  8971, 34977,  7330, 26714,  3004])
2025-05-27 04:46:21.052832 test begin: paddle.topk(Tensor([1, 65, 61236],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.topk(Tensor([1, 65, 61236],"float32"), 13, axis=-1, largest=True, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 2 / 845 (0.2%)
Greatest absolute difference: 32943 at index (0, 49, 10) (up to 0.01 allowed)
Greatest relative difference: 9.488191604614258 at index (0, 49, 11) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 65, 13]), dtype=torch.int64)
First 100 elements: tensor([57155,  1142, 60692, 44099, 35804, 26230, 25240, 16672, 52994,  5579,
        42036, 21908, 42114, 52120, 18429, 61012, 33331, 51551, 19843, 53664,
         2140, 42538, 41356, 10865, 42735, 38588, 40320,   520,   355, 46254,
        55056, 24780, 59998, 41277, 34652, 50622, 35785, 15006, 44745, 31190,
        36373, 27171, 47219, 44413,  8968, 49578, 49999, 60017, 34722,  2110,
        36006, 60199,  2940, 14504, 56429, 55747, 28600, 28864, 21985,  5188,
        58177, 53705, 44300, 48476, 59904,   593, 57751, 35256, 47002,  5339,
        25890,  8491, 46963, 50659, 21853, 21505, 55112, 17954, 11359,  1859,
        10000, 20414, 11197, 37537, 19463, 54657, 53590, 40594, 53355, 17926,
        19832, 11321, 39642,  3796, 27857,   161,  5669,  3092, 17707, 60287])
DESIRED: (shape=torch.Size([1, 65, 13]), dtype=torch.int64)
First 100 elements: tensor([57155,  1142, 60692, 44099, 35804, 26230, 25240, 16672, 52994,  5579,
        42036, 21908, 42114, 52120, 18429, 61012, 33331, 51551, 19843, 53664,
         2140, 42538, 41356, 10865, 42735, 38588, 40320,   520,   355, 46254,
        55056, 24780, 59998, 41277, 34652, 50622, 35785, 15006, 44745, 31190,
        36373, 27171, 47219, 44413,  8968, 49578, 49999, 60017, 34722,  2110,
        36006, 60199,  2940, 14504, 56429, 55747, 28600, 28864, 21985,  5188,
        58177, 53705, 44300, 48476, 59904,   593, 57751, 35256, 47002,  5339,
        25890,  8491, 46963, 50659, 21853, 21505, 55112, 17954, 11359,  1859,
        10000, 20414, 11197, 37537, 19463, 54657, 53590, 40594, 53355, 17926,
        19832, 11321, 39642,  3796, 27857,   161,  5669,  3092, 17707, 60287])
2025-05-27 04:46:21.195298 test begin: paddle.topk(Tensor([1, 65, 65856],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([1, 65, 65856],"float32"), 13, axis=-1, largest=True, )
2025-05-27 04:46:21.352018 test begin: paddle.topk(Tensor([1, 65, 75600],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([1, 65, 75600],"float32"), 13, axis=-1, largest=True, )
2025-05-27 04:46:21.524792 test begin: paddle.topk(Tensor([1, 67, 75600],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([1, 67, 75600],"float32"), 13, axis=-1, largest=True, )
2025-05-27 04:46:21.709000 test begin: paddle.topk(Tensor([1, 68, 56784],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([1, 68, 56784],"float32"), 13, axis=-1, largest=True, )
2025-05-27 04:46:21.921339 test begin: paddle.topk(Tensor([1, 69, 44436],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([1, 69, 44436],"float32"), 13, axis=-1, largest=True, )
2025-05-27 04:46:22.049420 test begin: paddle.topk(Tensor([1, 70, 24276],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.topk(Tensor([1, 70, 24276],"float32"), 13, axis=-1, largest=True, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 2 / 910 (0.2%)
Greatest absolute difference: 3371 at index (0, 43, 7) (up to 0.01 allowed)
Greatest relative difference: 3.2413461208343506 at index (0, 43, 8) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 70, 13]), dtype=torch.int64)
First 100 elements: tensor([ 4019,   887, 11132,  1562,  8242, 12802, 24111,   999, 23160, 13083,
         4152, 23020, 15222,   189, 16272, 24150, 24068,  4132, 10926, 17614,
         3184,  6492,  2788, 14591,  8085, 18416, 17498, 20617, 13965,  6740,
        13521,  1185,  5401,  1510, 21428, 13509, 14484, 24208,  5604, 12618,
        20959, 18799, 16435,  6312,  4156, 20066, 13109,  2348, 13541,  1528,
        19778,  9316,  6065,  3098, 19167, 20832,  6959, 10744, 14284,  4665,
        20760,  8715,  2221,  6612,  5921,  2490, 14846, 19844,   482, 14033,
         6998,  9038, 23818, 10094, 16063,  2641,  1897, 23222,   248, 13401,
         8154, 13452,   260, 22573,  6162, 15401,  4043, 23639, 20589, 12555,
        10221, 14237,  1926, 20434, 13417, 13952, 10070,  5160,  9776, 14741])
DESIRED: (shape=torch.Size([1, 70, 13]), dtype=torch.int64)
First 100 elements: tensor([ 4019,   887, 11132,  1562,  8242, 12802, 24111,   999, 23160, 13083,
         4152, 23020, 15222,   189, 16272, 24150, 24068,  4132, 10926, 17614,
         3184,  6492,  2788, 14591,  8085, 18416, 17498, 20617, 13965,  6740,
        13521,  1185,  5401,  1510, 21428, 13509, 14484, 24208,  5604, 12618,
        20959, 18799, 16435,  6312,  4156, 20066, 13109,  2348, 13541,  1528,
        19778,  9316,  6065,  3098, 19167, 20832,  6959, 10744, 14284,  4665,
        20760,  8715,  2221,  6612,  5921,  2490, 14846, 19844,   482, 14033,
         6998,  9038, 23818, 10094, 16063,  2641,  1897, 23222,   248, 13401,
         8154, 13452,   260, 22573,  6162, 15401,  4043, 23639, 20589, 12555,
        10221, 14237,  1926, 20434, 13417, 13952, 10070,  5160,  9776, 14741])
2025-05-27 04:46:22.160179 test begin: paddle.topk(Tensor([1, 70, 52500],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.topk(Tensor([1, 70, 52500],"float32"), 13, axis=-1, largest=True, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 2 / 910 (0.2%)
Greatest absolute difference: 15325 at index (0, 16, 8) (up to 0.01 allowed)
Greatest relative difference: 0.5542294979095459 at index (0, 16, 9) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 70, 13]), dtype=torch.int64)
First 100 elements: tensor([44045, 39693, 49655, 20284, 45864, 33275, 19342, 49775, 25755, 20252,
        38621,  2144, 12350, 21554, 30865, 31264,  2315, 41556, 18492, 27785,
        33073,  5658, 16914, 40358,  4671,  9716, 14264, 12924, 33169, 26422,
        40230, 49109, 30387, 18806,   129, 33645, 33211, 43908, 15710, 39749,
        44677,  1240, 10246, 28108, 30720,  6273, 47093, 35405, 35209, 26802,
        44375,  7887, 16107, 11963, 39320, 12598, 17474,  5752, 10170, 28541,
        42546, 30107, 16882, 49543,   181, 21533, 20375, 27626, 26593, 33135,
         5843,  4035, 35250, 45114, 42065, 43264,  8442, 15826,  2669,  8573,
        33029, 40676, 45673, 46695, 39725, 25355, 43585, 10361, 23196, 12007,
        11525,  5639, 23531, 32263, 51666, 43553, 13247,  6414, 10338,  4593])
DESIRED: (shape=torch.Size([1, 70, 13]), dtype=torch.int64)
First 100 elements: tensor([44045, 39693, 49655, 20284, 45864, 33275, 19342, 49775, 25755, 20252,
        38621,  2144, 12350, 21554, 30865, 31264,  2315, 41556, 18492, 27785,
        33073,  5658, 16914, 40358,  4671,  9716, 14264, 12924, 33169, 26422,
        40230, 49109, 30387, 18806,   129, 33645, 33211, 43908, 15710, 39749,
        44677,  1240, 10246, 28108, 30720,  6273, 47093, 35405, 35209, 26802,
        44375,  7887, 16107, 11963, 39320, 12598, 17474,  5752, 10170, 28541,
        42546, 30107, 16882, 49543,   181, 21533, 20375, 27626, 26593, 33135,
         5843,  4035, 35250, 45114, 42065, 43264,  8442, 15826,  2669,  8573,
        33029, 40676, 45673, 46695, 39725, 25355, 43585, 10361, 23196, 12007,
        11525,  5639, 23531, 32263, 51666, 43553, 13247,  6414, 10338,  4593])
2025-05-27 04:46:22.296461 test begin: paddle.topk(Tensor([1, 71, 33600],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([1, 71, 33600],"float32"), 13, axis=-1, largest=True, )
2025-05-27 04:46:22.432817 test begin: paddle.topk(Tensor([1, 73, 56784],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([1, 73, 56784],"float32"), 13, axis=-1, largest=True, )
2025-05-27 04:46:22.587789 test begin: paddle.topk(Tensor([1, 73, 70644],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([1, 73, 70644],"float32"), 13, axis=-1, largest=True, )
2025-05-27 04:46:22.760904 test begin: paddle.topk(Tensor([1, 73, 75600],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.topk(Tensor([1, 73, 75600],"float32"), 13, axis=-1, largest=True, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 2 / 949 (0.2%)
Greatest absolute difference: 26654 at index (0, 44, 0) (up to 0.01 allowed)
Greatest relative difference: 1.898974061012268 at index (0, 44, 1) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 73, 13]), dtype=torch.int64)
First 100 elements: tensor([10610, 19160, 54544, 25048, 67360, 13730, 53438, 36526, 28546, 21536,
         6097, 34895, 70429, 65391, 64040,  5834,  1266, 46399, 17818, 47537,
        15005, 64249, 37925, 37257, 63047, 36058, 14953, 27402,  9970, 68371,
        30417,  6923, 46600, 23470, 72731, 74386, 71671, 32903, 52922, 72169,
        23313, 10756, 19744, 31392,  3793, 64771, 66202, 41468, 56784, 58742,
        17361,  8542,  1315, 53008, 17181, 45372, 13467, 12590, 58247, 19311,
        40210, 71062, 45409, 74734, 44587, 28697, 73661, 63914, 26672, 36411,
         4404, 28847, 60113, 28679, 56020, 67608, 56985, 57559, 52847, 72759,
         3310, 62982, 30062, 62128, 49045, 42003, 17622, 69999, 34386, 58019,
        11052, 19856,  9448, 29916, 70602, 19859, 60692, 53555, 43245, 32135])
DESIRED: (shape=torch.Size([1, 73, 13]), dtype=torch.int64)
First 100 elements: tensor([10610, 19160, 54544, 25048, 67360, 13730, 53438, 36526, 28546, 21536,
         6097, 34895, 70429, 65391, 64040,  5834,  1266, 46399, 17818, 47537,
        15005, 64249, 37925, 37257, 63047, 36058, 14953, 27402,  9970, 68371,
        30417,  6923, 46600, 23470, 72731, 74386, 71671, 32903, 52922, 72169,
        23313, 10756, 19744, 31392,  3793, 64771, 66202, 41468, 56784, 58742,
        17361,  8542,  1315, 53008, 17181, 45372, 13467, 12590, 58247, 19311,
        40210, 71062, 45409, 74734, 44587, 28697, 73661, 63914, 26672, 36411,
         4404, 28847, 60113, 28679, 56020, 67608, 56985, 57559, 52847, 72759,
         3310, 62982, 30062, 62128, 49045, 42003, 17622, 69999, 34386, 58019,
        11052, 19856,  9448, 29916, 70602, 19859, 60692, 53555, 43245, 32135])
2025-05-27 04:46:22.937721 test begin: paddle.topk(Tensor([1, 74, 65856],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([1, 74, 65856],"float32"), 13, axis=-1, largest=True, )
2025-05-27 04:46:23.112497 test begin: paddle.topk(Tensor([1, 76, 70644],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([1, 76, 70644],"float32"), 13, axis=-1, largest=True, )
2025-05-27 04:46:23.295669 test begin: paddle.topk(Tensor([1, 80, 27216],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.topk(Tensor([1, 80, 27216],"float32"), 13, axis=-1, largest=True, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 2 / 1040 (0.2%)
Greatest absolute difference: 8904 at index (0, 66, 10) (up to 0.01 allowed)
Greatest relative difference: 3.4232988357543945 at index (0, 66, 11) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 80, 13]), dtype=torch.int64)
First 100 elements: tensor([19076, 10592, 18031,  7160, 21058, 15771,   286, 22996, 15668, 22855,
        19565, 11243, 21479,  1749, 21825, 24359, 24284, 12621, 16921, 25604,
        21842, 26653,  8419,  2697, 12288, 19686, 20969, 24527,  9095, 20508,
        19705, 18977, 22348, 10002,  5468,  1503,  5899,  5316, 15723, 13474,
        24954, 26079,  6625,   625, 20156, 20620, 25093, 11284,  9119, 14930,
          842, 19620, 21378,  2759, 20469, 24525, 18541, 24284, 23075,  9932,
        25161, 14764, 23976,  9623, 14090, 11678, 26741, 13020, 23150, 25372,
          704,  6133,  3729,  6014,   202, 20397, 26586,  9059,  7974, 10624,
        14614, 21655, 20902,  1927, 23019,  1760, 13319,  3670, 10081, 15028,
         6349, 10558, 13709, 16240, 22556,  1863, 10418, 24739, 18424,  1182])
DESIRED: (shape=torch.Size([1, 80, 13]), dtype=torch.int64)
First 100 elements: tensor([19076, 10592, 18031,  7160, 21058, 15771,   286, 22996, 15668, 22855,
        19565, 11243, 21479,  1749, 21825, 24359, 24284, 12621, 16921, 25604,
        21842, 26653,  8419,  2697, 12288, 19686, 20969, 24527,  9095, 20508,
        19705, 18977, 22348, 10002,  5468,  1503,  5899,  5316, 15723, 13474,
        24954, 26079,  6625,   625, 20156, 20620, 25093, 11284,  9119, 14930,
          842, 19620, 21378,  2759, 20469, 24525, 18541, 24284, 23075,  9932,
        25161, 14764, 23976,  9623, 14090, 11678, 26741, 13020, 23150, 25372,
          704,  6133,  3729,  6014,   202, 20397, 26586,  9059,  7974, 10624,
        14614, 21655, 20902,  1927, 23019,  1760, 13319,  3670, 10081, 15028,
         6349, 10558, 13709, 16240, 22556,  1863, 10418, 24739, 18424,  1182])
2025-05-27 04:46:23.425767 test begin: paddle.topk(Tensor([1, 80, 56784],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.topk(Tensor([1, 80, 56784],"float32"), 13, axis=-1, largest=True, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 2 / 1040 (0.2%)
Greatest absolute difference: 7435 at index (0, 47, 4) (up to 0.01 allowed)
Greatest relative difference: 0.1650315225124359 at index (0, 47, 5) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 80, 13]), dtype=torch.int64)
First 100 elements: tensor([43949, 15577,  7313, 36377, 10509, 40132, 55358,  2424, 17597,  8020,
        26783, 54107, 54999, 11715, 45565, 15510, 15116, 12089, 50230, 15543,
        13040, 11865,  6386, 41877, 17261,  5528, 52831, 41751,   280, 41895,
        21215, 44213,  6710, 44269,  9663, 55772, 18787,  5812, 27193, 17244,
        33947,  9687,  6850, 29254, 16150, 11690, 21954, 15572,  5793, 40361,
        15936, 11607, 13529, 47433,  1489, 20326, 30284, 14045, 17868, 13315,
        35653, 54773, 30949, 27213,  6436, 22305, 30386, 44418,  6155, 18483,
         7603, 23431,  1196, 45854, 27750, 49112, 33902, 45150, 40619, 34793,
        35522, 29831, 37618,  5795, 50221, 54728,    91,  9127, 15585, 23940,
        55043, 50783, 54052, 36910,  6437, 46521, 40774, 26772, 45269, 11623])
DESIRED: (shape=torch.Size([1, 80, 13]), dtype=torch.int64)
First 100 elements: tensor([43949, 15577,  7313, 36377, 10509, 40132, 55358,  2424, 17597,  8020,
        26783, 54107, 54999, 11715, 45565, 15510, 15116, 12089, 50230, 15543,
        13040, 11865,  6386, 41877, 17261,  5528, 52831, 41751,   280, 41895,
        21215, 44213,  6710, 44269,  9663, 55772, 18787,  5812, 27193, 17244,
        33947,  9687,  6850, 29254, 16150, 11690, 21954, 15572,  5793, 40361,
        15936, 11607, 13529, 47433,  1489, 20326, 30284, 14045, 17868, 13315,
        35653, 54773, 30949, 27213,  6436, 22305, 30386, 44418,  6155, 18483,
         7603, 23431,  1196, 45854, 27750, 49112, 33902, 45150, 40619, 34793,
        35522, 29831, 37618,  5795, 50221, 54728,    91,  9127, 15585, 23940,
        55043, 50783, 54052, 36910,  6437, 46521, 40774, 26772, 45269, 11623])
2025-05-27 04:46:23.593487 test begin: paddle.topk(Tensor([1, 80, 70644],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.topk(Tensor([1, 80, 70644],"float32"), 13, axis=-1, largest=True, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 4 / 1040 (0.4%)
Greatest absolute difference: 31632 at index (0, 7, 8) (up to 0.01 allowed)
Greatest relative difference: 1.339714527130127 at index (0, 7, 9) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 80, 13]), dtype=torch.int64)
First 100 elements: tensor([62022, 39200, 27099, 40134, 45431, 17440, 18439, 67885, 24774,  5505,
        18547, 51139, 34095, 16332, 57295, 63754, 52644, 31863, 22007, 69294,
        20654, 26173, 27607, 68634,  6748, 67447, 34041, 21781,  2259, 16897,
         5312, 58138, 50426, 38701,  4982, 40203,  7679, 49016, 64386, 21481,
        42450, 13887, 37636, 47553,  2363, 43248, 15558, 53066, 39444,  9588,
         3676, 57691, 56012, 64837, 56595,  2098, 54741, 19812, 43417, 36348,
        55461, 54698, 49276, 60900, 46445, 47793, 21703, 33618, 13492, 27931,
        55489, 48829, 67144, 17063, 46177, 68544, 38853,  6633, 65787, 21408,
        37949, 36420, 11942, 26586, 70620, 64382, 45321, 12841, 38216, 23542,
        34277, 25395, 42464, 41259, 26574, 52952,  7713, 29111, 58540, 23611])
DESIRED: (shape=torch.Size([1, 80, 13]), dtype=torch.int64)
First 100 elements: tensor([62022, 39200, 27099, 40134, 45431, 17440, 18439, 67885, 24774,  5505,
        18547, 51139, 34095, 16332, 57295, 63754, 52644, 31863, 22007, 69294,
        20654, 26173, 27607, 68634,  6748, 67447, 34041, 21781,  2259, 16897,
         5312, 58138, 50426, 38701,  4982, 40203,  7679, 49016, 64386, 21481,
        42450, 13887, 37636, 47553,  2363, 43248, 15558, 53066, 39444,  9588,
         3676, 57691, 56012, 64837, 56595,  2098, 54741, 19812, 43417, 36348,
        55461, 54698, 49276, 60900, 46445, 47793, 21703, 33618, 13492, 27931,
        55489, 48829, 67144, 17063, 46177, 68544, 38853,  6633, 65787, 21408,
        37949, 36420, 11942, 26586, 70620, 64382, 45321, 12841, 38216, 23542,
        34277, 25395, 42464, 41259, 26574, 52952,  7713, 29111, 58540, 55243])
2025-05-27 04:46:23.783568 test begin: paddle.topk(Tensor([1, 81, 48384],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([1, 81, 48384],"float32"), 13, axis=-1, largest=True, )
2025-05-27 04:46:23.959395 test begin: paddle.topk(Tensor([1, 83, 52500],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([1, 83, 52500],"float32"), 13, axis=-1, largest=True, )
2025-05-27 04:46:24.151796 test begin: paddle.topk(Tensor([1, 83, 65856],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([1, 83, 65856],"float32"), 13, axis=-1, largest=True, )
2025-05-27 04:46:24.325269 test begin: paddle.topk(Tensor([1, 84, 75600],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.topk(Tensor([1, 84, 75600],"float32"), 13, axis=-1, largest=True, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 2 / 1092 (0.2%)
Greatest absolute difference: 37807 at index (0, 43, 11) (up to 0.01 allowed)
Greatest relative difference: 1.3696203231811523 at index (0, 43, 12) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 84, 13]), dtype=torch.int64)
First 100 elements: tensor([73846, 29947,  7036,  8782,  4770, 36396, 30008, 22395,  9670, 31930,
         9867, 18976, 25128, 42090, 33995, 20334,  3532, 41265, 53319, 31840,
        35837, 55977, 27999, 28297, 10741, 58901, 74037, 19815,  9154, 16170,
        27196,  4768, 49620, 10510, 17459, 74720, 35462, 48647, 19996, 67359,
        57522, 36196, 15064, 65533, 61094,  4209,   929, 43958, 47251, 10164,
        17531, 60223, 56308,  1258,   185, 75470, 12515, 37389,  2763, 31407,
        16994,  3652, 11293, 64694,  7266, 37186, 34174, 38012, 37578, 43401,
        69566, 68858,  7910,  8303, 59722, 69469, 24960, 66469, 25270, 45169,
        27216,  3965, 12525, 72866, 32521, 45866, 13914, 58021, 19235, 33418,
        54042, 18982, 59756, 50697, 30495, 11317, 69535, 34781, 37355, 64962])
DESIRED: (shape=torch.Size([1, 84, 13]), dtype=torch.int64)
First 100 elements: tensor([73846, 29947,  7036,  8782,  4770, 36396, 30008, 22395,  9670, 31930,
         9867, 18976, 25128, 42090, 33995, 20334,  3532, 41265, 53319, 31840,
        35837, 55977, 27999, 28297, 10741, 58901, 74037, 19815,  9154, 16170,
        27196,  4768, 49620, 10510, 17459, 74720, 35462, 48647, 19996, 67359,
        57522, 36196, 15064, 65533, 61094,  4209,   929, 43958, 47251, 10164,
        17531, 60223, 56308,  1258,   185, 75470, 12515, 37389,  2763, 31407,
        16994,  3652, 11293, 64694,  7266, 37186, 34174, 38012, 37578, 43401,
        69566, 68858,  7910,  8303, 59722, 69469, 24960, 66469, 25270, 45169,
        27216,  3965, 12525, 72866, 32521, 45866, 13914, 58021, 19235, 33418,
        54042, 18982, 59756, 50697, 30495, 11317, 69535, 34781, 37355, 64962])
2025-05-27 04:46:24.514620 test begin: paddle.topk(Tensor([1, 87, 70644],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([1, 87, 70644],"float32"), 13, axis=-1, largest=True, )
2025-05-27 04:46:24.718149 test begin: paddle.topk(Tensor([1, 91, 52500],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([1, 91, 52500],"float32"), 13, axis=-1, largest=True, )
2025-05-27 04:46:24.897249 test begin: paddle.topk(Tensor([1, 93, 37044],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([1, 93, 37044],"float32"), 13, axis=-1, largest=True, )
2025-05-27 04:46:25.051316 test begin: paddle.topk(Tensor([1, 96, 52500],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.topk(Tensor([1, 96, 52500],"float32"), 13, axis=-1, largest=True, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 2 / 1248 (0.2%)
Greatest absolute difference: 25756 at index (0, 32, 1) (up to 0.01 allowed)
Greatest relative difference: 1.132380723953247 at index (0, 32, 2) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 96, 13]), dtype=torch.int64)
First 100 elements: tensor([35788, 14890,  7376, 15107,  6717, 49497, 44098, 28104, 42071, 34879,
         2860, 13941,  8464, 46469, 16437, 12848,  6641, 47024, 35516, 29090,
        42907, 41734,  1712, 11626,  7555, 27550, 10795, 18588, 51759, 11622,
        46608, 39954, 10542, 12126, 35707, 30766, 21389, 14129,  6293, 19351,
         3931, 13310, 16082,  9048,  3454, 36617, 38861, 38589, 50802, 46389,
        37242, 43685,  6619, 17460, 36081,  2261,  5222, 50852, 14382,  8719,
        35416, 40611, 41630, 12624,  9847, 40926, 12438, 47682, 31512, 21194,
        37931, 12283,  7012, 14165, 12816, 34316,  3556, 16936,  6040, 26934,
         1720, 11805, 23363, 19183, 34337,  7355, 24599, 30848, 37631, 21898,
        31692, 44765, 38305, 20314,  6532, 50397, 30121, 48987, 24915, 12417])
DESIRED: (shape=torch.Size([1, 96, 13]), dtype=torch.int64)
First 100 elements: tensor([35788, 14890,  7376, 15107,  6717, 49497, 44098, 28104, 42071, 34879,
         2860, 13941,  8464, 46469, 16437, 12848,  6641, 47024, 35516, 29090,
        42907, 41734,  1712, 11626,  7555, 27550, 10795, 18588, 51759, 11622,
        46608, 39954, 10542, 12126, 35707, 30766, 21389, 14129,  6293, 19351,
         3931, 13310, 16082,  9048,  3454, 36617, 38861, 38589, 50802, 46389,
        37242, 43685,  6619, 17460, 36081,  2261,  5222, 50852, 14382,  8719,
        35416, 40611, 41630, 12624,  9847, 40926, 12438, 47682, 31512, 21194,
        37931, 12283,  7012, 14165, 12816, 34316,  3556, 16936,  6040, 26934,
         1720, 11805, 23363, 19183, 34337,  7355, 24599, 30848, 37631, 21898,
        31692, 44765, 38305, 20314,  6532, 50397, 30121, 48987, 24915, 12417])
2025-05-27 04:46:25.234671 test begin: paddle.topk(Tensor([1, 99, 27216],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([1, 99, 27216],"float32"), 13, axis=-1, largest=True, )
2025-05-27 04:46:25.357388 test begin: paddle.topk(Tensor([1022, 14],"float32"), 10, axis=0, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([1022, 14],"float32"), 10, axis=0, )
2025-05-27 04:46:25.448852 test begin: paddle.topk(Tensor([128, 1000],"float16"), k=5, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.topk(Tensor([128, 1000],"float16"), k=5, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 61 / 640 (9.5%)
Greatest absolute difference: 849 at index (28, 2) (up to 0.01 allowed)
Greatest relative difference: 163.5 at index (26, 4) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([128, 5]), dtype=torch.int64)
First 100 elements: tensor([980, 955, 515, 775, 819, 252, 661, 852,  54, 988, 323, 886, 791, 234,
         89, 135, 872, 800,  98, 487, 167, 934, 458, 854, 810, 800, 418, 527,
        531,  47, 617, 877,  70, 922, 419, 549, 611, 796, 500,  60, 199, 223,
        696, 819, 253, 781, 682, 101, 580, 967, 103, 661, 945, 898, 690,  80,
        697, 163, 292, 835,  34, 472, 819, 113, 155, 550,  85, 486, 759, 202,
        569, 597, 405, 468, 112, 124, 338, 831, 923, 910, 477, 719, 875, 424,
        239, 302, 754, 600, 648, 871, 559,  31, 618, 118, 303, 611, 776, 400,
        431, 978])
DESIRED: (shape=torch.Size([128, 5]), dtype=torch.int64)
First 100 elements: tensor([980, 955, 515, 819, 775, 252, 661, 852,  54, 988, 323, 886, 791, 234,
         89, 135, 872, 800,  98, 487, 167, 934, 458, 854, 810, 800, 418, 527,
        531,  47, 617, 877,  70, 922, 419, 549, 611, 796, 500,  60, 223, 199,
        696, 819, 253, 781, 682, 101, 580, 967, 103, 661, 945, 898, 690,  80,
        697, 163, 292, 835,  34, 472, 819, 113, 155, 550,  85, 486, 759, 202,
        569, 597, 405, 468, 112, 124, 338, 831, 923, 910, 477, 719, 875, 424,
        239, 302, 754, 648, 600, 871, 559,  31, 618, 303, 118, 611, 776, 400,
        431, 978])
2025-05-27 04:46:25.541865 test begin: paddle.topk(Tensor([12906, 215],"float32"), 10, axis=0, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([12906, 215],"float32"), 10, axis=0, )
2025-05-27 04:46:25.674092 test begin: paddle.topk(Tensor([1302, 7],"float32"), 10, axis=0, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([1302, 7],"float32"), 10, axis=0, )
2025-05-27 04:46:25.761509 test begin: paddle.topk(Tensor([14, 400],"float16"), k=5, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.topk(Tensor([14, 400],"float16"), k=5, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 4 / 70 (5.7%)
Greatest absolute difference: 244 at index (5, 1) (up to 0.01 allowed)
Greatest relative difference: 3.012345790863037 at index (5, 2) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([14, 5]), dtype=torch.int64)
All elements: tensor([293,  64, 291, 380, 137, 365, 359, 207, 153,  14, 362, 227, 230, 218,
        217, 227,  14, 357, 214, 234,   1, 200, 158,  15, 378, 374,  81, 325,
         87,   7, 159,   9, 344, 212, 263, 213, 230, 221, 377, 353, 163,  14,
        126, 180, 394,  18,  47, 190, 167, 328,  27,  53, 307, 167, 309, 367,
        241, 113, 316, 116, 388, 285, 137, 293,  99,  97, 249, 308, 309, 160])
DESIRED: (shape=torch.Size([14, 5]), dtype=torch.int64)
All elements: tensor([293,  64, 291, 380, 137, 365, 359, 207, 153,  14, 362, 230, 227, 218,
        217, 227,  14, 357, 214, 234,   1, 200, 158,  15, 378, 374, 325,  81,
         87,   7, 159,   9, 344, 212, 263, 213, 230, 221, 377, 353, 163,  14,
        126, 180, 394,  18,  47, 190, 167, 328,  27,  53, 307, 167, 309, 367,
        241, 113, 316, 116, 388, 285, 137, 293,  99,  97, 249, 308, 309, 160])
2025-05-27 04:46:25.844835 test begin: paddle.topk(Tensor([14877, 420],"float32"), 10, axis=0, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([14877, 420],"float32"), 10, axis=0, )
2025-05-27 04:46:26.029753 test begin: paddle.topk(Tensor([1490, 7],"float32"), 10, axis=0, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([1490, 7],"float32"), 10, axis=0, )
2025-05-27 04:46:26.114456 test begin: paddle.topk(Tensor([15548, 1358],"float32"), k=3, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([15548, 1358],"float32"), k=3, largest=True, )
2025-05-27 04:46:26.598030 test begin: paddle.topk(Tensor([1593, 31],"float32"), 10, axis=0, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([1593, 31],"float32"), 10, axis=0, )
2025-05-27 04:46:26.722647 test begin: paddle.topk(Tensor([16, 10, 9216],"float32"), 9, axis=-1, largest=False, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([16, 10, 9216],"float32"), 9, axis=-1, largest=False, )
2025-05-27 04:46:26.844239 test begin: paddle.topk(Tensor([16, 13, 3600],"float32"), 9, axis=-1, largest=False, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([16, 13, 3600],"float32"), 9, axis=-1, largest=False, )
2025-05-27 04:46:26.942396 test begin: paddle.topk(Tensor([16, 14, 1936],"float32"), 9, axis=-1, largest=False, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([16, 14, 1936],"float32"), 9, axis=-1, largest=False, )
2025-05-27 04:46:27.034568 test begin: paddle.topk(Tensor([16, 14, 5776],"float32"), 9, axis=-1, largest=False, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([16, 14, 5776],"float32"), 9, axis=-1, largest=False, )
2025-05-27 04:46:27.152524 test begin: paddle.topk(Tensor([16, 15, 6400],"float32"), 9, axis=-1, largest=False, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([16, 15, 6400],"float32"), 9, axis=-1, largest=False, )
2025-05-27 04:46:27.261008 test begin: paddle.topk(Tensor([16, 16, 5184],"float32"), 9, axis=-1, largest=False, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([16, 16, 5184],"float32"), 9, axis=-1, largest=False, )
2025-05-27 04:46:27.367281 test begin: paddle.topk(Tensor([16, 17, 7744],"float32"), 9, axis=-1, largest=False, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([16, 17, 7744],"float32"), 9, axis=-1, largest=False, )
2025-05-27 04:46:27.490489 test begin: paddle.topk(Tensor([16, 18, 9216],"float32"), 9, axis=-1, largest=False, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([16, 18, 9216],"float32"), 9, axis=-1, largest=False, )
2025-05-27 04:46:27.615060 test begin: paddle.topk(Tensor([16, 19, 1156],"float32"), 9, axis=-1, largest=False, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([16, 19, 1156],"float32"), 9, axis=-1, largest=False, )
2025-05-27 04:46:27.710328 test begin: paddle.topk(Tensor([16, 19, 1296],"float32"), 9, axis=-1, largest=False, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([16, 19, 1296],"float32"), 9, axis=-1, largest=False, )
2025-05-27 04:46:27.804158 test begin: paddle.topk(Tensor([16, 19, 7744],"float32"), 9, axis=-1, largest=False, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([16, 19, 7744],"float32"), 9, axis=-1, largest=False, )
2025-05-27 04:46:27.926670 test begin: paddle.topk(Tensor([16, 19, 9216],"float32"), 9, axis=-1, largest=False, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.topk(Tensor([16, 19, 9216],"float32"), 9, axis=-1, largest=False, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 2 / 2736 (0.1%)
Greatest absolute difference: 6416 at index (13, 18, 4) (up to 0.01 allowed)
Greatest relative difference: 4.17980432510376 at index (13, 18, 5) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([16, 19, 9]), dtype=torch.int64)
First 100 elements: tensor([3540, 2035,  772, 5774, 1372,  104, 8434, 8422, 6903, 6380, 6194, 4383,
        2100,  368, 8895, 6473, 1446, 6525, 8284, 2354, 3046, 6603, 2465, 1108,
        7663, 2897, 7643, 7653, 5465, 5068, 3944, 6437, 4795, 7683, 3505,  108,
        5935, 5250, 3935, 5891,  392, 5826, 4503, 8453, 2431, 1532, 9065, 7189,
        6000, 1758,   48, 2667,  251, 6637, 4599, 5474, 7185, 3809, 2425, 2466,
        1358, 5842, 4260, 4246, 9208, 2831, 7413, 7963, 7794,  321, 1984,  361,
        5313, 2006, 7640, 4030, 1763, 4128,  585, 4080, 8566, 7447, 4983,  285,
        8129, 9094, 7371, 1191, 6910, 6814, 5357, 7647, 5438, 4307, 6832, 2641,
        1063, 7205, 6128, 6282])
DESIRED: (shape=torch.Size([16, 19, 9]), dtype=torch.int64)
First 100 elements: tensor([3540, 2035,  772, 5774, 1372,  104, 8434, 8422, 6903, 6380, 6194, 4383,
        2100,  368, 8895, 6473, 1446, 6525, 8284, 2354, 3046, 6603, 2465, 1108,
        7663, 2897, 7643, 7653, 5465, 5068, 3944, 6437, 4795, 7683, 3505,  108,
        5935, 5250, 3935, 5891,  392, 5826, 4503, 8453, 2431, 1532, 9065, 7189,
        6000, 1758,   48, 2667,  251, 6637, 4599, 5474, 7185, 3809, 2425, 2466,
        1358, 5842, 4260, 4246, 9208, 2831, 7413, 7963, 7794,  321, 1984,  361,
        5313, 2006, 7640, 4030, 1763, 4128,  585, 4080, 8566, 7447, 4983,  285,
        8129, 9094, 7371, 1191, 6910, 6814, 5357, 7647, 5438, 4307, 6832, 2641,
        1063, 7205, 6128, 6282])
2025-05-27 04:46:28.053379 test begin: paddle.topk(Tensor([16, 20, 2304],"float32"), 9, axis=-1, largest=False, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([16, 20, 2304],"float32"), 9, axis=-1, largest=False, )
2025-05-27 04:46:28.153115 test begin: paddle.topk(Tensor([16, 20, 6400],"float32"), 9, axis=-1, largest=False, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.topk(Tensor([16, 20, 6400],"float32"), 9, axis=-1, largest=False, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 2 / 2880 (0.1%)
Greatest absolute difference: 1721 at index (8, 6, 2) (up to 0.01 allowed)
Greatest relative difference: 4.8478875160217285 at index (8, 6, 3) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([16, 20, 9]), dtype=torch.int64)
First 100 elements: tensor([5327, 1674, 2138, 1917, 5483, 3250, 5675, 5545, 1241, 2031, 1473, 3989,
         224, 2093, 4979, 3253, 4336, 4692, 1956, 4592, 4504, 2314, 4470,  434,
        6164, 5248, 3195,  253, 3743, 4294,   39,  545, 3127, 3909, 5641,  689,
        3506, 1419, 1948, 1579, 1408, 2363, 5140, 3355, 3715, 2201,  431, 2561,
        1617, 1139, 5257, 3570, 1615, 2696, 3211, 1997, 1597, 4265, 5488, 3447,
        1613,  717, 4080, 2733,  346, 6082, 4867, 5487, 6286,  101, 3448, 1049,
        1054, 6058, 4373, 6322, 6192, 4296, 1692, 3293, 2574, 3879, 3306, 4739,
        1535, 4194, 6157, 3298, 3179, 2792, 4562, 2850, 4953,  521, 5612,  249,
          65, 2917, 4921, 5877])
DESIRED: (shape=torch.Size([16, 20, 9]), dtype=torch.int64)
First 100 elements: tensor([5327, 1674, 2138, 1917, 5483, 3250, 5675, 5545, 1241, 2031, 1473, 3989,
         224, 2093, 4979, 3253, 4336, 4692, 1956, 4592, 4504, 2314, 4470,  434,
        6164, 5248, 3195,  253, 3743, 4294,   39,  545, 3127, 3909, 5641,  689,
        3506, 1419, 1948, 1579, 1408, 2363, 5140, 3355, 3715, 2201,  431, 2561,
        1617, 1139, 5257, 3570, 1615, 2696, 3211, 1997, 1597, 4265, 5488, 3447,
        1613,  717, 4080, 2733,  346, 6082, 4867, 5487, 6286,  101, 3448, 1049,
        1054, 6058, 4373, 6322, 6192, 4296, 1692, 3293, 2574, 3879, 3306, 4739,
        1535, 4194, 6157, 3298, 3179, 2792, 4562, 2850, 4953,  521, 5612,  249,
          65, 2917, 4921, 5877])
2025-05-27 04:46:28.283813 test begin: paddle.topk(Tensor([16, 20, 7056],"float32"), 9, axis=-1, largest=False, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([16, 20, 7056],"float32"), 9, axis=-1, largest=False, )
2025-05-27 04:46:28.401990 test begin: paddle.topk(Tensor([16, 21, 1156],"float32"), 9, axis=-1, largest=False, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([16, 21, 1156],"float32"), 9, axis=-1, largest=False, )
2025-05-27 04:46:28.494803 test begin: paddle.topk(Tensor([16, 21, 5184],"float32"), 9, axis=-1, largest=False, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([16, 21, 5184],"float32"), 9, axis=-1, largest=False, )
2025-05-27 04:46:28.608441 test begin: paddle.topk(Tensor([16, 21, 9216],"float32"), 9, axis=-1, largest=False, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.topk(Tensor([16, 21, 9216],"float32"), 9, axis=-1, largest=False, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 4 / 3024 (0.1%)
Greatest absolute difference: 4955 at index (8, 5, 5) (up to 0.01 allowed)
Greatest relative difference: 6.460234642028809 at index (8, 5, 6) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([16, 21, 9]), dtype=torch.int64)
First 100 elements: tensor([3468, 1149, 3971,  868, 7166, 6566, 7292, 1036, 2587, 2977, 2922, 6757,
        1241, 6832,  647, 4888, 1680, 7858, 4552, 3073, 1294, 2396, 3629, 3643,
        2403, 3377, 6416, 2822, 2597, 8483, 8150, 7566, 3472, 5473, 4291, 2148,
        1977, 6436, 5505, 4990, 1981, 2556, 6247, 8851, 6859, 4900, 7240, 2886,
        7221, 5714, 7558, 5614, 2273,  660, 6034, 8034, 1169, 4216, 8297, 4744,
        1063, 8114, 2775, 2739, 2326,  468, 8820, 4184,  488, 6600, 4899,  316,
         658, 6868, 5232, 8397, 7777, 3266, 6304, 5770, 2099, 1555,  450, 2378,
        8281, 3739, 2692,  655, 8259, 6892, 8662, 1936, 5857, 6029, 9160, 2149,
        3936, 2911, 7644, 6228])
DESIRED: (shape=torch.Size([16, 21, 9]), dtype=torch.int64)
First 100 elements: tensor([3468, 1149, 3971,  868, 7166, 6566, 7292, 1036, 2587, 2977, 2922, 6757,
        1241, 6832,  647, 4888, 1680, 7858, 4552, 3073, 1294, 2396, 3629, 3643,
        2403, 3377, 6416, 2822, 2597, 8483, 8150, 7566, 3472, 5473, 4291, 2148,
        1977, 6436, 5505, 4990, 1981, 2556, 6247, 8851, 6859, 4900, 7240, 2886,
        7221, 5714, 7558, 5614, 2273,  660, 6034, 8034, 1169, 4216, 8297, 4744,
        1063, 8114, 2775, 2739, 2326,  468, 8820, 4184,  488, 6600, 4899,  316,
         658, 6868, 5232, 8397, 7777, 3266, 6304, 5770, 2099, 1555,  450, 2378,
        8281, 3739, 2692,  655, 8259, 6892, 8662, 1936, 5857, 6029, 9160, 2149,
        3936, 2911, 7644, 6228])
2025-05-27 04:46:28.740520 test begin: paddle.topk(Tensor([16, 23, 169],"float32"), 9, axis=-1, largest=False, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([16, 23, 169],"float32"), 9, axis=-1, largest=False, )
2025-05-27 04:46:28.834483 test begin: paddle.topk(Tensor([16, 23, 8464],"float32"), 9, axis=-1, largest=False, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([16, 23, 8464],"float32"), 9, axis=-1, largest=False, )
2025-05-27 04:46:28.962141 test begin: paddle.topk(Tensor([16, 24, 1764],"float32"), 9, axis=-1, largest=False, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([16, 24, 1764],"float32"), 9, axis=-1, largest=False, )
2025-05-27 04:46:29.069820 test begin: paddle.topk(Tensor([16, 24, 3600],"float32"), 9, axis=-1, largest=False, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([16, 24, 3600],"float32"), 9, axis=-1, largest=False, )
2025-05-27 04:46:29.187267 test begin: paddle.topk(Tensor([16, 24, 5776],"float32"), 9, axis=-1, largest=False, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([16, 24, 5776],"float32"), 9, axis=-1, largest=False, )
2025-05-27 04:46:29.304611 test begin: paddle.topk(Tensor([16, 24, 7744],"float32"), 9, axis=-1, largest=False, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([16, 24, 7744],"float32"), 9, axis=-1, largest=False, )
2025-05-27 04:46:29.430628 test begin: paddle.topk(Tensor([16, 25, 1764],"float32"), 9, axis=-1, largest=False, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([16, 25, 1764],"float32"), 9, axis=-1, largest=False, )
2025-05-27 04:46:29.536537 test begin: paddle.topk(Tensor([16, 26, 6400],"float32"), 9, axis=-1, largest=False, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([16, 26, 6400],"float32"), 9, axis=-1, largest=False, )
2025-05-27 04:46:29.660695 test begin: paddle.topk(Tensor([16, 27, 2304],"float32"), 9, axis=-1, largest=False, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([16, 27, 2304],"float32"), 9, axis=-1, largest=False, )
2025-05-27 04:46:29.765732 test begin: paddle.topk(Tensor([16, 27, 7744],"float32"), 9, axis=-1, largest=False, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([16, 27, 7744],"float32"), 9, axis=-1, largest=False, )
2025-05-27 04:46:29.898952 test begin: paddle.topk(Tensor([16, 27, 8464],"float32"), 9, axis=-1, largest=False, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([16, 27, 8464],"float32"), 9, axis=-1, largest=False, )
2025-05-27 04:46:30.034006 test begin: paddle.topk(Tensor([16, 29, 4624],"float32"), 9, axis=-1, largest=False, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([16, 29, 4624],"float32"), 9, axis=-1, largest=False, )
2025-05-27 04:46:30.156271 test begin: paddle.topk(Tensor([16, 29, 7744],"float32"), 9, axis=-1, largest=False, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.topk(Tensor([16, 29, 7744],"float32"), 9, axis=-1, largest=False, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 2 / 4176 (0.0%)
Greatest absolute difference: 3540 at index (14, 11, 3) (up to 0.01 allowed)
Greatest relative difference: 0.9500805139541626 at index (14, 11, 4) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([16, 29, 9]), dtype=torch.int64)
First 100 elements: tensor([2036, 3488, 5811,  611, 5049, 3382, 5512, 1488, 3242, 6855,  398,  661,
        6856, 6837,  670, 4592, 7258, 1337,  371, 5633, 3558, 1237, 2084, 4036,
        4680, 5711, 2037, 3919, 3375, 5149, 7341, 6024, 2829, 5817, 2296, 7538,
         295, 4377, 1896, 7661, 4136, 6100, 6292, 6371, 1984,  299, 4824, 2403,
        5525, 2158, 2065, 5630, 3890, 2766, 7141, 4557, 6579, 6833, 2874, 3746,
        1101, 2652, 6377, 4831, 5459, 7135,   42, 5079, 5057, 4520, 7739, 4199,
        5473, 6783, 4933, 5536, 4940, 5327, 5411, 5245, 6512, 3949, 5425, 6495,
        7721, 2773, 1942,  221, 1982, 7575, 6045, 3770, 3960, 6015, 4921, 4401,
        2191, 5276, 3405, 1875])
DESIRED: (shape=torch.Size([16, 29, 9]), dtype=torch.int64)
First 100 elements: tensor([2036, 3488, 5811,  611, 5049, 3382, 5512, 1488, 3242, 6855,  398,  661,
        6856, 6837,  670, 4592, 7258, 1337,  371, 5633, 3558, 1237, 2084, 4036,
        4680, 5711, 2037, 3919, 3375, 5149, 7341, 6024, 2829, 5817, 2296, 7538,
         295, 4377, 1896, 7661, 4136, 6100, 6292, 6371, 1984,  299, 4824, 2403,
        5525, 2158, 2065, 5630, 3890, 2766, 7141, 4557, 6579, 6833, 2874, 3746,
        1101, 2652, 6377, 4831, 5459, 7135,   42, 5079, 5057, 4520, 7739, 4199,
        5473, 6783, 4933, 5536, 4940, 5327, 5411, 5245, 6512, 3949, 5425, 6495,
        7721, 2773, 1942,  221, 1982, 7575, 6045, 3770, 3960, 6015, 4921, 4401,
        2191, 5276, 3405, 1875])
2025-05-27 04:46:30.309132 test begin: paddle.topk(Tensor([16, 30, 2304],"float32"), 9, axis=-1, largest=False, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([16, 30, 2304],"float32"), 9, axis=-1, largest=False, )
2025-05-27 04:46:30.417777 test begin: paddle.topk(Tensor([16, 30, 7056],"float32"), 9, axis=-1, largest=False, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([16, 30, 7056],"float32"), 9, axis=-1, largest=False, )
2025-05-27 04:46:30.551969 test begin: paddle.topk(Tensor([16, 30, 7744],"float32"), 9, axis=-1, largest=False, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([16, 30, 7744],"float32"), 9, axis=-1, largest=False, )
2025-05-27 04:46:30.694187 test begin: paddle.topk(Tensor([16, 31, 7744],"float32"), 9, axis=-1, largest=False, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([16, 31, 7744],"float32"), 9, axis=-1, largest=False, )
2025-05-27 04:46:30.844041 test begin: paddle.topk(Tensor([16, 32, 4096],"float32"), 9, axis=-1, largest=False, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([16, 32, 4096],"float32"), 9, axis=-1, largest=False, )
2025-05-27 04:46:30.970062 test begin: paddle.topk(Tensor([16, 33, 1296],"float32"), 9, axis=-1, largest=False, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([16, 33, 1296],"float32"), 9, axis=-1, largest=False, )
2025-05-27 04:46:31.073736 test begin: paddle.topk(Tensor([16, 33, 3600],"float32"), 9, axis=-1, largest=False, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([16, 33, 3600],"float32"), 9, axis=-1, largest=False, )
2025-05-27 04:46:31.192237 test begin: paddle.topk(Tensor([16, 35, 8464],"float32"), 9, axis=-1, largest=False, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([16, 35, 8464],"float32"), 9, axis=-1, largest=False, )
2025-05-27 04:46:31.382747 test begin: paddle.topk(Tensor([16, 36, 7056],"float32"), 9, axis=-1, largest=False, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([16, 36, 7056],"float32"), 9, axis=-1, largest=False, )
2025-05-27 04:46:31.527289 test begin: paddle.topk(Tensor([16, 37, 7056],"float32"), 9, axis=-1, largest=False, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([16, 37, 7056],"float32"), 9, axis=-1, largest=False, )
2025-05-27 04:46:31.690755 test begin: paddle.topk(Tensor([16, 38, 5184],"float32"), 9, axis=-1, largest=False, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([16, 38, 5184],"float32"), 9, axis=-1, largest=False, )
2025-05-27 04:46:31.825676 test begin: paddle.topk(Tensor([16, 38, 5776],"float32"), 9, axis=-1, largest=False, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([16, 38, 5776],"float32"), 9, axis=-1, largest=False, )
2025-05-27 04:46:31.959086 test begin: paddle.topk(Tensor([16, 39, 6400],"float32"), 9, axis=-1, largest=False, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([16, 39, 6400],"float32"), 9, axis=-1, largest=False, )
2025-05-27 04:46:32.097306 test begin: paddle.topk(Tensor([16, 40, 2704],"float32"), 9, axis=-1, largest=False, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([16, 40, 2704],"float32"), 9, axis=-1, largest=False, )
2025-05-27 04:46:32.211809 test begin: paddle.topk(Tensor([16, 40, 6400],"float32"), 9, axis=-1, largest=False, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.topk(Tensor([16, 40, 6400],"float32"), 9, axis=-1, largest=False, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 6 / 5760 (0.1%)
Greatest absolute difference: 3151 at index (6, 15, 1) (up to 0.01 allowed)
Greatest relative difference: 3.38342547416687 at index (6, 24, 4) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([16, 40, 9]), dtype=torch.int64)
First 100 elements: tensor([5744, 2608, 3762, 3048, 1613, 2299, 2865, 3153, 5403, 5647, 2688, 3174,
        3116,  125, 5481, 5223, 2459, 5326, 2732, 4048, 5135, 5553, 5511, 1591,
        1504,  400, 3517, 5827,  209,  984, 1749, 5138, 4717,  263, 4162, 5924,
         621, 5013, 2276, 4745,  730, 2539, 5465, 1752, 1489, 5402,  514, 4575,
         416, 6362, 6153, 1471,  905, 5123, 4204,  997, 2097, 4176,  828, 2502,
        1946, 5256, 2384, 4880, 5533, 2346, 5690, 3357, 2535,   72, 2329,  446,
        5572, 3422, 3520,  776,  640, 6058, 5910, 5544,   86, 4451, 3917, 1883,
        3443, 2712, 4666, 2069, 2311, 1075, 5332,  434, 1180,  279, 4072, 3949,
        4125,  713, 3033, 1750])
DESIRED: (shape=torch.Size([16, 40, 9]), dtype=torch.int64)
First 100 elements: tensor([5744, 2608, 3762, 3048, 1613, 2299, 2865, 3153, 5403, 5647, 2688, 3174,
        3116,  125, 5481, 5223, 2459, 5326, 2732, 4048, 5135, 5553, 5511, 1591,
        1504,  400, 3517, 5827,  209,  984, 1749, 5138, 4717,  263, 4162, 5924,
         621, 5013, 2276, 4745,  730, 2539, 5465, 1752, 1489, 5402,  514, 4575,
         416, 6362, 6153, 1471,  905, 5123, 4204,  997, 2097, 4176,  828, 2502,
        1946, 5256, 2384, 4880, 5533, 2346, 5690, 3357, 2535,   72, 2329,  446,
        5572, 3422, 3520,  776,  640, 6058, 5910, 5544,   86, 4451, 3917, 1883,
        3443, 2712, 4666, 2069, 2311, 1075, 5332,  434, 1180,  279, 4072, 3949,
        4125,  713, 3033, 1750])
2025-05-27 04:46:32.353931 test begin: paddle.topk(Tensor([16, 400],"float16"), k=5, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.topk(Tensor([16, 400],"float16"), k=5, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 4 / 80 (5.0%)
Greatest absolute difference: 97 at index (14, 1) (up to 0.01 allowed)
Greatest relative difference: 2.204545497894287 at index (14, 2) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([16, 5]), dtype=torch.int64)
All elements: tensor([ 53, 147, 166, 316, 332, 283, 226,  52, 300, 311, 369, 231, 104, 389,
         26, 197,  98, 269, 256, 143, 322,  81, 394, 363, 378, 246, 207, 370,
        262, 216, 254, 166, 340, 223, 185, 107, 141, 156,  86,  51, 152, 333,
         75,  78, 145,  90,  33, 146, 183, 212, 284, 174,   6, 111, 355,  67,
        273, 265, 346,  41, 170, 365, 249,  88, 140, 118, 246, 309, 245,  53,
        129,  44, 141, 348,  33, 102, 300, 278, 160, 183])
DESIRED: (shape=torch.Size([16, 5]), dtype=torch.int64)
All elements: tensor([ 53, 147, 166, 332, 316, 283, 226,  52, 300, 311, 369, 231, 104, 389,
         26, 197,  98, 269, 256, 143, 322,  81, 394, 363, 378, 246, 207, 370,
        262, 216, 254, 166, 340, 223, 185, 107, 141, 156,  86,  51, 152, 333,
         75,  78, 145,  90,  33, 146, 183, 212, 284, 174,   6, 111, 355,  67,
        273, 265, 346,  41, 170, 365, 249,  88, 140, 118, 246, 309, 245,  53,
        129, 141,  44, 348,  33, 102, 300, 278, 160, 183])
2025-05-27 04:46:32.441473 test begin: paddle.topk(Tensor([16, 42, 1024],"float32"), 9, axis=-1, largest=False, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([16, 42, 1024],"float32"), 9, axis=-1, largest=False, )
2025-05-27 04:46:32.544682 test begin: paddle.topk(Tensor([16, 42, 2704],"float32"), 9, axis=-1, largest=False, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([16, 42, 2704],"float32"), 9, axis=-1, largest=False, )
2025-05-27 04:46:32.657918 test begin: paddle.topk(Tensor([16, 42, 4096],"float32"), 9, axis=-1, largest=False, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([16, 42, 4096],"float32"), 9, axis=-1, largest=False, )
2025-05-27 04:46:32.783599 test begin: paddle.topk(Tensor([16, 43, 2116],"float32"), 9, axis=-1, largest=False, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([16, 43, 2116],"float32"), 9, axis=-1, largest=False, )
2025-05-27 04:46:32.900652 test begin: paddle.topk(Tensor([16, 43, 4624],"float32"), 9, axis=-1, largest=False, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.topk(Tensor([16, 43, 4624],"float32"), 9, axis=-1, largest=False, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 2 / 6192 (0.0%)
Greatest absolute difference: 3501 at index (6, 1, 3) (up to 0.01 allowed)
Greatest relative difference: 11.631229400634766 at index (6, 1, 4) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([16, 43, 9]), dtype=torch.int64)
First 100 elements: tensor([3858, 3865, 3056, 3433, 2883, 3517,  218, 4340, 4444, 3697, 1938, 4310,
        1222, 2682, 2408, 2023, 2296,  687,  368, 1553,  498,  109, 1158, 3758,
          70, 3513,  228, 1139, 4061,  521, 1645, 3774, 2622, 1254, 2028, 2351,
        4555, 1380, 2470, 1265, 2331,  810, 1004,  656, 3608, 1081, 1457, 3545,
        2339, 2155, 3283, 3912, 2117, 1365, 2868, 3752, 3056, 4465, 2987,  438,
        2957, 1985, 1361, 3807, 1993, 4437,  499, 1873,  847, 1495, 2800,  310,
        1043, 2008, 2335, 1850, 2181,   45, 2483, 4558, 1796, 2682,  524, 4334,
        2550, 3884, 1559, 1449,  758, 3092, 4344, 1273, 4070, 3954,  485, 4306,
         740, 4235, 1733, 1465])
DESIRED: (shape=torch.Size([16, 43, 9]), dtype=torch.int64)
First 100 elements: tensor([3858, 3865, 3056, 3433, 2883, 3517,  218, 4340, 4444, 3697, 1938, 4310,
        1222, 2682, 2408, 2023, 2296,  687,  368, 1553,  498,  109, 1158, 3758,
          70, 3513,  228, 1139, 4061,  521, 1645, 3774, 2622, 1254, 2028, 2351,
        4555, 1380, 2470, 1265, 2331,  810, 1004,  656, 3608, 1081, 1457, 3545,
        2339, 2155, 3283, 3912, 2117, 1365, 2868, 3752, 3056, 4465, 2987,  438,
        2957, 1985, 1361, 3807, 1993, 4437,  499, 1873,  847, 1495, 2800,  310,
        1043, 2008, 2335, 1850, 2181,   45, 2483, 4558, 1796, 2682,  524, 4334,
        2550, 3884, 1559, 1449,  758, 3092, 4344, 1273, 4070, 3954,  485, 4306,
         740, 4235, 1733, 1465])
2025-05-27 04:46:33.040506 test begin: paddle.topk(Tensor([16, 43, 7744],"float32"), 9, axis=-1, largest=False, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([16, 43, 7744],"float32"), 9, axis=-1, largest=False, )
2025-05-27 04:46:33.248012 test begin: paddle.topk(Tensor([16, 43, 8464],"float32"), 9, axis=-1, largest=False, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([16, 43, 8464],"float32"), 9, axis=-1, largest=False, )
2025-05-27 04:46:33.426798 test begin: paddle.topk(Tensor([16, 45, 1936],"float32"), 9, axis=-1, largest=False, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([16, 45, 1936],"float32"), 9, axis=-1, largest=False, )
2025-05-27 04:46:33.550566 test begin: paddle.topk(Tensor([16, 45, 7744],"float32"), 9, axis=-1, largest=False, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([16, 45, 7744],"float32"), 9, axis=-1, largest=False, )
2025-05-27 04:46:33.731713 test begin: paddle.topk(Tensor([16, 55, 6400],"float32"), 9, axis=-1, largest=False, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.topk(Tensor([16, 55, 6400],"float32"), 9, axis=-1, largest=False, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 4 / 7920 (0.1%)
Greatest absolute difference: 3195 at index (11, 40, 3) (up to 0.01 allowed)
Greatest relative difference: 10.459731101989746 at index (8, 19, 8) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([16, 55, 9]), dtype=torch.int64)
First 100 elements: tensor([3624, 6028, 5598, 4022, 2877, 1219, 3648, 2081,  142, 5130, 3507, 4222,
        3886, 2087, 6309, 4983,  637, 4343,   47, 4610,  457,  865, 4307, 4508,
        3900, 2426, 3535, 2422, 3433, 1237,  671,  264, 4649, 1368, 5402, 1560,
        5436, 6339,   45, 4862, 3753, 5281, 2330, 1046, 3446, 4468,  290,  876,
        1867, 2115, 6128, 1811, 4823, 2252, 1449, 4686, 5393,  234,  735, 5332,
        4381, 6120, 1476, 5288, 2287, 3799, 4512, 4079,  518, 5913, 5846,  681,
        4092, 2930, 5267, 1709, 3816, 5691,  383, 1417, 2945, 4692,  749,  267,
        1630, 4115, 4819,   31, 4079, 1199, 4816,  403, 3426,  376, 5405, 1586,
         483, 2752, 1835, 4221])
DESIRED: (shape=torch.Size([16, 55, 9]), dtype=torch.int64)
First 100 elements: tensor([3624, 6028, 5598, 4022, 2877, 1219, 3648, 2081,  142, 5130, 3507, 4222,
        3886, 2087, 6309, 4983,  637, 4343,   47, 4610,  457,  865, 4307, 4508,
        3900, 2426, 3535, 2422, 3433, 1237,  671,  264, 4649, 1368, 5402, 1560,
        5436, 6339,   45, 4862, 3753, 5281, 2330, 1046, 3446, 4468,  290,  876,
        1867, 2115, 6128, 1811, 4823, 2252, 1449, 4686, 5393,  234,  735, 5332,
        4381, 6120, 1476, 5288, 2287, 3799, 4512, 4079,  518, 5913, 5846,  681,
        4092, 2930, 5267, 1709, 3816, 5691,  383, 1417, 2945, 4692,  749,  267,
        1630, 4115, 4819,   31, 4079, 1199, 4816,  403, 3426,  376, 5405, 1586,
         483, 2752, 1835, 4221])
2025-05-27 04:46:33.915137 test begin: paddle.topk(Tensor([16121, 811],"float32"), 10, axis=0, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.topk(Tensor([16121, 811],"float32"), 10, axis=0, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 6 / 8110 (0.1%)
Greatest absolute difference: 8663 at index (3, 808) (up to 0.01 allowed)
Greatest relative difference: 78.75454711914062 at index (4, 808) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([10, 811]), dtype=torch.int64)
First 100 elements: tensor([10752,  1137, 15853, 12522,  6251,     0,  2100, 13442, 14382,  5087,
        10528,  7979, 12047,  1407, 14508,  3875, 12619,  6036,  9456, 10278,
        12457,  1685,  1546,  4137, 14020,  1862,  1916,  7194, 12206,  3233,
         3823, 11406, 15031,  6378,  9515, 13644,  6887, 14387,  2377,  6187,
         6687,  5813, 10325, 10554,  3604,  1314, 13787,  3864,  6393,  6060,
         8418,  1355, 12904, 11157,  8167,  1536,  2191,  3657, 13879, 12005,
         4609,  4888,  2612,  4972,  7980,   868, 14258,   767,  3797, 12257,
         6277, 15532, 13584,   890,  5268,   244, 16059,  3100, 15055,  2523,
        15305, 13083, 15583,  5138,  2847,  2419, 12068, 15263, 15061,     5,
        14710, 14775,  8174, 12535,  1474,  9787,  8727,  6931, 11813, 12454])
DESIRED: (shape=torch.Size([10, 811]), dtype=torch.int64)
First 100 elements: tensor([10752,  1137, 15853, 12522,  6251,     0,  2100, 13442, 14382,  5087,
        10528,  7979, 12047,  1407, 14508,  3875, 12619,  6036,  9456, 10278,
        12457,  1685,  1546,  4137, 14020,  1862,  1916,  7194, 12206,  3233,
         3823, 11406, 15031,  6378,  9515, 13644,  6887, 14387,  2377,  6187,
         6687,  5813, 10325, 10554,  3604,  1314, 13787,  3864,  6393,  6060,
         8418,  1355, 12904, 11157,  8167,  1536,  2191,  3657, 13879, 12005,
         4609,  4888,  2612,  4972,  7980,   868, 14258,   767,  3797, 12257,
         6277, 15532, 13584,   890,  5268,   244, 16059,  3100, 15055,  2523,
        15305, 13083, 15583,  5138,  2847,  2419, 12068, 15263, 15061,     5,
        14710, 14775,  8174, 12535,  1474,  9787,  8727,  6931, 11813, 12454])
2025-05-27 04:46:34.236759 test begin: paddle.topk(Tensor([1726, 17],"float32"), 10, axis=0, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([1726, 17],"float32"), 10, axis=0, )
2025-05-27 04:46:34.335883 test begin: paddle.topk(Tensor([1876, 18],"float32"), 10, axis=0, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([1876, 18],"float32"), 10, axis=0, )
2025-05-27 04:46:34.432304 test begin: paddle.topk(Tensor([1944, 42],"float32"), 10, axis=0, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([1944, 42],"float32"), 10, axis=0, )
2025-05-27 04:46:34.529161 test begin: paddle.topk(Tensor([2, 102, 4725],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([2, 102, 4725],"float32"), 13, axis=-1, largest=True, )
2025-05-27 04:46:34.637337 test begin: paddle.topk(Tensor([2, 103, 4725],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([2, 103, 4725],"float32"), 13, axis=-1, largest=True, )
2025-05-27 04:46:34.746649 test begin: paddle.topk(Tensor([2, 103, 8400],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([2, 103, 8400],"float32"), 13, axis=-1, largest=True, )
2025-05-27 04:46:34.879573 test begin: paddle.topk(Tensor([2, 106, 8400],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([2, 106, 8400],"float32"), 13, axis=-1, largest=True, )
2025-05-27 04:46:35.031917 test begin: paddle.topk(Tensor([2, 11, 3136],"float32"), 9, axis=-1, largest=False, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([2, 11, 3136],"float32"), 9, axis=-1, largest=False, )
2025-05-27 04:46:35.126846 test begin: paddle.topk(Tensor([2, 117, 10164],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([2, 117, 10164],"float32"), 13, axis=-1, largest=True, )
2025-05-27 04:46:35.250990 test begin: paddle.topk(Tensor([2, 119, 6804],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([2, 119, 6804],"float32"), 13, axis=-1, largest=True, )
2025-05-27 04:46:35.368652 test begin: paddle.topk(Tensor([2, 122, 10164],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([2, 122, 10164],"float32"), 13, axis=-1, largest=True, )
2025-05-27 04:46:35.496316 test begin: paddle.topk(Tensor([2, 123, 3024],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([2, 123, 3024],"float32"), 13, axis=-1, largest=True, )
2025-05-27 04:46:35.602760 test begin: paddle.topk(Tensor([2, 123, 7581],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.topk(Tensor([2, 123, 7581],"float32"), 13, axis=-1, largest=True, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 2 / 3198 (0.1%)
Greatest absolute difference: 2078 at index (0, 117, 6) (up to 0.01 allowed)
Greatest relative difference: 1.5635815858840942 at index (0, 117, 7) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2, 123, 13]), dtype=torch.int64)
First 100 elements: tensor([4229,  328, 5160,   16, 7267,  178, 3578, 2705, 7103, 1404, 2571, 7027,
        3800, 3796, 2121, 4585,  176,  968, 1513, 1527, 4038, 6818, 3777, 3731,
        1000, 4026, 1891,  270, 6376,  862, 3529, 6702, 2548, 1403,  630, 2625,
        4969, 3413, 5374, 7457, 5399,  560, 4274,  643, 7185, 4638, 6157, 6842,
        5004, 4560, 7271, 3994, 4423, 6838, 5092, 6411,  215, 2157, 1051, 7535,
        2297, 5198, 4711, 1140,  574, 4784, 4258, 1660, 1716,  609,  145, 7114,
        7075, 5881, 2812, 6747,  739,  167, 5730, 7197,  248, 4435, 5792, 2118,
        5909, 3828, 4981, 5996, 3151, 7408, 3688, 5370, 2828, 5959, 1335,  971,
        7300, 3827, 2438, 3050])
DESIRED: (shape=torch.Size([2, 123, 13]), dtype=torch.int64)
First 100 elements: tensor([4229,  328, 5160,   16, 7267,  178, 3578, 2705, 7103, 1404, 2571, 7027,
        3800, 3796, 2121, 4585,  176,  968, 1513, 1527, 4038, 6818, 3777, 3731,
        1000, 4026, 1891,  270, 6376,  862, 3529, 6702, 2548, 1403,  630, 2625,
        4969, 3413, 5374, 7457, 5399,  560, 4274,  643, 7185, 4638, 6157, 6842,
        5004, 4560, 7271, 3994, 4423, 6838, 5092, 6411,  215, 2157, 1051, 7535,
        2297, 5198, 4711, 1140,  574, 4784, 4258, 1660, 1716,  609,  145, 7114,
        7075, 5881, 2812, 6747,  739,  167, 5730, 7197,  248, 4435, 5792, 2118,
        5909, 3828, 4981, 5996, 3151, 7408, 3688, 5370, 2828, 5959, 1335,  971,
        7300, 3827, 2438, 3050])
2025-05-27 04:46:35.722553 test begin: paddle.topk(Tensor([2, 125, 6069],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([2, 125, 6069],"float32"), 13, axis=-1, largest=True, )
2025-05-27 04:46:35.836368 test begin: paddle.topk(Tensor([2, 131, 2541],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([2, 131, 2541],"float32"), 13, axis=-1, largest=True, )
2025-05-27 04:46:35.969721 test begin: paddle.topk(Tensor([2, 133, 6069],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([2, 133, 6069],"float32"), 13, axis=-1, largest=True, )
2025-05-27 04:46:36.087569 test begin: paddle.topk(Tensor([2, 138, 6069],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.topk(Tensor([2, 138, 6069],"float32"), 13, axis=-1, largest=True, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 2 / 3588 (0.1%)
Greatest absolute difference: 2621 at index (0, 122, 3) (up to 0.01 allowed)
Greatest relative difference: 1.346173644065857 at index (0, 122, 4) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2, 138, 13]), dtype=torch.int64)
First 100 elements: tensor([1237, 5148, 1597, 4605, 1367, 2215, 5416,  674, 3985, 1836, 1501, 4692,
        2524, 1994, 1109, 3998, 2590, 2465, 5914, 4448, 3080, 1933, 2645, 5329,
        3067, 2157, 1695, 3928, 2062,  834, 3258, 1103, 4262, 5522, 3056,  535,
        3417, 3512, 3639, 3163, 5358, 4356, 1431, 5765, 3562, 1849, 3578, 4291,
         425, 5806, 3980, 1379, 4335, 2841, 2216, 4850, 4072, 3868, 3827, 5212,
        1575, 4356, 3453,  842, 3895,  974, 4770,  367, 4099,  436, 3767, 3621,
        1302, 4719, 5440, 2034, 2362, 4570,  949,  449,  771, 4744, 5397, 3327,
        4792, 4253, 5048, 1417,  595, 6005,  958,  100, 5722, 3378, 5473,  575,
        3047,  426,   29, 1050])
DESIRED: (shape=torch.Size([2, 138, 13]), dtype=torch.int64)
First 100 elements: tensor([1237, 5148, 1597, 4605, 1367, 2215, 5416,  674, 3985, 1836, 1501, 4692,
        2524, 1994, 1109, 3998, 2590, 2465, 5914, 4448, 3080, 1933, 2645, 5329,
        3067, 2157, 1695, 3928, 2062,  834, 3258, 1103, 4262, 5522, 3056,  535,
        3417, 3512, 3639, 3163, 5358, 4356, 1431, 5765, 3562, 1849, 3578, 4291,
         425, 5806, 3980, 1379, 4335, 2841, 2216, 4850, 4072, 3868, 3827, 5212,
        1575, 4356, 3453,  842, 3895,  974, 4770,  367, 4099,  436, 3767, 3621,
        1302, 4719, 5440, 2034, 2362, 4570,  949,  449,  771, 4744, 5397, 3327,
        4792, 4253, 5048, 1417,  595, 6005,  958,  100, 5722, 3378, 5473,  575,
        3047,  426,   29, 1050])
2025-05-27 04:46:36.204821 test begin: paddle.topk(Tensor([2, 141, 12096],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([2, 141, 12096],"float32"), 13, axis=-1, largest=True, )
2025-05-27 04:46:36.341815 test begin: paddle.topk(Tensor([2, 145, 7581],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([2, 145, 7581],"float32"), 13, axis=-1, largest=True, )
2025-05-27 04:46:36.462644 test begin: paddle.topk(Tensor([2, 146, 8400],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([2, 146, 8400],"float32"), 13, axis=-1, largest=True, )
2025-05-27 04:46:36.585187 test begin: paddle.topk(Tensor([2, 149, 11109],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([2, 149, 11109],"float32"), 13, axis=-1, largest=True, )
2025-05-27 04:46:36.720449 test begin: paddle.topk(Tensor([2, 155, 7581],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.topk(Tensor([2, 155, 7581],"float32"), 13, axis=-1, largest=True, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 4 / 4030 (0.1%)
Greatest absolute difference: 6119 at index (0, 51, 11) (up to 0.01 allowed)
Greatest relative difference: 26.604347229003906 at index (0, 51, 12) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2, 155, 13]), dtype=torch.int64)
First 100 elements: tensor([ 296, 1746, 4538,  353, 2887, 5294, 4456, 5287, 1054,  408,  414, 1452,
        3178, 1693, 1622, 3386,  504, 6957, 5508,  391, 2452,  469, 3746,  810,
        7502, 2586, 7016, 4953, 5586, 6415, 2128, 4564, 2425, 3317, 6125, 4126,
        2045, 7330, 1770,  863, 3570, 1926,  927, 6676, 3053,  461, 3388, 3106,
        4337,  102, 3116, 3376, 4725, 6944, 2122, 7392,  702, 6004, 4000,  566,
        3132, 5767, 7126, 3648,  219, 6454, 2989,  836, 3762, 6934, 6675,   11,
        7313,  333, 1234, 5464, 6104, 2336, 4832, 7278, 5048, 4507, 2622,  251,
        4877, 5025, 4629, 3573, 2824, 3477, 6864, 4190, 4591, 6530, 2363, 1730,
        6291, 6330,   26,  411])
DESIRED: (shape=torch.Size([2, 155, 13]), dtype=torch.int64)
First 100 elements: tensor([ 296, 1746, 4538,  353, 2887, 5294, 4456, 5287, 1054,  408,  414, 1452,
        3178, 1693, 1622, 3386,  504, 6957, 5508,  391, 2452,  469, 3746,  810,
        7502, 2586, 7016, 4953, 5586, 6415, 2128, 4564, 2425, 3317, 6125, 4126,
        2045, 7330, 1770,  863, 3570, 1926,  927, 6676, 3053,  461, 3388, 3106,
        4337,  102, 3116, 3376, 4725, 6944, 2122, 7392,  702, 6004, 4000,  566,
        3132, 5767, 7126, 3648,  219, 6454, 2989,  836, 3762, 6934, 6675,   11,
        7313,  333, 1234, 5464, 6104, 2336, 4832, 7278, 5048, 4507, 2622,  251,
        4877, 5025, 4629, 3573, 2824, 3477, 6864, 4190, 4591, 6530, 2363, 1730,
        6291, 6330,   26,  411])
2025-05-27 04:46:36.847572 test begin: paddle.topk(Tensor([2, 156, 12096],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([2, 156, 12096],"float32"), 13, axis=-1, largest=True, )
2025-05-27 04:46:36.995847 test begin: paddle.topk(Tensor([2, 157, 5376],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([2, 157, 5376],"float32"), 13, axis=-1, largest=True, )
2025-05-27 04:46:37.111496 test begin: paddle.topk(Tensor([2, 158, 11109],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.topk(Tensor([2, 158, 11109],"float32"), 13, axis=-1, largest=True, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 4 / 4108 (0.1%)
Greatest absolute difference: 9753 at index (0, 87, 7) (up to 0.01 allowed)
Greatest relative difference: 21.966217041015625 at index (0, 87, 8) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2, 158, 13]), dtype=torch.int64)
First 100 elements: tensor([ 8261,    19,  8916,  4307,  1193,  5946,   906,  3910,  5996,  8837,
          123,  5632,  8450,  6495,  7908,  7270,  5418,  8459,  6413,  3719,
         7765, 10544,  1871,  9637,  7468,  4718,  4490,  1303,   410,  4396,
         4407,  7126,  5657,  9011,  1760,   151,  7164,  6520,  1603,  7707,
         6587,  9409,   341,  1402, 10336,  7162, 10447,  5128,  7886,  4503,
          669,  4672,  9511,    85,  2995,  3163,  4048,  5123, 10625,  5728,
         8401,  7622,  6711,  7458,  2311,  2662,  3064, 10436,  5842,  6707,
         9311,  6410, 10069,  7350,  4349,  3992,  1398,  5601,  9201,  3680,
         4554, 11046,  1408,  8573,  7625,  1219,  8514, 10080, 10731,  8894,
         1010,  3296,  3022,  4117,  8524,  2000,  6562,  5865,  9982,  6935])
DESIRED: (shape=torch.Size([2, 158, 13]), dtype=torch.int64)
First 100 elements: tensor([ 8261,    19,  8916,  4307,  1193,  5946,   906,  3910,  5996,  8837,
          123,  5632,  8450,  6495,  7908,  7270,  5418,  8459,  6413,  3719,
         7765, 10544,  1871,  9637,  7468,  4718,  4490,  1303,   410,  4396,
         4407,  7126,  5657,  9011,  1760,   151,  7164,  6520,  1603,  7707,
         6587,  9409,   341,  1402, 10336,  7162, 10447,  5128,  7886,  4503,
          669,  4672,  9511,    85,  2995,  3163,  4048,  5123, 10625,  5728,
         8401,  7622,  6711,  7458,  2311,  2662,  3064, 10436,  5842,  6707,
         9311,  6410, 10069,  7350,  4349,  3992,  1398,  5601,  9201,  3680,
         4554, 11046,  1408,  8573,  7625,  1219,  8514, 10080, 10731,  8894,
         1010,  3296,  3022,  4117,  8524,  2000,  6562,  5865,  9982,  6935])
2025-05-27 04:46:37.247607 test begin: paddle.topk(Tensor([2, 169, 12096],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([2, 169, 12096],"float32"), 13, axis=-1, largest=True, )
2025-05-27 04:46:37.387583 test begin: paddle.topk(Tensor([2, 176, 5376],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([2, 176, 5376],"float32"), 13, axis=-1, largest=True, )
2025-05-27 04:46:37.501754 test begin: paddle.topk(Tensor([2, 194, 6804],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([2, 194, 6804],"float32"), 13, axis=-1, largest=True, )
2025-05-27 04:46:37.624272 test begin: paddle.topk(Tensor([2, 196, 5376],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([2, 196, 5376],"float32"), 13, axis=-1, largest=True, )
2025-05-27 04:46:37.743565 test begin: paddle.topk(Tensor([2, 227, 5376],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([2, 227, 5376],"float32"), 13, axis=-1, largest=True, )
2025-05-27 04:46:37.867011 test begin: paddle.topk(Tensor([2, 240, 9261],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([2, 240, 9261],"float32"), 13, axis=-1, largest=True, )
2025-05-27 04:46:38.026480 test begin: paddle.topk(Tensor([2, 249, 12096],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.topk(Tensor([2, 249, 12096],"float32"), 13, axis=-1, largest=True, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 2 / 6474 (0.0%)
Greatest absolute difference: 4958 at index (1, 207, 10) (up to 0.01 allowed)
Greatest relative difference: 1.7525627613067627 at index (1, 207, 11) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2, 249, 13]), dtype=torch.int64)
First 100 elements: tensor([11797,  2662, 10523,  1894,  1395,   236,  3818,  9934, 10921,  4571,
        10336,  3616,  3344,  1274,   953,  2462,  4040, 11794,  2703, 10660,
          169,  6844,  6479, 11621, 11599,  9246,  2537,  1396,  4305,  8889,
         1607,  1708,  2802,  2280,   852,  8706,  8906,  3456,  4339, 11960,
         5111,  3208,  5080,  1087, 11401,  4773,  6811,  5445,  3272,  1962,
         3644,  1759,  4297,  5493,  2165,  2988,   248,  7734, 11598,   782,
         1192,  5527, 11144,  3916,  3038,  3119, 11662,  5396, 10065,  6077,
         3604, 10351,  5636,  7888,  6510,  9572,  5905, 11163,   339,  7818,
         8957,  8778,  9748, 11817,  8355,  2724,  3657,  2806,  7072,  5594,
         3380, 11596,  1466,  6604,  6588,  7794,   779,  6589,  8124, 10305])
DESIRED: (shape=torch.Size([2, 249, 13]), dtype=torch.int64)
First 100 elements: tensor([11797,  2662, 10523,  1894,  1395,   236,  3818,  9934, 10921,  4571,
        10336,  3616,  3344,  1274,   953,  2462,  4040, 11794,  2703, 10660,
          169,  6844,  6479, 11621, 11599,  9246,  2537,  1396,  4305,  8889,
         1607,  1708,  2802,  2280,   852,  8706,  8906,  3456,  4339, 11960,
         5111,  3208,  5080,  1087, 11401,  4773,  6811,  5445,  3272,  1962,
         3644,  1759,  4297,  5493,  2165,  2988,   248,  7734, 11598,   782,
         1192,  5527, 11144,  3916,  3038,  3119, 11662,  5396, 10065,  6077,
         3604, 10351,  5636,  7888,  6510,  9572,  5905, 11163,   339,  7818,
         8957,  8778,  9748, 11817,  8355,  2724,  3657,  2806,  7072,  5594,
         3380, 11596,  1466,  6604,  6588,  7794,   779,  6589,  8124, 10305])
2025-05-27 04:46:38.211742 test begin: paddle.topk(Tensor([2, 249, 7581],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([2, 249, 7581],"float32"), 13, axis=-1, largest=True, )
2025-05-27 04:46:38.345962 test begin: paddle.topk(Tensor([2, 25, 8400],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([2, 25, 8400],"float32"), 13, axis=-1, largest=True, )
2025-05-27 04:46:38.440201 test begin: paddle.topk(Tensor([2, 28, 12096],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([2, 28, 12096],"float32"), 13, axis=-1, largest=True, )
2025-05-27 04:46:38.538457 test begin: paddle.topk(Tensor([2, 283, 4725],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([2, 283, 4725],"float32"), 13, axis=-1, largest=True, )
2025-05-27 04:46:38.663863 test begin: paddle.topk(Tensor([2, 284, 8400],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.topk(Tensor([2, 284, 8400],"float32"), 13, axis=-1, largest=True, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 2 / 7384 (0.0%)
Greatest absolute difference: 3532 at index (1, 211, 7) (up to 0.01 allowed)
Greatest relative difference: 0.9671412706375122 at index (1, 211, 8) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2, 284, 13]), dtype=torch.int64)
First 100 elements: tensor([6658, 4176, 3807,  652, 4784, 7727, 2031, 4964, 8382, 7841,  224, 5629,
        1001, 8025, 5032, 2921, 5759, 4613, 6087, 4591, 5404, 6958, 2083, 3794,
        1517, 2581,  633, 1028, 5672, 5643, 8193,  791, 1212, 1281, 1102, 3845,
        7162, 5217, 1195, 7796, 5723, 5813, 1398, 5039, 3316, 7298, 1715, 1206,
          88, 7153, 2261, 4245, 1542, 2537,   80, 4300,  967, 1952, 2222, 3176,
        2954, 7734, 2198, 1502, 1146, 7600,  922, 7327, 3880, 7896, 2360, 2078,
        7229, 2275, 6976, 7721,  285,  685, 1736, 6970, 6598, 7729, 1735, 4561,
        2925, 6204, 1130, 3816, 7549, 2476, 5874, 3501, 5437, 2415, 6422, 7594,
         953, 7925, 4823, 3872])
DESIRED: (shape=torch.Size([2, 284, 13]), dtype=torch.int64)
First 100 elements: tensor([6658, 4176, 3807,  652, 4784, 7727, 2031, 4964, 8382, 7841,  224, 5629,
        1001, 8025, 5032, 2921, 5759, 4613, 6087, 4591, 5404, 6958, 2083, 3794,
        1517, 2581,  633, 1028, 5672, 5643, 8193,  791, 1212, 1281, 1102, 3845,
        7162, 5217, 1195, 7796, 5723, 5813, 1398, 5039, 3316, 7298, 1715, 1206,
          88, 7153, 2261, 4245, 1542, 2537,   80, 4300,  967, 1952, 2222, 3176,
        2954, 7734, 2198, 1502, 1146, 7600,  922, 7327, 3880, 7896, 2360, 2078,
        7229, 2275, 6976, 7721,  285,  685, 1736, 6970, 6598, 7729, 1735, 4561,
        2925, 6204, 1130, 3816, 7549, 2476, 5874, 3501, 5437, 2415, 6422, 7594,
         953, 7925, 4823, 3872])
2025-05-27 04:46:38.833529 test begin: paddle.topk(Tensor([2, 293, 10164],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.topk(Tensor([2, 293, 10164],"float32"), 13, axis=-1, largest=True, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 2 / 7618 (0.0%)
Greatest absolute difference: 3155 at index (0, 76, 11) (up to 0.01 allowed)
Greatest relative difference: 126.19999694824219 at index (0, 76, 12) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2, 293, 13]), dtype=torch.int64)
First 100 elements: tensor([ 7694,  8828,  4490, 10123,  6697,  7550,  3222,   205,   239,  7474,
         4567,  3315,   592,  5646,  9590,  8450,  9406,  1868,  7349,   585,
         2543,  9814,  3105,  4135,   902,  1049,  7555,  2759,  8931,  1650,
         7578,   822,   142,  9836,   390,  8735,  1105,   811,  2160,  1399,
         7804,  6719,   620,   598,  8731,  8369,  9370,  1988,  5702,  3989,
         9949,  5082,   354,  8066,  1967,  2827,  8822,  8321,  4087,  5479,
         1391,  6385,  3639,  2271,  3878,  9664,  6388,  2619,  7576,  4268,
         6656,  3437,  1041,  5170,  3432,  2864,  6922,  2496,  7106,  2402,
         5864,  8729,  5992,  2524,  5132,   103,  9735,  6037,   228, 10125,
         8497,  3853,   632,  3265,  4667,  7437,  4521,   466,  8904,  8868])
DESIRED: (shape=torch.Size([2, 293, 13]), dtype=torch.int64)
First 100 elements: tensor([ 7694,  8828,  4490, 10123,  6697,  7550,  3222,   205,   239,  7474,
         4567,  3315,   592,  5646,  9590,  8450,  9406,  1868,  7349,   585,
         2543,  9814,  3105,  4135,   902,  1049,  7555,  2759,  8931,  1650,
         7578,   822,   142,  9836,   390,  8735,  1105,   811,  2160,  1399,
         7804,  6719,   620,   598,  8731,  8369,  9370,  1988,  5702,  3989,
         9949,  5082,   354,  8066,  1967,  2827,  8822,  8321,  4087,  5479,
         1391,  6385,  3639,  2271,  3878,  9664,  6388,  2619,  7576,  4268,
         6656,  3437,  1041,  5170,  3432,  2864,  6922,  2496,  7106,  2402,
         5864,  8729,  5992,  2524,  5132,   103,  9735,  6037,   228, 10125,
         8497,  3853,   632,  3265,  4667,  7437,  4521,   466,  8904,  8868])
2025-05-27 04:46:39.019213 test begin: paddle.topk(Tensor([2, 296, 9261],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.topk(Tensor([2, 296, 9261],"float32"), 13, axis=-1, largest=True, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 4 / 7696 (0.1%)
Greatest absolute difference: 1023 at index (0, 287, 9) (up to 0.01 allowed)
Greatest relative difference: 0.23250000178813934 at index (0, 287, 10) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2, 296, 13]), dtype=torch.int64)
First 100 elements: tensor([5148, 1495, 4631,  776, 6860, 6304, 2466, 7965, 6825, 6743, 2154, 3109,
        4642, 7265, 6987, 7662, 5907, 8293, 1185, 1057, 4098, 9200, 8383, 1707,
        1733, 4274, 1460,  419, 7565, 6303, 1418, 6750, 5647, 6413, 5345,  761,
        6146, 4840, 6159, 3346, 3794, 1652, 4604, 8401, 7892, 4312, 4574, 1006,
        5781, 9156, 9026, 8471, 8303, 2110, 2369, 2403, 4809,   29, 6897, 3275,
        1128,  750, 2667, 5623, 1950, 7149, 7879, 1657, 3987, 7585,  467, 6092,
        6482, 8326, 2637, 6690, 7828,  498, 4686, 2557, 3065, 2464, 7207, 4809,
         525, 4605, 6846, 1331, 5312,   50, 3788, 3614, 4505, 6697, 4220,  459,
        8424, 5823, 7458, 4634])
DESIRED: (shape=torch.Size([2, 296, 13]), dtype=torch.int64)
First 100 elements: tensor([5148, 1495, 4631,  776, 6860, 6304, 2466, 7965, 6825, 6743, 2154, 3109,
        4642, 7265, 6987, 7662, 5907, 8293, 1185, 1057, 4098, 9200, 8383, 1707,
        1733, 4274, 1460,  419, 7565, 6303, 1418, 6750, 5647, 6413, 5345,  761,
        6146, 4840, 6159, 3346, 3794, 1652, 4604, 8401, 7892, 4312, 4574, 1006,
        5781, 9156, 9026, 8471, 8303, 2110, 2369, 2403, 4809,   29, 6897, 3275,
        1128,  750, 2667, 5623, 1950, 7149, 7879, 1657, 3987, 7585,  467, 6092,
        6482, 8326, 2637, 6690, 7828,  498, 4686, 2557, 3065, 2464, 7207, 4809,
         525, 4605, 6846, 1331, 5312,   50, 3788, 3614, 4505, 6697, 4220,  459,
        8424, 5823, 7458, 4634])
2025-05-27 04:46:39.197702 test begin: paddle.topk(Tensor([2, 30, 3549],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([2, 30, 3549],"float32"), 13, axis=-1, largest=True, )
2025-05-27 04:46:39.292327 test begin: paddle.topk(Tensor([2, 31, 9261],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([2, 31, 9261],"float32"), 13, axis=-1, largest=True, )
2025-05-27 04:46:39.388793 test begin: paddle.topk(Tensor([2, 319, 2541],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([2, 319, 2541],"float32"), 13, axis=-1, largest=True, )
2025-05-27 04:46:39.500439 test begin: paddle.topk(Tensor([2, 32, 4116],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([2, 32, 4116],"float32"), 13, axis=-1, largest=True, )
2025-05-27 04:46:39.592369 test begin: paddle.topk(Tensor([2, 324, 6804],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.topk(Tensor([2, 324, 6804],"float32"), 13, axis=-1, largest=True, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 2 / 8424 (0.0%)
Greatest absolute difference: 4461 at index (0, 126, 5) (up to 0.01 allowed)
Greatest relative difference: 3.647588014602661 at index (0, 126, 6) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2, 324, 13]), dtype=torch.int64)
First 100 elements: tensor([1878, 3216, 5200, 4870,  879, 4417, 2151, 4993, 2832, 2990, 1339, 4713,
        3492, 4959, 6145, 3994, 6251, 1348, 4569, 2211, 4139, 5907, 4637, 6060,
        6611, 2440,   74, 3597, 2997, 4715,  667, 4584, 6634, 6548, 3638, 2964,
        6259, 3796, 6460, 5763, 2853, 2610, 2980, 3599, 6721, 5295, 4894, 2705,
        3509, 3495, 2116, 4266,  637, 6062, 1119, 6548, 3069, 3145, 4153, 3056,
        5758,  913, 4485, 3878, 4498, 3842,  874, 1283,  621, 3720,  198, 2948,
        6388, 1631, 4848, 2887, 1545, 4263, 5942,  579, 5194,  577, 1132, 4576,
        6002, 5700, 1809, 3313, 1995, 6707, 5463, 4709, 2271,  840, 3952, 1323,
        2975, 3862, 3961, 4703])
DESIRED: (shape=torch.Size([2, 324, 13]), dtype=torch.int64)
First 100 elements: tensor([1878, 3216, 5200, 4870,  879, 4417, 2151, 4993, 2832, 2990, 1339, 4713,
        3492, 4959, 6145, 3994, 6251, 1348, 4569, 2211, 4139, 5907, 4637, 6060,
        6611, 2440,   74, 3597, 2997, 4715,  667, 4584, 6634, 6548, 3638, 2964,
        6259, 3796, 6460, 5763, 2853, 2610, 2980, 3599, 6721, 5295, 4894, 2705,
        3509, 3495, 2116, 4266,  637, 6062, 1119, 6548, 3069, 3145, 4153, 3056,
        5758,  913, 4485, 3878, 4498, 3842,  874, 1283,  621, 3720,  198, 2948,
        6388, 1631, 4848, 2887, 1545, 4263, 5942,  579, 5194,  577, 1132, 4576,
        6002, 5700, 1809, 3313, 1995, 6707, 5463, 4709, 2271,  840, 3952, 1323,
        2975, 3862, 3961, 4703])
2025-05-27 04:46:39.754181 test begin: paddle.topk(Tensor([2, 329, 3549],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.topk(Tensor([2, 329, 3549],"float32"), 13, axis=-1, largest=True, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 2 / 8554 (0.0%)
Greatest absolute difference: 1464 at index (0, 298, 3) (up to 0.01 allowed)
Greatest relative difference: 2.711111068725586 at index (0, 298, 4) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2, 329, 13]), dtype=torch.int64)
First 100 elements: tensor([ 886, 3418, 2387, 1196, 1393, 1582, 3435, 1455,  102, 1612, 3363, 2816,
           2, 2927, 2022, 2449, 2646, 3358, 1141, 3209, 1625, 2096,  178, 2373,
        2067, 2518,  341, 3539,  162, 1479,  613, 1471, 1675,   15,  182, 1321,
        2983, 2996, 2575,  976, 1045, 2286, 1671, 1493, 2780, 1190, 2186, 1922,
        3546, 2077, 2425, 1265, 2506, 2196, 1985, 1148,  637, 2635, 2675, 1270,
         886, 1251, 3269, 1884, 1153, 1296, 2799, 2975, 2087, 1132, 2629, 3361,
        2457, 1793, 2371, 2510, 2162, 2205, 1161, 1859, 1126,  507, 1114,  673,
         991, 2930,  926, 1902,  555, 1451, 3436,  542, 1506, 1748, 2917,  298,
        2151, 1233,  734, 1562])
DESIRED: (shape=torch.Size([2, 329, 13]), dtype=torch.int64)
First 100 elements: tensor([ 886, 3418, 2387, 1196, 1393, 1582, 3435, 1455,  102, 1612, 3363, 2816,
           2, 2927, 2022, 2449, 2646, 3358, 1141, 3209, 1625, 2096,  178, 2373,
        2067, 2518,  341, 3539,  162, 1479,  613, 1471, 1675,   15,  182, 1321,
        2983, 2996, 2575,  976, 1045, 2286, 1671, 1493, 2780, 1190, 2186, 1922,
        3546, 2077, 2425, 1265, 2506, 2196, 1985, 1148,  637, 2635, 2675, 1270,
         886, 1251, 3269, 1884, 1153, 1296, 2799, 2975, 2087, 1132, 2629, 3361,
        2457, 1793, 2371, 2510, 2162, 2205, 1161, 1859, 1126,  507, 1114,  673,
         991, 2930,  926, 1902,  555, 1451, 3436,  542, 1506, 1748, 2917,  298,
        2151, 1233,  734, 1562])
2025-05-27 04:46:39.876354 test begin: paddle.topk(Tensor([2, 329, 4725],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([2, 329, 4725],"float32"), 13, axis=-1, largest=True, )
2025-05-27 04:46:40.004269 test begin: paddle.topk(Tensor([2, 333, 8400],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.topk(Tensor([2, 333, 8400],"float32"), 13, axis=-1, largest=True, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 2 / 8658 (0.0%)
Greatest absolute difference: 4170 at index (1, 92, 0) (up to 0.01 allowed)
Greatest relative difference: 3.0195510387420654 at index (1, 92, 1) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2, 333, 13]), dtype=torch.int64)
First 100 elements: tensor([3889, 5033, 6833, 5476, 1586, 3670, 6022, 7100, 5435, 3914, 4629, 1798,
        4825, 2048, 4713, 1282, 1060,  915, 8364, 2861, 5253, 2414, 8305, 8157,
        4664, 5131, 5303, 6129, 7103, 7126,   97, 8397, 6528,  996, 4485, 6148,
        4710, 6614, 3721, 7226, 4036, 1637, 2039, 6959,  774, 3089,  989, 3519,
        5900, 1475,  533, 2469, 1351, 6760, 5497, 8388, 4765, 5228, 6174, 7837,
        7884, 4584, 4022,  722, 1433, 2665,  421, 1607, 3605, 7880, 3596,  287,
        1584, 8151, 6873, 5603, 4439,  166, 7008, 1540, 8326, 4893, 5122, 7753,
        4323, 7021, 4949, 5171, 2408, 4280, 8355, 5179,  469, 4325, 6574, 7280,
        6740, 2035, 7158, 1038])
DESIRED: (shape=torch.Size([2, 333, 13]), dtype=torch.int64)
First 100 elements: tensor([3889, 5033, 6833, 5476, 1586, 3670, 6022, 7100, 5435, 3914, 4629, 1798,
        4825, 2048, 4713, 1282, 1060,  915, 8364, 2861, 5253, 2414, 8305, 8157,
        4664, 5131, 5303, 6129, 7103, 7126,   97, 8397, 6528,  996, 4485, 6148,
        4710, 6614, 3721, 7226, 4036, 1637, 2039, 6959,  774, 3089,  989, 3519,
        5900, 1475,  533, 2469, 1351, 6760, 5497, 8388, 4765, 5228, 6174, 7837,
        7884, 4584, 4022,  722, 1433, 2665,  421, 1607, 3605, 7880, 3596,  287,
        1584, 8151, 6873, 5603, 4439,  166, 7008, 1540, 8326, 4893, 5122, 7753,
        4323, 7021, 4949, 5171, 2408, 4280, 8355, 5179,  469, 4325, 6574, 7280,
        6740, 2035, 7158, 1038])
2025-05-27 04:46:40.184846 test begin: paddle.topk(Tensor([2, 34, 11109],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([2, 34, 11109],"float32"), 13, axis=-1, largest=True, )
2025-05-27 04:46:40.287179 test begin: paddle.topk(Tensor([2, 36, 6804],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([2, 36, 6804],"float32"), 13, axis=-1, largest=True, )
2025-05-27 04:46:40.382272 test begin: paddle.topk(Tensor([2, 36, 9261],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([2, 36, 9261],"float32"), 13, axis=-1, largest=True, )
2025-05-27 04:46:40.486335 test begin: paddle.topk(Tensor([2, 37, 10164],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([2, 37, 10164],"float32"), 13, axis=-1, largest=True, )
2025-05-27 04:46:40.593062 test begin: paddle.topk(Tensor([2, 37, 8400],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.topk(Tensor([2, 37, 8400],"float32"), 13, axis=-1, largest=True, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 2 / 962 (0.2%)
Greatest absolute difference: 536 at index (0, 16, 8) (up to 0.01 allowed)
Greatest relative difference: 0.21868625283241272 at index (0, 16, 9) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2, 37, 13]), dtype=torch.int64)
First 100 elements: tensor([7515, 1865, 3623, 5706, 4239, 6761,   62, 2489,  698, 4431,  678, 3664,
          53, 3284, 7002, 1608,  789, 4466, 6667, 6908, 1219, 5006, 3487, 4655,
        2783,  794,  639, 8374, 4204,  686, 5121, 2418,  503, 6547, 1415, 2917,
        3262,  338, 1684,  121,  519, 7084, 4079,  328, 4678,  849, 2667, 5630,
        6288, 8059,  287, 8359, 4891, 1310,  577, 5756, 5515, 2870, 2491,  908,
        4229, 8049, 5474,  737, 7341, 7168, 4118, 5609, 1118, 7026, 7385, 6851,
         402, 4870, 4884, 4198, 6539, 6885, 4747, 5803, 3912, 8035, 2981,  469,
        7622, 7867, 3164, 4380, 2889, 7330, 8386, 1241, 6945,  766, 4101, 2649,
        6242, 2234, 1198, 3264])
DESIRED: (shape=torch.Size([2, 37, 13]), dtype=torch.int64)
First 100 elements: tensor([7515, 1865, 3623, 5706, 4239, 6761,   62, 2489,  698, 4431,  678, 3664,
          53, 3284, 7002, 1608,  789, 4466, 6667, 6908, 1219, 5006, 3487, 4655,
        2783,  794,  639, 8374, 4204,  686, 5121, 2418,  503, 6547, 1415, 2917,
        3262,  338, 1684,  121,  519, 7084, 4079,  328, 4678,  849, 2667, 5630,
        6288, 8059,  287, 8359, 4891, 1310,  577, 5756, 5515, 2870, 2491,  908,
        4229, 8049, 5474,  737, 7341, 7168, 4118, 5609, 1118, 7026, 7385, 6851,
         402, 4870, 4884, 4198, 6539, 6885, 4747, 5803, 3912, 8035, 2981,  469,
        7622, 7867, 3164, 4380, 2889, 7330, 8386, 1241, 6945,  766, 4101, 2649,
        6242, 2234, 1198, 3264])
2025-05-27 04:46:40.695817 test begin: paddle.topk(Tensor([2, 4, 6069],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([2, 4, 6069],"float32"), 13, axis=-1, largest=True, )
2025-05-27 04:46:40.785118 test begin: paddle.topk(Tensor([2, 40, 10164],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([2, 40, 10164],"float32"), 13, axis=-1, largest=True, )
2025-05-27 04:46:40.888586 test begin: paddle.topk(Tensor([2, 41, 10164],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([2, 41, 10164],"float32"), 13, axis=-1, largest=True, )
2025-05-27 04:46:40.992980 test begin: paddle.topk(Tensor([2, 41, 9261],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([2, 41, 9261],"float32"), 13, axis=-1, largest=True, )
2025-05-27 04:46:41.105692 test begin: paddle.topk(Tensor([2, 42, 11109],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.topk(Tensor([2, 42, 11109],"float32"), 13, axis=-1, largest=True, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 2 / 1092 (0.2%)
Greatest absolute difference: 2350 at index (1, 31, 11) (up to 0.01 allowed)
Greatest relative difference: 0.6670451164245605 at index (1, 31, 12) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2, 42, 13]), dtype=torch.int64)
First 100 elements: tensor([ 2504,  1854,  4277,  1521,   727,     6,  3538,  1396,  7272,  2394,
         2282,  3717,  6820,  8650,  7781,  6878,   478,   139,  5084,  9469,
         7344,  1238,  2708,   492,  1600,  1353,  3351,  9627, 10239, 10392,
         6125,  3082,  9397,  7616,  6453,  5671,  6718,  6327,  7443,  1635,
         9072,  2766,  1455,   782, 10176,  1382,   907, 10786,   137,  4793,
         6446,  4013,  4508,   361,  2196,  6824,  9006,  4527, 10413,  3971,
         5019,  4018, 10368,  9068,  5900,  4197,  4485,  7832,  9301,  4207,
         4343,  9912,  6374,  8229,  6314,  6167,  1778,  7355,  2478,  9827,
         8719,  6477,  6081,  1794,  1975,  9900,  3479,  6621,  3504,  5769,
         3156,  2222,   269,  5484,  2949,  1199,  6513, 10748,  4803,  6045])
DESIRED: (shape=torch.Size([2, 42, 13]), dtype=torch.int64)
First 100 elements: tensor([ 2504,  1854,  4277,  1521,   727,     6,  3538,  1396,  7272,  2394,
         2282,  3717,  6820,  8650,  7781,  6878,   478,   139,  5084,  9469,
         7344,  1238,  2708,   492,  1600,  1353,  3351,  9627, 10239, 10392,
         6125,  3082,  9397,  7616,  6453,  5671,  6718,  6327,  7443,  1635,
         9072,  2766,  1455,   782, 10176,  1382,   907, 10786,   137,  4793,
         6446,  4013,  4508,   361,  2196,  6824,  9006,  4527, 10413,  3971,
         5019,  4018, 10368,  9068,  5900,  4197,  4485,  7832,  9301,  4207,
         4343,  9912,  6374,  8229,  6314,  6167,  1778,  7355,  2478,  9827,
         8719,  6477,  6081,  1794,  1975,  9900,  3479,  6621,  3504,  5769,
         3156,  2222,   269,  5484,  2949,  1199,  6513, 10748,  4803,  6045])
2025-05-27 04:46:41.212500 test begin: paddle.topk(Tensor([2, 42, 5376],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([2, 42, 5376],"float32"), 13, axis=-1, largest=True, )
2025-05-27 04:46:41.310037 test begin: paddle.topk(Tensor([2, 44, 11109],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([2, 44, 11109],"float32"), 13, axis=-1, largest=True, )
2025-05-27 04:46:41.414920 test begin: paddle.topk(Tensor([2, 461, 2541],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([2, 461, 2541],"float32"), 13, axis=-1, largest=True, )
2025-05-27 04:46:41.539116 test begin: paddle.topk(Tensor([2, 461, 3549],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([2, 461, 3549],"float32"), 13, axis=-1, largest=True, )
2025-05-27 04:46:41.673308 test begin: paddle.topk(Tensor([2, 47, 4116],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([2, 47, 4116],"float32"), 13, axis=-1, largest=True, )
2025-05-27 04:46:41.773990 test begin: paddle.topk(Tensor([2, 52, 11109],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([2, 52, 11109],"float32"), 13, axis=-1, largest=True, )
2025-05-27 04:46:41.886236 test begin: paddle.topk(Tensor([2, 52, 4725],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([2, 52, 4725],"float32"), 13, axis=-1, largest=True, )
2025-05-27 04:46:41.985987 test begin: paddle.topk(Tensor([2, 52, 9261],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([2, 52, 9261],"float32"), 13, axis=-1, largest=True, )
2025-05-27 04:46:42.100941 test begin: paddle.topk(Tensor([2, 56, 11109],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([2, 56, 11109],"float32"), 13, axis=-1, largest=True, )
2025-05-27 04:46:42.217312 test begin: paddle.topk(Tensor([2, 57, 11109],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([2, 57, 11109],"float32"), 13, axis=-1, largest=True, )
2025-05-27 04:46:42.328184 test begin: paddle.topk(Tensor([2, 58, 4116],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([2, 58, 4116],"float32"), 13, axis=-1, largest=True, )
2025-05-27 04:46:42.424443 test begin: paddle.topk(Tensor([2, 59, 5376],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([2, 59, 5376],"float32"), 13, axis=-1, largest=True, )
2025-05-27 04:46:42.527263 test begin: paddle.topk(Tensor([2, 63, 5376],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([2, 63, 5376],"float32"), 13, axis=-1, largest=True, )
2025-05-27 04:46:42.634684 test begin: paddle.topk(Tensor([2, 66, 3549],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([2, 66, 3549],"float32"), 13, axis=-1, largest=True, )
2025-05-27 04:46:42.743434 test begin: paddle.topk(Tensor([2, 68, 11109],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([2, 68, 11109],"float32"), 13, axis=-1, largest=True, )
2025-05-27 04:46:42.868343 test begin: paddle.topk(Tensor([2, 68, 4116],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([2, 68, 4116],"float32"), 13, axis=-1, largest=True, )
2025-05-27 04:46:42.973845 test begin: paddle.topk(Tensor([2, 69, 4116],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([2, 69, 4116],"float32"), 13, axis=-1, largest=True, )
2025-05-27 04:46:43.075203 test begin: paddle.topk(Tensor([2, 71, 10164],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.topk(Tensor([2, 71, 10164],"float32"), 13, axis=-1, largest=True, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 4 / 1846 (0.2%)
Greatest absolute difference: 2730 at index (1, 59, 6) (up to 0.01 allowed)
Greatest relative difference: 1.5285553932189941 at index (1, 59, 7) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2, 71, 13]), dtype=torch.int64)
First 100 elements: tensor([10106,  5176,  3301,  2994,  7141,  3131,  8371,  5509,  1437,  5409,
         4734,    41,  8420,  4605,   627,  2508,  8974,  8310,  2137,  1385,
         9172,  5330,  2408,  4951,  5396,  6220,  5498,  3366,  5324,  1100,
         9035,  7949,  2531,  2044,  5186,  9241,  4371,  7223,  3529,  8088,
         2156,  4216,  7604,  6337,  2440,  2208,  9397,  6525,  2711,  6291,
         8314,  4391,  9909,  6265,  6643,  9768,  8711,  7673,  8742,  1065,
         6174,   399, 10077,  5410,  3850,  7187,  8750,  8853,  5012,   822,
         5178,  3912,  4473,   668,  7832,  9131,  7794,  1622,  2618,  5823,
          828,  9659,  3163,  1294,  7388,  8130,  2472,  8707,  4400,   409,
         5288,  2171,  7698,  5164,  4558,  9545,  4403,  7222,  8178,  2924])
DESIRED: (shape=torch.Size([2, 71, 13]), dtype=torch.int64)
First 100 elements: tensor([10106,  5176,  3301,  2994,  7141,  3131,  8371,  5509,  1437,  5409,
         4734,    41,  8420,  4605,   627,  2508,  8974,  8310,  2137,  1385,
         9172,  5330,  2408,  4951,  5396,  6220,  5498,  3366,  5324,  1100,
         9035,  7949,  2531,  2044,  5186,  9241,  4371,  7223,  3529,  8088,
         2156,  4216,  7604,  6337,  2440,  2208,  9397,  6525,  2711,  6291,
         8314,  4391,  9909,  6265,  6643,  9768,  8711,  7673,  8742,  1065,
         6174,   399, 10077,  5410,  3850,  7187,  8750,  8853,  5012,   822,
         5178,  3912,  4473,   668,  7832,  9131,  7794,  1622,  2618,  5823,
          828,  9659,  3163,  1294,  7388,  8130,  2472,  8707,  4400,   409,
         5288,  2171,  7698,  5164,  4558,  9545,  4403,  7222,  8178,  2924])
2025-05-27 04:46:43.196713 test begin: paddle.topk(Tensor([2, 71, 11109],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([2, 71, 11109],"float32"), 13, axis=-1, largest=True, )
2025-05-27 04:46:43.310398 test begin: paddle.topk(Tensor([2, 73, 7581],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([2, 73, 7581],"float32"), 13, axis=-1, largest=True, )
2025-05-27 04:46:43.417805 test begin: paddle.topk(Tensor([2, 76, 10164],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([2, 76, 10164],"float32"), 13, axis=-1, largest=True, )
2025-05-27 04:46:43.531109 test begin: paddle.topk(Tensor([2, 76, 11109],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([2, 76, 11109],"float32"), 13, axis=-1, largest=True, )
2025-05-27 04:46:43.644767 test begin: paddle.topk(Tensor([2, 78, 11109],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([2, 78, 11109],"float32"), 13, axis=-1, largest=True, )
2025-05-27 04:46:43.757208 test begin: paddle.topk(Tensor([2, 78, 9261],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([2, 78, 9261],"float32"), 13, axis=-1, largest=True, )
2025-05-27 04:46:43.868956 test begin: paddle.topk(Tensor([2, 79, 11109],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.topk(Tensor([2, 79, 11109],"float32"), 13, axis=-1, largest=True, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 2 / 2054 (0.1%)
Greatest absolute difference: 8495 at index (0, 46, 11) (up to 0.01 allowed)
Greatest relative difference: 30.89090919494629 at index (0, 46, 12) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2, 79, 13]), dtype=torch.int64)
First 100 elements: tensor([ 5570,  1785, 10463,  2821, 10849,  6716,  4530,  6372,  6959, 10095,
         3754,  3876,  9466,  7703,   781,  6071,  5706,   440,  8843,  6963,
         2703,  5941,  4231,  5208,  6514,   806,  7949,  7434,   823,  4374,
        10744,  4158,  7491,  9696,  5311,  8657,  8101, 10881,  6671,  2636,
         9758,  4876, 10647,  8453,  5897,  4404,  1262,  9117,  6039,  1986,
        11108,  6097,  2137,  5342,   502,  5750,  7491,   975,  9175,  1433,
         8222,   957,  8273,  7610,  2559,   520,  6053,  9859,  7704,  2449,
         1238,  4424,  8920, 10773,  7446,  7243,   273,  7869,  3034,  7686,
         9027, 11090,  9585, 10408,  6291,  8124,  4938,  7470,  5607, 10290,
         4598,  4083,  3213,  5449,  2114, 10114,   262, 10539,  9224,  9734])
DESIRED: (shape=torch.Size([2, 79, 13]), dtype=torch.int64)
First 100 elements: tensor([ 5570,  1785, 10463,  2821, 10849,  6716,  4530,  6372,  6959, 10095,
         3754,  3876,  9466,  7703,   781,  6071,  5706,   440,  8843,  6963,
         2703,  5941,  4231,  5208,  6514,   806,  7949,  7434,   823,  4374,
        10744,  4158,  7491,  9696,  5311,  8657,  8101, 10881,  6671,  2636,
         9758,  4876, 10647,  8453,  5897,  4404,  1262,  9117,  6039,  1986,
        11108,  6097,  2137,  5342,   502,  5750,  7491,   975,  9175,  1433,
         8222,   957,  8273,  7610,  2559,   520,  6053,  9859,  7704,  2449,
         1238,  4424,  8920, 10773,  7446,  7243,   273,  7869,  3034,  7686,
         9027, 11090,  9585, 10408,  6291,  8124,  4938,  7470,  5607, 10290,
         4598,  4083,  3213,  5449,  2114, 10114,   262, 10539,  9224,  9734])
2025-05-27 04:46:43.989372 test begin: paddle.topk(Tensor([2, 79, 4116],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([2, 79, 4116],"float32"), 13, axis=-1, largest=True, )
2025-05-27 04:46:44.089634 test begin: paddle.topk(Tensor([2, 80, 10164],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.topk(Tensor([2, 80, 10164],"float32"), 13, axis=-1, largest=True, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 2 / 2080 (0.1%)
Greatest absolute difference: 153 at index (1, 8, 7) (up to 0.01 allowed)
Greatest relative difference: 0.03670825436711311 at index (1, 8, 8) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2, 80, 13]), dtype=torch.int64)
First 100 elements: tensor([ 2653,  5685,  4663,  4861,  7182,  2300,  7881,    37,  8905,   565,
         3555,  1852,  2777,  2963,  8093,  3321,  9026,  2583,  1240,  1209,
         6728,  5910,  5939,  3767,   490,  7013,  2412,  2645,  6230,  8211,
         3635,  3359,  8942,  3248,  4160,  1011,  9964,  1215,  3510,  2808,
         1436,  6542,  3882,  8812,  3410,  9340,  8414,  9665,  9697,  9589,
         6344,  9156,  7368,  4194,   289,  6139, 10042,  7088,  7423,  6131,
         1742,  4934,  6706,  5944,  8373,  2291,  9365,  2259,  5646,  6074,
        10108,  3390,  2124,  3004,   939,  2201,  3002,  6518,  7006,  2514,
         6587,  5050,  3242,  7800,  2965,  6929,  8632,  9552,  3162,  3494,
         6055,  5557,  5860,  5763,  1280,  2399,  3975,  5524,  3620,  9033])
DESIRED: (shape=torch.Size([2, 80, 13]), dtype=torch.int64)
First 100 elements: tensor([ 2653,  5685,  4663,  4861,  7182,  2300,  7881,    37,  8905,   565,
         3555,  1852,  2777,  2963,  8093,  3321,  9026,  2583,  1240,  1209,
         6728,  5910,  5939,  3767,   490,  7013,  2412,  2645,  6230,  8211,
         3635,  3359,  8942,  3248,  4160,  1011,  9964,  1215,  3510,  2808,
         1436,  6542,  3882,  8812,  3410,  9340,  8414,  9665,  9697,  9589,
         6344,  9156,  7368,  4194,   289,  6139, 10042,  7088,  7423,  6131,
         1742,  4934,  6706,  5944,  8373,  2291,  9365,  2259,  5646,  6074,
        10108,  3390,  2124,  3004,   939,  2201,  3002,  6518,  7006,  2514,
         6587,  5050,  3242,  7800,  2965,  6929,  8632,  9552,  3162,  3494,
         6055,  5557,  5860,  5763,  1280,  2399,  3975,  5524,  3620,  9033])
2025-05-27 04:46:44.204162 test begin: paddle.topk(Tensor([2, 81, 11109],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.topk(Tensor([2, 81, 11109],"float32"), 13, axis=-1, largest=True, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 2 / 2106 (0.1%)
Greatest absolute difference: 649 at index (0, 62, 8) (up to 0.01 allowed)
Greatest relative difference: 0.1182149350643158 at index (0, 62, 9) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2, 81, 13]), dtype=torch.int64)
First 100 elements: tensor([ 7609,  4678,  6869,   121,  6450,  1574,  5057,  5536,   795,  7269,
         6377,  1883,  3140, 10177,  4049,  8788, 10868, 10413,  7588,  3775,
         3248,  1061,  9407,  6146,  2268,  5374,  2231,  5789,  3223,  5112,
         2190,  1396,  5865,  3030,  2675,  1154,  7312,   799,  7566,  3259,
        11054, 11107,  1182,  4032,   360,  3047,  2979,  7938,  8246,  8387,
         4802,  2791,  5885,  6441,  1362,  2329,   790,  8897,  9212,  9799,
         4604,   390,  7283,  4995,  1061,  9049,  9593,  5692,  4495, 10523,
        10704,  7602,  3860,  5894, 10883,  1083,   177, 10414,  7197,  9144,
          381,  9176,  9001,  2963,  2268,  9876, 10719,  7193, 10387,  8057,
         4758,  8046,  2881,  9426,  5885,  6920,  8863,  1228,  6577,  5683])
DESIRED: (shape=torch.Size([2, 81, 13]), dtype=torch.int64)
First 100 elements: tensor([ 7609,  4678,  6869,   121,  6450,  1574,  5057,  5536,   795,  7269,
         6377,  1883,  3140, 10177,  4049,  8788, 10868, 10413,  7588,  3775,
         3248,  1061,  9407,  6146,  2268,  5374,  2231,  5789,  3223,  5112,
         2190,  1396,  5865,  3030,  2675,  1154,  7312,   799,  7566,  3259,
        11054, 11107,  1182,  4032,   360,  3047,  2979,  7938,  8246,  8387,
         4802,  2791,  5885,  6441,  1362,  2329,   790,  8897,  9212,  9799,
         4604,   390,  7283,  4995,  1061,  9049,  9593,  5692,  4495, 10523,
        10704,  7602,  3860,  5894, 10883,  1083,   177, 10414,  7197,  9144,
          381,  9176,  9001,  2963,  2268,  9876, 10719,  7193, 10387,  8057,
         4758,  8046,  2881,  9426,  5885,  6920,  8863,  1228,  6577,  5683])
2025-05-27 04:46:44.318454 test begin: paddle.topk(Tensor([2, 81, 6804],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([2, 81, 6804],"float32"), 13, axis=-1, largest=True, )
2025-05-27 04:46:44.424619 test begin: paddle.topk(Tensor([2, 81, 7581],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([2, 81, 7581],"float32"), 13, axis=-1, largest=True, )
2025-05-27 04:46:44.531466 test begin: paddle.topk(Tensor([2, 84, 6804],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([2, 84, 6804],"float32"), 13, axis=-1, largest=True, )
2025-05-27 04:46:44.643977 test begin: paddle.topk(Tensor([2, 85, 10164],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([2, 85, 10164],"float32"), 13, axis=-1, largest=True, )
2025-05-27 04:46:44.760948 test begin: paddle.topk(Tensor([2, 85, 11109],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([2, 85, 11109],"float32"), 13, axis=-1, largest=True, )
2025-05-27 04:46:44.882205 test begin: paddle.topk(Tensor([2, 87, 9261],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([2, 87, 9261],"float32"), 13, axis=-1, largest=True, )
2025-05-27 04:46:45.001477 test begin: paddle.topk(Tensor([2, 9, 11109],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([2, 9, 11109],"float32"), 13, axis=-1, largest=True, )
2025-05-27 04:46:45.095503 test begin: paddle.topk(Tensor([2, 9, 5376],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([2, 9, 5376],"float32"), 13, axis=-1, largest=True, )
2025-05-27 04:46:45.184088 test begin: paddle.topk(Tensor([2, 93, 10164],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([2, 93, 10164],"float32"), 13, axis=-1, largest=True, )
2025-05-27 04:46:45.300900 test begin: paddle.topk(Tensor([2, 94, 8400],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([2, 94, 8400],"float32"), 13, axis=-1, largest=True, )
2025-05-27 04:46:45.412496 test begin: paddle.topk(Tensor([2, 96, 8400],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([2, 96, 8400],"float32"), 13, axis=-1, largest=True, )
2025-05-27 04:46:45.522428 test begin: paddle.topk(Tensor([2, 97, 7581],"float32"), 13, axis=-1, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([2, 97, 7581],"float32"), 13, axis=-1, largest=True, )
2025-05-27 04:46:45.636423 test begin: paddle.topk(Tensor([2053, 3],"float32"), 10, axis=0, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([2053, 3],"float32"), 10, axis=0, )
2025-05-27 04:46:45.725412 test begin: paddle.topk(Tensor([2102, 12],"float32"), 10, axis=0, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([2102, 12],"float32"), 10, axis=0, )
2025-05-27 04:46:45.813441 test begin: paddle.topk(Tensor([2254, 11],"float32"), 10, axis=0, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([2254, 11],"float32"), 10, axis=0, )
2025-05-27 04:46:45.901013 test begin: paddle.topk(Tensor([2313, 12],"float32"), 10, axis=0, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([2313, 12],"float32"), 10, axis=0, )
2025-05-27 04:46:45.985940 test begin: paddle.topk(Tensor([2399, 17],"float32"), 10, axis=0, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([2399, 17],"float32"), 10, axis=0, )
2025-05-27 04:46:46.072720 test begin: paddle.topk(Tensor([2515, 4],"float32"), 10, axis=0, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([2515, 4],"float32"), 10, axis=0, )
2025-05-27 04:46:46.163085 test begin: paddle.topk(Tensor([26736, 3029],"float32"), k=3, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.topk(Tensor([26736, 3029],"float32"), k=3, largest=True, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 10 / 80208 (0.0%)
Greatest absolute difference: 1740 at index (5143, 0) (up to 0.01 allowed)
Greatest relative difference: 7.016129016876221 at index (5143, 1) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([26736, 3]), dtype=torch.int64)
First 100 elements: tensor([ 742, 2912,  767, 2888, 2813, 2040, 1164, 2722, 2103, 1247, 1878,  336,
        1479,  847, 1741,  911,  247, 2756,  712,  755, 2655, 2994, 1194, 2636,
         989, 2008, 1841, 1191, 2092, 2121,  907, 1537, 1766,  848, 1992, 2778,
        2483, 1607, 2236, 2491,  457, 2717, 2612,  559, 2546, 1997,  478,  651,
        2452,  429,  599, 1639,  422, 1912, 2969, 2905, 1472, 2549, 1171, 1249,
         221, 2907,  292, 2410, 2341, 2462, 2344, 1881, 1346, 1746,  151, 1721,
         547, 1685, 1578, 2225, 2584, 2520, 1452, 2090, 1370, 1644,  719, 1893,
        2475, 1904, 1902,  165,  865,  694, 1228,   39,  911, 2976,  598, 2116,
        1518,  752,  616, 2263])
DESIRED: (shape=torch.Size([26736, 3]), dtype=torch.int64)
First 100 elements: tensor([ 742, 2912,  767, 2888, 2813, 2040, 1164, 2722, 2103, 1247, 1878,  336,
        1479,  847, 1741,  911,  247, 2756,  712,  755, 2655, 2994, 1194, 2636,
         989, 2008, 1841, 1191, 2092, 2121,  907, 1537, 1766,  848, 1992, 2778,
        2483, 1607, 2236, 2491,  457, 2717, 2612,  559, 2546, 1997,  478,  651,
        2452,  429,  599, 1639,  422, 1912, 2969, 2905, 1472, 2549, 1171, 1249,
         221, 2907,  292, 2410, 2341, 2462, 2344, 1881, 1346, 1746,  151, 1721,
         547, 1685, 1578, 2225, 2584, 2520, 1452, 2090, 1370, 1644,  719, 1893,
        2475, 1904, 1902,  165,  865,  694, 1228,   39,  911, 2976,  598, 2116,
        1518,  752,  616, 2263])
2025-05-27 04:46:47.611327 test begin: paddle.topk(Tensor([3032, 5],"float32"), 10, axis=0, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([3032, 5],"float32"), 10, axis=0, )
2025-05-27 04:46:47.710696 test begin: paddle.topk(Tensor([32, 400],"float16"), k=5, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.topk(Tensor([32, 400],"float16"), k=5, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 6 / 160 (3.8%)
Greatest absolute difference: 90 at index (25, 1) (up to 0.01 allowed)
Greatest relative difference: 0.7326732873916626 at index (20, 4) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([32, 5]), dtype=torch.int64)
First 100 elements: tensor([216,  92, 139, 161, 278, 202, 345, 102, 182, 258,  98, 277, 113, 296,
        282, 237, 165,  75, 307, 341, 178, 157, 304, 272,  60, 289, 132, 168,
         93,  28,  88,  83, 360,  80,  85, 194,  37,  87,  79, 170,   6, 196,
         87, 353, 293, 358, 338, 189, 344, 377, 350, 245, 387, 162, 195, 334,
         68, 350,  87, 333, 381, 165, 254, 108, 220, 259, 293, 129,  34, 392,
        183,  32, 384, 116, 263, 195,  37, 372,  72, 399,  44,  84, 125,  15,
        341, 211, 186, 357, 188,  45,  81, 297, 209, 377,  95, 324,  13, 108,
        281, 314])
DESIRED: (shape=torch.Size([32, 5]), dtype=torch.int64)
First 100 elements: tensor([216,  92, 139, 161, 278, 202, 345, 102, 182, 258,  98, 277, 113, 296,
        282, 237, 165,  75, 307, 341, 178, 157, 304, 272,  60, 289, 132, 168,
         93,  28,  88,  83, 360,  80,  85, 194,  37,  87,  79, 170,   6, 196,
         87, 353, 293, 358, 338, 189, 344, 377, 350, 245, 387, 162, 195, 334,
         68, 350,  87, 333, 381, 165, 254, 108, 220, 259, 293, 129,  34, 392,
        183,  32, 384, 116, 263, 195,  37, 372,  72, 399,  44,  84, 125,  15,
        341, 211, 186, 357, 188,  45,  81, 297, 209, 377,  95, 324,  13, 108,
        314, 281])
2025-05-27 04:46:47.809504 test begin: paddle.topk(Tensor([3223, 49],"float32"), 10, axis=0, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([3223, 49],"float32"), 10, axis=0, )
2025-05-27 04:46:47.907805 test begin: paddle.topk(Tensor([3593, 58],"float32"), 10, axis=0, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([3593, 58],"float32"), 10, axis=0, )
2025-05-27 04:46:48.008799 test begin: paddle.topk(Tensor([3897, 13],"float32"), 10, axis=0, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([3897, 13],"float32"), 10, axis=0, )
2025-05-27 04:46:48.102642 test begin: paddle.topk(Tensor([4, 120, 6400],"float32"), 9, axis=-1, largest=False, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.topk(Tensor([4, 120, 6400],"float32"), 9, axis=-1, largest=False, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 2 / 4320 (0.0%)
Greatest absolute difference: 2955 at index (2, 13, 0) (up to 0.01 allowed)
Greatest relative difference: 82.08333587646484 at index (2, 13, 1) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([4, 120, 9]), dtype=torch.int64)
First 100 elements: tensor([4860, 4626, 5904, 5233, 6148, 4527, 4153,  643, 1735, 1298, 4994, 5204,
        5459, 3638, 3039, 4550, 3781, 5863, 2024, 4301, 6155,  720, 6228, 1508,
        6391, 3061, 2475, 4208, 5095, 3485, 3933,  566, 4651, 2399, 5582, 2751,
        1551, 6015, 4459, 2696, 2350, 4810, 1467, 3804, 5335, 6023, 1154,  779,
        4443, 2222,  869, 5417, 1787, 2399, 2147, 6205, 4656, 5618, 3808, 6189,
          95,  768, 1013,  377, 5925, 1662, 1933, 1223, 5728,  689,  723,  253,
        6085, 5062, 5015, 1615, 3636, 2608,  269, 6220, 3461, 5298,  979, 3221,
        2388, 4887, 1241, 4754, 5253, 5478, 4663, 3222, 6140, 4811, 2792,  838,
        6146, 5181, 2370, 5163])
DESIRED: (shape=torch.Size([4, 120, 9]), dtype=torch.int64)
First 100 elements: tensor([4860, 4626, 5904, 5233, 6148, 4527, 4153,  643, 1735, 1298, 4994, 5204,
        5459, 3638, 3039, 4550, 3781, 5863, 2024, 4301, 6155,  720, 6228, 1508,
        6391, 3061, 2475, 4208, 5095, 3485, 3933,  566, 4651, 2399, 5582, 2751,
        1551, 6015, 4459, 2696, 2350, 4810, 1467, 3804, 5335, 6023, 1154,  779,
        4443, 2222,  869, 5417, 1787, 2399, 2147, 6205, 4656, 5618, 3808, 6189,
          95,  768, 1013,  377, 5925, 1662, 1933, 1223, 5728,  689,  723,  253,
        6085, 5062, 5015, 1615, 3636, 2608,  269, 6220, 3461, 5298,  979, 3221,
        2388, 4887, 1241, 4754, 5253, 5478, 4663, 3222, 6140, 4811, 2792,  838,
        6146, 5181, 2370, 5163])
2025-05-27 04:46:48.240985 test begin: paddle.topk(Tensor([4, 127, 1444],"float32"), 9, axis=-1, largest=False, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([4, 127, 1444],"float32"), 9, axis=-1, largest=False, )
2025-05-27 04:46:48.355539 test begin: paddle.topk(Tensor([4, 130, 900],"float32"), 9, axis=-1, largest=False, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([4, 130, 900],"float32"), 9, axis=-1, largest=False, )
2025-05-27 04:46:48.454045 test begin: paddle.topk(Tensor([4, 163, 196],"float32"), 9, axis=-1, largest=False, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([4, 163, 196],"float32"), 9, axis=-1, largest=False, )
2025-05-27 04:46:48.545330 test begin: paddle.topk(Tensor([4, 163, 784],"float32"), 9, axis=-1, largest=False, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([4, 163, 784],"float32"), 9, axis=-1, largest=False, )
2025-05-27 04:46:48.644037 test begin: paddle.topk(Tensor([4, 171, 7744],"float32"), 9, axis=-1, largest=False, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.topk(Tensor([4, 171, 7744],"float32"), 9, axis=-1, largest=False, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 2 / 6156 (0.0%)
Greatest absolute difference: 1478 at index (2, 55, 3) (up to 0.01 allowed)
Greatest relative difference: 0.9402035474777222 at index (2, 55, 4) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([4, 171, 9]), dtype=torch.int64)
First 100 elements: tensor([5390, 2893, 5054, 3650, 6473, 3866, 5622, 2521, 3408,  410, 4427, 5537,
        3249, 6681, 3684, 5559, 2922, 2616, 4303, 1999, 2335, 6647, 2111, 1698,
        2131, 2426, 7461, 2406, 2055, 1092, 4464, 2255, 5585, 7680, 4914, 3084,
          57, 5971,  499, 4236, 4863, 6070,  644, 3435, 4244, 7578, 4769, 3071,
        6821, 5888, 7662, 7538, 6845, 2301, 1537, 6941,  633, 7153, 2004, 5381,
         946, 5630, 1616, 3216, 5075,  984, 7324, 5919, 3567, 4455, 3581, 2666,
         620, 2207, 1478, 1799, 6593, 3739, 4983,  117, 4663, 3050, 2732,   23,
         365, 7073, 7148, 6192, 4738, 5627, 3434, 5073,  393,  652, 5589,  599,
        6743, 2296, 4852, 1605])
DESIRED: (shape=torch.Size([4, 171, 9]), dtype=torch.int64)
First 100 elements: tensor([5390, 2893, 5054, 3650, 6473, 3866, 5622, 2521, 3408,  410, 4427, 5537,
        3249, 6681, 3684, 5559, 2922, 2616, 4303, 1999, 2335, 6647, 2111, 1698,
        2131, 2426, 7461, 2406, 2055, 1092, 4464, 2255, 5585, 7680, 4914, 3084,
          57, 5971,  499, 4236, 4863, 6070,  644, 3435, 4244, 7578, 4769, 3071,
        6821, 5888, 7662, 7538, 6845, 2301, 1537, 6941,  633, 7153, 2004, 5381,
         946, 5630, 1616, 3216, 5075,  984, 7324, 5919, 3567, 4455, 3581, 2666,
         620, 2207, 1478, 1799, 6593, 3739, 4983,  117, 4663, 3050, 2732,   23,
         365, 7073, 7148, 6192, 4738, 5627, 3434, 5073,  393,  652, 5589,  599,
        6743, 2296, 4852, 1605])
2025-05-27 04:46:48.820606 test begin: paddle.topk(Tensor([4, 173, 1444],"float32"), 9, axis=-1, largest=False, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([4, 173, 1444],"float32"), 9, axis=-1, largest=False, )
2025-05-27 04:46:48.934413 test begin: paddle.topk(Tensor([4, 180, 5776],"float32"), 9, axis=-1, largest=False, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([4, 180, 5776],"float32"), 9, axis=-1, largest=False, )
2025-05-27 04:46:49.077251 test begin: paddle.topk(Tensor([4, 22, 7744],"float32"), 9, axis=-1, largest=False, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([4, 22, 7744],"float32"), 9, axis=-1, largest=False, )
2025-05-27 04:46:49.178413 test begin: paddle.topk(Tensor([4, 26, 225],"float32"), 9, axis=-1, largest=False, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([4, 26, 225],"float32"), 9, axis=-1, largest=False, )
2025-05-27 04:46:49.270127 test begin: paddle.topk(Tensor([4, 272, 7056],"float32"), 9, axis=-1, largest=False, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([4, 272, 7056],"float32"), 9, axis=-1, largest=False, )
2025-05-27 04:46:49.475535 test begin: paddle.topk(Tensor([4, 29, 7056],"float32"), 9, axis=-1, largest=False, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([4, 29, 7056],"float32"), 9, axis=-1, largest=False, )
2025-05-27 04:46:49.579888 test begin: paddle.topk(Tensor([4, 39, 8464],"float32"), 9, axis=-1, largest=False, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([4, 39, 8464],"float32"), 9, axis=-1, largest=False, )
2025-05-27 04:46:49.690903 test begin: paddle.topk(Tensor([4, 50, 2304],"float32"), 9, axis=-1, largest=False, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([4, 50, 2304],"float32"), 9, axis=-1, largest=False, )
2025-05-27 04:46:49.789667 test begin: paddle.topk(Tensor([4, 525, 9216],"float32"), 9, axis=-1, largest=False, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.topk(Tensor([4, 525, 9216],"float32"), 9, axis=-1, largest=False, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 6 / 18900 (0.0%)
Greatest absolute difference: 3475 at index (3, 427, 0) (up to 0.01 allowed)
Greatest relative difference: 33.41345977783203 at index (3, 427, 1) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([4, 525, 9]), dtype=torch.int64)
First 100 elements: tensor([3329, 4029, 7109, 5163, 4792, 5786, 1879, 6759, 1352, 7912, 3428,  999,
         300, 8541, 4904, 6551, 5847, 1616, 7816, 8145, 8932, 8262, 6186, 4953,
         202, 8337,  923,    6, 8551, 7891, 2269, 7320, 4273, 1032, 3057, 5878,
        9100, 3645,  916, 8633, 9022,  372, 1616, 5931, 1920,  228, 1106, 2151,
        2334, 3328, 1947, 5353, 4823, 6282, 3271, 4256, 6483, 6541, 6097, 4615,
         469, 4865, 6008, 6738, 8907, 3296, 8542, 1640, 5126, 8946, 3704, 2317,
        6423,  619, 8950, 7068, 5337, 3349, 5571, 2994, 6132, 3227, 3260, 7590,
        1677, 8777, 7999, 1111, 3920, 6858, 1761, 6798, 2310, 4121, 3178, 8711,
        7263, 5205, 8582, 4378])
DESIRED: (shape=torch.Size([4, 525, 9]), dtype=torch.int64)
First 100 elements: tensor([3329, 4029, 7109, 5163, 4792, 5786, 1879, 6759, 1352, 7912, 3428,  999,
         300, 8541, 4904, 6551, 5847, 1616, 7816, 8145, 8932, 8262, 6186, 4953,
         202, 8337,  923,    6, 8551, 7891, 2269, 7320, 4273, 1032, 3057, 5878,
        9100, 3645,  916, 8633, 9022,  372, 1616, 5931, 1920,  228, 1106, 2151,
        2334, 3328, 1947, 5353, 4823, 6282, 3271, 4256, 6483, 6541, 6097, 4615,
         469, 4865, 6008, 6738, 8907, 3296, 8542, 1640, 5126, 8946, 3704, 2317,
        6423,  619, 8950, 7068, 5337, 3349, 5571, 2994, 6132, 3227, 3260, 7590,
        1677, 8777, 7999, 1111, 3920, 6858, 1761, 6798, 2310, 4121, 3178, 8711,
        7263, 5205, 8582, 4378])
2025-05-27 04:46:50.204365 test begin: paddle.topk(Tensor([4, 83, 6400],"float32"), 9, axis=-1, largest=False, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([4, 83, 6400],"float32"), 9, axis=-1, largest=False, )
2025-05-27 04:46:50.342688 test begin: paddle.topk(Tensor([4, 89, 7744],"float32"), 9, axis=-1, largest=False, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([4, 89, 7744],"float32"), 9, axis=-1, largest=False, )
2025-05-27 04:46:50.466769 test begin: paddle.topk(Tensor([4, 92, 1444],"float32"), 9, axis=-1, largest=False, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([4, 92, 1444],"float32"), 9, axis=-1, largest=False, )
2025-05-27 04:46:50.565354 test begin: paddle.topk(Tensor([4, 97, 4096],"float32"), 9, axis=-1, largest=False, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([4, 97, 4096],"float32"), 9, axis=-1, largest=False, )
2025-05-27 04:46:50.678629 test begin: paddle.topk(Tensor([4789, 15],"float32"), 10, axis=0, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([4789, 15],"float32"), 10, axis=0, )
2025-05-27 04:46:50.799229 test begin: paddle.topk(Tensor([64, 16, 400],"float32"), 9, axis=-1, largest=False, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([64, 16, 400],"float32"), 9, axis=-1, largest=False, )
2025-05-27 04:46:50.902546 test begin: paddle.topk(Tensor([64, 17, 2304],"float32"), 9, axis=-1, largest=False, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([64, 17, 2304],"float32"), 9, axis=-1, largest=False, )
2025-05-27 04:46:51.049167 test begin: paddle.topk(Tensor([64, 18, 1296],"float32"), 9, axis=-1, largest=False, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([64, 18, 1296],"float32"), 9, axis=-1, largest=False, )
2025-05-27 04:46:51.170160 test begin: paddle.topk(Tensor([64, 18, 2304],"float32"), 9, axis=-1, largest=False, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([64, 18, 2304],"float32"), 9, axis=-1, largest=False, )
2025-05-27 04:46:51.294292 test begin: paddle.topk(Tensor([64, 19, 2304],"float32"), 9, axis=-1, largest=False, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([64, 19, 2304],"float32"), 9, axis=-1, largest=False, )
2025-05-27 04:46:51.421303 test begin: paddle.topk(Tensor([64, 20, 1600],"float32"), 9, axis=-1, largest=False, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.topk(Tensor([64, 20, 1600],"float32"), 9, axis=-1, largest=False, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 2 / 11520 (0.0%)
Greatest absolute difference: 175 at index (50, 11, 5) (up to 0.01 allowed)
Greatest relative difference: 0.7056451439857483 at index (50, 11, 6) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([64, 20, 9]), dtype=torch.int64)
First 100 elements: tensor([ 114, 1086,  106, 1311,  332,  146, 1084,  187, 1043, 1249,  130,  499,
        1293,  443,  202,  117,  567,  260, 1423,  555,  707,  700,   60, 1495,
         459, 1466,  195, 1578,  178, 1332,  350,  671, 1067,   82,   77, 1327,
         434,  741,  123,   83,  455,  250,  362, 1062, 1335,  287,  784,  364,
         289, 1276, 1396, 1211, 1497, 1391,  811, 1224, 1182, 1025, 1009, 1072,
         411, 1031,  833,  607,  414,  776, 1000,   34,   43,   73, 1594,  236,
         465,  623, 1245,  897, 1138, 1353, 1356, 1038,  501,  573, 1239,  177,
        1545, 1397, 1493, 1310,  623,  286, 1545, 1123, 1519, 1520, 1478, 1264,
         591,  611, 1225, 1410])
DESIRED: (shape=torch.Size([64, 20, 9]), dtype=torch.int64)
First 100 elements: tensor([ 114, 1086,  106, 1311,  332,  146, 1084,  187, 1043, 1249,  130,  499,
        1293,  443,  202,  117,  567,  260, 1423,  555,  707,  700,   60, 1495,
         459, 1466,  195, 1578,  178, 1332,  350,  671, 1067,   82,   77, 1327,
         434,  741,  123,   83,  455,  250,  362, 1062, 1335,  287,  784,  364,
         289, 1276, 1396, 1211, 1497, 1391,  811, 1224, 1182, 1025, 1009, 1072,
         411, 1031,  833,  607,  414,  776, 1000,   34,   43,   73, 1594,  236,
         465,  623, 1245,  897, 1138, 1353, 1356, 1038,  501,  573, 1239,  177,
        1545, 1397, 1493, 1310,  623,  286, 1545, 1123, 1519, 1520, 1478, 1264,
         591,  611, 1225, 1410])
2025-05-27 04:46:51.539537 test begin: paddle.topk(Tensor([64, 20, 484],"float32"), 9, axis=-1, largest=False, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([64, 20, 484],"float32"), 9, axis=-1, largest=False, )
2025-05-27 04:46:51.638426 test begin: paddle.topk(Tensor([64, 21, 1024],"float32"), 9, axis=-1, largest=False, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.topk(Tensor([64, 21, 1024],"float32"), 9, axis=-1, largest=False, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 2 / 12096 (0.0%)
Greatest absolute difference: 351 at index (45, 2, 2) (up to 0.01 allowed)
Greatest relative difference: 1.2061855792999268 at index (45, 2, 3) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([64, 21, 9]), dtype=torch.int64)
First 100 elements: tensor([ 620,  914,  245,    3,  658,  960,  823,  423,  263,  267,   46,  307,
         721,   83,  184,  701,  885,  889,  689,   76,  543,  461,  138,  959,
         840,  342,  780,  578,  692,  372,  598,  119,   79,  329,  312,  383,
         741,  142,  904,  265,  872,  124,  761,  116,   14,   55,  717,  160,
         220,  553,  566,  847,  616,  385,  591,  257,  153,  727,   92,  661,
         817,  507, 1007,  757,  407,  653,  325,  778,  747,  192,  475,   93,
         572,  144,  261,  410,  365,  457,  932,  690,  924,  538,  637,  433,
         274,  527,   13,  109,  480,  313,   62,  935,  943,  284,  835,  683,
         297,  992,   23,  964])
DESIRED: (shape=torch.Size([64, 21, 9]), dtype=torch.int64)
First 100 elements: tensor([ 620,  914,  245,    3,  658,  960,  823,  423,  263,  267,   46,  307,
         721,   83,  184,  701,  885,  889,  689,   76,  543,  461,  138,  959,
         840,  342,  780,  578,  692,  372,  598,  119,   79,  329,  312,  383,
         741,  142,  904,  265,  872,  124,  761,  116,   14,   55,  717,  160,
         220,  553,  566,  847,  616,  385,  591,  257,  153,  727,   92,  661,
         817,  507, 1007,  757,  407,  653,  325,  778,  747,  192,  475,   93,
         572,  144,  261,  410,  365,  457,  932,  690,  924,  538,  637,  433,
         274,  527,   13,  109,  480,  313,   62,  935,  943,  284,  835,  683,
         297,  992,   23,  964])
2025-05-27 04:46:51.754248 test begin: paddle.topk(Tensor([64, 21, 1296],"float32"), 9, axis=-1, largest=False, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([64, 21, 1296],"float32"), 9, axis=-1, largest=False, )
2025-05-27 04:46:51.870862 test begin: paddle.topk(Tensor([64, 22, 1936],"float32"), 9, axis=-1, largest=False, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([64, 22, 1936],"float32"), 9, axis=-1, largest=False, )
2025-05-27 04:46:52.006451 test begin: paddle.topk(Tensor([64, 22, 2304],"float32"), 9, axis=-1, largest=False, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([64, 22, 2304],"float32"), 9, axis=-1, largest=False, )
2025-05-27 04:46:52.139701 test begin: paddle.topk(Tensor([64, 23, 1296],"float32"), 9, axis=-1, largest=False, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([64, 23, 1296],"float32"), 9, axis=-1, largest=False, )
2025-05-27 04:46:52.257555 test begin: paddle.topk(Tensor([64, 23, 484],"float32"), 9, axis=-1, largest=False, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([64, 23, 484],"float32"), 9, axis=-1, largest=False, )
2025-05-27 04:46:52.359336 test begin: paddle.topk(Tensor([64, 24, 484],"float32"), 9, axis=-1, largest=False, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([64, 24, 484],"float32"), 9, axis=-1, largest=False, )
2025-05-27 04:46:52.457397 test begin: paddle.topk(Tensor([64, 26, 1024],"float32"), 9, axis=-1, largest=False, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([64, 26, 1024],"float32"), 9, axis=-1, largest=False, )
2025-05-27 04:46:52.570399 test begin: paddle.topk(Tensor([64, 26, 1600],"float32"), 9, axis=-1, largest=False, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([64, 26, 1600],"float32"), 9, axis=-1, largest=False, )
2025-05-27 04:46:52.697299 test begin: paddle.topk(Tensor([64, 26, 2304],"float32"), 9, axis=-1, largest=False, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.topk(Tensor([64, 26, 2304],"float32"), 9, axis=-1, largest=False, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 2 / 14976 (0.0%)
Greatest absolute difference: 1683 at index (51, 21, 1) (up to 0.01 allowed)
Greatest relative difference: 3.3727455139160156 at index (51, 21, 2) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([64, 26, 9]), dtype=torch.int64)
First 100 elements: tensor([ 846,  945, 2296, 1747,  891, 1189, 1148, 1574,   57, 1326, 1821, 1721,
        1198, 2278, 1487,   73,  836, 2103,  844, 2275, 1210, 1510, 1663, 1080,
        1274,  566,   67, 1488, 2272,  870,  577,  473,  951,  793, 1072,  611,
         568, 1227,  996, 1249,  317, 2194,  198, 1648,  919, 1454, 1560,  730,
         844, 1499, 2013,  164,   55, 2268, 1154, 1393,  632,  413,  238,  300,
         544, 1586, 2127,   34,  878, 1494, 1726,  705, 1999, 1710, 1351,  106,
         546,  239, 1305, 2050, 2226,  871, 1059,   16, 1746,  471, 1098,  938,
        1965, 1251, 1289,  909,  274,  467, 1591, 1445,  351,  770, 2000, 1674,
        1253, 1754,  502, 1317])
DESIRED: (shape=torch.Size([64, 26, 9]), dtype=torch.int64)
First 100 elements: tensor([ 846,  945, 2296, 1747,  891, 1189, 1148, 1574,   57, 1326, 1821, 1721,
        1198, 2278, 1487,   73,  836, 2103,  844, 2275, 1210, 1510, 1663, 1080,
        1274,  566,   67, 1488, 2272,  870,  577,  473,  951,  793, 1072,  611,
         568, 1227,  996, 1249,  317, 2194,  198, 1648,  919, 1454, 1560,  730,
         844, 1499, 2013,  164,   55, 2268, 1154, 1393,  632,  413,  238,  300,
         544, 1586, 2127,   34,  878, 1494, 1726,  705, 1999, 1710, 1351,  106,
         546,  239, 1305, 2050, 2226,  871, 1059,   16, 1746,  471, 1098,  938,
        1965, 1251, 1289,  909,  274,  467, 1591, 1445,  351,  770, 2000, 1674,
        1253, 1754,  502, 1317])
2025-05-27 04:46:52.834291 test begin: paddle.topk(Tensor([64, 27, 1600],"float32"), 9, axis=-1, largest=False, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.topk(Tensor([64, 27, 1600],"float32"), 9, axis=-1, largest=False, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 2 / 15552 (0.0%)
Greatest absolute difference: 420 at index (39, 25, 0) (up to 0.01 allowed)
Greatest relative difference: 0.584144651889801 at index (39, 25, 1) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([64, 27, 9]), dtype=torch.int64)
First 100 elements: tensor([ 308,  630, 1353,  133,  867, 1297,  424, 1356,  939,   88, 1496, 1570,
        1074,  752,   44,  258, 1532,  106,  827,  406,  907, 1429, 1219,  372,
        1593, 1477,  240,  998, 1527,  438, 1058,  365,  100, 1440,  853,   89,
        1522,  280,   99, 1098, 1200,  589,  240,  866,  244, 1261, 1321,  730,
         439, 1309,  705,  448, 1217, 1402,  285, 1427, 1286,  765,  909,  193,
        1294,  873, 1214,  894, 1278,  494,  189,  890, 1189, 1507,  463,  455,
         587,  237, 1161, 1491,  551, 1526,    6, 1351, 1587, 1141,  226, 1214,
        1482, 1042,  222,  613,  724,  555, 1303,  592,   26,  864,  792,  132,
        1272, 1345,  672,  976])
DESIRED: (shape=torch.Size([64, 27, 9]), dtype=torch.int64)
First 100 elements: tensor([ 308,  630, 1353,  133,  867, 1297,  424, 1356,  939,   88, 1496, 1570,
        1074,  752,   44,  258, 1532,  106,  827,  406,  907, 1429, 1219,  372,
        1593, 1477,  240,  998, 1527,  438, 1058,  365,  100, 1440,  853,   89,
        1522,  280,   99, 1098, 1200,  589,  240,  866,  244, 1261, 1321,  730,
         439, 1309,  705,  448, 1217, 1402,  285, 1427, 1286,  765,  909,  193,
        1294,  873, 1214,  894, 1278,  494,  189,  890, 1189, 1507,  463,  455,
         587,  237, 1161, 1491,  551, 1526,    6, 1351, 1587, 1141,  226, 1214,
        1482, 1042,  222,  613,  724,  555, 1303,  592,   26,  864,  792,  132,
        1272, 1345,  672,  976])
2025-05-27 04:46:52.962418 test begin: paddle.topk(Tensor([64, 28, 1600],"float32"), 9, axis=-1, largest=False, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([64, 28, 1600],"float32"), 9, axis=-1, largest=False, )
2025-05-27 04:46:53.096858 test begin: paddle.topk(Tensor([64, 29, 1936],"float32"), 9, axis=-1, largest=False, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([64, 29, 1936],"float32"), 9, axis=-1, largest=False, )
2025-05-27 04:46:53.233536 test begin: paddle.topk(Tensor([64, 30, 144],"float32"), 9, axis=-1, largest=False, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([64, 30, 144],"float32"), 9, axis=-1, largest=False, )
2025-05-27 04:46:53.332109 test begin: paddle.topk(Tensor([64, 31, 576],"float32"), 9, axis=-1, largest=False, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([64, 31, 576],"float32"), 9, axis=-1, largest=False, )
2025-05-27 04:46:53.442960 test begin: paddle.topk(Tensor([64, 32, 1024],"float32"), 9, axis=-1, largest=False, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.topk(Tensor([64, 32, 1024],"float32"), 9, axis=-1, largest=False, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 2 / 18432 (0.0%)
Greatest absolute difference: 306 at index (53, 17, 1) (up to 0.01 allowed)
Greatest relative difference: 0.6442105174064636 at index (53, 17, 2) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([64, 32, 9]), dtype=torch.int64)
First 100 elements: tensor([ 979,  419,  402,  799,  567,  837,  820,  635,  823,  559,  889, 1015,
        1014,  108,  834,  521,  755,  822,  724,  770,  252,  878,  698, 1021,
         740,  560,  464,  212,  276,  511,  259,  685,  664,  971,  431,  216,
         490, 1023,  727,  767,  737,  537,  782,  128,  710,  879,   82,  821,
         639,  788,  695,  645,  351,  794,  867,   43,  970,  130,  108,  897,
         371,  829,  144,   20,  368,  362,  988,  156,  963,  603,  182,  888,
         581,  540,  494,  171,   50,  349, 1001,  736,  362,  921,  344,  634,
         241,  512,  962,  293,  258,  867,  513,  230,  407,  220,  217,  277,
         776,  242,  831,  812])
DESIRED: (shape=torch.Size([64, 32, 9]), dtype=torch.int64)
First 100 elements: tensor([ 979,  419,  402,  799,  567,  837,  820,  635,  823,  559,  889, 1015,
        1014,  108,  834,  521,  755,  822,  724,  770,  252,  878,  698, 1021,
         740,  560,  464,  212,  276,  511,  259,  685,  664,  971,  431,  216,
         490, 1023,  727,  767,  737,  537,  782,  128,  710,  879,   82,  821,
         639,  788,  695,  645,  351,  794,  867,   43,  970,  130,  108,  897,
         371,  829,  144,   20,  368,  362,  988,  156,  963,  603,  182,  888,
         581,  540,  494,  171,   50,  349, 1001,  736,  362,  921,  344,  634,
         241,  512,  962,  293,  258,  867,  513,  230,  407,  220,  217,  277,
         776,  242,  831,  812])
2025-05-27 04:46:53.564514 test begin: paddle.topk(Tensor([64, 35, 2304],"float32"), 9, axis=-1, largest=False, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.topk(Tensor([64, 35, 2304],"float32"), 9, axis=-1, largest=False, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 2 / 20160 (0.0%)
Greatest absolute difference: 1999 at index (13, 5, 3) (up to 0.01 allowed)
Greatest relative difference: 13.88194465637207 at index (13, 5, 4) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([64, 35, 9]), dtype=torch.int64)
First 100 elements: tensor([  37, 1211, 1566, 1355, 1755, 1733,  858,   43,  473, 1044, 1957, 2170,
        2083, 1864,  809,  140, 1862, 1365, 2039,  247, 1464, 1262,  803,  190,
         162, 1273,  261,   40, 1679,  362, 2300,  411,  488, 1626,  671,  659,
         619, 1540, 1061,   97,  482,  879,  694,  949,  157, 1018, 2042,  276,
         293,   90,  470, 1854, 1700, 1272,  703, 1198, 1247, 1190, 1220,    0,
        2037,  452, 2248,  970,  424, 2166,  736, 1809,  475,  580, 2189,   40,
        1094, 1275, 2219, 1165, 1332, 2173,  526, 1386,  345,  882,  937,  838,
        1781,  221, 2243, 2184, 1674, 1491, 2156,  856, 1641, 1746,  977, 1881,
        2011,  586,  668, 2104])
DESIRED: (shape=torch.Size([64, 35, 9]), dtype=torch.int64)
First 100 elements: tensor([  37, 1211, 1566, 1355, 1755, 1733,  858,   43,  473, 1044, 1957, 2170,
        2083, 1864,  809,  140, 1862, 1365, 2039,  247, 1464, 1262,  803,  190,
         162, 1273,  261,   40, 1679,  362, 2300,  411,  488, 1626,  671,  659,
         619, 1540, 1061,   97,  482,  879,  694,  949,  157, 1018, 2042,  276,
         293,   90,  470, 1854, 1700, 1272,  703, 1198, 1247, 1190, 1220,    0,
        2037,  452, 2248,  970,  424, 2166,  736, 1809,  475,  580, 2189,   40,
        1094, 1275, 2219, 1165, 1332, 2173,  526, 1386,  345,  882,  937,  838,
        1781,  221, 2243, 2184, 1674, 1491, 2156,  856, 1641, 1746,  977, 1881,
        2011,  586,  668, 2104])
2025-05-27 04:46:53.741254 test begin: paddle.topk(Tensor([64, 35, 576],"float32"), 9, axis=-1, largest=False, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([64, 35, 576],"float32"), 9, axis=-1, largest=False, )
2025-05-27 04:46:53.850040 test begin: paddle.topk(Tensor([64, 36, 2304],"float32"), 9, axis=-1, largest=False, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([64, 36, 2304],"float32"), 9, axis=-1, largest=False, )
2025-05-27 04:46:54.024671 test begin: paddle.topk(Tensor([64, 36, 400],"float32"), 9, axis=-1, largest=False, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([64, 36, 400],"float32"), 9, axis=-1, largest=False, )
2025-05-27 04:46:54.134580 test begin: paddle.topk(Tensor([64, 36, 576],"float32"), 9, axis=-1, largest=False, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.topk(Tensor([64, 36, 576],"float32"), 9, axis=-1, largest=False, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 4 / 20736 (0.0%)
Greatest absolute difference: 110 at index (19, 32, 5) (up to 0.01 allowed)
Greatest relative difference: 0.800000011920929 at index (19, 22, 3) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([64, 36, 9]), dtype=torch.int64)
First 100 elements: tensor([ 61, 379, 382, 496, 340, 166, 388, 184, 413, 153, 521, 544,  84, 375,
          6, 284, 124, 321, 475, 522, 352, 149, 165,  14, 276, 528,  75, 384,
        458, 237, 375, 490, 341, 437, 540, 113, 173, 502, 528, 428,  80, 507,
        239, 335, 379, 284,  85, 163,  15, 368, 510, 220, 572,  88, 195,  98,
        231, 240, 339, 188, 261, 101, 184,  85, 435,   9,  36,  83, 419,  14,
        414, 413,   8,  59, 469, 315, 420, 264, 233, 429, 326,   5, 106,  11,
        389, 192, 167, 114, 467, 132, 289,  48,  44, 251, 547, 324,  94, 300,
        285, 139])
DESIRED: (shape=torch.Size([64, 36, 9]), dtype=torch.int64)
First 100 elements: tensor([ 61, 379, 382, 496, 340, 166, 388, 184, 413, 153, 521, 544,  84, 375,
          6, 284, 124, 321, 475, 522, 352, 149, 165,  14, 276, 528,  75, 384,
        458, 237, 375, 490, 341, 437, 540, 113, 173, 502, 528, 428,  80, 507,
        239, 335, 379, 284,  85, 163,  15, 368, 510, 220, 572,  88, 195,  98,
        231, 240, 339, 188, 261, 101, 184,  85, 435,   9,  36,  83, 419,  14,
        414, 413,   8,  59, 469, 315, 420, 264, 233, 429, 326,   5, 106,  11,
        389, 192, 167, 114, 467, 132, 289,  48,  44, 251, 547, 324,  94, 300,
        285, 139])
2025-05-27 04:46:54.246114 test begin: paddle.topk(Tensor([64, 37, 1936],"float32"), 9, axis=-1, largest=False, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([64, 37, 1936],"float32"), 9, axis=-1, largest=False, )
2025-05-27 04:46:54.410332 test begin: paddle.topk(Tensor([64, 39, 2304],"float32"), 9, axis=-1, largest=False, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([64, 39, 2304],"float32"), 9, axis=-1, largest=False, )
2025-05-27 04:46:54.593945 test begin: paddle.topk(Tensor([64, 43, 484],"float32"), 9, axis=-1, largest=False, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([64, 43, 484],"float32"), 9, axis=-1, largest=False, )
2025-05-27 04:46:54.705484 test begin: paddle.topk(Tensor([64, 46, 324],"float32"), 9, axis=-1, largest=False, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([64, 46, 324],"float32"), 9, axis=-1, largest=False, )
2025-05-27 04:46:54.814387 test begin: paddle.topk(Tensor([64, 47, 2304],"float32"), 9, axis=-1, largest=False, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.topk(Tensor([64, 47, 2304],"float32"), 9, axis=-1, largest=False, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 6 / 27072 (0.0%)
Greatest absolute difference: 1447 at index (24, 33, 7) (up to 0.01 allowed)
Greatest relative difference: 3.194260597229004 at index (24, 33, 8) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([64, 47, 9]), dtype=torch.int64)
First 100 elements: tensor([1645,  864, 1256, 2285, 1220, 1010, 1539, 1034,  468,  180, 1165, 1865,
         787, 1688, 1911, 1059,  263, 1018, 1595,  996, 1392, 2200,  479, 1374,
         624, 1790, 1773,  715, 1329,  684,  267, 1255, 1236,  124,  608, 1931,
        1887, 1253,  113,  493, 1178, 1943, 1479,   32, 1294, 1716, 1260,  198,
        2042, 1728, 2284, 2132, 1498,  835, 1585, 1428,  148,  316,  630, 1902,
         492,  960, 1447,  179, 1521,   53,  341,  306, 1638, 1098, 1618, 1652,
         173, 2095, 1214, 1832,  598, 1054,  453,  521,   99, 1049,  414,   84,
          34, 2104, 1948, 2286, 2065,  198,  831,  881,  800,  941,  520, 1734,
         422, 1333, 2165,  545])
DESIRED: (shape=torch.Size([64, 47, 9]), dtype=torch.int64)
First 100 elements: tensor([1645,  864, 1256, 2285, 1220, 1010, 1539, 1034,  468,  180, 1165, 1865,
         787, 1688, 1911, 1059,  263, 1018, 1595,  996, 1392, 2200,  479, 1374,
         624, 1790, 1773,  715, 1329,  684,  267, 1255, 1236,  124,  608, 1931,
        1887, 1253,  113,  493, 1178, 1943, 1479,   32, 1294, 1716, 1260,  198,
        2042, 1728, 2284, 2132, 1498,  835, 1585, 1428,  148,  316,  630, 1902,
         492,  960, 1447,  179, 1521,   53,  341,  306, 1638, 1098, 1618, 1652,
         173, 2095, 1214, 1832,  598, 1054,  453,  521,   99, 1049,  414,   84,
          34, 2104, 1948, 2286, 2065,  198,  831,  881,  800,  941,  520, 1734,
         422, 1333, 2165,  545])
2025-05-27 04:46:55.016912 test begin: paddle.topk(Tensor([64, 48, 1600],"float32"), 9, axis=-1, largest=False, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.topk(Tensor([64, 48, 1600],"float32"), 9, axis=-1, largest=False, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 4 / 27648 (0.0%)
Greatest absolute difference: 1159 at index (44, 21, 2) (up to 0.01 allowed)
Greatest relative difference: 3.1409213542938232 at index (44, 21, 3) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([64, 48, 9]), dtype=torch.int64)
First 100 elements: tensor([ 369,  364, 1110,  917,  662,  960, 1068, 1176, 1240,  127,  642,  907,
          45,  919,  180, 1281, 1103,  232,  963,  124,  340,  887,  444,  291,
         695,  136,  749,  908,  681,  767,  759,  381,  506,  305,  368,  429,
         408, 1074, 1393,  110, 1203, 1237,  653,  817,  262,  561, 1105, 1478,
         902,  728, 1153, 1157,  519,  263,  881,  215,  973,  198,  371,  580,
         501, 1044,  254, 1526,  392,  703, 1375,  454, 1057, 1203, 1597, 1096,
         169,  444, 1442,   46,  984,  268,  296, 1146,  519,  218,  790,  806,
         995, 1514,  695,  159, 1248,  515,  416, 1129, 1438,  754,  663,  315,
        1328,  602,  612,  681])
DESIRED: (shape=torch.Size([64, 48, 9]), dtype=torch.int64)
First 100 elements: tensor([ 369,  364, 1110,  917,  662,  960, 1068, 1176, 1240,  127,  642,  907,
          45,  919,  180, 1281, 1103,  232,  963,  124,  340,  887,  444,  291,
         695,  136,  749,  908,  681,  767,  759,  381,  506,  305,  368,  429,
         408, 1074, 1393,  110, 1203, 1237,  653,  817,  262,  561, 1105, 1478,
         902,  728, 1153, 1157,  519,  263,  881,  215,  973,  198,  371,  580,
         501, 1044,  254, 1526,  392,  703, 1375,  454, 1057, 1203, 1597, 1096,
         169,  444, 1442,   46,  984,  268,  296, 1146,  519,  218,  790,  806,
         995, 1514,  695,  159, 1248,  515,  416, 1129, 1438,  754,  663,  315,
        1328,  602,  612,  681])
2025-05-27 04:46:55.189379 test begin: paddle.topk(Tensor([64, 50, 2304],"float32"), 9, axis=-1, largest=False, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.topk(Tensor([64, 50, 2304],"float32"), 9, axis=-1, largest=False, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 2 / 28800 (0.0%)
Greatest absolute difference: 204 at index (49, 7, 1) (up to 0.01 allowed)
Greatest relative difference: 0.8292682766914368 at index (49, 7, 2) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([64, 50, 9]), dtype=torch.int64)
First 100 elements: tensor([ 876,  998, 2189,  481,  179,  968, 1060,  618, 1561,  563,  279, 1111,
         947,  356, 1705,  506,   74, 2303, 2012,   48, 1081, 2126,  645,  713,
         476, 1528, 2127, 2235,  635,  430,  166,  897,  781,   40, 2263,  749,
        1668, 1607, 2106, 1015, 1556, 1152, 1665, 1605,  603, 1736, 2066, 1887,
          69,  115, 1982,   75,  813, 1482, 2205, 1580, 1615, 1137,   36, 1422,
         599, 1973,  356,  135, 1394,   64,  940, 2246,  402, 1928,  497, 1176,
         982, 1570,  948, 2273, 1535, 1028,  152, 1869,  481, 2150,  927,  627,
        2130,  656, 1546, 1267, 2109,  266,  219, 1952,  842,  905,  821, 1109,
         509, 1465, 1505, 1042])
DESIRED: (shape=torch.Size([64, 50, 9]), dtype=torch.int64)
First 100 elements: tensor([ 876,  998, 2189,  481,  179,  968, 1060,  618, 1561,  563,  279, 1111,
         947,  356, 1705,  506,   74, 2303, 2012,   48, 1081, 2126,  645,  713,
         476, 1528, 2127, 2235,  635,  430,  166,  897,  781,   40, 2263,  749,
        1668, 1607, 2106, 1015, 1556, 1152, 1665, 1605,  603, 1736, 2066, 1887,
          69,  115, 1982,   75,  813, 1482, 2205, 1580, 1615, 1137,   36, 1422,
         599, 1973,  356,  135, 1394,   64,  940, 2246,  402, 1928,  497, 1176,
         982, 1570,  948, 2273, 1535, 1028,  152, 1869,  481, 2150,  927,  627,
        2130,  656, 1546, 1267, 2109,  266,  219, 1952,  842,  905,  821, 1109,
         509, 1465, 1505, 1042])
2025-05-27 04:46:55.399234 test begin: paddle.topk(Tensor([64, 53, 1296],"float32"), 9, axis=-1, largest=False, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([64, 53, 1296],"float32"), 9, axis=-1, largest=False, )
2025-05-27 04:46:55.560296 test begin: paddle.topk(Tensor([64, 54, 576],"float32"), 9, axis=-1, largest=False, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.topk(Tensor([64, 54, 576],"float32"), 9, axis=-1, largest=False, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 2 / 31104 (0.0%)
Greatest absolute difference: 163 at index (45, 51, 7) (up to 0.01 allowed)
Greatest relative difference: 0.4851190447807312 at index (45, 51, 8) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([64, 54, 9]), dtype=torch.int64)
First 100 elements: tensor([534, 125, 128, 256, 182, 170,  97, 245, 514, 171, 483, 189, 351, 556,
         53, 108, 125, 138, 439, 213, 516, 521, 154, 165, 179,  75, 221, 225,
         70,  61, 242, 385, 355, 420, 541, 170, 232, 193, 486, 262, 496, 438,
         91,  50, 176, 388, 272, 130, 482, 300, 252, 126, 370, 396, 412, 290,
        437, 244, 536,  44, 145, 239, 287, 423, 214, 563, 219, 146, 490, 500,
        357, 367, 469, 360, 245, 155, 464, 201, 316, 192, 350, 119, 291, 325,
        394, 482,   2, 152, 280, 542, 186, 290, 337, 159,  16, 130, 267,  85,
        119,  90])
DESIRED: (shape=torch.Size([64, 54, 9]), dtype=torch.int64)
First 100 elements: tensor([534, 125, 128, 256, 182, 170,  97, 245, 514, 171, 483, 189, 351, 556,
         53, 108, 125, 138, 439, 213, 516, 521, 154, 165, 179,  75, 221, 225,
         70,  61, 242, 385, 355, 420, 541, 170, 232, 193, 486, 262, 496, 438,
         91,  50, 176, 388, 272, 130, 482, 300, 252, 126, 370, 396, 412, 290,
        437, 244, 536,  44, 145, 239, 287, 423, 214, 563, 219, 146, 490, 500,
        357, 367, 469, 360, 245, 155, 464, 201, 316, 192, 350, 119, 291, 325,
        394, 482,   2, 152, 280, 542, 186, 290, 337, 159,  16, 130, 267,  85,
        119,  90])
2025-05-27 04:46:55.681543 test begin: paddle.topk(Tensor([6684, 3029],"float32"), k=3, largest=True, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([6684, 3029],"float32"), k=3, largest=True, )
2025-05-27 04:46:56.115511 test begin: paddle.topk(Tensor([8, 11, 6400],"float32"), 9, axis=-1, largest=False, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([8, 11, 6400],"float32"), 9, axis=-1, largest=False, )
2025-05-27 04:46:56.217256 test begin: paddle.topk(Tensor([8, 11, 7056],"float32"), 9, axis=-1, largest=False, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([8, 11, 7056],"float32"), 9, axis=-1, largest=False, )
2025-05-27 04:46:56.315252 test begin: paddle.topk(Tensor([8, 14, 441],"float32"), 9, axis=-1, largest=False, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([8, 14, 441],"float32"), 9, axis=-1, largest=False, )
2025-05-27 04:46:56.407599 test begin: paddle.topk(Tensor([8, 16, 4096],"float32"), 9, axis=-1, largest=False, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([8, 16, 4096],"float32"), 9, axis=-1, largest=False, )
2025-05-27 04:46:56.524925 test begin: paddle.topk(Tensor([8, 16, 4624],"float32"), 9, axis=-1, largest=False, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([8, 16, 4624],"float32"), 9, axis=-1, largest=False, )
2025-05-27 04:46:56.627995 test begin: paddle.topk(Tensor([8, 19, 7056],"float32"), 9, axis=-1, largest=False, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([8, 19, 7056],"float32"), 9, axis=-1, largest=False, )
2025-05-27 04:46:56.732865 test begin: paddle.topk(Tensor([8, 20, 9216],"float32"), 9, axis=-1, largest=False, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([8, 20, 9216],"float32"), 9, axis=-1, largest=False, )
2025-05-27 04:46:56.844099 test begin: paddle.topk(Tensor([8, 22, 5776],"float32"), 9, axis=-1, largest=False, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([8, 22, 5776],"float32"), 9, axis=-1, largest=False, )
2025-05-27 04:46:56.945699 test begin: paddle.topk(Tensor([8, 23, 9216],"float32"), 9, axis=-1, largest=False, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([8, 23, 9216],"float32"), 9, axis=-1, largest=False, )
2025-05-27 04:46:57.063063 test begin: paddle.topk(Tensor([8, 24, 484],"float32"), 9, axis=-1, largest=False, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([8, 24, 484],"float32"), 9, axis=-1, largest=False, )
2025-05-27 04:46:57.152025 test begin: paddle.topk(Tensor([8, 25, 5776],"float32"), 9, axis=-1, largest=False, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([8, 25, 5776],"float32"), 9, axis=-1, largest=False, )
2025-05-27 04:46:57.257766 test begin: paddle.topk(Tensor([8, 26, 4624],"float32"), 9, axis=-1, largest=False, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([8, 26, 4624],"float32"), 9, axis=-1, largest=False, )
2025-05-27 04:46:57.360015 test begin: paddle.topk(Tensor([8, 26, 7056],"float32"), 9, axis=-1, largest=False, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.topk(Tensor([8, 26, 7056],"float32"), 9, axis=-1, largest=False, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 2 / 1872 (0.1%)
Greatest absolute difference: 994 at index (5, 3, 0) (up to 0.01 allowed)
Greatest relative difference: 0.720812201499939 at index (5, 3, 1) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([8, 26, 9]), dtype=torch.int64)
First 100 elements: tensor([4963, 6221, 6966, 2125, 6258, 6027, 1079, 4971, 5882, 3079,  790,  184,
        1171,  712, 5942,  960, 3799, 4646,  182, 6390, 6134,  570, 3556,  368,
         909, 6243, 2518, 6043,  682, 6106, 5946, 1579, 3734, 4547, 3731, 4872,
        4621, 5711, 6009, 3753, 3596, 1617, 2137, 1140, 6231, 2057, 5688, 6592,
        2293, 6593, 6397, 3943, 5203, 1151, 6287, 5285, 2657, 6322, 2127, 2019,
        5152, 1011,  454, 6718, 1228, 7035,  985, 2706, 6976, 6170, 1398, 2230,
        3264, 1866, 1784,  768, 6835, 5947, 6478, 2795, 3985,   30, 6099, 2776,
         402, 2743, 4963, 4425, 6142, 5971, 1659, 1294, 5034, 3153,  686, 6986,
        1495, 1360, 2500,  327])
DESIRED: (shape=torch.Size([8, 26, 9]), dtype=torch.int64)
First 100 elements: tensor([4963, 6221, 6966, 2125, 6258, 6027, 1079, 4971, 5882, 3079,  790,  184,
        1171,  712, 5942,  960, 3799, 4646,  182, 6390, 6134,  570, 3556,  368,
         909, 6243, 2518, 6043,  682, 6106, 5946, 1579, 3734, 4547, 3731, 4872,
        4621, 5711, 6009, 3753, 3596, 1617, 2137, 1140, 6231, 2057, 5688, 6592,
        2293, 6593, 6397, 3943, 5203, 1151, 6287, 5285, 2657, 6322, 2127, 2019,
        5152, 1011,  454, 6718, 1228, 7035,  985, 2706, 6976, 6170, 1398, 2230,
        3264, 1866, 1784,  768, 6835, 5947, 6478, 2795, 3985,   30, 6099, 2776,
         402, 2743, 4963, 4425, 6142, 5971, 1659, 1294, 5034, 3153,  686, 6986,
        1495, 1360, 2500,  327])
2025-05-27 04:46:57.468087 test begin: paddle.topk(Tensor([8, 27, 5776],"float32"), 9, axis=-1, largest=False, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.topk(Tensor([8, 27, 5776],"float32"), 9, axis=-1, largest=False, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 2 / 1944 (0.1%)
Greatest absolute difference: 2908 at index (2, 9, 0) (up to 0.01 allowed)
Greatest relative difference: 1.2363945245742798 at index (2, 9, 1) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([8, 27, 9]), dtype=torch.int64)
First 100 elements: tensor([2602, 4035, 2966, 1816, 4450, 2238, 4737, 5219,  970,  869, 3810,  641,
        4339, 5618, 3146, 1466,  789, 1435,  801, 2784, 4508, 1195, 5549, 4071,
        3338, 1718, 1029, 3919, 2082, 2690, 5170, 5307, 2424, 5596, 4168, 4185,
        4933, 1492, 1930, 2037, 4875, 1504, 1946, 4580, 1507, 3669, 5625, 1662,
        2862, 3378, 2560, 4266, 4501, 3658, 2357, 2711, 5254, 3159, 1357,  681,
        5369, 2301, 1286, 4387,  794,   23, 3452, 2862, 1408, 4746, 4316, 3245,
        3852, 5038, 5412, 1595, 1973, 3657, 5394, 3223, 1718, 1024, 4635, 1221,
        4879, 1666, 1228,   33, 3002, 1082,  879,  227, 4007, 1130, 2149, 1211,
         726, 3789, 2449, 3776])
DESIRED: (shape=torch.Size([8, 27, 9]), dtype=torch.int64)
First 100 elements: tensor([2602, 4035, 2966, 1816, 4450, 2238, 4737, 5219,  970,  869, 3810,  641,
        4339, 5618, 3146, 1466,  789, 1435,  801, 2784, 4508, 1195, 5549, 4071,
        3338, 1718, 1029, 3919, 2082, 2690, 5170, 5307, 2424, 5596, 4168, 4185,
        4933, 1492, 1930, 2037, 4875, 1504, 1946, 4580, 1507, 3669, 5625, 1662,
        2862, 3378, 2560, 4266, 4501, 3658, 2357, 2711, 5254, 3159, 1357,  681,
        5369, 2301, 1286, 4387,  794,   23, 3452, 2862, 1408, 4746, 4316, 3245,
        3852, 5038, 5412, 1595, 1973, 3657, 5394, 3223, 1718, 1024, 4635, 1221,
        4879, 1666, 1228,   33, 3002, 1082,  879,  227, 4007, 1130, 2149, 1211,
         726, 3789, 2449, 3776])
2025-05-27 04:46:57.576948 test begin: paddle.topk(Tensor([8, 27, 8464],"float32"), 9, axis=-1, largest=False, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([8, 27, 8464],"float32"), 9, axis=-1, largest=False, )
2025-05-27 04:46:57.695157 test begin: paddle.topk(Tensor([8, 28, 2116],"float32"), 9, axis=-1, largest=False, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([8, 28, 2116],"float32"), 9, axis=-1, largest=False, )
2025-05-27 04:46:57.791688 test begin: paddle.topk(Tensor([8, 29, 1600],"float32"), 9, axis=-1, largest=False, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([8, 29, 1600],"float32"), 9, axis=-1, largest=False, )
2025-05-27 04:46:57.898613 test begin: paddle.topk(Tensor([8, 30, 5184],"float32"), 9, axis=-1, largest=False, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.topk(Tensor([8, 30, 5184],"float32"), 9, axis=-1, largest=False, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 2 / 2160 (0.1%)
Greatest absolute difference: 395 at index (7, 12, 3) (up to 0.01 allowed)
Greatest relative difference: 0.38349515199661255 at index (7, 12, 4) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([8, 30, 9]), dtype=torch.int64)
First 100 elements: tensor([4084,  894, 3307, 1539, 2102,  320, 2740, 3437,  784, 1191,  587, 1263,
        4903,  668, 4128, 1273, 1319,  883, 2863, 4644,  352, 3357, 1489, 4824,
        4769,  214, 2115,  195, 3747, 1306, 1546,  499, 3203,  690,  161, 3953,
        3424, 4161,  689, 2358, 5044, 2344, 3845, 2317,  181, 3560, 3801, 3135,
         894, 2235, 4371, 4588, 3578, 3872, 1507, 1273, 1077, 2610,  141, 4645,
        4608, 4522, 2881, 1098,   69,  917, 3541,  738,  683, 4901, 1917, 1387,
        3009, 4841, 2041, 3443, 1787, 1830, 3794, 2777,  965,  301, 4977, 4923,
        1713, 4928, 4987, 4645,  706, 1716,  101, 1477, 3260, 2966, 3963,  662,
        1334,  280, 1043, 2777])
DESIRED: (shape=torch.Size([8, 30, 9]), dtype=torch.int64)
First 100 elements: tensor([4084,  894, 3307, 1539, 2102,  320, 2740, 3437,  784, 1191,  587, 1263,
        4903,  668, 4128, 1273, 1319,  883, 2863, 4644,  352, 3357, 1489, 4824,
        4769,  214, 2115,  195, 3747, 1306, 1546,  499, 3203,  690,  161, 3953,
        3424, 4161,  689, 2358, 5044, 2344, 3845, 2317,  181, 3560, 3801, 3135,
         894, 2235, 4371, 4588, 3578, 3872, 1507, 1273, 1077, 2610,  141, 4645,
        4608, 4522, 2881, 1098,   69,  917, 3541,  738,  683, 4901, 1917, 1387,
        3009, 4841, 2041, 3443, 1787, 1830, 3794, 2777,  965,  301, 4977, 4923,
        1713, 4928, 4987, 4645,  706, 1716,  101, 1477, 3260, 2966, 3963,  662,
        1334,  280, 1043, 2777])
2025-05-27 04:46:58.016052 test begin: paddle.topk(Tensor([8, 31, 1600],"float32"), 9, axis=-1, largest=False, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([8, 31, 1600],"float32"), 9, axis=-1, largest=False, )
2025-05-27 04:46:58.111574 test begin: paddle.topk(Tensor([8, 33, 3136],"float32"), 9, axis=-1, largest=False, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([8, 33, 3136],"float32"), 9, axis=-1, largest=False, )
2025-05-27 04:46:58.202402 test begin: paddle.topk(Tensor([8, 33, 441],"float32"), 9, axis=-1, largest=False, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([8, 33, 441],"float32"), 9, axis=-1, largest=False, )
2025-05-27 04:46:58.278715 test begin: paddle.topk(Tensor([8, 35, 3136],"float32"), 9, axis=-1, largest=False, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([8, 35, 3136],"float32"), 9, axis=-1, largest=False, )
2025-05-27 04:46:58.371864 test begin: paddle.topk(Tensor([8, 35, 7744],"float32"), 9, axis=-1, largest=False, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([8, 35, 7744],"float32"), 9, axis=-1, largest=False, )
2025-05-27 04:46:58.483819 test begin: paddle.topk(Tensor([8, 37, 4624],"float32"), 9, axis=-1, largest=False, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([8, 37, 4624],"float32"), 9, axis=-1, largest=False, )
2025-05-27 04:46:58.594659 test begin: paddle.topk(Tensor([8, 37, 6400],"float32"), 9, axis=-1, largest=False, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([8, 37, 6400],"float32"), 9, axis=-1, largest=False, )
2025-05-27 04:46:58.719999 test begin: paddle.topk(Tensor([8, 37, 8464],"float32"), 9, axis=-1, largest=False, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([8, 37, 8464],"float32"), 9, axis=-1, largest=False, )
2025-05-27 04:46:58.843039 test begin: paddle.topk(Tensor([8, 4, 7056],"float32"), 9, axis=-1, largest=False, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([8, 4, 7056],"float32"), 9, axis=-1, largest=False, )
2025-05-27 04:46:58.929245 test begin: paddle.topk(Tensor([8, 41, 7056],"float32"), 9, axis=-1, largest=False, )
element 1 of tensors does not require grad and does not have a grad_fn
[Pass] paddle.topk(Tensor([8, 41, 7056],"float32"), 9, axis=-1, largest=False, )
