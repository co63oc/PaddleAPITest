paddle.vision.ops.deform_conv2d(x=Tensor([20, 64, 152, 272],"float32"), offset=Tensor([20, 18, 152, 272],"float32"), weight=Tensor([64, 64, 3, 3],"float32"), bias=Tensor([64],"float32"), stride=list[1,1,], padding=list[1,1,], dilation=list[1,1,], deformable_groups=1, groups=1, mask=Tensor([20, 9, 152, 272],"float32"), )
paddle.vision.ops.deform_conv2d(x=Tensor([4, 2, 5, 5],"float32"), offset=Tensor([4, 18, 3, 3],"float32"), mask=Tensor([4, 9, 3, 3],"float32"), weight=Tensor([5, 2, 3, 3],"float32"), bias=None, stride=list[1,1,], padding=list[0,0,], dilation=list[1,1,], deformable_groups=1, groups=1, )
paddle.vision.ops.deform_conv2d(x=Tensor([4, 3, 5, 5],"float32"), offset=Tensor([4, 18, 1, 1],"float32"), mask=Tensor([4, 9, 1, 1],"float32"), weight=Tensor([5, 3, 3, 3],"float32"), bias=Tensor([5],"float32"), stride=list[1,1,], padding=list[1,1,], dilation=list[3,3,], deformable_groups=1, groups=1, )
paddle.vision.ops.deform_conv2d(x=Tensor([4, 3, 5, 5],"float32"), offset=Tensor([4, 18, 3, 3],"float32"), mask=Tensor([4, 9, 3, 3],"float32"), weight=Tensor([5, 3, 3, 3],"float32"), bias=Tensor([5],"float32"), stride=list[2,2,], padding=list[1,1,], dilation=list[1,1,], deformable_groups=1, groups=1, )
paddle.vision.ops.deform_conv2d(x=Tensor([4, 3, 5, 5],"float32"), offset=Tensor([4, 18, 5, 7],"float32"), mask=Tensor([4, 9, 5, 7],"float32"), weight=Tensor([5, 3, 3, 3],"float32"), bias=Tensor([5],"float32"), stride=list[1,1,], padding=list[1,2,], dilation=list[1,1,], deformable_groups=1, groups=1, )
paddle.vision.ops.deform_conv2d(x=Tensor([4, 3, 5, 5],"float32"), offset=Tensor([4, 18, 7, 7],"float32"), mask=Tensor([4, 9, 7, 7],"float32"), weight=Tensor([5, 3, 3, 3],"float32"), bias=None, stride=list[1,1,], padding=list[2,2,], dilation=list[1,1,], deformable_groups=1, groups=1, )
paddle.vision.ops.deform_conv2d(x=Tensor([4, 3, 5, 5],"float32"), offset=Tensor([4, 18, 7, 7],"float32"), mask=Tensor([4, 9, 7, 7],"float32"), weight=Tensor([5, 3, 3, 3],"float32"), bias=Tensor([5],"float32"), stride=list[1,1,], padding=list[2,2,], dilation=list[1,1,], deformable_groups=1, groups=1, )
paddle.vision.ops.deform_conv2d(x=Tensor([4, 5, 5, 5],"float32"), offset=Tensor([4, 18, 5, 5],"float32"), mask=Tensor([4, 9, 5, 5],"float32"), weight=Tensor([5, 1, 3, 3],"float32"), bias=Tensor([5],"float32"), stride=list[1,1,], padding=list[1,1,], dilation=list[1,1,], deformable_groups=1, groups=5, )
paddle.vision.ops.deform_conv2d(x=Tensor([4, 5, 5, 5],"float32"), offset=Tensor([4, 90, 5, 5],"float32"), mask=Tensor([4, 45, 5, 5],"float32"), weight=Tensor([5, 5, 3, 3],"float32"), bias=Tensor([5],"float32"), stride=list[1,1,], padding=list[1,1,], dilation=list[1,1,], deformable_groups=5, groups=1, )

grep: warning: GREP_OPTIONS is deprecated; please use an alias or script
2025-05-21 08:43:08.535920 test begin: paddle.vision.ops.deform_conv2d(x=Tensor([20, 64, 152, 272],"float32"), offset=Tensor([20, 18, 152, 272],"float32"), weight=Tensor([64, 64, 3, 3],"float32"), bias=Tensor([64],"float32"), stride=list[1,1,], padding=list[1,1,], dilation=list[1,1,], deformable_groups=1, groups=1, mask=Tensor([20, 9, 152, 272],"float32"), )
W0521 08:43:45.241937 45329 gpu_resources.cc:119] Please NOTE: device: 0, GPU Compute Capability: 8.0, Driver API Version: 12.0, Runtime API Version: 11.8
W0521 08:43:45.243911 45329 gpu_resources.cc:164] device: 0, cuDNN Version: 8.8.
[accuracy error] backward  paddle.vision.ops.deform_conv2d(x=Tensor([20, 64, 152, 272],"float32"), offset=Tensor([20, 18, 152, 272],"float32"), weight=Tensor([64, 64, 3, 3],"float32"), bias=Tensor([64],"float32"), stride=list[1,1,], padding=list[1,1,], dilation=list[1,1,], deformable_groups=1, groups=1, mask=Tensor([20, 9, 152, 272],"float32"), ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 3 / 36864 (0.00814%)
Max absolute difference: 0.01779032
Max relative difference: 13.545732
 x: array([[[[ 2.971780e+01,  1.159246e+01, -7.984993e+00],
         [-1.274080e+01, -8.591767e+00, -1.854625e+00],
         [-4.261632e-01, -1.454744e+01, -1.468906e+01]],...
 y: array([[[[ 2.971580e+01,  1.159317e+01, -7.987920e+00],
         [-1.274345e+01, -8.590802e+00, -1.858584e+00],
         [-4.239268e-01, -1.454945e+01, -1.469398e+01]],...
2025-05-21 08:43:49.598667 test begin: paddle.vision.ops.deform_conv2d(x=Tensor([4, 2, 5, 5],"float32"), offset=Tensor([4, 18, 3, 3],"float32"), mask=Tensor([4, 9, 3, 3],"float32"), weight=Tensor([5, 2, 3, 3],"float32"), bias=None, stride=list[1,1,], padding=list[0,0,], dilation=list[1,1,], deformable_groups=1, groups=1, )
[accuracy error] backward  paddle.vision.ops.deform_conv2d(x=Tensor([4, 2, 5, 5],"float32"), offset=Tensor([4, 18, 3, 3],"float32"), mask=Tensor([4, 9, 3, 3],"float32"), weight=Tensor([5, 2, 3, 3],"float32"), bias=None, stride=list[1,1,], padding=list[0,0,], dilation=list[1,1,], deformable_groups=1, groups=1, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (4, 9, 3, 3), (5, 2, 3, 3) mismatch)
 x: array([[[[ 1.784961e-02,  5.988837e-02,  1.495079e-02],
         [ 6.707181e-03, -8.006322e-04,  1.742447e-02],
         [ 3.399988e-02, -6.582008e-03,  2.298437e-02]],...
 y: array([[[[ 0.001317, -0.032134,  0.106727],
         [-0.050453, -0.204407,  0.01069 ],
         [-0.025429, -0.055881,  0.159878]],...
2025-05-21 08:43:49.807756 test begin: paddle.vision.ops.deform_conv2d(x=Tensor([4, 3, 5, 5],"float32"), offset=Tensor([4, 18, 1, 1],"float32"), mask=Tensor([4, 9, 1, 1],"float32"), weight=Tensor([5, 3, 3, 3],"float32"), bias=Tensor([5],"float32"), stride=list[1,1,], padding=list[1,1,], dilation=list[3,3,], deformable_groups=1, groups=1, )
[accuracy error] backward  paddle.vision.ops.deform_conv2d(x=Tensor([4, 3, 5, 5],"float32"), offset=Tensor([4, 18, 1, 1],"float32"), mask=Tensor([4, 9, 1, 1],"float32"), weight=Tensor([5, 3, 3, 3],"float32"), bias=Tensor([5],"float32"), stride=list[1,1,], padding=list[1,1,], dilation=list[3,3,], deformable_groups=1, groups=1, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (4, 9, 1, 1), (5, 3, 3, 3) mismatch)
 x: array([[[[ 8.511920e-03]],

        [[ 0.000000e+00]],...
 y: array([[[[ 8.326138e-03,  0.000000e+00,  2.241961e-04],
         [-6.251679e-04,  4.996099e-02, -3.608141e-05],
         [ 0.000000e+00,  2.279738e-04,  1.956385e-03]],...
2025-05-21 08:43:50.320120 test begin: paddle.vision.ops.deform_conv2d(x=Tensor([4, 3, 5, 5],"float32"), offset=Tensor([4, 18, 3, 3],"float32"), mask=Tensor([4, 9, 3, 3],"float32"), weight=Tensor([5, 3, 3, 3],"float32"), bias=Tensor([5],"float32"), stride=list[2,2,], padding=list[1,1,], dilation=list[1,1,], deformable_groups=1, groups=1, )
[accuracy error] backward  paddle.vision.ops.deform_conv2d(x=Tensor([4, 3, 5, 5],"float32"), offset=Tensor([4, 18, 3, 3],"float32"), mask=Tensor([4, 9, 3, 3],"float32"), weight=Tensor([5, 3, 3, 3],"float32"), bias=Tensor([5],"float32"), stride=list[2,2,], padding=list[1,1,], dilation=list[1,1,], deformable_groups=1, groups=1, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (4, 9, 3, 3), (5, 3, 3, 3) mismatch)
 x: array([[[[ 2.249190e-03,  0.000000e+00,  0.000000e+00],
         [ 2.669204e-03,  4.966034e-02, -1.170427e-01],
         [ 0.000000e+00,  5.995804e-03, -3.385958e-02]],...
 y: array([[[[-0.038972, -0.037616,  0.05561 ],
         [ 0.071878,  0.065215,  0.071099],
         [-0.125274,  0.070751, -0.055378]],...
2025-05-21 08:43:50.939873 test begin: paddle.vision.ops.deform_conv2d(x=Tensor([4, 3, 5, 5],"float32"), offset=Tensor([4, 18, 5, 7],"float32"), mask=Tensor([4, 9, 5, 7],"float32"), weight=Tensor([5, 3, 3, 3],"float32"), bias=Tensor([5],"float32"), stride=list[1,1,], padding=list[1,2,], dilation=list[1,1,], deformable_groups=1, groups=1, )
[accuracy error] backward  paddle.vision.ops.deform_conv2d(x=Tensor([4, 3, 5, 5],"float32"), offset=Tensor([4, 18, 5, 7],"float32"), mask=Tensor([4, 9, 5, 7],"float32"), weight=Tensor([5, 3, 3, 3],"float32"), bias=Tensor([5],"float32"), stride=list[1,1,], padding=list[1,2,], dilation=list[1,1,], deformable_groups=1, groups=1, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (4, 9, 5, 7), (5, 3, 3, 3) mismatch)
 x: array([[[[ 0.000000e+00,  0.000000e+00, -3.593663e-04, ...,
           0.000000e+00,  1.332427e-02,  0.000000e+00],
         [ 0.000000e+00,  0.000000e+00,  7.673029e-03, ...,...
 y: array([[[[ 9.816624e-02, -1.248480e-01, -4.919539e-02],
         [ 2.570317e-01, -3.306159e-02,  1.954320e-02],
         [ 1.680451e-01, -1.106993e-01,  8.574890e-02]],...
2025-05-21 08:43:51.120741 test begin: paddle.vision.ops.deform_conv2d(x=Tensor([4, 3, 5, 5],"float32"), offset=Tensor([4, 18, 7, 7],"float32"), mask=Tensor([4, 9, 7, 7],"float32"), weight=Tensor([5, 3, 3, 3],"float32"), bias=None, stride=list[1,1,], padding=list[2,2,], dilation=list[1,1,], deformable_groups=1, groups=1, )
[accuracy error] backward  paddle.vision.ops.deform_conv2d(x=Tensor([4, 3, 5, 5],"float32"), offset=Tensor([4, 18, 7, 7],"float32"), mask=Tensor([4, 9, 7, 7],"float32"), weight=Tensor([5, 3, 3, 3],"float32"), bias=None, stride=list[1,1,], padding=list[2,2,], dilation=list[1,1,], deformable_groups=1, groups=1, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (4, 9, 7, 7), (5, 3, 3, 3) mismatch)
 x: array([[[[ 0.000000e+00,  0.000000e+00,  0.000000e+00, ...,
           0.000000e+00,  0.000000e+00,  0.000000e+00],
         [ 0.000000e+00,  0.000000e+00,  1.877399e-03, ...,...
 y: array([[[[ 0.113666, -0.01933 ,  0.133023],
         [ 0.028934, -0.384242, -0.584606],
         [-0.012801,  0.171194, -0.067139]],...
2025-05-21 08:43:51.276579 test begin: paddle.vision.ops.deform_conv2d(x=Tensor([4, 3, 5, 5],"float32"), offset=Tensor([4, 18, 7, 7],"float32"), mask=Tensor([4, 9, 7, 7],"float32"), weight=Tensor([5, 3, 3, 3],"float32"), bias=Tensor([5],"float32"), stride=list[1,1,], padding=list[2,2,], dilation=list[1,1,], deformable_groups=1, groups=1, )
[accuracy error] backward  paddle.vision.ops.deform_conv2d(x=Tensor([4, 3, 5, 5],"float32"), offset=Tensor([4, 18, 7, 7],"float32"), mask=Tensor([4, 9, 7, 7],"float32"), weight=Tensor([5, 3, 3, 3],"float32"), bias=Tensor([5],"float32"), stride=list[1,1,], padding=list[2,2,], dilation=list[1,1,], deformable_groups=1, groups=1, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (4, 9, 7, 7), (5, 3, 3, 3) mismatch)
 x: array([[[[ 0.000000e+00,  0.000000e+00,  0.000000e+00, ...,
           0.000000e+00,  0.000000e+00,  0.000000e+00],
         [ 0.000000e+00,  0.000000e+00, -5.312191e-02, ...,...
 y: array([[[[ 0.145893,  0.079346,  0.040569],
         [ 0.027619,  0.056584,  0.007517],
         [ 0.338648,  0.146461,  0.054745]],...
2025-05-21 08:43:51.442909 test begin: paddle.vision.ops.deform_conv2d(x=Tensor([4, 5, 5, 5],"float32"), offset=Tensor([4, 18, 5, 5],"float32"), mask=Tensor([4, 9, 5, 5],"float32"), weight=Tensor([5, 1, 3, 3],"float32"), bias=Tensor([5],"float32"), stride=list[1,1,], padding=list[1,1,], dilation=list[1,1,], deformable_groups=1, groups=5, )
[accuracy error] backward  paddle.vision.ops.deform_conv2d(x=Tensor([4, 5, 5, 5],"float32"), offset=Tensor([4, 18, 5, 5],"float32"), mask=Tensor([4, 9, 5, 5],"float32"), weight=Tensor([5, 1, 3, 3],"float32"), bias=Tensor([5],"float32"), stride=list[1,1,], padding=list[1,1,], dilation=list[1,1,], deformable_groups=1, groups=5, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (4, 9, 5, 5), (5, 1, 3, 3) mismatch)
 x: array([[[[ 4.363607e-03,  0.000000e+00,  0.000000e+00,  0.000000e+00,
           3.184584e-02],
         [ 0.000000e+00,  2.474267e-02,  1.615973e-02,  1.936315e-03,...
 y: array([[[[ 0.040445,  0.069873,  0.061732],
         [-0.076503,  0.031774, -0.371362],
         [ 0.1135  ,  0.153996,  0.158946]]],...
2025-05-21 08:43:52.000747 test begin: paddle.vision.ops.deform_conv2d(x=Tensor([4, 5, 5, 5],"float32"), offset=Tensor([4, 90, 5, 5],"float32"), mask=Tensor([4, 45, 5, 5],"float32"), weight=Tensor([5, 5, 3, 3],"float32"), bias=Tensor([5],"float32"), stride=list[1,1,], padding=list[1,1,], dilation=list[1,1,], deformable_groups=5, groups=1, )
[accuracy error] backward  paddle.vision.ops.deform_conv2d(x=Tensor([4, 5, 5, 5],"float32"), offset=Tensor([4, 90, 5, 5],"float32"), mask=Tensor([4, 45, 5, 5],"float32"), weight=Tensor([5, 5, 3, 3],"float32"), bias=Tensor([5],"float32"), stride=list[1,1,], padding=list[1,1,], dilation=list[1,1,], deformable_groups=5, groups=1, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (4, 45, 5, 5), (5, 5, 3, 3) mismatch)
 x: array([[[[ 0.000000e+00,  0.000000e+00,  4.438948e-03, -2.502007e-03,
           1.280554e-03],
         [ 1.983324e-02,  6.896494e-04,  1.094542e-03,  7.774091e-03,...
 y: array([[[[ 3.055984e-03,  2.939031e-02, -1.799880e-01],
         [ 5.235967e-02, -4.963563e-02, -5.946479e-02],
         [-3.959781e-02, -8.841089e-02, -2.119143e-01]],...
