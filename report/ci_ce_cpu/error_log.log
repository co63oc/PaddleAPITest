2025-06-09 23:16:05.160023 GPU 7 128187 test begin: paddle.Tensor.__mul__(Tensor([1, 1024, 32, 128],"bfloat16"), Tensor([1, 1024, 1, 128],"bfloat16"), )
[accuracy error] backward  paddle.Tensor.__mul__(Tensor([1, 1024, 32, 128],"bfloat16"), Tensor([1, 1024, 1, 128],"bfloat16"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 118 / 131072 (0.1%)
Greatest absolute difference: 0.0390625 at index (0, 471, 0, 46) (up to 0.01 allowed)
Greatest relative difference: 0.4482758641242981 at index (0, 17, 0, 72) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 1024, 1, 128]), dtype=torch.float32)
tensor([[[[-0.3086, -0.6797, -0.1216,  ..., -0.3398, -0.3066,  0.3457]],

         [[ 0.2539, -0.1406, -0.1943,  ..., -0.9141,  0.6445, -0.2949]],

         [[ 0.4473, -0.1904,  0.2988,  ..., -0.4102, -0.1582,  0.3145]],

         ...,

         [[-0.0615, -0.2061, -0.1562,  ..., -0.2051, -0.0039,  0.4258]],

         [[-0.1797,  0.1602, -0.5508,  ...,  1.1797,  0.7461, -0.3906]],

         [[ 0.0505, -0.2256, -0.4531,  ...,  0.2676,  0.4141,  0.1660]]]])
DESIRED: (shape=torch.Size([1, 1024, 1, 128]), dtype=torch.float32)
tensor([[[[-0.3066, -0.6836, -0.1230,  ..., -0.3398, -0.3086,  0.3477]],

         [[ 0.2520, -0.1377, -0.1934,  ..., -0.9219,  0.6445, -0.2988]],

         [[ 0.4512, -0.1885,  0.3027,  ..., -0.4102, -0.1582,  0.3145]],

         ...,

         [[-0.0615, -0.2061, -0.1572,  ..., -0.2051, -0.0040,  0.4277]],

         [[-0.1787,  0.1592, -0.5469,  ...,  1.1719,  0.7500, -0.3887]],

         [[ 0.0474, -0.2266, -0.4551,  ...,  0.2715,  0.4160,  0.1689]]]])

2025-06-09 23:16:05.221544 GPU 4 128181 test begin: paddle.Tensor.__mul__(Tensor([8, 8],"float16"), 1000000.0, )
[accuracy error] paddle.Tensor.__mul__(Tensor([8, 8],"float16"), 1000000.0, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 10 / 64 (15.6%)
Greatest absolute difference: inf at index (2, 1) (up to 0.01 allowed)
Greatest relative difference: inf at index (2, 1) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([8, 8]), dtype=torch.float16)
tensor([[-inf, -inf, inf, -inf, inf, -inf, inf, inf],
        [inf, -inf, -inf, -inf, inf, -inf, inf, inf],
        [inf, inf, -inf, -inf, inf, inf, -inf, inf],
        [-inf, inf, inf, inf, -inf, inf, -inf, inf],
        [-inf, inf, inf, -inf, inf, inf, -inf, -inf],
        [inf, -inf, -inf, inf, inf, -inf, inf, -inf],
        [-inf, inf, -inf, -inf, inf, inf, -inf, -inf],
        [inf, inf, -inf, -inf, inf, inf, -inf, -inf]], dtype=torch.float16)
DESIRED: (shape=torch.Size([8, 8]), dtype=torch.float16)
tensor([[   -inf,    -inf,     inf,    -inf,     inf,    -inf,     inf,     inf],
        [    inf,    -inf,    -inf,    -inf,     inf,    -inf,     inf,     inf],
        [    inf,  61696.,    -inf, -26832.,     inf,     inf,    -inf,  62432.],
        [   -inf,     inf,     inf,     inf,    -inf,     inf,    -inf,     inf],
        [   -inf,     inf,  29520.,    -inf,  43328.,     inf,    -inf,    -inf],
        [    inf, -54432., -56256.,     inf,     inf,    -inf,     inf,    -inf],
        [   -inf,     inf,    -inf,  -5012.,  31456.,     inf,    -inf,    -inf],
        [    inf,     inf,    -inf,    -inf,     inf,  58368.,    -inf,    -inf]], dtype=torch.float16)

2025-06-09 23:16:06.648431 GPU 4 128186 test begin: paddle.Tensor.astype(Tensor([32, 128],"int64"), Dtype(float16), )
element 0 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.astype(Tensor([32, 128],"int64"), Dtype(float16), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 3 / 4096 (0.1%)
Greatest absolute difference: inf at index (10, 13) (up to 0.01 allowed)
Greatest relative difference: inf at index (10, 13) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([32, 128]), dtype=torch.float16)
tensor([[-39616., -20048.,  -7280.,  ..., -13032., -60800., -54432.],
        [-40576., -44000.,  45888.,  ...,  39456.,  -9696.,  41440.],
        [ 47136.,  42816., -56640.,  ...,  26896., -28640.,  55776.],
        ...,
        [-14672.,  11848.,  44384.,  ...,  -9992., -61984., -55168.],
        [-55328., -62880.,  -1887.,  ...,  36416., -41824., -55040.],
        [-53760.,  54080., -30672.,  ..., -58240.,  56096.,  28656.]], dtype=torch.float16)
DESIRED: (shape=torch.Size([32, 128]), dtype=torch.float16)
tensor([[-39616., -20064.,  -7280.,  ..., -13040., -60832., -54432.],
        [-40608., -44000.,  45888.,  ...,  39488.,  -9696.,  41440.],
        [ 47136.,  42848., -56672.,  ...,  26896., -28656.,  55808.],
        ...,
        [-14680.,  11848.,  44416.,  ..., -10000., -62016., -55200.],
        [-55328., -62880.,  -1887.,  ...,  36448., -41824., -55072.],
        [-53792.,  54080., -30672.,  ..., -58240.,  56128.,  28656.]], dtype=torch.float16)

2025-06-09 23:16:06.758850 GPU 4 128204 test begin: paddle.Tensor.astype(Tensor([32, 16, 1024],"int64"), Dtype(float16), )
element 0 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.astype(Tensor([32, 16, 1024],"int64"), Dtype(float16), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 119 / 524288 (0.0%)
Greatest absolute difference: inf at index (0, 0, 715) (up to 0.01 allowed)
Greatest relative difference: inf at index (0, 0, 715) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([32, 16, 1024]), dtype=torch.float16)
tensor([[[-54784.,  47968.,  37632.,  ..., -49664.,  65088., -30064.],
         [-48384., -41024., -30688.,  ...,   3852., -22384., -10784.],
         [-55424., -61920.,  18000.,  ..., -62080.,  26928.,  14720.],
         ...,
         [-59296., -19344.,  27456.,  ...,  61312., -45568., -14704.],
         [ 63040.,  -6876., -22384.,  ...,  59936., -20448.,  -3478.],
         [ 13280.,  -3648.,  21088.,  ...,  39712., -62720., -18688.]],

        [[ 53568.,  19872., -63936.,  ..., -63488.,  52352.,  16784.],
         [ -9800., -59264.,  31952.,  ...,  39040.,   1598., -27728.],
         [-28768., -20096., -22624.,  ...,  21952.,  49600., -64896.],
         ...,
         [-37824.,   7576.,  41600.,  ..., -34112., -24496.,  45376.],
         [ 31920.,  19280., -38720.,  ..., -26112., -39904.,  46016.],
         [-35264., -35072., -52416.,  ..., -29520.,  49600.,  47680.]],

        [[-50080., -43168.,  40224.,  ...,  32064.,  47264.,  43648.],
         [-26624.,  51104.,  28080.,  ..., -47136., -45312.,  36960.],
         [-41952., -23104., -65120.,  ..., -17056., -21520., -26016.],
         ...,
         [ 41440., -15944., -54048.,  ...,  14776., -30960.,  34400.],
         [  6436., -63232., -52192.,  ...,  59744.,  -1891.,  52640.],
         [ 13120.,  61696., -20464.,  ...,  60960., -11616., -31536.]],

        ...,

        [[ 15992.,  39520.,  48352.,  ...,  34336., -45536., -32864.],
         [-20976., -54752.,  54176.,  ..., -44288., -65312., -49248.],
         [ 49536.,  17968.,  20560.,  ...,  54656., -58080.,  42112.],
         ...,
         [  1235.,  37984., -53920.,  ..., -20704.,   9224., -22752.],
         [-33248., -57120., -28592.,  ...,  37536., -48672.,   -695.],
         [ 40352.,  60288., -58368.,  ...,  61504.,   7100., -44384.]],

        [[-56256.,  -4476.,  18352.,  ...,  44960., -54400.,   6276.],
         [-25856., -64704.,  37440.,  ..., -35680.,  38304., -35872.],
         [ 18880.,  50240.,  39488.,  ..., -37504., -51104.,  14200.],
         ...,
         [ 33408.,   -778.,  55232.,  ...,   1072.,   1986., -16416.],
         [ -3678., -64224., -12112.,  ..., -49504.,  11328., -19712.],
         [ 25056.,  31120.,  62560.,  ..., -16592.,  11056.,  29504.]],

        [[-49088.,  51648., -42880.,  ..., -56320., -26656.,  32896.],
         [-29648., -13328.,  47104.,  ..., -64608.,  32480.,  62528.],
         [ 30496., -59040.,  44736.,  ...,  41760.,  26304.,  16112.],
         ...,
         [  -965.,  43680.,  23536.,  ...,  14272., -55680.,  50112.],
         [-11936., -52544., -20288.,  ...,  21760.,   4800.,  42304.],
         [ 52032.,  -9680.,  15520.,  ...,  43872.,  -5688., -13120.]]], dtype=torch.float16)
DESIRED: (shape=torch.Size([32, 16, 1024]), dtype=torch.float16)
tensor([[[-54816.,  48000.,  37632.,  ..., -49696.,  65120., -30064.],
         [-48416., -41056., -30688.,  ...,   3852., -22400., -10784.],
         [-55424., -61952.,  18016.,  ..., -62080.,  26944.,  14720.],
         ...,
         [-59296., -19360.,  27472.,  ...,  61312., -45568., -14712.],
         [ 63040.,  -6880., -22400.,  ...,  59936., -20448.,  -3480.],
         [ 13288.,  -3648.,  21088.,  ...,  39744., -62720., -18688.]],

        [[ 53568.,  19872., -63936.,  ..., -63520.,  52352.,  16800.],
         [ -9800., -59264.,  31952.,  ...,  39040.,   1598., -27728.],
         [-28784., -20096., -22624.,  ...,  21968.,  49600., -64928.],
         ...,
         [-37856.,   7576.,  41600.,  ..., -34112., -24512.,  45376.],
         [ 31920.,  19296., -38720.,  ..., -26128., -39904.,  46016.],
         [-35264., -35104., -52448.,  ..., -29536.,  49632.,  47680.]],

        [[-50112., -43168.,  40256.,  ...,  32080.,  47296.,  43680.],
         [-26640.,  51136.,  28080.,  ..., -47168., -45344.,  36992.],
         [-41984., -23120., -65120.,  ..., -17056., -21520., -26032.],
         ...,
         [ 41440., -15952., -54080.,  ...,  14784., -30976.,  34432.],
         [  6436., -63232., -52192.,  ...,  59744.,  -1891.,  52672.],
         [ 13128.,  61696., -20464.,  ...,  60992., -11616., -31552.]],

        ...,

        [[ 15992.,  39520.,  48352.,  ...,  34336., -45536., -32896.],
         [-20976., -54752.,  54176.,  ..., -44320., -65344., -49248.],
         [ 49536.,  17984.,  20576.,  ...,  54656., -58112.,  42144.],
         ...,
         [  1235.,  37984., -53952.,  ..., -20704.,   9232., -22752.],
         [-33280., -57152., -28592.,  ...,  37568., -48672.,   -695.],
         [ 40352.,  60320., -58368.,  ...,  61536.,   7100., -44416.]],

        [[-56256.,  -4480.,  18352.,  ...,  44960., -54400.,   6280.],
         [-25872., -64704.,  37440.,  ..., -35712.,  38336., -35872.],
         [ 18880.,  50272.,  39488.,  ..., -37536., -51136.,  14208.],
         ...,
         [ 33408.,   -778.,  55264.,  ...,   1072.,   1986., -16416.],
         [ -3680., -64224., -12120.,  ..., -49536.,  11336., -19712.],
         [ 25072.,  31136.,  62560.,  ..., -16592.,  11064.,  29504.]],

        [[-49088.,  51680., -42880.,  ..., -56352., -26672.,  32928.],
         [-29648., -13328.,  47136.,  ..., -64640.,  32496.,  62528.],
         [ 30496., -59040.,  44768.,  ...,  41760.,  26320.,  16112.],
         ...,
         [  -965.,  43712.,  23536.,  ...,  14272., -55680.,  50144.],
         [-11936., -52576., -20288.,  ...,  21760.,   4800.,  42304.],
         [ 52064.,  -9680.,  15520.,  ...,  43904.,  -5688., -13120.]]], dtype=torch.float16)

2025-06-09 23:16:06.851764 GPU 5 128179 test begin: paddle.Tensor.astype(Tensor([32, 3, 1024],"int64"), Dtype(float16), )
element 0 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.astype(Tensor([32, 3, 1024],"int64"), Dtype(float16), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 17 / 98304 (0.0%)
Greatest absolute difference: inf at index (0, 0, 715) (up to 0.01 allowed)
Greatest relative difference: inf at index (0, 0, 715) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([32, 3, 1024]), dtype=torch.float16)
tensor([[[-40608.,  48096., -46688.,  ..., -56832., -30416.,  29360.],
         [ -4804.,  15048.,  28272.,  ..., -43136., -31088., -42432.],
         [  2192., -65408.,    707.,  ...,  -4644.,  -3738., -41760.]],

        [[-14768.,  14008., -37696.,  ..., -30976., -48800.,  37536.],
         [ 16384.,  49664., -33120.,  ..., -37792., -19344.,   4024.],
         [ 23040.,  57856., -57504.,  ..., -26096.,  -8280.,  47552.]],

        [[ 19120.,  18512.,  30000.,  ...,  24304.,  21488.,  -6520.],
         [ 50560., -60608., -40160.,  ...,  35008.,   -435.,  19184.],
         [ 21392., -10840., -49280.,  ...,  47296., -11384.,  18400.]],

        ...,

        [[-22224.,  33056.,  52384.,  ...,  27952., -31456.,  61792.],
         [-64256., -46496.,  38048.,  ...,  53408.,   9032.,  60224.],
         [-62496.,  30320.,  15616.,  ...,  37248.,  -5988.,  40736.]],

        [[ -4108.,  38848.,  13400.,  ...,  41600., -28432., -53440.],
         [-58144.,  27008., -37632.,  ..., -35456., -43488., -16864.],
         [ 21856.,  41728.,  -1779.,  ...,  -4328., -61568., -57440.]],

        [[-50880.,   6680.,  -6200.,  ...,  63712.,   -984.,   2810.],
         [-53408., -12736.,  43904.,  ...,  -7472., -16736.,  18208.],
         [-52832., -13552., -46496.,  ...,   4164.,  20944., -33312.]]], dtype=torch.float16)
DESIRED: (shape=torch.Size([32, 3, 1024]), dtype=torch.float16)
tensor([[[-40608.,  48096., -46688.,  ..., -56832., -30432.,  29360.],
         [ -4808.,  15056.,  28272.,  ..., -43168., -31104., -42464.],
         [  2192., -65408.,    707.,  ...,  -4644.,  -3738., -41792.]],

        [[-14768.,  14016., -37696.,  ..., -30992., -48832.,  37568.],
         [ 16384.,  49696., -33152.,  ..., -37824., -19344.,   4024.],
         [ 23056.,  57856., -57536.,  ..., -26096.,  -8280.,  47584.]],

        [[ 19120.,  18528.,  30000.,  ...,  24320.,  21504.,  -6520.],
         [ 50560., -60640., -40192.,  ...,  35040.,   -435.,  19184.],
         [ 21408., -10840., -49312.,  ...,  47296., -11384.,  18416.]],

        ...,

        [[-22240.,  33056.,  52416.,  ...,  27968., -31472.,  61792.],
         [-64256., -46496.,  38080.,  ...,  53440.,   9040.,  60256.],
         [-62528.,  30320.,  15616.,  ...,  37248.,  -5992.,  40736.]],

        [[ -4112.,  38880.,  13400.,  ...,  41632., -28432., -53472.],
         [-58176.,  27008., -37632.,  ..., -35456., -43520., -16864.],
         [ 21856.,  41728.,  -1779.,  ...,  -4332., -61568., -57472.]],

        [[-50912.,   6680.,  -6200.,  ...,  63712.,   -984.,   2812.],
         [-53440., -12736.,  43936.,  ...,  -7476., -16736.,  18224.],
         [-52864., -13552., -46528.,  ...,   4168.,  20944., -33312.]]], dtype=torch.float16)

2025-06-09 23:16:06.909147 GPU 7 128205 test begin: paddle.Tensor.cast(Tensor([2, 3, 32, 128],"int32"), Dtype(float16), )
element 0 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.cast(Tensor([2, 3, 32, 128],"int32"), Dtype(float16), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 6 / 24576 (0.0%)
Greatest absolute difference: inf at index (0, 1, 17, 34) (up to 0.01 allowed)
Greatest relative difference: inf at index (0, 1, 17, 34) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2, 3, 32, 128]), dtype=torch.float16)
tensor([[[[-8.8400e+03,  2.4032e+04, -4.6048e+04,  ...,  2.6112e+04,  5.4944e+04,  6.0192e+04],
          [-3.5800e+03, -2.3088e+04,  2.4416e+04,  ...,  5.2544e+04,  1.0056e+04,  2.1600e+03],
          [-6.1400e+03,  6.1400e+02,  5.8432e+04,  ..., -2.1900e+03,  5.8840e+03,  4.8384e+04],
          ...,
          [ 7.0200e+03, -3.0384e+04, -6.1504e+04,  ..., -3.4720e+04, -2.3248e+04, -6.0288e+04],
          [ 7.5480e+03, -5.6416e+04,  6.0224e+04,  ..., -1.1944e+04, -1.2620e+03,  2.4608e+04],
          [ 2.9648e+04,  3.5808e+04,  6.2304e+04,  ..., -1.8528e+04,  5.6352e+04,  5.0880e+04]],

         [[ 9.8480e+03,  8.5760e+03, -4.0352e+04,  ...,  4.1568e+04, -3.7248e+04,  5.9872e+04],
          [-1.4912e+04, -3.7792e+04, -5.9712e+04,  ...,  5.4784e+04,  3.7780e+03,  2.8960e+04],
          [ 1.2680e+04, -2.0260e+03,  3.4432e+04,  ...,  5.9968e+04,  1.0000e+04,  5.7984e+04],
          ...,
          [ 5.1968e+04,  4.5000e+01,  2.2900e+03,  ...,  4.9320e+03,  7.4520e+03, -2.1696e+04],
          [-5.2608e+04,  4.7296e+04, -6.0608e+04,  ...,  9.8480e+03, -2.9216e+04, -4.4384e+04],
          [ 3.4368e+04, -2.2992e+04,  2.7968e+04,  ...,  2.6420e+03,  6.0352e+04,  5.8592e+04]],

         [[ 1.6360e+04, -4.6016e+04, -5.5072e+04,  ..., -5.0176e+04, -2.0480e+04,  1.8336e+04],
          [-2.3488e+04, -1.6200e+02, -3.0928e+04,  ...,  4.7360e+04,  3.8432e+04,  2.3408e+04],
          [ 5.7376e+04,  1.9680e+04, -6.2624e+04,  ...,  4.0512e+04,  2.0480e+04,  5.8688e+04],
          ...,
          [ 5.1456e+04,  1.0456e+04, -1.6328e+04,  ...,  2.8256e+04,  3.3792e+04, -4.3840e+04],
          [-1.2016e+04,  3.3312e+04,  5.7888e+04,  ..., -2.8064e+04,  4.5664e+04, -3.4784e+04],
          [ 2.5168e+04, -6.5248e+04,  5.2384e+04,  ..., -4.9184e+04, -7.6640e+03, -3.2400e+04]]],


        [[[ 2.7680e+04,  9.8160e+03, -3.7600e+04,  ...,  1.9408e+04,  2.3024e+04, -5.5072e+04],
          [-5.7824e+04,  3.7100e+02, -3.6416e+04,  ...,  1.3712e+04, -2.0960e+04,  1.8208e+04],
          [ 3.0784e+04,  1.9904e+04, -3.9104e+04,  ...,  2.2448e+04,  5.8480e+03, -2.8960e+04],
          ...,
          [-4.8768e+04, -6.3520e+04, -2.2416e+04,  ..., -8.6480e+03, -1.7392e+04, -1.8240e+04],
          [-3.6192e+04,  3.5648e+04,  1.1880e+04,  ...,  3.5648e+04,  3.7376e+04, -6.1248e+04],
          [-3.2720e+03, -9.5760e+03,  1.0864e+04,  ..., -4.1720e+03,  2.7040e+04,  6.0768e+04]],

         [[-2.6960e+04, -6.0416e+04,  2.9840e+04,  ..., -6.1888e+04,  6.0544e+04,  2.7488e+04],
          [-1.8416e+04, -1.4704e+04, -6.4096e+04,  ...,  4.1312e+04,  5.7984e+04, -2.2128e+04],
          [-6.5152e+04, -6.4288e+04, -5.2064e+04,  ..., -1.9568e+04, -3.6928e+04, -2.6672e+04],
          ...,
          [ 6.0128e+04, -5.3560e+03,  2.5504e+04,  ..., -5.9120e+03,  4.4720e+03, -6.4960e+03],
          [ 4.9568e+04,  6.0960e+04,  4.2848e+04,  ...,  2.2512e+04,  3.0208e+04,  2.6096e+04],
          [ 5.8176e+04,  3.8304e+04,  2.4544e+04,  ...,  5.6448e+04,  6.0672e+04, -2.0000e+04]],

         [[-8.8560e+03,  6.0160e+03, -6.0768e+04,  ..., -1.6576e+04, -1.3136e+04, -2.1648e+04],
          [-3.3380e+03, -4.6784e+04,  6.4576e+04,  ...,  4.1408e+04,  5.4720e+04,  6.1888e+04],
          [-1.9328e+04,  3.9264e+04,  4.6480e+03,  ...,  5.0688e+04, -6.1472e+04, -4.2304e+04],
          ...,
          [-2.7328e+04, -1.6070e+03, -4.8224e+04,  ..., -8.6480e+03,  3.2540e+03,  2.2080e+04],
          [-3.3344e+04,  6.3296e+04, -3.9968e+04,  ..., -2.9472e+04,  1.5760e+04,  6.5216e+04],
          [-4.8576e+04,  6.0416e+04, -2.3840e+04,  ...,  4.6496e+04,  4.3520e+04, -4.6432e+04]]]], dtype=torch.float16)
DESIRED: (shape=torch.Size([2, 3, 32, 128]), dtype=torch.float16)
tensor([[[[-8.8480e+03,  2.4032e+04, -4.6048e+04,  ...,  2.6128e+04,  5.4976e+04,  6.0192e+04],
          [-3.5800e+03, -2.3104e+04,  2.4416e+04,  ...,  5.2544e+04,  1.0064e+04,  2.1600e+03],
          [-6.1400e+03,  6.1400e+02,  5.8464e+04,  ..., -2.1920e+03,  5.8880e+03,  4.8384e+04],
          ...,
          [ 7.0200e+03, -3.0400e+04, -6.1536e+04,  ..., -3.4752e+04, -2.3248e+04, -6.0288e+04],
          [ 7.5520e+03, -5.6416e+04,  6.0256e+04,  ..., -1.1952e+04, -1.2620e+03,  2.4624e+04],
          [ 2.9664e+04,  3.5840e+04,  6.2304e+04,  ..., -1.8528e+04,  5.6352e+04,  5.0912e+04]],

         [[ 9.8560e+03,  8.5840e+03, -4.0352e+04,  ...,  4.1568e+04, -3.7248e+04,  5.9872e+04],
          [-1.4912e+04, -3.7824e+04, -5.9712e+04,  ...,  5.4816e+04,  3.7780e+03,  2.8960e+04],
          [ 1.2680e+04, -2.0260e+03,  3.4432e+04,  ...,  6.0000e+04,  1.0000e+04,  5.7984e+04],
          ...,
          [ 5.1968e+04,  4.5000e+01,  2.2920e+03,  ...,  4.9360e+03,  7.4520e+03, -2.1696e+04],
          [-5.2640e+04,  4.7296e+04, -6.0608e+04,  ...,  9.8560e+03, -2.9216e+04, -4.4384e+04],
          [ 3.4368e+04, -2.3008e+04,  2.7968e+04,  ...,  2.6440e+03,  6.0384e+04,  5.8592e+04]],

         [[ 1.6360e+04, -4.6048e+04, -5.5104e+04,  ..., -5.0208e+04, -2.0496e+04,  1.8336e+04],
          [-2.3504e+04, -1.6200e+02, -3.0928e+04,  ...,  4.7392e+04,  3.8464e+04,  2.3408e+04],
          [ 5.7408e+04,  1.9680e+04, -6.2656e+04,  ...,  4.0512e+04,  2.0480e+04,  5.8720e+04],
          ...,
          [ 5.1488e+04,  1.0464e+04, -1.6328e+04,  ...,  2.8256e+04,  3.3824e+04, -4.3872e+04],
          [-1.2016e+04,  3.3312e+04,  5.7920e+04,  ..., -2.8064e+04,  4.5664e+04, -3.4784e+04],
          [ 2.5168e+04, -6.5248e+04,  5.2416e+04,  ..., -4.9216e+04, -7.6640e+03, -3.2416e+04]]],


        [[[ 2.7680e+04,  9.8240e+03, -3.7632e+04,  ...,  1.9424e+04,  2.3040e+04, -5.5104e+04],
          [-5.7824e+04,  3.7100e+02, -3.6448e+04,  ...,  1.3712e+04, -2.0960e+04,  1.8208e+04],
          [ 3.0800e+04,  1.9904e+04, -3.9136e+04,  ...,  2.2448e+04,  5.8480e+03, -2.8976e+04],
          ...,
          [-4.8800e+04, -6.3552e+04, -2.2416e+04,  ..., -8.6560e+03, -1.7408e+04, -1.8256e+04],
          [-3.6192e+04,  3.5680e+04,  1.1888e+04,  ...,  3.5648e+04,  3.7376e+04, -6.1280e+04],
          [-3.2720e+03, -9.5760e+03,  1.0864e+04,  ..., -4.1760e+03,  2.7056e+04,  6.0768e+04]],

         [[-2.6960e+04, -6.0416e+04,  2.9840e+04,  ..., -6.1888e+04,  6.0544e+04,  2.7504e+04],
          [-1.8416e+04, -1.4704e+04, -6.4096e+04,  ...,  4.1312e+04,  5.7984e+04, -2.2128e+04],
          [-6.5184e+04, -6.4288e+04, -5.2096e+04,  ..., -1.9584e+04, -3.6960e+04, -2.6672e+04],
          ...,
          [ 6.0160e+04, -5.3560e+03,  2.5504e+04,  ..., -5.9120e+03,  4.4720e+03, -6.4960e+03],
          [ 4.9568e+04,  6.0960e+04,  4.2880e+04,  ...,  2.2512e+04,  3.0224e+04,  2.6112e+04],
          [ 5.8208e+04,  3.8304e+04,  2.4544e+04,  ...,  5.6448e+04,  6.0704e+04, -2.0016e+04]],

         [[-8.8560e+03,  6.0160e+03, -6.0800e+04,  ..., -1.6592e+04, -1.3144e+04, -2.1664e+04],
          [-3.3380e+03, -4.6816e+04,  6.4576e+04,  ...,  4.1408e+04,  5.4752e+04,  6.1888e+04],
          [-1.9328e+04,  3.9264e+04,  4.6480e+03,  ...,  5.0720e+04, -6.1472e+04, -4.2336e+04],
          ...,
          [-2.7344e+04, -1.6070e+03, -4.8224e+04,  ..., -8.6560e+03,  3.2560e+03,  2.2080e+04],
          [-3.3376e+04,  6.3328e+04, -3.9968e+04,  ..., -2.9472e+04,  1.5768e+04,  6.5216e+04],
          [-4.8576e+04,  6.0416e+04, -2.3856e+04,  ...,  4.6496e+04,  4.3552e+04, -4.6432e+04]]]], dtype=torch.float16)

2025-06-09 23:16:06.934610 GPU 6 128192 test begin: paddle.Tensor.expand(Tensor([1, 1, 1, 4096],"float16"), list[2,1,4096,4096,], )
[accuracy error] backward  paddle.Tensor.expand(Tensor([1, 1, 1, 4096],"float16"), list[2,1,4096,4096,], ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 4086 / 4096 (99.8%)
Greatest absolute difference: 75.875 at index (0, 0, 0, 542) (up to 0.01 allowed)
Greatest relative difference: 2882.0 at index (0, 0, 0, 2522) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 1, 1, 4096]), dtype=torch.float16)
tensor([[[[-8.7422, 16.3906, -8.9453,  ...,  3.7715,  5.3008, -0.8511]]]], dtype=torch.float16)
DESIRED: (shape=torch.Size([1, 1, 1, 4096]), dtype=torch.float16)
tensor([[[[-27.0938,  52.6562, -19.0469,  ...,   4.5742, -11.4844,   6.2891]]]], dtype=torch.float16)

2025-06-09 23:16:06.937445 GPU 6 128197 test begin: paddle.Tensor.expand(Tensor([1, 1, 192],"float16"), tuple(128,-1,-1,), )
[accuracy error] backward  paddle.Tensor.expand(Tensor([1, 1, 192],"float16"), tuple(128,-1,-1,), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 135 / 192 (70.3%)
Greatest absolute difference: 0.19140625 at index (0, 0, 71) (up to 0.01 allowed)
Greatest relative difference: 0.7470703125 at index (0, 0, 104) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 1, 192]), dtype=torch.float16)
tensor([[[-2.3926,  3.1816, -1.1289,  ...,  2.2129,  2.3555,  2.6191]]], dtype=torch.float16)
DESIRED: (shape=torch.Size([1, 1, 192]), dtype=torch.float16)
tensor([[[-2.3926,  3.2617, -1.1396,  ...,  2.2227,  2.4023,  2.6895]]], dtype=torch.float16)

2025-06-09 23:16:06.941129 GPU 4 128193 test begin: paddle.Tensor.expand(Tensor([1, 1, 384],"float16"), tuple(64,-1,-1,), )
[accuracy error] backward  paddle.Tensor.expand(Tensor([1, 1, 384],"float16"), tuple(64,-1,-1,), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 103 / 384 (26.8%)
Greatest absolute difference: 0.08984375 at index (0, 0, 103) (up to 0.01 allowed)
Greatest relative difference: 1.0146484375 at index (0, 0, 90) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 1, 384]), dtype=torch.float16)
tensor([[[ 3.0215,  0.3542,  3.0898,  ...,  2.3223, -0.1421,  2.2617]]], dtype=torch.float16)
DESIRED: (shape=torch.Size([1, 1, 384]), dtype=torch.float16)
tensor([[[ 3.0566,  0.3469,  3.1172,  ...,  2.3418, -0.1599,  2.3008]]], dtype=torch.float16)

2025-06-09 23:16:06.964677 GPU 6 128183 test begin: paddle.Tensor.expand(Tensor([1, 1, 768],"float16"), tuple(112,-1,-1,), )
[accuracy error] backward  paddle.Tensor.expand(Tensor([1, 1, 768],"float16"), tuple(112,-1,-1,), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 492 / 768 (64.1%)
Greatest absolute difference: 0.185546875 at index (0, 0, 705) (up to 0.01 allowed)
Greatest relative difference: 3.134765625 at index (0, 0, 557) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 1, 768]), dtype=torch.float16)
tensor([[[ 1.3799,  3.6680,  4.8906,  ...,  0.1831,  0.4709, -0.9751]]], dtype=torch.float16)
DESIRED: (shape=torch.Size([1, 1, 768]), dtype=torch.float16)
tensor([[[ 1.4082,  3.7520,  5.0117,  ...,  0.2030,  0.4207, -0.9624]]], dtype=torch.float16)

2025-06-09 23:16:07.058069 GPU 5 128191 test begin: paddle.Tensor.expand(Tensor([1, 1, 768],"float16"), tuple(128,-1,-1,), )
[accuracy error] backward  paddle.Tensor.expand(Tensor([1, 1, 768],"float16"), tuple(128,-1,-1,), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 534 / 768 (69.5%)
Greatest absolute difference: 0.2578125 at index (0, 0, 440) (up to 0.01 allowed)
Greatest relative difference: 3.84375 at index (0, 0, 263) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 1, 768]), dtype=torch.float16)
tensor([[[-3.2988, -3.2012, -2.7266,  ..., -1.7568,  0.2246, -6.9219]]], dtype=torch.float16)
DESIRED: (shape=torch.Size([1, 1, 768]), dtype=torch.float16)
tensor([[[-3.3633, -3.2656, -2.7969,  ..., -1.8066,  0.2135, -7.0430]]], dtype=torch.float16)

2025-06-09 23:16:07.205292 GPU 4 128195 test begin: paddle.Tensor.expand(Tensor([1, 1, 768],"float16"), tuple(64,-1,-1,), )
[accuracy error] backward  paddle.Tensor.expand(Tensor([1, 1, 768],"float16"), tuple(64,-1,-1,), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 175 / 768 (22.8%)
Greatest absolute difference: 0.1015625 at index (0, 0, 465) (up to 0.01 allowed)
Greatest relative difference: 3.220703125 at index (0, 0, 573) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 1, 768]), dtype=torch.float16)
tensor([[[ 1.4365, -0.3784, -3.3672,  ..., -2.8691,  2.3223,  0.0347]]], dtype=torch.float16)
DESIRED: (shape=torch.Size([1, 1, 768]), dtype=torch.float16)
tensor([[[ 1.4404, -0.3955, -3.4160,  ..., -2.9160,  2.3516,  0.0473]]], dtype=torch.float16)

2025-06-09 23:16:07.228595 GPU 5 128201 test begin: paddle.Tensor.expand(Tensor([1, 2048, 1, 1],"float16"), list[1,2048,1,64,], )
[accuracy error] backward  paddle.Tensor.expand(Tensor([1, 2048, 1, 1],"float16"), list[1,2048,1,64,], ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 511 / 2048 (25.0%)
Greatest absolute difference: 0.09765625 at index (0, 235, 0, 0) (up to 0.01 allowed)
Greatest relative difference: 9.484375 at index (0, 456, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 2048, 1, 1]), dtype=torch.float16)
tensor([[[[-0.1262]],

         [[-1.2197]],

         [[-0.2986]],

         ...,

         [[ 0.3093]],

         [[ 0.7554]],

         [[ 2.3750]]]], dtype=torch.float16)
DESIRED: (shape=torch.Size([1, 2048, 1, 1]), dtype=torch.float16)
tensor([[[[-0.1399]],

         [[-1.2432]],

         [[-0.3145]],

         ...,

         [[ 0.3076]],

         [[ 0.7607]],

         [[ 2.4277]]]], dtype=torch.float16)

2025-06-09 23:16:07.345246 GPU 6 128199 test begin: paddle.Tensor.expand(Tensor([1, 35, 1, 1],"float16"), list[2,35,1,64,], )
[accuracy error] backward  paddle.Tensor.expand(Tensor([1, 35, 1, 1],"float16"), list[2,35,1,64,], ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 26 / 35 (74.3%)
Greatest absolute difference: 0.1640625 at index (0, 19, 0, 0) (up to 0.01 allowed)
Greatest relative difference: 0.60791015625 at index (0, 5, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 35, 1, 1]), dtype=torch.float16)
tensor([[[[-0.5977]],

         [[ 5.7383]],

         [[-1.5098]],

         [[ 3.5820]],

         [[-3.0703]],

         [[-0.0710]],

         [[ 1.5391]],

         [[-0.0302]],

         [[ 0.8447]],

         [[ 0.1550]],

         [[-3.9199]],

         [[ 3.0273]],

         [[-1.8877]],

         [[ 3.4043]],

         [[ 4.9648]],

         [[ 4.3320]],

         [[ 0.9180]],

         [[ 3.1914]],

         [[-1.0029]],

         [[-3.6797]],

         [[ 0.6777]],

         [[ 0.6050]],

         [[ 1.3389]],

         [[-4.1367]],

         [[-1.3652]],

         [[ 0.1721]],

         [[ 4.4688]],

         [[ 4.5234]],

         [[ 0.9390]],

         [[-1.3086]],

         [[ 2.9375]],

         [[-0.1514]],

         [[-1.7979]],

         [[ 4.0078]],

         [[ 2.8340]]]], dtype=torch.float16)
DESIRED: (shape=torch.Size([1, 35, 1, 1]), dtype=torch.float16)
tensor([[[[-0.5908]],

         [[ 5.8477]],

         [[-1.4766]],

         [[ 3.6152]],

         [[-3.1191]],

         [[-0.0442]],

         [[ 1.6357]],

         [[-0.0437]],

         [[ 0.8599]],

         [[ 0.1161]],

         [[-3.9902]],

         [[ 3.0645]],

         [[-1.8936]],

         [[ 3.4512]],

         [[ 4.9609]],

         [[ 4.3633]],

         [[ 1.0684]],

         [[ 3.2480]],

         [[-1.0352]],

         [[-3.8438]],

         [[ 0.6797]],

         [[ 0.5786]],

         [[ 1.3682]],

         [[-4.2383]],

         [[-1.3340]],

         [[ 0.1539]],

         [[ 4.6250]],

         [[ 4.6250]],

         [[ 0.9668]],

         [[-1.3408]],

         [[ 3.0410]],

         [[-0.1765]],

         [[-1.9365]],

         [[ 4.1055]],

         [[ 2.8496]]]], dtype=torch.float16)

2025-06-09 23:16:07.353618 GPU 7 128206 test begin: paddle.Tensor.expand(Tensor([1, 37, 1, 1],"float16"), list[2,37,1,64,], )
[accuracy error] backward  paddle.Tensor.expand(Tensor([1, 37, 1, 1],"float16"), list[2,37,1,64,], ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 26 / 37 (70.3%)
Greatest absolute difference: 0.296875 at index (0, 4, 0, 0) (up to 0.01 allowed)
Greatest relative difference: 0.8076171875 at index (0, 7, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 37, 1, 1]), dtype=torch.float16)
tensor([[[[ -3.8750]],

         [[  5.7188]],

         [[ -1.8730]],

         [[  4.9883]],

         [[-11.2422]],

         [[  2.0645]],

         [[  0.4453]],

         [[  0.1072]],

         [[ -2.4883]],

         [[  2.4004]],

         [[  7.6445]],

         [[ -0.6855]],

         [[ -5.5312]],

         [[ -0.5146]],

         [[  1.8457]],

         [[ -2.6484]],

         [[  1.4346]],

         [[  0.4673]],

         [[  2.7461]],

         [[ -1.4414]],

         [[ -0.9019]],

         [[  1.2461]],

         [[ -1.9863]],

         [[  5.5703]],

         [[  0.1301]],

         [[ -3.5312]],

         [[  3.5156]],

         [[ -1.7520]],

         [[  4.7109]],

         [[  0.8149]],

         [[  4.0820]],

         [[  3.0586]],

         [[ -1.2637]],

         [[  1.6133]],

         [[  0.4370]],

         [[  5.6875]],

         [[ -0.7573]]]], dtype=torch.float16)
DESIRED: (shape=torch.Size([1, 37, 1, 1]), dtype=torch.float16)
tensor([[[[ -3.9961]],

         [[  5.8008]],

         [[ -1.8604]],

         [[  5.1016]],

         [[-11.5391]],

         [[  2.0645]],

         [[  0.4680]],

         [[  0.0593]],

         [[ -2.5664]],

         [[  2.4219]],

         [[  7.7734]],

         [[ -0.6494]],

         [[ -5.6211]],

         [[ -0.5586]],

         [[  1.9160]],

         [[ -2.7754]],

         [[  1.3730]],

         [[  0.4299]],

         [[  2.7793]],

         [[ -1.4658]],

         [[ -0.9502]],

         [[  1.2891]],

         [[ -2.0527]],

         [[  5.6172]],

         [[  0.1573]],

         [[ -3.5781]],

         [[  3.5605]],

         [[ -1.7988]],

         [[  4.8906]],

         [[  0.9053]],

         [[  4.0898]],

         [[  3.0859]],

         [[ -1.3311]],

         [[  1.6377]],

         [[  0.4333]],

         [[  5.8477]],

         [[ -0.7310]]]], dtype=torch.float16)

2025-06-09 23:16:07.380426 GPU 7 128200 test begin: paddle.Tensor.expand(Tensor([1, 38, 1, 1],"float16"), list[2,38,1,64,], )
[accuracy error] backward  paddle.Tensor.expand(Tensor([1, 38, 1, 1],"float16"), list[2,38,1,64,], ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 33 / 38 (86.8%)
Greatest absolute difference: 0.21875 at index (0, 21, 0, 0) (up to 0.01 allowed)
Greatest relative difference: 0.2415771484375 at index (0, 25, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 38, 1, 1]), dtype=torch.float16)
tensor([[[[ 6.1328]],

         [[-3.4297]],

         [[ 2.0859]],

         [[ 2.0605]],

         [[-1.9648]],

         [[-1.0635]],

         [[ 1.0195]],

         [[ 2.7051]],

         [[ 3.0762]],

         [[-4.5664]],

         [[ 0.4478]],

         [[-5.2578]],

         [[-4.3125]],

         [[-0.8823]],

         [[ 0.4392]],

         [[-1.5020]],

         [[ 3.0059]],

         [[-3.6758]],

         [[ 3.7734]],

         [[ 3.4336]],

         [[ 1.2656]],

         [[10.2656]],

         [[ 2.0742]],

         [[ 2.2773]],

         [[-5.2148]],

         [[-0.0962]],

         [[ 4.8125]],

         [[-0.7314]],

         [[ 5.2734]],

         [[-2.6367]],

         [[ 1.9541]],

         [[-0.2388]],

         [[-6.7227]],

         [[-7.7578]],

         [[-6.3477]],

         [[ 3.2109]],

         [[ 1.2695]],

         [[-2.2129]]]], dtype=torch.float16)
DESIRED: (shape=torch.Size([1, 38, 1, 1]), dtype=torch.float16)
tensor([[[[ 6.2148]],

         [[-3.4883]],

         [[ 2.1367]],

         [[ 2.1484]],

         [[-2.0117]],

         [[-1.1230]],

         [[ 1.0430]],

         [[ 2.8008]],

         [[ 3.0977]],

         [[-4.6836]],

         [[ 0.5078]],

         [[-5.4102]],

         [[-4.4727]],

         [[-0.9121]],

         [[ 0.4324]],

         [[-1.5508]],

         [[ 3.0586]],

         [[-3.7578]],

         [[ 3.8047]],

         [[ 3.5020]],

         [[ 1.3447]],

         [[10.4844]],

         [[ 2.1445]],

         [[ 2.3340]],

         [[-5.3477]],

         [[-0.1268]],

         [[ 4.8516]],

         [[-0.7246]],

         [[ 5.3516]],

         [[-2.7754]],

         [[ 2.0176]],

         [[-0.2812]],

         [[-6.8789]],

         [[-7.9258]],

         [[-6.5078]],

         [[ 3.2715]],

         [[ 1.3145]],

         [[-2.3711]]]], dtype=torch.float16)

2025-06-09 23:16:07.390967 GPU 7 128180 test begin: paddle.Tensor.expand(Tensor([1, 39, 1, 1],"float16"), list[2,39,1,64,], )
[accuracy error] backward  paddle.Tensor.expand(Tensor([1, 39, 1, 1],"float16"), list[2,39,1,64,], ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 24 / 39 (61.5%)
Greatest absolute difference: 0.140625 at index (0, 6, 0, 0) (up to 0.01 allowed)
Greatest relative difference: 5.62109375 at index (0, 4, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 39, 1, 1]), dtype=torch.float16)
tensor([[[[ 7.3398]],

         [[ 2.4648]],

         [[-1.2891]],

         [[-1.3027]],

         [[-0.0757]],

         [[ 2.9688]],

         [[ 6.5938]],

         [[-0.1030]],

         [[-2.1387]],

         [[ 1.1709]],

         [[ 2.3867]],

         [[-1.5371]],

         [[-2.4316]],

         [[ 2.1680]],

         [[-1.3652]],

         [[-4.2891]],

         [[ 1.1592]],

         [[-4.9961]],

         [[-5.5859]],

         [[-1.3184]],

         [[ 0.7568]],

         [[ 1.2168]],

         [[ 6.5664]],

         [[ 0.7065]],

         [[ 2.3301]],

         [[ 0.3115]],

         [[ 1.3789]],

         [[-0.8047]],

         [[-1.0195]],

         [[ 4.6016]],

         [[ 0.3323]],

         [[ 2.0312]],

         [[-4.6562]],

         [[-3.9219]],

         [[-1.9355]],

         [[-1.1445]],

         [[-1.2344]],

         [[-1.3574]],

         [[-2.3672]]]], dtype=torch.float16)
DESIRED: (shape=torch.Size([1, 39, 1, 1]), dtype=torch.float16)
tensor([[[[ 7.4531]],

         [[ 2.4688]],

         [[-1.3457]],

         [[-1.3799]],

         [[-0.0114]],

         [[ 2.9980]],

         [[ 6.7344]],

         [[-0.0924]],

         [[-2.1660]],

         [[ 1.1504]],

         [[ 2.3926]],

         [[-1.5703]],

         [[-2.4766]],

         [[ 2.2305]],

         [[-1.3828]],

         [[-4.3203]],

         [[ 1.2051]],

         [[-5.1016]],

         [[-5.7227]],

         [[-1.3662]],

         [[ 0.7993]],

         [[ 1.2520]],

         [[ 6.6211]],

         [[ 0.7700]],

         [[ 2.4609]],

         [[ 0.3442]],

         [[ 1.3789]],

         [[-0.8882]],

         [[-1.0850]],

         [[ 4.6875]],

         [[ 0.3088]],

         [[ 1.9980]],

         [[-4.6875]],

         [[-3.9707]],

         [[-1.9463]],

         [[-1.1650]],

         [[-1.2490]],

         [[-1.4053]],

         [[-2.4473]]]], dtype=torch.float16)

2025-06-09 23:16:07.394144 GPU 6 128202 test begin: paddle.Tensor.expand(Tensor([1, 45, 1, 1],"float16"), list[2,45,1,64,], )
[accuracy error] backward  paddle.Tensor.expand(Tensor([1, 45, 1, 1],"float16"), list[2,45,1,64,], ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 30 / 45 (66.7%)
Greatest absolute difference: 0.1796875 at index (0, 30, 0, 0) (up to 0.01 allowed)
Greatest relative difference: 0.2393798828125 at index (0, 40, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 45, 1, 1]), dtype=torch.float16)
tensor([[[[-1.8057]],

         [[ 1.2334]],

         [[-2.5059]],

         [[-2.9258]],

         [[-4.4648]],

         [[ 1.3066]],

         [[ 0.3201]],

         [[ 1.5908]],

         [[ 2.0098]],

         [[ 2.1699]],

         [[ 0.4705]],

         [[-2.6445]],

         [[ 0.7734]],

         [[-3.1992]],

         [[ 2.5977]],

         [[-3.8926]],

         [[ 2.4102]],

         [[ 3.3516]],

         [[ 1.8789]],

         [[ 2.5449]],

         [[-1.0479]],

         [[-3.4199]],

         [[-1.0381]],

         [[-2.6035]],

         [[-0.4163]],

         [[-0.2903]],

         [[-3.4863]],

         [[ 2.4961]],

         [[-1.6348]],

         [[ 2.1309]],

         [[ 3.6230]],

         [[-5.4023]],

         [[ 6.4766]],

         [[ 1.8066]],

         [[-7.5078]],

         [[ 2.8047]],

         [[ 2.6797]],

         [[-3.0059]],

         [[ 2.0957]],

         [[-3.8496]],

         [[-0.1283]],

         [[-2.1191]],

         [[-0.8682]],

         [[ 2.2402]],

         [[ 4.6523]]]], dtype=torch.float16)
DESIRED: (shape=torch.Size([1, 45, 1, 1]), dtype=torch.float16)
tensor([[[[-1.7930]],

         [[ 1.2881]],

         [[-2.4844]],

         [[-3.0059]],

         [[-4.5156]],

         [[ 1.3750]],

         [[ 0.3674]],

         [[ 1.5361]],

         [[ 2.1152]],

         [[ 2.2402]],

         [[ 0.5259]],

         [[-2.6484]],

         [[ 0.7754]],

         [[-3.1211]],

         [[ 2.5918]],

         [[-3.9902]],

         [[ 2.4570]],

         [[ 3.3672]],

         [[ 1.9287]],

         [[ 2.5488]],

         [[-1.0459]],

         [[-3.4219]],

         [[-1.1094]],

         [[-2.6641]],

         [[-0.4207]],

         [[-0.3052]],

         [[-3.5996]],

         [[ 2.5508]],

         [[-1.6387]],

         [[ 2.0684]],

         [[ 3.8027]],

         [[-5.4961]],

         [[ 6.5664]],

         [[ 1.8398]],

         [[-7.6523]],

         [[ 2.8242]],

         [[ 2.7617]],

         [[-3.0547]],

         [[ 2.1914]],

         [[-3.8926]],

         [[-0.1035]],

         [[-2.2090]],

         [[-0.8599]],

         [[ 2.3320]],

         [[ 4.7617]]]], dtype=torch.float16)

2025-06-09 23:16:07.410891 GPU 7 128188 test begin: paddle.Tensor.expand(Tensor([1, 50, 1, 1],"float16"), list[2,50,1,64,], )
[accuracy error] backward  paddle.Tensor.expand(Tensor([1, 50, 1, 1],"float16"), list[2,50,1,64,], ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 32 / 50 (64.0%)
Greatest absolute difference: 0.197265625 at index (0, 35, 0, 0) (up to 0.01 allowed)
Greatest relative difference: 0.4013671875 at index (0, 15, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 50, 1, 1]), dtype=torch.float16)
tensor([[[[-1.3613]],

         [[ 0.5005]],

         [[ 0.9971]],

         [[ 2.2285]],

         [[ 2.1289]],

         [[-1.6172]],

         [[ 4.6211]],

         [[-5.1250]],

         [[-0.9307]],

         [[-1.9639]],

         [[-3.8945]],

         [[ 6.9141]],

         [[ 3.2656]],

         [[-2.0742]],

         [[-1.4854]],

         [[-0.0737]],

         [[-1.8711]],

         [[-3.7383]],

         [[ 6.8906]],

         [[ 3.5781]],

         [[ 0.3010]],

         [[-0.9453]],

         [[ 4.8477]],

         [[ 0.1260]],

         [[ 5.8594]],

         [[ 1.6943]],

         [[-3.3340]],

         [[ 1.5908]],

         [[ 0.6460]],

         [[ 0.5938]],

         [[ 2.6816]],

         [[ 2.8516]],

         [[ 1.2061]],

         [[ 2.3027]],

         [[ 3.4980]],

         [[-3.4551]],

         [[ 0.7905]],

         [[ 0.7363]],

         [[ 0.8008]],

         [[-4.3633]],

         [[-0.3252]],

         [[-0.6748]],

         [[ 3.3281]],

         [[-0.8584]],

         [[-0.4729]],

         [[-0.8022]],

         [[ 4.0820]],

         [[ 2.3867]],

         [[ 0.2161]],

         [[ 2.9199]]]], dtype=torch.float16)
DESIRED: (shape=torch.Size([1, 50, 1, 1]), dtype=torch.float16)
tensor([[[[-1.3447]],

         [[ 0.5122]],

         [[ 1.0312]],

         [[ 2.2734]],

         [[ 2.2031]],

         [[-1.6455]],

         [[ 4.6680]],

         [[-5.2930]],

         [[-0.8472]],

         [[-1.9785]],

         [[-4.0039]],

         [[ 7.0352]],

         [[ 3.3438]],

         [[-2.1016]],

         [[-1.5264]],

         [[-0.0526]],

         [[-1.8633]],

         [[-3.8105]],

         [[ 7.0273]],

         [[ 3.6562]],

         [[ 0.3079]],

         [[-0.8750]],

         [[ 4.9180]],

         [[ 0.1580]],

         [[ 6.0195]],

         [[ 1.7783]],

         [[-3.4199]],

         [[ 1.5850]],

         [[ 0.6221]],

         [[ 0.6353]],

         [[ 2.7168]],

         [[ 2.8750]],

         [[ 1.2285]],

         [[ 2.3320]],

         [[ 3.5801]],

         [[-3.6523]],

         [[ 0.8066]],

         [[ 0.7915]],

         [[ 0.8867]],

         [[-4.3945]],

         [[-0.2896]],

         [[-0.6538]],

         [[ 3.4023]],

         [[-0.8647]],

         [[-0.4629]],

         [[-0.7856]],

         [[ 4.1250]],

         [[ 2.4492]],

         [[ 0.1783]],

         [[ 2.9102]]]], dtype=torch.float16)

2025-06-09 23:16:07.417281 GPU 5 128190 test begin: paddle.Tensor.expand(Tensor([1, 51, 1, 1],"float16"), list[2,51,1,64,], )
[accuracy error] backward  paddle.Tensor.expand(Tensor([1, 51, 1, 1],"float16"), list[2,51,1,64,], ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 35 / 51 (68.6%)
Greatest absolute difference: 0.17578125 at index (0, 16, 0, 0) (up to 0.01 allowed)
Greatest relative difference: 0.1920166015625 at index (0, 25, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 51, 1, 1]), dtype=torch.float16)
tensor([[[[ 1.5615]],

         [[-2.1758]],

         [[-4.0742]],

         [[ 2.2441]],

         [[-4.5625]],

         [[-3.3633]],

         [[ 2.3633]],

         [[ 0.4912]],

         [[ 0.4185]],

         [[-1.4902]],

         [[-1.3525]],

         [[-0.4717]],

         [[ 0.5928]],

         [[ 2.8613]],

         [[ 2.2383]],

         [[ 6.6445]],

         [[ 7.9805]],

         [[ 4.2070]],

         [[ 7.0820]],

         [[-2.4609]],

         [[ 8.9141]],

         [[ 5.1992]],

         [[-4.5742]],

         [[-1.0127]],

         [[ 2.1777]],

         [[ 0.1630]],

         [[ 2.0547]],

         [[-2.4355]],

         [[ 0.5020]],

         [[-1.9561]],

         [[-7.2500]],

         [[ 5.9453]],

         [[-3.0195]],

         [[ 1.3477]],

         [[-2.8340]],

         [[ 1.4893]],

         [[ 0.3164]],

         [[ 0.8813]],

         [[-0.4050]],

         [[ 2.1699]],

         [[ 0.6743]],

         [[-0.5835]],

         [[-5.4180]],

         [[-4.2656]],

         [[ 0.6133]],

         [[ 5.1094]],

         [[-3.8340]],

         [[ 0.8623]],

         [[ 2.7461]],

         [[ 2.8457]],

         [[-1.6680]]]], dtype=torch.float16)
DESIRED: (shape=torch.Size([1, 51, 1, 1]), dtype=torch.float16)
tensor([[[[ 1.5430]],

         [[-2.2148]],

         [[-4.1562]],

         [[ 2.2773]],

         [[-4.6055]],

         [[-3.4824]],

         [[ 2.4297]],

         [[ 0.4573]],

         [[ 0.4563]],

         [[-1.5254]],

         [[-1.3457]],

         [[-0.4714]],

         [[ 0.6172]],

         [[ 2.9082]],

         [[ 2.2910]],

         [[ 6.7695]],

         [[ 8.1562]],

         [[ 4.3594]],

         [[ 7.2109]],

         [[-2.4629]],

         [[ 9.0703]],

         [[ 5.3516]],

         [[-4.6406]],

         [[-1.0127]],

         [[ 2.1797]],

         [[ 0.1367]],

         [[ 2.0645]],

         [[-2.5137]],

         [[ 0.4932]],

         [[-2.0508]],

         [[-7.3555]],

         [[ 6.0664]],

         [[-3.0703]],

         [[ 1.3730]],

         [[-2.8711]],

         [[ 1.4629]],

         [[ 0.2781]],

         [[ 0.8804]],

         [[-0.4424]],

         [[ 2.1875]],

         [[ 0.7256]],

         [[-0.5791]],

         [[-5.5664]],

         [[-4.3281]],

         [[ 0.5815]],

         [[ 5.2070]],

         [[-3.8711]],

         [[ 0.8779]],

         [[ 2.8105]],

         [[ 2.8770]],

         [[-1.6396]]]], dtype=torch.float16)

2025-06-09 23:16:07.426765 GPU 4 128203 test begin: paddle.Tensor.expand(Tensor([1, 52, 1, 1],"float16"), list[2,52,1,64,], )
[accuracy error] backward  paddle.Tensor.expand(Tensor([1, 52, 1, 1],"float16"), list[2,52,1,64,], ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 43 / 52 (82.7%)
Greatest absolute difference: 0.19921875 at index (0, 41, 0, 0) (up to 0.01 allowed)
Greatest relative difference: 0.701171875 at index (0, 33, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 52, 1, 1]), dtype=torch.float16)
tensor([[[[ 3.4551]],

         [[ 2.4219]],

         [[ 5.3594]],

         [[-3.8633]],

         [[ 5.0586]],

         [[ 6.3906]],

         [[ 3.3652]],

         [[-2.5840]],

         [[-1.3320]],

         [[ 1.4072]],

         [[ 4.5234]],

         [[-3.7129]],

         [[-3.2852]],

         [[-4.2305]],

         [[ 0.1550]],

         [[ 7.1914]],

         [[-5.7344]],

         [[-4.0117]],

         [[-2.5996]],

         [[ 0.5767]],

         [[ 0.7749]],

         [[-4.1484]],

         [[-0.7363]],

         [[-6.0586]],

         [[ 3.2754]],

         [[ 2.2441]],

         [[-0.6733]],

         [[ 5.4531]],

         [[-3.0449]],

         [[ 1.8359]],

         [[-1.3838]],

         [[-1.4658]],

         [[-1.7686]],

         [[ 0.0088]],

         [[-3.8633]],

         [[ 1.0586]],

         [[-2.2734]],

         [[ 2.3359]],

         [[ 0.8613]],

         [[-0.5254]],

         [[-2.5371]],

         [[ 5.0352]],

         [[ 0.1660]],

         [[ 2.1387]],

         [[-4.0000]],

         [[-0.4661]],

         [[-3.4746]],

         [[ 1.2354]],

         [[ 1.2861]],

         [[-6.1289]],

         [[-1.9209]],

         [[ 2.6543]]]], dtype=torch.float16)
DESIRED: (shape=torch.Size([1, 52, 1, 1]), dtype=torch.float16)
tensor([[[[ 3.5508]],

         [[ 2.4766]],

         [[ 5.4844]],

         [[-3.9297]],

         [[ 5.1992]],

         [[ 6.5391]],

         [[ 3.4043]],

         [[-2.6816]],

         [[-1.4414]],

         [[ 1.4990]],

         [[ 4.6250]],

         [[-3.8770]],

         [[-3.4141]],

         [[-4.3359]],

         [[ 0.1696]],

         [[ 7.2969]],

         [[-5.8398]],

         [[-4.0898]],

         [[-2.6777]],

         [[ 0.6235]],

         [[ 0.7959]],

         [[-4.1836]],

         [[-0.7480]],

         [[-6.2188]],

         [[ 3.3730]],

         [[ 2.2285]],

         [[-0.6680]],

         [[ 5.5273]],

         [[-3.0938]],

         [[ 1.8369]],

         [[-1.3506]],

         [[-1.5176]],

         [[-1.7949]],

         [[ 0.0294]],

         [[-3.9160]],

         [[ 1.1299]],

         [[-2.3301]],

         [[ 2.4570]],

         [[ 0.8804]],

         [[-0.5493]],

         [[-2.5957]],

         [[ 5.2344]],

         [[ 0.1492]],

         [[ 2.1582]],

         [[-4.1445]],

         [[-0.4680]],

         [[-3.5234]],

         [[ 1.2842]],

         [[ 1.2549]],

         [[-6.2383]],

         [[-1.9971]],

         [[ 2.7344]]]], dtype=torch.float16)

2025-06-09 23:16:07.433559 GPU 5 128184 test begin: paddle.Tensor.expand(Tensor([1, 57, 1, 1],"float16"), list[2,57,1,64,], )
[accuracy error] backward  paddle.Tensor.expand(Tensor([1, 57, 1, 1],"float16"), list[2,57,1,64,], ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 43 / 57 (75.4%)
Greatest absolute difference: 0.296875 at index (0, 13, 0, 0) (up to 0.01 allowed)
Greatest relative difference: 0.4404296875 at index (0, 15, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 57, 1, 1]), dtype=torch.float16)
tensor([[[[-3.3535]],

         [[-2.7891]],

         [[ 1.3232]],

         [[ 4.3398]],

         [[ 4.9688]],

         [[-4.2578]],

         [[-1.1064]],

         [[ 2.6836]],

         [[-0.8174]],

         [[-3.2148]],

         [[-3.8027]],

         [[ 3.6250]],

         [[ 0.4829]],

         [[ 9.1094]],

         [[ 1.8613]],

         [[-0.0739]],

         [[-2.1719]],

         [[ 4.1367]],

         [[ 3.1973]],

         [[-0.5498]],

         [[-2.9141]],

         [[ 0.9932]],

         [[ 4.3359]],

         [[ 0.5889]],

         [[ 1.2266]],

         [[ 4.5117]],

         [[ 0.5552]],

         [[ 2.1309]],

         [[-4.0039]],

         [[-1.7676]],

         [[ 2.0273]],

         [[-3.5723]],

         [[ 7.3359]],

         [[ 4.1445]],

         [[ 3.8281]],

         [[-1.3535]],

         [[-3.6387]],

         [[-0.3826]],

         [[ 1.6504]],

         [[-5.1094]],

         [[-3.1055]],

         [[ 3.6270]],

         [[-0.4697]],

         [[-0.9448]],

         [[-0.9121]],

         [[ 2.6113]],

         [[ 5.5234]],

         [[-2.1309]],

         [[-4.3125]],

         [[ 2.2109]],

         [[-2.7344]],

         [[-0.9951]],

         [[ 1.4766]],

         [[ 2.4395]],

         [[ 4.0312]],

         [[-0.4841]],

         [[ 0.5132]]]], dtype=torch.float16)
DESIRED: (shape=torch.Size([1, 57, 1, 1]), dtype=torch.float16)
tensor([[[[-3.3809]],

         [[-2.8457]],

         [[ 1.3291]],

         [[ 4.4258]],

         [[ 5.0430]],

         [[-4.3828]],

         [[-1.0850]],

         [[ 2.7324]],

         [[-0.8433]],

         [[-3.2363]],

         [[-3.8809]],

         [[ 3.6680]],

         [[ 0.5420]],

         [[ 9.4062]],

         [[ 1.9395]],

         [[-0.1321]],

         [[-2.2344]],

         [[ 4.2148]],

         [[ 3.3145]],

         [[-0.5811]],

         [[-2.9531]],

         [[ 0.9956]],

         [[ 4.4336]],

         [[ 0.5835]],

         [[ 1.2539]],

         [[ 4.6641]],

         [[ 0.6401]],

         [[ 2.0957]],

         [[-4.1211]],

         [[-1.8379]],

         [[ 2.0430]],

         [[-3.6465]],

         [[ 7.4727]],

         [[ 4.2461]],

         [[ 3.9219]],

         [[-1.3672]],

         [[-3.7012]],

         [[-0.3848]],

         [[ 1.6348]],

         [[-5.1875]],

         [[-3.1367]],

         [[ 3.7539]],

         [[-0.4902]],

         [[-0.9673]],

         [[-0.9336]],

         [[ 2.7090]],

         [[ 5.5742]],

         [[-2.1797]],

         [[-4.3984]],

         [[ 2.2773]],

         [[-2.8340]],

         [[-1.0244]],

         [[ 1.4902]],

         [[ 2.5156]],

         [[ 4.1523]],

         [[-0.5068]],

         [[ 0.4915]]]], dtype=torch.float16)

2025-06-09 23:16:41.878404 GPU 5 128184 test begin: paddle.add_n(list[Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),], )
[accuracy error] paddle.add_n(list[Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),], ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 13 / 4096 (0.3%)
Greatest absolute difference: 0.0263671875 at index (0, 148) (up to 0.01 allowed)
Greatest relative difference: 1.802734375 at index (9, 81) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([16, 256]), dtype=torch.float16)
tensor([[ 3.9219,  4.8125, -0.0764,  ...,  2.1660, -1.0586,  0.6768],
        [-2.8809,  0.8237, -1.7852,  ..., -0.7500,  1.9170, -0.0757],
        [-1.7461, -0.9946,  1.2793,  ...,  0.7881,  1.0400,  1.4268],
        ...,
        [ 1.5049,  1.3213,  1.0664,  ...,  0.0408,  1.9922, -2.3223],
        [ 2.0020,  0.3865, -0.9121,  ...,  0.7583, -0.0581, -0.8877],
        [ 2.6387,  2.3496,  1.1357,  ..., -1.2578,  1.9756,  0.3789]], dtype=torch.float16)
DESIRED: (shape=torch.Size([16, 256]), dtype=torch.float16)
tensor([[ 3.9414,  4.8320, -0.0774,  ...,  2.1816, -1.0664,  0.6943],
        [-2.8984,  0.8364, -1.7930,  ..., -0.7578,  1.9248, -0.0721],
        [-1.7549, -1.0039,  1.2852,  ...,  0.7910,  1.0518,  1.4287],
        ...,
        [ 1.5088,  1.3301,  1.0752,  ...,  0.0498,  1.9990, -2.3379],
        [ 2.0078,  0.3899, -0.9165,  ...,  0.7651, -0.0597, -0.8931],
        [ 2.6484,  2.3672,  1.1357,  ..., -1.2627,  1.9756,  0.3811]], dtype=torch.float16)

2025-06-09 23:16:41.883688 GPU 4 128186 test begin: paddle.add_n(list[Tensor([16, 256],"float32"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),], )
[paddle error] paddle.add_n(list[Tensor([16, 256],"float32"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),], ) 
 (InvalidArgument) The type of data we are trying to retrieve (float32) does not match the type of data (float16) currently contained in the container.
  [Hint: Expected dtype() == phi::CppTypeToDataType<T>::Type(), but received dtype():15 != phi::CppTypeToDataType<T>::Type():10.] (at ../paddle/phi/core/dense_tensor.cc:153)


2025-06-09 23:16:41.884758 GPU 4 128193 test begin: paddle.broadcast_to(Tensor([1],"float16"), list[300,40,], )
[accuracy error] backward  paddle.broadcast_to(Tensor([1],"float16"), list[300,40,], ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 1 / 1 (100.0%)
Greatest absolute difference: 3.25 at index (0,) (up to 0.01 allowed)
Greatest relative difference: 0.1251220703125 at index (0,) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1]), dtype=torch.float16)
tensor([-29.2188], dtype=torch.float16)
DESIRED: (shape=torch.Size([1]), dtype=torch.float16)
tensor([-25.9688], dtype=torch.float16)

2025-06-09 23:16:41.886352 GPU 4 128195 test begin: paddle.broadcast_to(Tensor([1],"float16"), list[6,8,9,18,], )
[accuracy error] backward  paddle.broadcast_to(Tensor([1],"float16"), list[6,8,9,18,], ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 1 / 1 (100.0%)
Greatest absolute difference: 24.953125 at index (0,) (up to 0.01 allowed)
Greatest relative difference: 0.69677734375 at index (0,) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1]), dtype=torch.float16)
tensor([10.8594], dtype=torch.float16)
DESIRED: (shape=torch.Size([1]), dtype=torch.float16)
tensor([35.8125], dtype=torch.float16)

2025-06-09 23:16:41.890466 GPU 4 128203 test begin: paddle.broadcast_to(Tensor([300, 1],"float16"), list[300,40,], )
[accuracy error] backward  paddle.broadcast_to(Tensor([300, 1],"float16"), list[300,40,], ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 3 / 300 (1.0%)
Greatest absolute difference: 0.02105712890625 at index (189, 0) (up to 0.01 allowed)
Greatest relative difference: 0.248046875 at index (203, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([300, 1]), dtype=torch.float16)
tensor([[ 1.0215],
        [-0.2727],
        [ 0.0853],
        ...,
        [ 0.1956],
        [ 1.2031],
        [ 2.4414]], dtype=torch.float16)
DESIRED: (shape=torch.Size([300, 1]), dtype=torch.float16)
tensor([[ 1.0361],
        [-0.2715],
        [ 0.0797],
        ...,
        [ 0.1942],
        [ 1.2139],
        [ 2.4609]], dtype=torch.float16)

2025-06-09 23:16:41.901440 GPU 6 128199 test begin: paddle.broadcast_to(Tensor([],"float16"), list[11008,], )
[accuracy error] backward  paddle.broadcast_to(Tensor([],"float16"), list[11008,], ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Scalars are not close!

Expected 4.8671875 but got -10.3828125.
Absolute difference: 15.25 (up to 0.01 allowed)
Relative difference: 3.13322632423756 (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([]), dtype=torch.float16)
-10.3828125
DESIRED: (shape=torch.Size([]), dtype=torch.float16)
4.8671875

2025-06-09 23:16:41.902568 GPU 5 128198 test begin: paddle.broadcast_to(Tensor([],"float16"), list[168,], )
[accuracy error] backward  paddle.broadcast_to(Tensor([],"float16"), list[168,], ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Scalars are not close!

Expected -2.30078125 but got -2.234375.
Absolute difference: 0.06640625 (up to 0.01 allowed)
Relative difference: 0.028862478777589132 (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([]), dtype=torch.float16)
-2.234375
DESIRED: (shape=torch.Size([]), dtype=torch.float16)
-2.30078125

2025-06-09 23:16:41.905760 GPU 4 128182 test begin: paddle.broadcast_to(Tensor([],"float16"), list[300,40,], )
[accuracy error] backward  paddle.broadcast_to(Tensor([],"float16"), list[300,40,], ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Scalars are not close!

Expected -20.25 but got -21.4375.
Absolute difference: 1.1875 (up to 0.01 allowed)
Relative difference: 0.05864197530864197 (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([]), dtype=torch.float16)
-21.4375
DESIRED: (shape=torch.Size([]), dtype=torch.float16)
-20.25

2025-06-09 23:16:41.908369 GPU 7 128188 test begin: paddle.cast(Tensor([20, 500, 2],"int32"), dtype=Dtype(float16), )
element 0 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.cast(Tensor([20, 500, 2],"int32"), dtype=Dtype(float16), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 5 / 20000 (0.0%)
Greatest absolute difference: inf at index (0, 488, 0) (up to 0.01 allowed)
Greatest relative difference: inf at index (0, 488, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([20, 500, 2]), dtype=torch.float16)
tensor([[[-38048., -38304.],
         [-23664.,  17072.],
         [ 39488.,  39360.],
         ...,
         [-28864.,   2414.],
         [ -1910., -36352.],
         [ 19776.,  54208.]],

        [[-65440., -36832.],
         [ 27216.,  48608.],
         [-61664., -41568.],
         ...,
         [-25024., -25792.],
         [-21008.,   8272.],
         [ -4836., -58432.]],

        [[ 17264.,  18544.],
         [ 28784.,  62304.],
         [  9864.,  44992.],
         ...,
         [  -228., -55008.],
         [-57920.,  54752.],
         [-35072.,  13904.]],

        ...,

        [[ 51648., -16464.],
         [ 52480.,  -2990.],
         [-26672.,  17376.],
         ...,
         [ -4892.,  -1989.],
         [-34848., -43040.],
         [ 44992.,   8792.]],

        [[  3222., -20544.],
         [ -6276.,  42272.],
         [-22240., -25728.],
         ...,
         [ -6876.,  -2366.],
         [ 53600.,    899.],
         [ 29440.,  17536.]],

        [[  4128., -11832.],
         [-19568.,  48096.],
         [ -6452.,  52192.],
         ...,
         [-15304.,  41792.],
         [ -4552.,   5648.],
         [-51296., -40928.]]], dtype=torch.float16)
DESIRED: (shape=torch.Size([20, 500, 2]), dtype=torch.float16)
tensor([[[-38048., -38304.],
         [-23664.,  17072.],
         [ 39488.,  39392.],
         ...,
         [-28864.,   2416.],
         [ -1910., -36352.],
         [ 19776.,  54240.]],

        [[-65472., -36864.],
         [ 27216.,  48640.],
         [-61664., -41600.],
         ...,
         [-25024., -25792.],
         [-21008.,   8280.],
         [ -4836., -58432.]],

        [[ 17280.,  18544.],
         [ 28800.,  62336.],
         [  9864.,  45024.],
         ...,
         [  -228., -55040.],
         [-57920.,  54784.],
         [-35072.,  13912.]],

        ...,

        [[ 51648., -16464.],
         [ 52512.,  -2992.],
         [-26672.,  17376.],
         ...,
         [ -4892.,  -1989.],
         [-34880., -43072.],
         [ 44992.,   8792.]],

        [[  3222., -20560.],
         [ -6280.,  42272.],
         [-22240., -25728.],
         ...,
         [ -6876.,  -2368.],
         [ 53632.,    899.],
         [ 29440.,  17552.]],

        [[  4128., -11832.],
         [-19568.,  48096.],
         [ -6456.,  52192.],
         ...,
         [-15312.,  41824.],
         [ -4552.,   5648.],
         [-51328., -40960.]]], dtype=torch.float16)

2025-06-09 23:16:41.909846 GPU 4 128204 test begin: paddle.cast(Tensor([20, 500, 4],"int32"), dtype=Dtype(float16), )
element 0 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.cast(Tensor([20, 500, 4],"int32"), dtype=Dtype(float16), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 9 / 40000 (0.0%)
Greatest absolute difference: inf at index (1, 138, 1) (up to 0.01 allowed)
Greatest relative difference: inf at index (1, 138, 1) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([20, 500, 4]), dtype=torch.float16)
tensor([[[-25664.,  64064., -46720.,  56832.],
         [ 64256.,  29136., -55264.,  35456.],
         [ 54496.,   6348., -36576.,   3174.],
         ...,
         [ 49344.,  32832.,  54112., -28240.],
         [-18816., -36704.,  52448., -16328.],
         [ 26288.,  14496., -27664., -44736.]],

        [[-20048.,  15688., -55104.,  54720.],
         [ 37984., -46432.,   8976.,  33504.],
         [  4436., -24736.,  14112., -33664.],
         ...,
         [ 48192.,  -4840., -50144., -22368.],
         [ 24080.,  18288., -15632.,  20336.],
         [-61664.,  43328., -10464.,  65280.]],

        [[-29440., -48224., -61024., -21888.],
         [-54464.,  28752., -43968., -42336.],
         [ 57472., -22608., -50208.,   9248.],
         ...,
         [ 25344.,  27520.,  27072.,  13888.],
         [  7732., -41984.,   7448.,  37760.],
         [ 20592.,  57856.,  61440.,   5656.]],

        ...,

        [[ 29056.,  28128.,  57312., -63808.],
         [ 62592.,  58048., -14088.,  41280.],
         [-22320., -58336., -48608., -22592.],
         ...,
         [ 59424.,  50624., -21040.,  56896.],
         [ 55072.,  32720., -32176., -31024.],
         [ 39360.,   1341.,  37632., -11136.]],

        [[ 27936., -28816.,   7040., -11760.],
         [ -1965.,  48512.,  10776.,  23280.],
         [ 17056., -42496.,  39712.,    -inf],
         ...,
         [ -3800.,  -2900., -34720.,   2360.],
         [-16384., -18624.,  19072., -46528.],
         [ 49184., -34784.,  10984.,  27248.]],

        [[ 57312., -39392., -35200.,  32768.],
         [ 10712., -63872.,  52896., -36640.],
         [-57632., -60992.,  -2204.,  27296.],
         ...,
         [ 11432.,  50944.,  -9736.,  28992.],
         [ 64960.,  63296.,  56160.,  25744.],
         [-53440., -54176.,  25904., -15760.]]], dtype=torch.float16)
DESIRED: (shape=torch.Size([20, 500, 4]), dtype=torch.float16)
tensor([[[-25664.,  64096., -46720.,  56832.],
         [ 64288.,  29136., -55296.,  35456.],
         [ 54528.,   6348., -36576.,   3174.],
         ...,
         [ 49344.,  32864.,  54144., -28256.],
         [-18832., -36704.,  52480., -16336.],
         [ 26288.,  14504., -27664., -44736.]],

        [[-20048.,  15688., -55104.,  54752.],
         [ 37984., -46464.,   8976.,  33536.],
         [  4436., -24752.,  14120., -33664.],
         ...,
         [ 48224.,  -4840., -50176., -22368.],
         [ 24080.,  18304., -15632.,  20336.],
         [-61664.,  43360., -10472.,  65312.]],

        [[-29440., -48256., -61056., -21904.],
         [-54464.,  28752., -44000., -42368.],
         [ 57504., -22624., -50208.,   9256.],
         ...,
         [ 25344.,  27520.,  27072.,  13896.],
         [  7732., -42016.,   7448.,  37760.],
         [ 20608.,  57856.,  61440.,   5656.]],

        ...,

        [[ 29056.,  28128.,  57312., -63808.],
         [ 62592.,  58048., -14088.,  41312.],
         [-22320., -58336., -48608., -22608.],
         ...,
         [ 59456.,  50624., -21056.,  56896.],
         [ 55072.,  32720., -32192., -31024.],
         [ 39360.,   1341.,  37664., -11144.]],

        [[ 27936., -28816.,   7040., -11760.],
         [ -1965.,  48512.,  10784.,  23280.],
         [ 17056., -42496.,  39744.,    -inf],
         ...,
         [ -3800.,  -2900., -34752.,   2360.],
         [-16384., -18624.,  19072., -46560.],
         [ 49184., -34784.,  10984.,  27248.]],

        [[ 57312., -39392., -35232.,  32800.],
         [ 10712., -63904.,  52928., -36672.],
         [-57632., -60992.,  -2204.,  27296.],
         ...,
         [ 11432.,  50944.,  -9744.,  28992.],
         [ 64992.,  63328.,  56160.,  25744.],
         [-53440., -54176.,  25904., -15760.]]], dtype=torch.float16)

2025-06-09 23:16:41.911246 GPU 5 128190 test begin: paddle.cumulative_trapezoid(y=Tensor([2, 3],"float32"), x=None, dx=None, axis=-1, )
Warning: The core code of paddle.cumulative_trapezoid is too complex.
[accuracy error] backward  paddle.cumulative_trapezoid(y=Tensor([2, 3],"float32"), x=None, dx=None, axis=-1, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 3 / 6 (50.0%)
Greatest absolute difference: 0.15579813718795776 at index (1, 2) (up to 0.01 allowed)
Greatest relative difference: 6.8823323249816895 at index (1, 2) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2, 3]), dtype=torch.float32)
tensor([[0.1543, 0.3327, 0.1784],
        [0.1543, 0.3327, 0.1784]])
DESIRED: (shape=torch.Size([2, 3]), dtype=torch.float32)
tensor([[0.1543, 0.3327, 0.1784],
        [0.2590, 0.2817, 0.0226]])

2025-06-09 23:16:41.951932 GPU 6 128183 test begin: paddle.cumulative_trapezoid(y=Tensor([2, 3],"float32"), x=Tensor([2, 3],"float32"), dx=None, axis=-1, )
Warning: The core code of paddle.cumulative_trapezoid is too complex.
[accuracy error] backward  paddle.cumulative_trapezoid(y=Tensor([2, 3],"float32"), x=Tensor([2, 3],"float32"), dx=None, axis=-1, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 3 / 6 (50.0%)
Greatest absolute difference: 0.13130873441696167 at index (1, 1) (up to 0.01 allowed)
Greatest relative difference: 1.1236340999603271 at index (1, 2) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2, 3]), dtype=torch.float32)
tensor([[ 0.1236,  0.1005, -0.0231],
        [ 0.1236,  0.1005, -0.0231]])
DESIRED: (shape=torch.Size([2, 3]), dtype=torch.float32)
tensor([[ 0.1236,  0.1005, -0.0231],
        [ 0.2427,  0.2319, -0.0109]])

2025-06-09 23:16:41.991768 GPU 5 128179 test begin: paddle.cumulative_trapezoid(y=Tensor([2, 3],"float64"), x=None, dx=None, axis=-1, )
Warning: The core code of paddle.cumulative_trapezoid is too complex.
W0609 23:16:42.107234 128179 multiply_fwd_func.cc:76] got different data type, run type promotion automatically, this may cause data type been changed.
[accuracy error] backward  paddle.cumulative_trapezoid(y=Tensor([2, 3],"float64"), x=None, dx=None, axis=-1, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 3 / 6 (50.0%)
Greatest absolute difference: 0.6443680770136986 at index (1, 1) (up to 0.01 allowed)
Greatest relative difference: 3.081234737122416 at index (1, 2) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2, 3]), dtype=torch.float64)
tensor([[-0.2367, -0.3300, -0.0933],
        [-0.2367, -0.3300, -0.0933]], dtype=torch.float64)
DESIRED: (shape=torch.Size([2, 3]), dtype=torch.float64)
tensor([[-0.2367, -0.3300, -0.0933],
        [ 0.2695,  0.3143,  0.0448]], dtype=torch.float64)

2025-06-09 23:16:41.999470 GPU 7 128180 test begin: paddle.cumulative_trapezoid(y=Tensor([2, 3],"float64"), x=Tensor([2, 3],"float64"), dx=None, axis=-1, )
Warning: The core code of paddle.cumulative_trapezoid is too complex.
[accuracy error] backward  paddle.cumulative_trapezoid(y=Tensor([2, 3],"float64"), x=Tensor([2, 3],"float64"), dx=None, axis=-1, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 3 / 6 (50.0%)
Greatest absolute difference: 0.0880245683923466 at index (1, 2) (up to 0.01 allowed)
Greatest relative difference: 3.5526075368205214 at index (1, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2, 3]), dtype=torch.float64)
tensor([[ 0.0464,  0.0325, -0.0139],
        [ 0.0464,  0.0325, -0.0139]], dtype=torch.float64)
DESIRED: (shape=torch.Size([2, 3]), dtype=torch.float64)
tensor([[ 0.0464,  0.0325, -0.0139],
        [-0.0182,  0.0560,  0.0741]], dtype=torch.float64)

2025-06-09 23:16:42.105468 GPU 4 128186 test begin: paddle.cumulative_trapezoid(y=Tensor([3, 3, 4],"float32"), x=Tensor([3],"float32"), dx=None, axis=1, )
Warning: The core code of paddle.cumulative_trapezoid is too complex.
[accuracy error] backward  paddle.cumulative_trapezoid(y=Tensor([3, 3, 4],"float32"), x=Tensor([3],"float32"), dx=None, axis=1, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 21 / 36 (58.3%)
Greatest absolute difference: 0.1856607347726822 at index (1, 1, 3) (up to 0.01 allowed)
Greatest relative difference: 94.80085754394531 at index (2, 0, 2) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([3, 3, 4]), dtype=torch.float32)
tensor([[[-0.0083, -0.0034,  0.0131, -0.0134],
         [-0.0877, -0.0372,  0.0880, -0.0601],
         [-0.0793, -0.0338,  0.0749, -0.0467]],

        [[-0.0083, -0.0034,  0.0131, -0.0134],
         [-0.0877, -0.0372,  0.0880, -0.0601],
         [-0.0793, -0.0338,  0.0749, -0.0467]],

        [[-0.0083, -0.0034,  0.0131, -0.0134],
         [-0.0877, -0.0372,  0.0880, -0.0601],
         [-0.0793, -0.0338,  0.0749, -0.0467]]])
DESIRED: (shape=torch.Size([3, 3, 4]), dtype=torch.float32)
tensor([[[-0.0083, -0.0034,  0.0131, -0.0134],
         [-0.0877, -0.0372,  0.0880, -0.0601],
         [-0.0793, -0.0338,  0.0749, -0.0467]],

        [[-0.0142, -0.0218, -0.0052,  0.0321],
         [-0.0460, -0.0643, -0.0961,  0.1255],
         [-0.0317, -0.0425, -0.0909,  0.0934]],

        [[-0.0230,  0.0006,  0.0001,  0.0049],
         [-0.0675,  0.0323, -0.0750,  0.0337],
         [-0.0445,  0.0317, -0.0752,  0.0287]]])

2025-06-09 23:16:42.124340 GPU 7 128196 test begin: paddle.expand(Tensor([3, 2],"float16"), shape=list[512,3,2,], )
[accuracy error] backward  paddle.expand(Tensor([3, 2],"float16"), shape=list[512,3,2,], ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 6 / 6 (100.0%)
Greatest absolute difference: 1.125 at index (2, 0) (up to 0.01 allowed)
Greatest relative difference: 0.13330078125 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([3, 2]), dtype=torch.float16)
tensor([[  5.2305,  -1.3359],
        [ -6.1367,  -7.9102],
        [-14.5625,   8.3125]], dtype=torch.float16)
DESIRED: (shape=torch.Size([3, 2]), dtype=torch.float16)
tensor([[  6.0352,  -1.3779],
        [ -6.6953,  -8.4844],
        [-15.6875,   8.5234]], dtype=torch.float16)

2025-06-10 11:50:10.313768 GPU 3 67422 test begin: paddle.geometric.send_ue_recv(Tensor([10, 20],"float64"), Tensor([150, 1],"float64"), Tensor([150],"int64"), Tensor([150],"int64"), "add", "max", None, None, )
One of the differentiated Tensors does not require grad

2025-06-10 11:50:12.035305 GPU 3 67428 test begin: paddle.geometric.send_ue_recv(Tensor([10, 20],"float64"), Tensor([150, 1],"float64"), Tensor([150],"int64"), Tensor([150],"int64"), "add", "min", None, None, )
One of the differentiated Tensors does not require grad
malloc(): smallbin double linked list corrupted

2025-06-10 11:50:24.720028 GPU 3 67425 test begin: paddle.geometric.send_ue_recv(Tensor([10, 20],"float64"), Tensor([150, 1],"float64"), Tensor([150],"int64"), Tensor([150],"int64"), "add", "sum", None, None, )
One of the differentiated Tensors does not require grad
corrupted size vs. prev_size

2025-06-10 11:50:25.826041 GPU 3 67427 test begin: paddle.geometric.send_ue_recv(Tensor([10, 20],"float64"), Tensor([150, 1],"float64"), Tensor([150],"int64"), Tensor([150],"int64"), "mul", "mean", None, None, )
One of the differentiated Tensors does not require grad

2025-06-10 11:50:26.332787 GPU 3 67426 test begin: paddle.geometric.send_ue_recv(Tensor([10, 20],"float64"), Tensor([150, 1],"float64"), Tensor([150],"int64"), Tensor([150],"int64"), "mul", "min", None, None, )
One of the differentiated Tensors does not require grad
corrupted size vs. prev_size

2025-06-10 00:11:12.234237 GPU 6 156006 test begin: paddle.geometric.send_ue_recv(Tensor([10, 20],"float64"), Tensor([150, 1],"float64"), Tensor([150],"int64"), Tensor([150],"int64"), "mul", "sum", None, None, )
One of the differentiated Tensors does not require grad

2025-06-10 11:50:26.338039 GPU 3 67423 test begin: paddle.geometric.send_ue_recv(Tensor([10, 8, 5],"float64"), Tensor([15, 8, 1],"float64"), Tensor([15],"int64"), Tensor([15],"int64"), "add", "mean", None, None, )
One of the differentiated Tensors does not require grad
free(): invalid next size (normal)

2025-06-10 11:50:31.834015 GPU 3 67885 test begin: paddle.geometric.send_ue_recv(Tensor([10, 8, 5],"float64"), Tensor([15, 8, 1],"float64"), Tensor([15],"int64"), Tensor([15],"int64"), "mul", "min", None, None, )
One of the differentiated Tensors does not require grad


--------------------------------------
C++ Traceback (most recent call last):
--------------------------------------
0   paddle::pybind::eager_api_send_ue_recv(_object*, _object*, _object*)
1   send_ue_recv_ad_func(paddle::Tensor const&, paddle::Tensor const&, paddle::Tensor const&, paddle::Tensor const&, std::string, std::string, paddle::experimental::IntArrayBase<paddle::Tensor>)
2   paddle::experimental::send_ue_recv_intermediate(paddle::Tensor const&, paddle::Tensor const&, paddle::Tensor const&, paddle::Tensor const&, std::string const&, std::string const&, paddle::experimental::IntArrayBase<paddle::Tensor> const&)
3   void phi::GraphSendUERecvOpKernelLaunchHelper<phi::CPUContext, double, long>(phi::CPUContext const&, phi::DenseTensor const&, phi::DenseTensor const&, phi::DenseTensor const&, phi::DenseTensor const&, std::string const&, std::string const&, long, phi::DenseTensor*, phi::DenseTensor*)
4   GOMP_parallel

----------------------
Error Message Summary:
----------------------
FatalError: `Segmentation fault` is detected by the operating system.
  [TimeInfo: *** Aborted at 1749527446 (unix time) try "date -d @1749527446" if you are using GNU date ***]
  [SignalInfo: *** SIGSEGV (@0x0) received by PID 67885 (TID 0x7f360f436740) from PID 0 ***]


2025-06-10 12:00:39.058224 GPU 3 78430 test begin: paddle.incubate.nn.functional.fused_layer_norm(Tensor([16, 256],"float32"), Tensor([256],"float32"), Tensor([256],"float32"), 1e-05, begin_norm_axis=1, bias=Tensor([256],"float32"), residual=Tensor([16, 256],"float32"), residual_alpha=0.69204696, )
[accuracy error] paddle.incubate.nn.functional.fused_layer_norm(Tensor([16, 256],"float32"), Tensor([256],"float32"), Tensor([256],"float32"), 1e-05, begin_norm_axis=1, bias=Tensor([256],"float32"), residual=Tensor([16, 256],"float32"), residual_alpha=0.69204696, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 16 / 16 (100.0%)
Greatest absolute difference: 2.189056396484375 at index (10,) (up to 0.01 allowed)
Greatest relative difference: 12.27008056640625 at index (10,) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([16]), dtype=torch.float32)
tensor([2.1316, 2.1618, 2.0742, 2.1571, 2.0900, 2.1160, 2.1988, 2.1812, 2.1951, 2.2344, 2.3675, 2.2542, 2.1532, 2.1980,
        2.2312, 2.0873])
DESIRED: (shape=torch.Size([16]), dtype=torch.float32)
tensor([0.2201, 0.2140, 0.2324, 0.2149, 0.2289, 0.2233, 0.2068, 0.2102, 0.2075, 0.2003, 0.1784, 0.1968, 0.2157, 0.2070,
        0.2009, 0.2295])

2025-06-10 00:11:12.920402 GPU 7 156015 test begin: paddle.kron(Tensor([12, 8],"float16"), Tensor([16, 8],"float16"), )
[accuracy error] backward  paddle.kron(Tensor([12, 8],"float16"), Tensor([16, 8],"float16"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 38 / 96 (39.6%)
Greatest absolute difference: 0.04296875 at index (2, 3) (up to 0.01 allowed)
Greatest relative difference: 1.2685546875 at index (7, 6) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([12, 8]), dtype=torch.float16)
tensor([[-0.0276,  0.2125, -1.0283, -1.3105, -0.0133, -1.2900,  0.3198, -0.0983],
        [-0.5347, -0.1968, -0.4861,  0.6089, -0.9395,  0.9224,  0.1805, -0.3774],
        [ 0.3586,  0.9873, -0.3818, -2.0039, -0.4434,  1.0039,  0.0107, -1.0371],
        [ 0.4692,  0.6948,  0.6162, -0.9829, -0.4988,  0.1801, -0.4585,  0.3508],
        [-0.2939,  0.4092,  1.1719,  0.3386, -1.2461,  0.1981,  0.1387, -1.7568],
        [ 0.7437,  1.2676,  0.0995,  0.6714, -0.4690, -1.2119, -0.1122, -0.3018],
        [-0.1501,  0.4226, -0.4634,  0.3718, -1.2559, -0.3669, -1.4072,  0.3452],
        [ 0.2192,  0.3142, -0.3005,  1.5498, -0.3752, -0.5518,  0.0273, -0.3110],
        [-1.3242,  0.8555,  0.1940, -0.0599, -0.1113,  0.5581, -0.7056, -0.0493],
        [-0.3831,  0.5898, -1.2793,  0.1301,  1.0078, -0.2593,  0.2742,  1.0791],
        [ 0.7231, -0.1375, -0.8721,  0.8262,  0.9438, -0.3013, -0.4255,  1.5840],
        [ 0.1582, -0.8101,  0.3120, -2.4805, -0.4126,  0.8584,  0.1077,  1.0137]], dtype=torch.float16)
DESIRED: (shape=torch.Size([12, 8]), dtype=torch.float16)
tensor([[-0.0159,  0.2195, -1.0557, -1.3398, -0.0273, -1.3311,  0.3521, -0.0964],
        [-0.5278, -0.2047, -0.4844,  0.6152, -0.9521,  0.9434,  0.1718, -0.3870],
        [ 0.3569,  0.9966, -0.3901, -2.0469, -0.4604,  1.0234,  0.0142, -1.0537],
        [ 0.4690,  0.7124,  0.6187, -1.0000, -0.4937,  0.1936, -0.4504,  0.3560],
        [-0.3076,  0.4399,  1.2061,  0.3418, -1.2871,  0.2068,  0.1429, -1.7783],
        [ 0.7700,  1.2920,  0.0959,  0.6997, -0.4878, -1.2461, -0.0948, -0.3127],
        [-0.1495,  0.4048, -0.4822,  0.3828, -1.2686, -0.3691, -1.4326,  0.3491],
        [ 0.2051,  0.3037, -0.3228,  1.5771, -0.3738, -0.5522,  0.0120, -0.3147],
        [-1.3379,  0.8740,  0.2181, -0.0388, -0.1145,  0.5562, -0.7178, -0.0495],
        [-0.3716,  0.6143, -1.3066,  0.1388,  1.0342, -0.2571,  0.2637,  1.0957],
        [ 0.7290, -0.1312, -0.8984,  0.8447,  0.9692, -0.2986, -0.4097,  1.5996],
        [ 0.1647, -0.8379,  0.3105, -2.5137, -0.4263,  0.8486,  0.0986,  1.0244]], dtype=torch.float16)

2025-06-10 00:11:12.920709 GPU 7 155998 test begin: paddle.kron(Tensor([16, 16],"float16"), Tensor([32, 20],"float16"), )
[accuracy error] backward  paddle.kron(Tensor([16, 16],"float16"), Tensor([32, 20],"float16"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 240 / 256 (93.8%)
Greatest absolute difference: 0.59765625 at index (8, 8) (up to 0.01 allowed)
Greatest relative difference: 44.59375 at index (13, 14) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([16, 16]), dtype=torch.float16)
tensor([[-0.8511, -1.4580, -2.3809,  ...,  0.8970,  3.5332, -1.3682],
        [-0.3650,  1.0156,  3.7695,  ..., -2.3105,  0.8481, -1.4307],
        [-1.0264, -0.2764, -0.3550,  ..., -3.5664, -1.4619,  1.6445],
        ...,
        [ 1.8994,  3.9961, -2.3184,  ...,  0.3855, -0.1057, -0.6055],
        [ 0.6001,  1.2363,  1.2988,  ..., -0.0150, -1.3838, -0.6187],
        [ 1.1523,  0.8223,  1.0732,  ...,  0.9585,  0.8516, -3.8184]], dtype=torch.float16)
DESIRED: (shape=torch.Size([16, 16]), dtype=torch.float16)
tensor([[-8.7646e-01, -1.5820e+00, -2.5957e+00,  ...,  8.5107e-01,  3.8691e+00, -1.4814e+00],
        [-4.4946e-01,  1.0693e+00,  4.1797e+00,  ..., -2.6250e+00,  1.0732e+00, -1.6318e+00],
        [-1.0518e+00, -3.3960e-01, -3.6426e-01,  ..., -3.9766e+00, -1.5156e+00,  1.9434e+00],
        ...,
        [ 2.1738e+00,  4.2031e+00, -2.7148e+00,  ...,  3.5352e-01, -2.3174e-03, -6.4111e-01],
        [ 7.5098e-01,  1.5293e+00,  1.5410e+00,  ...,  6.4880e-02, -1.6064e+00, -7.7393e-01],
        [ 1.2402e+00,  8.3545e-01,  1.0967e+00,  ...,  7.0020e-01,  8.3008e-01, -4.1289e+00]], dtype=torch.float16)

2025-06-10 00:11:12.925863 GPU 6 156010 test begin: paddle.kron(Tensor([16, 16],"float16"), Tensor([32, 32],"float16"), )
[accuracy error] backward  paddle.kron(Tensor([16, 16],"float16"), Tensor([32, 32],"float16"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 249 / 256 (97.3%)
Greatest absolute difference: 1.5390625 at index (3, 14) (up to 0.01 allowed)
Greatest relative difference: 28.1875 at index (15, 7) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([16, 16]), dtype=torch.float16)
tensor([[-1.8945,  0.4307, -0.1077,  ..., -6.5938,  3.2793, -0.8315],
        [-0.7656, -0.5078,  2.1289,  ..., -0.9819,  1.0293, -0.1735],
        [-0.5210, -1.1953, -0.1891,  ..., -2.2324,  1.1426, -3.4590],
        ...,
        [-1.9600, -1.1611,  4.7930,  ...,  0.6348, -1.2930, -1.6455],
        [-3.5762, -1.4141,  0.1389,  ..., -1.9863, -0.2576,  0.9448],
        [-0.1368,  0.6758,  0.6470,  ...,  0.1196,  0.3884,  2.3848]], dtype=torch.float16)
DESIRED: (shape=torch.Size([16, 16]), dtype=torch.float16)
tensor([[-2.1211,  0.1128,  0.0667,  ..., -7.0898,  3.6602, -0.7979],
        [-1.1543, -0.9458,  2.5273,  ..., -0.8477,  1.7617, -0.1398],
        [-0.2759, -1.6289, -0.1201,  ..., -2.8203,  1.0342, -3.7031],
        ...,
        [-2.7871, -1.6553,  5.4609,  ...,  0.8760, -1.3750, -1.9180],
        [-4.1562, -1.6875,  0.4841,  ..., -2.0371, -0.3101,  0.9272],
        [-0.1584,  1.0225,  0.5156,  ...,  0.2822,  0.3276,  2.2637]], dtype=torch.float16)

2025-06-10 00:11:12.930737 GPU 6 156013 test begin: paddle.kron(Tensor([16, 8],"float16"), Tensor([16, 8],"float16"), )
[accuracy error] backward  paddle.kron(Tensor([16, 8],"float16"), Tensor([16, 8],"float16"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 48 / 128 (37.5%)
Greatest absolute difference: 0.0517578125 at index (4, 2) (up to 0.01 allowed)
Greatest relative difference: 0.64990234375 at index (4, 7) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([16, 8]), dtype=torch.float16)
tensor([[-0.7822,  0.9648, -0.3992,  ...,  0.2595,  1.5762, -1.4082],
        [ 0.1464,  1.9463,  0.6055,  ..., -1.1094,  0.1841,  0.4573],
        [ 1.6680, -0.6890, -1.5547,  ...,  0.3237, -0.4573,  0.4431],
        ...,
        [ 0.9209,  0.8975,  0.3303,  ...,  0.3779,  0.4617,  0.4270],
        [-2.3594,  1.2344, -0.6328,  ...,  1.3936, -0.7930,  0.2424],
        [ 0.3313, -0.5415, -0.8135,  ..., -1.5088, -0.5737,  1.0127]], dtype=torch.float16)
DESIRED: (shape=torch.Size([16, 8]), dtype=torch.float16)
tensor([[-0.7993,  1.0010, -0.3948,  ...,  0.2491,  1.5967, -1.4277],
        [ 0.1456,  1.9912,  0.6147,  ..., -1.1553,  0.1656,  0.4583],
        [ 1.6924, -0.6948, -1.6045,  ...,  0.3315, -0.4680,  0.4663],
        ...,
        [ 0.9238,  0.9097,  0.3406,  ...,  0.3892,  0.4678,  0.4417],
        [-2.4043,  1.2627, -0.6401,  ...,  1.4199, -0.8013,  0.2515],
        [ 0.3357, -0.5625, -0.8462,  ..., -1.5557, -0.5874,  1.0264]], dtype=torch.float16)

2025-06-10 00:11:12.932367 GPU 4 156022 test begin: paddle.kron(Tensor([20, 16],"float16"), Tensor([32, 32],"float16"), )
[accuracy error] backward  paddle.kron(Tensor([20, 16],"float16"), Tensor([32, 32],"float16"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 307 / 320 (95.9%)
Greatest absolute difference: 1.3984375 at index (7, 6) (up to 0.01 allowed)
Greatest relative difference: 17.578125 at index (17, 8) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([20, 16]), dtype=torch.float16)
tensor([[-0.8955,  0.2213, -2.1699,  ..., -3.4922, -0.7134, -3.3398],
        [ 0.5820, -1.7695,  4.5625,  ...,  1.0596, -3.4844, -4.3828],
        [ 3.0879, -1.2754,  0.7974,  ...,  5.1484, -0.1316,  1.0693],
        ...,
        [ 2.6816,  0.9263,  1.2930,  ..., -1.3916, -2.9395,  0.0153],
        [ 0.5020, -2.4648,  0.1003,  ...,  0.7393, -4.4531, -2.3535],
        [ 2.8750,  5.8320, -2.3750,  ..., -3.3789,  2.3574,  2.1816]], dtype=torch.float16)
DESIRED: (shape=torch.Size([20, 16]), dtype=torch.float16)
tensor([[-1.4238,  0.1475, -2.5332,  ..., -3.5918, -0.7930, -3.8203],
        [ 1.0635, -1.3223,  5.2773,  ...,  0.8662, -3.6738, -5.5078],
        [ 3.7344, -1.6953,  0.6245,  ...,  5.9336, -0.0608,  1.0850],
        ...,
        [ 2.8301,  1.1279,  1.3086,  ..., -1.9688, -3.6465,  0.0596],
        [ 0.9697, -2.9395,  0.1146,  ...,  0.9385, -5.4375, -2.4766],
        [ 2.9492,  6.9766, -2.9492,  ..., -3.9043,  3.0684,  2.7227]], dtype=torch.float16)

2025-06-10 00:11:12.940640 GPU 7 156023 test begin: paddle.kron(Tensor([24, 24],"float16"), Tensor([32, 32],"float16"), )
[accuracy error] backward  paddle.kron(Tensor([24, 24],"float16"), Tensor([32, 32],"float16"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 556 / 576 (96.5%)
Greatest absolute difference: 1.3359375 at index (0, 23) (up to 0.01 allowed)
Greatest relative difference: 47.8125 at index (12, 4) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([24, 24]), dtype=torch.float16)
tensor([[ 3.4805, -0.8369, -1.9883,  ...,  3.8047, -1.3555,  5.4336],
        [ 1.7158,  0.2812,  0.4558,  ..., -0.0930, -4.4141, -2.0840],
        [-6.0312, -1.3828, -1.0918,  ..., -2.3320, -3.0859,  5.1367],
        ...,
        [-3.5449,  0.7427, -1.0635,  ...,  0.1960,  0.5640,  0.5239],
        [-0.2905, -2.2969, -0.3730,  ...,  5.4922,  2.8809, -1.1807],
        [ 0.0551, -2.4512, -2.5430,  ..., -0.2646,  1.0352, -1.2930]], dtype=torch.float16)
DESIRED: (shape=torch.Size([24, 24]), dtype=torch.float16)
tensor([[ 4.1875, -1.1377, -2.1973,  ...,  3.9883, -1.8955,  6.7695],
        [ 1.8799,  0.0737,  0.3306,  ...,  0.1420, -4.8672, -2.2656],
        [-6.9258, -1.7607, -1.1797,  ..., -3.0938, -3.5254,  5.9648],
        ...,
        [-4.3164,  0.8677, -1.0693,  ...,  0.2271,  0.3977,  0.5537],
        [-0.2008, -2.4082, -0.9043,  ...,  6.0195,  3.4941, -1.6299],
        [ 0.4775, -2.6641, -3.1055,  ..., -0.2856,  1.3857, -1.5361]], dtype=torch.float16)

2025-06-10 00:11:12.941246 GPU 4 156011 test begin: paddle.kron(Tensor([24, 86],"float16"), Tensor([32, 128],"float16"), )
[accuracy error] backward  paddle.kron(Tensor([24, 86],"float16"), Tensor([32, 128],"float16"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 2054 / 2064 (99.5%)
Greatest absolute difference: 11.078125 at index (6, 55) (up to 0.01 allowed)
Greatest relative difference: 393.0 at index (12, 56) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([24, 86]), dtype=torch.float16)
tensor([[ 0.5962,  1.0820, -1.1094,  ..., -4.1602,  0.8794,  0.5640],
        [-0.1504,  0.8008,  2.1387,  ...,  1.6826, -3.2812,  2.3652],
        [-2.0859, -0.8774,  2.4336,  ...,  1.3643, -6.4102, -0.5000],
        ...,
        [-2.5801, -1.5527, -5.0938,  ...,  4.6836,  2.6016, -1.3203],
        [-0.8115,  2.9590, -3.8066,  ...,  0.8599,  4.5039,  0.0181],
        [-5.0664, -1.1055,  1.3828,  ..., -0.1420, -3.0020,  2.1270]], dtype=torch.float16)
DESIRED: (shape=torch.Size([24, 86]), dtype=torch.float16)
tensor([[  0.9277,   0.9536,  -0.6680,  ...,  -9.0625,   5.0625,   1.3018],
        [ -1.0479,   6.5039,   3.1094,  ...,   3.8555,  -3.8359,   7.9453],
        [ -2.3984,  -2.4941,   3.0586,  ...,   3.3398, -10.6250,   1.4648],
        ...,
        [ -2.8125,  -3.1523,  -4.6602,  ...,   9.3438,   1.7549,  -5.4023],
        [ -1.5303,   2.2656,  -6.0938,  ...,   2.4492,  10.8984,  -1.7139],
        [ -9.0625,  -0.2622,   3.6055,  ...,   1.0742,  -5.5781,   3.4473]], dtype=torch.float16)

2025-06-10 00:11:12.945993 GPU 5 156021 test begin: paddle.kron(Tensor([32, 16],"float16"), Tensor([32, 32],"float16"), )
[accuracy error] backward  paddle.kron(Tensor([32, 16],"float16"), Tensor([32, 32],"float16"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 486 / 512 (94.9%)
Greatest absolute difference: 1.375 at index (5, 1) (up to 0.01 allowed)
Greatest relative difference: 119.6875 at index (11, 14) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([32, 16]), dtype=torch.float16)
tensor([[ 2.2168,  1.0371, -3.8320,  ...,  1.1055, -0.3811,  3.9805],
        [-1.5234,  2.2344, -1.8379,  ..., -0.6689,  1.7949,  1.6689],
        [ 2.5645,  2.8594, -1.1836,  ..., -2.1973,  2.0430,  4.4922],
        ...,
        [ 2.6035,  0.0919, -1.6104,  ...,  3.0234,  2.1738, -2.7031],
        [ 0.9766, -0.2654,  0.2365,  ..., -3.5332, -4.2031, -4.6953],
        [-0.0858,  1.1260, -1.6904,  ...,  0.0825, -1.3008,  2.4199]], dtype=torch.float16)
DESIRED: (shape=torch.Size([32, 16]), dtype=torch.float16)
tensor([[ 2.2109,  1.6855, -4.0391,  ...,  1.6387, -0.7222,  4.4570],
        [-1.4111,  2.4941, -2.2949,  ..., -0.8813,  1.8447,  2.3691],
        [ 2.9844,  3.4746, -1.7939,  ..., -2.6055,  2.3652,  5.8555],
        ...,
        [ 2.6641,  0.5386, -2.0977,  ...,  3.6738,  2.5391, -3.1895],
        [ 0.9702, -0.1398, -0.1233,  ..., -4.1094, -4.7617, -5.4648],
        [-0.1818,  1.4736, -2.0098,  ...,  0.3223, -1.8652,  2.7793]], dtype=torch.float16)

2025-06-10 00:11:12.953803 GPU 7 156019 test begin: paddle.kron(Tensor([8, 16],"float16"), Tensor([8, 16],"float16"), )
[accuracy error] backward  paddle.kron(Tensor([8, 16],"float16"), Tensor([8, 16],"float16"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 60 / 128 (46.9%)
Greatest absolute difference: 0.060546875 at index (6, 5) (up to 0.01 allowed)
Greatest relative difference: 0.6767578125 at index (7, 2) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([8, 16]), dtype=torch.float16)
tensor([[ 0.1761,  0.2078,  0.6851,  ..., -0.9780,  0.3748, -0.4753],
        [-0.6978,  1.4590, -0.1823,  ...,  1.1445,  0.0529, -0.9209],
        [ 0.1523,  0.2078, -0.8701,  ...,  0.5498, -0.1841,  0.6064],
        ...,
        [-0.3027, -0.6401, -1.9043,  ..., -0.4116, -0.4890,  0.8306],
        [-0.6226, -0.0695, -0.9766,  ..., -0.7842,  0.2651,  0.3779],
        [-1.9434, -1.6270, -0.0089,  ...,  0.4771, -0.0290, -0.6079]], dtype=torch.float16)
DESIRED: (shape=torch.Size([8, 16]), dtype=torch.float16)
tensor([[ 0.1578,  0.2208,  0.6938,  ..., -1.0137,  0.3914, -0.4958],
        [-0.7100,  1.4932, -0.1812,  ...,  1.1445,  0.0574, -0.9663],
        [ 0.1669,  0.2236, -0.9106,  ...,  0.5596, -0.1917,  0.6270],
        ...,
        [-0.3125, -0.6465, -1.9414,  ..., -0.4224, -0.5029,  0.8403],
        [-0.6294, -0.0939, -0.9878,  ..., -0.7915,  0.2803,  0.3923],
        [-1.9883, -1.6484, -0.0276,  ...,  0.4993, -0.0383, -0.6318]], dtype=torch.float16)

2025-06-10 00:11:12.956452 GPU 6 156017 test begin: paddle.kron(Tensor([8, 4],"float16"), Tensor([8, 8],"float16"), )
[accuracy error] backward  paddle.kron(Tensor([8, 4],"float16"), Tensor([8, 8],"float16"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 1 / 32 (3.1%)
Greatest absolute difference: 0.01904296875 at index (3, 0) (up to 0.01 allowed)
Greatest relative difference: 0.021453857421875 at index (3, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([8, 4]), dtype=torch.float16)
tensor([[-0.5850, -0.3147,  0.5874,  0.9492],
        [ 0.7563, -0.3887,  0.7476, -0.7061],
        [-0.3777, -0.7422, -1.0117, -0.0185],
        [-0.8687, -0.2057, -0.4812,  0.1205],
        [-0.7393, -0.2788, -0.6094,  0.6377],
        [ 0.3547, -0.9087,  0.1278, -0.6479],
        [ 0.8794,  0.6499, -1.4668, -0.1035],
        [ 0.2269,  0.4258, -0.3943, -0.9985]], dtype=torch.float16)
DESIRED: (shape=torch.Size([8, 4]), dtype=torch.float16)
tensor([[-0.5977, -0.3203,  0.5938,  0.9600],
        [ 0.7607, -0.3914,  0.7563, -0.7095],
        [-0.3809, -0.7432, -1.0205, -0.0151],
        [-0.8877, -0.2062, -0.4854,  0.1228],
        [-0.7524, -0.2766, -0.6182,  0.6455],
        [ 0.3542, -0.9165,  0.1296, -0.6587],
        [ 0.8818,  0.6567, -1.4795, -0.1069],
        [ 0.2305,  0.4307, -0.4006, -1.0059]], dtype=torch.float16)

2025-06-10 00:11:12.965802 GPU 4 156000 test begin: paddle.kron(Tensor([8, 8],"float16"), Tensor([8, 8],"float16"), )
[accuracy error] backward  paddle.kron(Tensor([8, 8],"float16"), Tensor([8, 8],"float16"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 1 / 64 (1.6%)
Greatest absolute difference: 0.0205078125 at index (7, 2) (up to 0.01 allowed)
Greatest relative difference: 0.030364990234375 at index (7, 2) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([8, 8]), dtype=torch.float16)
tensor([[ 0.1370,  0.7397, -0.0139, -0.3147, -0.6021, -0.4561, -0.1646,  0.5688],
        [-0.8081,  0.2561,  0.1537,  0.0895,  0.4036, -0.4399,  0.9570,  0.3367],
        [ 0.6299, -0.6108,  0.3262, -0.1228, -1.0127,  0.9004,  0.1143,  0.7690],
        [ 0.3892,  0.6777,  0.1543,  0.8140, -0.7173,  0.1941, -0.8530, -0.1414],
        [-0.2732, -0.9746, -0.1917,  0.7998,  0.3164,  0.9395, -0.0312, -0.5239],
        [ 1.2051,  0.2778,  0.3931, -0.5625, -0.3726, -0.2155, -0.6108,  0.7402],
        [ 0.3369, -0.0291,  0.2966,  0.4473,  0.0643,  0.1936,  0.4744,  0.2322],
        [ 0.7227,  0.2815, -0.6548,  0.3130, -0.2524, -0.2260, -0.9985, -0.6953]], dtype=torch.float16)
DESIRED: (shape=torch.Size([8, 8]), dtype=torch.float16)
tensor([[ 0.1362,  0.7456, -0.0188, -0.3167, -0.6055, -0.4617, -0.1619,  0.5771],
        [-0.8193,  0.2607,  0.1597,  0.0914,  0.4026, -0.4441,  0.9688,  0.3384],
        [ 0.6309, -0.6191,  0.3247, -0.1208, -1.0264,  0.9146,  0.1159,  0.7749],
        [ 0.3977,  0.6821,  0.1562,  0.8169, -0.7241,  0.1959, -0.8633, -0.1421],
        [-0.2732, -0.9819, -0.1959,  0.8091,  0.3167,  0.9517, -0.0362, -0.5288],
        [ 1.2188,  0.2854,  0.3997, -0.5737, -0.3813, -0.2194, -0.6240,  0.7437],
        [ 0.3420, -0.0251,  0.3042,  0.4531,  0.0676,  0.1935,  0.4775,  0.2380],
        [ 0.7324,  0.2883, -0.6753,  0.3127, -0.2568, -0.2289, -1.0127, -0.7065]], dtype=torch.float16)

2025-06-10 00:11:12.972813 GPU 6 156020 test begin: paddle.kron(Tensor([86, 24],"float16"), Tensor([128, 32],"float16"), )
[accuracy error] backward  paddle.kron(Tensor([86, 24],"float16"), Tensor([128, 32],"float16"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 2046 / 2064 (99.1%)
Greatest absolute difference: 9.609375 at index (77, 3) (up to 0.01 allowed)
Greatest relative difference: 223.875 at index (63, 21) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([86, 24]), dtype=torch.float16)
tensor([[-5.7578,  2.7109, -2.4277,  ...,  3.8398, -2.9492,  1.8555],
        [-0.9912, -2.2363,  2.2383,  ...,  0.1332,  0.2169, -2.9355],
        [-1.2598, -1.6182,  2.1289,  ...,  1.6113,  2.9336,  1.2822],
        ...,
        [-5.6328, -3.1074, -3.2598,  ..., -3.0449,  0.1000, -0.9175],
        [-7.5664,  1.2217,  0.1439,  ..., -4.6328,  4.4023,  4.1016],
        [ 2.9746, -4.6406,  1.0791,  ..., -4.9766,  2.8359, -1.2803]], dtype=torch.float16)
DESIRED: (shape=torch.Size([86, 24]), dtype=torch.float16)
tensor([[ -7.2578,   1.8125,  -2.5371,  ...,   5.3633,  -0.3889,   4.0781],
        [ -0.7729,  -1.2129,   5.5078,  ...,  -0.9336,  -2.6094,  -2.9258],
        [ -5.2734,  -2.4160,   0.1013,  ...,   3.5195,   3.7734,   3.6191],
        ...,
        [-10.2500,  -5.5664,  -6.9180,  ...,  -9.9688,  -0.6914,  -1.3311],
        [-11.7188,   0.7314,  -1.0283,  ...,  -8.6953,   6.0430,   8.5156],
        [  6.2031,  -8.2734,   2.3301,  ...,  -8.0781,   2.7480,  -0.7837]], dtype=torch.float16)

2025-06-10 00:11:28.865893 GPU 5 156012 test begin: paddle.linalg.cond(Tensor([3, 5, 4, 1],"float32"), -2, )
[accuracy error] backward  paddle.linalg.cond(Tensor([3, 5, 4, 1],"float32"), -2, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 49 / 60 (81.7%)
Greatest absolute difference: 4.1161551906590244e+26 at index (0, 0, 0, 0) (up to 0.01 allowed)
Greatest relative difference: inf at index (0, 0, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([3, 5, 4, 1]), dtype=torch.float32)
tensor([[[[-4.1162e+26],
          [-8.0376e+24],
          [-2.0786e+26],
          [ 7.2423e+25]],

         [[ 0.0000e+00],
          [ 0.0000e+00],
          [ 0.0000e+00],
          [ 0.0000e+00]],

         [[ 1.5062e-01],
          [ 2.4564e-01],
          [-1.0624e-01],
          [ 9.6238e-02]],

         [[-8.2775e-03],
          [ 1.5562e-02],
          [-5.6867e-02],
          [ 6.5708e-02]],

         [[ 2.0423e+14],
          [-2.3941e+14],
          [-1.4807e+14],
          [ 1.4159e+14]]],


        [[[-8.4350e-02],
          [ 7.8477e-02],
          [ 6.8012e-02],
          [-6.5632e-02]],

         [[ 5.0714e-02],
          [-8.2749e-02],
          [-1.9208e-01],
          [ 1.2514e-01]],

         [[ 2.8868e-03],
          [ 4.1882e-03],
          [-2.9405e-04],
          [-1.8382e-03]],

         [[-2.2635e+14],
          [ 2.3085e+14],
          [ 1.7880e+14],
          [-6.7100e+13]],

         [[-1.0433e-01],
          [-1.2526e-01],
          [ 1.2454e-01],
          [ 1.1526e-01]]],


        [[[ 8.3545e-03],
          [ 1.4572e-01],
          [-8.0229e-03],
          [-1.1133e-01]],

         [[-2.0576e-01],
          [ 2.4374e-01],
          [ 1.9760e-01],
          [ 1.3666e-01]],

         [[ 1.9202e+14],
          [-1.5377e+13],
          [-1.0374e+14],
          [-3.0517e+14]],

         [[ 8.4466e-02],
          [-2.9558e-02],
          [ 2.8333e-02],
          [-1.0865e-01]],

         [[-2.7160e-01],
          [-1.2101e-01],
          [-1.3452e-02],
          [ 3.7201e-01]]]])
DESIRED: (shape=torch.Size([3, 5, 4, 1]), dtype=torch.float32)
tensor([[[[ 0.0000e+00],
          [ 0.0000e+00],
          [ 0.0000e+00],
          [-0.0000e+00]],

         [[-0.0000e+00],
          [ 0.0000e+00],
          [ 0.0000e+00],
          [ 0.0000e+00]],

         [[ 0.0000e+00],
          [ 0.0000e+00],
          [-0.0000e+00],
          [ 0.0000e+00]],

         [[ 0.0000e+00],
          [-0.0000e+00],
          [ 0.0000e+00],
          [-0.0000e+00]],

         [[ 0.0000e+00],
          [-0.0000e+00],
          [-0.0000e+00],
          [ 0.0000e+00]]],


        [[[-0.0000e+00],
          [ 0.0000e+00],
          [ 0.0000e+00],
          [-0.0000e+00]],

         [[ 0.0000e+00],
          [-0.0000e+00],
          [-0.0000e+00],
          [ 0.0000e+00]],

         [[ 0.0000e+00],
          [ 0.0000e+00],
          [-0.0000e+00],
          [-0.0000e+00]],

         [[-8.9825e-09],
          [ 9.1610e-09],
          [ 7.0955e-09],
          [-2.6628e-09]],

         [[ 1.3213e-08],
          [ 1.5865e-08],
          [-1.5773e-08],
          [-1.4598e-08]]],


        [[[-0.0000e+00],
          [-0.0000e+00],
          [ 0.0000e+00],
          [ 0.0000e+00]],

         [[-0.0000e+00],
          [ 0.0000e+00],
          [ 0.0000e+00],
          [ 0.0000e+00]],

         [[ 0.0000e+00],
          [-0.0000e+00],
          [-0.0000e+00],
          [-0.0000e+00]],

         [[ 0.0000e+00],
          [-0.0000e+00],
          [ 0.0000e+00],
          [-0.0000e+00]],

         [[-0.0000e+00],
          [-0.0000e+00],
          [-0.0000e+00],
          [ 0.0000e+00]]]])

2025-06-10 00:11:30.156060 GPU 7 156014 test begin: paddle.linalg.eigh(Tensor([2, 2],"complex128"), "L", )
linalg_eigh_backward: The eigenvectors in the complex case are specified up to multiplication by e^{i phi}. The specified loss function depends on this quantity, so it is ill-defined.
[accuracy error] paddle.linalg.eigh(Tensor([2, 2],"complex128"), "L", ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 4 / 4 (100.0%)
Greatest absolute difference: 1.4987085258492399 at index (0, 1) (up to 0.01 allowed)
Greatest relative difference: 2.0000000000000004 at index (0, 1) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2, 2]), dtype=torch.complex128)
tensor([[-0.6622+0.0000j, -0.7494+0.0000j],
        [ 0.6717+0.3322j, -0.5936-0.2935j]], dtype=torch.complex128)
DESIRED: (shape=torch.Size([2, 2]), dtype=torch.complex128)
tensor([[ 0.6622+0.0000j,  0.7494+0.0000j],
        [-0.6717-0.3322j,  0.5936+0.2935j]], dtype=torch.complex128)

2025-06-10 00:11:30.239952 GPU 6 156013 test begin: paddle.linalg.eigh(Tensor([2, 2],"complex128"), "U", )
linalg_eigh_backward: The eigenvectors in the complex case are specified up to multiplication by e^{i phi}. The specified loss function depends on this quantity, so it is ill-defined.
[accuracy error] paddle.linalg.eigh(Tensor([2, 2],"complex128"), "U", ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 2 / 4 (50.0%)
Greatest absolute difference: 1.5630481589685126 at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: 2.0 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2, 2]), dtype=torch.complex128)
tensor([[ 0.7802-0.0462j,  0.6228-0.0368j],
        [-0.6239+0.0000j,  0.7815+0.0000j]], dtype=torch.complex128)
DESIRED: (shape=torch.Size([2, 2]), dtype=torch.complex128)
tensor([[-0.7802+0.0462j,  0.6228-0.0368j],
        [ 0.6239+0.0000j,  0.7815+0.0000j]], dtype=torch.complex128)

2025-06-10 00:11:30.398267 GPU 6 156010 test begin: paddle.linalg.eigh(Tensor([2, 2],"complex64"), "L", )
linalg_eigh_backward: The eigenvectors in the complex case are specified up to multiplication by e^{i phi}. The specified loss function depends on this quantity, so it is ill-defined.
[accuracy error] paddle.linalg.eigh(Tensor([2, 2],"complex64"), "L", ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 2 / 4 (50.0%)
Greatest absolute difference: 1.62847900390625 at index (0, 0) (up to 0.01 allowed)
Greatest relative difference: 1.9999998807907104 at index (0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2, 2]), dtype=torch.complex64)
tensor([[-0.8142+0.0000j, -0.5805+0.0000j],
        [ 0.5799+0.0278j, -0.8133-0.0389j]])
DESIRED: (shape=torch.Size([2, 2]), dtype=torch.complex64)
tensor([[ 0.8142+0.0000j, -0.5805+0.0000j],
        [-0.5799-0.0278j, -0.8133-0.0389j]])

2025-06-10 00:11:30.413976 GPU 7 156019 test begin: paddle.linalg.eigh(Tensor([2, 5, 5],"complex64"), )
linalg_eigh_backward: The eigenvectors in the complex case are specified up to multiplication by e^{i phi}. The specified loss function depends on this quantity, so it is ill-defined.
[accuracy error] paddle.linalg.eigh(Tensor([2, 5, 5],"complex64"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 50 / 50 (100.0%)
Greatest absolute difference: 1.6621440649032593 at index (1, 3, 2) (up to 0.01 allowed)
Greatest relative difference: 2.0 at index (0, 3, 4) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2, 5, 5]), dtype=torch.complex64)
tensor([[[-0.4623+0.0000j,  0.4767+0.0000j,  0.5435+0.0000j, -0.1505+0.0000j, -0.4909+0.0000j],
         [ 0.6162-0.2286j,  0.0219-0.1919j,  0.0522+0.2510j, -0.2120+0.4483j, -0.4363+0.1694j],
         [ 0.1565+0.3755j, -0.1548+0.4747j,  0.0560-0.0625j,  0.6227+0.0909j, -0.4267+0.0102j],
         [-0.1229-0.0593j, -0.1918-0.6257j, -0.1859+0.2696j,  0.3407-0.4104j, -0.3809-0.1274j],
         [-0.2587-0.3212j, -0.0814+0.2264j, -0.6054-0.3975j, -0.2241+0.0264j, -0.4370+0.0741j]],

        [[ 0.1929+0.0000j,  0.4356+0.0000j, -0.1701+0.0000j, -0.7474+0.0000j, -0.4308+0.0000j],
         [-0.0139+0.3166j,  0.4585-0.1228j,  0.1586-0.3408j,  0.5175+0.1057j, -0.5030-0.0312j],
         [-0.6444-0.4289j, -0.3069-0.0952j, -0.0296-0.1456j, -0.0492-0.1447j, -0.5017+0.0202j],
         [ 0.1705+0.1710j, -0.2188-0.0897j,  0.5815+0.6041j, -0.0088-0.2061j, -0.3594+0.1047j],
         [ 0.4344-0.1268j, -0.3579+0.5456j, -0.3234+0.0042j,  0.2075+0.2314j, -0.3997+0.0918j]]])
DESIRED: (shape=torch.Size([2, 5, 5]), dtype=torch.complex64)
tensor([[[-0.1414-4.4014e-01j, -0.4488-1.6056e-01j,  0.0418-5.4193e-01j,  0.1047-1.0820e-01j,  0.4909+2.4382e-04j],
         [ 0.4061+5.1682e-01j, -0.0852+1.7328e-01j,  0.2543-3.2715e-02j, -0.1748-4.6407e-01j,  0.4364-1.6918e-01j],
         [-0.3097+2.6384e-01j,  0.3056-3.9479e-01j, -0.0580-6.0602e-02j, -0.4983+3.8433e-01j,  0.4267-9.9527e-03j],
         [ 0.0188-1.3517e-01j, -0.0301+6.5377e-01j,  0.2545+2.0609e-01j,  0.0581+5.3022e-01j,  0.3808+1.2761e-01j],
         [ 0.2267-3.4457e-01j,  0.1529-1.8577e-01j, -0.4429+5.7309e-01j,  0.1369-1.7940e-01j,  0.4371-7.3931e-02j]],

        [[ 0.0845-1.7334e-01j, -0.0208+4.3509e-01j,  0.1641+4.4833e-02j, -0.1298+7.3600e-01j,  0.4265-6.0304e-02j],
         [ 0.2785+1.5132e-01j,  0.1007+4.6386e-01j, -0.2428+2.8694e-01j,  0.1940-4.9124e-01j,  0.5024-3.9473e-02j],
         [-0.6680+3.9123e-01j,  0.1098-3.0198e-01j, -0.0098+1.4820e-01j, -0.1511+2.3359e-02j,  0.4939-9.0256e-02j],
         [ 0.2284-7.8284e-02j,  0.1001-2.1425e-01j, -0.4017-7.3601e-01j, -0.2045-2.7164e-02j,  0.3412-1.5400e-01j],
         [ 0.0764-4.4606e-01j, -0.5278-3.8362e-01j,  0.3131+8.1151e-02j,  0.2639-1.6418e-01j,  0.3829-1.4688e-01j]]])

2025-06-10 00:11:30.592265 GPU 4 156022 test begin: paddle.linalg.eigh(Tensor([32, 32],"float32"), "L", )
[accuracy error] paddle.linalg.eigh(Tensor([32, 32],"float32"), "L", ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 439 / 1024 (42.9%)
Greatest absolute difference: 0.889765739440918 at index (15, 16) (up to 0.01 allowed)
Greatest relative difference: 2.007838487625122 at index (28, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([32, 32]), dtype=torch.float32)
tensor([[ 0.0888,  0.0525,  0.0998,  ...,  0.4287, -0.0437,  0.1671],
        [-0.1378, -0.1701, -0.1101,  ...,  0.0628,  0.0126,  0.1605],
        [-0.1681,  0.0803, -0.2133,  ..., -0.2676,  0.1163,  0.1575],
        ...,
        [-0.1273, -0.0280, -0.0184,  ...,  0.0792,  0.0553,  0.1829],
        [ 0.0096, -0.0919, -0.2106,  ...,  0.0978, -0.3688,  0.1583],
        [ 0.3101,  0.0509,  0.1638,  ..., -0.1018,  0.3071,  0.1869]])
DESIRED: (shape=torch.Size([32, 32]), dtype=torch.float32)
tensor([[-0.0887,  0.0524,  0.0997,  ..., -0.4287,  0.0437,  0.1671],
        [ 0.1378, -0.1701, -0.1100,  ..., -0.0628, -0.0126,  0.1605],
        [ 0.1682,  0.0804, -0.2134,  ...,  0.2676, -0.1163,  0.1575],
        ...,
        [ 0.1273, -0.0280, -0.0184,  ..., -0.0792, -0.0553,  0.1829],
        [-0.0096, -0.0919, -0.2107,  ..., -0.0978,  0.3688,  0.1583],
        [-0.3101,  0.0508,  0.1638,  ...,  0.1018, -0.3071,  0.1869]])

2025-06-10 00:11:30.655199 GPU 5 156018 test begin: paddle.linalg.eigh(Tensor([4, 4],"complex128"), "L", )
linalg_eigh_backward: The eigenvectors in the complex case are specified up to multiplication by e^{i phi}. The specified loss function depends on this quantity, so it is ill-defined.
[accuracy error] paddle.linalg.eigh(Tensor([4, 4],"complex128"), "L", ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 8 / 16 (50.0%)
Greatest absolute difference: 1.5960849009943574 at index (2, 0) (up to 0.01 allowed)
Greatest relative difference: 2.0000000000000013 at index (2, 3) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([4, 4]), dtype=torch.complex128)
tensor([[-0.3952+0.0000j,  0.5203+0.0000j, -0.5729+0.0000j, -0.4948+0.0000j],
        [-0.0377-0.3142j,  0.2391-0.4765j,  0.6214-0.1920j, -0.4380-0.0278j],
        [ 0.7503+0.2720j, -0.1446-0.0276j, -0.2036-0.1811j, -0.5156-0.0366j],
        [-0.3231-0.0489j, -0.5985+0.2551j,  0.1299+0.3971j, -0.5216-0.1524j]], dtype=torch.complex128)
DESIRED: (shape=torch.Size([4, 4]), dtype=torch.complex128)
tensor([[ 0.3952+0.0000j,  0.5203+0.0000j, -0.5729+0.0000j,  0.4948+0.0000j],
        [ 0.0377+0.3142j,  0.2391-0.4765j,  0.6214-0.1920j,  0.4380+0.0278j],
        [-0.7503-0.2720j, -0.1446-0.0276j, -0.2036-0.1811j,  0.5156+0.0366j],
        [ 0.3231+0.0489j, -0.5985+0.2551j,  0.1299+0.3971j,  0.5216+0.1524j]], dtype=torch.complex128)

2025-06-10 00:11:30.902785 GPU 7 155998 test begin: paddle.linalg.eigh(Tensor([4, 4],"complex64"), "L", )
linalg_eigh_backward: The eigenvectors in the complex case are specified up to multiplication by e^{i phi}. The specified loss function depends on this quantity, so it is ill-defined.
[accuracy error] paddle.linalg.eigh(Tensor([4, 4],"complex64"), "L", ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 16 / 16 (100.0%)
Greatest absolute difference: 1.6908886432647705 at index (2, 0) (up to 0.01 allowed)
Greatest relative difference: 2.0000009536743164 at index (1, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([4, 4]), dtype=torch.complex64)
tensor([[-0.2692+0.0000j, -0.6967+0.0000j,  0.3556+0.0000j, -0.5618+0.0000j],
        [-0.0202-0.0429j,  0.6820+0.0322j,  0.5104+0.0824j, -0.5131+0.0327j],
        [ 0.8454-0.0125j, -0.1048-0.0501j, -0.2669-0.0395j, -0.4439+0.0431j],
        [-0.4449+0.1124j,  0.1702-0.0768j, -0.7161+0.1438j, -0.4512+0.1324j]])
DESIRED: (shape=torch.Size([4, 4]), dtype=torch.complex64)
tensor([[ 0.2692+0.0000j,  0.6967+0.0000j, -0.3556+0.0000j,  0.5618+0.0000j],
        [ 0.0202+0.0429j, -0.6820-0.0322j, -0.5104-0.0824j,  0.5131-0.0327j],
        [-0.8454+0.0125j,  0.1048+0.0501j,  0.2669+0.0395j,  0.4439-0.0431j],
        [ 0.4449-0.1124j, -0.1702+0.0768j,  0.7161-0.1438j,  0.4512-0.1324j]])

2025-06-10 00:11:30.915828 GPU 4 156000 test begin: paddle.linalg.eigh(Tensor([4, 4],"complex64"), "U", )
linalg_eigh_backward: The eigenvectors in the complex case are specified up to multiplication by e^{i phi}. The specified loss function depends on this quantity, so it is ill-defined.
[accuracy error] paddle.linalg.eigh(Tensor([4, 4],"complex64"), "U", ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 12 / 16 (75.0%)
Greatest absolute difference: 1.4795883893966675 at index (0, 2) (up to 0.01 allowed)
Greatest relative difference: 2.0000009536743164 at index (0, 1) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([4, 4]), dtype=torch.complex64)
tensor([[-0.2062-0.3399j,  0.2709+0.1970j, -0.5577-0.4860j,  0.4044+0.1376j],
        [ 0.6097+0.2466j, -0.2640-0.3751j, -0.1528-0.0755j,  0.5727+0.0104j],
        [ 0.1845-0.1219j,  0.6627+0.1702j,  0.4800+0.2125j,  0.4317-0.1451j],
        [-0.6005+0.0000j, -0.4576+0.0000j,  0.3848+0.0000j,  0.5310+0.0000j]])
DESIRED: (shape=torch.Size([4, 4]), dtype=torch.complex64)
tensor([[ 0.2062+0.3399j, -0.2709-0.1970j,  0.5577+0.4860j,  0.4044+0.1376j],
        [-0.6097-0.2466j,  0.2640+0.3751j,  0.1528+0.0755j,  0.5727+0.0104j],
        [-0.1845+0.1219j, -0.6627-0.1702j, -0.4800-0.2125j,  0.4317-0.1451j],
        [ 0.6005+0.0000j,  0.4576+0.0000j, -0.3848+0.0000j,  0.5310+0.0000j]])

2025-06-10 00:11:30.996578 GPU 6 156017 test begin: paddle.linalg.eigh(Tensor([4, 4],"float32"), "L", )
[accuracy error] paddle.linalg.eigh(Tensor([4, 4],"float32"), "L", ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 8 / 16 (50.0%)
Greatest absolute difference: 1.3486518859863281 at index (0, 3) (up to 0.01 allowed)
Greatest relative difference: 2.0000011920928955 at index (1, 3) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([4, 4]), dtype=torch.float32)
tensor([[ 0.4173, -0.3927, -0.4657, -0.6743],
        [ 0.6192,  0.3702,  0.6367, -0.2722],
        [-0.4596, -0.5364,  0.5952, -0.3831],
        [-0.4808,  0.6488, -0.1531, -0.5696]])
DESIRED: (shape=torch.Size([4, 4]), dtype=torch.float32)
tensor([[-0.4173, -0.3927, -0.4657,  0.6743],
        [-0.6192,  0.3702,  0.6367,  0.2722],
        [ 0.4596, -0.5364,  0.5952,  0.3831],
        [ 0.4808,  0.6488, -0.1531,  0.5696]])

2025-06-10 00:11:31.001940 GPU 7 156023 test begin: paddle.linalg.eigh(Tensor([4, 4],"float32"), "U", )
[accuracy error] paddle.linalg.eigh(Tensor([4, 4],"float32"), "U", ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 12 / 16 (75.0%)
Greatest absolute difference: 1.6748875379562378 at index (1, 0) (up to 0.01 allowed)
Greatest relative difference: 2.000004529953003 at index (0, 2) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([4, 4]), dtype=torch.float32)
tensor([[ 0.4234, -0.7020, -0.1473,  0.5534],
        [-0.8374, -0.0801, -0.2736,  0.4663],
        [-0.0089,  0.2222,  0.8310,  0.5099],
        [ 0.3455,  0.6718, -0.4614,  0.4652]])
DESIRED: (shape=torch.Size([4, 4]), dtype=torch.float32)
tensor([[-0.4234,  0.7020,  0.1472,  0.5534],
        [ 0.8374,  0.0801,  0.2736,  0.4663],
        [ 0.0089, -0.2222, -0.8310,  0.5099],
        [-0.3455, -0.6718,  0.4614,  0.4652]])

2025-06-10 00:11:32.026408 GPU 6 156020 test begin: paddle.linalg.eigh(Tensor([4, 4],"float64"), "L", )
[accuracy error] paddle.linalg.eigh(Tensor([4, 4],"float64"), "L", ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 8 / 16 (50.0%)
Greatest absolute difference: 1.3912102452216155 at index (1, 2) (up to 0.01 allowed)
Greatest relative difference: 2.000000000000006 at index (2, 2) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([4, 4]), dtype=torch.float64)
tensor([[ 0.2329,  0.8714, -0.2426, -0.3573],
        [ 0.3106, -0.1479,  0.6956, -0.6307],
        [-0.8119, -0.0560, -0.1567, -0.5595],
        [ 0.4360, -0.4645, -0.6578, -0.4019]], dtype=torch.float64)
DESIRED: (shape=torch.Size([4, 4]), dtype=torch.float64)
tensor([[ 0.2329,  0.8714,  0.2426,  0.3573],
        [ 0.3106, -0.1479, -0.6956,  0.6307],
        [-0.8119, -0.0560,  0.1567,  0.5595],
        [ 0.4360, -0.4645,  0.6578,  0.4019]], dtype=torch.float64)

2025-06-10 00:11:32.106276 GPU 4 156011 test begin: paddle.linalg.eigh(Tensor([4, 4],"float64"), "U", )
[accuracy error] paddle.linalg.eigh(Tensor([4, 4],"float64"), "U", ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 4 / 16 (25.0%)
Greatest absolute difference: 1.5797232586421535 at index (1, 0) (up to 0.01 allowed)
Greatest relative difference: 2.000000000000022 at index (2, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([4, 4]), dtype=torch.float64)
tensor([[ 0.1677,  0.4227,  0.5934,  0.6641],
        [-0.7899,  0.2333, -0.3967,  0.4054],
        [ 0.0656, -0.8277, -0.0501,  0.5550],
        [ 0.5863,  0.2860, -0.6986,  0.2942]], dtype=torch.float64)
DESIRED: (shape=torch.Size([4, 4]), dtype=torch.float64)
tensor([[-0.1677,  0.4227,  0.5934,  0.6641],
        [ 0.7899,  0.2333, -0.3967,  0.4054],
        [-0.0656, -0.8277, -0.0501,  0.5550],
        [-0.5863,  0.2860, -0.6986,  0.2942]], dtype=torch.float64)

2025-06-10 00:11:33.020532 GPU 6 156956 test begin: paddle.linalg.eigh(Tensor([5, 5],"complex64"), )
linalg_eigh_backward: The eigenvectors in the complex case are specified up to multiplication by e^{i phi}. The specified loss function depends on this quantity, so it is ill-defined.
[accuracy error] paddle.linalg.eigh(Tensor([5, 5],"complex64"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 20 / 25 (80.0%)
Greatest absolute difference: 1.322566032409668 at index (4, 3) (up to 0.01 allowed)
Greatest relative difference: 2.0000011920928955 at index (3, 1) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([5, 5]), dtype=torch.complex64)
tensor([[ 0.1266+0.0000j,  0.5444+0.0000j, -0.4887+0.0000j,  0.4363-0.0000j, -0.5084+0.0000j],
        [-0.2362+0.5735j, -0.4453-0.2823j, -0.0276-0.2630j,  0.2221-0.2996j, -0.3186-0.1637j],
        [-0.5287+0.1847j,  0.2503+0.3604j,  0.2593+0.2852j, -0.3758-0.0799j, -0.4354+0.0893j],
        [ 0.2697-0.4333j,  0.0522-0.1770j,  0.4380-0.4567j, -0.1961-0.2173j, -0.4662-0.0449j],
        [ 0.1076-0.1164j, -0.4379-0.0851j,  0.1420+0.3495j,  0.1694+0.6392j, -0.4333+0.0925j]])
DESIRED: (shape=torch.Size([5, 5]), dtype=torch.complex64)
tensor([[-0.1266+0.0000j, -0.5444+0.0000j, -0.4887+0.0000j, -0.4363+0.0000j,  0.5084+0.0000j],
        [ 0.2362-0.5735j,  0.4453+0.2823j, -0.0276-0.2630j, -0.2221+0.2996j,  0.3186+0.1637j],
        [ 0.5287-0.1847j, -0.2503-0.3604j,  0.2593+0.2852j,  0.3758+0.0799j,  0.4354-0.0893j],
        [-0.2697+0.4333j, -0.0522+0.1770j,  0.4380-0.4567j,  0.1961+0.2173j,  0.4662+0.0449j],
        [-0.1076+0.1164j,  0.4379+0.0851j,  0.1420+0.3495j, -0.1694-0.6392j,  0.4333-0.0925j]])

2025-06-10 00:11:33.221255 GPU 7 156955 test begin: paddle.linalg.eigh(Tensor([5, 5],"float32"), )
/root/miniconda3/envs/paddle/lib/python3.12/site-packages/torch/autograd/graph.py:823: UserWarning: Attempting to run cuBLAS, but there was no current CUDA context! Attempting to set the primary context... (Triggered internally at /pytorch/aten/src/ATen/cuda/CublasHandlePool.cpp:180.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
[accuracy error] paddle.linalg.eigh(Tensor([5, 5],"float32"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 10 / 25 (40.0%)
Greatest absolute difference: 1.3059571981430054 at index (2, 3) (up to 0.01 allowed)
Greatest relative difference: 2.0000035762786865 at index (1, 3) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([5, 5]), dtype=torch.float32)
tensor([[-0.4084,  0.5797, -0.3573,  0.4076,  0.4510],
        [-0.5234, -0.6262, -0.2321, -0.3110,  0.4282],
        [ 0.4802,  0.3095, -0.2467, -0.6530,  0.4317],
        [-0.3138,  0.2585,  0.8375, -0.2463,  0.2697],
        [ 0.4798, -0.3304,  0.2372,  0.5001,  0.5951]])
DESIRED: (shape=torch.Size([5, 5]), dtype=torch.float32)
tensor([[ 0.4084,  0.5797, -0.3573, -0.4076,  0.4510],
        [ 0.5234, -0.6262, -0.2321,  0.3110,  0.4282],
        [-0.4802,  0.3095, -0.2467,  0.6530,  0.4317],
        [ 0.3138,  0.2585,  0.8375,  0.2463,  0.2697],
        [-0.4798, -0.3304,  0.2372, -0.5001,  0.5951]])

2025-06-10 00:11:33.424362 GPU 4 156002 test begin: paddle.linalg.lstsq(Tensor([2, 3, 10],"float32"), Tensor([2, 3, 4],"float32"), rcond=1e-15, driver="gelss", )
[accuracy error] paddle.linalg.lstsq(Tensor([2, 3, 10],"float32"), Tensor([2, 3, 4],"float32"), rcond=1e-15, driver="gelss", ) 
 Not equal to tolerance rtol=0.01, atol=0.01
The values for attribute 'shape' do not match: torch.Size([2]) != torch.Size([0]).
ACTUAL: (shape=torch.Size([2]), dtype=torch.int32)
tensor([3, 3], dtype=torch.int32)
DESIRED: (shape=torch.Size([0]), dtype=torch.int64)
tensor([], dtype=torch.int64)

2025-06-10 00:11:33.606241 GPU 4 156016 test begin: paddle.linalg.lstsq(Tensor([200, 100],"float64"), Tensor([200, 50],"float64"), rcond=1e-15, driver="gelsd", )
[accuracy error] paddle.linalg.lstsq(Tensor([200, 100],"float64"), Tensor([200, 50],"float64"), rcond=1e-15, driver="gelsd", ) 
 Not equal to tolerance rtol=0.01, atol=0.01
The values for attribute 'shape' do not match: torch.Size([]) != torch.Size([0]).
ACTUAL: (shape=torch.Size([]), dtype=torch.int32)
100
DESIRED: (shape=torch.Size([0]), dtype=torch.int64)
tensor([], dtype=torch.int64)

2025-06-10 00:11:33.607253 GPU 5 156001 test begin: paddle.linalg.lstsq(Tensor([3, 2],"float64"), Tensor([3, 3],"float64"), rcond=1e-07, driver="gelsd", )
[accuracy error] paddle.linalg.lstsq(Tensor([3, 2],"float64"), Tensor([3, 3],"float64"), rcond=1e-07, driver="gelsd", ) 
 Not equal to tolerance rtol=0.01, atol=0.01
The values for attribute 'shape' do not match: torch.Size([]) != torch.Size([0]).
ACTUAL: (shape=torch.Size([]), dtype=torch.int32)
2
DESIRED: (shape=torch.Size([0]), dtype=torch.int64)
tensor([], dtype=torch.int64)

2025-06-10 00:11:33.621534 GPU 5 155999 test begin: paddle.linalg.lstsq(Tensor([5, 4],"float64"), Tensor([5, 3],"float64"), rcond=1e-15, driver="gelsd", )
[accuracy error] paddle.linalg.lstsq(Tensor([5, 4],"float64"), Tensor([5, 3],"float64"), rcond=1e-15, driver="gelsd", ) 
 Not equal to tolerance rtol=0.01, atol=0.01
The values for attribute 'shape' do not match: torch.Size([]) != torch.Size([0]).
ACTUAL: (shape=torch.Size([]), dtype=torch.int32)
4
DESIRED: (shape=torch.Size([0]), dtype=torch.int64)
tensor([], dtype=torch.int64)

2025-06-10 00:11:33.860530 GPU 5 156012 test begin: paddle.linalg.lstsq(Tensor([5, 5],"float64"), Tensor([5, 1],"float64"), rcond=None, driver="gelss", )
[accuracy error] paddle.linalg.lstsq(Tensor([5, 5],"float64"), Tensor([5, 1],"float64"), rcond=None, driver="gelss", ) 
 Not equal to tolerance rtol=0.01, atol=0.01
The values for attribute 'shape' do not match: torch.Size([]) != torch.Size([0]).
ACTUAL: (shape=torch.Size([]), dtype=torch.int32)
5
DESIRED: (shape=torch.Size([0]), dtype=torch.int64)
tensor([], dtype=torch.int64)

2025-06-10 00:11:33.968065 GPU 7 156015 test begin: paddle.linalg.lstsq(Tensor([50, 600],"float64"), Tensor([50, 300],"float64"), rcond=1e-15, driver="gelss", )
[accuracy error] paddle.linalg.lstsq(Tensor([50, 600],"float64"), Tensor([50, 300],"float64"), rcond=1e-15, driver="gelss", ) 
 Not equal to tolerance rtol=0.01, atol=0.01
The values for attribute 'shape' do not match: torch.Size([]) != torch.Size([0]).
ACTUAL: (shape=torch.Size([]), dtype=torch.int32)
50
DESIRED: (shape=torch.Size([0]), dtype=torch.int64)
tensor([], dtype=torch.int64)

2025-06-10 00:11:34.052978 GPU 5 156012 test begin: paddle.linalg.lstsq(Tensor([8, 2],"float32"), Tensor([8, 10],"float32"), rcond=1e-15, driver="gelsy", )
[accuracy error] paddle.linalg.lstsq(Tensor([8, 2],"float32"), Tensor([8, 10],"float32"), rcond=1e-15, driver="gelsy", ) 
 Not equal to tolerance rtol=0.01, atol=0.01
The values for attribute 'shape' do not match: torch.Size([]) != torch.Size([0]).
ACTUAL: (shape=torch.Size([]), dtype=torch.int32)
2
DESIRED: (shape=torch.Size([0]), dtype=torch.int64)
tensor([], dtype=torch.int64)

2025-06-10 00:11:34.285454 GPU 5 156012 test begin: paddle.linalg.matrix_rank(Tensor([1, 10],"float32"), None, False, )
Warning: The core code of paddle.linalg.matrix_rank is too complex.
[accuracy error] paddle.linalg.matrix_rank(Tensor([1, 10],"float32"), None, False, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
The values for attribute 'dtype' do not match: torch.int32 != torch.int64.
ACTUAL: (shape=torch.Size([]), dtype=torch.int32)
1
DESIRED: (shape=torch.Size([]), dtype=torch.int64)
1

2025-06-10 00:11:34.372182 GPU 7 156015 test begin: paddle.linalg.matrix_rank(Tensor([1, 10],"float32"), None, False, Tensor([],"float32"), Tensor([],"float32"), )
Warning: The core code of paddle.linalg.matrix_rank is too complex.
[accuracy error] paddle.linalg.matrix_rank(Tensor([1, 10],"float32"), None, False, Tensor([],"float32"), Tensor([],"float32"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
The values for attribute 'dtype' do not match: torch.int32 != torch.int64.
ACTUAL: (shape=torch.Size([]), dtype=torch.int32)
1
DESIRED: (shape=torch.Size([]), dtype=torch.int64)
1

2025-06-10 00:11:34.531589 GPU 6 156010 test begin: paddle.linalg.matrix_rank(Tensor([10, 10],"float32"), )
Warning: The core code of paddle.linalg.matrix_rank is too complex.
[accuracy error] paddle.linalg.matrix_rank(Tensor([10, 10],"float32"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
The values for attribute 'dtype' do not match: torch.int32 != torch.int64.
ACTUAL: (shape=torch.Size([]), dtype=torch.int32)
10
DESIRED: (shape=torch.Size([]), dtype=torch.int64)
10

2025-06-10 00:11:34.557164 GPU 5 156012 test begin: paddle.linalg.matrix_rank(Tensor([10, 10],"float32"), hermitian=True, )
[accuracy error] paddle.linalg.matrix_rank(Tensor([10, 10],"float32"), hermitian=True, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
The values for attribute 'dtype' do not match: torch.int32 != torch.int64.
ACTUAL: (shape=torch.Size([]), dtype=torch.int32)
10
DESIRED: (shape=torch.Size([]), dtype=torch.int64)
10

2025-06-10 00:11:34.565941 GPU 4 156002 test begin: paddle.linalg.matrix_rank(Tensor([10, 10],"float32"), hermitian=True, atol=0.015, rtol=None, )
Warning: The core code of paddle.linalg.matrix_rank is too complex.
[accuracy error] paddle.linalg.matrix_rank(Tensor([10, 10],"float32"), hermitian=True, atol=0.015, rtol=None, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
The values for attribute 'dtype' do not match: torch.int32 != torch.int64.
ACTUAL: (shape=torch.Size([]), dtype=torch.int32)
10
DESIRED: (shape=torch.Size([]), dtype=torch.int64)
10

2025-06-10 00:11:34.586062 GPU 6 156013 test begin: paddle.linalg.matrix_rank(Tensor([10, 10],"float32"), hermitian=True, atol=0.2, rtol=0.05, )
Warning: The core code of paddle.linalg.matrix_rank is too complex.
[accuracy error] paddle.linalg.matrix_rank(Tensor([10, 10],"float32"), hermitian=True, atol=0.2, rtol=0.05, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
The values for attribute 'dtype' do not match: torch.int32 != torch.int64.
ACTUAL: (shape=torch.Size([]), dtype=torch.int32)
8
DESIRED: (shape=torch.Size([]), dtype=torch.int64)
8

2025-06-10 00:11:34.623273 GPU 7 156014 test begin: paddle.linalg.matrix_rank(Tensor([10, 10],"float32"), hermitian=True, atol=None, rtol=1.1, )
Warning: The core code of paddle.linalg.matrix_rank is too complex.
[accuracy error] paddle.linalg.matrix_rank(Tensor([10, 10],"float32"), hermitian=True, atol=None, rtol=1.1, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
The values for attribute 'dtype' do not match: torch.int32 != torch.int64.
ACTUAL: (shape=torch.Size([]), dtype=torch.int32)
0
DESIRED: (shape=torch.Size([]), dtype=torch.int64)
0

2025-06-10 00:11:34.627326 GPU 7 156015 test begin: paddle.linalg.matrix_rank(Tensor([10, 10],"float32"), tol=0.1, )
[accuracy error] paddle.linalg.matrix_rank(Tensor([10, 10],"float32"), tol=0.1, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
The values for attribute 'dtype' do not match: torch.int32 != torch.int64.
ACTUAL: (shape=torch.Size([]), dtype=torch.int32)
9
DESIRED: (shape=torch.Size([]), dtype=torch.int64)
9

2025-06-10 00:11:34.658215 GPU 5 156001 test begin: paddle.linalg.matrix_rank(Tensor([10, 10],"float32"), tol=Tensor([2],"float32"), )
Warning: The core code of paddle.linalg.matrix_rank is too complex.
/root/miniconda3/envs/paddle/lib/python3.12/site-packages/torch/utils/_device.py:104: UserWarning: An output with one or more elements was resized since it had shape [], which does not match the required output shape [2]. This behavior is deprecated, and in a future PyTorch release outputs will not be resized unless they have zero elements. You can explicitly reuse an out tensor t by resizing it, inplace, to zero elements with t.resize_(0). (Triggered internally at /pytorch/aten/src/ATen/native/Resize.cpp:30.)
  return func(*args, **kwargs)
[accuracy error] paddle.linalg.matrix_rank(Tensor([10, 10],"float32"), tol=Tensor([2],"float32"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
The values for attribute 'dtype' do not match: torch.int32 != torch.int64.
ACTUAL: (shape=torch.Size([2]), dtype=torch.int32)
tensor([10, 10], dtype=torch.int32)
DESIRED: (shape=torch.Size([2]), dtype=torch.int64)
tensor([10, 10])

2025-06-10 00:11:34.723923 GPU 5 156018 test begin: paddle.linalg.matrix_rank(Tensor([200, 200],"float64"), None, True, )
Warning: The core code of paddle.linalg.matrix_rank is too complex.
[accuracy error] paddle.linalg.matrix_rank(Tensor([200, 200],"float64"), None, True, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
The values for attribute 'dtype' do not match: torch.int32 != torch.int64.
ACTUAL: (shape=torch.Size([]), dtype=torch.int32)
200
DESIRED: (shape=torch.Size([]), dtype=torch.int64)
200

2025-06-10 00:11:34.774305 GPU 4 156016 test begin: paddle.linalg.matrix_rank(Tensor([200, 200],"float64"), None, True, Tensor([200, 200],"float64"), Tensor([200, 200],"float64"), )
Warning: The core code of paddle.linalg.matrix_rank is too complex.
/root/miniconda3/envs/paddle/lib/python3.12/site-packages/torch/utils/_device.py:104: UserWarning: An output with one or more elements was resized since it had shape [], which does not match the required output shape [200, 200]. This behavior is deprecated, and in a future PyTorch release outputs will not be resized unless they have zero elements. You can explicitly reuse an out tensor t by resizing it, inplace, to zero elements with t.resize_(0). (Triggered internally at /pytorch/aten/src/ATen/native/Resize.cpp:30.)
  return func(*args, **kwargs)
[accuracy error] paddle.linalg.matrix_rank(Tensor([200, 200],"float64"), None, True, Tensor([200, 200],"float64"), Tensor([200, 200],"float64"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
The values for attribute 'dtype' do not match: torch.int32 != torch.int64.
ACTUAL: (shape=torch.Size([200, 200]), dtype=torch.int32)
tensor([[185, 192, 200,  ..., 195, 187, 187],
        [186,  80, 101,  ..., 195, 169, 200],
        [200, 186, 198,  ...,  94, 200,  98],
        ...,
        [190, 109, 131,  ...,  84, 192, 143],
        [120, 200, 192,  ..., 200, 148, 184],
        [143, 163,  97,  ..., 179, 195, 200]], dtype=torch.int32)
DESIRED: (shape=torch.Size([200, 200]), dtype=torch.int64)
tensor([[185, 192, 200,  ..., 195, 187, 187],
        [186,  80, 101,  ..., 195, 169, 200],
        [200, 186, 198,  ...,  94, 200,  98],
        ...,
        [190, 109, 131,  ...,  84, 192, 143],
        [120, 200, 192,  ..., 200, 148, 184],
        [143, 163,  97,  ..., 179, 195, 200]])

2025-06-10 00:11:34.790078 GPU 5 156012 test begin: paddle.linalg.matrix_rank(Tensor([200, 200],"float64"), Tensor([200, 200],"float64"), True, )
/root/miniconda3/envs/paddle/lib/python3.12/site-packages/torch/utils/_device.py:104: UserWarning: An output with one or more elements was resized since it had shape [], which does not match the required output shape [200, 200]. This behavior is deprecated, and in a future PyTorch release outputs will not be resized unless they have zero elements. You can explicitly reuse an out tensor t by resizing it, inplace, to zero elements with t.resize_(0). (Triggered internally at /pytorch/aten/src/ATen/native/Resize.cpp:30.)
  return func(*args, **kwargs)
[accuracy error] paddle.linalg.matrix_rank(Tensor([200, 200],"float64"), Tensor([200, 200],"float64"), True, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
The values for attribute 'dtype' do not match: torch.int32 != torch.int64.
ACTUAL: (shape=torch.Size([200, 200]), dtype=torch.int32)
tensor([[191, 196, 200,  ..., 199, 190, 197],
        [200, 186, 200,  ..., 186, 197, 200],
        [186, 200, 196,  ..., 196, 196, 191],
        ...,
        [191, 200, 191,  ..., 196, 187, 187],
        [191, 194, 186,  ..., 200, 189, 200],
        [200, 200, 200,  ..., 200, 200, 186]], dtype=torch.int32)
DESIRED: (shape=torch.Size([200, 200]), dtype=torch.int64)
tensor([[191, 196, 200,  ..., 199, 190, 197],
        [200, 186, 200,  ..., 186, 197, 200],
        [186, 200, 196,  ..., 196, 196, 191],
        ...,
        [191, 200, 191,  ..., 196, 187, 187],
        [191, 194, 186,  ..., 200, 189, 200],
        [200, 200, 200,  ..., 200, 200, 186]])

2025-06-10 00:11:34.798741 GPU 6 156013 test begin: paddle.linalg.matrix_rank(Tensor([3, 3],"float32"), 0.1, True, )
[accuracy error] paddle.linalg.matrix_rank(Tensor([3, 3],"float32"), 0.1, True, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
The values for attribute 'dtype' do not match: torch.int32 != torch.int64.
ACTUAL: (shape=torch.Size([]), dtype=torch.int32)
3
DESIRED: (shape=torch.Size([]), dtype=torch.int64)
3

2025-06-10 00:11:34.806450 GPU 4 156022 test begin: paddle.linalg.matrix_rank(Tensor([3, 3],"float32"), None, True, Tensor([],"float32"), Tensor([],"float32"), )
Warning: The core code of paddle.linalg.matrix_rank is too complex.
[accuracy error] paddle.linalg.matrix_rank(Tensor([3, 3],"float32"), None, True, Tensor([],"float32"), Tensor([],"float32"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
The values for attribute 'dtype' do not match: torch.int32 != torch.int64.
ACTUAL: (shape=torch.Size([]), dtype=torch.int32)
2
DESIRED: (shape=torch.Size([]), dtype=torch.int64)
2

2025-06-10 00:11:34.809471 GPU 6 156010 test begin: paddle.linalg.matrix_rank(Tensor([3, 3],"float64"), None, False, )
[accuracy error] paddle.linalg.matrix_rank(Tensor([3, 3],"float64"), None, False, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
The values for attribute 'dtype' do not match: torch.int32 != torch.int64.
ACTUAL: (shape=torch.Size([]), dtype=torch.int32)
3
DESIRED: (shape=torch.Size([]), dtype=torch.int64)
3

2025-06-10 00:11:34.822685 GPU 4 156002 test begin: paddle.linalg.matrix_rank(Tensor([3, 4, 5, 5],"float64"), hermitian=False, atol=Tensor([3, 4],"float64"), rtol=None, )
[accuracy error] paddle.linalg.matrix_rank(Tensor([3, 4, 5, 5],"float64"), hermitian=False, atol=Tensor([3, 4],"float64"), rtol=None, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
The values for attribute 'dtype' do not match: torch.int32 != torch.int64.
ACTUAL: (shape=torch.Size([3, 4]), dtype=torch.int32)
tensor([[4, 3, 5, 5],
        [5, 5, 5, 4],
        [5, 5, 5, 3]], dtype=torch.int32)
DESIRED: (shape=torch.Size([3, 4]), dtype=torch.int64)
tensor([[4, 3, 5, 5],
        [5, 5, 5, 4],
        [5, 5, 5, 3]])

2025-06-10 00:11:34.829238 GPU 5 155999 test begin: paddle.linalg.matrix_rank(Tensor([3, 4, 5, 5],"float64"), hermitian=True, atol=0.5, rtol=None, )
Warning: The core code of paddle.linalg.matrix_rank is too complex.
[accuracy error] paddle.linalg.matrix_rank(Tensor([3, 4, 5, 5],"float64"), hermitian=True, atol=0.5, rtol=None, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
The values for attribute 'dtype' do not match: torch.int32 != torch.int64.
ACTUAL: (shape=torch.Size([3, 4]), dtype=torch.int32)
tensor([[4, 4, 2, 2],
        [3, 3, 3, 2],
        [3, 4, 2, 3]], dtype=torch.int32)
DESIRED: (shape=torch.Size([3, 4]), dtype=torch.int64)
tensor([[4, 4, 2, 2],
        [3, 3, 3, 2],
        [3, 4, 2, 3]])

2025-06-10 00:11:34.859189 GPU 7 156015 test begin: paddle.linalg.matrix_rank(Tensor([3, 4, 5, 6],"float32"), None, False, )
[accuracy error] paddle.linalg.matrix_rank(Tensor([3, 4, 5, 6],"float32"), None, False, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
The values for attribute 'dtype' do not match: torch.int32 != torch.int64.
ACTUAL: (shape=torch.Size([3, 4]), dtype=torch.int32)
tensor([[5, 5, 5, 5],
        [5, 5, 5, 5],
        [5, 5, 5, 5]], dtype=torch.int32)
DESIRED: (shape=torch.Size([3, 4]), dtype=torch.int64)
tensor([[5, 5, 5, 5],
        [5, 5, 5, 5],
        [5, 5, 5, 5]])

2025-06-10 00:11:34.877796 GPU 5 156001 test begin: paddle.linalg.matrix_rank(Tensor([3, 4, 5, 6],"float32"), None, False, Tensor([3, 4],"float32"), Tensor([3, 4],"float32"), )
[accuracy error] paddle.linalg.matrix_rank(Tensor([3, 4, 5, 6],"float32"), None, False, Tensor([3, 4],"float32"), Tensor([3, 4],"float32"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
The values for attribute 'dtype' do not match: torch.int32 != torch.int64.
ACTUAL: (shape=torch.Size([3, 4]), dtype=torch.int32)
tensor([[3, 4, 5, 5],
        [5, 4, 4, 5],
        [4, 5, 4, 5]], dtype=torch.int32)
DESIRED: (shape=torch.Size([3, 4]), dtype=torch.int64)
tensor([[3, 4, 5, 5],
        [5, 4, 4, 5],
        [4, 5, 4, 5]])

2025-06-10 00:11:35.064386 GPU 5 156021 test begin: paddle.linalg.matrix_rank(Tensor([3, 4, 5, 6],"float32"), Tensor([3, 4],"float32"), False, )
Warning: The core code of paddle.linalg.matrix_rank is too complex.
[accuracy error] paddle.linalg.matrix_rank(Tensor([3, 4, 5, 6],"float32"), Tensor([3, 4],"float32"), False, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
The values for attribute 'dtype' do not match: torch.int32 != torch.int64.
ACTUAL: (shape=torch.Size([3, 4]), dtype=torch.int32)
tensor([[5, 5, 5, 5],
        [3, 5, 4, 2],
        [4, 3, 5, 5]], dtype=torch.int32)
DESIRED: (shape=torch.Size([3, 4]), dtype=torch.int64)
tensor([[5, 5, 5, 5],
        [3, 5, 4, 2],
        [4, 3, 5, 5]])

2025-06-10 00:11:35.065330 GPU 4 156000 test begin: paddle.linalg.matrix_rank(Tensor([3, 4, 5],"float32"), )
Warning: The core code of paddle.linalg.matrix_rank is too complex.
[accuracy error] paddle.linalg.matrix_rank(Tensor([3, 4, 5],"float32"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
The values for attribute 'dtype' do not match: torch.int32 != torch.int64.
ACTUAL: (shape=torch.Size([3]), dtype=torch.int32)
tensor([4, 4, 4], dtype=torch.int32)
DESIRED: (shape=torch.Size([3]), dtype=torch.int64)
tensor([4, 4, 4])

2025-06-10 00:11:35.066871 GPU 7 155998 test begin: paddle.linalg.matrix_rank(Tensor([3, 4, 5],"float32"), tol=0.1, )
Warning: The core code of paddle.linalg.matrix_rank is too complex.
[accuracy error] paddle.linalg.matrix_rank(Tensor([3, 4, 5],"float32"), tol=0.1, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
The values for attribute 'dtype' do not match: torch.int32 != torch.int64.
ACTUAL: (shape=torch.Size([3]), dtype=torch.int32)
tensor([4, 4, 4], dtype=torch.int32)
DESIRED: (shape=torch.Size([3]), dtype=torch.int64)
tensor([4, 4, 4])

2025-06-10 00:11:35.161057 GPU 6 156013 test begin: paddle.linalg.matrix_rank(Tensor([3, 4, 7, 8],"float64"), 0.1, hermitian=False, )
[accuracy error] paddle.linalg.matrix_rank(Tensor([3, 4, 7, 8],"float64"), 0.1, hermitian=False, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
The values for attribute 'dtype' do not match: torch.int32 != torch.int64.
ACTUAL: (shape=torch.Size([3, 4]), dtype=torch.int32)
tensor([[7, 7, 6, 7],
        [6, 7, 7, 7],
        [7, 7, 7, 7]], dtype=torch.int32)
DESIRED: (shape=torch.Size([3, 4]), dtype=torch.int64)
tensor([[7, 7, 6, 7],
        [6, 7, 7, 7],
        [7, 7, 7, 7]])

2025-06-10 00:11:35.172336 GPU 7 156014 test begin: paddle.linalg.matrix_rank(Tensor([3, 4, 7, 8],"float64"), Tensor([3, 4],"float32"), hermitian=False, )
[accuracy error] paddle.linalg.matrix_rank(Tensor([3, 4, 7, 8],"float64"), Tensor([3, 4],"float32"), hermitian=False, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
The values for attribute 'dtype' do not match: torch.int32 != torch.int64.
ACTUAL: (shape=torch.Size([3, 4]), dtype=torch.int32)
tensor([[6, 7, 7, 5],
        [6, 4, 7, 6],
        [7, 7, 7, 6]], dtype=torch.int32)
DESIRED: (shape=torch.Size([3, 4]), dtype=torch.int64)
tensor([[6, 7, 7, 5],
        [6, 4, 7, 6],
        [7, 7, 7, 6]])

2025-06-10 00:11:35.192876 GPU 5 156018 test begin: paddle.linalg.matrix_rank(Tensor([3, 4, 7, 8],"float64"), hermitian=False, atol=0.01, rtol=Tensor([3, 4],"float32"), )
[accuracy error] paddle.linalg.matrix_rank(Tensor([3, 4, 7, 8],"float64"), hermitian=False, atol=0.01, rtol=Tensor([3, 4],"float32"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
The values for attribute 'dtype' do not match: torch.int32 != torch.int64.
ACTUAL: (shape=torch.Size([3, 4]), dtype=torch.int32)
tensor([[7, 4, 6, 5],
        [5, 7, 7, 7],
        [7, 7, 7, 7]], dtype=torch.int32)
DESIRED: (shape=torch.Size([3, 4]), dtype=torch.int64)
tensor([[7, 4, 6, 5],
        [5, 7, 7, 7],
        [7, 7, 7, 7]])

2025-06-10 00:11:35.204568 GPU 7 156023 test begin: paddle.linalg.matrix_rank(Tensor([3, 4, 7, 8],"float64"), hermitian=False, atol=Tensor([3, 1],"float32"), rtol=Tensor([3, 1],"float32"), )
Warning: The core code of paddle.linalg.matrix_rank is too complex.
[accuracy error] paddle.linalg.matrix_rank(Tensor([3, 4, 7, 8],"float64"), hermitian=False, atol=Tensor([3, 1],"float32"), rtol=Tensor([3, 1],"float32"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
The values for attribute 'dtype' do not match: torch.int32 != torch.int64.
ACTUAL: (shape=torch.Size([3, 4]), dtype=torch.int32)
tensor([[7, 6, 6, 7],
        [6, 5, 5, 6],
        [7, 7, 7, 7]], dtype=torch.int32)
DESIRED: (shape=torch.Size([3, 4]), dtype=torch.int64)
tensor([[7, 6, 6, 7],
        [6, 5, 5, 6],
        [7, 7, 7, 7]])

2025-06-10 00:11:35.204999 GPU 4 156022 test begin: paddle.linalg.matrix_rank(Tensor([3, 4, 7, 8],"float64"), hermitian=False, atol=Tensor([3, 4],"float32"), rtol=0.01, )
[accuracy error] paddle.linalg.matrix_rank(Tensor([3, 4, 7, 8],"float64"), hermitian=False, atol=Tensor([3, 4],"float32"), rtol=0.01, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
The values for attribute 'dtype' do not match: torch.int32 != torch.int64.
ACTUAL: (shape=torch.Size([3, 4]), dtype=torch.int32)
tensor([[6, 6, 7, 7],
        [5, 7, 7, 7],
        [5, 7, 6, 7]], dtype=torch.int32)
DESIRED: (shape=torch.Size([3, 4]), dtype=torch.int64)
tensor([[6, 6, 7, 7],
        [5, 7, 7, 7],
        [5, 7, 6, 7]])

2025-06-10 00:11:35.255607 GPU 6 156017 test begin: paddle.linalg.matrix_rank(Tensor([3, 4, 7, 8],"float64"), hermitian=False, atol=Tensor([3, 4],"float32"), rtol=Tensor([3, 4],"float32"), )
Warning: The core code of paddle.linalg.matrix_rank is too complex.
[accuracy error] paddle.linalg.matrix_rank(Tensor([3, 4, 7, 8],"float64"), hermitian=False, atol=Tensor([3, 4],"float32"), rtol=Tensor([3, 4],"float32"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
The values for attribute 'dtype' do not match: torch.int32 != torch.int64.
ACTUAL: (shape=torch.Size([3, 4]), dtype=torch.int32)
tensor([[7, 5, 4, 5],
        [5, 5, 5, 7],
        [7, 6, 7, 7]], dtype=torch.int32)
DESIRED: (shape=torch.Size([3, 4]), dtype=torch.int64)
tensor([[7, 5, 4, 5],
        [5, 5, 5, 7],
        [7, 6, 7, 7]])

2025-06-10 00:11:35.261711 GPU 5 156012 test begin: paddle.linalg.matrix_rank(Tensor([5, 1],"float64"), None, False, Tensor([1, 4],"float64"), Tensor([1, 4],"float64"), )
/root/miniconda3/envs/paddle/lib/python3.12/site-packages/torch/utils/_device.py:104: UserWarning: An output with one or more elements was resized since it had shape [], which does not match the required output shape [1, 4]. This behavior is deprecated, and in a future PyTorch release outputs will not be resized unless they have zero elements. You can explicitly reuse an out tensor t by resizing it, inplace, to zero elements with t.resize_(0). (Triggered internally at /pytorch/aten/src/ATen/native/Resize.cpp:30.)
  return func(*args, **kwargs)
[accuracy error] paddle.linalg.matrix_rank(Tensor([5, 1],"float64"), None, False, Tensor([1, 4],"float64"), Tensor([1, 4],"float64"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
The values for attribute 'dtype' do not match: torch.int32 != torch.int64.
ACTUAL: (shape=torch.Size([1, 4]), dtype=torch.int32)
tensor([[1, 1, 1, 1]], dtype=torch.int32)
DESIRED: (shape=torch.Size([1, 4]), dtype=torch.int64)
tensor([[1, 1, 1, 1]])

2025-06-10 00:11:35.268686 GPU 6 156010 test begin: paddle.linalg.matrix_rank(Tensor([5, 1],"float64"), Tensor([1, 4],"float64"), False, )
/root/miniconda3/envs/paddle/lib/python3.12/site-packages/torch/utils/_device.py:104: UserWarning: An output with one or more elements was resized since it had shape [], which does not match the required output shape [1, 4]. This behavior is deprecated, and in a future PyTorch release outputs will not be resized unless they have zero elements. You can explicitly reuse an out tensor t by resizing it, inplace, to zero elements with t.resize_(0). (Triggered internally at /pytorch/aten/src/ATen/native/Resize.cpp:30.)
  return func(*args, **kwargs)
[accuracy error] paddle.linalg.matrix_rank(Tensor([5, 1],"float64"), Tensor([1, 4],"float64"), False, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
The values for attribute 'dtype' do not match: torch.int32 != torch.int64.
ACTUAL: (shape=torch.Size([1, 4]), dtype=torch.int32)
tensor([[1, 1, 1, 1]], dtype=torch.int32)
DESIRED: (shape=torch.Size([1, 4]), dtype=torch.int64)
tensor([[1, 1, 1, 1]])

2025-06-10 00:11:35.279191 GPU 4 156002 test begin: paddle.linalg.matrix_rank(x=Tensor([2, 2, 4, 4],"float64"), tol=Tensor([1, 1],"float64"), hermitian=True, )
[accuracy error] paddle.linalg.matrix_rank(x=Tensor([2, 2, 4, 4],"float64"), tol=Tensor([1, 1],"float64"), hermitian=True, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
The values for attribute 'dtype' do not match: torch.int32 != torch.int64.
ACTUAL: (shape=torch.Size([2, 2]), dtype=torch.int32)
tensor([[3, 2],
        [3, 2]], dtype=torch.int32)
DESIRED: (shape=torch.Size([2, 2]), dtype=torch.int64)
tensor([[3, 2],
        [3, 2]])

2025-06-10 00:11:35.302917 GPU 7 156019 test begin: paddle.linalg.matrix_rank(x=Tensor([2, 3, 4, 4],"float64"), tol=Tensor([1],"float64"), hermitian=True, )
Warning: The core code of paddle.linalg.matrix_rank is too complex.
[accuracy error] paddle.linalg.matrix_rank(x=Tensor([2, 3, 4, 4],"float64"), tol=Tensor([1],"float64"), hermitian=True, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
The values for attribute 'dtype' do not match: torch.int32 != torch.int64.
ACTUAL: (shape=torch.Size([2, 3]), dtype=torch.int32)
tensor([[3, 3, 2],
        [3, 2, 3]], dtype=torch.int32)
DESIRED: (shape=torch.Size([2, 3]), dtype=torch.int64)
tensor([[3, 3, 2],
        [3, 2, 3]])

2025-06-10 00:11:35.380160 GPU 4 156016 test begin: paddle.linalg.matrix_rank(x=Tensor([2, 3, 4, 4],"float64"), tol=Tensor([2, 3],"float64"), hermitian=True, )
[accuracy error] paddle.linalg.matrix_rank(x=Tensor([2, 3, 4, 4],"float64"), tol=Tensor([2, 3],"float64"), hermitian=True, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
The values for attribute 'dtype' do not match: torch.int32 != torch.int64.
ACTUAL: (shape=torch.Size([2, 3]), dtype=torch.int32)
tensor([[4, 3, 4],
        [4, 4, 3]], dtype=torch.int32)
DESIRED: (shape=torch.Size([2, 3]), dtype=torch.int64)
tensor([[4, 3, 4],
        [4, 4, 3]])

2025-06-10 00:11:35.487232 GPU 5 155999 test begin: paddle.linalg.matrix_rank(x=Tensor([2, 4, 4, 4],"float64"), tol=None, hermitian=True, )
[accuracy error] paddle.linalg.matrix_rank(x=Tensor([2, 4, 4, 4],"float64"), tol=None, hermitian=True, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
The values for attribute 'dtype' do not match: torch.int32 != torch.int64.
ACTUAL: (shape=torch.Size([2, 4]), dtype=torch.int32)
tensor([[4, 4, 4, 4],
        [4, 4, 4, 4]], dtype=torch.int32)
DESIRED: (shape=torch.Size([2, 4]), dtype=torch.int64)
tensor([[4, 4, 4, 4],
        [4, 4, 4, 4]])

2025-06-10 00:11:35.524106 GPU 7 156015 test begin: paddle.linalg.matrix_rank(x=Tensor([2, 4, 4, 4],"float64"), tol=Tensor([2, 1],"float64"), hermitian=True, )
[accuracy error] paddle.linalg.matrix_rank(x=Tensor([2, 4, 4, 4],"float64"), tol=Tensor([2, 1],"float64"), hermitian=True, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
The values for attribute 'dtype' do not match: torch.int32 != torch.int64.
ACTUAL: (shape=torch.Size([2, 4]), dtype=torch.int32)
tensor([[2, 3, 2, 3],
        [3, 3, 3, 3]], dtype=torch.int32)
DESIRED: (shape=torch.Size([2, 4]), dtype=torch.int64)
tensor([[2, 3, 2, 3],
        [3, 3, 3, 3]])

2025-06-10 00:11:35.538895 GPU 5 156001 test begin: paddle.linalg.matrix_rank(x=Tensor([2, 4, 4, 5],"float64"), tol=Tensor([2, 1],"float64"), hermitian=False, )
[accuracy error] paddle.linalg.matrix_rank(x=Tensor([2, 4, 4, 5],"float64"), tol=Tensor([2, 1],"float64"), hermitian=False, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
The values for attribute 'dtype' do not match: torch.int32 != torch.int64.
ACTUAL: (shape=torch.Size([2, 4]), dtype=torch.int32)
tensor([[4, 4, 3, 4],
        [4, 4, 4, 4]], dtype=torch.int32)
DESIRED: (shape=torch.Size([2, 4]), dtype=torch.int64)
tensor([[4, 4, 3, 4],
        [4, 4, 4, 4]])

2025-06-10 00:11:35.541077 GPU 5 156021 test begin: paddle.linalg.matrix_rank(x=Tensor([4, 4],"float64"), tol=4.4, hermitian=True, )
[accuracy error] paddle.linalg.matrix_rank(x=Tensor([4, 4],"float64"), tol=4.4, hermitian=True, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
The values for attribute 'dtype' do not match: torch.int32 != torch.int64.
ACTUAL: (shape=torch.Size([]), dtype=torch.int32)
0
DESIRED: (shape=torch.Size([]), dtype=torch.int64)
0

2025-06-10 00:11:35.555706 GPU 6 156013 test begin: paddle.linalg.matrix_rank(x=Tensor([4, 4],"float64"), tol=Tensor([1],"float64"), hermitian=True, )
/root/miniconda3/envs/paddle/lib/python3.12/site-packages/torch/utils/_device.py:104: UserWarning: An output with one or more elements was resized since it had shape [], which does not match the required output shape [1]. This behavior is deprecated, and in a future PyTorch release outputs will not be resized unless they have zero elements. You can explicitly reuse an out tensor t by resizing it, inplace, to zero elements with t.resize_(0). (Triggered internally at /pytorch/aten/src/ATen/native/Resize.cpp:30.)
  return func(*args, **kwargs)
[accuracy error] paddle.linalg.matrix_rank(x=Tensor([4, 4],"float64"), tol=Tensor([1],"float64"), hermitian=True, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
The values for attribute 'dtype' do not match: torch.int32 != torch.int64.
ACTUAL: (shape=torch.Size([1]), dtype=torch.int32)
tensor([4], dtype=torch.int32)
DESIRED: (shape=torch.Size([1]), dtype=torch.int64)
tensor([4])

2025-06-10 00:11:35.561498 GPU 5 156018 test begin: paddle.linalg.matrix_rank(x=Tensor([4, 5],"float32"), tol=None, hermitian=False, )
[accuracy error] paddle.linalg.matrix_rank(x=Tensor([4, 5],"float32"), tol=None, hermitian=False, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
The values for attribute 'dtype' do not match: torch.int32 != torch.int64.
ACTUAL: (shape=torch.Size([]), dtype=torch.int32)
4
DESIRED: (shape=torch.Size([]), dtype=torch.int64)
4

2025-06-10 00:11:35.567954 GPU 5 156012 test begin: paddle.linalg.matrix_rank(x=Tensor([4, 5],"float64"), tol=4.4, hermitian=False, )
[accuracy error] paddle.linalg.matrix_rank(x=Tensor([4, 5],"float64"), tol=4.4, hermitian=False, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
The values for attribute 'dtype' do not match: torch.int32 != torch.int64.
ACTUAL: (shape=torch.Size([]), dtype=torch.int32)
0
DESIRED: (shape=torch.Size([]), dtype=torch.int64)
0

2025-06-10 00:11:35.677986 GPU 4 156000 test begin: paddle.linalg.matrix_rank(x=Tensor([4, 5],"float64"), tol=None, hermitian=False, )
[accuracy error] paddle.linalg.matrix_rank(x=Tensor([4, 5],"float64"), tol=None, hermitian=False, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
The values for attribute 'dtype' do not match: torch.int32 != torch.int64.
ACTUAL: (shape=torch.Size([]), dtype=torch.int32)
4
DESIRED: (shape=torch.Size([]), dtype=torch.int64)
4

2025-06-10 00:11:35.821551 GPU 4 156022 test begin: paddle.max(Tensor([1, 32, 8],"float32"), axis=list[0,], )
[accuracy error] backward  paddle.max(Tensor([1, 32, 8],"float32"), axis=list[0,], ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 252 / 256 (98.4%)
Greatest absolute difference: 2.4318071766594347e+28 at index (0, 14, 4) (up to 0.01 allowed)
Greatest relative difference: 2.6193028065694715e+30 at index (0, 23, 6) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 32, 8]), dtype=torch.float32)
tensor([[[ 1.1210e-44,  4.4842e-44,  3.3631e-44,  ...,  4.5609e-41,  1.4013e-45,  1.6589e+00],
         [ 1.2597e+06, -1.5975e+00,  1.1210e-44,  ...,  2.1019e-44,  1.5891e-42,  1.5149e+00],
         [-2.4217e+28,  0.0000e+00,  1.0089e-43,  ...,  0.0000e+00,  1.5863e-42, -1.6817e+00],
         ...,
         [ 1.5568e-42,  1.6416e+00,  0.0000e+00,  ..., -1.6554e+00, -2.4219e+28,  0.0000e+00],
         [ 1.5456e-42,  1.5101e+00,  0.0000e+00,  ..., -1.6264e+00, -2.4219e+28,  0.0000e+00],
         [ 1.5498e-42, -1.6378e+00,  0.0000e+00,  ..., -1.6380e+00, -2.4219e+28,  0.0000e+00]]])
DESIRED: (shape=torch.Size([1, 32, 8]), dtype=torch.float32)
tensor([[[ 0.3705, -0.0114,  0.3783,  ..., -0.4667,  0.0506, -0.3436],
         [-0.2246, -0.4395, -0.1393,  ...,  0.3614,  0.4204,  0.1031],
         [-0.2511,  0.0861, -0.2133,  ..., -0.2750, -0.3496, -0.3045],
         ...,
         [-0.2029, -0.1565,  0.1984,  ...,  0.2929,  0.3746,  0.2673],
         [ 0.3735,  0.1042,  0.2622,  ..., -0.3243, -0.2836, -0.0336],
         [ 0.1629,  0.1315, -0.2522,  ...,  0.2140, -0.3076,  0.2921]]])

2025-06-10 00:13:04.390286 GPU 6 156017 test begin: paddle.nn.functional.conv2d_transpose(Tensor([4, 16, 16, 4],"float32"), Tensor([4, 3, 3, 3],"float32"), Tensor([6],"float32"), output_size=None, padding="same", stride=1, dilation=1, groups=2, data_format="NHWC", )
[accuracy error] backward  paddle.nn.functional.conv2d_transpose(Tensor([4, 16, 16, 4],"float32"), Tensor([4, 3, 3, 3],"float32"), Tensor([6],"float32"), output_size=None, padding="same", stride=1, dilation=1, groups=2, data_format="NHWC", ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 247 / 4096 (6.0%)
Greatest absolute difference: 1.223402738571167 at index (2, 0, 8, 1) (up to 0.01 allowed)
Greatest relative difference: 70.42343139648438 at index (2, 0, 15, 2) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([4, 16, 16, 4]), dtype=torch.float32)
tensor([[[[-2.3926e-01, -5.5855e-02,  1.1197e-01,  6.1549e-01],
          [-5.6777e-01, -6.3011e-01, -1.0823e-01,  4.3031e-02],
          [-5.2763e-01, -3.2453e-01, -7.2129e-02,  3.7447e-01],
          ...,
          [ 2.1129e-01,  7.8485e-01, -4.3005e-01, -1.0039e-01],
          [ 6.5213e-01,  6.4756e-01,  4.6228e-02,  2.4248e-01],
          [ 1.3381e-01, -6.3451e-03,  9.4754e-02,  4.0429e-01]],

         [[-1.5588e-01,  2.0030e-01, -1.2931e-03,  3.0746e-01],
          [-7.3578e-01, -8.3911e-01, -1.4364e-01,  3.6761e-01],
          [-6.2002e-01, -3.8330e-01, -7.7343e-04, -1.2073e-01],
          ...,
          [ 2.4110e-01,  1.1067e+00, -4.9490e-01, -2.6027e-01],
          [ 5.9808e-01,  4.3429e-01,  1.4240e-01,  5.9469e-01],
          [ 1.2323e-01,  6.2938e-02,  1.3954e-01,  3.2989e-01]],

         [[ 6.7337e-01,  3.7866e-01,  4.2522e-01, -7.2930e-02],
          [-5.3818e-01,  1.6759e-01, -5.9166e-01, -1.9169e-01],
          [ 9.2447e-02, -3.7581e-01, -6.7794e-01,  1.8217e-01],
          ...,
          [ 3.8764e-01, -3.5092e-01,  3.0320e-02, -4.2906e-01],
          [ 1.1581e-01,  3.2043e-01,  2.4593e-01,  5.6786e-01],
          [ 1.1817e-01,  1.4175e-02,  1.5874e-01, -6.4076e-01]],

         ...,

         [[-1.6010e-01,  8.8713e-02, -2.9926e-01,  7.3260e-01],
          [-8.6138e-02, -3.8819e-01, -5.0409e-01, -5.6525e-01],
          [ 8.6562e-03, -4.7744e-01,  8.1010e-02,  5.0586e-01],
          ...,
          [ 6.2544e-01,  4.1199e-01, -7.1494e-02,  3.5054e-01],
          [ 3.9921e-01, -1.9848e-01,  2.5230e-01, -9.4165e-01],
          [-4.4354e-01, -5.5357e-01, -2.6523e-01,  5.5724e-01]],

         [[ 2.0698e-01,  3.5788e-01,  2.7777e-02,  2.8672e-02],
          [ 3.7042e-01, -4.6041e-01, -1.8170e-01, -6.8377e-02],
          [ 1.5954e-01, -2.3294e-01, -1.7012e-01,  5.7982e-01],
          ...,
          [ 2.4077e-02,  8.8339e-02, -1.4730e-01,  8.8024e-01],
          [-1.8617e-01, -3.0522e-01, -3.1175e-01, -5.0042e-02],
          [-4.5071e-02, -6.0833e-02,  6.3071e-02, -1.4303e-01]],

         [[ 3.2275e-01,  3.5767e-01,  1.4580e-01, -1.2070e-01],
          [ 1.8110e-01, -8.2791e-03, -3.2358e-01,  2.2629e-01],
          [-2.6517e-01,  2.4941e-01,  5.4451e-01,  1.4377e-01],
          ...,
          [-1.0030e-01,  3.4512e-01,  3.2943e-01,  1.7597e-01],
          [-3.0578e-02,  3.7325e-01, -1.9052e-01,  1.1710e-01],
          [-4.7748e-01, -8.8928e-01,  1.3909e-01, -1.7201e-02]]],


        [[[-1.1433e-01,  2.6920e-01, -1.2628e-01, -2.1064e-01],
          [ 2.9734e-01,  1.2816e-01,  3.4653e-01, -2.1820e-01],
          [-3.2158e-02, -3.0639e-01,  6.9728e-01,  4.6284e-01],
          ...,
          [ 2.7996e-01,  3.8178e-01, -6.6793e-01,  3.1577e-01],
          [ 7.7599e-01,  6.0226e-01,  2.1192e-02, -2.3749e-01],
          [ 6.0729e-01,  2.3925e-01,  2.0011e-01,  1.2386e-02]],

         [[-2.9833e-01,  3.9364e-01,  1.3529e-02,  6.9753e-02],
          [ 6.5482e-02, -6.5252e-01,  3.1658e-01, -6.1259e-01],
          [ 1.6643e-01,  1.3365e-01,  6.0560e-01,  7.5624e-01],
          ...,
          [ 1.0277e-01,  4.4233e-01, -6.8260e-01,  8.0204e-02],
          [ 6.7468e-01,  5.8448e-01, -1.3882e-01, -2.9062e-01],
          [ 4.9774e-01,  2.6064e-01,  2.3541e-01,  3.4651e-01]],

         [[-4.4858e-01,  1.9564e-01, -1.4707e-01, -6.3587e-01],
          [ 3.5818e-02, -1.5352e-01,  4.4151e-01, -3.6633e-01],
          [ 3.1745e-02,  2.3718e-01,  6.7563e-01,  5.6560e-01],
          ...,
          [-2.0262e-01,  2.6175e-01, -2.8395e-01, -4.2805e-01],
          [ 5.7666e-01,  1.0053e+00,  6.7317e-01,  7.6143e-01],
          [ 3.9019e-01, -3.7838e-01, -1.8812e-01, -4.3521e-02]],

         ...,

         [[ 7.0157e-02,  6.8909e-01, -2.6031e-01, -2.0297e-01],
          [ 7.5166e-01, -3.0170e-01,  4.9154e-01, -1.3591e-01],
          [ 1.4545e-02, -7.1870e-01, -4.2758e-01,  1.8689e-01],
          ...,
          [ 9.7857e-02,  3.7855e-01,  1.4591e-01, -9.6841e-02],
          [-1.1064e-02, -2.0543e-01, -1.2882e-01,  1.0466e+00],
          [-2.1434e-01, -7.1309e-03, -5.4383e-01, -4.1700e-01]],

         [[-1.0398e-01, -4.0365e-01,  6.6828e-01,  1.4218e-01],
          [-3.9747e-01,  1.5662e-01,  3.4488e-01,  1.9269e-03],
          [-1.1327e-01,  7.1301e-01,  2.2794e-01,  3.0535e-01],
          ...,
          [ 5.5399e-02,  4.0149e-01, -1.6026e-01, -2.9141e-01],
          [-9.9323e-02, -3.4825e-02,  4.5242e-02,  1.2114e-01],
          [-6.1540e-02, -2.8435e-01,  2.7886e-01, -2.7115e-01]],

         [[-1.3339e-01, -2.4870e-01,  1.5639e-01,  7.5473e-02],
          [-2.6541e-01, -5.4328e-01,  2.6403e-01,  5.2961e-01],
          [-4.7025e-01,  2.3457e-01,  1.9355e-01, -4.2877e-01],
          ...,
          [ 1.4617e-01,  3.1048e-01,  2.3010e-01, -2.0969e-01],
          [ 1.2842e-01, -3.0666e-01,  1.8047e-01, -4.5091e-01],
          [-2.9041e-01, -4.5063e-01,  1.2787e-01,  4.3684e-01]]],


        [[[ 8.3723e-02, -1.4682e-02, -1.0466e-02,  2.0079e-01],
          [ 4.2029e-01,  5.1914e-01, -5.8155e-02,  5.3104e-01],
          [ 3.4987e-01, -2.8810e-02, -6.1476e-01, -8.1623e-02],
          ...,
          [-4.6848e-02,  2.8382e-01,  9.2542e-02, -4.6929e-02],
          [ 5.1452e-01,  6.2101e-01,  4.6534e-01,  5.8003e-02],
          [ 5.9263e-01,  1.5187e-01, -3.4842e-01, -3.5307e-02]],

         [[ 2.4820e-01,  3.9599e-02, -9.8151e-02,  3.6684e-01],
          [ 5.2868e-01,  8.8096e-01, -9.5100e-02,  1.5046e-01],
          [ 3.9609e-01,  5.6087e-02, -4.4975e-01, -1.6981e-01],
          ...,
          [-2.3758e-01,  1.9796e-01,  8.8358e-02,  4.4476e-02],
          [ 3.9088e-01,  4.6534e-01,  4.5813e-01,  3.4209e-01],
          [ 6.4071e-01,  1.7903e-01, -4.4121e-01, -1.3775e-01]],

         [[-1.0110e-02, -4.7765e-02,  3.8717e-01, -3.8095e-01],
          [ 6.1492e-01, -5.0295e-02,  1.7143e-01, -1.4815e-01],
          [-2.3472e-01,  3.9916e-01, -3.8426e-01,  1.9989e-01],
          ...,
          [ 9.9110e-01,  4.2689e-01,  1.1391e-01, -6.5738e-01],
          [ 3.3974e-01,  4.0580e-01,  7.4989e-01,  8.3661e-01],
          [ 2.4796e-01,  1.6818e-01, -1.8894e-01, -2.6828e-01]],

         ...,

         [[ 2.7897e-01,  2.4975e-01, -1.5593e-01, -1.5442e-01],
          [ 2.1971e-01, -2.4133e-01,  3.5693e-02,  1.6951e-01],
          [-4.9526e-01,  6.4457e-02,  1.1073e-02, -2.6860e-02],
          ...,
          [-1.9014e-02, -4.0622e-01, -6.9352e-02,  1.1173e-01],
          [-7.8494e-01, -1.3660e-01, -4.6211e-01,  1.2586e-01],
          [-7.2756e-01, -9.8911e-02, -1.3289e-01, -1.9748e-01]],

         [[ 5.3529e-01,  1.7893e-01, -3.4354e-01,  4.3737e-01],
          [ 4.7035e-01,  3.3534e-01, -7.2811e-01, -7.5867e-03],
          [-1.0443e-01, -2.3446e-01,  1.3202e-01,  1.8263e-01],
          ...,
          [-9.1845e-01, -1.2431e-01,  4.3265e-01,  4.0175e-01],
          [ 3.9929e-01,  2.5766e-01, -1.1195e-01, -1.6429e-02],
          [-4.3904e-01, -3.5800e-01, -1.0585e-01,  3.7930e-01]],

         [[-1.6522e-01, -4.4975e-01, -5.3357e-01, -1.9521e-01],
          [-5.6112e-02, -4.2132e-02, -2.3484e-01, -5.5256e-01],
          [-5.2129e-01,  2.6513e-01,  4.5232e-01,  2.3801e-01],
          ...,
          [-4.9452e-02, -2.4143e-01,  2.5477e-01,  3.8056e-01],
          [-2.9964e-01, -1.1477e-01,  8.9048e-02,  2.3631e-01],
          [ 7.6943e-03,  9.8435e-02, -2.2599e-01, -1.1746e-01]]],


        [[[ 3.7557e-01,  8.9485e-02, -7.0231e-01, -2.2147e-01],
          [ 9.4114e-02,  2.1384e-01,  3.6678e-01,  1.2622e-01],
          [ 4.1444e-01,  2.2439e-01,  2.9802e-01,  1.6246e-01],
          ...,
          [-1.0464e-01,  3.1397e-01,  8.0355e-01,  9.3312e-02],
          [-9.2136e-02,  1.0988e-01, -1.4832e-01, -4.3109e-01],
          [ 2.7273e-01, -3.2167e-01,  7.2704e-02,  2.8271e-01]],

         [[ 2.3455e-01,  1.8368e-01, -6.6277e-01, -3.0688e-01],
          [ 2.0468e-01,  2.0016e-01,  3.4475e-01,  1.7212e-01],
          [ 4.1529e-01, -8.2115e-02,  2.9594e-01,  3.3197e-01],
          ...,
          [ 1.7711e-01,  5.3465e-01,  7.6625e-01, -9.8705e-03],
          [ 1.0764e-01,  5.0269e-01, -1.8650e-01, -5.9734e-01],
          [ 2.7510e-01, -2.7984e-01,  1.7275e-01,  4.4678e-01]],

         [[-2.8045e-01,  2.2175e-01,  2.9540e-01,  3.3914e-01],
          [ 1.2513e-01, -3.0577e-01, -1.7301e-01,  4.4461e-01],
          [-4.6787e-01,  2.0755e-01,  7.2794e-01, -4.0720e-01],
          ...,
          [-7.7905e-02,  2.0687e-01,  1.4575e-01,  3.8608e-01],
          [-4.7435e-01,  9.2301e-02, -5.1287e-02, -1.0429e+00],
          [ 7.8287e-02, -7.0287e-02,  3.2801e-01, -1.6338e-01]],

         ...,

         [[ 4.5119e-01,  1.0409e-01,  2.7836e-01, -2.1992e-01],
          [-5.5999e-01, -2.8063e-01,  3.7546e-01,  7.0551e-02],
          [ 1.5413e-01,  4.9300e-02, -8.3715e-02,  1.9648e-01],
          ...,
          [-2.6784e-01, -1.0640e-01, -2.2049e-01, -1.3943e-01],
          [-2.5521e-01,  1.4406e-01,  8.2021e-01,  3.4094e-02],
          [-2.8396e-01, -1.3480e-01, -1.4182e-01,  2.3456e-01]],

         [[ 3.4092e-01,  5.5880e-02, -4.6844e-01, -4.8961e-04],
          [ 3.6266e-02, -2.2348e-01,  2.4050e-01,  3.3377e-01],
          [-5.6870e-01, -2.7321e-01,  1.1539e-01,  1.1243e-01],
          ...,
          [ 3.8343e-01,  2.7960e-01, -2.1769e-01, -3.2183e-01],
          [-4.5280e-02,  2.2970e-02,  5.6902e-01, -2.4880e-01],
          [-2.0451e-02, -5.8563e-01, -3.2587e-02, -1.1422e-01]],

         [[ 2.3556e-01, -2.1337e-01, -4.5207e-01, -3.1051e-01],
          [ 1.3370e-01,  5.3984e-01,  2.4018e-01, -2.1837e-01],
          [-2.3743e-02, -1.0946e-01,  4.1661e-01,  2.9228e-01],
          ...,
          [-4.0579e-01, -1.4802e-01, -4.3793e-02, -2.5565e-01],
          [-3.9645e-01, -4.6470e-01,  4.9459e-01,  5.2322e-01],
          [-3.6619e-01,  9.7820e-02, -7.0014e-02, -4.8797e-01]]]])
DESIRED: (shape=torch.Size([4, 16, 16, 4]), dtype=torch.float32)
tensor([[[[-2.0063e-01, -1.7970e-01,  7.2391e-02,  2.0642e-01],
          [-2.8231e-01,  3.1114e-01,  4.3771e-01, -5.3144e-03],
          [-1.5982e-01, -2.2666e-01,  3.6410e-01,  1.3027e-01],
          ...,
          [ 3.8890e-01, -3.8584e-01, -6.9650e-02,  5.2425e-01],
          [ 2.8274e-01,  8.0283e-01, -3.2902e-01, -8.0456e-01],
          [ 9.8772e-01,  8.2812e-01, -1.3777e-01, -1.6181e-01]],

         [[-1.5588e-01,  2.0030e-01, -1.2931e-03,  3.0746e-01],
          [-7.3578e-01, -8.3911e-01, -1.4364e-01,  3.6761e-01],
          [-6.2002e-01, -3.8330e-01, -7.7343e-04, -1.2073e-01],
          ...,
          [ 2.4110e-01,  1.1067e+00, -4.9490e-01, -2.6027e-01],
          [ 5.9808e-01,  4.3429e-01,  1.4240e-01,  5.9469e-01],
          [ 1.2323e-01,  6.2938e-02,  1.3954e-01,  3.2989e-01]],

         [[ 6.7337e-01,  3.7866e-01,  4.2522e-01, -7.2930e-02],
          [-5.3818e-01,  1.6759e-01, -5.9166e-01, -1.9169e-01],
          [ 9.2447e-02, -3.7581e-01, -6.7794e-01,  1.8217e-01],
          ...,
          [ 3.8764e-01, -3.5092e-01,  3.0320e-02, -4.2906e-01],
          [ 1.1581e-01,  3.2043e-01,  2.4593e-01,  5.6786e-01],
          [ 1.1817e-01,  1.4175e-02,  1.5874e-01, -6.4076e-01]],

         ...,

         [[-1.6010e-01,  8.8713e-02, -2.9926e-01,  7.3260e-01],
          [-8.6138e-02, -3.8819e-01, -5.0409e-01, -5.6525e-01],
          [ 8.6562e-03, -4.7744e-01,  8.1010e-02,  5.0586e-01],
          ...,
          [ 6.2544e-01,  4.1199e-01, -7.1494e-02,  3.5054e-01],
          [ 3.9921e-01, -1.9848e-01,  2.5230e-01, -9.4165e-01],
          [-4.4354e-01, -5.5357e-01, -2.6523e-01,  5.5724e-01]],

         [[ 2.0698e-01,  3.5788e-01,  2.7777e-02,  2.8672e-02],
          [ 3.7042e-01, -4.6041e-01, -1.8170e-01, -6.8377e-02],
          [ 1.5954e-01, -2.3294e-01, -1.7012e-01,  5.7982e-01],
          ...,
          [ 2.4077e-02,  8.8339e-02, -1.4730e-01,  8.8024e-01],
          [-1.8617e-01, -3.0522e-01, -3.1175e-01, -5.0042e-02],
          [-4.5071e-02, -6.0833e-02,  6.3071e-02, -1.4303e-01]],

         [[ 3.2275e-01,  3.5767e-01,  1.4580e-01, -1.2070e-01],
          [ 1.8110e-01, -8.2791e-03, -3.2358e-01,  2.2629e-01],
          [-2.6517e-01,  2.4941e-01,  5.4451e-01,  1.4377e-01],
          ...,
          [-1.0030e-01,  3.4512e-01,  3.2943e-01,  1.7597e-01],
          [-3.0578e-02,  3.7325e-01, -1.9052e-01,  1.1710e-01],
          [-4.7748e-01, -8.8928e-01,  1.3909e-01, -1.7201e-02]]],


        [[[-5.6750e-01, -1.2612e-01,  1.9199e-01,  3.2069e-01],
          [ 1.8747e-01,  3.9067e-01, -3.3349e-01,  6.1904e-01],
          [-2.8844e-02, -3.5036e-01, -2.1852e-01, -1.6683e-01],
          ...,
          [ 3.0497e-01,  3.1286e-02,  1.5703e-01,  4.7771e-01],
          [-3.3616e-01, -3.3254e-01, -8.1452e-01, -6.4897e-01],
          [ 1.9488e-01,  2.8688e-02,  2.5727e-01,  3.5489e-01]],

         [[-2.9833e-01,  3.9364e-01,  1.3529e-02,  6.9753e-02],
          [ 6.5482e-02, -6.5252e-01,  3.1658e-01, -6.1259e-01],
          [ 1.6643e-01,  1.3365e-01,  6.0560e-01,  7.5624e-01],
          ...,
          [ 1.0277e-01,  4.4233e-01, -6.8260e-01,  8.0204e-02],
          [ 6.7468e-01,  5.8448e-01, -1.3882e-01, -2.9062e-01],
          [ 4.9774e-01,  2.6064e-01,  2.3541e-01,  3.4651e-01]],

         [[-4.4858e-01,  1.9564e-01, -1.4707e-01, -6.3587e-01],
          [ 3.5818e-02, -1.5352e-01,  4.4151e-01, -3.6633e-01],
          [ 3.1745e-02,  2.3718e-01,  6.7563e-01,  5.6560e-01],
          ...,
          [-2.0262e-01,  2.6175e-01, -2.8395e-01, -4.2805e-01],
          [ 5.7666e-01,  1.0053e+00,  6.7317e-01,  7.6143e-01],
          [ 3.9019e-01, -3.7838e-01, -1.8812e-01, -4.3521e-02]],

         ...,

         [[ 7.0157e-02,  6.8909e-01, -2.6031e-01, -2.0297e-01],
          [ 7.5166e-01, -3.0170e-01,  4.9154e-01, -1.3591e-01],
          [ 1.4545e-02, -7.1870e-01, -4.2758e-01,  1.8689e-01],
          ...,
          [ 9.7857e-02,  3.7855e-01,  1.4591e-01, -9.6841e-02],
          [-1.1064e-02, -2.0543e-01, -1.2882e-01,  1.0466e+00],
          [-2.1434e-01, -7.1309e-03, -5.4383e-01, -4.1700e-01]],

         [[-1.0398e-01, -4.0365e-01,  6.6828e-01,  1.4218e-01],
          [-3.9747e-01,  1.5662e-01,  3.4488e-01,  1.9269e-03],
          [-1.1327e-01,  7.1301e-01,  2.2794e-01,  3.0535e-01],
          ...,
          [ 5.5399e-02,  4.0149e-01, -1.6026e-01, -2.9141e-01],
          [-9.9323e-02, -3.4825e-02,  4.5242e-02,  1.2114e-01],
          [-6.1540e-02, -2.8435e-01,  2.7886e-01, -2.7115e-01]],

         [[-1.3339e-01, -2.4870e-01,  1.5639e-01,  7.5473e-02],
          [-2.6541e-01, -5.4328e-01,  2.6403e-01,  5.2961e-01],
          [-4.7025e-01,  2.3457e-01,  1.9355e-01, -4.2877e-01],
          ...,
          [ 1.4617e-01,  3.1048e-01,  2.3010e-01, -2.0969e-01],
          [ 1.2842e-01, -3.0666e-01,  1.8047e-01, -4.5091e-01],
          [-2.9041e-01, -4.5063e-01,  1.2787e-01,  4.3684e-01]]],


        [[[ 3.3464e-01,  4.6759e-01,  5.9672e-01,  1.2014e-01],
          [ 4.0895e-01,  1.0036e-01,  2.1252e-01,  1.9910e-02],
          [-5.3141e-02, -1.7703e-01, -3.2369e-01,  6.4152e-02],
          ...,
          [ 2.6099e-01,  2.8982e-01,  4.4007e-02,  5.4081e-02],
          [ 1.7500e-02,  1.0361e-01,  3.6294e-01, -4.1635e-02],
          [ 1.9762e-01, -1.1533e-01, -4.8782e-03,  1.2370e-01]],

         [[ 2.4820e-01,  3.9599e-02, -9.8151e-02,  3.6684e-01],
          [ 5.2868e-01,  8.8096e-01, -9.5100e-02,  1.5046e-01],
          [ 3.9609e-01,  5.6087e-02, -4.4975e-01, -1.6981e-01],
          ...,
          [-2.3758e-01,  1.9796e-01,  8.8358e-02,  4.4476e-02],
          [ 3.9088e-01,  4.6534e-01,  4.5813e-01,  3.4209e-01],
          [ 6.4071e-01,  1.7903e-01, -4.4121e-01, -1.3775e-01]],

         [[-1.0110e-02, -4.7765e-02,  3.8717e-01, -3.8095e-01],
          [ 6.1492e-01, -5.0295e-02,  1.7143e-01, -1.4815e-01],
          [-2.3472e-01,  3.9916e-01, -3.8426e-01,  1.9989e-01],
          ...,
          [ 9.9110e-01,  4.2689e-01,  1.1391e-01, -6.5738e-01],
          [ 3.3974e-01,  4.0580e-01,  7.4989e-01,  8.3661e-01],
          [ 2.4796e-01,  1.6818e-01, -1.8894e-01, -2.6828e-01]],

         ...,

         [[ 2.7897e-01,  2.4975e-01, -1.5593e-01, -1.5442e-01],
          [ 2.1971e-01, -2.4133e-01,  3.5693e-02,  1.6951e-01],
          [-4.9526e-01,  6.4457e-02,  1.1073e-02, -2.6860e-02],
          ...,
          [-1.9014e-02, -4.0622e-01, -6.9352e-02,  1.1173e-01],
          [-7.8494e-01, -1.3660e-01, -4.6211e-01,  1.2586e-01],
          [-7.2756e-01, -9.8911e-02, -1.3289e-01, -1.9748e-01]],

         [[ 5.3529e-01,  1.7893e-01, -3.4354e-01,  4.3737e-01],
          [ 4.7035e-01,  3.3534e-01, -7.2811e-01, -7.5867e-03],
          [-1.0443e-01, -2.3446e-01,  1.3202e-01,  1.8263e-01],
          ...,
          [-9.1845e-01, -1.2431e-01,  4.3265e-01,  4.0175e-01],
          [ 3.9929e-01,  2.5766e-01, -1.1195e-01, -1.6429e-02],
          [-4.3904e-01, -3.5800e-01, -1.0585e-01,  3.7930e-01]],

         [[-1.6522e-01, -4.4975e-01, -5.3357e-01, -1.9521e-01],
          [-5.6112e-02, -4.2132e-02, -2.3484e-01, -5.5256e-01],
          [-5.2129e-01,  2.6513e-01,  4.5232e-01,  2.3801e-01],
          ...,
          [-4.9452e-02, -2.4143e-01,  2.5477e-01,  3.8056e-01],
          [-2.9964e-01, -1.1477e-01,  8.9048e-02,  2.3631e-01],
          [ 7.6943e-03,  9.8435e-02, -2.2599e-01, -1.1746e-01]]],


        [[[-1.9158e-01, -1.1994e-01, -4.6702e-01, -1.8764e-01],
          [ 1.4008e-01,  7.4387e-02, -1.6295e-01,  1.1871e-01],
          [-1.1904e-01,  3.9132e-01,  7.5292e-01, -2.8206e-01],
          ...,
          [ 4.4601e-01,  6.4730e-02,  6.4472e-01, -4.7113e-02],
          [ 4.3274e-01, -1.3238e-01,  5.4712e-01,  5.3844e-01],
          [-1.8415e-01,  9.0243e-03,  4.4267e-02, -5.5834e-01]],

         [[ 2.3455e-01,  1.8368e-01, -6.6277e-01, -3.0688e-01],
          [ 2.0468e-01,  2.0016e-01,  3.4475e-01,  1.7212e-01],
          [ 4.1529e-01, -8.2115e-02,  2.9594e-01,  3.3197e-01],
          ...,
          [ 1.7711e-01,  5.3465e-01,  7.6625e-01, -9.8705e-03],
          [ 1.0764e-01,  5.0269e-01, -1.8650e-01, -5.9734e-01],
          [ 2.7510e-01, -2.7984e-01,  1.7275e-01,  4.4678e-01]],

         [[-2.8045e-01,  2.2175e-01,  2.9540e-01,  3.3914e-01],
          [ 1.2513e-01, -3.0577e-01, -1.7301e-01,  4.4461e-01],
          [-4.6787e-01,  2.0755e-01,  7.2794e-01, -4.0720e-01],
          ...,
          [-7.7905e-02,  2.0687e-01,  1.4575e-01,  3.8608e-01],
          [-4.7435e-01,  9.2301e-02, -5.1287e-02, -1.0429e+00],
          [ 7.8287e-02, -7.0287e-02,  3.2801e-01, -1.6338e-01]],

         ...,

         [[ 4.5119e-01,  1.0409e-01,  2.7836e-01, -2.1992e-01],
          [-5.5999e-01, -2.8063e-01,  3.7546e-01,  7.0551e-02],
          [ 1.5413e-01,  4.9300e-02, -8.3715e-02,  1.9648e-01],
          ...,
          [-2.6784e-01, -1.0640e-01, -2.2049e-01, -1.3943e-01],
          [-2.5521e-01,  1.4406e-01,  8.2021e-01,  3.4094e-02],
          [-2.8396e-01, -1.3480e-01, -1.4182e-01,  2.3456e-01]],

         [[ 3.4092e-01,  5.5880e-02, -4.6844e-01, -4.8961e-04],
          [ 3.6266e-02, -2.2348e-01,  2.4050e-01,  3.3377e-01],
          [-5.6870e-01, -2.7321e-01,  1.1539e-01,  1.1243e-01],
          ...,
          [ 3.8343e-01,  2.7960e-01, -2.1769e-01, -3.2183e-01],
          [-4.5280e-02,  2.2970e-02,  5.6902e-01, -2.4880e-01],
          [-2.0451e-02, -5.8563e-01, -3.2587e-02, -1.1422e-01]],

         [[ 2.3556e-01, -2.1337e-01, -4.5207e-01, -3.1051e-01],
          [ 1.3370e-01,  5.3984e-01,  2.4018e-01, -2.1837e-01],
          [-2.3743e-02, -1.0946e-01,  4.1661e-01,  2.9228e-01],
          ...,
          [-4.0579e-01, -1.4802e-01, -4.3793e-02, -2.5565e-01],
          [-3.9645e-01, -4.6470e-01,  4.9459e-01,  5.2322e-01],
          [-3.6619e-01,  9.7820e-02, -7.0014e-02, -4.8797e-01]]]])

2025-06-10 00:13:29.009754 GPU 6 156017 test begin: paddle.nn.functional.conv2d_transpose(Tensor([64, 64, 43, 19],"float32"), Tensor([64, 32, 5, 5],"float32"), bias=Tensor([32],"float32"), padding=2, output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
[accuracy error] backward  paddle.nn.functional.conv2d_transpose(Tensor([64, 64, 43, 19],"float32"), Tensor([64, 32, 5, 5],"float32"), bias=Tensor([32],"float32"), padding=2, output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 5044 / 51200 (9.9%)
Greatest absolute difference: 0.8406982421875 at index (46, 17, 4, 4) (up to 0.01 allowed)
Greatest relative difference: 43.04513931274414 at index (26, 27, 4, 4) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([64, 32, 5, 5]), dtype=torch.float32)
tensor([[[[-43.7446, -17.1307,  23.6590,   0.8194,  -3.6680],
          [ 15.5339, -34.6710,  -4.9517,  -2.7534,  -6.6630],
          [ 22.4001,  12.7963,  20.0600,  -0.5387,  10.4512],
          [-33.5924,  19.0703,  18.6435,  -2.6133,   8.5202],
          [-21.6183,   6.9402, -14.6530, -36.0007, -28.8500]],

         [[  5.6082, -16.6610,   2.1220, -13.5209,  28.2728],
          [-20.2519,  10.2405,   7.5116, -21.7518,  14.3503],
          [ 29.3911,  13.4667,  -7.3197,   3.1258,  -4.4072],
          [ -0.3210,  -6.7146,   4.2428,   1.1250,  14.3464],
          [-17.2106,   1.8505,  -4.0754,   5.4063,  -2.9418]],

         [[  3.2712, -16.8948,  19.0459,  -2.7974,  -1.6312],
          [ -1.9087,   9.3711,  -7.0981,  -2.5645,   3.8099],
          [  0.4102,  -3.9983, -17.0490, -41.7209,  27.3968],
          [ 29.7757,  -9.0556,  21.0050,  -5.8259,   3.0897],
          [-19.7985, -11.0764, -36.7082, -23.1159,  10.8752]],

         ...,

         [[  1.8388, -23.7965,   2.0322,  23.9697,  38.2466],
          [  9.3084,  12.9093,   6.6570,  -6.9685,  27.7514],
          [ -9.0918,  -6.4191, -35.8309,  16.8342,   9.8792],
          [ -0.2540,   5.1569,   9.2906, -20.3751, -18.2245],
          [-22.2065,  -9.8681,  20.0191,  32.7348,  -3.4606]],

         [[ -8.0784,  18.9651, -30.0448,  11.9855,  11.2280],
          [ -1.6181,  -3.3573, -11.3602, -19.8797,   5.5940],
          [-28.4449, -27.3803,  20.1840,   9.0849,  14.6329],
          [-18.8043,   4.5285,  -8.8533, -22.2981,  -8.6295],
          [ 11.5806, -29.5688, -18.4867,  -2.1860,   7.4238]],

         [[  7.3229,  -9.1227,  -0.9600,  -2.5814,   8.8544],
          [-20.7575,  17.4284, -19.4947, -19.2680,   9.4421],
          [  8.7646,  14.2371,   0.7137, -11.5803,  -0.9410],
          [ 14.7148,  33.5540,  20.8479,  -0.4729, -12.3992],
          [  1.4115,   7.5653, -13.8383,  -3.3691,  17.2168]]],


        [[[ -1.7366,   8.4587,  13.5332,   0.6361, -15.3229],
          [  4.0859, -27.4153,   5.0122,   1.8794,   2.1733],
          [-15.2741,  13.2844,   9.2357,   5.8223,  14.0187],
          [ 24.0759, -10.5638, -31.0601,  17.9085,  -1.2433],
          [ 20.8095, -34.5154, -31.1653,   3.4520,  -2.9265]],

         [[ 20.1828,   9.8135,  23.2347,  -1.8844,   0.5357],
          [ 19.5631, -31.2297,  19.1282,  24.6230, -17.9886],
          [ 10.0915,  -4.9851,   7.3778,  -4.7484,  31.9389],
          [-47.4694,  -7.9664,  -2.4984,  -5.2921,  -1.3723],
          [ 35.1620, -16.0437,  29.3202,  14.3002,   6.5116]],

         [[ 20.3881,  -5.2785,   0.1178, -22.5904,  24.1469],
          [ 15.0043,  38.8551,  -3.2099, -26.5432,   0.7180],
          [ 15.7624, -45.8779,  19.4732, -39.9123,   9.5383],
          [ -0.3713,  -1.6236,  14.2497,  -5.9200,  29.6005],
          [  1.5075,  38.7456,  28.4205,  -4.5184, -14.0982]],

         ...,

         [[ 17.5740,   8.0389,  16.4873,  -1.4439,  24.9862],
          [ -1.1142, -13.4320,   2.8884,  28.7294,  28.8491],
          [ -0.4586,  18.5664,  -9.3338,  12.0271, -10.5832],
          [ -7.9976, -25.1321,  -0.9342,  -1.9248, -11.4157],
          [ -3.8084, -10.0013, -13.9414,  32.7549,  12.3263]],

         [[-31.4885,  -2.0717,  17.5545,  29.5351,  14.2553],
          [-22.1666, -13.1164, -20.2297,  20.5118,   2.2008],
          [-17.9508,  -2.3383,  -9.2198,   7.5594,  21.4558],
          [ 33.8218,   5.4934,  -0.7857,   3.0400, -12.7322],
          [ 10.2022, -30.3794,  13.4883,  13.2662,   9.4298]],

         [[ 28.2600,  12.3872,  -0.7696, -13.4195,   8.3999],
          [-11.8996,  -5.4845,  -3.0157, -20.0110, -41.2021],
          [  5.9958,  -8.8890, -26.2554, -13.0039, -50.2699],
          [-22.8912,   8.4378, -25.6836,  17.4209, -29.0426],
          [ -1.6703, -29.6479,  -6.6077,  18.9964,   9.6847]]],


        [[[ -9.0757,  11.7840, -13.5064,   7.8362,  -1.5678],
          [ -6.3914, -18.1966, -13.2372,  -8.9102, -10.9486],
          [  4.3037,   3.3210,  -2.6929,  14.0459,  26.0451],
          [ 12.9261,  -1.0979,  -6.8126,  21.1628, -17.1544],
          [ -2.9674,  12.2090,   3.6930, -16.3683, -31.5845]],

         [[ 20.6589,   9.9887, -45.4463,   7.5110, -20.9487],
          [  4.6566,  37.1888,  29.5874, -21.6658,  -0.0694],
          [ -9.3748, -27.1694, -13.9611, -28.7938,   4.7359],
          [  7.2193,  -3.3986, -20.7928,  -2.2504,  38.4285],
          [ -8.5870,   5.4336, -26.6726,  18.6014,   0.4264]],

         [[ -8.1114,  -5.0493,  16.5208, -16.6010,  -8.0854],
          [  4.3411, -16.3775,  -7.8982,  23.8399,   7.5096],
          [  1.1685,   5.9916,  -2.2080,   7.8185, -17.0424],
          [ -1.1904, -27.2016, -15.3151, -26.9865,  -0.9932],
          [  9.6419,  -9.5282,  -3.1741, -11.0180, -15.3198]],

         ...,

         [[ -0.3051,  21.2254,   9.2012,   5.7030,  -4.0566],
          [  4.0155,  -1.5245,   9.6222,   5.0172,  14.2612],
          [ -2.7069, -27.1182,  19.2625,  -2.0732,  39.1901],
          [ 14.7862,  14.8830, -15.3531,   0.7565,   2.1379],
          [-14.1041,  19.8962,   9.6205,  37.3233, -17.1850]],

         [[ -8.4347,   4.7580,   3.5859, -20.1213,   9.6710],
          [ 11.6529,  26.6733, -22.5230, -26.8852,  31.9564],
          [ 28.0863,  -3.0237, -26.3516, -15.2072,  12.7797],
          [ 19.3892,  -1.6946,  -1.9289,  -9.7964,   1.4976],
          [ 14.2041,  35.4999,  -8.7869,  -3.2035,  -9.9996]],

         [[-13.8956,  -1.0580,  16.6994, -37.0973,  10.1901],
          [ -4.8238,   0.4494, -12.7179,   9.1692,   4.0691],
          [ -2.5056,  -1.8033,  40.2430,  -6.8085, -11.8258],
          [  8.7304,  17.3263,  21.0899,  23.9779, -15.2143],
          [-25.7072,  18.3336,   1.7414, -31.1068,  17.8873]]],


        ...,


        [[[ 36.7397,  -1.2231,  12.5953, -14.9146,  -5.8905],
          [  0.6762,  -5.4948,  -0.8758, -23.1752,   4.4948],
          [ 13.5907,   9.4363, -13.0167,  -1.4605,   3.9022],
          [ -4.0801,   3.7814, -48.8959, -35.1264, -10.0767],
          [ 15.5882,   7.8834, -17.8241, -22.1677, -13.2384]],

         [[ 32.1797, -45.1707, -32.0996,  22.9766,  14.5513],
          [  3.8955,  21.5738,  -3.4840,  12.6511,  35.9534],
          [  1.6460,  19.9709,   9.4766, -13.2459,  18.9727],
          [  5.0571, -16.7125,   9.4681, -41.1717,   5.7789],
          [ -5.8519,  -7.9813,  -0.3942,   4.2023,  -7.2805]],

         [[ 20.2435,  26.9356,  14.7535,  -3.8149, -31.5770],
          [ 22.0421, -11.1209,  -4.6350, -14.7601,  49.6942],
          [ -5.6897,   4.7019,  -1.0194, -31.1413, -14.6233],
          [-22.6417,  31.8014,  -0.6371,  -4.7577,  24.1700],
          [ -6.8809,  -9.4995,  -7.1463,  -6.7840,   3.8862]],

         ...,

         [[-13.4290,  17.0721, -13.5616, -14.1157, -20.3650],
          [ -0.6895, -20.3975,  -8.2773,  22.6509,  12.6159],
          [ -2.7897,  -8.5398, -30.1972,  -0.3449,  22.6382],
          [ 26.7651, -27.6496, -13.5425,  -1.3880,  26.2989],
          [  5.9767,  -6.4924, -14.9828, -12.2041, -10.1280]],

         [[ -5.0247, -15.9079,  10.8754,  -0.8131,  19.1581],
          [  4.3167,  30.5344,  16.9922,  25.9103, -10.1564],
          [ 36.0279, -25.7650, -16.8958,   7.7564, -14.0927],
          [ -1.4171, -41.2973,   3.1658,  -2.5153,   1.4971],
          [ -2.0435,  18.7455,  -6.9049,  42.0779,  40.5171]],

         [[-14.3954,   5.9996,   8.8892,  15.6706,   1.1227],
          [ -3.0290,  -9.6134,   0.7748,   4.7610,  18.9477],
          [  3.3605, -30.4005,  18.6487,  -7.2948,  18.8750],
          [ 14.4491,  18.8228,  14.9067, -24.6420, -10.9739],
          [-22.5095,   5.4913,  20.7508,  -2.9628,  26.6230]]],


        [[[-37.8438, -12.5619,  22.8481,   7.1358,   4.2093],
          [ 20.0507,  -0.7664,   5.8641, -39.9688,  -0.7513],
          [  6.0183,   5.8898,  -0.9329,  26.1654,   4.3801],
          [-35.4107,  18.9599, -31.5032, -11.8523,   7.3677],
          [  6.3016,   7.8110,   4.0839,   7.2388, -17.9435]],

         [[ 16.9852,  11.1629,  -0.6949,   9.1976,  38.7121],
          [ -7.0278,  -2.9338, -24.6729,  10.2643,  11.4311],
          [  1.1735,   7.2511,  -9.7582,  18.7349, -15.6096],
          [ 25.7566,   7.4602,  19.9966, -22.7925,  20.0638],
          [  4.7172,  28.0131,   1.5347,  35.3185,  27.0548]],

         [[  0.8271,  -8.7255,   5.5151,  35.2468, -21.2811],
          [  6.3399, -13.9609,   2.5655,   5.3083,  11.9057],
          [ 33.9725,  -5.3648,   4.8503,  19.1244,   2.5710],
          [ 21.3511,  14.7794,  -6.4268,   9.3330,   6.3377],
          [  2.6238,  17.4177,  32.7135, -26.7331, -11.0698]],

         ...,

         [[ 20.1187,   6.1363,  14.4541, -15.8593,  19.7191],
          [ 16.9685,  -9.6608, -28.4588,  14.2180,  -5.9282],
          [  0.5960,   8.6152, -22.4684,  16.6834,  -4.7279],
          [  7.1866, -16.5282, -29.4657,   8.8968,  38.5720],
          [-30.7734,  11.4007,  14.4744, -15.5643,  13.4636]],

         [[ 30.7941,  14.5826,   4.2904,  19.6492,   2.6921],
          [ 40.0666,  12.4805,  25.9716,  12.7944, -13.0022],
          [  4.9426,  38.4751, -43.0020, -37.8245,   4.1182],
          [  0.7665,  33.9877, -10.4981, -28.3230,  29.4689],
          [-31.3197,   3.2229, -18.2263, -11.1589,   3.9811]],

         [[ 19.1849,  -3.8462,   5.0611, -40.1178, -18.9401],
          [ -3.8493,   7.2470,  16.7368,   6.9630, -20.1746],
          [ -7.3231, -13.6737,  -0.7112,  15.6188, -18.6690],
          [ 28.9719,  22.8327, -16.1341, -33.0990,   0.9931],
          [  1.0695,   7.1946,   5.2606, -31.4139, -31.7782]]],


        [[[ -3.7254,   6.7371,  32.5399,  32.3948, -12.2531],
          [-14.4684,  -9.6656,   9.2429,  28.2353,   1.9758],
          [-11.8215,  15.9693,   4.1095,  27.2257,  12.7298],
          [  6.0725,  10.5683, -29.1462,   7.6862,   3.7598],
          [ 33.4514,  37.4538,  18.7971,  -6.1630,   3.0145]],

         [[ -6.9670,  22.0890,  17.6762, -22.2825,   2.7070],
          [-28.3949, -29.0563,   9.1431,  -3.1324, -20.3062],
          [ -8.9316,   6.0465,  33.8763, -17.1560,  -0.3651],
          [ 17.1885, -16.8132, -12.1854,  13.0426,   3.9115],
          [  2.9299,  15.8226, -17.8220,   8.9196,   7.7572]],

         [[-12.2807,  -6.5472,  16.9019,  -2.1074,   3.9160],
          [-23.4730, -21.7072,   6.0341, -29.4728,   5.1391],
          [ -6.5311,   7.2641,  -5.7087, -11.5525, -26.0675],
          [-14.4078,  21.4661,   3.0275,  12.9593,   8.6055],
          [-11.9820,  -4.1519, -10.7201, -54.3572,   3.2330]],

         ...,

         [[-25.0097,  35.8248,  14.8300,   7.4665,  26.3431],
          [ 35.9735,   9.9326, -14.6631,   3.8056,   8.6904],
          [-14.5735,   7.8065,   2.3971,  -9.1679, -24.6217],
          [  4.0892,  -0.2361, -23.3539, -16.5487, -14.7438],
          [-21.0442, -15.1294,  30.7480,  22.7784,  -5.4401]],

         [[ 10.1806,  -9.7599, -13.0879, -11.2862,   8.7011],
          [ 16.9221, -22.5619,  -9.1881,   7.2206, -14.2488],
          [  7.2253, -20.9041,  37.5530,  -2.5788,  -5.6223],
          [ -8.2343,  12.4944, -12.7566,   2.6582,  20.6420],
          [ 29.4380,   8.9442,   7.4303,   3.7857,   1.9862]],

         [[-15.6053,  42.0223, -43.0718,  16.9400,  11.3386],
          [  2.3042, -27.9817,   9.1433,  29.1376,   7.6629],
          [-20.5137,   5.2436, -15.3141,  -6.1896,  31.4788],
          [ -2.2009, -26.3716,   2.7668,  24.5455,   6.2913],
          [-17.2962,   4.3340,  -7.5388,  38.4184, -10.4836]]]])
DESIRED: (shape=torch.Size([64, 32, 5, 5]), dtype=torch.float32)
tensor([[[[-4.3840e+01, -1.7138e+01,  2.3669e+01,  8.3084e-01, -3.6211e+00],
          [ 1.5481e+01, -3.4671e+01, -4.9521e+00, -2.7620e+00, -6.6689e+00],
          [ 2.2356e+01,  1.2791e+01,  2.0057e+01, -5.4688e-01,  1.0457e+01],
          [-3.3595e+01,  1.9065e+01,  1.8654e+01, -2.6118e+00,  8.5164e+00],
          [-2.1667e+01,  6.9535e+00, -1.4680e+01, -3.5996e+01, -2.8886e+01]],

         [[ 5.6100e+00, -1.6650e+01,  2.1153e+00, -1.3520e+01,  2.8238e+01],
          [-2.0252e+01,  1.0230e+01,  7.5181e+00, -2.1763e+01,  1.4381e+01],
          [ 2.9367e+01,  1.3483e+01, -7.3329e+00,  3.1492e+00, -4.4375e+00],
          [-2.6385e-01, -6.7474e+00,  4.2725e+00,  1.0955e+00,  1.4373e+01],
          [-1.7410e+01,  1.9261e+00, -4.1270e+00,  5.4626e+00, -2.9872e+00]],

         [[ 3.3231e+00, -1.6904e+01,  1.9108e+01, -2.8248e+00, -1.4730e+00],
          [-1.8852e+00,  9.3849e+00, -7.1140e+00, -2.5300e+00,  3.7294e+00],
          [ 4.0399e-01, -4.0083e+00, -1.7033e+01, -4.1761e+01,  2.7472e+01],
          [ 2.9822e+01, -9.0406e+00,  2.1003e+01, -5.7751e+00,  2.9702e+00],
          [-1.9886e+01, -1.1110e+01, -3.6699e+01, -2.3241e+01,  1.1076e+01]],

         ...,

         [[ 1.8269e+00, -2.3796e+01,  2.0370e+00,  2.3956e+01,  3.8248e+01],
          [ 9.2995e+00,  1.2901e+01,  6.6683e+00, -6.9939e+00,  2.7783e+01],
          [-9.0937e+00, -6.4128e+00, -3.5836e+01,  1.6849e+01,  9.8624e+00],
          [-2.4859e-01,  5.1452e+00,  9.3071e+00, -2.0412e+01, -1.8186e+01],
          [-2.2210e+01, -9.8446e+00,  1.9997e+01,  3.2806e+01, -3.5494e+00]],

         [[-8.0494e+00,  1.8954e+01, -3.0052e+01,  1.1985e+01,  1.1229e+01],
          [-1.6434e+00, -3.3558e+00, -1.1366e+01, -1.9870e+01,  5.5679e+00],
          [-2.8415e+01, -2.7371e+01,  2.0180e+01,  9.0916e+00,  1.4621e+01],
          [-1.8788e+01,  4.5058e+00, -8.8306e+00, -2.2334e+01, -8.5858e+00],
          [ 1.1620e+01, -2.9529e+01, -1.8523e+01, -2.1270e+00,  7.3343e+00]],

         [[ 7.3441e+00, -9.1284e+00, -9.4730e-01, -2.6127e+00,  8.8901e+00],
          [-2.0767e+01,  1.7443e+01, -1.9505e+01, -1.9243e+01,  9.4191e+00],
          [ 8.7783e+00,  1.4239e+01,  7.2574e-01, -1.1602e+01, -9.0149e-01],
          [ 1.4707e+01,  3.3555e+01,  2.0838e+01, -4.4702e-01, -1.2459e+01],
          [ 1.4555e+00,  7.5675e+00, -1.3789e+01, -3.4401e+00,  1.7375e+01]]],


        [[[-1.7576e+00,  8.4965e+00,  1.3499e+01,  6.7949e-01, -1.5441e+01],
          [ 4.0708e+00, -2.7404e+01,  5.0134e+00,  1.8755e+00,  2.2104e+00],
          [-1.5219e+01,  1.3288e+01,  9.2366e+00,  5.8369e+00,  1.3970e+01],
          [ 2.3993e+01, -1.0572e+01, -3.1053e+01,  1.7862e+01, -1.1172e+00],
          [ 2.1085e+01, -3.4472e+01, -3.1190e+01,  3.5927e+00, -3.2664e+00]],

         [[ 2.0169e+01,  9.8237e+00,  2.3266e+01, -1.9043e+00,  6.0461e-01],
          [ 1.9568e+01, -3.1235e+01,  1.9122e+01,  2.4641e+01, -1.8007e+01],
          [ 1.0092e+01, -4.9721e+00,  7.3832e+00, -4.7541e+00,  3.1956e+01],
          [-4.7473e+01, -7.9875e+00, -2.4958e+00, -5.2867e+00, -1.3691e+00],
          [ 3.5212e+01, -1.6007e+01,  2.9332e+01,  1.4290e+01,  6.5361e+00]],

         [[ 2.0367e+01, -5.2769e+00,  1.3696e-01, -2.2613e+01,  2.4227e+01],
          [ 1.5012e+01,  3.8842e+01, -3.2110e+00, -2.6548e+01,  7.0007e-01],
          [ 1.5762e+01, -4.5881e+01,  1.9489e+01, -3.9936e+01,  9.5977e+00],
          [-3.5725e-01, -1.6436e+00,  1.4252e+01, -5.9358e+00,  2.9591e+01],
          [ 1.4893e+00,  3.8770e+01,  2.8441e+01, -4.5441e+00, -1.3990e+01]],

         ...,

         [[ 1.7636e+01,  8.1223e+00,  1.6476e+01, -1.4121e+00,  2.4906e+01],
          [-1.1331e+00, -1.3464e+01,  2.8860e+00,  2.8717e+01,  2.8843e+01],
          [-4.6945e-01,  1.8584e+01, -9.3450e+00,  1.2038e+01, -1.0626e+01],
          [-7.9704e+00, -2.5155e+01, -9.1428e-01, -1.9496e+00, -1.1371e+01],
          [-3.8704e+00, -9.9690e+00, -1.3985e+01,  3.2775e+01,  1.2215e+01]],

         [[-3.1474e+01, -2.0762e+00,  1.7555e+01,  2.9539e+01,  1.4252e+01],
          [-2.2186e+01, -1.3117e+01, -2.0223e+01,  2.0489e+01,  2.2283e+00],
          [-1.7967e+01, -2.3372e+00, -9.2318e+00,  7.5803e+00,  2.1414e+01],
          [ 3.3854e+01,  5.4869e+00, -7.5926e-01,  2.9894e+00, -1.2653e+01],
          [ 1.0136e+01, -3.0402e+01,  1.3468e+01,  1.3296e+01,  9.3710e+00]],

         [[ 2.8450e+01,  1.2384e+01, -7.6523e-01, -1.3421e+01,  8.3670e+00],
          [-1.1914e+01, -5.4661e+00, -3.0169e+00, -1.9995e+01, -4.1205e+01],
          [ 6.0024e+00, -8.8880e+00, -2.6262e+01, -1.3005e+01, -5.0301e+01],
          [-2.2923e+01,  8.4618e+00, -2.5686e+01,  1.7437e+01, -2.9011e+01],
          [-1.6839e+00, -2.9660e+01, -6.6125e+00,  1.8949e+01,  9.6560e+00]]],


        [[[-8.9500e+00,  1.1774e+01, -1.3492e+01,  7.8279e+00, -1.6199e+00],
          [-6.3873e+00, -1.8191e+01, -1.3234e+01, -8.9279e+00, -1.0886e+01],
          [ 4.3062e+00,  3.3182e+00, -2.6811e+00,  1.4051e+01,  2.6020e+01],
          [ 1.2938e+01, -1.0891e+00, -6.8476e+00,  2.1183e+01, -1.7166e+01],
          [-2.9853e+00,  1.2178e+01,  3.7854e+00, -1.6475e+01, -3.1421e+01]],

         [[ 2.0711e+01,  9.9870e+00, -4.5460e+01,  7.5364e+00, -2.1026e+01],
          [ 4.6574e+00,  3.7185e+01,  2.9593e+01, -2.1678e+01, -4.0649e-02],
          [-9.3547e+00, -2.7183e+01, -1.3941e+01, -2.8837e+01,  4.8127e+00],
          [ 7.2245e+00, -3.3732e+00, -2.0826e+01, -2.1780e+00,  3.8325e+01],
          [-8.5471e+00,  5.3599e+00, -2.6576e+01,  1.8382e+01,  8.3258e-01]],

         [[-8.0743e+00, -5.0646e+00,  1.6524e+01, -1.6580e+01, -8.1660e+00],
          [ 4.3545e+00, -1.6366e+01, -7.8858e+00,  2.3844e+01,  7.5521e+00],
          [ 1.1713e+00,  5.9862e+00, -2.2161e+00,  7.8323e+00, -1.7110e+01],
          [-1.1579e+00, -2.7190e+01, -1.5301e+01, -2.7001e+01, -9.1595e-01],
          [ 9.5776e+00, -9.5276e+00, -3.1913e+00, -1.0988e+01, -1.5461e+01]],

         ...,

         [[-2.9867e-01,  2.1232e+01,  9.1824e+00,  5.7247e+00, -4.1267e+00],
          [ 4.0239e+00, -1.5323e+00,  9.6265e+00,  5.0143e+00,  1.4243e+01],
          [-2.7332e+00, -2.7116e+01,  1.9253e+01, -2.0624e+00,  3.9177e+01],
          [ 1.4849e+01,  1.4874e+01, -1.5339e+01,  7.3846e-01,  2.1320e+00],
          [-1.4248e+01,  1.9901e+01,  9.5870e+00,  3.7352e+01, -1.7201e+01]],

         [[-8.4667e+00,  4.7650e+00,  3.6026e+00, -2.0147e+01,  9.7278e+00],
          [ 1.1646e+01,  2.6676e+01, -2.2522e+01, -2.6898e+01,  3.1964e+01],
          [ 2.8094e+01, -3.0260e+00, -2.6361e+01, -1.5183e+01,  1.2756e+01],
          [ 1.9379e+01, -1.6973e+00, -1.9059e+00, -9.8605e+00,  1.5626e+00],
          [ 1.4203e+01,  3.5495e+01, -8.8468e+00, -3.0644e+00, -1.0148e+01]],

         [[-1.3835e+01, -1.0936e+00,  1.6723e+01, -3.7147e+01,  1.0255e+01],
          [-4.8349e+00,  4.5267e-01, -1.2729e+01,  9.1891e+00,  4.0166e+00],
          [-2.4615e+00, -1.8170e+00,  4.0258e+01, -6.8268e+00, -1.1798e+01],
          [ 8.7121e+00,  1.7322e+01,  2.1068e+01,  2.3994e+01, -1.5281e+01],
          [-2.5531e+01,  1.8320e+01,  1.7800e+00, -3.1118e+01,  1.7930e+01]]],


        ...,


        [[[ 3.6770e+01, -1.2181e+00,  1.2632e+01, -1.4968e+01, -5.7903e+00],
          [ 6.6270e-01, -5.4862e+00, -8.8379e-01, -2.3152e+01,  4.4717e+00],
          [ 1.3610e+01,  9.4427e+00, -1.3016e+01, -1.4646e+00,  3.8935e+00],
          [-4.1014e+00,  3.7771e+00, -4.8875e+01, -3.5148e+01, -9.9706e+00],
          [ 1.5609e+01,  7.9095e+00, -1.7863e+01, -2.2120e+01, -1.3440e+01]],

         [[ 3.2149e+01, -4.5104e+01, -3.2134e+01,  2.3056e+01,  1.4445e+01],
          [ 3.8925e+00,  2.1581e+01, -3.5041e+00,  1.2673e+01,  3.5894e+01],
          [ 1.6369e+00,  1.9995e+01,  9.4606e+00, -1.3211e+01,  1.8923e+01],
          [ 5.0475e+00, -1.6720e+01,  9.4477e+00, -4.1162e+01,  5.7384e+00],
          [-5.8163e+00, -7.9502e+00, -3.9023e-01,  4.2526e+00, -7.3142e+00]],

         [[ 2.0200e+01,  2.6939e+01,  1.4761e+01, -3.8060e+00, -3.1517e+01],
          [ 2.2012e+01, -1.1102e+01, -4.6349e+00, -1.4762e+01,  4.9719e+01],
          [-5.6250e+00,  4.6689e+00, -1.0038e+00, -3.1155e+01, -1.4613e+01],
          [-2.2735e+01,  3.1847e+01, -6.5240e-01, -4.7430e+00,  2.4207e+01],
          [-6.6907e+00, -9.6165e+00, -7.0898e+00, -6.8651e+00,  3.9285e+00]],

         ...,

         [[-1.3459e+01,  1.7073e+01, -1.3567e+01, -1.4134e+01, -2.0367e+01],
          [-6.8019e-01, -2.0408e+01, -8.2681e+00,  2.2635e+01,  1.2640e+01],
          [-2.7971e+00, -8.5282e+00, -3.0206e+01, -3.3319e-01,  2.2620e+01],
          [ 2.6774e+01, -2.7671e+01, -1.3527e+01, -1.4141e+00,  2.6346e+01],
          [ 5.9641e+00, -6.4410e+00, -1.5031e+01, -1.2121e+01, -1.0307e+01]],

         [[-4.9477e+00, -1.5931e+01,  1.0913e+01, -8.5175e-01,  1.9237e+01],
          [ 4.3124e+00,  3.0540e+01,  1.6992e+01,  2.5915e+01, -1.0158e+01],
          [ 3.6021e+01, -2.5773e+01, -1.6888e+01,  7.7500e+00, -1.4080e+01],
          [-1.4270e+00, -4.1294e+01,  3.1564e+00, -2.5144e+00,  1.4678e+00],
          [-2.0810e+00,  1.8724e+01, -6.8947e+00,  4.2080e+01,  4.0544e+01]],

         [[-1.4408e+01,  5.9979e+00,  8.9075e+00,  1.5646e+01,  1.1926e+00],
          [-3.0381e+00, -9.6277e+00,  7.8137e-01,  4.7516e+00,  1.8940e+01],
          [ 3.3951e+00, -3.0387e+01,  1.8655e+01, -7.2961e+00,  1.8896e+01],
          [ 1.4389e+01,  1.8796e+01,  1.4898e+01, -2.4652e+01, -1.0987e+01],
          [-2.2315e+01,  5.5291e+00,  2.0785e+01, -2.9842e+00,  2.6702e+01]]],


        [[[-3.7924e+01, -1.2607e+01,  2.2885e+01,  7.0842e+00,  4.3037e+00],
          [ 2.0062e+01, -7.5669e-01,  5.8590e+00, -3.9936e+01, -7.9684e-01],
          [ 6.0235e+00,  5.8908e+00, -9.2401e-01,  2.6151e+01,  4.4038e+00],
          [-3.5428e+01,  1.8958e+01, -3.1522e+01, -1.1802e+01,  7.2925e+00],
          [ 6.3757e+00,  7.8255e+00,  4.1241e+00,  7.1720e+00, -1.7821e+01]],

         [[ 1.6949e+01,  1.1184e+01, -6.9409e-01,  9.1833e+00,  3.8773e+01],
          [-7.0432e+00, -2.9557e+00, -2.4670e+01,  1.0246e+01,  1.1442e+01],
          [ 1.2036e+00,  7.2668e+00, -9.7569e+00,  1.8747e+01, -1.5609e+01],
          [ 2.5685e+01,  7.4321e+00,  1.9995e+01, -2.2822e+01,  2.0080e+01],
          [ 4.8647e+00,  2.8070e+01,  1.5396e+00,  3.5373e+01,  2.7042e+01]],

         [[ 7.7911e-01, -8.7426e+00,  5.5354e+00,  3.5101e+01, -2.1109e+01],
          [ 6.3286e+00, -1.3939e+01,  2.5490e+00,  5.3669e+00,  1.1830e+01],
          [ 3.3962e+01, -5.3944e+00,  4.8613e+00,  1.9083e+01,  2.6270e+00],
          [ 2.1361e+01,  1.4800e+01, -6.4269e+00,  9.3327e+00,  6.3255e+00],
          [ 2.5667e+00,  1.7389e+01,  3.2712e+01, -2.6747e+01, -1.1008e+01]],

         ...,

         [[ 2.0161e+01,  6.1288e+00,  1.4496e+01, -1.5891e+01,  1.9842e+01],
          [ 1.6965e+01, -9.6594e+00, -2.8462e+01,  1.4219e+01, -5.9507e+00],
          [ 5.9668e-01,  8.6129e+00, -2.2469e+01,  1.6687e+01, -4.7305e+00],
          [ 7.2319e+00, -1.6504e+01, -2.9463e+01,  8.9181e+00,  3.8539e+01],
          [-3.0834e+01,  1.1359e+01,  1.4476e+01, -1.5606e+01,  1.3478e+01]],

         [[ 3.0797e+01,  1.4564e+01,  4.3005e+00,  1.9606e+01,  2.7543e+00],
          [ 4.0099e+01,  1.2475e+01,  2.5978e+01,  1.2798e+01, -1.3004e+01],
          [ 4.9319e+00,  3.8479e+01, -4.3001e+01, -3.7824e+01,  4.1139e+00],
          [ 7.8159e-01,  3.3972e+01, -1.0497e+01, -2.8322e+01,  2.9475e+01],
          [-3.1291e+01,  3.2221e+00, -1.8196e+01, -1.1180e+01,  4.0446e+00]],

         [[ 1.9157e+01, -3.8580e+00,  5.0841e+00, -4.0177e+01, -1.8797e+01],
          [-3.8465e+00,  7.2520e+00,  1.6739e+01,  6.9709e+00, -2.0185e+01],
          [-7.3354e+00, -1.3674e+01, -7.1179e-01,  1.5617e+01, -1.8665e+01],
          [ 2.8992e+01,  2.2839e+01, -1.6129e+01, -3.3094e+01,  9.9924e-01],
          [ 1.0950e+00,  7.1961e+00,  5.2463e+00, -3.1382e+01, -3.1851e+01]]],


        [[[-3.7152e+00,  6.7525e+00,  3.2515e+01,  3.2439e+01, -1.2242e+01],
          [-1.4457e+01, -9.6650e+00,  9.2460e+00,  2.8220e+01,  2.0060e+00],
          [-1.1824e+01,  1.5971e+01,  4.1033e+00,  2.7239e+01,  1.2727e+01],
          [ 6.0641e+00,  1.0580e+01, -2.9138e+01,  7.6818e+00,  3.7897e+00],
          [ 3.3464e+01,  3.7437e+01,  1.8758e+01, -6.1414e+00,  2.8590e+00]],

         [[-7.0030e+00,  2.2066e+01,  1.7641e+01, -2.2229e+01,  2.5649e+00],
          [-2.8364e+01, -2.9059e+01,  9.1448e+00, -3.1244e+00, -2.0298e+01],
          [-8.9437e+00,  6.0359e+00,  3.3873e+01, -1.7171e+01, -3.8461e-01],
          [ 1.7200e+01, -1.6804e+01, -1.2190e+01,  1.3080e+01,  3.9031e+00],
          [ 2.9148e+00,  1.5776e+01, -1.7809e+01,  8.8368e+00,  7.7669e+00]],

         [[-1.2220e+01, -6.5478e+00,  1.6923e+01, -2.1360e+00,  3.9503e+00],
          [-2.3464e+01, -2.1719e+01,  6.0399e+00, -2.9471e+01,  5.1408e+00],
          [-6.5409e+00,  7.2819e+00, -5.7218e+00, -1.1533e+01, -2.6112e+01],
          [-1.4408e+01,  2.1453e+01,  3.0402e+00,  1.2963e+01,  8.5903e+00],
          [-1.1959e+01, -4.1038e+00, -1.0757e+01, -5.4308e+01,  3.1422e+00]],

         ...,

         [[-2.4996e+01,  3.5855e+01,  1.4793e+01,  7.5678e+00,  2.6093e+01],
          [ 3.6009e+01,  9.9265e+00, -1.4645e+01,  3.7701e+00,  8.7659e+00],
          [-1.4618e+01,  7.8183e+00,  2.3841e+00, -9.1534e+00, -2.4667e+01],
          [ 4.1686e+00, -2.5687e-01, -2.3323e+01, -1.6585e+01, -1.4654e+01],
          [-2.1225e+01, -1.5080e+01,  3.0700e+01,  2.2805e+01, -5.5237e+00]],

         [[ 1.0161e+01, -9.7658e+00, -1.3054e+01, -1.1357e+01,  8.9031e+00],
          [ 1.6892e+01, -2.2557e+01, -9.2053e+00,  7.2509e+00, -1.4327e+01],
          [ 7.2385e+00, -2.0897e+01,  3.7561e+01, -2.5876e+00, -5.5867e+00],
          [-8.2718e+00,  1.2483e+01, -1.2766e+01,  2.6738e+00,  2.0599e+01],
          [ 2.9520e+01,  8.9808e+00,  7.4323e+00,  3.7935e+00,  2.0170e+00]],

         [[-1.5635e+01,  4.2062e+01, -4.3120e+01,  1.7002e+01,  1.1314e+01],
          [ 2.3601e+00, -2.7989e+01,  9.1508e+00,  2.9133e+01,  7.6349e+00],
          [-2.0532e+01,  5.2537e+00, -1.5319e+01, -6.1874e+00,  3.1517e+01],
          [-2.1642e+00, -2.6381e+01,  2.7676e+00,  2.4548e+01,  6.2358e+00],
          [-1.7334e+01,  4.3395e+00, -7.5237e+00,  3.8373e+01, -1.0349e+01]]]])

2025-06-10 00:13:31.302099 GPU 6 156013 test begin: paddle.nn.functional.grid_sample(Tensor([1, 4, 280, 350],"float32"), Tensor([1, 298, 364, 2],"float32"), mode="nearest", padding_mode="zeros", align_corners=False, )
[accuracy error] paddle.nn.functional.grid_sample(Tensor([1, 4, 280, 350],"float32"), Tensor([1, 298, 364, 2],"float32"), mode="nearest", padding_mode="zeros", align_corners=False, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 12 / 433888 (0.0%)
Greatest absolute difference: 0.6191434860229492 at index (0, 2, 36, 79) (up to 0.01 allowed)
Greatest relative difference: 1.7157717943191528 at index (0, 2, 41, 32) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 4, 298, 364]), dtype=torch.float32)
tensor([[[[ 0.2081, -0.4827, -0.3027,  ...,  0.0904,  0.0124, -0.2162],
          [-0.3597,  0.4869,  0.0700,  ...,  0.2447, -0.1975, -0.0505],
          [-0.2631,  0.1497,  0.2568,  ..., -0.3137, -0.3268, -0.2212],
          ...,
          [-0.3308,  0.4273,  0.3127,  ...,  0.0518, -0.4002, -0.4321],
          [ 0.1724, -0.1233,  0.1884,  ..., -0.1525, -0.1212, -0.1773],
          [ 0.3401,  0.1846,  0.3775,  ..., -0.1258, -0.0280,  0.1100]],

         [[-0.4132,  0.0476,  0.4442,  ..., -0.1790,  0.3332,  0.2837],
          [ 0.0354, -0.1040,  0.4391,  ..., -0.1803,  0.0698, -0.1826],
          [ 0.3442, -0.3615, -0.4294,  ...,  0.3626,  0.0107,  0.3020],
          ...,
          [-0.0622, -0.2386, -0.0951,  ...,  0.3321, -0.0724,  0.2607],
          [-0.1585, -0.2183, -0.0816,  ...,  0.2357, -0.4026, -0.1463],
          [-0.2372, -0.0022, -0.4949,  ..., -0.1784,  0.3341, -0.4050]],

         [[-0.1335, -0.1455,  0.3951,  ..., -0.4733, -0.1026, -0.4759],
          [-0.0402,  0.4230,  0.0508,  ..., -0.1162, -0.1327, -0.3702],
          [ 0.0732,  0.0633, -0.1731,  ..., -0.1412,  0.4880, -0.0616],
          ...,
          [-0.4584, -0.0661,  0.2546,  ..., -0.1154, -0.1551,  0.2206],
          [-0.0687,  0.4414, -0.1525,  ...,  0.4499, -0.2726, -0.1883],
          [ 0.4591, -0.0727, -0.2261,  ..., -0.4811, -0.3006,  0.3983]],

         [[ 0.4465,  0.3412, -0.0800,  ...,  0.4329,  0.4746, -0.3209],
          [ 0.4641, -0.4444,  0.4790,  ...,  0.1908, -0.1347,  0.0411],
          [-0.1040, -0.4451,  0.1352,  ...,  0.4846,  0.1724,  0.2174],
          ...,
          [ 0.4616, -0.2574, -0.3835,  ..., -0.0019,  0.2970,  0.2620],
          [-0.4569,  0.3172, -0.1026,  ...,  0.2283,  0.4861, -0.3434],
          [ 0.4505, -0.2990,  0.3682,  ..., -0.1874, -0.2740,  0.2075]]]])
DESIRED: (shape=torch.Size([1, 4, 298, 364]), dtype=torch.float32)
tensor([[[[ 0.2081, -0.4827, -0.3027,  ...,  0.0904,  0.0124, -0.2162],
          [-0.3597,  0.4869,  0.0700,  ...,  0.2447, -0.1975, -0.0505],
          [-0.2631,  0.1497,  0.2568,  ..., -0.3137, -0.3268, -0.2212],
          ...,
          [-0.3308,  0.4273,  0.3127,  ...,  0.0518, -0.4002, -0.4321],
          [ 0.1724, -0.1233,  0.1884,  ..., -0.1525, -0.1212, -0.1773],
          [ 0.3401,  0.1846,  0.3775,  ..., -0.1258, -0.0280,  0.1100]],

         [[-0.4132,  0.0476,  0.4442,  ..., -0.1790,  0.3332,  0.2837],
          [ 0.0354, -0.1040,  0.4391,  ..., -0.1803,  0.0698, -0.1826],
          [ 0.3442, -0.3615, -0.4294,  ...,  0.3626,  0.0107,  0.3020],
          ...,
          [-0.0622, -0.2386, -0.0951,  ...,  0.3321, -0.0724,  0.2607],
          [-0.1585, -0.2183, -0.0816,  ...,  0.2357, -0.4026, -0.1463],
          [-0.2372, -0.0022, -0.4949,  ..., -0.1784,  0.3341, -0.4050]],

         [[-0.1335, -0.1455,  0.3951,  ..., -0.4733, -0.1026, -0.4759],
          [-0.0402,  0.4230,  0.0508,  ..., -0.1162, -0.1327, -0.3702],
          [ 0.0732,  0.0633, -0.1731,  ..., -0.1412,  0.4880, -0.0616],
          ...,
          [-0.4584, -0.0661,  0.2546,  ..., -0.1154, -0.1551,  0.2206],
          [-0.0687,  0.4414, -0.1525,  ...,  0.4499, -0.2726, -0.1883],
          [ 0.4591, -0.0727, -0.2261,  ..., -0.4811, -0.3006,  0.3983]],

         [[ 0.4465,  0.3412, -0.0800,  ...,  0.4329,  0.4746, -0.3209],
          [ 0.4641, -0.4444,  0.4790,  ...,  0.1908, -0.1347,  0.0411],
          [-0.1040, -0.4451,  0.1352,  ...,  0.4846,  0.1724,  0.2174],
          ...,
          [ 0.4616, -0.2574, -0.3835,  ..., -0.0019,  0.2970,  0.2620],
          [-0.4569,  0.3172, -0.1026,  ...,  0.2283,  0.4861, -0.3434],
          [ 0.4505, -0.2990,  0.3682,  ..., -0.1874, -0.2740,  0.2075]]]])

2025-06-10 00:13:31.499634 GPU 5 156012 test begin: paddle.nn.functional.grid_sample(Tensor([1, 4, 280, 350],"float32"), Tensor([1, 368, 416, 2],"float32"), mode="nearest", padding_mode="zeros", align_corners=False, )
[accuracy error] paddle.nn.functional.grid_sample(Tensor([1, 4, 280, 350],"float32"), Tensor([1, 368, 416, 2],"float32"), mode="nearest", padding_mode="zeros", align_corners=False, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 12 / 612352 (0.0%)
Greatest absolute difference: 0.8103618621826172 at index (0, 0, 341, 409) (up to 0.01 allowed)
Greatest relative difference: 3.343942165374756 at index (0, 3, 347, 80) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 4, 368, 416]), dtype=torch.float32)
tensor([[[[ 1.2676e-01, -1.8823e-01, -1.8921e-01,  ...,  2.1428e-01,  2.0447e-02, -1.6723e-01],
          [ 2.3028e-01,  2.5616e-01,  1.2643e-01,  ..., -4.9247e-01, -2.5767e-01,  7.2555e-02],
          [ 2.9824e-01,  4.9854e-04,  1.2475e-01,  ...,  3.8373e-01,  4.5973e-01,  7.8724e-02],
          ...,
          [-4.0841e-01,  4.9499e-02,  4.2190e-01,  ..., -2.5874e-01,  2.5595e-01,  4.2719e-01],
          [-3.5078e-01, -3.7976e-01,  3.3434e-01,  ..., -2.1713e-01, -3.0796e-01, -4.2793e-01],
          [-1.0792e-01,  3.6253e-01, -3.8774e-01,  ...,  1.3042e-01,  1.1026e-02, -4.0678e-01]],

         [[ 4.3447e-01, -1.8692e-01,  3.3946e-01,  ...,  1.1645e-01, -1.4425e-01,  2.5100e-01],
          [-4.4399e-01,  3.5200e-01, -3.1358e-01,  ...,  2.8244e-01, -3.0872e-01, -4.8980e-01],
          [ 2.4163e-01,  3.1569e-01,  1.6261e-02,  ...,  1.4794e-01, -3.9548e-01, -2.6787e-01],
          ...,
          [ 6.4648e-02,  1.5275e-01, -2.5636e-01,  ...,  1.6165e-01, -1.5824e-01,  2.6517e-01],
          [ 1.2856e-01,  1.9209e-01,  4.6215e-01,  ..., -4.8776e-01,  3.5991e-01,  2.9045e-02],
          [-1.5341e-01,  1.7324e-01, -3.2280e-01,  ..., -4.1288e-01,  4.7077e-01, -2.6923e-01]],

         [[-3.2951e-01,  1.8900e-01, -1.7385e-01,  ...,  1.4672e-01, -1.8023e-01,  2.9530e-01],
          [-4.8174e-01, -3.4875e-01, -3.9189e-01,  ...,  1.1195e-02,  6.0314e-02,  1.7098e-02],
          [-4.6335e-02, -2.9107e-01, -3.8315e-01,  ..., -3.9585e-01, -1.2496e-01, -2.4218e-01],
          ...,
          [ 2.5667e-01, -9.5516e-02, -4.8214e-01,  ..., -4.4862e-01, -4.8743e-01, -4.7654e-02],
          [ 3.5385e-01, -2.9934e-01, -2.5256e-01,  ...,  4.8637e-01, -4.5046e-01,  3.0475e-01],
          [ 3.0618e-01,  4.9461e-01,  3.9478e-01,  ..., -4.8856e-03,  1.0853e-01,  3.4729e-01]],

         [[ 3.9526e-01, -1.4053e-01,  2.6717e-01,  ..., -6.0627e-02,  3.7994e-01,  1.5116e-04],
          [ 3.6127e-01,  4.1945e-01, -3.7524e-01,  ...,  1.9584e-01, -3.3006e-01,  4.8002e-01],
          [ 4.2634e-01,  7.1303e-02, -5.3210e-02,  ..., -4.7999e-01,  2.9872e-01,  5.2144e-02],
          ...,
          [-4.6001e-01,  9.6416e-02, -4.8854e-02,  ...,  2.9148e-02, -4.6997e-01,  4.3890e-02],
          [-3.2599e-01, -1.9882e-01,  2.8099e-01,  ...,  5.5793e-02,  4.8811e-01,  4.9667e-01],
          [-4.8781e-01, -3.8670e-01, -4.6174e-01,  ..., -3.7871e-01,  8.3586e-02,  1.2286e-02]]]])
DESIRED: (shape=torch.Size([1, 4, 368, 416]), dtype=torch.float32)
tensor([[[[ 1.2676e-01, -1.8823e-01, -1.8921e-01,  ...,  2.1428e-01,  2.0447e-02, -1.6723e-01],
          [ 2.3028e-01,  2.5616e-01,  1.2643e-01,  ..., -4.9247e-01, -2.5767e-01,  7.2555e-02],
          [ 2.9824e-01,  4.9854e-04,  1.2475e-01,  ...,  3.8373e-01,  4.5973e-01,  7.8724e-02],
          ...,
          [-4.0841e-01,  4.9499e-02,  4.2190e-01,  ..., -2.5874e-01,  2.5595e-01,  4.2719e-01],
          [-3.5078e-01, -3.7976e-01,  3.3434e-01,  ..., -2.1713e-01, -3.0796e-01, -4.2793e-01],
          [-1.0792e-01,  3.6253e-01, -3.8774e-01,  ...,  1.3042e-01,  1.1026e-02, -4.0678e-01]],

         [[ 4.3447e-01, -1.8692e-01,  3.3946e-01,  ...,  1.1645e-01, -1.4425e-01,  2.5100e-01],
          [-4.4399e-01,  3.5200e-01, -3.1358e-01,  ...,  2.8244e-01, -3.0872e-01, -4.8980e-01],
          [ 2.4163e-01,  3.1569e-01,  1.6261e-02,  ...,  1.4794e-01, -3.9548e-01, -2.6787e-01],
          ...,
          [ 6.4648e-02,  1.5275e-01, -2.5636e-01,  ...,  1.6165e-01, -1.5824e-01,  2.6517e-01],
          [ 1.2856e-01,  1.9209e-01,  4.6215e-01,  ..., -4.8776e-01,  3.5991e-01,  2.9045e-02],
          [-1.5341e-01,  1.7324e-01, -3.2280e-01,  ..., -4.1288e-01,  4.7077e-01, -2.6923e-01]],

         [[-3.2951e-01,  1.8900e-01, -1.7385e-01,  ...,  1.4672e-01, -1.8023e-01,  2.9530e-01],
          [-4.8174e-01, -3.4875e-01, -3.9189e-01,  ...,  1.1195e-02,  6.0314e-02,  1.7098e-02],
          [-4.6335e-02, -2.9107e-01, -3.8315e-01,  ..., -3.9585e-01, -1.2496e-01, -2.4218e-01],
          ...,
          [ 2.5667e-01, -9.5516e-02, -4.8214e-01,  ..., -4.4862e-01, -4.8743e-01, -4.7654e-02],
          [ 3.5385e-01, -2.9934e-01, -2.5256e-01,  ...,  4.8637e-01, -4.5046e-01,  3.0475e-01],
          [ 3.0618e-01,  4.9461e-01,  3.9478e-01,  ..., -4.8856e-03,  1.0853e-01,  3.4729e-01]],

         [[ 3.9526e-01, -1.4053e-01,  2.6717e-01,  ..., -6.0627e-02,  3.7994e-01,  1.5116e-04],
          [ 3.6127e-01,  4.1945e-01, -3.7524e-01,  ...,  1.9584e-01, -3.3006e-01,  4.8002e-01],
          [ 4.2634e-01,  7.1303e-02, -5.3210e-02,  ..., -4.7999e-01,  2.9872e-01,  5.2144e-02],
          ...,
          [-4.6001e-01,  9.6416e-02, -4.8854e-02,  ...,  2.9148e-02, -4.6997e-01,  4.3890e-02],
          [-3.2599e-01, -1.9882e-01,  2.8099e-01,  ...,  5.5793e-02,  4.8811e-01,  4.9667e-01],
          [-4.8781e-01, -3.8670e-01, -4.6174e-01,  ..., -3.7871e-01,  8.3586e-02,  1.2286e-02]]]])

2025-06-10 00:13:31.517789 GPU 6 156013 test begin: paddle.nn.functional.grid_sample(Tensor([1, 4, 298, 364],"float32"), Tensor([1, 352, 407, 2],"float32"), mode="nearest", padding_mode="zeros", align_corners=False, )
[accuracy error] paddle.nn.functional.grid_sample(Tensor([1, 4, 298, 364],"float32"), Tensor([1, 352, 407, 2],"float32"), mode="nearest", padding_mode="zeros", align_corners=False, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 24 / 573056 (0.0%)
Greatest absolute difference: 0.7940096855163574 at index (0, 1, 54, 281) (up to 0.01 allowed)
Greatest relative difference: 30.14227294921875 at index (0, 3, 54, 281) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 4, 352, 407]), dtype=torch.float32)
tensor([[[[ 3.2462e-01, -3.6380e-01, -3.6848e-02,  ...,  6.3186e-02, -4.0543e-01,  1.5318e-01],
          [-1.7587e-01, -4.0583e-01, -2.4911e-01,  ..., -3.0388e-01,  4.4524e-01,  4.6016e-01],
          [-3.8947e-01, -4.1217e-02,  2.3227e-01,  ..., -2.9993e-01,  2.9936e-02,  2.2307e-01],
          ...,
          [-2.1020e-01, -6.1097e-02, -2.4870e-03,  ...,  3.5999e-01, -2.1434e-01,  2.3114e-01],
          [ 1.8941e-01, -1.9318e-01, -2.6040e-01,  ..., -2.8082e-01, -3.1549e-02,  2.7888e-01],
          [-4.2817e-01, -4.2552e-01,  2.9344e-01,  ..., -3.5236e-01, -3.7458e-01,  3.3316e-01]],

         [[-2.1569e-01, -2.9476e-01,  6.0393e-02,  ...,  2.1384e-01,  4.4529e-01,  6.3976e-02],
          [-2.0014e-01, -2.7552e-01, -7.5190e-02,  ...,  2.4938e-02, -4.9756e-01, -4.0678e-01],
          [ 3.5314e-01, -2.5684e-01, -3.8631e-01,  ..., -1.5991e-01, -1.6912e-01, -1.4982e-01],
          ...,
          [-1.7340e-01, -4.1307e-01, -2.7847e-01,  ..., -1.5830e-01, -4.4731e-01,  3.6823e-01],
          [-2.7979e-01, -2.7151e-01, -1.0061e-01,  ...,  4.8993e-01, -3.2299e-01, -7.4533e-02],
          [-2.7051e-01,  3.4453e-01,  3.4767e-01,  ..., -3.1814e-01, -3.1129e-02,  4.3068e-01]],

         [[ 1.9887e-01,  1.8879e-02,  3.3497e-01,  ..., -2.7990e-01,  4.1335e-01, -1.4647e-01],
          [-4.2610e-01,  3.3914e-01, -3.1654e-01,  ...,  4.8006e-01, -3.6912e-01, -2.3604e-01],
          [-2.6172e-01,  5.8839e-02, -3.0456e-01,  ...,  2.3608e-01, -3.6963e-01,  1.8240e-01],
          ...,
          [-3.9902e-01,  4.9048e-01,  9.4465e-02,  ..., -4.2318e-01, -3.2561e-01, -1.2298e-01],
          [-1.7207e-01, -4.5986e-01,  1.1180e-01,  ..., -5.0736e-02, -4.0266e-01,  1.8005e-02],
          [-2.9259e-01, -3.0897e-01,  1.4575e-01,  ..., -2.1220e-01,  2.8494e-01, -2.0406e-01]],

         [[ 2.4009e-01, -2.7842e-03,  1.5571e-01,  ..., -2.6466e-01, -3.7977e-01, -4.9689e-01],
          [ 4.9958e-01, -6.5036e-02,  2.9660e-02,  ..., -6.0208e-02,  1.4233e-01, -4.2971e-01],
          [ 3.5009e-02,  2.5389e-01,  4.4944e-01,  ..., -3.9510e-02, -2.7981e-01, -9.6061e-02],
          ...,
          [ 1.4983e-01, -4.3377e-01, -4.8779e-01,  ...,  2.2361e-04,  3.3784e-01,  2.9541e-01],
          [ 2.0299e-01,  8.6453e-02,  4.0580e-01,  ...,  1.8772e-01, -1.9894e-01, -9.5180e-02],
          [-3.5683e-01,  4.7303e-01,  8.3771e-02,  ..., -4.9882e-01,  2.4116e-01, -2.7714e-01]]]])
DESIRED: (shape=torch.Size([1, 4, 352, 407]), dtype=torch.float32)
tensor([[[[ 3.2462e-01, -3.6380e-01, -3.6848e-02,  ...,  6.3186e-02, -4.0543e-01,  1.5318e-01],
          [-1.7587e-01, -4.0583e-01, -2.4911e-01,  ..., -3.0388e-01,  4.4524e-01,  4.6016e-01],
          [-3.8947e-01, -4.1217e-02,  2.3227e-01,  ..., -2.9993e-01,  2.9936e-02,  2.2307e-01],
          ...,
          [-2.1020e-01, -6.1097e-02, -2.4870e-03,  ...,  3.5999e-01, -2.1434e-01,  2.3114e-01],
          [ 1.8941e-01, -1.9318e-01, -2.6040e-01,  ..., -2.8082e-01, -3.1549e-02,  2.7888e-01],
          [-4.2817e-01, -4.2552e-01,  2.9344e-01,  ..., -3.5236e-01, -3.7458e-01,  3.3316e-01]],

         [[-2.1569e-01, -2.9476e-01,  6.0393e-02,  ...,  2.1384e-01,  4.4529e-01,  6.3976e-02],
          [-2.0014e-01, -2.7552e-01, -7.5190e-02,  ...,  2.4938e-02, -4.9756e-01, -4.0678e-01],
          [ 3.5314e-01, -2.5684e-01, -3.8631e-01,  ..., -1.5991e-01, -1.6912e-01, -1.4982e-01],
          ...,
          [-1.7340e-01, -4.1307e-01, -2.7847e-01,  ..., -1.5830e-01, -4.4731e-01,  3.6823e-01],
          [-2.7979e-01, -2.7151e-01, -1.0061e-01,  ...,  4.8993e-01, -3.2299e-01, -7.4533e-02],
          [-2.7051e-01,  3.4453e-01,  3.4767e-01,  ..., -3.1814e-01, -3.1129e-02,  4.3068e-01]],

         [[ 1.9887e-01,  1.8879e-02,  3.3497e-01,  ..., -2.7990e-01,  4.1335e-01, -1.4647e-01],
          [-4.2610e-01,  3.3914e-01, -3.1654e-01,  ...,  4.8006e-01, -3.6912e-01, -2.3604e-01],
          [-2.6172e-01,  5.8839e-02, -3.0456e-01,  ...,  2.3608e-01, -3.6963e-01,  1.8240e-01],
          ...,
          [-3.9902e-01,  4.9048e-01,  9.4465e-02,  ..., -4.2318e-01, -3.2561e-01, -1.2298e-01],
          [-1.7207e-01, -4.5986e-01,  1.1180e-01,  ..., -5.0736e-02, -4.0266e-01,  1.8005e-02],
          [-2.9259e-01, -3.0897e-01,  1.4575e-01,  ..., -2.1220e-01,  2.8494e-01, -2.0406e-01]],

         [[ 2.4009e-01, -2.7842e-03,  1.5571e-01,  ..., -2.6466e-01, -3.7977e-01, -4.9689e-01],
          [ 4.9958e-01, -6.5036e-02,  2.9660e-02,  ..., -6.0208e-02,  1.4233e-01, -4.2971e-01],
          [ 3.5009e-02,  2.5389e-01,  4.4944e-01,  ..., -3.9510e-02, -2.7981e-01, -9.6061e-02],
          ...,
          [ 1.4983e-01, -4.3377e-01, -4.8779e-01,  ...,  2.2361e-04,  3.3784e-01,  2.9541e-01],
          [ 2.0299e-01,  8.6453e-02,  4.0580e-01,  ...,  1.8772e-01, -1.9894e-01, -9.5180e-02],
          [-3.5683e-01,  4.7303e-01,  8.3771e-02,  ..., -4.9882e-01,  2.4116e-01, -2.7714e-01]]]])

2025-06-10 00:13:31.715262 GPU 5 156012 test begin: paddle.nn.functional.grid_sample(Tensor([1, 4, 368, 416],"float32"), Tensor([1, 391, 436, 2],"float32"), mode="nearest", padding_mode="zeros", align_corners=False, )
[accuracy error] paddle.nn.functional.grid_sample(Tensor([1, 4, 368, 416],"float32"), Tensor([1, 391, 436, 2],"float32"), mode="nearest", padding_mode="zeros", align_corners=False, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 7 / 681904 (0.0%)
Greatest absolute difference: 0.6537615060806274 at index (0, 3, 168, 15) (up to 0.01 allowed)
Greatest relative difference: 72.41787719726562 at index (0, 3, 177, 272) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 4, 391, 436]), dtype=torch.float32)
tensor([[[[-0.1377,  0.1596,  0.0483,  ..., -0.3015, -0.2337, -0.1324],
          [-0.2107,  0.0782,  0.4627,  ..., -0.0490,  0.3115, -0.3960],
          [ 0.1457,  0.4698,  0.2393,  ...,  0.4779,  0.3550,  0.3911],
          ...,
          [-0.0110,  0.1772,  0.4567,  ..., -0.0966, -0.1352,  0.0550],
          [-0.1984, -0.4105, -0.0322,  ...,  0.2346, -0.4569, -0.3723],
          [ 0.2186, -0.4236,  0.1953,  ..., -0.2510,  0.4169,  0.1827]],

         [[ 0.0571, -0.0464,  0.2640,  ...,  0.2866,  0.0510,  0.3882],
          [-0.4797,  0.4615, -0.3633,  ..., -0.4369,  0.3665,  0.0049],
          [-0.4004, -0.3815,  0.0480,  ..., -0.0358, -0.0105,  0.1764],
          ...,
          [-0.4206, -0.4351, -0.4594,  ..., -0.1212, -0.3134, -0.0536],
          [ 0.1980,  0.4654,  0.4751,  ...,  0.0119,  0.1962, -0.0063],
          [-0.2178,  0.1125,  0.0823,  ...,  0.3301,  0.0818, -0.1789]],

         [[-0.3552, -0.4500,  0.3888,  ..., -0.2668, -0.0759, -0.4163],
          [ 0.0750, -0.2115, -0.2736,  ...,  0.3676,  0.1104, -0.3061],
          [ 0.4642, -0.2453, -0.1712,  ..., -0.3498, -0.1965,  0.1992],
          ...,
          [-0.4196,  0.1812, -0.1014,  ..., -0.2962,  0.3993, -0.3727],
          [ 0.2178,  0.2101,  0.2815,  ...,  0.2822,  0.4793,  0.0044],
          [ 0.4765,  0.1126,  0.4001,  ...,  0.3950,  0.3108, -0.0656]],

         [[-0.4713, -0.3259, -0.0964,  ..., -0.2827, -0.1083, -0.0621],
          [ 0.1607, -0.3331,  0.0732,  ...,  0.3496, -0.0429,  0.2006],
          [ 0.4052, -0.0522, -0.4068,  ..., -0.2772,  0.3773, -0.1876],
          ...,
          [-0.1669, -0.1962,  0.2887,  ..., -0.0627,  0.4904,  0.3560],
          [ 0.4312, -0.1699, -0.4443,  ...,  0.3881,  0.1833,  0.2984],
          [-0.0174, -0.3542,  0.4522,  ..., -0.3154,  0.2388, -0.4869]]]])
DESIRED: (shape=torch.Size([1, 4, 391, 436]), dtype=torch.float32)
tensor([[[[-0.1377,  0.1596,  0.0483,  ..., -0.3015, -0.2337, -0.1324],
          [-0.2107,  0.0782,  0.4627,  ..., -0.0490,  0.3115, -0.3960],
          [ 0.1457,  0.4698,  0.2393,  ...,  0.4779,  0.3550,  0.3911],
          ...,
          [-0.0110,  0.1772,  0.4567,  ..., -0.0966, -0.1352,  0.0550],
          [-0.1984, -0.4105, -0.0322,  ...,  0.2346, -0.4569, -0.3723],
          [ 0.2186, -0.4236,  0.1953,  ..., -0.2510,  0.4169,  0.1827]],

         [[ 0.0571, -0.0464,  0.2640,  ...,  0.2866,  0.0510,  0.3882],
          [-0.4797,  0.4615, -0.3633,  ..., -0.4369,  0.3665,  0.0049],
          [-0.4004, -0.3815,  0.0480,  ..., -0.0358, -0.0105,  0.1764],
          ...,
          [-0.4206, -0.4351, -0.4594,  ..., -0.1212, -0.3134, -0.0536],
          [ 0.1980,  0.4654,  0.4751,  ...,  0.0119,  0.1962, -0.0063],
          [-0.2178,  0.1125,  0.0823,  ...,  0.3301,  0.0818, -0.1789]],

         [[-0.3552, -0.4500,  0.3888,  ..., -0.2668, -0.0759, -0.4163],
          [ 0.0750, -0.2115, -0.2736,  ...,  0.3676,  0.1104, -0.3061],
          [ 0.4642, -0.2453, -0.1712,  ..., -0.3498, -0.1965,  0.1992],
          ...,
          [-0.4196,  0.1812, -0.1014,  ..., -0.2962,  0.3993, -0.3727],
          [ 0.2178,  0.2101,  0.2815,  ...,  0.2822,  0.4793,  0.0044],
          [ 0.4765,  0.1126,  0.4001,  ...,  0.3950,  0.3108, -0.0656]],

         [[-0.4713, -0.3259, -0.0964,  ..., -0.2827, -0.1083, -0.0621],
          [ 0.1607, -0.3331,  0.0732,  ...,  0.3496, -0.0429,  0.2006],
          [ 0.4052, -0.0522, -0.4068,  ..., -0.2772,  0.3773, -0.1876],
          ...,
          [-0.1669, -0.1962,  0.2887,  ..., -0.0627,  0.4904,  0.3560],
          [ 0.4312, -0.1699, -0.4443,  ...,  0.3881,  0.1833,  0.2984],
          [-0.0174, -0.3542,  0.4522,  ..., -0.3154,  0.2388, -0.4869]]]])

2025-06-10 00:13:31.730325 GPU 6 156013 test begin: paddle.nn.functional.grid_sample(Tensor([1, 4, 400, 300],"float32"), Tensor([1, 400, 300, 2],"float32"), mode="nearest", padding_mode="zeros", align_corners=False, )
[accuracy error] paddle.nn.functional.grid_sample(Tensor([1, 4, 400, 300],"float32"), Tensor([1, 400, 300, 2],"float32"), mode="nearest", padding_mode="zeros", align_corners=False, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 12 / 480000 (0.0%)
Greatest absolute difference: 0.7602975368499756 at index (0, 1, 379, 122) (up to 0.01 allowed)
Greatest relative difference: 2.5253348350524902 at index (0, 0, 140, 180) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 4, 400, 300]), dtype=torch.float32)
tensor([[[[-0.2622, -0.1084,  0.4704,  ...,  0.2658,  0.2027,  0.3757],
          [ 0.2840, -0.4934,  0.0450,  ...,  0.2777,  0.1098, -0.3440],
          [-0.2053, -0.1028,  0.4224,  ...,  0.0568, -0.1068, -0.1330],
          ...,
          [-0.2884, -0.4869, -0.0122,  ...,  0.1757, -0.0017, -0.1814],
          [ 0.3013,  0.0994,  0.1995,  ..., -0.0115,  0.3199, -0.1304],
          [-0.4741,  0.1084, -0.3009,  ...,  0.3092, -0.1995, -0.0394]],

         [[ 0.3530,  0.1343, -0.0897,  ...,  0.0782,  0.1969, -0.2129],
          [ 0.4112,  0.4977, -0.4428,  ...,  0.1333, -0.1903,  0.0986],
          [-0.4662,  0.1209, -0.2661,  ..., -0.3025,  0.0553, -0.0607],
          ...,
          [-0.3638,  0.0967,  0.4916,  ..., -0.3666, -0.2093,  0.1501],
          [-0.0228,  0.2368, -0.1068,  ...,  0.3491, -0.0276,  0.4236],
          [ 0.1501, -0.1373,  0.0355,  ..., -0.1582,  0.0524, -0.2421]],

         [[-0.3527,  0.4573,  0.3076,  ..., -0.1708,  0.1009,  0.3311],
          [ 0.3327,  0.3007,  0.3669,  ...,  0.4196,  0.0944,  0.1132],
          [-0.2679,  0.4774,  0.4840,  ..., -0.3189, -0.1592,  0.4589],
          ...,
          [-0.0783,  0.1037,  0.4494,  ..., -0.4894, -0.2073,  0.3673],
          [-0.4325,  0.3581, -0.0170,  ...,  0.0403,  0.3290, -0.3498],
          [ 0.3979, -0.3506,  0.1574,  ...,  0.3497,  0.3717,  0.2621]],

         [[ 0.1859,  0.3834, -0.1392,  ..., -0.0123, -0.4727, -0.1143],
          [-0.1449,  0.4622,  0.2659,  ..., -0.1101,  0.3250,  0.3571],
          [-0.0277,  0.3088, -0.1803,  ...,  0.0127,  0.1429, -0.4848],
          ...,
          [ 0.2546,  0.2353, -0.1010,  ..., -0.1335, -0.0457, -0.4416],
          [ 0.1987, -0.1469, -0.0744,  ...,  0.3578, -0.4662,  0.3839],
          [-0.1524,  0.1322,  0.0941,  ...,  0.0968, -0.1878,  0.1445]]]])
DESIRED: (shape=torch.Size([1, 4, 400, 300]), dtype=torch.float32)
tensor([[[[-0.2622, -0.1084,  0.4704,  ...,  0.2658,  0.2027,  0.3757],
          [ 0.2840, -0.4934,  0.0450,  ...,  0.2777,  0.1098, -0.3440],
          [-0.2053, -0.1028,  0.4224,  ...,  0.0568, -0.1068, -0.1330],
          ...,
          [-0.2884, -0.4869, -0.0122,  ...,  0.1757, -0.0017, -0.1814],
          [ 0.3013,  0.0994,  0.1995,  ..., -0.0115,  0.3199, -0.1304],
          [-0.4741,  0.1084, -0.3009,  ...,  0.3092, -0.1995, -0.0394]],

         [[ 0.3530,  0.1343, -0.0897,  ...,  0.0782,  0.1969, -0.2129],
          [ 0.4112,  0.4977, -0.4428,  ...,  0.1333, -0.1903,  0.0986],
          [-0.4662,  0.1209, -0.2661,  ..., -0.3025,  0.0553, -0.0607],
          ...,
          [-0.3638,  0.0967,  0.4916,  ..., -0.3666, -0.2093,  0.1501],
          [-0.0228,  0.2368, -0.1068,  ...,  0.3491, -0.0276,  0.4236],
          [ 0.1501, -0.1373,  0.0355,  ..., -0.1582,  0.0524, -0.2421]],

         [[-0.3527,  0.4573,  0.3076,  ..., -0.1708,  0.1009,  0.3311],
          [ 0.3327,  0.3007,  0.3669,  ...,  0.4196,  0.0944,  0.1132],
          [-0.2679,  0.4774,  0.4840,  ..., -0.3189, -0.1592,  0.4589],
          ...,
          [-0.0783,  0.1037,  0.4494,  ..., -0.4894, -0.2073,  0.3673],
          [-0.4325,  0.3581, -0.0170,  ...,  0.0403,  0.3290, -0.3498],
          [ 0.3979, -0.3506,  0.1574,  ...,  0.3497,  0.3717,  0.2621]],

         [[ 0.1859,  0.3834, -0.1392,  ..., -0.0123, -0.4727, -0.1143],
          [-0.1449,  0.4622,  0.2659,  ..., -0.1101,  0.3250,  0.3571],
          [-0.0277,  0.3088, -0.1803,  ...,  0.0127,  0.1429, -0.4848],
          ...,
          [ 0.2546,  0.2353, -0.1010,  ..., -0.1335, -0.0457, -0.4416],
          [ 0.1987, -0.1469, -0.0744,  ...,  0.3578, -0.4662,  0.3839],
          [-0.1524,  0.1322,  0.0941,  ...,  0.0968, -0.1878,  0.1445]]]])

2025-06-10 00:13:31.930251 GPU 5 156012 test begin: paddle.nn.functional.grid_sample(Tensor([1, 4, 400, 300],"float32"), Tensor([1, 430, 340, 2],"float32"), mode="nearest", padding_mode="zeros", align_corners=False, )
[accuracy error] paddle.nn.functional.grid_sample(Tensor([1, 4, 400, 300],"float32"), Tensor([1, 430, 340, 2],"float32"), mode="nearest", padding_mode="zeros", align_corners=False, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 12 / 584800 (0.0%)
Greatest absolute difference: 0.8628708720207214 at index (0, 2, 251, 93) (up to 0.01 allowed)
Greatest relative difference: 3.6202001571655273 at index (0, 2, 401, 156) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 4, 430, 340]), dtype=torch.float32)
tensor([[[[ 0.3970,  0.1679,  0.3706,  ...,  0.0952, -0.3126, -0.1207],
          [ 0.4577,  0.0748,  0.3492,  ..., -0.4193,  0.2998,  0.0012],
          [ 0.1281,  0.0500,  0.1296,  ..., -0.0859, -0.1004, -0.0201],
          ...,
          [ 0.4316,  0.3016, -0.2343,  ...,  0.3303, -0.3730,  0.4921],
          [ 0.2523, -0.0796, -0.2356,  ..., -0.4782, -0.2056,  0.1432],
          [-0.4761, -0.1479, -0.2120,  ..., -0.2370,  0.2873, -0.3273]],

         [[ 0.3253, -0.0554,  0.3001,  ..., -0.2312, -0.0741,  0.2182],
          [ 0.1072, -0.0545, -0.0358,  ..., -0.2371, -0.1667,  0.2535],
          [ 0.2736,  0.4469, -0.0846,  ...,  0.0025, -0.4790, -0.2150],
          ...,
          [-0.3360, -0.1161, -0.2601,  ...,  0.4045,  0.1471, -0.4606],
          [ 0.4001, -0.3312,  0.2159,  ..., -0.4964, -0.2287,  0.4632],
          [-0.4737, -0.3013,  0.0929,  ...,  0.0229,  0.0331,  0.3119]],

         [[ 0.2823,  0.0117, -0.4960,  ..., -0.0792, -0.1957,  0.4204],
          [ 0.4741,  0.1334, -0.0492,  ...,  0.2357, -0.3008,  0.3256],
          [ 0.0631,  0.1337, -0.4613,  ...,  0.3074, -0.4812, -0.3641],
          ...,
          [ 0.1026,  0.0742, -0.2310,  ..., -0.1400, -0.2183, -0.2762],
          [-0.4136, -0.4001,  0.0165,  ..., -0.0257,  0.4249, -0.4744],
          [-0.3383,  0.3237, -0.1418,  ..., -0.1049,  0.1796, -0.4489]],

         [[-0.3289, -0.4119,  0.4996,  ..., -0.2032,  0.3428, -0.2518],
          [ 0.1504, -0.0698,  0.4716,  ..., -0.1609, -0.0562,  0.1167],
          [-0.0767, -0.4006, -0.1882,  ..., -0.0130,  0.0833,  0.2192],
          ...,
          [-0.3269, -0.2385,  0.3490,  ...,  0.2950,  0.3063, -0.4856],
          [-0.2774,  0.0788,  0.0324,  ..., -0.4462, -0.2298,  0.0912],
          [-0.3363, -0.1152, -0.4999,  ..., -0.0195, -0.3219,  0.3633]]]])
DESIRED: (shape=torch.Size([1, 4, 430, 340]), dtype=torch.float32)
tensor([[[[ 0.3970,  0.1679,  0.3706,  ...,  0.0952, -0.3126, -0.1207],
          [ 0.4577,  0.0748,  0.3492,  ..., -0.4193,  0.2998,  0.0012],
          [ 0.1281,  0.0500,  0.1296,  ..., -0.0859, -0.1004, -0.0201],
          ...,
          [ 0.4316,  0.3016, -0.2343,  ...,  0.3303, -0.3730,  0.4921],
          [ 0.2523, -0.0796, -0.2356,  ..., -0.4782, -0.2056,  0.1432],
          [-0.4761, -0.1479, -0.2120,  ..., -0.2370,  0.2873, -0.3273]],

         [[ 0.3253, -0.0554,  0.3001,  ..., -0.2312, -0.0741,  0.2182],
          [ 0.1072, -0.0545, -0.0358,  ..., -0.2371, -0.1667,  0.2535],
          [ 0.2736,  0.4469, -0.0846,  ...,  0.0025, -0.4790, -0.2150],
          ...,
          [-0.3360, -0.1161, -0.2601,  ...,  0.4045,  0.1471, -0.4606],
          [ 0.4001, -0.3312,  0.2159,  ..., -0.4964, -0.2287,  0.4632],
          [-0.4737, -0.3013,  0.0929,  ...,  0.0229,  0.0331,  0.3119]],

         [[ 0.2823,  0.0117, -0.4960,  ..., -0.0792, -0.1957,  0.4204],
          [ 0.4741,  0.1334, -0.0492,  ...,  0.2357, -0.3008,  0.3256],
          [ 0.0631,  0.1337, -0.4613,  ...,  0.3074, -0.4812, -0.3641],
          ...,
          [ 0.1026,  0.0742, -0.2310,  ..., -0.1400, -0.2183, -0.2762],
          [-0.4136, -0.4001,  0.0165,  ..., -0.0257,  0.4249, -0.4744],
          [-0.3383,  0.3237, -0.1418,  ..., -0.1049,  0.1796, -0.4489]],

         [[-0.3289, -0.4119,  0.4996,  ..., -0.2032,  0.3428, -0.2518],
          [ 0.1504, -0.0698,  0.4716,  ..., -0.1609, -0.0562,  0.1167],
          [-0.0767, -0.4006, -0.1882,  ..., -0.0130,  0.0833,  0.2192],
          ...,
          [-0.3269, -0.2385,  0.3490,  ...,  0.2950,  0.3063, -0.4856],
          [-0.2774,  0.0788,  0.0324,  ..., -0.4462, -0.2298,  0.0912],
          [-0.3363, -0.1152, -0.4999,  ..., -0.0195, -0.3219,  0.3633]]]])

2025-06-10 00:13:31.941678 GPU 6 156013 test begin: paddle.nn.functional.grid_sample(Tensor([1, 4, 400, 300],"float32"), Tensor([1, 434, 346, 2],"float32"), mode="nearest", padding_mode="zeros", align_corners=False, )
[accuracy error] paddle.nn.functional.grid_sample(Tensor([1, 4, 400, 300],"float32"), Tensor([1, 434, 346, 2],"float32"), mode="nearest", padding_mode="zeros", align_corners=False, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 8 / 600656 (0.0%)
Greatest absolute difference: 0.558783233165741 at index (0, 2, 44, 38) (up to 0.01 allowed)
Greatest relative difference: 4.536255836486816 at index (0, 2, 44, 38) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 4, 434, 346]), dtype=torch.float32)
tensor([[[[-0.3278,  0.2990, -0.4051,  ..., -0.1381,  0.0242, -0.0401],
          [-0.2028, -0.0322,  0.0671,  ...,  0.2293,  0.4761,  0.2928],
          [-0.0024, -0.0168, -0.4726,  ..., -0.2892, -0.2942,  0.3358],
          ...,
          [-0.0367,  0.4690,  0.1633,  ..., -0.2769,  0.3756,  0.2945],
          [-0.4228,  0.2770, -0.2347,  ..., -0.4950, -0.0730, -0.1213],
          [ 0.0502,  0.0245, -0.2312,  ..., -0.3951, -0.1088, -0.4189]],

         [[ 0.1779, -0.4997,  0.4935,  ..., -0.2428,  0.4428, -0.4503],
          [-0.1204,  0.0072,  0.3435,  ..., -0.1876, -0.3251,  0.3253],
          [ 0.1561, -0.3853, -0.0915,  ..., -0.3088,  0.3120,  0.1129],
          ...,
          [-0.0791, -0.2336,  0.1018,  ...,  0.0862, -0.1384,  0.4056],
          [ 0.0622,  0.0521,  0.2247,  ...,  0.3412,  0.3825, -0.2488],
          [ 0.0067,  0.0235, -0.2192,  ..., -0.0632,  0.4243,  0.0880]],

         [[-0.2804, -0.1813, -0.2342,  ...,  0.2291, -0.3968, -0.2263],
          [-0.2555,  0.0972, -0.3654,  ..., -0.1012, -0.3683,  0.1900],
          [ 0.1652, -0.2627, -0.1670,  ..., -0.3821, -0.4484, -0.4257],
          ...,
          [ 0.4792,  0.2318,  0.0940,  ...,  0.3593,  0.1468,  0.1662],
          [-0.4361, -0.0615,  0.3253,  ..., -0.2104, -0.2193,  0.3822],
          [ 0.0373,  0.2506,  0.2974,  ...,  0.2450, -0.1579,  0.3383]],

         [[-0.0782, -0.2188,  0.0500,  ...,  0.3163,  0.2074, -0.3369],
          [-0.1819, -0.4023,  0.3475,  ...,  0.0230,  0.3767,  0.0431],
          [ 0.3507,  0.1226, -0.0087,  ..., -0.2494, -0.1914, -0.1285],
          ...,
          [ 0.0982, -0.2601,  0.1138,  ..., -0.1117,  0.1919, -0.3574],
          [-0.1309, -0.3741,  0.0692,  ..., -0.3062, -0.4834,  0.3039],
          [-0.0398, -0.4491,  0.1498,  ...,  0.3353, -0.0814, -0.0572]]]])
DESIRED: (shape=torch.Size([1, 4, 434, 346]), dtype=torch.float32)
tensor([[[[-0.3278,  0.2990, -0.4051,  ..., -0.1381,  0.0242, -0.0401],
          [-0.2028, -0.0322,  0.0671,  ...,  0.2293,  0.4761,  0.2928],
          [-0.0024, -0.0168, -0.4726,  ..., -0.2892, -0.2942,  0.3358],
          ...,
          [-0.0367,  0.4690,  0.1633,  ..., -0.2769,  0.3756,  0.2945],
          [-0.4228,  0.2770, -0.2347,  ..., -0.4950, -0.0730, -0.1213],
          [ 0.0502,  0.0245, -0.2312,  ..., -0.3951, -0.1088, -0.4189]],

         [[ 0.1779, -0.4997,  0.4935,  ..., -0.2428,  0.4428, -0.4503],
          [-0.1204,  0.0072,  0.3435,  ..., -0.1876, -0.3251,  0.3253],
          [ 0.1561, -0.3853, -0.0915,  ..., -0.3088,  0.3120,  0.1129],
          ...,
          [-0.0791, -0.2336,  0.1018,  ...,  0.0862, -0.1384,  0.4056],
          [ 0.0622,  0.0521,  0.2247,  ...,  0.3412,  0.3825, -0.2488],
          [ 0.0067,  0.0235, -0.2192,  ..., -0.0632,  0.4243,  0.0880]],

         [[-0.2804, -0.1813, -0.2342,  ...,  0.2291, -0.3968, -0.2263],
          [-0.2555,  0.0972, -0.3654,  ..., -0.1012, -0.3683,  0.1900],
          [ 0.1652, -0.2627, -0.1670,  ..., -0.3821, -0.4484, -0.4257],
          ...,
          [ 0.4792,  0.2318,  0.0940,  ...,  0.3593,  0.1468,  0.1662],
          [-0.4361, -0.0615,  0.3253,  ..., -0.2104, -0.2193,  0.3822],
          [ 0.0373,  0.2506,  0.2974,  ...,  0.2450, -0.1579,  0.3383]],

         [[-0.0782, -0.2188,  0.0500,  ...,  0.3163,  0.2074, -0.3369],
          [-0.1819, -0.4023,  0.3475,  ...,  0.0230,  0.3767,  0.0431],
          [ 0.3507,  0.1226, -0.0087,  ..., -0.2494, -0.1914, -0.1285],
          ...,
          [ 0.0982, -0.2601,  0.1138,  ..., -0.1117,  0.1919, -0.3574],
          [-0.1309, -0.3741,  0.0692,  ..., -0.3062, -0.4834,  0.3039],
          [-0.0398, -0.4491,  0.1498,  ...,  0.3353, -0.0814, -0.0572]]]])

2025-06-10 00:13:32.142297 GPU 6 156013 test begin: paddle.nn.functional.grid_sample(Tensor([1, 4, 430, 340],"float32"), Tensor([1, 477, 401, 2],"float32"), mode="nearest", padding_mode="zeros", align_corners=False, )
[accuracy error] paddle.nn.functional.grid_sample(Tensor([1, 4, 430, 340],"float32"), Tensor([1, 477, 401, 2],"float32"), mode="nearest", padding_mode="zeros", align_corners=False, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 4 / 765108 (0.0%)
Greatest absolute difference: 0.5753676891326904 at index (0, 1, 391, 258) (up to 0.01 allowed)
Greatest relative difference: 4.880588054656982 at index (0, 1, 391, 258) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 4, 477, 401]), dtype=torch.float32)
tensor([[[[-0.1892, -0.2679, -0.3918,  ..., -0.3103, -0.3588,  0.2019],
          [-0.4728,  0.4743, -0.1537,  ..., -0.2452,  0.3015, -0.1785],
          [ 0.2579, -0.1203, -0.2377,  ..., -0.1857,  0.0024,  0.0265],
          ...,
          [ 0.3231,  0.0782, -0.0727,  ...,  0.1085,  0.4543, -0.0347],
          [-0.0993,  0.0042,  0.2631,  ...,  0.3361, -0.2729,  0.0880],
          [-0.3471, -0.0062,  0.2912,  ...,  0.4762, -0.3481,  0.2354]],

         [[-0.3392,  0.4368,  0.2204,  ...,  0.3746,  0.3757, -0.4979],
          [ 0.2537, -0.1171,  0.2663,  ..., -0.2503,  0.4467, -0.2295],
          [ 0.3536, -0.3568, -0.0754,  ...,  0.4610,  0.1847, -0.3614],
          ...,
          [-0.1820,  0.4974, -0.2421,  ..., -0.2166,  0.4381, -0.3173],
          [ 0.4255,  0.1385,  0.0743,  ...,  0.1247,  0.3514, -0.2593],
          [ 0.4758,  0.3066, -0.1671,  ..., -0.0961,  0.0248,  0.4263]],

         [[ 0.3254, -0.1195, -0.3759,  ...,  0.0189,  0.2634,  0.1814],
          [-0.0058, -0.3829, -0.2519,  ..., -0.4606, -0.3752,  0.1253],
          [-0.0823,  0.0166,  0.0666,  ..., -0.2969,  0.2500, -0.0178],
          ...,
          [ 0.2577, -0.1852,  0.2300,  ...,  0.0665,  0.2763,  0.3443],
          [-0.2085, -0.1999, -0.1769,  ..., -0.3455,  0.3698,  0.4972],
          [-0.4994, -0.4432,  0.2012,  ..., -0.4432,  0.2335, -0.1567]],

         [[ 0.2718, -0.0817,  0.4217,  ...,  0.4608, -0.2103,  0.3080],
          [ 0.0655, -0.0459,  0.0770,  ..., -0.1838,  0.3136, -0.2996],
          [-0.4390, -0.1953,  0.4575,  ...,  0.1561,  0.3679,  0.1282],
          ...,
          [ 0.2230, -0.2800, -0.0831,  ..., -0.1366,  0.1278,  0.2822],
          [ 0.4195,  0.1675,  0.3507,  ...,  0.2421,  0.3621,  0.1896],
          [-0.2454, -0.3826,  0.1805,  ...,  0.3276,  0.4913, -0.3807]]]])
DESIRED: (shape=torch.Size([1, 4, 477, 401]), dtype=torch.float32)
tensor([[[[-0.1892, -0.2679, -0.3918,  ..., -0.3103, -0.3588,  0.2019],
          [-0.4728,  0.4743, -0.1537,  ..., -0.2452,  0.3015, -0.1785],
          [ 0.2579, -0.1203, -0.2377,  ..., -0.1857,  0.0024,  0.0265],
          ...,
          [ 0.3231,  0.0782, -0.0727,  ...,  0.1085,  0.4543, -0.0347],
          [-0.0993,  0.0042,  0.2631,  ...,  0.3361, -0.2729,  0.0880],
          [-0.3471, -0.0062,  0.2912,  ...,  0.4762, -0.3481,  0.2354]],

         [[-0.3392,  0.4368,  0.2204,  ...,  0.3746,  0.3757, -0.4979],
          [ 0.2537, -0.1171,  0.2663,  ..., -0.2503,  0.4467, -0.2295],
          [ 0.3536, -0.3568, -0.0754,  ...,  0.4610,  0.1847, -0.3614],
          ...,
          [-0.1820,  0.4974, -0.2421,  ..., -0.2166,  0.4381, -0.3173],
          [ 0.4255,  0.1385,  0.0743,  ...,  0.1247,  0.3514, -0.2593],
          [ 0.4758,  0.3066, -0.1671,  ..., -0.0961,  0.0248,  0.4263]],

         [[ 0.3254, -0.1195, -0.3759,  ...,  0.0189,  0.2634,  0.1814],
          [-0.0058, -0.3829, -0.2519,  ..., -0.4606, -0.3752,  0.1253],
          [-0.0823,  0.0166,  0.0666,  ..., -0.2969,  0.2500, -0.0178],
          ...,
          [ 0.2577, -0.1852,  0.2300,  ...,  0.0665,  0.2763,  0.3443],
          [-0.2085, -0.1999, -0.1769,  ..., -0.3455,  0.3698,  0.4972],
          [-0.4994, -0.4432,  0.2012,  ..., -0.4432,  0.2335, -0.1567]],

         [[ 0.2718, -0.0817,  0.4217,  ...,  0.4608, -0.2103,  0.3080],
          [ 0.0655, -0.0459,  0.0770,  ..., -0.1838,  0.3136, -0.2996],
          [-0.4390, -0.1953,  0.4575,  ...,  0.1561,  0.3679,  0.1282],
          ...,
          [ 0.2230, -0.2800, -0.0831,  ..., -0.1366,  0.1278,  0.2822],
          [ 0.4195,  0.1675,  0.3507,  ...,  0.2421,  0.3621,  0.1896],
          [-0.2454, -0.3826,  0.1805,  ...,  0.3276,  0.4913, -0.3807]]]])

2025-06-10 00:13:32.146462 GPU 5 156018 test begin: paddle.nn.functional.grid_sample(Tensor([1, 4, 434, 346],"float32"), Tensor([1, 466, 386, 2],"float32"), mode="nearest", padding_mode="zeros", align_corners=False, )
[accuracy error] paddle.nn.functional.grid_sample(Tensor([1, 4, 434, 346],"float32"), Tensor([1, 466, 386, 2],"float32"), mode="nearest", padding_mode="zeros", align_corners=False, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 19 / 719504 (0.0%)
Greatest absolute difference: 0.7434985637664795 at index (0, 0, 438, 265) (up to 0.01 allowed)
Greatest relative difference: 48.360477447509766 at index (0, 3, 201, 42) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 4, 466, 386]), dtype=torch.float32)
tensor([[[[ 0.0123,  0.0328, -0.4175,  ...,  0.2980, -0.4180,  0.0351],
          [-0.0738, -0.2266, -0.2440,  ..., -0.1081, -0.0755,  0.1339],
          [-0.2797, -0.2225,  0.1832,  ..., -0.4274,  0.1112, -0.3040],
          ...,
          [-0.3943,  0.4544,  0.0668,  ...,  0.1516, -0.1099, -0.0788],
          [-0.2938, -0.3747, -0.1711,  ...,  0.1384, -0.0786, -0.0290],
          [ 0.0817,  0.0862, -0.3268,  ...,  0.3582,  0.0220, -0.0461]],

         [[ 0.1482,  0.1617,  0.4831,  ..., -0.4824, -0.0808,  0.3496],
          [-0.0058,  0.1101, -0.1236,  ...,  0.1076, -0.2518, -0.0342],
          [-0.3190,  0.3698,  0.4713,  ..., -0.4055,  0.0133,  0.2697],
          ...,
          [-0.2294, -0.1684,  0.1340,  ..., -0.4408, -0.0282, -0.4219],
          [ 0.1423, -0.0990,  0.0382,  ...,  0.2889,  0.0041,  0.2046],
          [ 0.4715,  0.1147,  0.1095,  ...,  0.4098, -0.2866,  0.2346]],

         [[ 0.4309, -0.2429, -0.1368,  ..., -0.4611, -0.2261,  0.0878],
          [ 0.0614, -0.1221,  0.0854,  ..., -0.3140,  0.3263, -0.1626],
          [ 0.0815,  0.3344,  0.1358,  ...,  0.2249, -0.3255, -0.2161],
          ...,
          [-0.0497,  0.0581,  0.2849,  ...,  0.4765,  0.1478,  0.1540],
          [-0.4655,  0.1915,  0.2021,  ...,  0.2408, -0.2403,  0.2102],
          [-0.4576, -0.3080,  0.3642,  ...,  0.4584, -0.1519, -0.0182]],

         [[-0.4115, -0.3510, -0.4015,  ..., -0.1379, -0.3876,  0.0292],
          [ 0.3695,  0.4451,  0.3967,  ..., -0.1776,  0.1361, -0.4811],
          [ 0.1178,  0.2575, -0.2250,  ...,  0.0011,  0.1591, -0.4452],
          ...,
          [ 0.2612, -0.2282,  0.3192,  ...,  0.3556,  0.0144,  0.1518],
          [ 0.3049, -0.0250, -0.0217,  ..., -0.2743, -0.3110,  0.2269],
          [-0.1439,  0.1963, -0.3766,  ..., -0.1515, -0.2863, -0.3781]]]])
DESIRED: (shape=torch.Size([1, 4, 466, 386]), dtype=torch.float32)
tensor([[[[ 0.0123,  0.0328, -0.4175,  ...,  0.2980, -0.4180,  0.0351],
          [-0.0738, -0.2266, -0.2440,  ..., -0.1081, -0.0755,  0.1339],
          [-0.2797, -0.2225,  0.1832,  ..., -0.4274,  0.1112, -0.3040],
          ...,
          [-0.3943,  0.4544,  0.0668,  ...,  0.1516, -0.1099, -0.0788],
          [-0.2938, -0.3747, -0.1711,  ...,  0.1384, -0.0786, -0.0290],
          [ 0.0817,  0.0862, -0.3268,  ...,  0.3582,  0.0220, -0.0461]],

         [[ 0.1482,  0.1617,  0.4831,  ..., -0.4824, -0.0808,  0.3496],
          [-0.0058,  0.1101, -0.1236,  ...,  0.1076, -0.2518, -0.0342],
          [-0.3190,  0.3698,  0.4713,  ..., -0.4055,  0.0133,  0.2697],
          ...,
          [-0.2294, -0.1684,  0.1340,  ..., -0.4408, -0.0282, -0.4219],
          [ 0.1423, -0.0990,  0.0382,  ...,  0.2889,  0.0041,  0.2046],
          [ 0.4715,  0.1147,  0.1095,  ...,  0.4098, -0.2866,  0.2346]],

         [[ 0.4309, -0.2429, -0.1368,  ..., -0.4611, -0.2261,  0.0878],
          [ 0.0614, -0.1221,  0.0854,  ..., -0.3140,  0.3263, -0.1626],
          [ 0.0815,  0.3344,  0.1358,  ...,  0.2249, -0.3255, -0.2161],
          ...,
          [-0.0497,  0.0581,  0.2849,  ...,  0.4765,  0.1478,  0.1540],
          [-0.4655,  0.1915,  0.2021,  ...,  0.2408, -0.2403,  0.2102],
          [-0.4576, -0.3080,  0.3642,  ...,  0.4584, -0.1519, -0.0182]],

         [[-0.4115, -0.3510, -0.4015,  ..., -0.1379, -0.3876,  0.0292],
          [ 0.3695,  0.4451,  0.3967,  ..., -0.1776,  0.1361, -0.4811],
          [ 0.1178,  0.2575, -0.2250,  ...,  0.0011,  0.1591, -0.4452],
          ...,
          [ 0.2612, -0.2282,  0.3192,  ...,  0.3556,  0.0144,  0.1518],
          [ 0.3049, -0.0250, -0.0217,  ..., -0.2743, -0.3110,  0.2269],
          [-0.1439,  0.1963, -0.3766,  ..., -0.1515, -0.2863, -0.3781]]]])

2025-06-10 00:13:32.198012 GPU 4 157147 test begin: paddle.nn.functional.interpolate(Tensor([1, 2, 128, 128],"float16"), list[512,512,], mode="bilinear", align_corners=False, data_format="NCHW", )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([1, 2, 128, 128],"float16"), list[512,512,], mode="bilinear", align_corners=False, data_format="NCHW", ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 84 / 32768 (0.3%)
Greatest absolute difference: 0.04296875 at index (0, 1, 105, 47) (up to 0.01 allowed)
Greatest relative difference: 0.225830078125 at index (0, 1, 23, 115) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([1, 2, 128, 128]), dtype=torch.float16)
tensor([[[[-0.3154, -1.3145, -0.4922,  ...,  0.2139,  0.4055,  0.4492],
          [ 0.2954, -1.7627,  0.2649,  ..., -0.2563,  0.5039,  0.6079],
          [ 0.8423, -0.3440,  1.2109,  ..., -0.3430, -0.9678, -0.0536],
          ...,
          [-0.1376,  0.6670, -1.0156,  ...,  0.0703, -0.5459, -0.0829],
          [-0.2394,  0.3123, -0.3181,  ...,  1.6562,  0.7305,  0.0812],
          [-0.1169,  0.1880,  0.4678,  ...,  1.7383,  0.9111,  0.3369]],

         [[-0.8677, -0.3296, -1.6904,  ..., -0.6733, -0.0425,  1.0879],
          [-0.2571, -0.5229,  0.0709,  ..., -0.0477,  0.8115, -0.4570],
          [ 1.3145,  1.6260,  0.4438,  ..., -0.9644, -0.1476,  0.1196],
          ...,
          [ 0.7080,  0.0524,  0.9722,  ...,  0.2742, -1.0273,  0.3225],
          [-0.2998, -0.2698,  0.6528,  ...,  0.6528,  0.0316,  0.1272],
          [-0.6089, -0.5000,  1.0615,  ...,  0.1080, -0.1127, -0.4507]]]], dtype=torch.float16)
DESIRED: (shape=torch.Size([1, 2, 128, 128]), dtype=torch.float16)
tensor([[[[-0.3186, -1.3301, -0.5005,  ...,  0.2137,  0.4070,  0.4478],
          [ 0.2974, -1.7832,  0.2646,  ..., -0.2593,  0.5098,  0.6196],
          [ 0.8462, -0.3501,  1.2295,  ..., -0.3464, -0.9746, -0.0572],
          ...,
          [-0.1393,  0.6787, -1.0273,  ...,  0.0714, -0.5508, -0.0809],
          [-0.2388,  0.3145, -0.3235,  ...,  1.6689,  0.7373,  0.0786],
          [-0.1169,  0.1942,  0.4805,  ...,  1.7578,  0.9175,  0.3428]],

         [[-0.8706, -0.3306, -1.7070,  ..., -0.6851, -0.0426,  1.1006],
          [-0.2629, -0.5376,  0.0681,  ..., -0.0455,  0.8188, -0.4614],
          [ 1.3223,  1.6465,  0.4558,  ..., -0.9834, -0.1476,  0.1238],
          ...,
          [ 0.7134,  0.0528,  0.9795,  ...,  0.2764, -1.0420,  0.3269],
          [-0.3025, -0.2715,  0.6621,  ...,  0.6572,  0.0332,  0.1283],
          [-0.6069, -0.5049,  1.0693,  ...,  0.1155, -0.1128, -0.4502]]]], dtype=torch.float16)

2025-06-10 00:13:32.237356 GPU 6 156010 test begin: paddle.nn.functional.interpolate(Tensor([2, 2, 128, 128],"float16"), list[512,512,], mode="bilinear", align_corners=False, data_format="NCHW", )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([2, 2, 128, 128],"float16"), list[512,512,], mode="bilinear", align_corners=False, data_format="NCHW", ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 170 / 65536 (0.3%)
Greatest absolute difference: 0.046875 at index (1, 0, 36, 80) (up to 0.01 allowed)
Greatest relative difference: 1.8154296875 at index (1, 1, 127, 18) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2, 2, 128, 128]), dtype=torch.float16)
tensor([[[[ 0.5815, -1.1514,  0.3506,  ...,  1.3467,  1.6211, -0.8579],
          [-0.5713, -0.1740, -0.9321,  ...,  0.4504, -0.0764, -0.2559],
          [-0.6133,  0.6982, -0.2461,  ...,  0.8135,  0.6611,  1.2227],
          ...,
          [ 0.6812, -0.0317,  0.1990,  ...,  0.4558, -1.7314, -0.6885],
          [ 0.6606, -0.7334, -0.2144,  ...,  0.0337, -0.4470,  0.9375],
          [ 0.0536, -0.4036, -1.4482,  ..., -1.4697,  0.1628,  1.1035]],

         [[-0.4141,  0.7671,  0.4221,  ..., -0.4016, -0.6099,  0.1473],
          [ 1.1631,  0.1235,  0.1383,  ...,  0.4026, -0.2969, -0.2610],
          [-1.1230, -0.4553,  0.1804,  ..., -0.0880, -0.5151,  0.2239],
          ...,
          [ 0.2832,  0.4937,  0.7554,  ..., -0.4512, -0.7744,  0.5439],
          [ 0.3335,  0.0560, -0.0077,  ...,  0.9531, -0.4290,  1.0498],
          [-0.7324, -0.5190,  0.3215,  ...,  0.3225, -0.7314,  1.8613]]],


        [[[ 0.1127, -0.3135, -0.3701,  ..., -0.0763,  0.7817,  0.2456],
          [ 0.1639, -0.0493, -0.5557,  ..., -0.0637, -0.6558, -0.3838],
          [-0.2832,  0.4412, -1.2031,  ...,  0.0765, -0.8140, -1.3125],
          ...,
          [ 0.5112,  0.1943, -1.2754,  ..., -0.9375, -0.3025,  0.1139],
          [-0.1564, -1.3350, -0.3611,  ..., -1.1162,  0.6787,  1.5469],
          [-0.5596, -0.7139, -1.3496,  ..., -1.0820,  0.8350,  1.4668]],

         [[-0.2396,  0.7725, -0.8154,  ..., -0.4658,  1.8447,  0.1050],
          [ 0.1748, -0.2393, -0.5293,  ...,  0.9053,  0.1769,  0.9307],
          [-1.0176,  0.4832,  0.4668,  ...,  0.5093,  0.2189,  0.3667],
          ...,
          [-0.2023,  0.2727,  0.3093,  ...,  0.0675, -1.1699,  0.2678],
          [ 0.7124, -0.2991,  0.4043,  ..., -0.0550, -0.7715, -0.9502],
          [ 0.3196, -1.8711,  0.2881,  ...,  0.9263,  0.5474, -0.0206]]]], dtype=torch.float16)
DESIRED: (shape=torch.Size([2, 2, 128, 128]), dtype=torch.float16)
tensor([[[[ 0.5894, -1.1641,  0.3550,  ...,  1.3682,  1.6387, -0.8638],
          [-0.5757, -0.1761, -0.9424,  ...,  0.4536, -0.0740, -0.2627],
          [-0.6177,  0.7026, -0.2471,  ...,  0.8252,  0.6680,  1.2373],
          ...,
          [ 0.6870, -0.0312,  0.2002,  ...,  0.4570, -1.7461, -0.6968],
          [ 0.6641, -0.7417, -0.2162,  ...,  0.0387, -0.4575,  0.9424],
          [ 0.0578, -0.4045, -1.4619,  ..., -1.4805,  0.1721,  1.1094]],

         [[-0.4180,  0.7778,  0.4250,  ..., -0.4053, -0.6177,  0.1519],
          [ 1.1748,  0.1276,  0.1395,  ...,  0.4062, -0.2993, -0.2686],
          [-1.1357, -0.4590,  0.1792,  ..., -0.0928, -0.5186,  0.2284],
          ...,
          [ 0.2847,  0.4978,  0.7632,  ..., -0.4590, -0.7817,  0.5542],
          [ 0.3381,  0.0586, -0.0068,  ...,  0.9653, -0.4321,  1.0576],
          [-0.7432, -0.5264,  0.3208,  ...,  0.3254, -0.7354,  1.8789]]],


        [[[ 0.1133, -0.3149, -0.3728,  ..., -0.0806,  0.7939,  0.2466],
          [ 0.1663, -0.0526, -0.5625,  ..., -0.0619, -0.6641, -0.3877],
          [-0.2878,  0.4453, -1.2168,  ...,  0.0787, -0.8203, -1.3271],
          ...,
          [ 0.5151,  0.2009, -1.2881,  ..., -0.9438, -0.3074,  0.1113],
          [-0.1567, -1.3486, -0.3635,  ..., -1.1338,  0.6855,  1.5645],
          [-0.5679, -0.7192, -1.3584,  ..., -1.0889,  0.8477,  1.4795]],

         [[-0.2427,  0.7847, -0.8174,  ..., -0.4678,  1.8711,  0.1078],
          [ 0.1782, -0.2408, -0.5425,  ...,  0.9087,  0.1748,  0.9419],
          [-1.0312,  0.4854,  0.4722,  ...,  0.5234,  0.2240,  0.3726],
          ...,
          [-0.2002,  0.2749,  0.3098,  ...,  0.0701, -1.1777,  0.2708],
          [ 0.7153, -0.2993,  0.4126,  ..., -0.0561, -0.7842, -0.9585],
          [ 0.3257, -1.8906,  0.2874,  ...,  0.9321,  0.5503, -0.0177]]]], dtype=torch.float16)

2025-06-10 00:13:32.269036 GPU 7 155998 test begin: paddle.nn.functional.interpolate(Tensor([4, 128, 32, 32],"float16"), list[128,128,], mode="bilinear", align_corners=False, )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([4, 128, 32, 32],"float16"), list[128,128,], mode="bilinear", align_corners=False, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 1490 / 524288 (0.3%)
Greatest absolute difference: 0.048828125 at index (0, 108, 15, 5) (up to 0.01 allowed)
Greatest relative difference: 5.48046875 at index (0, 92, 6, 21) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([4, 128, 32, 32]), dtype=torch.float16)
tensor([[[[ 2.8345e-01, -2.9343e-02,  7.4561e-01,  ..., -1.4443e+00, -1.1445e+00,  6.1768e-01],
          [ 1.2441e+00, -4.0942e-01,  5.7422e-01,  ..., -6.1133e-01, -1.1318e+00,  4.2090e-01],
          [ 4.9072e-01,  1.8494e-01, -9.5764e-02,  ..., -1.5645e+00,  4.2603e-01,  9.7949e-01],
          ...,
          [ 1.3057e+00,  3.0811e-01,  1.7114e-01,  ..., -1.2080e+00,  5.5878e-02, -2.7832e-01],
          [ 7.2852e-01,  8.8501e-02,  7.4609e-01,  ..., -3.4302e-01, -3.6401e-01, -9.6924e-01],
          [ 4.0186e-01, -1.2520e+00, -1.4221e-01,  ..., -1.8726e-01, -5.3101e-02, -6.5723e-01]],

         [[ 7.6172e-02,  4.3286e-01,  6.6357e-01,  ..., -1.0176e+00, -1.8232e+00,  4.1382e-01],
          [ 1.5186e-01, -1.4062e+00,  1.0527e+00,  ..., -8.8281e-01, -3.1885e-01,  1.1094e+00],
          [ 2.1133e+00,  1.2360e-01,  4.0063e-01,  ..., -2.3413e-01,  4.2328e-02,  1.1853e-01],
          ...,
          [-2.4353e-01, -5.9082e-01,  2.4097e-01,  ..., -1.0732e+00, -2.0422e-01,  1.9348e-01],
          [-6.7920e-01, -7.9199e-01, -1.0590e-01,  ..., -6.6064e-01,  1.7432e-01, -1.5840e+00],
          [-5.2295e-01, -2.2693e-01,  1.2695e+00,  ..., -9.7705e-01, -4.1565e-02, -1.8320e+00]],

         [[ 5.7861e-01,  5.4810e-02,  9.0039e-01,  ...,  5.9131e-01, -7.0361e-01, -4.9927e-01],
          [ 6.4795e-01,  6.1621e-01,  6.4648e-01,  ..., -8.1787e-02, -3.4393e-02, -6.1523e-01],
          [ 6.1865e-01,  1.2705e+00,  9.3750e-01,  ...,  3.6914e-01, -7.0312e-01, -1.5498e+00],
          ...,
          [ 5.2490e-01,  1.4362e-03, -1.1407e-01,  ...,  2.9492e-01, -7.3486e-01, -1.0742e+00],
          [ 5.5078e-01,  4.7754e-01,  6.7920e-01,  ..., -5.3076e-01,  3.2861e-01, -1.3223e+00],
          [ 8.8281e-01,  9.4971e-01, -6.0742e-01,  ..., -1.9666e-01, -1.2817e-01, -2.4561e-01]],

         ...,

         [[ 1.1084e-01, -2.6880e-01, -8.6279e-01,  ...,  6.8994e-01,  1.5322e+00,  9.5068e-01],
          [ 4.8584e-01, -1.3220e-01, -2.7759e-01,  ..., -1.0957e+00, -4.3091e-01, -1.7847e-01],
          [ 2.8305e-02, -1.1787e+00, -1.0137e+00,  ..., -7.8174e-01, -5.7080e-01,  6.5283e-01],
          ...,
          [ 3.3105e-01, -5.7275e-01,  2.3547e-01,  ...,  8.5791e-01,  4.3732e-02, -9.2468e-02],
          [-9.0881e-02, -1.0049e+00, -9.6924e-01,  ...,  5.6006e-01,  1.5088e+00,  5.2002e-01],
          [-6.3281e-01, -1.1992e+00, -1.0732e+00,  ...,  9.0625e-01,  5.8350e-01,  1.2432e+00]],

         [[-1.1562e+00, -1.0186e+00, -1.7549e+00,  ...,  6.0272e-02,  6.0693e-01, -4.2114e-01],
          [ 3.4088e-02, -1.2832e+00, -8.3313e-02,  ..., -4.6729e-01, -5.9863e-01, -4.2407e-01],
          [ 1.8652e-01, -7.0264e-01, -4.2188e-01,  ...,  1.3623e-01, -8.8086e-01,  1.1250e+00],
          ...,
          [ 4.5068e-01, -5.8350e-01, -2.8662e-01,  ..., -9.1260e-01,  1.2201e-01, -1.2627e+00],
          [ 1.4434e+00, -7.8906e-01,  1.8516e+00,  ...,  3.3447e-01,  6.2109e-01,  3.2422e-01],
          [ 1.7957e-01,  7.2461e-01, -3.8599e-01,  ...,  5.5762e-01,  7.0251e-02,  7.0947e-01]],

         [[-8.3643e-01,  8.3447e-01,  2.0105e-01,  ...,  8.3105e-01,  2.5659e-01, -3.6597e-01],
          [-4.6875e-01,  3.3008e-01, -2.1713e-02,  ..., -1.4365e+00,  1.5778e-02,  5.3271e-01],
          [ 4.4702e-01, -3.4692e-01, -2.1399e-01,  ..., -6.6748e-01, -2.5684e+00, -1.3203e+00],
          ...,
          [ 3.9502e-01, -1.0234e+00,  1.1387e+00,  ..., -8.0322e-01, -1.0742e+00,  4.8438e-01],
          [-3.5156e-01, -3.1958e-01,  4.6216e-01,  ...,  4.2212e-01, -3.6401e-01,  1.2666e+00],
          [ 1.3916e+00,  3.4521e-01,  7.4158e-02,  ...,  4.4922e-01, -5.8545e-01,  5.0146e-01]]],


        [[[ 7.6709e-01, -1.3525e-01, -7.2607e-01,  ...,  5.2539e-01,  7.8906e-01,  1.9609e+00],
          [ 6.7578e-01,  5.8740e-01, -2.6074e-01,  ...,  1.0068e+00,  4.4458e-01,  6.8665e-03],
          [ 3.4253e-01,  4.4019e-01, -1.2476e-01,  ..., -3.8422e-02, -1.3633e+00, -1.1340e-01],
          ...,
          [-2.7368e-01, -1.0977e+00, -1.6296e-01,  ..., -1.0557e+00,  5.4248e-01,  8.5449e-02],
          [ 4.4995e-01, -2.1753e-01,  1.9519e-01,  ...,  4.3018e-01,  7.8076e-01,  6.8408e-01],
          [ 5.4626e-02,  6.7627e-01, -5.6885e-01,  ...,  2.2285e+00,  1.9756e+00,  8.2861e-01]],

         [[ 1.7939e+00,  1.8242e+00,  9.5898e-01,  ...,  1.5173e-01,  3.0737e-01,  3.7622e-01],
          [ 9.6045e-01, -3.4644e-01,  9.8389e-01,  ...,  4.9133e-02,  2.0422e-01,  8.1177e-02],
          [-1.9910e-01, -3.9453e-01,  8.0127e-01,  ...,  8.2666e-01,  2.8638e-01, -6.9092e-01],
          ...,
          [ 5.3613e-01, -6.9287e-01, -3.1323e-01,  ..., -7.3425e-02,  1.9165e-02,  2.6074e-01],
          [-1.3318e-01, -6.6309e-01, -2.1716e-01,  ..., -4.1528e-01, -9.0637e-02,  1.7773e+00],
          [ 5.9082e-02,  1.0068e+00,  1.7603e-01,  ...,  1.7566e-01,  2.4805e-01,  1.6172e+00]],

         [[-2.2864e-01,  5.1605e-02,  1.0293e+00,  ..., -1.2695e-02,  6.0791e-01,  7.9980e-01],
          [ 7.0020e-01,  2.3596e-01,  1.1123e+00,  ..., -1.1240e+00,  1.4343e-01,  7.3303e-02],
          [-3.3130e-01, -1.1243e-01, -6.0791e-01,  ...,  4.1699e-01,  9.4434e-01,  2.2876e-01],
          ...,
          [ 2.1460e-01, -8.2373e-01, -8.0859e-01,  ...,  3.1470e-01,  1.1377e+00, -2.3010e-01],
          [-5.2338e-02,  9.0967e-01,  1.6973e+00,  ..., -3.0811e-01,  6.4795e-01,  4.9707e-01],
          [ 7.3535e-01,  3.2886e-01,  1.2129e+00,  ...,  7.2949e-01,  4.9072e-01, -5.4688e-01]],

         ...,

         [[ 1.6064e+00,  8.5815e-02, -1.0215e+00,  ...,  1.2988e+00,  4.6411e-01, -2.4988e-01],
          [ 1.7441e-02,  7.8674e-02,  1.2134e-01,  ..., -5.2881e-01, -1.7242e-02, -3.0737e-01],
          [ 1.0527e+00, -4.1187e-01,  7.4805e-01,  ...,  1.0016e-01,  4.7681e-01,  6.6846e-01],
          ...,
          [ 1.9199e+00,  6.6797e-01, -1.6387e+00,  ...,  1.3789e+00,  1.2803e+00,  5.0439e-01],
          [ 5.9131e-01,  5.0293e-01, -4.5190e-01,  ...,  2.5312e+00,  1.0664e+00, -1.8701e-01],
          [ 1.9360e-01, -1.7676e-01,  1.0889e+00,  ...,  7.8223e-01, -4.5923e-01, -2.7939e-02]],

         [[-1.3105e+00, -7.2510e-01,  4.6704e-01,  ..., -1.5049e+00, -7.9248e-01, -1.7656e+00],
          [-5.5469e-01,  4.6069e-01, -1.5393e-01,  ...,  6.4600e-01,  6.6309e-01, -1.9080e-01],
          [ 1.8242e+00,  3.4570e-01,  3.6353e-01,  ..., -5.9863e-01,  6.6992e-01, -7.3853e-02],
          ...,
          [-1.6052e-02, -7.4512e-01,  6.2354e-01,  ..., -5.1270e-01, -1.3725e-02,  1.7212e-01],
          [ 9.5020e-01,  2.4902e-01,  1.3660e-01,  ..., -4.1089e-01,  3.0786e-01,  1.3857e+00],
          [-3.6450e-01, -7.4072e-01, -8.8525e-01,  ...,  3.2251e-01,  3.4717e-01,  7.5000e-01]],

         [[-4.4800e-01, -3.5596e-01, -5.1123e-01,  ...,  1.1029e-01,  9.2468e-02,  3.8477e-01],
          [ 9.3262e-01, -7.1094e-01,  6.4990e-01,  ..., -5.7471e-01,  2.6636e-01, -5.8716e-02],
          [ 1.4709e-02, -2.0862e-01,  2.7856e-01,  ...,  3.9062e-01,  1.1035e+00, -4.9902e-01],
          ...,
          [-8.4619e-01, -1.7944e-01,  1.0703e+00,  ...,  1.0168e-01,  6.3916e-01,  6.2256e-01],
          [ 3.0054e-01,  7.7197e-01,  8.3008e-01,  ..., -5.9229e-01, -1.3926e+00, -4.9390e-01],
          [ 2.2402e+00,  1.1982e+00,  1.4717e+00,  ..., -7.4268e-01, -2.2668e-01,  7.0459e-01]]],


        [[[ 7.2461e-01, -8.3801e-02, -1.2334e+00,  ...,  1.1133e+00,  1.7957e-01,  7.1826e-01],
          [-1.3464e-01,  2.3483e-02,  3.0957e-01,  ..., -5.2277e-02,  3.6926e-02,  7.2510e-01],
          [ 2.0039e+00,  1.0020e+00, -4.6478e-02,  ...,  4.7803e-01,  1.7041e-01,  7.9688e-01],
          ...,
          [ 7.0850e-01, -1.6565e-01,  3.1152e-01,  ...,  1.6516e-01,  2.6099e-01, -2.3267e-01],
          [-2.8882e-01,  6.6406e-01, -6.0254e-01,  ...,  9.4775e-01, -2.4304e-01,  2.4426e-01],
          [ 1.4434e+00,  1.3320e+00,  1.4951e+00,  ...,  9.9219e-01, -2.3242e-01, -1.2329e-02]],

         [[ 1.6104e+00,  2.2266e-01,  9.9658e-01,  ..., -1.4941e+00, -1.4346e+00,  7.4005e-04],
          [ 1.5635e+00, -5.2100e-01,  2.4878e-01,  ...,  1.2030e-01, -1.2324e+00, -3.2935e-01],
          [-1.6998e-02,  2.6099e-01,  5.6396e-01,  ..., -9.1309e-01,  1.6455e-01,  7.6855e-01],
          ...,
          [ 1.2927e-01,  7.7393e-01, -3.9233e-01,  ...,  3.7744e-01,  3.3594e-01, -9.0674e-01],
          [ 3.0914e-02,  2.2766e-01, -1.9580e+00,  ...,  1.7615e-01,  9.5947e-01,  3.7842e-01],
          [-4.7144e-01,  4.7180e-02, -1.4844e+00,  ..., -1.5547e+00, -1.1597e-01,  6.4893e-01]],

         [[ 4.6631e-01,  3.6963e-01,  2.0981e-04,  ..., -1.5498e+00, -2.0654e-01, -1.0381e+00],
          [ 1.5420e+00, -2.6440e-01, -9.0771e-01,  ..., -7.1631e-01,  2.2522e-01,  4.0869e-01],
          [ 8.4229e-01,  4.1162e-01, -3.4863e-01,  ..., -1.2512e-01, -2.8906e-01,  1.2539e+00],
          ...,
          [ 1.9409e-01,  1.2854e-01, -2.9883e-01,  ...,  1.7764e+00, -2.5586e-01, -4.8004e-02],
          [ 6.7139e-01,  1.0684e+00,  5.5371e-01,  ..., -1.0126e-01, -4.7803e-01, -7.2510e-01],
          [ 3.4839e-01,  1.1650e+00, -5.6641e-01,  ..., -8.5266e-02, -1.0869e+00, -5.2637e-01]],

         ...,

         [[ 1.6973e+00, -2.0935e-01,  3.2837e-01,  ..., -1.6123e+00,  1.1924e+00,  7.0703e-01],
          [ 3.6890e-01, -8.3350e-01, -1.0455e-01,  ..., -1.0852e-01, -9.2773e-02, -2.9224e-01],
          [ 1.2559e+00, -5.9570e-01,  3.2495e-01,  ...,  4.8950e-01,  2.1289e-01,  2.2534e-01],
          ...,
          [ 3.5059e-01,  4.0527e-01,  4.3915e-02,  ...,  5.0195e-01,  9.9182e-03,  1.0137e+00],
          [-8.9111e-01, -3.2275e-01,  1.0938e+00,  ..., -3.8037e-01,  7.9199e-01,  7.1191e-01],
          [ 1.5146e+00, -8.0994e-02,  5.9424e-01,  ..., -5.1562e-01, -1.5811e+00, -2.0081e-01]],

         [[-1.3965e-01,  7.0117e-01, -9.9414e-01,  ..., -8.6182e-01, -3.5449e-01,  4.7314e-01],
          [-1.2607e+00,  9.7107e-02, -4.5581e-01,  ...,  1.0034e-01,  8.2617e-01, -1.1090e-01],
          [ 6.6553e-01, -2.0654e-01, -1.8677e-01,  ..., -4.0503e-01,  6.0156e-01, -3.4790e-01],
          ...,
          [ 6.3086e-01,  5.6836e-01,  5.8545e-01,  ..., -1.0088e+00, -1.1729e+00, -6.2598e-01],
          [-1.1328e-01, -6.6699e-01, -2.2229e-01,  ..., -1.4297e+00, -7.6318e-01, -2.4277e-02],
          [-4.2065e-01, -6.9727e-01, -1.1475e+00,  ...,  4.1064e-01, -6.8018e-01, -1.7109e+00]],

         [[ 2.3547e-01, -2.8595e-02,  1.0967e+00,  ..., -7.1924e-01, -9.6094e-01,  6.1719e-01],
          [ 4.2114e-01,  1.3084e-02,  5.8301e-01,  ...,  2.2925e-01,  5.9052e-03, -6.5332e-01],
          [-1.5303e+00, -2.6074e-01, -5.5322e-01,  ...,  6.1963e-01,  3.0380e-02,  8.0127e-01],
          ...,
          [-9.2627e-01, -4.6509e-01, -1.6484e+00,  ..., -6.5527e-01, -2.4011e-01, -9.6533e-01],
          [-1.8481e-01, -5.7617e-01, -1.9812e-01,  ..., -5.7812e-01, -3.8599e-01, -9.9854e-01],
          [-1.6992e-01,  1.3447e+00,  6.0938e-01,  ..., -7.1533e-01,  5.0928e-01,  6.4746e-01]]],


        [[[ 1.4932e+00, -1.1250e+00, -2.2253e-01,  ...,  7.4805e-01, -1.4814e+00,  6.1371e-02],
          [ 2.2539e+00, -1.3489e-02, -4.8926e-01,  ..., -4.7095e-01, -8.7842e-01,  6.8359e-01],
          [-3.3813e-01, -2.5854e-01, -4.9829e-01,  ..., -5.0934e-02, -3.0029e-01, -8.0811e-02],
          ...,
          [ 6.7578e-01,  9.0332e-03, -1.6436e+00,  ...,  3.5596e-01, -1.0820e+00,  1.3892e-01],
          [-6.0693e-01, -9.7803e-01, -7.6416e-01,  ..., -2.0422e-01, -4.2969e-01,  1.7725e-01],
          [-8.8672e-01, -6.3623e-01, -1.0742e+00,  ...,  5.6006e-01,  3.3618e-01, -3.0215e+00]],

         [[ 3.9209e-01,  1.3145e+00, -6.8408e-01,  ..., -8.5596e-01, -3.3105e-01, -7.2021e-01],
          [-1.3416e-01, -1.4922e+00,  6.0889e-01,  ...,  1.2656e+00,  1.8389e+00,  1.6083e-02],
          [ 7.3584e-01, -1.1523e+00, -8.8770e-01,  ..., -3.9453e-01, -2.6050e-01, -1.2812e+00],
          ...,
          [ 4.9194e-01,  5.2734e-01, -2.5366e-01,  ...,  9.5801e-01,  3.5571e-01,  6.0303e-01],
          [-2.4139e-02,  1.1045e+00,  3.2935e-01,  ..., -5.8496e-01, -2.9077e-01,  8.6670e-02],
          [-7.2205e-02,  1.5410e+00,  1.3662e+00,  ..., -3.5376e-01, -1.5027e-01, -5.5469e-01]],

         [[ 1.1859e-01, -2.9712e-01, -8.5010e-01,  ...,  1.7295e+00, -6.1084e-01,  1.0820e+00],
          [-5.2930e-01,  3.5181e-01,  2.2644e-01,  ..., -9.2920e-01, -1.4246e-01,  6.7041e-01],
          [-2.1460e-01, -6.1816e-01, -8.2617e-01,  ..., -1.3154e+00,  5.4199e-02,  4.3970e-01],
          ...,
          [-5.8350e-02, -3.3887e-01, -5.8838e-01,  ..., -5.4199e-01,  2.1680e-01,  1.4941e-01],
          [ 1.1494e+00, -5.3516e-01, -1.1719e+00,  ..., -1.7285e+00, -4.4336e-01, -6.7969e-01],
          [ 4.3921e-01,  2.9272e-01, -1.6772e-01,  ...,  3.8428e-01,  4.9658e-01, -7.6221e-01]],

         ...,

         [[ 1.2656e+00, -6.3623e-01, -1.2354e+00,  ...,  6.3184e-01, -3.4204e-01, -4.6240e-01],
          [ 2.6782e-01, -1.0186e+00, -1.9551e+00,  ...,  3.9209e-01,  3.7158e-01,  7.7686e-01],
          [-6.3086e-01,  3.0688e-01, -6.7822e-01,  ...,  4.6143e-01, -1.1943e+00,  1.1016e+00],
          ...,
          [ 1.3799e+00,  8.5400e-01,  6.0205e-01,  ..., -3.4576e-02, -6.4087e-02,  2.9321e-01],
          [ 6.4551e-01, -3.0249e-01, -1.2568e+00,  ...,  5.2588e-01, -1.3733e-01,  4.0698e-01],
          [-6.1328e-01, -6.6357e-01,  5.2441e-01,  ...,  6.8066e-01,  1.2390e-01,  7.3730e-01]],

         [[-1.7883e-01, -1.9739e-01, -6.1328e-01,  ..., -5.8447e-01, -1.3994e+00,  5.6543e-01],
          [ 5.6836e-01,  4.3018e-01, -6.8799e-01,  ..., -4.9286e-02, -2.1997e-01,  9.4189e-01],
          [ 1.0723e+00, -8.3679e-02, -3.5571e-01,  ..., -5.5957e-01,  1.3789e+00,  3.3350e-01],
          ...,
          [ 1.8604e+00, -8.9844e-02,  5.5811e-01,  ..., -3.4912e-01, -1.6443e-01,  5.0586e-01],
          [ 6.5527e-01, -1.0332e+00,  1.6143e+00,  ..., -4.7632e-01,  3.7402e-01,  8.6426e-01],
          [-9.7656e-01, -5.4785e-01,  8.4424e-01,  ..., -1.8408e-01, -1.7842e+00, -9.8193e-01]],

         [[-3.6987e-01,  3.2910e-01, -8.8806e-02,  ...,  9.5605e-01, -1.9629e-01,  8.2764e-01],
          [-6.6309e-01, -8.5693e-01,  1.8481e-01,  ...,  1.7163e-01, -3.0078e-01, -6.4941e-02],
          [ 1.5693e+00,  1.3105e+00,  7.9297e-01,  ..., -3.3521e-01,  4.9316e-01,  1.3555e+00],
          ...,
          [ 2.9053e-01,  1.0674e+00,  5.1331e-02,  ...,  9.0869e-01,  4.3872e-01, -2.9346e-01],
          [ 2.7441e-01,  2.0723e+00,  6.4111e-01,  ..., -6.2305e-01,  1.4395e+00, -2.0234e+00],
          [-1.4082e+00,  8.2825e-02,  1.4075e-01,  ...,  7.4097e-02,  1.6875e+00, -3.9185e-01]]]], dtype=torch.float16)
DESIRED: (shape=torch.Size([4, 128, 32, 32]), dtype=torch.float16)
tensor([[[[ 2.8491e-01, -2.7588e-02,  7.5195e-01,  ..., -1.4629e+00, -1.1592e+00,  6.2109e-01],
          [ 1.2529e+00, -4.1138e-01,  5.8105e-01,  ..., -6.1523e-01, -1.1455e+00,  4.2432e-01],
          [ 4.9756e-01,  1.8738e-01, -9.6191e-02,  ..., -1.5850e+00,  4.2700e-01,  9.8926e-01],
          ...,
          [ 1.3184e+00,  3.1079e-01,  1.6821e-01,  ..., -1.2207e+00,  5.5511e-02, -2.8052e-01],
          [ 7.3486e-01,  9.0088e-02,  7.5684e-01,  ..., -3.4912e-01, -3.6572e-01, -9.7461e-01],
          [ 4.0698e-01, -1.2617e+00, -1.4355e-01,  ..., -1.8481e-01, -5.7556e-02, -6.7529e-01]],

         [[ 7.8125e-02,  4.4141e-01,  6.7529e-01,  ..., -1.0303e+00, -1.8408e+00,  4.2163e-01],
          [ 1.5088e-01, -1.4209e+00,  1.0625e+00,  ..., -8.9258e-01, -3.2495e-01,  1.1152e+00],
          [ 2.1309e+00,  1.2061e-01,  4.0649e-01,  ..., -2.3779e-01,  4.3518e-02,  1.2476e-01],
          ...,
          [-2.4426e-01, -5.9570e-01,  2.4731e-01,  ..., -1.0801e+00, -2.0850e-01,  1.9885e-01],
          [-6.8604e-01, -8.0127e-01, -1.1084e-01,  ..., -6.6846e-01,  1.7725e-01, -1.5947e+00],
          [-5.2490e-01, -2.2852e-01,  1.2861e+00,  ..., -9.8730e-01, -4.3823e-02, -1.8506e+00]],

         [[ 5.8545e-01,  5.2490e-02,  9.0674e-01,  ...,  6.0059e-01, -7.1289e-01, -5.0244e-01],
          [ 6.5088e-01,  6.2305e-01,  6.5625e-01,  ..., -8.4106e-02, -3.7109e-02, -6.2354e-01],
          [ 6.2793e-01,  1.2891e+00,  9.5361e-01,  ...,  3.7305e-01, -7.0850e-01, -1.5635e+00],
          ...,
          [ 5.2686e-01, -3.2959e-03, -1.1438e-01,  ...,  2.9492e-01, -7.4170e-01, -1.0820e+00],
          [ 5.5518e-01,  4.8340e-01,  6.8359e-01,  ..., -5.3516e-01,  3.3032e-01, -1.3418e+00],
          [ 8.8770e-01,  9.5898e-01, -6.1133e-01,  ..., -2.0068e-01, -1.3281e-01, -2.4622e-01]],

         ...,

         [[ 1.1127e-01, -2.7295e-01, -8.7451e-01,  ...,  7.0020e-01,  1.5410e+00,  9.6484e-01],
          [ 4.8950e-01, -1.3208e-01, -2.7856e-01,  ..., -1.1045e+00, -4.3213e-01, -1.8384e-01],
          [ 3.0029e-02, -1.1914e+00, -1.0283e+00,  ..., -7.9639e-01, -5.8398e-01,  6.6553e-01],
          ...,
          [ 3.3252e-01, -5.7617e-01,  2.3743e-01,  ...,  8.6572e-01,  3.7231e-02, -9.7839e-02],
          [-9.0454e-02, -1.0146e+00, -9.7607e-01,  ...,  5.6494e-01,  1.5283e+00,  5.2832e-01],
          [-6.4111e-01, -1.2070e+00, -1.0850e+00,  ...,  9.1943e-01,  5.9180e-01,  1.2461e+00]],

         [[-1.1660e+00, -1.0234e+00, -1.7734e+00,  ...,  6.5186e-02,  6.1572e-01, -4.2090e-01],
          [ 3.3325e-02, -1.3027e+00, -8.5938e-02,  ..., -4.7241e-01, -6.0400e-01, -4.3677e-01],
          [ 1.8774e-01, -7.0996e-01, -4.2578e-01,  ...,  1.3794e-01, -8.8867e-01,  1.1426e+00],
          ...,
          [ 4.5239e-01, -5.9180e-01, -2.9224e-01,  ..., -9.1992e-01,  1.2024e-01, -1.2803e+00],
          [ 1.4609e+00, -7.9688e-01,  1.8643e+00,  ...,  3.3545e-01,  6.2549e-01,  3.2642e-01],
          [ 1.8884e-01,  7.2852e-01, -3.8721e-01,  ...,  5.6787e-01,  7.9102e-02,  7.1680e-01]],

         [[-8.4473e-01,  8.4668e-01,  2.0288e-01,  ...,  8.4375e-01,  2.5513e-01, -3.7109e-01],
          [-4.7363e-01,  3.3228e-01, -2.0569e-02,  ..., -1.4482e+00,  2.2583e-02,  5.4443e-01],
          [ 4.4897e-01, -3.4644e-01, -2.1704e-01,  ..., -6.7432e-01, -2.6016e+00, -1.3398e+00],
          ...,
          [ 3.9746e-01, -1.0381e+00,  1.1514e+00,  ..., -8.1396e-01, -1.0889e+00,  4.9268e-01],
          [-3.5400e-01, -3.2422e-01,  4.6997e-01,  ...,  4.2529e-01, -3.7061e-01,  1.2783e+00],
          [ 1.3994e+00,  3.4521e-01,  7.4341e-02,  ...,  4.5166e-01, -5.8984e-01,  5.1367e-01]]],


        [[[ 7.7148e-01, -1.3770e-01, -7.3145e-01,  ...,  5.3223e-01,  7.9736e-01,  1.9873e+00],
          [ 6.8066e-01,  5.9082e-01, -2.6465e-01,  ...,  1.0166e+00,  4.4922e-01,  8.4229e-03],
          [ 3.4692e-01,  4.4629e-01, -1.2158e-01,  ..., -3.5278e-02, -1.3799e+00, -1.1493e-01],
          ...,
          [-2.7661e-01, -1.1094e+00, -1.6797e-01,  ..., -1.0732e+00,  5.4883e-01,  8.4106e-02],
          [ 4.5044e-01, -2.2278e-01,  1.9946e-01,  ...,  4.2920e-01,  7.8613e-01,  6.9141e-01],
          [ 5.5847e-02,  6.8164e-01, -5.7520e-01,  ...,  2.2578e+00,  1.9893e+00,  8.3496e-01]],

         [[ 1.8086e+00,  1.8545e+00,  9.6582e-01,  ...,  1.5454e-01,  3.1006e-01,  3.8037e-01],
          [ 9.6631e-01, -3.5205e-01,  9.9219e-01,  ...,  4.8706e-02,  2.0752e-01,  8.4229e-02],
          [-1.9983e-01, -3.9624e-01,  8.1055e-01,  ...,  8.3594e-01,  2.8857e-01, -6.9922e-01],
          ...,
          [ 5.4150e-01, -6.9727e-01, -3.1787e-01,  ..., -7.0068e-02,  1.8387e-02,  2.6099e-01],
          [-1.3330e-01, -6.7432e-01, -2.1997e-01,  ..., -4.2236e-01, -9.0576e-02,  1.7959e+00],
          [ 5.7800e-02,  1.0176e+00,  1.7712e-01,  ...,  1.7969e-01,  2.4854e-01,  1.6318e+00]],

         [[-2.3010e-01,  5.4443e-02,  1.0410e+00,  ..., -1.1902e-02,  6.1426e-01,  8.0322e-01],
          [ 7.0508e-01,  2.3730e-01,  1.1240e+00,  ..., -1.1416e+00,  1.4502e-01,  7.6355e-02],
          [-3.3301e-01, -1.1249e-01, -6.1084e-01,  ...,  4.2285e-01,  9.5654e-01,  2.2876e-01],
          ...,
          [ 2.1802e-01, -8.3594e-01, -8.2275e-01,  ...,  3.1763e-01,  1.1504e+00, -2.3169e-01],
          [-5.2460e-02,  9.1650e-01,  1.7129e+00,  ..., -3.1128e-01,  6.5869e-01,  4.9927e-01],
          [ 7.3682e-01,  3.2935e-01,  1.2285e+00,  ...,  7.3193e-01,  4.9219e-01, -5.4785e-01]],

         ...,

         [[ 1.6211e+00,  8.7463e-02, -1.0352e+00,  ...,  1.3154e+00,  4.6533e-01, -2.5195e-01],
          [ 1.7914e-02,  7.8918e-02,  1.2097e-01,  ..., -5.3516e-01, -1.5930e-02, -3.1104e-01],
          [ 1.0586e+00, -4.1406e-01,  7.5732e-01,  ...,  9.7717e-02,  4.8291e-01,  6.7090e-01],
          ...,
          [ 1.9395e+00,  6.7188e-01, -1.6572e+00,  ...,  1.3906e+00,  1.2998e+00,  5.1367e-01],
          [ 5.9619e-01,  5.1025e-01, -4.5679e-01,  ...,  2.5645e+00,  1.0771e+00, -1.9153e-01],
          [ 1.9666e-01, -1.7590e-01,  1.0957e+00,  ...,  7.9346e-01, -4.5703e-01, -2.4750e-02]],

         [[-1.3193e+00, -7.3291e-01,  4.7021e-01,  ..., -1.5186e+00, -8.0127e-01, -1.7803e+00],
          [-5.6445e-01,  4.6045e-01, -1.5393e-01,  ...,  6.4941e-01,  6.6357e-01, -1.9434e-01],
          [ 1.8398e+00,  3.5107e-01,  3.6572e-01,  ..., -6.0498e-01,  6.7969e-01, -7.6599e-02],
          ...,
          [-1.8265e-02, -7.5098e-01,  6.3232e-01,  ..., -5.1807e-01, -1.8372e-02,  1.7139e-01],
          [ 9.6143e-01,  2.5293e-01,  1.4160e-01,  ..., -4.1699e-01,  3.1226e-01,  1.4072e+00],
          [-3.6621e-01, -7.4219e-01, -8.9746e-01,  ...,  3.2471e-01,  3.5303e-01,  7.5488e-01]],

         [[-4.5093e-01, -3.5815e-01, -5.1807e-01,  ...,  1.1304e-01,  9.3384e-02,  3.8477e-01],
          [ 9.3750e-01, -7.2363e-01,  6.5918e-01,  ..., -5.8057e-01,  2.6611e-01, -5.6671e-02],
          [ 1.7960e-02, -2.0752e-01,  2.8271e-01,  ...,  3.9136e-01,  1.1191e+00, -5.0488e-01],
          ...,
          [-8.5352e-01, -1.7822e-01,  1.0850e+00,  ...,  1.0248e-01,  6.4990e-01,  6.2939e-01],
          [ 3.0225e-01,  7.7490e-01,  8.3545e-01,  ..., -5.9668e-01, -1.4053e+00, -5.0000e-01],
          [ 2.2520e+00,  1.2148e+00,  1.4814e+00,  ..., -7.5195e-01, -2.2864e-01,  7.1289e-01]]],


        [[[ 7.3242e-01, -8.4839e-02, -1.2480e+00,  ...,  1.1230e+00,  1.7993e-01,  7.2510e-01],
          [-1.3672e-01,  2.1744e-02,  3.0981e-01,  ..., -4.5624e-02,  3.9459e-02,  7.3145e-01],
          [ 2.0195e+00,  1.0166e+00, -4.3457e-02,  ...,  4.7998e-01,  1.7041e-01,  8.0371e-01],
          ...,
          [ 7.1533e-01, -1.6785e-01,  3.1299e-01,  ...,  1.6675e-01,  2.6318e-01, -2.3450e-01],
          [-2.9346e-01,  6.7236e-01, -6.0645e-01,  ...,  9.5703e-01, -2.4500e-01,  2.4438e-01],
          [ 1.4512e+00,  1.3408e+00,  1.4990e+00,  ...,  9.9902e-01, -2.3584e-01, -7.3204e-03]],

         [[ 1.6250e+00,  2.2693e-01,  1.0078e+00,  ..., -1.5078e+00, -1.4492e+00,  5.4932e-04],
          [ 1.5771e+00, -5.3271e-01,  2.5049e-01,  ...,  1.2036e-01, -1.2520e+00, -3.3252e-01],
          [-1.6068e-02,  2.6367e-01,  5.6934e-01,  ..., -9.2432e-01,  1.6418e-01,  7.7344e-01],
          ...,
          [ 1.2939e-01,  7.8564e-01, -3.9673e-01,  ...,  3.7842e-01,  3.3716e-01, -9.1992e-01],
          [ 3.1311e-02,  2.3157e-01, -1.9785e+00,  ...,  1.7822e-01,  9.6973e-01,  3.8257e-01],
          [-4.7949e-01,  4.7363e-02, -1.4980e+00,  ..., -1.5654e+00, -1.1761e-01,  6.5332e-01]],

         [[ 4.6973e-01,  3.7646e-01,  7.3242e-04,  ..., -1.5586e+00, -2.1265e-01, -1.0557e+00],
          [ 1.5537e+00, -2.6880e-01, -9.1211e-01,  ..., -7.2461e-01,  2.3242e-01,  4.1333e-01],
          [ 8.4717e-01,  4.1455e-01, -3.6206e-01,  ..., -1.2915e-01, -2.9419e-01,  1.2695e+00],
          ...,
          [ 1.9800e-01,  1.3171e-01, -3.0151e-01,  ...,  1.7969e+00, -2.5903e-01, -4.9286e-02],
          [ 6.7676e-01,  1.0791e+00,  5.6445e-01,  ..., -9.9121e-02, -4.8096e-01, -7.3145e-01],
          [ 3.5059e-01,  1.1797e+00, -5.6982e-01,  ..., -9.0332e-02, -1.1035e+00, -5.3027e-01]],

         ...,

         [[ 1.7119e+00, -2.1130e-01,  3.2910e-01,  ..., -1.6309e+00,  1.2041e+00,  7.1191e-01],
          [ 3.7329e-01, -8.3789e-01, -1.0229e-01,  ..., -1.1456e-01, -9.6680e-02, -2.9443e-01],
          [ 1.2646e+00, -6.0498e-01,  3.2495e-01,  ...,  4.9438e-01,  2.1558e-01,  2.2571e-01],
          ...,
          [ 3.5327e-01,  4.0894e-01,  4.4067e-02,  ...,  5.0732e-01,  3.9902e-03,  1.0205e+00],
          [-9.0088e-01, -3.2520e-01,  1.1016e+00,  ..., -3.7988e-01,  8.0518e-01,  7.2510e-01],
          [ 1.5234e+00, -7.8979e-02,  6.0791e-01,  ..., -5.2686e-01, -1.5869e+00, -2.0117e-01]],

         [[-1.4160e-01,  7.0654e-01, -1.0068e+00,  ..., -8.6865e-01, -3.5791e-01,  4.7974e-01],
          [-1.2715e+00,  1.0028e-01, -4.5923e-01,  ...,  9.9121e-02,  8.3398e-01, -1.0791e-01],
          [ 6.7139e-01, -2.0837e-01, -1.9080e-01,  ..., -4.0747e-01,  6.0449e-01, -3.5718e-01],
          ...,
          [ 6.3623e-01,  5.7275e-01,  5.8936e-01,  ..., -1.0156e+00, -1.1846e+00, -6.3672e-01],
          [-1.1224e-01, -6.7188e-01, -2.2314e-01,  ..., -1.4424e+00, -7.7051e-01, -2.4094e-02],
          [-4.2383e-01, -7.0312e-01, -1.1543e+00,  ...,  4.0430e-01, -6.9287e-01, -1.7236e+00]],

         [[ 2.3914e-01, -2.8442e-02,  1.1084e+00,  ..., -7.2461e-01, -9.7559e-01,  6.2207e-01],
          [ 4.2578e-01,  1.3779e-02,  5.9521e-01,  ...,  2.2925e-01,  7.4158e-03, -6.6113e-01],
          [-1.5410e+00, -2.6514e-01, -5.6152e-01,  ...,  6.2793e-01,  3.0762e-02,  8.0957e-01],
          ...,
          [-9.3164e-01, -4.6680e-01, -1.6611e+00,  ..., -6.6064e-01, -2.3804e-01, -9.7559e-01],
          [-1.8787e-01, -5.8496e-01, -2.0203e-01,  ..., -5.8740e-01, -3.8989e-01, -1.0176e+00],
          [-1.7139e-01,  1.3545e+00,  6.1719e-01,  ..., -7.2266e-01,  5.1074e-01,  6.5186e-01]]],


        [[[ 1.5059e+00, -1.1406e+00, -2.2571e-01,  ...,  7.6416e-01, -1.5010e+00,  5.6061e-02],
          [ 2.2793e+00, -1.5350e-02, -4.9463e-01,  ..., -4.7681e-01, -8.8721e-01,  6.9434e-01],
          [-3.3813e-01, -2.5806e-01, -5.0244e-01,  ..., -5.1147e-02, -3.0493e-01, -8.2764e-02],
          ...,
          [ 6.8115e-01,  1.1719e-02, -1.6582e+00,  ...,  3.5938e-01, -1.0957e+00,  1.4282e-01],
          [-6.0938e-01, -9.9219e-01, -7.7441e-01,  ..., -2.0483e-01, -4.3701e-01,  1.7810e-01],
          [-8.9355e-01, -6.4258e-01, -1.0820e+00,  ...,  5.5957e-01,  3.3691e-01, -3.0508e+00]],

         [[ 3.9429e-01,  1.3330e+00, -6.9141e-01,  ..., -8.6719e-01, -3.3618e-01, -7.2754e-01],
          [-1.3550e-01, -1.5059e+00,  6.1377e-01,  ...,  1.2832e+00,  1.8545e+00,  1.3153e-02],
          [ 7.4121e-01, -1.1709e+00, -8.9258e-01,  ..., -3.9258e-01, -2.5708e-01, -1.2891e+00],
          ...,
          [ 4.9463e-01,  5.3076e-01, -2.5684e-01,  ...,  9.7461e-01,  3.6768e-01,  6.1523e-01],
          [-2.3117e-02,  1.1143e+00,  3.3350e-01,  ..., -5.8984e-01, -2.9639e-01,  8.8989e-02],
          [-7.0374e-02,  1.5586e+00,  1.3789e+00,  ..., -3.6108e-01, -1.5112e-01, -5.6250e-01]],

         [[ 1.2146e-01, -3.0103e-01, -8.5547e-01,  ...,  1.7432e+00, -6.2061e-01,  1.0947e+00],
          [-5.3516e-01,  3.5425e-01,  2.2974e-01,  ..., -9.3115e-01, -1.4539e-01,  6.7871e-01],
          [-2.1509e-01, -6.2500e-01, -8.3350e-01,  ..., -1.3359e+00,  5.4138e-02,  4.4604e-01],
          ...,
          [-5.8899e-02, -3.3911e-01, -5.9473e-01,  ..., -5.4297e-01,  2.1924e-01,  1.5796e-01],
          [ 1.1602e+00, -5.3906e-01, -1.1836e+00,  ..., -1.7480e+00, -4.4604e-01, -6.8750e-01],
          [ 4.4727e-01,  2.9199e-01, -1.7126e-01,  ...,  3.8623e-01,  4.9951e-01, -7.6807e-01]],

         ...,

         [[ 1.2803e+00, -6.4160e-01, -1.2422e+00,  ...,  6.4062e-01, -3.4839e-01, -4.6558e-01],
          [ 2.7148e-01, -1.0332e+00, -1.9746e+00,  ...,  3.9551e-01,  3.7817e-01,  7.8027e-01],
          [-6.3525e-01,  3.0835e-01, -6.8652e-01,  ...,  4.6680e-01, -1.2090e+00,  1.1182e+00],
          ...,
          [ 1.3916e+00,  8.6670e-01,  6.1230e-01,  ..., -3.6652e-02, -6.5247e-02,  2.9028e-01],
          [ 6.4941e-01, -3.0640e-01, -1.2764e+00,  ...,  5.3369e-01, -1.3867e-01,  4.1309e-01],
          [-6.1328e-01, -6.6699e-01,  5.2979e-01,  ...,  6.8555e-01,  1.2256e-01,  7.4365e-01]],

         [[-1.7993e-01, -1.9971e-01, -6.2305e-01,  ..., -5.9375e-01, -1.4170e+00,  5.7373e-01],
          [ 5.7471e-01,  4.3555e-01, -6.9434e-01,  ..., -4.7668e-02, -2.2632e-01,  9.5215e-01],
          [ 1.0840e+00, -8.4717e-02, -3.5986e-01,  ..., -5.6934e-01,  1.3965e+00,  3.3569e-01],
          ...,
          [ 1.8760e+00, -8.6792e-02,  5.6250e-01,  ..., -3.5059e-01, -1.6711e-01,  5.1270e-01],
          [ 6.6260e-01, -1.0449e+00,  1.6309e+00,  ..., -4.8291e-01,  3.7817e-01,  8.7500e-01],
          [-9.8584e-01, -5.5176e-01,  8.5107e-01,  ..., -1.8689e-01, -1.7910e+00, -9.9170e-01]],

         [[-3.7012e-01,  3.3203e-01, -9.5337e-02,  ...,  9.6582e-01, -1.9885e-01,  8.3496e-01],
          [-6.7188e-01, -8.6914e-01,  1.8530e-01,  ...,  1.7810e-01, -3.0371e-01, -6.7139e-02],
          [ 1.5762e+00,  1.3242e+00,  7.9883e-01,  ..., -3.3911e-01,  4.9780e-01,  1.3691e+00],
          ...,
          [ 2.9175e-01,  1.0703e+00,  5.3925e-02,  ...,  9.2090e-01,  4.4165e-01, -2.9248e-01],
          [ 2.8101e-01,  2.0996e+00,  6.4600e-01,  ..., -6.2842e-01,  1.4551e+00, -2.0527e+00],
          [-1.4131e+00,  9.4849e-02,  1.4490e-01,  ...,  7.1655e-02,  1.7041e+00, -3.9551e-01]]]], dtype=torch.float16)

2025-06-10 00:13:32.340953 GPU 7 156019 test begin: paddle.nn.functional.interpolate(Tensor([4, 128, 4, 4],"float16"), list[16,32,], mode="bilinear", align_corners=False, )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([4, 128, 4, 4],"float16"), list[16,32,], mode="bilinear", align_corners=False, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 3468 / 8192 (42.3%)
Greatest absolute difference: 0.11328125 at index (0, 7, 0, 2) (up to 0.01 allowed)
Greatest relative difference: 49.9375 at index (2, 75, 1, 1) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([4, 128, 4, 4]), dtype=torch.float16)
tensor([[[[ 0.3647,  0.6382,  1.7598, -0.0372],
          [ 0.7393,  0.2252,  0.2245,  0.4473],
          [-1.1953, -1.5127, -0.1975, -0.3889],
          [ 0.5703,  0.1763,  0.6738,  1.1582]],

         [[ 2.0742,  0.8120, -0.9248,  0.7681],
          [-0.8809, -0.9272, -0.8853, -1.1660],
          [-0.7007,  0.2394,  0.2336,  0.8442],
          [-1.0859,  1.6406,  0.1130,  0.4292]],

         [[-0.6465, -1.2988, -0.4417, -1.8789],
          [-0.8481, -1.4385,  0.1797,  0.5430],
          [-0.9058,  0.2306, -0.0485, -0.1304],
          [ 0.0681,  1.0713,  0.5815, -2.8340]],

         ...,

         [[ 3.3438,  0.8730, -1.3301, -1.3789],
          [-0.7178, -0.8462, -0.4170, -1.6895],
          [ 1.7598,  0.6309,  0.1737,  1.6777],
          [ 1.6777,  2.5977,  0.5024, -0.1840]],

         [[ 1.7305,  0.8955,  0.7544,  0.2896],
          [ 1.9160,  1.5713,  1.7354,  0.3958],
          [ 1.0254,  1.8750,  3.2656,  1.5732],
          [ 1.4814,  2.9570,  1.8379,  0.2761]],

         [[ 1.5010,  1.8848,  1.3633,  0.1594],
          [-1.2061,  0.5342, -0.3582,  0.0360],
          [-1.7764, -1.6670,  0.7632, -0.1326],
          [-2.5840, -1.4688, -0.3962, -0.4976]]],


        [[[-0.4939,  0.4470,  1.2656,  1.1436],
          [ 1.0898,  0.0825, -1.5469, -0.0368],
          [-1.9453,  0.0322,  0.1098,  0.7290],
          [ 1.0332,  1.2998,  0.4563,  0.6206]],

         [[-1.6484, -0.5669, -0.6289,  0.1990],
          [ 0.9194,  0.4065,  1.0293,  0.3203],
          [-0.7788, -0.0622,  0.8765, -0.8813],
          [-0.7900,  0.1215,  1.7783, -0.1509]],

         [[ 0.3235, -1.4717, -1.7852, -2.0820],
          [-0.4814, -0.3320, -1.1328, -1.6943],
          [ 0.1775,  2.0977,  0.8955,  0.0782],
          [ 1.8545, -0.3577, -0.3228, -0.1282]],

         ...,

         [[-0.5513,  2.6875,  1.6787,  2.3496],
          [-0.9429,  1.2471,  0.8340, -0.2590],
          [-1.0352, -0.6597,  1.6162,  0.0579],
          [-0.3184, -0.1660,  0.2988,  0.2111]],

         [[ 0.0952,  0.6040,  0.8940,  0.3345],
          [ 0.0906,  0.0144, -2.3223, -1.8389],
          [ 0.5312,  0.2095, -2.4883, -0.3906],
          [-0.9517,  1.3369,  1.3799, -0.6191]],

         [[-1.4531,  0.4817,  0.7949,  0.3340],
          [ 1.4375,  1.6982, -0.9463,  0.3599],
          [-0.9531,  0.6006, -0.5645, -0.7915],
          [-0.5762,  0.3892,  1.7627,  0.5791]]],


        [[[ 1.2441, -0.2949,  0.2344,  0.4033],
          [-0.1760,  0.8374,  0.3208, -0.7856],
          [-3.1152, -1.7070,  0.3608, -2.6094],
          [-1.2910, -0.1893, -0.9673, -2.2031]],

         [[-0.4363,  1.9541, -0.2194,  0.8975],
          [ 1.4365, -0.2678, -1.7480, -2.3262],
          [ 0.5669,  0.8872, -0.1091, -1.3477],
          [ 3.3770,  2.6953,  2.6250,  0.5796]],

         [[-2.9824, -0.1818,  0.7842, -0.7144],
          [-2.0605, -0.5972,  0.6250,  1.1367],
          [ 0.5054, -0.0688, -0.9014,  0.3936],
          [ 0.3567,  0.6567, -1.1387, -0.9536]],

         ...,

         [[-2.3691, -1.3584, -1.3564,  0.8799],
          [ 2.1484,  1.2676, -0.7827,  1.1768],
          [ 2.9082,  1.0098, -0.4329, -0.5669],
          [ 1.8125,  1.5400,  0.3015, -0.6133]],

         [[-0.3555, -0.1373, -1.7080, -0.4175],
          [ 1.0635,  0.8599,  0.0442,  0.9077],
          [ 2.2930,  1.0293,  0.0554,  0.9346],
          [ 0.4556,  0.4080, -2.1777,  0.0461]],

         [[-0.1567,  0.9023, -0.4631, -0.8091],
          [-0.7485, -1.2061,  1.2529, -0.7446],
          [-0.5151, -0.7974,  0.1132, -1.6699],
          [ 0.1169,  0.0654,  0.4114, -0.9136]]],


        [[[-0.0924, -1.7412,  0.2354,  0.4287],
          [-0.1541,  1.3486,  1.3291,  1.1455],
          [ 0.6523,  0.9609, -0.6011, -1.8789],
          [-0.6602, -3.3105, -2.4551,  1.1270]],

         [[ 0.9155, -0.3972,  0.0366, -0.9067],
          [ 0.3647,  0.4373, -0.8257, -0.0565],
          [ 1.1953,  0.6309,  0.4011, -0.3516],
          [ 1.4033,  0.3718, -0.6895,  1.6494]],

         [[ 0.9653, -1.3027,  1.7998,  0.1322],
          [-0.6416, -0.5015, -0.0455, -0.8550],
          [-1.0459,  0.1646,  0.2377,  2.3496],
          [-1.8320,  0.4727, -0.9995,  0.1655]],

         ...,

         [[-0.4116, -1.8936, -1.4404,  0.7949],
          [ 0.0316,  1.5820, -0.0889,  0.6938],
          [-0.9829,  0.0693, -2.0527, -0.2107],
          [-2.4551, -1.2168, -0.6616, -0.3171]],

         [[ 0.8789, -1.4639, -2.2695,  0.0828],
          [ 0.2068, -1.1777,  0.3306,  1.7471],
          [-0.9185, -0.2976, -0.2690, -1.3086],
          [-1.8018,  0.2167,  0.6235,  0.1901]],

         [[ 3.0234,  0.5415,  1.3525,  0.4404],
          [-0.1008,  0.7114,  0.0557, -0.3264],
          [ 0.5430, -0.7817, -0.4658,  0.8042],
          [ 1.9092,  0.7202, -0.4736, -0.6719]]]], dtype=torch.float16)
DESIRED: (shape=torch.Size([4, 128, 4, 4]), dtype=torch.float16)
tensor([[[[ 0.3730,  0.6475,  1.7969, -0.0424],
          [ 0.7559,  0.2366,  0.2430,  0.4563],
          [-1.2188, -1.5449, -0.2100, -0.4011],
          [ 0.5767,  0.1769,  0.6875,  1.1787]],

         [[ 2.1367,  0.8291, -0.9355,  0.7734],
          [-0.8970, -0.9409, -0.9141, -1.1797],
          [-0.7056,  0.2346,  0.2396,  0.8516],
          [-1.1084,  1.6807,  0.1158,  0.4414]],

         [[-0.6626, -1.3301, -0.4507, -1.9160],
          [-0.8496, -1.4688,  0.1786,  0.5493],
          [-0.9282,  0.2316, -0.0459, -0.1246],
          [ 0.0695,  1.0830,  0.5830, -2.8965]],

         ...,

         [[ 3.4004,  0.8857, -1.3652, -1.4092],
          [-0.7231, -0.8447, -0.4106, -1.7256],
          [ 1.7764,  0.6284,  0.1676,  1.6953],
          [ 1.7090,  2.6699,  0.5327, -0.1755]],

         [[ 1.7549,  0.9111,  0.7676,  0.2900],
          [ 1.9443,  1.5977,  1.7676,  0.4121],
          [ 1.0449,  1.9102,  3.3477,  1.5977],
          [ 1.5020,  2.9980,  1.8818,  0.2852]],

         [[ 1.5215,  1.9199,  1.4033,  0.1564],
          [-1.2207,  0.5459, -0.3728,  0.0436],
          [-1.8086, -1.6865,  0.7817, -0.1415],
          [-2.6191, -1.4971, -0.3931, -0.5127]]],


        [[[-0.5039,  0.4592,  1.2959,  1.1816],
          [ 1.1094,  0.0881, -1.5703, -0.0447],
          [-1.9697,  0.0286,  0.1055,  0.7524],
          [ 1.0303,  1.3096,  0.4573,  0.6245]],

         [[-1.6777, -0.5674, -0.6489,  0.1960],
          [ 0.9233,  0.3999,  1.0615,  0.3347],
          [-0.7788, -0.0570,  0.8853, -0.8965],
          [-0.8164,  0.1145,  1.8193, -0.1711]],

         [[ 0.3315, -1.4824, -1.8086, -2.1484],
          [-0.4878, -0.3433, -1.1621, -1.7227],
          [ 0.1730,  2.1543,  0.9072,  0.0719],
          [ 1.8799, -0.3508, -0.3345, -0.1244]],

         ...,

         [[-0.5732,  2.7402,  1.7246,  2.4102],
          [-0.9478,  1.2891,  0.8604, -0.2593],
          [-1.0557, -0.6724,  1.6396,  0.0546],
          [-0.3201, -0.1754,  0.3198,  0.2208]],

         [[ 0.0937,  0.5938,  0.9102,  0.3550],
          [ 0.0952,  0.0338, -2.3652, -1.8955],
          [ 0.5366,  0.2014, -2.5625, -0.3975],
          [-0.9580,  1.3633,  1.3984, -0.6289]],

         [[-1.4863,  0.4805,  0.8276,  0.3386],
          [ 1.4668,  1.7471, -0.9688,  0.3635],
          [-0.9692,  0.6064, -0.5815, -0.8057],
          [-0.5947,  0.3999,  1.8047,  0.5938]]],


        [[[ 1.2568, -0.3032,  0.2412,  0.4158],
          [-0.1669,  0.8633,  0.3225, -0.7915],
          [-3.1777, -1.7354,  0.3794, -2.6680],
          [-1.3213, -0.2103, -0.9751, -2.2734]],

         [[-0.4485,  2.0176, -0.2114,  0.9199],
          [ 1.4756, -0.2690, -1.7871, -2.3730],
          [ 0.5645,  0.8989, -0.1157, -1.3789],
          [ 3.4180,  2.7285,  2.6680,  0.6025]],

         [[-3.0312, -0.1782,  0.7974, -0.7280],
          [-2.1094, -0.6128,  0.6406,  1.1553],
          [ 0.5059, -0.0656, -0.9141,  0.4131],
          [ 0.3770,  0.6670, -1.1475, -0.9834]],

         ...,

         [[-2.4160, -1.3984, -1.3809,  0.8843],
          [ 2.1680,  1.2871, -0.8018,  1.2041],
          [ 2.9668,  1.0283, -0.4377, -0.5732],
          [ 1.8545,  1.5820,  0.2939, -0.6211]],

         [[-0.3555, -0.1394, -1.7354, -0.4263],
          [ 1.0693,  0.8838,  0.0352,  0.9150],
          [ 2.3477,  1.0566,  0.0668,  0.9609],
          [ 0.4565,  0.4050, -2.2285,  0.0440]],

         [[-0.1628,  0.9297, -0.4878, -0.8179],
          [-0.7563, -1.2344,  1.2803, -0.7544],
          [-0.5327, -0.8149,  0.1230, -1.6992],
          [ 0.1295,  0.0677,  0.4182, -0.9458]]],


        [[[-0.0853, -1.7969,  0.2334,  0.4141],
          [-0.1588,  1.3691,  1.3574,  1.1914],
          [ 0.6675,  0.9980, -0.6016, -1.9111],
          [-0.6738, -3.3535, -2.5195,  1.1182]],

         [[ 0.9346, -0.4038,  0.0526, -0.9062],
          [ 0.3618,  0.4414, -0.8516, -0.0673],
          [ 1.2256,  0.6504,  0.4104, -0.3604],
          [ 1.4258,  0.3787, -0.6992,  1.6865]],

         [[ 0.9780, -1.3242,  1.8516,  0.1587],
          [-0.6509, -0.5239, -0.0429, -0.8940],
          [-1.0557,  0.1704,  0.2412,  2.4121],
          [-1.8711,  0.4751, -1.0225,  0.1722]],

         ...,

         [[-0.4194, -1.9414, -1.4766,  0.7949],
          [ 0.0361,  1.6045, -0.0896,  0.7207],
          [-0.9922,  0.0932, -2.0977, -0.2163],
          [-2.4941, -1.2490, -0.6880, -0.3230]],

         [[ 0.8882, -1.5215, -2.3242,  0.0822],
          [ 0.2168, -1.2012,  0.3269,  1.7783],
          [-0.9268, -0.3076, -0.2629, -1.3340],
          [-1.8311,  0.2061,  0.6255,  0.1804]],

         [[ 3.0840,  0.5508,  1.3711,  0.4490],
          [-0.0991,  0.7212,  0.0654, -0.3374],
          [ 0.5513, -0.7925, -0.4739,  0.8179],
          [ 1.9287,  0.7363, -0.4795, -0.6787]]]], dtype=torch.float16)

2025-06-10 00:13:32.460334 GPU 7 156955 test begin: paddle.nn.functional.interpolate(Tensor([4, 19, 128, 256],"float16"), list[512,1024,], mode="bilinear", align_corners=False, data_format="NCHW", )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([4, 19, 128, 256],"float16"), list[512,1024,], mode="bilinear", align_corners=False, data_format="NCHW", ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 6494 / 2490368 (0.3%)
Greatest absolute difference: 0.05078125 at index (2, 17, 21, 152) (up to 0.01 allowed)
Greatest relative difference: 10.5625 at index (3, 3, 76, 169) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([4, 19, 128, 256]), dtype=torch.float16)
tensor([[[[-2.0605e-01,  5.7861e-02,  2.4668e+00,  ...,  2.0239e-01,  3.9282e-01,  1.4043e+00],
          [ 3.7231e-01,  3.5474e-01, -2.0679e-01,  ...,  4.2725e-01, -1.2480e+00,  3.9380e-01],
          [ 5.7373e-01,  9.1992e-01, -1.4160e-01,  ..., -1.4197e-01, -3.2080e-01, -7.3682e-01],
          ...,
          [-9.7900e-02, -4.9146e-01,  6.7676e-01,  ..., -7.0850e-01, -2.8784e-01, -1.2607e+00],
          [ 6.2451e-01, -5.6494e-01, -3.1396e-01,  ...,  9.0283e-01, -1.1455e+00, -7.9688e-01],
          [-8.0078e-01, -1.0527e+00,  7.5134e-02,  ...,  5.3613e-01, -1.9238e-01,  5.9717e-01]],

         [[ 5.3925e-02,  3.1323e-01,  4.2212e-01,  ...,  8.8721e-01, -5.4834e-01, -8.3789e-01],
          [ 2.0309e-02,  7.1436e-01,  1.2666e+00,  ..., -5.0201e-02,  2.8296e-01, -6.5283e-01],
          [ 6.9482e-01,  2.6685e-01, -1.3367e-01,  ..., -1.9119e-02,  2.9980e-01, -4.6631e-01],
          ...,
          [-6.2207e-01, -6.4307e-01,  4.4067e-01,  ..., -6.3330e-01,  9.9902e-01,  1.7227e+00],
          [-1.1074e+00, -7.7734e-01, -3.5718e-01,  ..., -7.6807e-01, -6.7920e-01,  1.3718e-02],
          [-1.0127e+00, -3.1885e-01, -2.6123e-01,  ...,  6.6846e-01,  1.4639e+00,  1.5938e+00]],

         [[ 9.0771e-01,  8.2324e-01, -1.0107e+00,  ...,  5.5518e-01, -1.1494e+00, -6.5869e-01],
          [-4.0259e-01,  1.5747e-01,  1.0381e+00,  ..., -6.7773e-01, -1.2979e+00, -3.7231e-01],
          [-2.2290e-01, -1.0901e-01,  1.2891e+00,  ...,  1.7334e-01,  1.9946e-01,  3.1104e-01],
          ...,
          [ 2.2324e+00, -4.6582e-01,  6.1768e-01,  ..., -2.5366e-01,  5.8203e-01, -5.6543e-01],
          [ 2.5537e-01, -1.2051e+00, -3.1738e-02,  ...,  8.3496e-02, -9.2920e-01,  4.5093e-01],
          [-1.1787e+00, -1.7395e-01, -2.9810e-01,  ..., -1.0303e+00, -9.3567e-02, -8.5327e-02]],

         ...,

         [[ 4.9896e-03, -9.9707e-01, -3.0502e-02,  ..., -1.2500e+00,  3.1812e-01, -1.0195e+00],
          [ 1.1289e+00, -4.0869e-01, -4.7461e-01,  ...,  1.0840e+00,  6.6895e-01,  1.0315e-01],
          [-1.0742e-01, -1.2725e+00, -5.4785e-01,  ...,  1.0596e+00,  1.6589e-01, -6.8457e-01],
          ...,
          [-1.8076e+00, -1.7383e-01,  1.1963e+00,  ..., -2.1936e-01,  1.2891e+00,  9.8975e-01],
          [-1.4854e+00, -2.0508e-02, -3.4766e-01,  ...,  4.0747e-01,  1.0605e+00, -3.2471e-01],
          [-2.4463e-01, -1.8408e-01,  9.4336e-01,  ..., -3.0908e-01,  1.1455e+00,  1.6904e+00]],

         [[ 2.2400e-01, -2.3450e-01, -4.8633e-01,  ...,  6.6345e-02,  1.1053e-01,  1.1514e+00],
          [ 6.4307e-01,  1.4365e+00,  1.7944e-01,  ...,  9.0430e-01,  4.6167e-01,  4.7314e-01],
          [-1.3945e+00,  6.8262e-01, -8.0371e-01,  ...,  2.0195e+00,  4.0161e-01,  2.8784e-01],
          ...,
          [ 7.5928e-02,  3.7500e-01, -7.2949e-01,  ...,  9.8340e-01, -7.7576e-02, -3.2690e-01],
          [-1.3550e-01,  1.6025e+00, -5.3125e-01,  ...,  7.6953e-01,  9.5410e-01,  2.9712e-01],
          [ 5.8350e-01,  1.5391e+00,  2.7954e-01,  ..., -1.6101e-01, -2.1167e-01,  1.3799e+00]],

         [[ 5.1904e-01,  1.5615e+00,  2.9053e-01,  ..., -7.0117e-01, -1.0332e+00,  1.8579e-01],
          [ 2.4268e-01, -6.0205e-01,  1.1787e+00,  ...,  1.4050e-01,  7.3547e-02,  1.3779e+00],
          [ 1.5417e-01, -1.3281e-01,  3.6963e-01,  ...,  1.3994e+00,  2.5732e-01,  1.7324e+00],
          ...,
          [ 1.7310e-01, -4.6143e-01, -4.0186e-01,  ..., -8.5303e-01, -8.7305e-01,  4.1211e-01],
          [-1.3623e+00, -1.6855e+00,  1.3306e-02,  ..., -8.1104e-01,  5.5756e-02,  1.8030e-01],
          [ 7.1289e-01,  4.3262e-01, -9.8694e-02,  ...,  1.1865e-01,  1.2805e-01,  2.2205e-01]]],


        [[[ 1.6736e-01,  8.9258e-01,  9.4141e-01,  ...,  4.5190e-01, -6.9092e-02, -1.3701e+00],
          [-8.5754e-02, -9.5752e-01, -1.2854e-01,  ..., -2.4512e-01,  1.1016e+00, -1.3757e-01],
          [-1.3367e-01, -5.0000e-01, -5.2783e-01,  ...,  5.1318e-01,  7.6599e-02,  8.1982e-01],
          ...,
          [-5.1544e-02,  7.8613e-02, -9.3848e-01,  ..., -5.2539e-01,  2.4744e-01,  3.4009e-01],
          [ 6.6113e-01,  2.1167e-01, -2.0020e-01,  ...,  6.5002e-02, -5.6299e-01,  1.3379e+00],
          [-2.6050e-01,  4.5142e-01,  5.4004e-01,  ..., -1.5271e-01, -1.8982e-01, -3.4570e-01]],

         [[-1.1504e+00, -7.7100e-01, -8.1543e-01,  ..., -4.5435e-01, -4.2212e-01,  1.5332e+00],
          [ 3.0981e-01,  9.1504e-01, -5.1367e-01,  ..., -2.3816e-01,  8.2910e-01,  4.5013e-03],
          [-9.8633e-01, -1.0654e+00, -1.0635e+00,  ...,  3.2288e-02, -9.0576e-02, -8.9502e-01],
          ...,
          [-1.6101e-01, -1.2900e+00,  1.7554e-01,  ...,  1.1981e-01,  7.8735e-02,  1.0907e-01],
          [-6.8066e-01,  1.1853e-01,  2.9565e-01,  ...,  6.9727e-01,  3.9331e-01, -1.7603e-01],
          [ 1.1289e+00,  5.7764e-01,  2.8345e-01,  ..., -2.8687e-01, -3.5742e-01, -5.5078e-01]],

         [[-5.0049e-01,  8.8135e-01, -2.9419e-01,  ..., -8.7695e-01, -9.7900e-02,  7.7246e-01],
          [-2.3975e-01, -1.4414e+00, -8.4424e-01,  ...,  5.8203e-01,  1.2793e+00, -1.7810e-01],
          [ 7.2510e-01, -6.0498e-01, -6.3818e-01,  ..., -4.4995e-01, -2.2266e-01,  4.7437e-01],
          ...,
          [-7.3486e-01, -6.6943e-01,  3.2153e-01,  ...,  3.6938e-01, -3.4717e-01,  1.9629e-01],
          [-8.9551e-01,  1.1543e+00,  1.0430e+00,  ..., -2.0547e+00, -9.8926e-01,  1.1133e+00],
          [-8.2227e-01, -1.1191e+00, -4.1089e-01,  ..., -1.9707e+00, -1.7371e-01, -1.2683e-01]],

         ...,

         [[-2.3267e-01, -6.3843e-02,  6.4258e-01,  ..., -7.2479e-03, -7.2754e-01,  2.7734e-01],
          [-1.2188e+00, -3.3960e-01,  3.2275e-01,  ...,  1.5186e-01, -4.6362e-01, -1.6523e+00],
          [-9.2529e-01, -1.8420e-01,  2.6343e-01,  ..., -1.0410e+00, -5.4053e-01, -9.5557e-01],
          ...,
          [-2.7954e-01,  6.1279e-01, -1.5674e-01,  ...,  4.9023e-01, -4.6045e-01, -2.3125e+00],
          [ 1.9570e+00, -2.9810e-01,  2.8540e-01,  ...,  3.0933e-01, -8.4766e-01, -1.2695e+00],
          [ 1.0527e+00, -1.4883e+00,  7.7539e-01,  ..., -1.2539e+00, -5.0293e-01, -5.0732e-01]],

         [[-3.4473e-01,  8.6572e-01,  2.0288e-01,  ..., -2.1313e-01,  3.2007e-01, -7.6111e-02],
          [-1.6760e-01,  5.3516e-01,  1.4844e+00,  ...,  8.7354e-01,  8.8379e-01,  9.7314e-01],
          [ 4.3604e-01,  7.5537e-01,  6.6992e-01,  ...,  2.1069e-01,  3.6938e-01, -7.9688e-01],
          ...,
          [-8.6731e-02,  3.9819e-01, -5.8823e-03,  ..., -8.8867e-02, -6.9824e-01, -1.3574e+00],
          [ 4.4653e-01, -2.7222e-01, -7.6611e-01,  ...,  3.2422e-01,  2.3804e-01, -3.1934e-01],
          [-6.7627e-01, -5.8398e-01, -1.1230e+00,  ..., -3.8770e-01, -4.2529e-01,  4.5093e-01]],

         [[-7.4365e-01,  9.4824e-01,  2.1094e-01,  ..., -1.6367e+00, -6.5039e-01,  1.3740e+00],
          [-1.0752e+00,  2.5131e-02,  5.9082e-01,  ..., -5.1660e-01,  1.1914e-01,  2.2217e-01],
          [ 2.5049e-01,  5.7495e-02,  8.2178e-01,  ...,  9.4775e-01, -3.8867e-01,  6.7688e-02],
          ...,
          [ 1.3496e+00,  3.5962e-01, -6.6357e-01,  ..., -7.4341e-02,  4.7705e-01, -8.3447e-01],
          [ 8.7207e-01,  8.7354e-01,  2.3816e-01,  ...,  8.4082e-01,  1.1709e+00, -5.1514e-01],
          [-9.3872e-02,  5.9131e-01, -1.1260e+00,  ...,  2.0056e-01, -4.0088e-01,  2.2339e-01]]],


        [[[-5.7800e-02, -1.3770e+00, -1.4575e-01,  ..., -8.3984e-01,  8.4167e-02,  7.5732e-01],
          [-1.0449e-01, -1.4758e-01,  1.0925e-01,  ..., -8.0615e-01,  7.6709e-01,  8.5303e-01],
          [-6.6064e-01, -5.0635e-01,  3.6240e-03,  ..., -1.9275e-01, -4.3213e-01, -8.0225e-01],
          ...,
          [-8.1885e-01,  1.2480e+00, -3.2715e-02,  ...,  3.1274e-01, -1.0223e-01, -5.1709e-01],
          [-6.7383e-01,  2.4072e-01, -9.0820e-01,  ..., -2.9419e-01,  1.7664e-01,  3.4912e-01],
          [-1.2041e+00, -1.3245e-01, -8.5840e-01,  ..., -1.3721e-01,  5.6201e-01,  1.4990e-01]],

         [[-1.1953e+00, -1.4883e+00, -2.6465e+00,  ..., -1.4258e-01, -2.1797e+00, -1.4775e+00],
          [ 1.4990e-01,  8.3301e-01,  4.4037e-02,  ..., -1.5635e+00,  3.1555e-02,  1.7731e-02],
          [-7.8516e-01,  3.9160e-01,  1.3096e+00,  ..., -3.2080e-01,  1.3564e+00,  9.7217e-01],
          ...,
          [-1.0137e+00, -1.6321e-01, -1.7749e-01,  ..., -4.2871e-01, -5.5029e-01,  5.7526e-02],
          [-5.4443e-01, -3.8013e-01, -1.0957e+00,  ...,  1.8916e+00,  5.0781e-01,  1.3232e-01],
          [-2.3657e-01, -3.3887e-01,  1.8604e-01,  ..., -1.7432e+00, -4.6631e-01, -1.0376e-01]],

         [[-6.6602e-01, -7.1655e-02, -8.9600e-01,  ...,  6.4160e-01,  5.3223e-01,  6.1279e-01],
          [ 7.7539e-01, -9.6008e-02,  1.9946e-01,  ..., -1.8188e-01,  4.2212e-01, -7.8857e-02],
          [-1.5527e-01, -4.2896e-01,  1.1664e-01,  ...,  3.8574e-01, -9.5459e-02, -1.1299e+00],
          ...,
          [-3.2616e-03, -1.3369e+00, -1.9543e-01,  ..., -1.3066e+00,  6.7676e-01, -2.7679e-02],
          [ 5.7324e-01, -1.1396e+00,  6.0974e-02,  ..., -1.0859e+00, -2.8809e-01, -1.3750e+00],
          [-8.6304e-02, -6.6406e-01, -1.5906e-01,  ..., -7.5635e-01, -9.2529e-02,  6.4160e-01]],

         ...,

         [[-1.1328e+00,  1.3196e-01, -1.3293e-01,  ..., -4.3701e-01, -1.6870e-01,  1.4141e+00],
          [ 4.9414e-01,  2.2778e-01,  6.0010e-01,  ..., -4.5044e-01,  2.0703e-01,  2.9373e-02],
          [ 2.5513e-01,  1.1299e+00,  2.2715e+00,  ...,  6.3171e-02,  1.5198e-01,  1.1646e-01],
          ...,
          [ 1.9082e+00,  2.2827e-02,  1.0029e+00,  ..., -2.5464e-01,  5.9296e-02,  5.2979e-01],
          [ 1.5176e+00,  5.6934e-01,  1.2158e-01,  ...,  1.4463e+00, -7.3682e-01, -2.0905e-03],
          [ 1.4971e+00,  4.9561e-02, -2.0137e+00,  ..., -5.3369e-01, -8.3057e-01, -9.2041e-01]],

         [[-1.1895e+00, -2.8149e-01, -6.2622e-02,  ..., -6.7627e-02, -1.4038e-01, -3.3643e-01],
          [-1.2432e+00, -3.0651e-03,  6.5430e-01,  ..., -3.0371e-01,  8.0518e-01, -6.4795e-01],
          [ 6.6147e-03,  1.7456e-01, -4.5215e-01,  ...,  8.3643e-01,  7.2021e-01, -5.6580e-02],
          ...,
          [-9.4055e-02, -2.1992e+00,  2.4182e-01,  ..., -2.9297e-01, -1.6602e-01,  1.2822e+00],
          [-1.3831e-01, -5.9570e-01,  1.1670e+00,  ..., -8.9502e-01, -7.2363e-01, -9.7754e-01],
          [ 9.1211e-01,  4.9957e-02,  1.1172e+00,  ..., -6.6699e-01, -1.0801e+00, -3.6792e-01]],

         [[-3.9185e-01, -1.0322e+00, -1.0137e+00,  ..., -6.8848e-02,  1.1621e+00,  2.8418e-01],
          [-7.7783e-01, -2.1985e-01, -4.7656e-01,  ...,  2.1582e-01,  3.0273e-01, -6.7139e-01],
          [ 9.2651e-02, -4.0186e-01,  1.0498e+00,  ..., -4.7168e-01,  9.0088e-01, -1.4629e+00],
          ...,
          [-3.8892e-01,  8.3447e-01,  8.2959e-01,  ...,  2.2485e-01,  9.8145e-01, -5.2734e-01],
          [-5.0537e-01, -2.5342e-01,  6.1475e-01,  ..., -1.9836e-01, -8.3789e-01, -7.9736e-01],
          [ 8.3008e-01, -4.2676e-01,  3.0811e-01,  ..., -9.5703e-01, -1.0039e+00, -3.3545e-01]]],


        [[[ 1.0645e+00,  4.5312e-01, -6.0596e-01,  ...,  1.4392e-01, -1.7395e-01,  1.1348e+00],
          [ 1.1084e+00,  1.7834e-01,  1.3123e-01,  ...,  5.9277e-01,  1.0947e+00,  5.9473e-01],
          [ 2.2949e-01,  3.4351e-01,  1.5723e+00,  ..., -9.8242e-01,  2.7905e-01, -7.5391e-01],
          ...,
          [-5.3772e-02,  1.5820e-01,  4.1675e-01,  ...,  1.3477e+00, -3.8989e-01, -1.3809e+00],
          [-7.4170e-01, -7.1924e-01, -9.6289e-01,  ..., -3.0762e-01,  2.6587e-01, -2.7051e-01],
          [-1.9014e+00,  2.8955e-01,  1.2073e-01,  ...,  1.3613e+00,  5.5566e-01,  9.3994e-01]],

         [[-2.9004e-01,  1.2886e-02, -2.6416e-01,  ..., -2.3950e-01, -7.9834e-01, -1.6577e-01],
          [ 1.8223e+00,  1.1250e+00,  5.7520e-01,  ...,  1.3184e-01, -1.2197e+00, -6.5088e-01],
          [ 1.5459e+00,  1.0674e+00,  2.6245e-01,  ..., -5.6104e-01, -1.0332e+00,  7.5342e-01],
          ...,
          [ 9.7754e-01,  3.1982e-01,  6.3672e-01,  ..., -2.8857e-01, -8.2129e-01,  5.9863e-01],
          [-3.2568e-01, -1.1367e+00, -1.2080e+00,  ..., -1.2480e+00, -7.3193e-01,  1.2695e-01],
          [-1.1504e+00, -1.0278e-01,  7.1094e-01,  ..., -1.1230e+00, -1.7070e+00, -4.3115e-01]],

         [[-5.6104e-01, -5.0830e-01, -5.2002e-01,  ..., -9.7412e-01, -5.2490e-01,  3.8916e-01],
          [ 5.3857e-01, -1.7949e+00,  6.8018e-01,  ..., -1.3174e+00, -6.6162e-01, -1.0332e+00],
          [-1.0498e+00, -7.4121e-01,  1.8018e-01,  ..., -4.4653e-01,  7.0984e-02, -3.2690e-01],
          ...,
          [-1.4148e-01,  1.4870e-02,  1.2412e+00,  ...,  3.8135e-01,  1.5222e-01, -7.9053e-01],
          [-5.7373e-01,  3.5706e-02,  6.9971e-01,  ...,  8.8037e-01,  1.7422e+00, -3.1421e-01],
          [ 1.7383e-01, -2.8149e-01, -7.2070e-01,  ..., -1.1826e+00,  3.3862e-01,  8.3838e-01]],

         ...,

         [[ 1.8811e-01,  5.6104e-01, -7.4707e-02,  ...,  4.5630e-01,  8.5107e-01,  1.5100e-01],
          [ 3.8818e-01,  5.4248e-01,  8.2129e-01,  ...,  2.4438e-01,  4.4702e-01, -5.6396e-01],
          [-2.3169e-01,  4.6204e-02,  3.8605e-02,  ...,  6.7871e-01,  1.1699e+00,  6.5498e-03],
          ...,
          [-7.0166e-01,  1.4209e-01, -4.4434e-01,  ..., -5.6543e-01,  1.0391e+00,  1.5430e+00],
          [ 2.0776e-01, -8.3887e-01, -4.1968e-01,  ...,  3.8971e-02,  1.2021e+00,  1.3369e+00],
          [ 9.4678e-01,  4.5923e-01, -2.5684e-01,  ..., -8.4668e-01,  4.2407e-01,  7.0117e-01]],

         [[ 4.4702e-01, -5.4590e-01,  1.5771e+00,  ..., -2.9248e-01, -5.9235e-02, -2.2637e+00],
          [-1.8970e-01, -3.4912e-01, -6.9885e-02,  ...,  7.7759e-02, -1.7617e+00, -4.6582e-01],
          [-6.6748e-01, -4.6118e-01, -8.6426e-01,  ...,  8.9453e-01, -1.6711e-01, -7.3047e-01],
          ...,
          [ 1.4844e+00,  8.6279e-01,  1.2256e-01,  ..., -4.0503e-01, -1.1650e+00,  8.9417e-02],
          [ 1.5244e+00,  2.6147e-01,  9.1748e-01,  ..., -6.0547e-01, -6.4355e-01,  4.6631e-01],
          [-1.2129e+00, -6.5576e-01,  5.0732e-01,  ..., -5.5371e-01,  5.6946e-02,  2.9077e-01]],

         [[-2.9834e-01, -4.2310e-01,  8.8440e-02,  ..., -4.1504e-01, -1.4307e+00,  4.6069e-01],
          [-6.7920e-01, -6.4746e-01,  9.7803e-01,  ..., -9.8877e-01, -1.6504e+00, -1.9910e-01],
          [-4.0283e-01, -1.1975e-01,  4.8193e-01,  ...,  1.1621e+00,  1.2061e+00,  8.4082e-01],
          ...,
          [-5.1367e-01, -3.2642e-01,  2.4475e-01,  ...,  2.5317e-01,  8.8318e-02,  5.8447e-01],
          [-1.0420e+00,  6.7383e-01,  1.0625e+00,  ...,  8.8086e-01,  3.1079e-01,  2.0032e-01],
          [-1.5173e-01,  9.6664e-03, -5.7922e-02,  ...,  9.4922e-01,  6.1914e-01,  1.3428e+00]]]], dtype=torch.float16)
DESIRED: (shape=torch.Size([4, 19, 128, 256]), dtype=torch.float16)
tensor([[[[-2.0630e-01,  5.6580e-02,  2.4941e+00,  ...,  2.0361e-01,  3.9844e-01,  1.4180e+00],
          [ 3.7329e-01,  3.5791e-01, -2.0813e-01,  ...,  4.3042e-01, -1.2578e+00,  3.9917e-01],
          [ 5.7959e-01,  9.2969e-01, -1.4258e-01,  ..., -1.4172e-01, -3.2642e-01, -7.4414e-01],
          ...,
          [-9.9548e-02, -4.9365e-01,  6.8506e-01,  ..., -7.1436e-01, -2.8711e-01, -1.2715e+00],
          [ 6.3037e-01, -5.7080e-01, -3.1934e-01,  ...,  9.0869e-01, -1.1631e+00, -8.0469e-01],
          [-8.0469e-01, -1.0674e+00,  7.0679e-02,  ...,  5.4590e-01, -1.9324e-01,  5.9619e-01]],

         [[ 5.3497e-02,  3.1250e-01,  4.2334e-01,  ...,  8.9941e-01, -5.5420e-01, -8.4570e-01],
          [ 2.2583e-02,  7.2656e-01,  1.2822e+00,  ..., -5.1025e-02,  2.8320e-01, -6.5918e-01],
          [ 6.9971e-01,  2.6660e-01, -1.3354e-01,  ..., -1.6113e-02,  3.0420e-01, -4.7314e-01],
          ...,
          [-6.2354e-01, -6.5088e-01,  4.4482e-01,  ..., -6.3916e-01,  1.0117e+00,  1.7393e+00],
          [-1.1201e+00, -7.8564e-01, -3.6133e-01,  ..., -7.7832e-01, -6.8848e-01,  1.5129e-02],
          [-1.0273e+00, -3.2324e-01, -2.6416e-01,  ...,  6.7725e-01,  1.4756e+00,  1.6074e+00]],

         [[ 9.1406e-01,  8.3057e-01, -1.0234e+00,  ...,  5.6641e-01, -1.1621e+00, -6.6650e-01],
          [-4.0381e-01,  1.5906e-01,  1.0469e+00,  ..., -6.8701e-01, -1.3125e+00, -3.7549e-01],
          [-2.2888e-01, -1.0864e-01,  1.3057e+00,  ...,  1.7798e-01,  2.0264e-01,  3.1348e-01],
          ...,
          [ 2.2559e+00, -4.6948e-01,  6.2549e-01,  ..., -2.5659e-01,  5.8740e-01, -5.7275e-01],
          [ 2.6221e-01, -1.2197e+00, -3.4790e-02,  ...,  8.4656e-02, -9.3945e-01,  4.5728e-01],
          [-1.1875e+00, -1.7920e-01, -2.9785e-01,  ..., -1.0381e+00, -9.4116e-02, -8.5266e-02]],

         ...,

         [[ 3.0823e-03, -1.0098e+00, -3.0396e-02,  ..., -1.2656e+00,  3.2129e-01, -1.0322e+00],
          [ 1.1436e+00, -4.1089e-01, -4.7827e-01,  ...,  1.0947e+00,  6.7578e-01,  1.0492e-01],
          [-1.0815e-01, -1.2871e+00, -5.5713e-01,  ...,  1.0674e+00,  1.6699e-01, -6.9092e-01],
          ...,
          [-1.8232e+00, -1.7700e-01,  1.2129e+00,  ..., -2.2083e-01,  1.3066e+00,  1.0000e+00],
          [-1.4980e+00, -1.9501e-02, -3.5010e-01,  ...,  4.1162e-01,  1.0664e+00, -3.2764e-01],
          [-2.4731e-01, -1.8872e-01,  9.4336e-01,  ..., -3.1372e-01,  1.1631e+00,  1.7051e+00]],

         [[ 2.2766e-01, -2.3584e-01, -4.9268e-01,  ...,  6.1401e-02,  1.1011e-01,  1.1689e+00],
          [ 6.4893e-01,  1.4482e+00,  1.8176e-01,  ...,  9.1113e-01,  4.6631e-01,  4.7705e-01],
          [-1.4102e+00,  6.9238e-01, -8.1104e-01,  ...,  2.0410e+00,  4.0820e-01,  2.9175e-01],
          ...,
          [ 7.5317e-02,  3.7964e-01, -7.3975e-01,  ...,  1.0010e+00, -8.1177e-02, -3.2935e-01],
          [-1.3611e-01,  1.6172e+00, -5.3516e-01,  ...,  7.7490e-01,  9.5801e-01,  2.9639e-01],
          [ 5.8545e-01,  1.5508e+00,  2.7832e-01,  ..., -1.6138e-01, -2.1130e-01,  1.3906e+00]],

         [[ 5.1904e-01,  1.5762e+00,  2.9199e-01,  ..., -7.0752e-01, -1.0459e+00,  1.8994e-01],
          [ 2.4780e-01, -6.0596e-01,  1.1973e+00,  ...,  1.4062e-01,  7.1167e-02,  1.3867e+00],
          [ 1.5527e-01, -1.3428e-01,  3.7280e-01,  ...,  1.4141e+00,  2.5879e-01,  1.7549e+00],
          ...,
          [ 1.7664e-01, -4.6411e-01, -4.0356e-01,  ..., -8.5986e-01, -8.7988e-01,  4.1528e-01],
          [-1.3740e+00, -1.7041e+00,  9.1553e-03,  ..., -8.2129e-01,  5.2979e-02,  1.8066e-01],
          [ 7.1582e-01,  4.2871e-01, -9.3750e-02,  ...,  1.2329e-01,  1.3135e-01,  2.3120e-01]]],


        [[[ 1.6650e-01,  8.9990e-01,  9.5068e-01,  ...,  4.6118e-01, -7.2266e-02, -1.3848e+00],
          [-8.4656e-02, -9.6387e-01, -1.3159e-01,  ..., -2.5195e-01,  1.1143e+00, -1.4136e-01],
          [-1.3367e-01, -5.0488e-01, -5.3320e-01,  ...,  5.2295e-01,  7.7454e-02,  8.2275e-01],
          ...,
          [-5.1666e-02,  7.7454e-02, -9.4678e-01,  ..., -5.2979e-01,  2.5098e-01,  3.4521e-01],
          [ 6.6309e-01,  2.1558e-01, -2.0349e-01,  ...,  6.7627e-02, -5.6592e-01,  1.3545e+00],
          [-2.6001e-01,  4.5508e-01,  5.4297e-01,  ..., -1.5710e-01, -2.0142e-01, -3.4448e-01]],

         [[-1.1611e+00, -7.8027e-01, -8.1738e-01,  ..., -4.5752e-01, -4.2529e-01,  1.5527e+00],
          [ 3.1128e-01,  9.2773e-01, -5.1660e-01,  ..., -2.4451e-01,  8.3496e-01,  7.9346e-04],
          [-9.9561e-01, -1.0801e+00, -1.0771e+00,  ...,  3.4363e-02, -8.9600e-02, -8.9648e-01],
          ...,
          [-1.6174e-01, -1.3086e+00,  1.7139e-01,  ...,  1.1993e-01,  8.1421e-02,  1.1011e-01],
          [-6.9141e-01,  1.1682e-01,  2.9980e-01,  ...,  7.0703e-01,  3.9551e-01, -1.7920e-01],
          [ 1.1348e+00,  5.8545e-01,  2.8467e-01,  ..., -2.8418e-01, -3.5425e-01, -5.4980e-01]],

         [[-5.0391e-01,  8.9160e-01, -2.9785e-01,  ..., -8.8574e-01, -9.9548e-02,  7.8271e-01],
          [-2.4292e-01, -1.4541e+00, -8.4961e-01,  ...,  5.8691e-01,  1.2939e+00, -1.7944e-01],
          [ 7.3047e-01, -6.1572e-01, -6.4600e-01,  ..., -4.5605e-01, -2.2168e-01,  4.8169e-01],
          ...,
          [-7.4023e-01, -6.7871e-01,  3.2349e-01,  ...,  3.7354e-01, -3.5303e-01,  1.9397e-01],
          [-8.9893e-01,  1.1680e+00,  1.0537e+00,  ..., -2.0742e+00, -1.0010e+00,  1.1279e+00],
          [-8.3643e-01, -1.1260e+00, -4.0991e-01,  ..., -1.9961e+00, -1.7529e-01, -1.2610e-01]],

         ...,

         [[-2.3303e-01, -6.5613e-02,  6.4453e-01,  ..., -1.2146e-02, -7.3535e-01,  2.8198e-01],
          [-1.2305e+00, -3.4106e-01,  3.3252e-01,  ...,  1.5405e-01, -4.6777e-01, -1.6699e+00],
          [-9.3066e-01, -1.8628e-01,  2.6416e-01,  ..., -1.0518e+00, -5.4883e-01, -9.7021e-01],
          ...,
          [-2.8540e-01,  6.1768e-01, -1.5967e-01,  ...,  4.9268e-01, -4.6411e-01, -2.3418e+00],
          [ 1.9678e+00, -2.9590e-01,  2.9053e-01,  ...,  3.1836e-01, -8.5498e-01, -1.2871e+00],
          [ 1.0615e+00, -1.5098e+00,  7.8125e-01,  ..., -1.2646e+00, -5.0928e-01, -5.1318e-01]],

         [[-3.4863e-01,  8.8086e-01,  2.0166e-01,  ..., -2.1790e-01,  3.2446e-01, -8.3801e-02],
          [-1.6797e-01,  5.3955e-01,  1.4990e+00,  ...,  8.8281e-01,  8.9160e-01,  9.9121e-01],
          [ 4.3750e-01,  7.6221e-01,  6.7480e-01,  ...,  2.1265e-01,  3.7500e-01, -8.0762e-01],
          ...,
          [-8.8135e-02,  3.9722e-01, -6.5918e-03,  ..., -9.2346e-02, -7.0752e-01, -1.3740e+00],
          [ 4.5142e-01, -2.7148e-01, -7.7393e-01,  ...,  3.3105e-01,  2.4365e-01, -3.2471e-01],
          [-6.7920e-01, -5.9668e-01, -1.1367e+00,  ..., -3.8965e-01, -4.3555e-01,  4.5532e-01]],

         [[-7.4707e-01,  9.5508e-01,  2.1484e-01,  ..., -1.6543e+00, -6.6504e-01,  1.3906e+00],
          [-1.0859e+00,  2.6306e-02,  5.9717e-01,  ..., -5.2344e-01,  1.2433e-01,  2.2327e-01],
          [ 2.5269e-01,  5.3589e-02,  8.2764e-01,  ...,  9.5605e-01, -3.9624e-01,  7.1228e-02],
          ...,
          [ 1.3564e+00,  3.5913e-01, -6.7090e-01,  ..., -7.5317e-02,  4.7925e-01, -8.4033e-01],
          [ 8.7939e-01,  8.8477e-01,  2.3853e-01,  ...,  8.4766e-01,  1.1914e+00, -5.2051e-01],
          [-9.2468e-02,  5.9570e-01, -1.1270e+00,  ...,  2.0398e-01, -4.0234e-01,  2.2205e-01]]],


        [[[-6.1584e-02, -1.3965e+00, -1.4746e-01,  ..., -8.4814e-01,  8.3862e-02,  7.6660e-01],
          [-1.0297e-01, -1.4636e-01,  1.1053e-01,  ..., -8.1299e-01,  7.7393e-01,  8.5986e-01],
          [-6.6992e-01, -5.1514e-01,  5.4932e-04,  ..., -1.9458e-01, -4.3384e-01, -8.0713e-01],
          ...,
          [-8.2422e-01,  1.2666e+00, -3.1494e-02,  ...,  3.1470e-01, -1.0236e-01, -5.2295e-01],
          [-6.7920e-01,  2.4255e-01, -9.1553e-01,  ..., -2.9663e-01,  1.7664e-01,  3.4985e-01],
          [-1.2139e+00, -1.3306e-01, -8.6914e-01,  ..., -1.4050e-01,  5.6543e-01,  1.5210e-01]],

         [[-1.2070e+00, -1.5107e+00, -2.6738e+00,  ..., -1.4050e-01, -2.2031e+00, -1.4932e+00],
          [ 1.4917e-01,  8.4180e-01,  3.4912e-02,  ..., -1.5781e+00,  2.8290e-02,  1.6846e-02],
          [-7.8906e-01,  3.9771e-01,  1.3301e+00,  ..., -3.2520e-01,  1.3662e+00,  9.7852e-01],
          ...,
          [-1.0225e+00, -1.6309e-01, -1.7676e-01,  ..., -4.3945e-01, -5.5713e-01,  5.7983e-02],
          [-5.4736e-01, -3.8574e-01, -1.1113e+00,  ...,  1.9131e+00,  5.1465e-01,  1.3342e-01],
          [-2.4084e-01, -3.4131e-01,  1.8579e-01,  ..., -1.7461e+00, -4.7046e-01, -1.0510e-01]],

         [[-6.7139e-01, -7.2876e-02, -9.0625e-01,  ...,  6.5234e-01,  5.3418e-01,  6.2012e-01],
          [ 7.8076e-01, -9.5825e-02,  2.0166e-01,  ..., -1.8555e-01,  4.2529e-01, -7.8613e-02],
          [-1.5662e-01, -4.3848e-01,  1.1639e-01,  ...,  3.9087e-01, -9.4727e-02, -1.1445e+00],
          ...,
          [-4.7607e-03, -1.3545e+00, -2.0117e-01,  ..., -1.3242e+00,  6.8701e-01, -2.1912e-02],
          [ 5.7812e-01, -1.1523e+00,  6.1401e-02,  ..., -1.0996e+00, -2.9541e-01, -1.3965e+00],
          [-8.8257e-02, -6.7627e-01, -1.6016e-01,  ..., -7.6465e-01, -8.7952e-02,  6.4404e-01]],

         ...,

         [[-1.1445e+00,  1.2830e-01, -1.3196e-01,  ..., -4.4067e-01, -1.7078e-01,  1.4248e+00],
          [ 4.9927e-01,  2.3059e-01,  6.0156e-01,  ..., -4.5605e-01,  2.0691e-01,  2.8259e-02],
          [ 2.5586e-01,  1.1445e+00,  2.2930e+00,  ...,  6.2866e-02,  1.5540e-01,  1.2061e-01],
          ...,
          [ 1.9170e+00,  2.3438e-02,  1.0137e+00,  ..., -2.6221e-01,  6.0547e-02,  5.3271e-01],
          [ 1.5352e+00,  5.7227e-01,  1.2695e-01,  ...,  1.4639e+00, -7.4268e-01,  2.5330e-03],
          [ 1.5068e+00,  5.1361e-02, -2.0312e+00,  ..., -5.4004e-01, -8.3447e-01, -9.2627e-01]],

         [[-1.1963e+00, -2.8491e-01, -7.1045e-02,  ..., -6.6101e-02, -1.4209e-01, -3.4131e-01],
          [-1.2588e+00, -3.7842e-03,  6.6846e-01,  ..., -3.0737e-01,  8.1299e-01, -6.5088e-01],
          [ 6.8054e-03,  1.7456e-01, -4.5605e-01,  ...,  8.4180e-01,  7.2412e-01, -5.9235e-02],
          ...,
          [-9.4238e-02, -2.2324e+00,  2.4414e-01,  ..., -2.9736e-01, -1.6724e-01,  1.3018e+00],
          [-1.3806e-01, -6.0645e-01,  1.1797e+00,  ..., -9.0137e-01, -7.3242e-01, -9.8633e-01],
          [ 9.1699e-01,  4.8950e-02,  1.1260e+00,  ..., -6.8164e-01, -1.0879e+00, -3.6890e-01]],

         [[-3.9453e-01, -1.0449e+00, -1.0225e+00,  ..., -7.0557e-02,  1.1777e+00,  2.9004e-01],
          [-7.8467e-01, -2.2302e-01, -4.8584e-01,  ...,  2.1997e-01,  3.0640e-01, -6.7969e-01],
          [ 8.9966e-02, -4.0723e-01,  1.0586e+00,  ..., -4.7510e-01,  9.0918e-01, -1.4756e+00],
          ...,
          [-3.9282e-01,  8.4326e-01,  8.3838e-01,  ...,  2.2583e-01,  9.9512e-01, -5.2783e-01],
          [-5.1172e-01, -2.5488e-01,  6.1768e-01,  ..., -2.0068e-01, -8.4326e-01, -8.0762e-01],
          [ 8.3545e-01, -4.2432e-01,  3.1201e-01,  ..., -9.6045e-01, -1.0186e+00, -3.4180e-01]]],


        [[[ 1.0742e+00,  4.5776e-01, -6.1084e-01,  ...,  1.4209e-01, -1.7651e-01,  1.1465e+00],
          [ 1.1133e+00,  1.7932e-01,  1.2988e-01,  ...,  6.0010e-01,  1.1064e+00,  6.0400e-01],
          [ 2.3523e-01,  3.4814e-01,  1.5830e+00,  ..., -9.8975e-01,  2.8491e-01, -7.5537e-01],
          ...,
          [-5.3955e-02,  1.5747e-01,  4.2090e-01,  ...,  1.3672e+00, -3.9185e-01, -1.3975e+00],
          [-7.4609e-01, -7.2510e-01, -9.7021e-01,  ..., -3.1201e-01,  2.7100e-01, -2.7441e-01],
          [-1.9150e+00,  2.8784e-01,  1.2054e-01,  ...,  1.3701e+00,  5.5615e-01,  9.4434e-01]],

         [[-2.9248e-01,  9.5215e-03, -2.6807e-01,  ..., -2.4414e-01, -8.0518e-01, -1.6455e-01],
          [ 1.8320e+00,  1.1357e+00,  5.8398e-01,  ...,  1.3757e-01, -1.2314e+00, -6.6260e-01],
          [ 1.5586e+00,  1.0811e+00,  2.6685e-01,  ..., -5.6738e-01, -1.0459e+00,  7.6123e-01],
          ...,
          [ 9.8047e-01,  3.2104e-01,  6.4844e-01,  ..., -2.8418e-01, -8.3057e-01,  6.0352e-01],
          [-3.2178e-01, -1.1484e+00, -1.2256e+00,  ..., -1.2637e+00, -7.3584e-01,  1.3147e-01],
          [-1.1572e+00, -1.0583e-01,  7.1680e-01,  ..., -1.1328e+00, -1.7246e+00, -4.4263e-01]],

         [[-5.6494e-01, -5.0488e-01, -5.2686e-01,  ..., -9.8242e-01, -5.3271e-01,  3.9380e-01],
          [ 5.4248e-01, -1.8135e+00,  6.8799e-01,  ..., -1.3320e+00, -6.6748e-01, -1.0439e+00],
          [-1.0547e+00, -7.4609e-01,  1.8115e-01,  ..., -4.5312e-01,  6.7993e-02, -3.3105e-01],
          ...,
          [-1.4233e-01,  1.7670e-02,  1.2568e+00,  ...,  3.8477e-01,  1.5137e-01, -8.0322e-01],
          [-5.7959e-01,  3.5828e-02,  7.0898e-01,  ...,  8.8916e-01,  1.7559e+00, -3.1689e-01],
          [ 1.7749e-01, -2.8516e-01, -7.2461e-01,  ..., -1.1895e+00,  3.4082e-01,  8.4326e-01]],

         ...,

         [[ 1.8921e-01,  5.6836e-01, -7.8613e-02,  ...,  4.6118e-01,  8.5840e-01,  1.5479e-01],
          [ 3.9111e-01,  5.4785e-01,  8.2715e-01,  ...,  2.4731e-01,  4.5093e-01, -5.7178e-01],
          [-2.3242e-01,  4.8645e-02,  3.9276e-02,  ...,  6.8945e-01,  1.1797e+00,  8.1482e-03],
          ...,
          [-7.0898e-01,  1.4526e-01, -4.5215e-01,  ..., -5.7178e-01,  1.0488e+00,  1.5635e+00],
          [ 2.0984e-01, -8.4766e-01, -4.2334e-01,  ...,  3.7964e-02,  1.2139e+00,  1.3516e+00],
          [ 9.5117e-01,  4.6216e-01, -2.6025e-01,  ..., -8.5156e-01,  4.3237e-01,  7.1826e-01]],

         [[ 4.4946e-01, -5.5664e-01,  1.5938e+00,  ..., -2.9297e-01, -5.6152e-02, -2.2910e+00],
          [-1.9165e-01, -3.5596e-01, -6.8481e-02,  ...,  8.0505e-02, -1.7773e+00, -4.7485e-01],
          [-6.6797e-01, -4.6240e-01, -8.7207e-01,  ...,  8.9795e-01, -1.7224e-01, -7.3242e-01],
          ...,
          [ 1.5010e+00,  8.7061e-01,  1.2451e-01,  ..., -4.0991e-01, -1.1807e+00,  8.7708e-02],
          [ 1.5410e+00,  2.6782e-01,  9.2432e-01,  ..., -6.1377e-01, -6.5039e-01,  4.6924e-01],
          [-1.2188e+00, -6.6016e-01,  5.1709e-01,  ..., -5.6396e-01,  5.5206e-02,  3.0200e-01]],

         [[-2.9883e-01, -4.2358e-01,  8.8562e-02,  ..., -4.1553e-01, -1.4424e+00,  4.6533e-01],
          [-6.8359e-01, -6.5430e-01,  9.8828e-01,  ..., -1.0049e+00, -1.6709e+00, -2.0349e-01],
          [-4.0723e-01, -1.2415e-01,  4.8486e-01,  ...,  1.1797e+00,  1.2178e+00,  8.5449e-01],
          ...,
          [-5.1709e-01, -3.3081e-01,  2.4487e-01,  ...,  2.6099e-01,  9.1187e-02,  5.8838e-01],
          [-1.0547e+00,  6.7725e-01,  1.0801e+00,  ...,  8.7988e-01,  3.1055e-01,  2.0544e-01],
          [-1.5088e-01,  1.7166e-02, -5.6885e-02,  ...,  9.6338e-01,  6.2793e-01,  1.3516e+00]]]], dtype=torch.float16)

2025-06-10 00:13:32.590950 GPU 5 156012 test begin: paddle.nn.functional.interpolate(Tensor([4, 19, 256, 256],"float16"), list[1024,1024,], mode="bilinear", align_corners=False, )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([4, 19, 256, 256],"float16"), list[1024,1024,], mode="bilinear", align_corners=False, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 12944 / 4980736 (0.3%)
Greatest absolute difference: 0.05078125 at index (0, 17, 138, 104) (up to 0.01 allowed)
Greatest relative difference: 6.70703125 at index (2, 18, 132, 249) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([4, 19, 256, 256]), dtype=torch.float16)
tensor([[[[-1.0754e-01,  2.5244e-01,  3.0685e-02,  ..., -1.0732e+00,  7.3242e-02, -1.0898e+00],
          [-5.2295e-01, -9.8755e-02, -8.3984e-01,  ...,  9.3262e-02,  8.5693e-01,  2.7734e-01],
          [-1.1292e-01, -6.7871e-01,  8.6475e-01,  ..., -5.0488e-01,  1.4961e+00, -4.2236e-02],
          ...,
          [ 8.6670e-02, -7.6025e-01,  5.7220e-02,  ..., -1.4197e-01, -3.7305e-01, -4.2651e-01],
          [-9.0967e-01, -1.0361e+00, -8.2520e-01,  ..., -1.3586e-01,  6.6455e-01,  5.0488e-01],
          [ 6.4648e-01, -1.0684e+00, -1.7002e+00,  ..., -1.5537e+00, -7.9980e-01, -4.8047e-01]],

         [[ 9.6826e-01, -5.2979e-01,  2.5171e-01,  ...,  2.3975e-01, -3.6743e-02, -1.0371e+00],
          [ 6.8164e-01,  1.7029e-01,  9.4971e-01,  ..., -1.4575e-01,  7.6855e-01, -5.5225e-01],
          [-9.1797e-01, -1.2589e-03,  7.8418e-01,  ...,  4.0210e-01,  3.8379e-01,  9.4482e-01],
          ...,
          [ 4.7729e-01,  6.1377e-01,  1.5955e-01,  ...,  2.0557e-01,  6.6406e-02, -1.4062e-01],
          [ 1.0553e-01, -6.0107e-01,  3.2324e-01,  ..., -1.0391e+00,  7.7979e-01,  8.0664e-01],
          [-3.2654e-02,  1.1660e+00,  1.6836e+00,  ..., -1.9541e+00,  8.2715e-01,  3.8501e-01]],

         [[-9.8828e-01, -9.4727e-02,  2.6929e-01,  ..., -6.8311e-01, -1.5259e-01, -8.9551e-01],
          [-5.6592e-01,  3.4760e-02,  1.2720e-01,  ...,  6.6748e-01, -1.1689e+00,  1.4492e+00],
          [-2.7808e-01, -7.7197e-01,  1.7896e-01,  ...,  4.2822e-01, -1.2354e+00,  5.8301e-01],
          ...,
          [-1.6577e-01,  2.3877e-01,  1.6919e-01,  ...,  1.1465e+00,  5.1367e-01,  1.9031e-01],
          [ 1.2266e+00,  1.2070e+00,  1.3076e+00,  ...,  1.0850e+00,  2.5708e-01,  6.3525e-01],
          [-1.8135e+00,  2.6392e-01,  1.1289e+00,  ..., -9.1602e-01, -9.7607e-01,  9.1553e-02]],

         ...,

         [[ 1.1924e+00,  4.3530e-01,  5.7764e-01,  ...,  1.6094e+00, -2.5952e-01,  3.3789e-01],
          [-3.1250e-01,  2.6904e-01,  6.0547e-01,  ...,  5.5371e-01, -2.8491e-01,  6.7334e-01],
          [ 1.6785e-01,  1.0049e+00,  4.9829e-01,  ...,  6.0986e-01,  3.7671e-01,  5.1660e-01],
          ...,
          [-1.0410e+00, -3.3838e-01,  1.6162e+00,  ...,  9.3701e-01, -9.9561e-01,  7.2510e-01],
          [-6.9092e-02,  5.1562e-01,  8.1494e-01,  ..., -1.4619e+00, -1.4648e+00,  5.8496e-01],
          [-7.7197e-01, -8.6426e-01,  1.0967e+00,  ...,  4.8169e-01, -7.3584e-01, -3.3374e-01]],

         [[-9.4141e-01, -4.7729e-01, -1.0752e+00,  ..., -4.1040e-01, -8.6279e-01,  5.1611e-01],
          [ 1.1094e+00, -2.0020e-01, -6.7627e-01,  ...,  1.0469e+00, -4.1040e-01,  4.5776e-01],
          [ 3.8745e-01, -4.0112e-01,  3.0933e-01,  ...,  4.6924e-01, -8.6475e-01, -5.1123e-01],
          ...,
          [-2.9358e-02,  8.4033e-01,  5.3986e-02,  ..., -3.2422e-01,  3.4814e-01, -7.3975e-01],
          [ 1.2451e+00, -2.6929e-01,  2.2168e-01,  ..., -9.5337e-02, -8.4180e-01,  2.9736e-01],
          [ 1.3760e+00, -9.6436e-01,  3.6792e-01,  ...,  1.2871e+00,  3.3081e-01, -6.3843e-02]],

         [[-1.8848e+00, -2.3254e-01, -1.7051e+00,  ..., -5.6445e-01,  6.0303e-01, -3.6450e-01],
          [ 1.2451e+00,  1.9268e+00, -1.8311e-01,  ..., -9.7168e-01, -1.7639e-01,  2.2485e-01],
          [ 1.6836e+00, -2.1301e-01,  2.3633e-01,  ...,  5.1849e-02,  5.2393e-01, -1.7881e+00],
          ...,
          [-1.7715e+00,  3.4009e-01, -1.4375e+00,  ..., -1.7539e+00, -6.9275e-02,  6.0059e-01],
          [-1.2656e+00, -5.5145e-02, -9.3164e-01,  ...,  2.2964e-02, -9.8877e-01, -4.9121e-01],
          [-4.7266e-01, -1.1367e+00, -1.1755e-01,  ..., -3.5645e-01, -4.3921e-01,  1.1426e+00]]],


        [[[ 6.1279e-01, -9.0869e-01, -1.5527e+00,  ..., -1.5625e+00,  3.9478e-01, -8.1348e-01],
          [-1.7749e-01, -1.2188e+00, -5.5273e-01,  ..., -1.0352e+00,  2.6025e-01,  8.9307e-01],
          [-8.4619e-01, -1.4443e+00, -4.0869e-01,  ..., -1.1641e+00,  4.1699e-01, -1.0742e+00],
          ...,
          [-1.7468e-01, -9.2920e-01,  1.1279e-01,  ...,  6.8457e-01,  2.0276e-01, -5.4639e-01],
          [-1.0205e+00, -1.2588e+00, -4.5990e-02,  ..., -1.0089e-01,  2.8687e-01, -4.2261e-01],
          [ 3.7207e-01, -1.7847e-01,  2.1887e-01,  ..., -7.9980e-01, -1.2148e+00, -1.1074e+00]],

         [[-2.9175e-01, -6.8701e-01, -6.0938e-01,  ..., -3.9282e-01, -1.1846e+00, -5.5762e-01],
          [-6.4502e-01, -1.4893e-01, -1.0928e+00,  ...,  9.9548e-02,  8.7646e-01,  1.2952e-01],
          [-7.5098e-01,  3.1763e-01, -7.5146e-01,  ..., -3.1525e-02,  1.0225e+00,  5.9235e-02],
          ...,
          [-1.1221e+00,  6.9385e-01,  3.2373e-01,  ...,  1.4668e+00, -1.8701e-01,  3.3374e-01],
          [ 5.5176e-01,  1.1074e+00,  5.6201e-01,  ...,  1.2878e-01, -1.6924e+00, -6.4307e-01],
          [ 5.6104e-01,  7.2363e-01,  7.0068e-02,  ..., -2.0664e+00, -2.4395e+00, -2.1069e-01]],

         [[-1.0205e+00, -9.2676e-01, -4.2090e-01,  ...,  6.6699e-01,  8.9905e-02, -4.7559e-01],
          [-3.6865e-01,  3.0396e-01,  1.5527e-01,  ..., -4.2285e-01, -1.2656e+00, -1.7285e+00],
          [-3.9429e-01, -1.3501e-01, -1.1523e-01,  ...,  9.9561e-01,  8.8184e-01,  1.9421e-01],
          ...,
          [-1.3271e+00, -2.7734e-01, -9.3408e-01,  ...,  5.9033e-01,  1.6504e-01,  7.4219e-01],
          [-1.0869e+00, -4.5947e-01, -8.2568e-01,  ..., -6.5674e-01, -5.1074e-01,  9.8730e-01],
          [ 3.7402e-01, -9.9023e-01,  1.0781e+00,  ..., -1.0137e+00, -8.1604e-02, -3.4814e-01]],

         ...,

         [[ 3.4521e-01, -4.0942e-01, -1.3311e+00,  ..., -3.6084e-01, -1.5127e+00,  1.6138e-01],
          [ 8.4000e-03, -6.8164e-01, -4.9854e-01,  ...,  2.2791e-01,  8.2666e-01, -7.4023e-01],
          [ 1.1240e+00,  1.4758e-01,  6.8848e-01,  ..., -7.1582e-01, -6.4844e-01, -1.2480e+00],
          ...,
          [-8.2031e-01,  1.7920e+00,  4.1016e-01,  ..., -2.7393e-01,  1.3994e+00,  3.5010e-01],
          [-1.0303e-01,  6.7773e-01, -5.6946e-02,  ...,  3.2812e-01,  1.4023e+00, -6.0986e-01],
          [-6.9092e-01,  7.6141e-03,  2.0752e-02,  ...,  6.8408e-01, -8.4326e-01, -1.6611e+00]],

         [[-3.7329e-01,  1.2598e-01,  6.8741e-03,  ..., -4.5020e-01, -3.0960e-02, -1.8188e-01],
          [ 1.3257e-01,  1.1445e+00,  1.0352e+00,  ..., -7.3145e-01,  4.6094e-01, -9.3604e-01],
          [ 2.7954e-01,  3.7085e-01,  8.5400e-01,  ..., -7.3779e-01,  7.8906e-01, -1.6541e-01],
          ...,
          [-1.4248e+00, -1.5898e+00, -1.2041e+00,  ..., -8.8916e-01, -4.9268e-01,  8.5156e-01],
          [-9.3311e-01,  9.7461e-01,  6.7090e-01,  ..., -5.5762e-01,  3.8940e-01,  8.5840e-01],
          [-9.6680e-01, -1.6523e+00,  4.8364e-01,  ...,  1.8516e+00,  1.6094e+00,  1.0918e+00]],

         [[ 5.2338e-02, -2.7637e-01, -2.0715e-01,  ..., -4.6936e-02, -9.5166e-01,  8.8135e-01],
          [ 6.2012e-01, -3.7061e-01, -2.6343e-01,  ...,  6.3660e-02, -3.2129e-01, -1.9409e-01],
          [-6.1670e-01, -7.1655e-02, -6.5137e-01,  ...,  1.1016e+00,  7.3730e-02,  2.8442e-01],
          ...,
          [-9.7949e-01, -1.0859e+00, -1.6370e-01,  ...,  2.5024e-01,  6.1279e-01,  5.2979e-01],
          [-1.9983e-01,  6.6748e-01,  1.4092e+00,  ...,  7.9834e-01, -7.4219e-01,  5.6641e-01],
          [ 6.3379e-01,  3.8135e-01,  3.6938e-01,  ...,  5.0293e-01, -3.6108e-01,  7.4609e-01]]],


        [[[-4.2310e-01, -1.2256e-01,  4.8859e-02,  ..., -1.4209e-01, -3.0713e-01,  1.1914e+00],
          [ 5.1855e-01,  5.8105e-01,  9.0527e-01,  ..., -1.0345e-01, -1.0566e+00,  5.2539e-01],
          [ 6.4453e-02,  5.7764e-01, -5.9375e-01,  ...,  8.3691e-01,  1.4541e+00,  3.3008e+00],
          ...,
          [-1.7930e+00, -1.3293e-01, -2.1899e-01,  ..., -3.8672e-01, -9.9335e-03, -1.2090e+00],
          [-9.6680e-01, -1.2842e+00, -9.7949e-01,  ..., -1.2817e-01, -2.0605e-01, -8.6523e-01],
          [ 1.0469e+00,  1.6143e+00, -2.6392e-01,  ...,  1.8518e-01,  1.0645e+00, -1.7314e+00]],

         [[-2.6953e-01,  9.0527e-01,  1.1152e+00,  ..., -3.0444e-01, -1.1143e+00, -2.3193e-01],
          [-1.1240e+00,  1.2725e+00,  1.4414e+00,  ..., -5.6396e-01,  1.5417e-01, -5.1953e-01],
          [ 2.4829e-01,  5.5371e-01, -2.1191e-01,  ...,  5.3027e-01,  2.5537e-01, -1.2031e+00],
          ...,
          [ 4.1943e-01,  1.0742e+00, -1.7786e-01,  ..., -1.2158e+00, -4.0308e-01, -1.9821e-02],
          [ 1.4863e+00,  2.2188e+00, -1.5503e-01,  ...,  1.0557e+00,  9.1504e-01,  1.1855e+00],
          [ 2.4590e+00,  1.9863e+00, -1.2617e+00,  ...,  9.6094e-01,  1.6982e+00,  1.1924e+00]],

         [[ 3.7744e-01, -3.1030e-01,  3.3783e-02,  ...,  3.6621e-01, -2.4258e+00, -1.1250e+00],
          [-7.5342e-01, -2.6221e-01, -3.5425e-01,  ...,  2.6538e-01, -1.4189e+00, -1.6250e+00],
          [-2.0581e-01, -3.9526e-01, -5.5322e-01,  ...,  1.8721e+00, -1.6248e-01, -8.4619e-01],
          ...,
          [-6.5576e-01, -6.9678e-01,  7.8906e-01,  ...,  6.6797e-01,  4.7852e-01, -5.4590e-01],
          [-5.1660e-01, -4.6417e-02, -3.1421e-01,  ...,  6.2061e-01,  5.0732e-01,  9.8572e-02],
          [ 7.8613e-01,  1.8672e+00, -1.3340e+00,  ...,  3.7915e-01, -1.4441e-01, -6.5857e-02]],

         ...,

         [[-1.8506e-01,  2.3865e-01,  1.2494e-01,  ..., -7.2021e-01, -7.5146e-01, -9.3750e-01],
          [ 1.7468e-01,  6.7627e-01, -4.7949e-01,  ..., -5.7520e-01,  3.3740e-01,  4.4678e-01],
          [ 1.2598e+00,  1.5615e+00,  9.2969e-01,  ..., -4.6240e-01,  1.8689e-01,  5.0391e-01],
          ...,
          [ 7.4561e-01,  4.1968e-01,  4.4409e-01,  ...,  4.7192e-01,  7.3364e-02, -4.3304e-02],
          [ 1.0645e+00, -4.7705e-01, -3.7744e-01,  ...,  6.2988e-01,  1.2539e+00, -1.0266e-01],
          [-3.7781e-02, -5.9357e-02, -2.8857e-01,  ..., -5.0391e-01,  6.6553e-01,  8.2422e-01]],

         [[-1.4619e+00, -9.9609e-01, -8.2080e-01,  ..., -6.2988e-01,  1.0345e-01, -5.1514e-01],
          [-7.4854e-01, -9.0918e-01,  3.5059e-01,  ...,  2.0776e-01,  1.0518e+00, -1.0059e+00],
          [-2.9248e-01,  7.8223e-01,  9.8193e-01,  ...,  1.1094e+00,  5.9912e-01, -1.6865e+00],
          ...,
          [ 3.4106e-01,  2.6611e-01,  1.3008e+00,  ..., -8.2178e-01, -4.0771e-01, -1.3931e-02],
          [-1.6760e-01,  2.9099e-02, -6.4355e-01,  ..., -1.5173e-01,  1.9556e-01,  6.1096e-02],
          [ 1.1191e+00,  5.6104e-01, -1.3008e+00,  ..., -4.6692e-02,  2.2803e-01,  5.3174e-01]],

         [[-1.1074e+00,  8.7842e-01,  8.8037e-01,  ...,  8.3301e-01, -1.3115e+00, -4.2871e-01],
          [ 5.9131e-01, -1.0479e+00,  1.7314e+00,  ..., -4.7729e-02, -9.3079e-02, -5.2783e-01],
          [ 6.4014e-01, -6.9434e-01,  1.4307e+00,  ...,  5.7129e-01, -8.9014e-01, -2.2778e-01],
          ...,
          [ 2.4628e-02,  6.3672e-01, -1.1338e+00,  ..., -6.0449e-01, -7.2900e-01, -6.0364e-02],
          [ 7.1729e-01,  1.9250e-01, -8.2959e-01,  ..., -6.8018e-01, -1.3047e+00, -1.0312e+00],
          [ 1.4121e+00, -9.3018e-01,  9.6863e-02,  ..., -8.8928e-02, -8.6475e-01,  8.3154e-01]]],


        [[[ 6.1432e-02, -7.9736e-01, -1.2683e-01,  ..., -2.4033e-02,  1.3457e+00, -3.8159e-01],
          [-4.1290e-02, -8.0078e-01, -3.5962e-01,  ...,  2.7295e-01, -5.3662e-01, -1.2783e+00],
          [ 8.1970e-02, -3.4943e-02, -3.0713e-01,  ...,  2.2449e-01, -4.4141e-01, -1.3641e-02],
          ...,
          [ 9.9756e-01,  6.6406e-01,  1.0098e+00,  ..., -4.3652e-01, -1.2246e+00, -1.0767e-01],
          [ 1.4619e+00,  2.5000e-01,  1.6212e-03,  ..., -2.8784e-01, -2.7573e-02, -1.5107e+00],
          [ 4.1473e-02,  7.6318e-01,  5.7422e-01,  ..., -6.2158e-01, -8.1787e-02,  2.4463e-01]],

         [[-2.4329e-01,  1.2852e+00, -8.7769e-02,  ..., -4.2725e-02, -5.6494e-01,  3.7622e-01],
          [ 2.0471e-01, -4.7021e-01, -6.3477e-01,  ..., -9.6130e-02, -3.4839e-01, -7.9004e-01],
          [-3.6621e-01, -4.1650e-01, -1.9336e-01,  ...,  9.5654e-01,  1.0371e+00,  6.5527e-01],
          ...,
          [ 1.1533e+00,  5.5542e-02,  5.7764e-01,  ...,  1.1133e+00, -6.6260e-01,  3.7695e-01],
          [ 4.5654e-01,  1.0840e+00,  4.3237e-01,  ..., -2.4805e+00, -2.7441e-01,  1.1250e+00],
          [ 3.5815e-01,  6.4697e-01,  1.6914e+00,  ..., -1.8770e+00,  9.8340e-01,  7.6660e-01]],

         [[-6.6467e-02,  3.4937e-01, -3.3276e-01,  ..., -1.2021e+00, -8.0615e-01, -1.2334e+00],
          [-2.3706e-01, -3.5303e-01,  2.8244e-02,  ...,  2.1863e-01, -9.3567e-02, -3.1226e-01],
          [-8.2703e-03, -9.9707e-01, -8.6182e-02,  ...,  4.4092e-01,  1.8591e-01,  1.0388e-01],
          ...,
          [-8.2910e-01,  5.1660e-01,  3.1201e-01,  ...,  5.1074e-01,  9.9365e-01, -2.1252e-01],
          [-5.9668e-01, -1.3318e-01,  2.9565e-01,  ...,  8.6133e-01,  3.5132e-01, -2.2400e-02],
          [-5.4541e-01,  9.4055e-02,  6.3574e-01,  ...,  1.1143e+00,  2.4915e-01,  1.5420e+00]],

         ...,

         [[-3.5736e-02, -7.0215e-01,  6.3281e-01,  ..., -5.1270e-01,  1.9983e-01, -1.4099e-01],
          [ 8.2568e-01, -8.2764e-01, -9.0381e-01,  ...,  1.0195e+00, -1.3818e-01,  5.1514e-01],
          [ 1.0492e-01, -1.3057e+00, -7.7051e-01,  ...,  2.3352e-01, -5.3613e-01, -7.8906e-01],
          ...,
          [ 8.4570e-01,  2.7881e-01,  1.3711e+00,  ...,  1.8347e-01,  1.0439e+00, -9.1260e-01],
          [ 4.9805e-02, -1.6772e-01, -1.5198e-01,  ...,  1.3955e+00,  1.0706e-01,  1.1318e+00],
          [-1.0713e+00, -1.9006e-01, -1.6826e+00,  ...,  6.6455e-01,  5.1758e-01,  1.3643e+00]],

         [[-9.9548e-02, -1.4014e+00, -4.5190e-01,  ...,  1.9561e+00,  2.1826e-01,  2.6318e-01],
          [ 1.1627e-01, -3.5522e-01, -7.3730e-01,  ...,  4.4128e-02,  9.5459e-01,  8.0615e-01],
          [ 1.2871e+00,  7.6904e-01, -9.4629e-01,  ...,  1.7932e-01,  4.1455e-01,  1.0293e+00],
          ...,
          [-5.7526e-02,  1.4624e-01,  9.0479e-01,  ...,  7.5635e-01, -2.8613e-01, -1.8594e+00],
          [-9.8730e-01,  1.3940e-01,  9.6436e-01,  ...,  1.2012e+00,  7.6562e-01, -6.8164e-01],
          [ 5.6671e-02, -9.0234e-01,  9.1064e-01,  ...,  8.7549e-01,  4.3970e-01, -2.2485e-01]],

         [[-7.7881e-02, -2.9858e-01, -1.0410e+00,  ..., -9.7559e-01,  6.9775e-01, -1.3486e+00],
          [-1.0908e+00, -1.1738e+00, -3.7695e-01,  ...,  2.4826e-02, -1.0791e+00, -3.1860e-01],
          [ 1.6711e-01, -1.3418e+00, -1.6191e+00,  ...,  1.7422e+00,  4.5483e-01, -1.2793e+00],
          ...,
          [-1.3213e+00, -1.6846e+00, -8.9502e-01,  ..., -9.4452e-03,  1.5759e-01, -1.1855e+00],
          [ 5.0537e-01, -3.5352e-01, -9.3799e-01,  ..., -2.7954e-01,  1.8506e-01,  6.1328e-01],
          [-1.9775e+00, -1.3457e+00, -1.0400e+00,  ..., -1.6113e-01, -1.0225e+00,  3.0542e-01]]]], dtype=torch.float16)
DESIRED: (shape=torch.Size([4, 19, 256, 256]), dtype=torch.float16)
tensor([[[[-1.0992e-01,  2.5269e-01,  3.0518e-02,  ..., -1.0840e+00,  7.1533e-02, -1.1074e+00],
          [-5.2783e-01, -9.3262e-02, -8.4863e-01,  ...,  9.1064e-02,  8.6328e-01,  2.8101e-01],
          [-1.1743e-01, -6.8555e-01,  8.7305e-01,  ..., -5.0732e-01,  1.5117e+00, -4.4830e-02],
          ...,
          [ 8.8989e-02, -7.6855e-01,  5.7617e-02,  ..., -1.4404e-01, -3.7842e-01, -4.3384e-01],
          [-9.1895e-01, -1.0488e+00, -8.3057e-01,  ..., -1.3794e-01,  6.7236e-01,  5.1172e-01],
          [ 6.5576e-01, -1.0693e+00, -1.7148e+00,  ..., -1.5625e+00, -8.0371e-01, -4.8267e-01]],

         [[ 9.7656e-01, -5.3418e-01,  2.5293e-01,  ...,  2.4060e-01, -4.0649e-02, -1.0469e+00],
          [ 6.8750e-01,  1.7322e-01,  9.5996e-01,  ..., -1.4697e-01,  7.7881e-01, -5.6104e-01],
          [-9.2627e-01, -2.4567e-03,  7.9004e-01,  ...,  4.0674e-01,  3.8843e-01,  9.5605e-01],
          ...,
          [ 4.7949e-01,  6.2158e-01,  1.6321e-01,  ...,  2.0825e-01,  6.5063e-02, -1.4233e-01],
          [ 1.0852e-01, -6.0986e-01,  3.2935e-01,  ..., -1.0449e+00,  7.8760e-01,  8.1104e-01],
          [-3.2898e-02,  1.1738e+00,  1.6904e+00,  ..., -1.9883e+00,  8.3643e-01,  3.8892e-01]],

         [[-9.9707e-01, -9.3384e-02,  2.7588e-01,  ..., -6.9287e-01, -1.5210e-01, -9.0674e-01],
          [-5.7129e-01,  3.6987e-02,  1.2659e-01,  ...,  6.7432e-01, -1.1807e+00,  1.4668e+00],
          [-2.8052e-01, -7.8125e-01,  1.8188e-01,  ...,  4.3311e-01, -1.2461e+00,  5.8887e-01],
          ...,
          [-1.7139e-01,  2.4207e-01,  1.7065e-01,  ...,  1.1562e+00,  5.1221e-01,  1.9678e-01],
          [ 1.2402e+00,  1.2246e+00,  1.3223e+00,  ...,  1.1104e+00,  2.6538e-01,  6.3818e-01],
          [-1.8232e+00,  2.6416e-01,  1.1484e+00,  ..., -9.2822e-01, -9.8145e-01,  9.2529e-02]],

         ...,

         [[ 1.2021e+00,  4.4238e-01,  5.8496e-01,  ...,  1.6240e+00, -2.5879e-01,  3.4302e-01],
          [-3.1421e-01,  2.6709e-01,  6.1133e-01,  ...,  5.6152e-01, -2.8955e-01,  6.8018e-01],
          [ 1.6919e-01,  1.0127e+00,  5.0537e-01,  ...,  6.1719e-01,  3.8110e-01,  5.2100e-01],
          ...,
          [-1.0527e+00, -3.4253e-01,  1.6279e+00,  ...,  9.4727e-01, -1.0029e+00,  7.3438e-01],
          [-7.0374e-02,  5.2246e-01,  8.2031e-01,  ..., -1.4766e+00, -1.4834e+00,  5.9082e-01],
          [-7.7637e-01, -8.7549e-01,  1.1143e+00,  ...,  4.7656e-01, -7.4609e-01, -3.3545e-01]],

         [[-9.4873e-01, -4.8169e-01, -1.0840e+00,  ..., -4.1431e-01, -8.7451e-01,  5.2393e-01],
          [ 1.1152e+00, -2.0361e-01, -6.8457e-01,  ...,  1.0566e+00, -4.1162e-01,  4.6118e-01],
          [ 3.9502e-01, -4.0430e-01,  3.1274e-01,  ...,  4.7363e-01, -8.7354e-01, -5.1562e-01],
          ...,
          [-3.0823e-02,  8.4912e-01,  5.5328e-02,  ..., -3.2715e-01,  3.5107e-01, -7.4854e-01],
          [ 1.2539e+00, -2.6831e-01,  2.2412e-01,  ..., -9.8511e-02, -8.4863e-01,  2.9956e-01],
          [ 1.3896e+00, -9.7266e-01,  3.7158e-01,  ...,  1.3027e+00,  3.2910e-01, -6.3354e-02]],

         [[-1.9014e+00, -2.3523e-01, -1.7207e+00,  ..., -5.6689e-01,  6.1133e-01, -3.6743e-01],
          [ 1.2559e+00,  1.9414e+00, -1.9141e-01,  ..., -9.8535e-01, -1.8005e-01,  2.2485e-01],
          [ 1.6953e+00, -2.0898e-01,  2.4133e-01,  ...,  5.2124e-02,  5.2881e-01, -1.7979e+00],
          ...,
          [-1.7881e+00,  3.4326e-01, -1.4502e+00,  ..., -1.7803e+00, -6.7017e-02,  6.0596e-01],
          [-1.2773e+00, -5.6519e-02, -9.4629e-01,  ...,  2.1423e-02, -9.9756e-01, -4.9219e-01],
          [-4.7534e-01, -1.1465e+00, -1.1603e-01,  ..., -3.5425e-01, -4.5410e-01,  1.1455e+00]]],


        [[[ 6.1865e-01, -9.1846e-01, -1.5684e+00,  ..., -1.5801e+00,  3.9844e-01, -8.2324e-01],
          [-1.7883e-01, -1.2314e+00, -5.5811e-01,  ..., -1.0459e+00,  2.6074e-01,  8.9893e-01],
          [-8.5400e-01, -1.4600e+00, -4.1138e-01,  ..., -1.1768e+00,  4.1943e-01, -1.0820e+00],
          ...,
          [-1.7578e-01, -9.3506e-01,  1.1249e-01,  ...,  6.9043e-01,  2.0105e-01, -5.5566e-01],
          [-1.0312e+00, -1.2764e+00, -4.7791e-02,  ..., -9.8755e-02,  2.9102e-01, -4.2310e-01],
          [ 3.7207e-01, -1.8286e-01,  2.2119e-01,  ..., -8.0762e-01, -1.2227e+00, -1.1162e+00]],

         [[-2.9199e-01, -6.9238e-01, -6.1621e-01,  ..., -3.9746e-01, -1.2041e+00, -5.6543e-01],
          [-6.4990e-01, -1.5503e-01, -1.1035e+00,  ...,  1.0242e-01,  8.8574e-01,  1.3171e-01],
          [-7.5830e-01,  3.2080e-01, -7.6123e-01,  ..., -3.0930e-02,  1.0352e+00,  6.2500e-02],
          ...,
          [-1.1396e+00,  6.9824e-01,  3.2568e-01,  ...,  1.4785e+00, -1.8762e-01,  3.4082e-01],
          [ 5.5762e-01,  1.1211e+00,  5.7324e-01,  ...,  1.3428e-01, -1.7031e+00, -6.5479e-01],
          [ 5.6201e-01,  7.3242e-01,  7.3975e-02,  ..., -2.0859e+00, -2.4570e+00, -2.1216e-01]],

         [[-1.0322e+00, -9.4043e-01, -4.2725e-01,  ...,  6.8018e-01,  8.8867e-02, -4.7754e-01],
          [-3.7354e-01,  3.0371e-01,  1.5527e-01,  ..., -4.2627e-01, -1.2793e+00, -1.7490e+00],
          [-3.9795e-01, -1.3477e-01, -1.0962e-01,  ...,  1.0020e+00,  8.8623e-01,  1.9226e-01],
          ...,
          [-1.3379e+00, -2.7490e-01, -9.4189e-01,  ...,  5.9375e-01,  1.6650e-01,  7.4756e-01],
          [-1.0977e+00, -4.6631e-01, -8.3301e-01,  ..., -6.5918e-01, -5.1709e-01,  9.9902e-01],
          [ 3.7231e-01, -1.0029e+00,  1.0811e+00,  ..., -1.0332e+00, -8.2397e-02, -3.4766e-01]],

         ...,

         [[ 3.5181e-01, -4.1211e-01, -1.3477e+00,  ..., -3.6182e-01, -1.5342e+00,  1.6248e-01],
          [ 3.3970e-03, -6.9238e-01, -5.0830e-01,  ...,  2.2986e-01,  8.3447e-01, -7.4707e-01],
          [ 1.1377e+00,  1.4856e-01,  6.9824e-01,  ..., -7.2217e-01, -6.5430e-01, -1.2617e+00],
          ...,
          [-8.2764e-01,  1.8057e+00,  4.1699e-01,  ..., -2.7905e-01,  1.4072e+00,  3.5278e-01],
          [-1.0400e-01,  6.8848e-01, -5.8411e-02,  ...,  3.3081e-01,  1.4219e+00, -6.0986e-01],
          [-6.9189e-01,  1.0254e-02,  2.1057e-02,  ...,  6.9043e-01, -8.4717e-01, -1.6807e+00]],

         [[-3.7646e-01,  1.2378e-01,  5.3711e-03,  ..., -4.5605e-01, -3.4912e-02, -1.7896e-01],
          [ 1.3293e-01,  1.1631e+00,  1.0449e+00,  ..., -7.3828e-01,  4.6484e-01, -9.5068e-01],
          [ 2.8198e-01,  3.7500e-01,  8.6230e-01,  ..., -7.4316e-01,  7.9639e-01, -1.6663e-01],
          ...,
          [-1.4355e+00, -1.6074e+00, -1.2246e+00,  ..., -8.9746e-01, -4.9805e-01,  8.5449e-01],
          [-9.3652e-01,  9.8682e-01,  6.8164e-01,  ..., -5.6494e-01,  3.9209e-01,  8.6865e-01],
          [-9.7852e-01, -1.6641e+00,  4.8291e-01,  ...,  1.8594e+00,  1.6260e+00,  1.1006e+00]],

         [[ 5.0842e-02, -2.8442e-01, -2.1033e-01,  ..., -4.7485e-02, -9.5850e-01,  8.9453e-01],
          [ 6.2939e-01, -3.6890e-01, -2.6343e-01,  ...,  6.4209e-02, -3.2739e-01, -1.9702e-01],
          [-6.2207e-01, -7.6416e-02, -6.6309e-01,  ...,  1.1133e+00,  7.4951e-02,  2.8613e-01],
          ...,
          [-9.8730e-01, -1.1006e+00, -1.6736e-01,  ...,  2.5366e-01,  6.1768e-01,  5.3369e-01],
          [-2.0190e-01,  6.7139e-01,  1.4238e+00,  ...,  8.0615e-01, -7.5000e-01,  5.7617e-01],
          [ 6.3623e-01,  3.8281e-01,  3.7231e-01,  ...,  5.1270e-01, -3.6377e-01,  7.4707e-01]]],


        [[[-4.2676e-01, -1.2372e-01,  4.8279e-02,  ..., -1.4478e-01, -3.0859e-01,  1.2061e+00],
          [ 5.2295e-01,  5.8789e-01,  9.1846e-01,  ..., -1.0541e-01, -1.0732e+00,  5.2734e-01],
          [ 6.5979e-02,  5.8203e-01, -6.0303e-01,  ...,  8.4521e-01,  1.4648e+00,  3.3438e+00],
          ...,
          [-1.8037e+00, -1.3281e-01, -2.2180e-01,  ..., -3.9307e-01, -1.2451e-02, -1.2246e+00],
          [-9.8242e-01, -1.3008e+00, -9.9023e-01,  ..., -1.2585e-01, -2.0776e-01, -8.7158e-01],
          [ 1.0625e+00,  1.6328e+00, -2.6733e-01,  ...,  1.8311e-01,  1.0771e+00, -1.7490e+00]],

         [[-2.7295e-01,  9.1406e-01,  1.1309e+00,  ..., -3.0811e-01, -1.1338e+00, -2.3303e-01],
          [-1.1328e+00,  1.2842e+00,  1.4541e+00,  ..., -5.7178e-01,  1.5552e-01, -5.2344e-01],
          [ 2.4890e-01,  5.6201e-01, -2.0679e-01,  ...,  5.3613e-01,  2.5903e-01, -1.2197e+00],
          ...,
          [ 4.2285e-01,  1.0869e+00, -1.8079e-01,  ..., -1.2305e+00, -4.0674e-01, -1.6418e-02],
          [ 1.4941e+00,  2.2422e+00, -1.5417e-01,  ...,  1.0625e+00,  9.1943e-01,  1.1904e+00],
          [ 2.4844e+00,  2.0078e+00, -1.2715e+00,  ...,  9.7852e-01,  1.7148e+00,  1.2090e+00]],

         [[ 3.8013e-01, -3.1738e-01,  3.3997e-02,  ...,  3.7109e-01, -2.4551e+00, -1.1318e+00],
          [-7.5684e-01, -2.6270e-01, -3.5669e-01,  ...,  2.6660e-01, -1.4355e+00, -1.6455e+00],
          [-2.0923e-01, -4.0063e-01, -5.6738e-01,  ...,  1.8887e+00, -1.6504e-01, -8.5547e-01],
          ...,
          [-6.6357e-01, -6.9727e-01,  7.9785e-01,  ...,  6.7627e-01,  4.8169e-01, -5.5029e-01],
          [-5.2100e-01, -4.9683e-02, -3.1421e-01,  ...,  6.2158e-01,  5.1367e-01,  9.7107e-02],
          [ 7.8711e-01,  1.8838e+00, -1.3447e+00,  ...,  3.8721e-01, -1.4502e-01, -6.6406e-02]],

         ...,

         [[-1.8567e-01,  2.4036e-01,  1.2573e-01,  ..., -7.2559e-01, -7.6025e-01, -9.4238e-01],
          [ 1.7334e-01,  6.8359e-01, -4.8218e-01,  ..., -5.7959e-01,  3.3960e-01,  4.4849e-01],
          [ 1.2666e+00,  1.5781e+00,  9.3652e-01,  ..., -4.6753e-01,  1.8970e-01,  5.0635e-01],
          ...,
          [ 7.5146e-01,  4.2529e-01,  4.5264e-01,  ...,  4.7510e-01,  7.4097e-02, -4.1229e-02],
          [ 1.0752e+00, -4.8145e-01, -3.7915e-01,  ...,  6.4062e-01,  1.2627e+00, -1.0382e-01],
          [-3.9062e-02, -5.7373e-02, -2.9053e-01,  ..., -5.0732e-01,  6.7236e-01,  8.2910e-01]],

         [[-1.4707e+00, -1.0088e+00, -8.3740e-01,  ..., -6.3672e-01,  1.0559e-01, -5.1855e-01],
          [-7.5391e-01, -9.2188e-01,  3.5913e-01,  ...,  2.0703e-01,  1.0605e+00, -1.0156e+00],
          [-2.9395e-01,  7.8809e-01,  9.8633e-01,  ...,  1.1221e+00,  6.0840e-01, -1.6953e+00],
          ...,
          [ 3.4082e-01,  2.7002e-01,  1.3135e+00,  ..., -8.3203e-01, -4.0771e-01, -1.2428e-02],
          [-1.6687e-01,  2.8625e-02, -6.4844e-01,  ..., -1.5039e-01,  1.9360e-01,  5.9692e-02],
          [ 1.1240e+00,  5.6836e-01, -1.3066e+00,  ..., -4.8889e-02,  2.3010e-01,  5.3223e-01]],

         [[-1.1230e+00,  8.8770e-01,  8.8623e-01,  ...,  8.4424e-01, -1.3271e+00, -4.3384e-01],
          [ 5.9570e-01, -1.0605e+00,  1.7480e+00,  ..., -4.9805e-02, -9.5215e-02, -5.3320e-01],
          [ 6.4648e-01, -7.0361e-01,  1.4463e+00,  ...,  5.8301e-01, -8.9453e-01, -2.2925e-01],
          ...,
          [ 2.4353e-02,  6.4258e-01, -1.1436e+00,  ..., -6.1279e-01, -7.3730e-01, -6.0455e-02],
          [ 7.2119e-01,  1.9873e-01, -8.3887e-01,  ..., -6.8750e-01, -1.3223e+00, -1.0479e+00],
          [ 1.4189e+00, -9.4043e-01,  9.6191e-02,  ..., -9.5337e-02, -8.7305e-01,  8.3594e-01]]],


        [[[ 6.3660e-02, -8.0176e-01, -1.2622e-01,  ..., -2.7588e-02,  1.3662e+00, -3.7744e-01],
          [-4.2053e-02, -8.1152e-01, -3.6621e-01,  ...,  2.7783e-01, -5.3955e-01, -1.2949e+00],
          [ 8.2520e-02, -4.1992e-02, -3.0811e-01,  ...,  2.2510e-01, -4.4629e-01, -1.5076e-02],
          ...,
          [ 1.0059e+00,  6.6992e-01,  1.0166e+00,  ..., -4.4043e-01, -1.2373e+00, -1.0486e-01],
          [ 1.4785e+00,  2.5635e-01,  2.7161e-03,  ..., -2.9102e-01, -2.5940e-02, -1.5264e+00],
          [ 4.2419e-02,  7.6367e-01,  5.7861e-01,  ..., -6.2402e-01, -8.1665e-02,  2.4463e-01]],

         [[-2.4719e-01,  1.2988e+00, -8.7402e-02,  ..., -4.3579e-02, -5.7031e-01,  3.8281e-01],
          [ 2.0764e-01, -4.6826e-01, -6.4160e-01,  ..., -9.9121e-02, -3.5400e-01, -7.9736e-01],
          [-3.7012e-01, -4.2285e-01, -1.9604e-01,  ...,  9.6777e-01,  1.0469e+00,  6.6162e-01],
          ...,
          [ 1.1641e+00,  4.9683e-02,  5.8350e-01,  ...,  1.1309e+00, -6.7090e-01,  3.7622e-01],
          [ 4.5947e-01,  1.0957e+00,  4.3457e-01,  ..., -2.5098e+00, -2.7930e-01,  1.1387e+00],
          [ 3.5962e-01,  6.5674e-01,  1.7109e+00,  ..., -1.8965e+00,  9.8975e-01,  7.7393e-01]],

         [[-6.7932e-02,  3.5181e-01, -3.3594e-01,  ..., -1.2236e+00, -8.1494e-01, -1.2500e+00],
          [-2.3914e-01, -3.5498e-01,  2.7161e-02,  ...,  2.2095e-01, -9.9060e-02, -3.2056e-01],
          [-8.6975e-03, -1.0098e+00, -8.5571e-02,  ...,  4.4434e-01,  1.9177e-01,  1.0693e-01],
          ...,
          [-8.3398e-01,  5.2637e-01,  3.1494e-01,  ...,  5.2100e-01,  1.0049e+00, -2.1558e-01],
          [-6.0107e-01, -1.3550e-01,  2.9883e-01,  ...,  8.6572e-01,  3.5693e-01, -2.3575e-02],
          [-5.4639e-01,  9.8450e-02,  6.4111e-01,  ...,  1.1240e+00,  2.5171e-01,  1.5547e+00]],

         ...,

         [[-3.8025e-02, -7.1045e-01,  6.4111e-01,  ..., -5.2490e-01,  2.0349e-01, -1.3782e-01],
          [ 8.3594e-01, -8.3398e-01, -9.0869e-01,  ...,  1.0342e+00, -1.3892e-01,  5.2051e-01],
          [ 1.0675e-01, -1.3223e+00, -7.7734e-01,  ...,  2.3523e-01, -5.4102e-01, -7.9590e-01],
          ...,
          [ 8.5254e-01,  2.8076e-01,  1.3828e+00,  ...,  1.8555e-01,  1.0605e+00, -9.2480e-01],
          [ 5.2948e-02, -1.6589e-01, -1.5125e-01,  ...,  1.4033e+00,  1.0779e-01,  1.1455e+00],
          [-1.0801e+00, -1.9922e-01, -1.7012e+00,  ...,  6.6895e-01,  5.1953e-01,  1.3711e+00]],

         [[-1.0205e-01, -1.4170e+00, -4.5361e-01,  ...,  1.9736e+00,  2.2107e-01,  2.6733e-01],
          [ 1.1530e-01, -3.6133e-01, -7.4609e-01,  ...,  4.4678e-02,  9.6387e-01,  8.1055e-01],
          [ 1.2969e+00,  7.7539e-01, -9.6045e-01,  ...,  1.8152e-01,  4.2261e-01,  1.0439e+00],
          ...,
          [-5.5267e-02,  1.4526e-01,  9.1064e-01,  ...,  7.6123e-01, -2.9199e-01, -1.8750e+00],
          [-9.9756e-01,  1.4453e-01,  9.7363e-01,  ...,  1.2168e+00,  7.7588e-01, -6.9287e-01],
          [ 5.8136e-02, -9.1113e-01,  9.2090e-01,  ...,  8.8916e-01,  4.4165e-01, -2.2607e-01]],

         [[-7.7820e-02, -3.0103e-01, -1.0547e+00,  ..., -9.8584e-01,  7.0850e-01, -1.3701e+00],
          [-1.1006e+00, -1.1846e+00, -3.7793e-01,  ...,  2.2461e-02, -1.0928e+00, -3.2031e-01],
          [ 1.6675e-01, -1.3535e+00, -1.6387e+00,  ...,  1.7617e+00,  4.5801e-01, -1.2969e+00],
          ...,
          [-1.3359e+00, -1.6973e+00, -8.9990e-01,  ..., -9.6436e-03,  1.5894e-01, -1.2012e+00],
          [ 5.0977e-01, -3.5645e-01, -9.5166e-01,  ..., -2.7954e-01,  1.8774e-01,  6.1719e-01],
          [-1.9873e+00, -1.3545e+00, -1.0459e+00,  ..., -1.6821e-01, -1.0283e+00,  3.1299e-01]]]], dtype=torch.float16)

2025-06-10 00:13:32.776399 GPU 4 156011 test begin: paddle.nn.functional.interpolate(Tensor([4, 19, 256, 256],"float16"), size=list[1024,1024,], mode="bilinear", align_corners=False, )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([4, 19, 256, 256],"float16"), size=list[1024,1024,], mode="bilinear", align_corners=False, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 12967 / 4980736 (0.3%)
Greatest absolute difference: 0.048828125 at index (1, 3, 234, 100) (up to 0.01 allowed)
Greatest relative difference: 7.50390625 at index (1, 5, 42, 19) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([4, 19, 256, 256]), dtype=torch.float16)
tensor([[[[-1.7004e-01,  6.6602e-01,  2.8242e+00,  ...,  1.6973e+00,  3.4937e-01,  2.3223e+00],
          [-1.1025e+00,  9.8633e-01,  8.6621e-01,  ...,  8.7549e-01, -6.8970e-02,  1.0869e+00],
          [ 3.7671e-01, -3.3130e-01, -6.3525e-01,  ...,  2.0203e-01,  6.2109e-01,  5.7861e-01],
          ...,
          [-1.1270e+00, -6.7432e-01, -6.1707e-02,  ..., -4.4263e-01,  1.2891e-01, -1.0223e-01],
          [ 1.8936e+00,  4.6387e-01, -3.9844e-01,  ...,  2.8174e-01,  8.3350e-01,  8.1006e-01],
          [ 8.8623e-01,  1.9373e-01, -6.6602e-01,  ..., -4.0820e-01, -5.7715e-01, -5.3223e-01]],

         [[ 1.3477e+00, -1.2080e+00, -5.9180e-01,  ...,  1.1992e+00,  1.0215e+00,  7.3096e-01],
          [ 1.4170e+00, -1.3657e-02,  6.2622e-02,  ...,  1.1934e+00,  9.3848e-01,  1.3008e+00],
          [ 6.4746e-01, -3.0005e-01,  1.4087e-01,  ..., -3.0991e-02,  8.4277e-01,  9.7717e-02],
          ...,
          [ 8.6719e-01,  8.3252e-01,  8.1787e-01,  ...,  8.0811e-01, -8.3069e-02,  6.0645e-01],
          [ 1.2000e-01, -9.8389e-01,  5.1318e-01,  ..., -4.8828e-01, -1.2568e+00, -7.8564e-01],
          [-5.7617e-01, -5.5908e-01, -1.0461e-01,  ..., -2.3301e+00, -1.1602e+00, -1.3398e+00]],

         [[ 1.8320e+00, -1.1992e+00, -4.7827e-01,  ...,  4.4238e-01,  8.2910e-01,  7.6782e-02],
          [-7.7393e-01, -4.8291e-01, -8.1201e-01,  ..., -1.2236e+00,  7.9834e-01, -1.0876e-01],
          [ 1.1680e+00,  4.7583e-01, -2.6074e-01,  ..., -6.0596e-01,  2.5803e-02, -1.1328e+00],
          ...,
          [ 1.0508e+00, -4.9512e-01, -4.1919e-01,  ...,  1.3291e+00, -2.5952e-01,  6.8311e-01],
          [ 1.8750e+00, -3.1592e-01,  1.3086e+00,  ...,  1.1895e+00, -1.0022e-01,  3.0542e-01],
          [ 9.6045e-01, -1.9690e-01,  4.8047e-01,  ..., -1.7981e-01, -1.8872e-01,  2.5244e-01]],

         ...,

         [[-1.5117e+00, -2.2766e-01,  1.9202e-01,  ..., -7.8125e-01,  1.7419e-01,  1.7236e-01],
          [ 7.2998e-02,  1.2051e+00,  6.2012e-01,  ..., -3.8599e-01, -4.5557e-01,  1.2915e-01],
          [-3.7134e-01,  6.6699e-01,  1.1191e+00,  ...,  5.5029e-01,  9.1248e-02,  2.9370e-01],
          ...,
          [-2.4329e-01,  3.4253e-01, -2.8638e-01,  ..., -4.3384e-01,  4.1309e-01, -7.9883e-01],
          [-4.3945e-01, -1.1543e+00, -8.1421e-02,  ..., -7.4902e-01, -5.4736e-01,  2.2949e-01],
          [-6.5381e-01,  2.5610e-01, -1.2686e+00,  ..., -2.1719e+00, -1.1611e+00,  4.4751e-01]],

         [[-6.9141e-01, -3.7183e-01,  2.5879e-01,  ...,  1.7031e+00,  1.7078e-01,  1.9177e-01],
          [ 2.5391e-01, -1.8753e-02,  1.9458e-01,  ...,  7.3792e-02, -2.8296e-01, -1.0114e-01],
          [ 7.2021e-01,  9.6533e-01, -3.4204e-01,  ...,  2.4744e-01, -1.2964e-01,  3.4229e-01],
          ...,
          [ 6.3965e-02, -1.4185e-01,  1.3440e-01,  ..., -4.4556e-01,  4.6655e-01,  4.7583e-01],
          [ 9.8816e-02, -1.3428e+00, -3.1323e-01,  ...,  7.7515e-02,  6.4258e-01, -4.7559e-01],
          [ 3.8159e-01,  4.2017e-01, -5.1300e-02,  ...,  7.4268e-01, -4.4116e-01,  9.5520e-02]],

         [[-7.9492e-01,  8.0615e-01, -8.0444e-02,  ...,  6.6113e-01, -4.4189e-02,  3.5278e-01],
          [-5.1562e-01, -8.4912e-01, -8.7402e-01,  ...,  1.8271e+00, -2.7359e-02,  5.8350e-01],
          [ 5.1807e-01, -4.4116e-01, -1.4590e+00,  ...,  1.3213e+00, -7.2119e-01,  5.1221e-01],
          ...,
          [ 1.5742e+00,  7.0850e-01,  1.4026e-01,  ...,  7.3682e-01,  6.3623e-01,  1.6396e+00],
          [ 1.3174e+00, -1.1641e+00,  3.2135e-02,  ...,  5.9277e-01,  8.7988e-01,  1.5889e+00],
          [-7.4805e-01, -2.3792e-01, -6.5723e-01,  ...,  2.8809e-01, -2.5415e-01, -3.6597e-01]]],


        [[[-6.9531e-01,  7.6514e-01,  6.1914e-01,  ..., -1.7646e+00, -3.4766e-01,  5.4248e-01],
          [-3.7939e-01,  2.6147e-01, -1.5068e+00,  ..., -2.0679e-01, -4.8267e-01, -1.2959e+00],
          [ 6.9141e-01,  1.2275e+00, -3.2422e-01,  ...,  8.7500e-01, -4.5142e-01, -6.4307e-01],
          ...,
          [ 2.8784e-01, -8.7256e-01,  9.6436e-02,  ..., -1.3220e-01,  2.7686e-01,  1.0254e+00],
          [ 4.4281e-02, -4.3213e-01, -6.5088e-01,  ...,  6.2842e-01,  1.6855e+00,  7.9297e-01],
          [ 1.2910e+00,  1.2090e+00,  1.5918e+00,  ..., -5.7275e-01,  1.2842e+00,  1.2148e+00]],

         [[-1.7109e+00, -5.7422e-01,  7.4023e-01,  ...,  4.3530e-01,  6.7188e-01, -2.1863e-01],
          [ 2.0544e-01,  5.9033e-01,  3.5620e-01,  ...,  1.3398e+00,  9.9756e-01, -7.0996e-01],
          [ 4.4287e-01,  9.3701e-01,  5.6543e-01,  ..., -4.9194e-01, -9.5264e-01, -5.5371e-01],
          ...,
          [-1.3691e+00, -1.2256e+00,  1.5906e-01,  ..., -4.6460e-01, -8.0273e-01,  5.5450e-02],
          [ 1.3397e-02, -5.6006e-01, -8.4619e-01,  ..., -6.6748e-01,  4.8975e-01, -3.6060e-01],
          [ 1.6992e+00,  1.3879e-01, -1.9617e-01,  ..., -9.3262e-01,  3.4131e-01,  4.4897e-01]],

         [[ 2.6025e-01,  9.2627e-01,  1.3611e-01,  ..., -4.0527e-01, -1.3000e-01,  1.7441e+00],
          [ 1.6523e+00,  9.0186e-01, -1.1367e+00,  ..., -1.6611e+00,  6.2402e-01,  1.7603e-01],
          [ 2.0764e-01,  1.2246e+00, -6.2305e-01,  ..., -7.0312e-01, -4.8706e-01,  1.1484e+00],
          ...,
          [ 1.4951e+00, -2.3828e-01,  2.4316e-01,  ...,  2.6978e-01,  8.9697e-01, -7.8613e-01],
          [ 6.2939e-01, -2.4194e-01,  1.1494e+00,  ..., -1.3647e-01,  1.1243e-01, -5.7227e-01],
          [-7.0374e-02, -2.6270e-01,  2.3145e+00,  ...,  2.1313e-01,  8.6475e-01,  1.0732e+00]],

         ...,

         [[ 2.6562e-01,  2.7515e-01, -8.0420e-01,  ..., -6.3086e-01,  6.9678e-01,  9.8193e-01],
          [ 4.9194e-01,  7.2754e-01,  6.9482e-01,  ..., -8.7109e-01, -2.2913e-01, -5.3955e-01],
          [ 1.9507e-01,  5.9424e-01, -7.4463e-01,  ..., -4.1040e-01, -6.1182e-01,  2.2412e-01],
          ...,
          [ 1.7041e-01,  3.2135e-02, -6.0498e-01,  ...,  6.1768e-01, -2.4951e-01,  7.9736e-01],
          [ 7.9590e-01, -4.6509e-01, -4.2212e-01,  ..., -1.8042e-01, -2.3364e-01, -1.8335e-01],
          [-1.0626e-01, -7.7100e-01,  7.2070e-01,  ..., -9.0381e-01,  5.4590e-01, -2.0605e+00]],

         [[-1.2236e+00, -7.0361e-01, -5.5176e-01,  ...,  1.0425e-01,  8.3545e-01,  5.7959e-01],
          [-1.6504e+00, -2.2424e-01,  9.7559e-01,  ..., -3.4619e-01, -6.8457e-01,  3.2153e-01],
          [ 1.8787e-01, -1.1055e+00,  1.3311e+00,  ..., -1.0391e+00, -7.8076e-01,  6.7383e-01],
          ...,
          [-5.3320e-01,  5.8716e-02,  1.1973e+00,  ..., -1.6191e+00, -6.9971e-01,  1.3018e+00],
          [-6.8994e-01,  1.8835e-01,  1.9385e-01,  ..., -5.2930e-01, -1.1719e+00,  1.4026e-01],
          [-4.4098e-02,  1.1719e+00, -1.3684e-01,  ...,  4.2041e-01, -2.0117e-01, -1.6541e-01]],

         [[ 8.3691e-01, -3.0103e-01, -2.8711e-01,  ..., -6.9336e-01, -3.1714e-01, -8.4717e-01],
          [ 2.6055e+00,  1.1650e+00,  1.3623e+00,  ...,  4.5630e-01, -4.8877e-01, -5.8643e-01],
          [ 6.4941e-01,  7.0508e-01,  4.4922e-01,  ...,  1.8372e-02,  2.9175e-01,  5.4590e-01],
          ...,
          [-1.3496e+00,  6.6711e-02,  1.4785e+00,  ..., -7.8320e-01,  1.7090e-01, -7.4158e-02],
          [-2.5586e+00, -4.5825e-01,  3.3032e-01,  ..., -3.8867e-01,  5.0439e-01,  6.4941e-01],
          [-1.7295e+00, -7.3682e-01, -1.0625e+00,  ...,  2.7271e-01,  2.4475e-01, -3.9722e-01]]],


        [[[ 5.4785e-01, -1.2482e-01,  1.8030e-01,  ..., -5.6885e-01, -8.8623e-01,  6.5430e-02],
          [ 4.5386e-01, -9.1602e-01, -2.1143e-01,  ..., -5.0977e-01, -6.9434e-01,  1.0248e-01],
          [-2.1729e-01,  6.2061e-01,  1.5222e-01,  ..., -4.5319e-02, -1.4807e-01,  1.0938e+00],
          ...,
          [ 3.9307e-01,  3.7671e-01,  1.0986e+00,  ...,  7.1826e-01,  1.8774e-01,  1.5293e+00],
          [-5.0732e-01,  2.3816e-01,  1.5576e+00,  ..., -7.0190e-02, -1.0303e+00,  1.0947e+00],
          [-1.1855e+00, -6.1475e-01,  4.5874e-01,  ..., -6.7383e-01, -1.2168e+00,  5.3809e-01]],

         [[-2.7051e-01, -4.5361e-01, -5.9033e-01,  ..., -6.7871e-01, -9.4141e-01,  7.9053e-01],
          [-1.6870e-01,  5.0537e-01,  1.2384e-01,  ..., -4.2065e-01, -2.2441e+00, -5.0781e-01],
          [-1.9153e-01, -2.4475e-01,  3.3252e-01,  ..., -1.0445e-02, -1.1270e+00, -2.2681e-01],
          ...,
          [ 9.1748e-01,  4.7852e-01, -2.2473e-01,  ..., -1.1621e+00, -6.6309e-01,  8.2715e-01],
          [ 1.5342e+00,  6.3184e-01,  3.6957e-02,  ..., -1.2559e+00,  3.0289e-02, -1.0381e+00],
          [-8.8037e-01, -1.3867e+00, -9.4971e-01,  ..., -1.0527e+00, -4.8267e-01, -7.0068e-01]],

         [[ 4.5850e-01,  1.5701e-02,  2.0532e-01,  ...,  1.8933e-01,  2.9175e-01,  1.6152e+00],
          [-1.9226e-01,  5.1172e-01,  1.9570e+00,  ...,  3.5205e-01,  7.8516e-01,  3.6060e-01],
          [-1.0869e+00,  5.0439e-01, -1.6211e-01,  ..., -8.4277e-01,  7.3340e-01,  7.5977e-01],
          ...,
          [ 3.9520e-02,  2.3987e-01,  9.8047e-01,  ..., -9.0759e-02,  4.2432e-01,  7.5098e-01],
          [ 5.8563e-02, -8.8623e-02,  1.8066e+00,  ...,  1.1436e+00,  4.3140e-01,  7.4121e-01],
          [-1.0059e+00,  3.0884e-01, -1.7517e-01,  ..., -1.1064e+00, -2.1113e+00,  5.5469e-01]],

         ...,

         [[ 1.1926e-01,  7.2656e-01,  5.3320e-01,  ..., -6.4941e-01, -2.3516e+00, -2.4785e+00],
          [-1.2334e+00, -1.3350e+00, -1.0046e-01,  ...,  6.7236e-01, -1.0195e+00, -3.8965e-01],
          [-2.3975e-01, -1.8396e-01,  3.1543e-01,  ..., -9.2871e-01,  1.6907e-01, -2.3645e-01],
          ...,
          [-1.0488e+00, -1.1660e+00,  9.8047e-01,  ...,  4.8657e-01,  1.7021e+00,  4.2358e-01],
          [-8.5254e-01, -4.5044e-01, -2.1225e-02,  ...,  2.8369e-01,  6.6455e-01, -7.9712e-02],
          [-1.6680e+00,  1.7402e+00,  6.4307e-01,  ...,  4.8926e-01,  4.0991e-01,  8.7708e-02]],

         [[ 7.0117e-01, -7.3877e-01,  7.3145e-01,  ...,  1.8640e-01,  6.6357e-01, -2.7598e+00],
          [-1.1797e+00, -2.3096e-01,  9.6191e-01,  ...,  8.7585e-02, -1.3164e+00, -1.6396e+00],
          [-5.6982e-01, -3.7061e-01, -6.7773e-01,  ...,  1.3037e+00, -9.5947e-01, -4.3427e-02],
          ...,
          [ 1.0742e+00,  9.8633e-01,  1.2529e+00,  ..., -1.1182e+00,  1.6309e-01, -7.0605e-01],
          [-1.7637e+00,  6.0449e-01,  3.3447e-01,  ..., -9.9756e-01,  3.1567e-01,  1.4697e+00],
          [ 4.9243e-01,  3.2959e-01,  1.0898e+00,  ..., -2.0752e-02,  1.7920e+00,  7.5879e-01]],

         [[ 1.0869e+00,  1.7539e+00, -4.7314e-01,  ..., -1.0439e+00,  6.0364e-02,  7.9468e-02],
          [ 7.4463e-01, -7.0557e-01,  5.5957e-01,  ..., -1.3262e+00,  1.9421e-01,  8.1250e-01],
          [ 1.6504e+00, -7.3779e-01,  5.3320e-01,  ...,  5.2539e-01,  9.4629e-01,  1.4092e+00],
          ...,
          [ 1.5889e+00,  5.0488e-01, -3.0762e-01,  ..., -9.1476e-03,  6.3770e-01,  4.8877e-01],
          [-1.8311e-01, -1.1592e+00,  4.1138e-01,  ..., -8.1934e-01, -9.4141e-01,  1.1377e+00],
          [ 4.7754e-01, -2.9614e-01, -9.3872e-02,  ..., -2.3792e-01, -3.0713e-01,  1.3867e-01]]],


        [[[-1.7256e+00, -1.5215e+00, -3.8574e-01,  ..., -4.3793e-02,  3.9624e-01,  1.0488e+00],
          [-2.3828e-01,  2.5146e-01, -2.4841e-01,  ..., -2.0605e-01, -9.1162e-01,  9.9121e-01],
          [ 7.0557e-01,  9.7168e-01, -3.0981e-01,  ..., -5.8777e-02, -5.6836e-01, -3.2886e-01],
          ...,
          [ 1.0215e+00,  1.0693e-01,  1.0034e-01,  ..., -2.4023e-01, -8.8477e-01,  7.2815e-02],
          [-1.8350e+00,  3.7018e-02,  8.2178e-01,  ...,  2.0605e-01, -1.5540e-01,  2.2449e-01],
          [-1.7217e+00, -9.9121e-01,  3.3032e-01,  ...,  3.6621e-01, -2.7905e-01,  7.7881e-01]],

         [[-2.3767e-01, -8.6084e-01,  9.3994e-01,  ..., -5.6104e-01,  8.2910e-01, -1.2656e+00],
          [ 1.9446e-01, -6.2012e-01,  3.5962e-01,  ..., -9.7351e-02,  4.5850e-01,  9.1406e-01],
          [-9.6143e-01, -1.8311e+00, -5.5859e-01,  ...,  4.6729e-01, -1.6296e-01,  1.2266e+00],
          ...,
          [-1.2861e+00, -7.7734e-01, -2.3157e-01,  ...,  8.1116e-02,  9.4482e-02,  2.0215e+00],
          [-1.7324e+00, -1.5928e+00, -1.7236e-01,  ...,  3.2178e-01,  3.5742e-01,  5.0342e-01],
          [-1.2383e+00, -8.7256e-01,  1.2510e+00,  ...,  1.2285e+00,  2.7656e+00,  3.7695e-01]],

         [[-8.2520e-01, -1.7197e+00, -3.8696e-01,  ...,  1.0773e-02, -4.1821e-01, -4.5093e-01],
          [-1.5293e+00, -4.3042e-01, -3.8525e-01,  ..., -3.8452e-01, -5.3809e-01, -1.0293e+00],
          [-1.1025e+00,  3.8403e-01, -9.8828e-01,  ...,  6.1523e-01,  3.8599e-01,  8.8867e-02],
          ...,
          [ 7.7148e-01,  3.3301e-01, -5.1807e-01,  ..., -3.7622e-01, -7.6514e-01, -9.5703e-01],
          [ 1.3390e-02, -1.2383e+00, -3.0371e-01,  ..., -8.9355e-01,  7.7197e-01, -9.7168e-01],
          [-1.1523e+00, -1.2051e+00, -7.9736e-01,  ..., -1.2915e-01, -8.3203e-01, -1.5156e+00]],

         ...,

         [[-9.4238e-01, -1.5161e-01, -2.4487e-01,  ..., -5.6543e-01, -6.5234e-01, -5.5469e-01],
          [ 1.3740e+00,  5.3125e-01,  6.6284e-02,  ...,  9.8926e-01,  2.1069e-01, -3.6011e-01],
          [-3.2715e-01,  1.1953e+00,  8.9209e-01,  ...,  4.2358e-01,  3.4424e-01,  1.9226e-01],
          ...,
          [ 1.6318e+00, -2.5391e-01,  3.4985e-01,  ..., -3.5327e-01, -1.3623e-01,  3.5645e-01],
          [ 1.8887e+00,  1.7109e+00,  1.0088e+00,  ..., -3.3667e-01,  7.6855e-01,  4.4287e-01],
          [ 1.1774e-01, -1.0638e-01,  1.1455e+00,  ..., -9.0625e-01, -8.4766e-01,  1.0938e+00]],

         [[-7.6953e-01,  5.2002e-01,  4.1626e-01,  ..., -6.8799e-01,  1.5295e-01, -1.5781e+00],
          [ 2.5977e-01,  3.2837e-01,  9.3079e-03,  ..., -1.1731e-01, -1.2070e+00, -5.2881e-01],
          [ 1.1895e+00, -5.4413e-02, -1.0068e+00,  ..., -5.3467e-01, -1.1768e+00,  5.3955e-02],
          ...,
          [-4.5801e-01, -1.0830e+00, -3.7866e-01,  ...,  9.3018e-01,  4.5679e-01,  3.4424e-01],
          [-4.9097e-01, -1.9299e-01,  3.8745e-01,  ...,  2.3865e-01,  1.3340e+00,  5.2930e-01],
          [-2.0325e-02,  5.1855e-01,  6.0986e-01,  ..., -1.2031e+00, -1.3275e-03,  1.7529e-01]],

         [[-8.7891e-01,  1.1064e+00,  4.0802e-02,  ...,  3.4937e-01,  2.1758e+00,  2.9541e-01],
          [-2.9980e-01,  4.5947e-01,  3.8379e-01,  ..., -7.6318e-01, -3.3594e-01,  1.6094e+00],
          [-2.0923e-01,  7.2266e-01, -3.7671e-01,  ..., -3.8916e-01, -1.3555e+00,  5.1025e-01],
          ...,
          [ 1.2012e+00,  9.8926e-01, -3.7134e-01,  ..., -2.1652e-02,  5.0098e-01,  8.8623e-01],
          [ 3.9233e-01,  1.7959e+00,  5.5713e-01,  ...,  1.4414e+00,  1.7119e+00,  6.5479e-01],
          [-8.5266e-02,  3.7085e-01,  2.3047e-01,  ...,  5.9424e-01,  6.6504e-01, -1.0771e+00]]]], dtype=torch.float16)
DESIRED: (shape=torch.Size([4, 19, 256, 256]), dtype=torch.float16)
tensor([[[[-1.6565e-01,  6.7236e-01,  2.8594e+00,  ...,  1.7119e+00,  3.5107e-01,  2.3516e+00],
          [-1.1182e+00,  9.9561e-01,  8.7891e-01,  ...,  8.8574e-01, -7.0007e-02,  1.1016e+00],
          [ 3.7915e-01, -3.3105e-01, -6.4355e-01,  ...,  2.0776e-01,  6.2695e-01,  5.8154e-01],
          ...,
          [-1.1436e+00, -6.8408e-01, -6.5491e-02,  ..., -4.4702e-01,  1.2793e-01, -1.0358e-01],
          [ 1.9072e+00,  4.7168e-01, -3.9673e-01,  ...,  2.8564e-01,  8.4668e-01,  8.1787e-01],
          [ 8.8867e-01,  1.9360e-01, -6.8262e-01,  ..., -4.1309e-01, -5.8496e-01, -5.3516e-01]],

         [[ 1.3574e+00, -1.2207e+00, -6.0107e-01,  ...,  1.2119e+00,  1.0293e+00,  7.4121e-01],
          [ 1.4307e+00, -1.1963e-02,  6.2683e-02,  ...,  1.2090e+00,  9.5166e-01,  1.3164e+00],
          [ 6.5527e-01, -3.0566e-01,  1.4429e-01,  ..., -3.0029e-02,  8.4912e-01,  9.8145e-02],
          ...,
          [ 8.6963e-01,  8.4229e-01,  8.2227e-01,  ...,  8.1787e-01, -8.0811e-02,  6.1328e-01],
          [ 1.2286e-01, -9.9219e-01,  5.2100e-01,  ..., -4.9023e-01, -1.2715e+00, -7.9102e-01],
          [-5.8008e-01, -5.6738e-01, -1.0596e-01,  ..., -2.3555e+00, -1.1768e+00, -1.3584e+00]],

         [[ 1.8506e+00, -1.2168e+00, -4.8242e-01,  ...,  4.4727e-01,  8.3691e-01,  7.5317e-02],
          [-7.8467e-01, -4.9097e-01, -8.2129e-01,  ..., -1.2334e+00,  8.0615e-01, -1.0803e-01],
          [ 1.1816e+00,  4.8291e-01, -2.6611e-01,  ..., -6.1377e-01,  2.7405e-02, -1.1406e+00],
          ...,
          [ 1.0615e+00, -5.0049e-01, -4.2236e-01,  ...,  1.3457e+00, -2.6074e-01,  6.9092e-01],
          [ 1.8867e+00, -3.2056e-01,  1.3223e+00,  ...,  1.2080e+00, -1.0107e-01,  3.0688e-01],
          [ 9.7070e-01, -2.0093e-01,  4.8169e-01,  ..., -1.8042e-01, -1.9128e-01,  2.5562e-01]],

         ...,

         [[-1.5254e+00, -2.3511e-01,  1.9592e-01,  ..., -7.8760e-01,  1.7603e-01,  1.7603e-01],
          [ 7.1960e-02,  1.2227e+00,  6.2598e-01,  ..., -3.9453e-01, -4.5825e-01,  1.3147e-01],
          [-3.7305e-01,  6.7773e-01,  1.1377e+00,  ...,  5.5762e-01,  9.0210e-02,  2.9297e-01],
          ...,
          [-2.4194e-01,  3.5107e-01, -2.8491e-01,  ..., -4.3604e-01,  4.1992e-01, -8.1543e-01],
          [-4.4458e-01, -1.1709e+00, -8.4229e-02,  ..., -7.5488e-01, -5.5078e-01,  2.3450e-01],
          [-6.5479e-01,  2.6196e-01, -1.2803e+00,  ..., -2.1914e+00, -1.1748e+00,  4.5288e-01]],

         [[-6.9580e-01, -3.7207e-01,  2.5977e-01,  ...,  1.7197e+00,  1.7285e-01,  1.9507e-01],
          [ 2.5220e-01, -2.1744e-02,  1.9739e-01,  ...,  7.5256e-02, -2.8540e-01, -1.0284e-01],
          [ 7.2656e-01,  9.7559e-01, -3.4375e-01,  ...,  2.4805e-01, -1.3330e-01,  3.4814e-01],
          ...,
          [ 6.4270e-02, -1.4258e-01,  1.3550e-01,  ..., -4.4897e-01,  4.7095e-01,  4.7900e-01],
          [ 1.0126e-01, -1.3574e+00, -3.1689e-01,  ...,  7.6721e-02,  6.5771e-01, -4.7803e-01],
          [ 3.8037e-01,  4.2334e-01, -5.4199e-02,  ...,  7.4756e-01, -4.4727e-01,  8.9233e-02]],

         [[-8.0078e-01,  8.1641e-01, -8.0200e-02,  ...,  6.6650e-01, -4.3457e-02,  3.5303e-01],
          [-5.2100e-01, -8.5596e-01, -8.8037e-01,  ...,  1.8398e+00, -2.5879e-02,  5.9766e-01],
          [ 5.2393e-01, -4.4824e-01, -1.4736e+00,  ...,  1.3379e+00, -7.2900e-01,  5.1221e-01],
          ...,
          [ 1.5869e+00,  7.1729e-01,  1.4319e-01,  ...,  7.4463e-01,  6.4209e-01,  1.6543e+00],
          [ 1.3291e+00, -1.1777e+00,  3.1799e-02,  ...,  6.0107e-01,  8.8867e-01,  1.6016e+00],
          [-7.5244e-01, -2.4463e-01, -6.5869e-01,  ...,  2.8760e-01, -2.5049e-01, -3.6523e-01]]],


        [[[-7.0068e-01,  7.7441e-01,  6.2842e-01,  ..., -1.7812e+00, -3.5107e-01,  5.5420e-01],
          [-3.8354e-01,  2.6221e-01, -1.5195e+00,  ..., -2.1179e-01, -4.8730e-01, -1.3076e+00],
          [ 6.9727e-01,  1.2422e+00, -3.2935e-01,  ...,  8.8379e-01, -4.5703e-01, -6.4600e-01],
          ...,
          [ 2.9126e-01, -8.7988e-01,  9.9304e-02,  ..., -1.3354e-01,  2.7783e-01,  1.0312e+00],
          [ 4.3030e-02, -4.3945e-01, -6.6113e-01,  ...,  6.3330e-01,  1.6992e+00,  8.0469e-01],
          [ 1.3018e+00,  1.2188e+00,  1.6055e+00,  ..., -5.7617e-01,  1.2979e+00,  1.2148e+00]],

         [[-1.7246e+00, -5.8154e-01,  7.4951e-01,  ...,  4.3848e-01,  6.8018e-01, -2.2009e-01],
          [ 2.0520e-01,  5.9570e-01,  3.5864e-01,  ...,  1.3525e+00,  1.0098e+00, -7.1777e-01],
          [ 4.4678e-01,  9.5020e-01,  5.7080e-01,  ..., -4.9463e-01, -9.6045e-01, -5.5957e-01],
          ...,
          [-1.3818e+00, -1.2383e+00,  1.5991e-01,  ..., -4.6851e-01, -8.1055e-01,  5.8807e-02],
          [ 1.1002e-02, -5.6396e-01, -8.5596e-01,  ..., -6.7432e-01,  4.9609e-01, -3.7036e-01],
          [ 1.7119e+00,  1.3892e-01, -1.9873e-01,  ..., -9.4678e-01,  3.4180e-01,  4.5459e-01]],

         [[ 2.6123e-01,  9.3701e-01,  1.3977e-01,  ..., -4.1089e-01, -1.3525e-01,  1.7686e+00],
          [ 1.6670e+00,  9.0820e-01, -1.1484e+00,  ..., -1.6777e+00,  6.3086e-01,  1.7725e-01],
          [ 2.0764e-01,  1.2393e+00, -6.3281e-01,  ..., -7.1045e-01, -4.8730e-01,  1.1602e+00],
          ...,
          [ 1.5049e+00, -2.3792e-01,  2.4878e-01,  ...,  2.6709e-01,  9.0430e-01, -7.9297e-01],
          [ 6.3818e-01, -2.4463e-01,  1.1572e+00,  ..., -1.3684e-01,  1.1487e-01, -5.7910e-01],
          [-6.9824e-02, -2.6733e-01,  2.3398e+00,  ...,  2.1619e-01,  8.6475e-01,  1.0732e+00]],

         ...,

         [[ 2.6904e-01,  2.7979e-01, -8.1836e-01,  ..., -6.3623e-01,  7.0508e-01,  9.9316e-01],
          [ 4.9121e-01,  7.3193e-01,  7.0410e-01,  ..., -8.7793e-01, -2.3047e-01, -5.4297e-01],
          [ 1.9983e-01,  6.0303e-01, -7.5195e-01,  ..., -4.1406e-01, -6.1670e-01,  2.1985e-01],
          ...,
          [ 1.7053e-01,  2.8564e-02, -6.0889e-01,  ...,  6.2793e-01, -2.4976e-01,  8.0566e-01],
          [ 8.0127e-01, -4.6509e-01, -4.2896e-01,  ..., -1.8396e-01, -2.3987e-01, -1.8347e-01],
          [-1.0547e-01, -7.7588e-01,  7.2559e-01,  ..., -9.0918e-01,  5.5225e-01, -2.0840e+00]],

         [[-1.2334e+00, -7.1191e-01, -5.5811e-01,  ...,  1.0638e-01,  8.4766e-01,  5.8594e-01],
          [-1.6631e+00, -2.2461e-01,  9.8291e-01,  ..., -3.4888e-01, -6.9043e-01,  3.2324e-01],
          [ 1.8848e-01, -1.1201e+00,  1.3447e+00,  ..., -1.0498e+00, -7.8955e-01,  6.8066e-01],
          ...,
          [-5.3662e-01,  5.9204e-02,  1.2168e+00,  ..., -1.6338e+00, -7.0312e-01,  1.3203e+00],
          [-6.9385e-01,  1.8701e-01,  1.9714e-01,  ..., -5.3223e-01, -1.1865e+00,  1.3965e-01],
          [-4.5868e-02,  1.1836e+00, -1.4099e-01,  ...,  4.1992e-01, -2.0715e-01, -1.6614e-01]],

         [[ 8.4521e-01, -3.0518e-01, -2.9126e-01,  ..., -7.0508e-01, -3.1860e-01, -8.5645e-01],
          [ 2.6211e+00,  1.1777e+00,  1.3799e+00,  ...,  4.5996e-01, -4.9438e-01, -5.9326e-01],
          [ 6.6162e-01,  7.1289e-01,  4.5508e-01,  ...,  2.0264e-02,  2.9419e-01,  5.4932e-01],
          ...,
          [-1.3584e+00,  6.7261e-02,  1.4932e+00,  ..., -7.9297e-01,  1.6833e-01, -7.8003e-02],
          [-2.5801e+00, -4.6143e-01,  3.3789e-01,  ..., -3.9624e-01,  5.1172e-01,  6.5576e-01],
          [-1.7402e+00, -7.4121e-01, -1.0732e+00,  ...,  2.7588e-01,  2.4658e-01, -3.8745e-01]]],


        [[[ 5.5273e-01, -1.2488e-01,  1.8030e-01,  ..., -5.7178e-01, -8.9355e-01,  6.8787e-02],
          [ 4.5508e-01, -9.2725e-01, -2.1191e-01,  ..., -5.1611e-01, -6.9873e-01,  1.0059e-01],
          [-2.1606e-01,  6.2598e-01,  1.5369e-01,  ..., -4.6051e-02, -1.5234e-01,  1.1064e+00],
          ...,
          [ 3.9844e-01,  3.7964e-01,  1.1094e+00,  ...,  7.2803e-01,  1.8518e-01,  1.5430e+00],
          [-5.1270e-01,  2.4219e-01,  1.5713e+00,  ..., -7.0923e-02, -1.0381e+00,  1.1074e+00],
          [-1.1953e+00, -6.2207e-01,  4.6533e-01,  ..., -6.8018e-01, -1.2324e+00,  5.3857e-01]],

         [[-2.7197e-01, -4.5947e-01, -5.9912e-01,  ..., -6.8506e-01, -9.5020e-01,  8.0420e-01],
          [-1.7102e-01,  5.0928e-01,  1.2524e-01,  ..., -4.2554e-01, -2.2656e+00, -5.1416e-01],
          [-1.9128e-01, -2.4292e-01,  3.3618e-01,  ..., -9.1095e-03, -1.1426e+00, -2.3181e-01],
          ...,
          [ 9.2285e-01,  4.8242e-01, -2.2681e-01,  ..., -1.1768e+00, -6.6992e-01,  8.4180e-01],
          [ 1.5469e+00,  6.4209e-01,  3.7964e-02,  ..., -1.2705e+00,  2.8397e-02, -1.0479e+00],
          [-8.8135e-01, -1.3955e+00, -9.5654e-01,  ..., -1.0684e+00, -4.8267e-01, -7.0703e-01]],

         [[ 4.6362e-01,  1.5320e-02,  2.0386e-01,  ...,  1.9092e-01,  2.9541e-01,  1.6348e+00],
          [-1.9263e-01,  5.1465e-01,  1.9756e+00,  ...,  3.5352e-01,  7.9053e-01,  3.6157e-01],
          [-1.0967e+00,  5.1318e-01, -1.5979e-01,  ..., -8.5059e-01,  7.4121e-01,  7.7295e-01],
          ...,
          [ 3.9673e-02,  2.3608e-01,  9.8535e-01,  ..., -9.7107e-02,  4.2578e-01,  7.5488e-01],
          [ 5.9967e-02, -8.6914e-02,  1.8271e+00,  ...,  1.1602e+00,  4.3994e-01,  7.4805e-01],
          [-1.0107e+00,  3.0957e-01, -1.7383e-01,  ..., -1.1211e+00, -2.1328e+00,  5.5566e-01]],

         ...,

         [[ 1.1694e-01,  7.3584e-01,  5.4004e-01,  ..., -6.5723e-01, -2.3750e+00, -2.5020e+00],
          [-1.2422e+00, -1.3447e+00, -1.0120e-01,  ...,  6.8408e-01, -1.0342e+00, -3.9917e-01],
          [-2.4170e-01, -1.8970e-01,  3.1738e-01,  ..., -9.3945e-01,  1.6943e-01, -2.3315e-01],
          ...,
          [-1.0566e+00, -1.1777e+00,  9.9170e-01,  ...,  4.9146e-01,  1.7227e+00,  4.2822e-01],
          [-8.5889e-01, -4.6240e-01, -1.9531e-02,  ...,  2.8882e-01,  6.7822e-01, -7.5806e-02],
          [-1.6807e+00,  1.7559e+00,  6.4697e-01,  ...,  4.9121e-01,  4.0820e-01,  8.4839e-02]],

         [[ 7.0801e-01, -7.5000e-01,  7.3633e-01,  ...,  1.8921e-01,  6.7285e-01, -2.7891e+00],
          [-1.1865e+00, -2.3254e-01,  9.7998e-01,  ...,  8.6365e-02, -1.3340e+00, -1.6650e+00],
          [-5.7910e-01, -3.7451e-01, -6.8555e-01,  ...,  1.3203e+00, -9.6924e-01, -4.3030e-02],
          ...,
          [ 1.0879e+00,  9.9609e-01,  1.2705e+00,  ..., -1.1260e+00,  1.6272e-01, -7.1387e-01],
          [-1.7734e+00,  6.1426e-01,  3.3496e-01,  ..., -1.0146e+00,  3.1763e-01,  1.4805e+00],
          [ 4.8779e-01,  3.3130e-01,  1.0996e+00,  ..., -1.9409e-02,  1.8076e+00,  7.6758e-01]],

         [[ 1.0928e+00,  1.7773e+00, -4.7388e-01,  ..., -1.0557e+00,  6.0242e-02,  8.2886e-02],
          [ 7.5244e-01, -7.1143e-01,  5.6689e-01,  ..., -1.3369e+00,  1.9849e-01,  8.1738e-01],
          [ 1.6621e+00, -7.5146e-01,  5.3662e-01,  ...,  5.3027e-01,  9.5020e-01,  1.4170e+00],
          ...,
          [ 1.6045e+00,  5.1270e-01, -3.1006e-01,  ..., -1.2085e-02,  6.4307e-01,  4.9097e-01],
          [-1.8518e-01, -1.1748e+00,  4.1284e-01,  ..., -8.2422e-01, -9.5166e-01,  1.1582e+00],
          [ 4.8340e-01, -3.0200e-01, -9.3323e-02,  ..., -2.4927e-01, -3.1396e-01,  1.3550e-01]]],


        [[[-1.7393e+00, -1.5371e+00, -3.8989e-01,  ..., -4.3640e-02,  4.0186e-01,  1.0615e+00],
          [-2.4231e-01,  2.5366e-01, -2.4805e-01,  ..., -2.0654e-01, -9.2090e-01,  1.0068e+00],
          [ 7.1191e-01,  9.8486e-01, -3.1445e-01,  ..., -5.9570e-02, -5.7324e-01, -3.3081e-01],
          ...,
          [ 1.0283e+00,  1.0571e-01,  1.0083e-01,  ..., -2.4622e-01, -8.9648e-01,  7.3181e-02],
          [-1.8477e+00,  4.2664e-02,  8.2861e-01,  ...,  2.0850e-01, -1.5796e-01,  2.2510e-01],
          [-1.7393e+00, -1.0078e+00,  3.3130e-01,  ...,  3.6987e-01, -2.7759e-01,  7.8711e-01]],

         [[-2.3901e-01, -8.7598e-01,  9.4971e-01,  ..., -5.6299e-01,  8.3252e-01, -1.2812e+00],
          [ 1.9495e-01, -6.2256e-01,  3.6426e-01,  ..., -9.8511e-02,  4.6411e-01,  9.1846e-01],
          [-9.6436e-01, -1.8555e+00, -5.6152e-01,  ...,  4.6973e-01, -1.6174e-01,  1.2500e+00],
          ...,
          [-1.2998e+00, -7.8516e-01, -2.3267e-01,  ...,  8.0994e-02,  9.5459e-02,  2.0430e+00],
          [-1.7461e+00, -1.6123e+00, -1.7603e-01,  ...,  3.2471e-01,  3.5913e-01,  5.1123e-01],
          [-1.2490e+00, -8.8428e-01,  1.2666e+00,  ...,  1.2441e+00,  2.7891e+00,  3.8110e-01]],

         [[-8.3203e-01, -1.7334e+00, -3.8989e-01,  ...,  1.1841e-02, -4.2090e-01, -4.5312e-01],
          [-1.5420e+00, -4.4385e-01, -3.8867e-01,  ..., -3.8989e-01, -5.4346e-01, -1.0439e+00],
          [-1.1133e+00,  3.8989e-01, -1.0000e+00,  ...,  6.2500e-01,  3.8672e-01,  9.0942e-02],
          ...,
          [ 7.7734e-01,  3.3789e-01, -5.2295e-01,  ..., -3.7939e-01, -7.7148e-01, -9.6777e-01],
          [ 1.7807e-02, -1.2490e+00, -3.1104e-01,  ..., -9.0088e-01,  7.7881e-01, -9.8047e-01],
          [-1.1631e+00, -1.2256e+00, -8.0029e-01,  ..., -1.3257e-01, -8.3203e-01, -1.5234e+00]],

         ...,

         [[-9.5166e-01, -1.5332e-01, -2.4683e-01,  ..., -5.7227e-01, -6.6113e-01, -5.6396e-01],
          [ 1.3887e+00,  5.3564e-01,  6.5979e-02,  ...,  9.9609e-01,  2.1313e-01, -3.6133e-01],
          [-3.2886e-01,  1.2080e+00,  8.9697e-01,  ...,  4.3213e-01,  3.4717e-01,  1.9189e-01],
          ...,
          [ 1.6416e+00, -2.6123e-01,  3.5010e-01,  ..., -3.6108e-01, -1.4197e-01,  3.5913e-01],
          [ 1.9004e+00,  1.7285e+00,  1.0195e+00,  ..., -3.3789e-01,  7.7734e-01,  4.5020e-01],
          [ 1.2012e-01, -1.0449e-01,  1.1592e+00,  ..., -9.2041e-01, -8.5205e-01,  1.0977e+00]],

         [[-7.7393e-01,  5.2393e-01,  4.1968e-01,  ..., -6.9336e-01,  1.5564e-01, -1.5928e+00],
          [ 2.6074e-01,  3.3203e-01,  9.7046e-03,  ..., -1.1768e-01, -1.2148e+00, -5.3516e-01],
          [ 1.1992e+00, -5.0659e-02, -1.0195e+00,  ..., -5.4199e-01, -1.1934e+00,  5.1300e-02],
          ...,
          [-4.6484e-01, -1.0957e+00, -3.8135e-01,  ...,  9.3408e-01,  4.6191e-01,  3.4766e-01],
          [-4.9414e-01, -1.9580e-01,  3.8818e-01,  ...,  2.4463e-01,  1.3506e+00,  5.3760e-01],
          [-1.8005e-02,  5.2393e-01,  6.1621e-01,  ..., -1.2139e+00,  9.7656e-04,  1.7273e-01]],

         [[-8.8623e-01,  1.1211e+00,  3.9124e-02,  ...,  3.5645e-01,  2.2090e+00,  2.9736e-01],
          [-2.9932e-01,  4.6484e-01,  3.9062e-01,  ..., -7.7344e-01, -3.3838e-01,  1.6240e+00],
          [-2.1130e-01,  7.2754e-01, -3.8330e-01,  ..., -3.9209e-01, -1.3721e+00,  5.2637e-01],
          ...,
          [ 1.2158e+00,  9.9707e-01, -3.7329e-01,  ..., -2.3438e-02,  5.0391e-01,  8.9209e-01],
          [ 3.9795e-01,  1.8115e+00,  5.6396e-01,  ...,  1.4512e+00,  1.7236e+00,  6.6895e-01],
          [-8.4656e-02,  3.7598e-01,  2.3291e-01,  ...,  6.0352e-01,  6.6943e-01, -1.0918e+00]]]], dtype=torch.float16)

2025-06-10 00:13:32.889125 GPU 5 156018 test begin: paddle.nn.functional.interpolate(Tensor([4, 2, 128, 128],"float16"), list[512,512,], mode="bilinear", align_corners=False, data_format="NCHW", )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([4, 2, 128, 128],"float16"), list[512,512,], mode="bilinear", align_corners=False, data_format="NCHW", ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 343 / 131072 (0.3%)
Greatest absolute difference: 0.04296875 at index (0, 0, 55, 102) (up to 0.01 allowed)
Greatest relative difference: 1.92578125 at index (1, 1, 62, 125) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([4, 2, 128, 128]), dtype=torch.float16)
tensor([[[[-1.2012, -0.1417,  0.3455,  ..., -0.2035, -1.1572,  1.8672],
          [-0.0368,  0.3970,  0.0934,  ...,  0.0509, -0.6606, -0.6328],
          [ 1.8008, -0.2264, -0.2944,  ..., -0.4102,  0.2876, -0.9438],
          ...,
          [ 0.1831,  1.0225, -0.3323,  ...,  0.4326,  0.6655, -1.1689],
          [ 0.7695,  0.5391, -0.1899,  ..., -0.1232,  1.5791, -0.5298],
          [-0.6006,  0.0607,  0.4336,  ...,  0.8140,  1.3164, -1.7529]],

         [[ 0.6597,  1.0879,  0.0135,  ...,  0.7598,  0.9092, -0.0600],
          [-0.1569, -0.5161, -0.7007,  ..., -1.0547, -0.2129,  0.2234],
          [-0.7192,  0.9849, -0.0421,  ...,  0.1428,  0.2162, -0.2983],
          ...,
          [-0.6831, -0.6572, -1.4473,  ...,  1.7676,  0.6543, -0.6709],
          [-0.5967, -0.0261, -0.4126,  ...,  1.0469,  1.1973,  0.7114],
          [-0.0942, -0.6157, -0.8916,  ..., -0.9614, -0.4878,  0.2434]]],


        [[[-1.2520,  0.4211,  0.0117,  ...,  0.5571,  0.6421, -1.0771],
          [-0.7056, -1.5781,  0.2532,  ..., -0.9399, -0.4661, -0.5142],
          [ 0.3562, -0.8486,  0.7163,  ..., -0.2202, -0.5508, -0.1760],
          ...,
          [-1.1416,  0.1425,  1.6836,  ...,  0.6582,  0.4104,  0.6011],
          [ 0.0429, -0.0799, -2.0625,  ..., -0.1439, -0.0296, -0.6367],
          [ 1.5186, -0.1128, -1.8320,  ..., -0.1660, -0.5186, -0.4165]],

         [[ 0.8926,  0.5898,  1.2412,  ..., -1.1455,  1.3340, -0.1866],
          [ 0.7837,  0.8101,  0.6133,  ..., -0.6118,  0.0876,  0.4812],
          [ 0.1249,  1.4199, -0.1041,  ...,  0.6616,  0.2776,  0.0836],
          ...,
          [ 0.4648,  1.4482,  0.7627,  ..., -0.7129, -1.3789,  0.4595],
          [-0.1910,  0.3660,  0.5444,  ..., -0.7031, -1.4277,  0.5664],
          [-0.2136,  1.0518, -0.0937,  ...,  0.2585, -0.4087,  0.8311]]],


        [[[ 0.4258,  1.5342, -0.3567,  ..., -0.3059, -1.0000, -1.3838],
          [-0.1396,  0.5127, -0.2352,  ...,  0.2308, -0.2546, -1.1328],
          [ 0.3862, -0.3828,  0.2808,  ...,  0.3389, -0.2444, -1.6660],
          ...,
          [ 0.3953, -0.4177,  0.3652,  ...,  0.5596, -0.5278,  1.6738],
          [ 0.4495,  0.4509,  1.2852,  ...,  0.5298,  0.7842,  0.4016],
          [ 0.3064, -0.4214, -0.1548,  ...,  0.0788,  1.4365, -0.8394]],

         [[ 0.8809,  1.3730,  1.2998,  ..., -0.6040,  0.1080, -1.3887],
          [ 0.6318,  0.8633,  1.7471,  ...,  0.6992,  1.0361, -0.3240],
          [-0.0233, -0.4102, -0.4006,  ..., -0.2229,  1.1807,  0.5986],
          ...,
          [ 0.7847,  0.7974,  0.3381,  ..., -0.5698, -0.4060, -0.2361],
          [ 1.1973,  0.1740,  0.4004,  ..., -0.4985,  0.6724, -1.2852],
          [ 1.4082,  0.4697,  0.4563,  ..., -0.1192,  0.5913, -0.2625]]],


        [[[ 1.9971,  0.8726, -0.8887,  ..., -0.0090, -0.6343,  0.2715],
          [-0.4009,  1.4736,  0.2703,  ..., -0.4910, -0.4663,  0.6802],
          [-0.0797,  0.2253,  0.5049,  ..., -0.9263, -0.5005,  0.6758],
          ...,
          [ 0.2969,  0.5493,  0.7183,  ...,  0.1963,  1.3438,  1.2236],
          [ 0.5659,  0.3259,  0.8032,  ..., -0.1534, -0.2029,  1.0137],
          [ 0.4036, -1.6973, -0.6372,  ..., -0.0977, -1.0859, -0.2250]],

         [[ 0.5791, -1.3447, -0.8760,  ..., -0.1901, -0.7031,  0.8091],
          [ 1.3340, -0.7373, -1.6113,  ...,  0.0378,  0.9146,  0.4636],
          [ 0.4429,  0.0759, -1.0566,  ...,  0.9722,  0.6519,  0.3420],
          ...,
          [ 0.3308,  1.3066,  1.3125,  ..., -0.4160,  1.8525, -0.1749],
          [-0.5503, -1.0322, -0.2817,  ..., -0.6182,  0.5830, -1.6240],
          [-1.7148, -0.6392,  0.1815,  ...,  1.2939,  0.6787, -0.9995]]]], dtype=torch.float16)
DESIRED: (shape=torch.Size([4, 2, 128, 128]), dtype=torch.float16)
tensor([[[[-1.2090, -0.1404,  0.3508,  ..., -0.2073, -1.1729,  1.8926],
          [-0.0414,  0.3960,  0.0949,  ...,  0.0532, -0.6689, -0.6431],
          [ 1.8154, -0.2246, -0.2952,  ..., -0.4143,  0.2900, -0.9512],
          ...,
          [ 0.1833,  1.0312, -0.3364,  ...,  0.4353,  0.6724, -1.1826],
          [ 0.7759,  0.5508, -0.1901,  ..., -0.1257,  1.5986, -0.5371],
          [-0.6045,  0.0531,  0.4285,  ...,  0.8213,  1.3350, -1.7617]],

         [[ 0.6650,  1.1006,  0.0161,  ...,  0.7676,  0.9175, -0.0597],
          [-0.1544, -0.5225, -0.7085,  ..., -1.0684, -0.2133,  0.2275],
          [-0.7241,  0.9980, -0.0434,  ...,  0.1431,  0.2180, -0.3037],
          ...,
          [-0.6885, -0.6641, -1.4648,  ...,  1.7842,  0.6606, -0.6826],
          [-0.6006, -0.0246, -0.4146,  ...,  1.0635,  1.2129,  0.7197],
          [-0.0976, -0.6211, -0.9038,  ..., -0.9697, -0.4907,  0.2484]]],


        [[[-1.2686,  0.4316,  0.0120,  ...,  0.5654,  0.6499, -1.0859],
          [-0.7114, -1.5996,  0.2539,  ..., -0.9507, -0.4709, -0.5229],
          [ 0.3555, -0.8560,  0.7236,  ..., -0.2228, -0.5581, -0.1741],
          ...,
          [-1.1533,  0.1436,  1.7021,  ...,  0.6626,  0.4138,  0.6055],
          [ 0.0405, -0.0800, -2.0781,  ..., -0.1449, -0.0271, -0.6445],
          [ 1.5332, -0.1118, -1.8486,  ..., -0.1631, -0.5215, -0.4148]],

         [[ 0.8979,  0.5952,  1.2549,  ..., -1.1543,  1.3535, -0.1904],
          [ 0.7891,  0.8169,  0.6211,  ..., -0.6182,  0.0887,  0.4893],
          [ 0.1260,  1.4375, -0.1043,  ...,  0.6689,  0.2793,  0.0812],
          ...,
          [ 0.4685,  1.4639,  0.7705,  ..., -0.7148, -1.3945,  0.4634],
          [-0.1934,  0.3704,  0.5522,  ..., -0.7183, -1.4424,  0.5747],
          [-0.2111,  1.0596, -0.0947,  ...,  0.2620, -0.4194,  0.8335]]],


        [[[ 0.4294,  1.5508, -0.3601,  ..., -0.3074, -1.0176, -1.4004],
          [-0.1423,  0.5205, -0.2373,  ...,  0.2295, -0.2534, -1.1436],
          [ 0.3901, -0.3892,  0.2827,  ...,  0.3430, -0.2483, -1.6875],
          ...,
          [ 0.3972, -0.4253,  0.3674,  ...,  0.5664, -0.5352,  1.6875],
          [ 0.4536,  0.4565,  1.3027,  ...,  0.5332,  0.7910,  0.4121],
          [ 0.3079, -0.4268, -0.1589,  ...,  0.0805,  1.4561, -0.8433]],

         [[ 0.8872,  1.3906,  1.3135,  ..., -0.6118,  0.1095, -1.4082],
          [ 0.6377,  0.8740,  1.7607,  ...,  0.7036,  1.0439, -0.3286],
          [-0.0220, -0.4126, -0.4021,  ..., -0.2229,  1.1973,  0.6074],
          ...,
          [ 0.7896,  0.8086,  0.3384,  ..., -0.5762, -0.4097, -0.2378],
          [ 1.2070,  0.1741,  0.3999,  ..., -0.5024,  0.6797, -1.2998],
          [ 1.4209,  0.4800,  0.4653,  ..., -0.1252,  0.5942, -0.2617]]],


        [[[ 2.0176,  0.8813, -0.8950,  ..., -0.0090, -0.6401,  0.2754],
          [-0.4014,  1.4893,  0.2705,  ..., -0.4944, -0.4746,  0.6846],
          [-0.0838,  0.2291,  0.5156,  ..., -0.9341, -0.5034,  0.6831],
          ...,
          [ 0.3003,  0.5591,  0.7266,  ...,  0.1984,  1.3584,  1.2354],
          [ 0.5693,  0.3320,  0.8149,  ..., -0.1539, -0.2031,  1.0215],
          [ 0.4111, -1.7109, -0.6436,  ..., -0.1022, -1.0967, -0.2209]],

         [[ 0.5811, -1.3584, -0.8804,  ..., -0.1917, -0.7139,  0.8135],
          [ 1.3457, -0.7466, -1.6260,  ...,  0.0373,  0.9238,  0.4751],
          [ 0.4453,  0.0753, -1.0674,  ...,  0.9839,  0.6621,  0.3413],
          ...,
          [ 0.3340,  1.3223,  1.3242,  ..., -0.4160,  1.8721, -0.1721],
          [-0.5527, -1.0410, -0.2803,  ..., -0.6299,  0.5869, -1.6406],
          [-1.7314, -0.6465,  0.1750,  ...,  1.3027,  0.6792, -1.0039]]]], dtype=torch.float16)

2025-06-10 00:13:32.990925 GPU 6 156013 test begin: paddle.nn.functional.interpolate(Tensor([4, 256, 16, 16],"float16"), size=list[64,64,], mode="bilinear", )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([4, 256, 16, 16],"float16"), size=list[64,64,], mode="bilinear", ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 747 / 262144 (0.3%)
Greatest absolute difference: 0.044921875 at index (1, 78, 0, 10) (up to 0.01 allowed)
Greatest relative difference: 1.5244140625 at index (2, 127, 15, 4) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([4, 256, 16, 16]), dtype=torch.float16)
tensor([[[[-2.5952e-01,  3.2935e-01,  1.6516e-01,  ..., -7.4023e-01,  1.3916e-02, -9.7119e-01],
          [-2.7124e-01,  1.0771e+00,  5.9619e-01,  ...,  7.0605e-01,  1.1975e-01, -1.5271e-01],
          [ 1.2793e+00,  1.1777e+00, -1.0020e+00,  ...,  3.7085e-01,  1.7639e-02, -8.6548e-02],
          ...,
          [-7.2449e-02,  1.6858e-01,  3.7964e-02,  ...,  7.4609e-01,  1.4014e+00, -1.6211e+00],
          [ 2.4746e+00,  1.6455e+00, -1.7554e-01,  ..., -6.9385e-01, -9.2432e-01, -3.8135e-01],
          [-1.4685e-01,  3.3905e-02,  7.1228e-02,  ...,  2.9639e-01,  2.9175e-01, -6.3721e-01]],

         [[ 1.1709e+00, -3.1030e-01,  1.4717e+00,  ..., -3.1152e-01,  2.6733e-01,  1.2244e-01],
          [ 2.8320e-01, -6.4014e-01,  4.9658e-01,  ...,  3.9355e-01,  8.4814e-01,  2.9688e-01],
          [ 5.5762e-01, -9.7900e-01, -8.4033e-01,  ...,  4.4995e-01,  3.5962e-01,  4.8730e-01],
          ...,
          [-8.3008e-01, -2.5537e-01, -8.0811e-01,  ...,  6.2061e-01,  3.0737e-01, -4.4604e-01],
          [-3.7964e-01,  2.6953e-01,  1.6143e+00,  ..., -1.5106e-03,  3.4668e-02, -4.7583e-01],
          [-1.4219e+00, -4.3945e-01,  1.6182e+00,  ..., -4.4434e-01, -6.1719e-01, -1.2773e+00]],

         [[ 7.9248e-01,  1.0781e+00,  2.1948e-01,  ...,  1.3467e+00,  1.0498e+00,  4.5630e-01],
          [-3.9331e-01,  7.3340e-01,  6.6797e-01,  ...,  1.8884e-01, -1.5703e+00, -5.7220e-02],
          [ 8.4131e-01,  2.0096e-02, -1.0181e-01,  ..., -2.8003e-01, -1.2334e+00,  1.1084e-01],
          ...,
          [ 1.0596e+00, -3.1445e-01, -1.1658e-01,  ..., -2.2913e-01, -1.6101e-01,  4.0576e-01],
          [ 9.9561e-01, -1.3086e-01,  2.1033e-01,  ...,  9.6826e-01,  1.9983e-01, -1.4902e+00],
          [ 6.7334e-01,  1.5918e+00, -1.2412e+00,  ...,  1.2910e+00,  1.7061e+00,  6.0205e-01]],

         ...,

         [[ 1.2637e+00, -1.1016e+00,  2.7173e-01,  ...,  8.5889e-01, -4.7778e-01,  2.5684e-01],
          [ 2.0000e+00, -8.2910e-01,  6.7090e-01,  ...,  3.4937e-01,  3.2349e-01, -2.6050e-01],
          [-2.1558e-01, -7.6611e-01,  4.9097e-01,  ...,  1.3594e+00,  1.4980e+00, -1.3076e+00],
          ...,
          [-1.2781e-01,  2.5830e-01, -4.3408e-01,  ...,  1.0518e+00,  1.5459e+00,  1.3928e-01],
          [ 1.2861e+00,  5.8301e-01,  5.4102e-01,  ...,  1.1689e+00,  1.7090e-01,  1.3086e+00],
          [-3.5034e-01, -6.1816e-01, -3.4399e-01,  ...,  1.2637e+00,  1.2178e+00,  4.8364e-01]],

         [[ 6.8457e-01,  2.5223e-02,  7.7832e-01,  ..., -1.1768e+00,  2.0645e+00,  1.9365e+00],
          [-5.6934e-01,  1.5967e-01, -5.0830e-01,  ..., -1.1719e+00, -4.7119e-01,  1.2158e+00],
          [-1.5427e-02,  6.1914e-01,  1.2949e+00,  ..., -1.3887e+00,  3.6230e-01, -1.6235e-01],
          ...,
          [ 1.2217e+00,  7.2412e-01, -7.9443e-01,  ..., -3.3740e-01, -4.2578e-01, -6.7529e-01],
          [-8.2642e-02,  8.2703e-02,  2.2571e-01,  ..., -1.1743e-01, -2.5195e-01,  1.3877e+00],
          [ 7.3926e-01,  1.5247e-01, -7.5879e-01,  ..., -8.3691e-01, -1.0723e+00,  1.6882e-01]],

         [[-1.0654e+00, -3.7524e-01,  8.2861e-01,  ...,  6.7529e-01, -1.0420e+00,  1.5312e+00],
          [-6.5674e-01,  4.3799e-01, -2.7664e-02,  ...,  2.1934e+00,  6.4893e-01,  1.6855e+00],
          [ 9.1992e-01, -2.3987e-01, -6.9141e-01,  ...,  1.1367e+00, -6.6553e-01, -7.2070e-01],
          ...,
          [-1.2299e-02, -3.5669e-01,  8.1836e-01,  ..., -2.5391e-01,  4.8560e-01,  2.8223e-01],
          [ 7.2803e-01,  9.5605e-01, -3.9844e-01,  ..., -1.1152e+00, -1.0828e-01, -1.3306e-01],
          [ 5.8447e-01, -9.6130e-02, -6.8799e-01,  ...,  3.8232e-01, -2.5952e-01, -9.8926e-01]]],


        [[[-7.5244e-01,  6.2549e-01,  7.6562e-01,  ..., -2.6953e-01, -3.2422e-01,  9.1858e-02],
          [-3.9038e-01, -1.8707e-02, -4.1333e-01,  ...,  8.2275e-01,  3.1274e-01, -7.4170e-01],
          [-1.0674e+00, -1.2915e-01, -5.0391e-01,  ...,  3.5083e-01,  7.0117e-01, -3.2129e-01],
          ...,
          [ 1.6699e-01,  1.3281e+00, -3.1055e-01,  ..., -3.3984e-01, -1.3467e+00,  2.2156e-01],
          [-4.7046e-01,  4.4312e-01, -7.6416e-02,  ..., -6.6846e-01,  5.5127e-01,  1.4636e-01],
          [-9.8096e-01,  8.7769e-02,  4.2065e-01,  ..., -9.9756e-01, -2.2681e-01,  5.0195e-01]],

         [[ 5.3857e-01, -6.2646e-01,  3.8513e-02,  ..., -1.2979e+00, -1.4092e+00, -1.6129e-02],
          [ 9.6924e-01, -5.3809e-01,  2.6172e-01,  ..., -7.6562e-01, -2.5854e-01, -1.6846e+00],
          [ 1.4326e+00,  9.8572e-02,  1.2024e-02,  ...,  3.7378e-01, -8.7646e-01,  5.4834e-01],
          ...,
          [-8.6670e-01,  2.1289e-01, -4.3970e-01,  ..., -1.1432e-01,  5.4932e-01,  4.0259e-01],
          [-1.0205e-01, -3.7671e-01, -8.8684e-02,  ...,  9.7852e-01, -2.1619e-01,  5.3467e-01],
          [-5.4053e-01, -1.7119e+00, -1.7275e+00,  ...,  1.1865e+00, -1.2598e-01,  1.3306e-01]],

         [[-1.7354e+00, -9.5337e-02,  6.3818e-01,  ...,  2.9272e-01, -9.1113e-01,  1.9983e-01],
          [ 1.2529e+00, -3.3203e-01, -1.2067e-01,  ..., -5.1239e-02, -5.8008e-01, -2.4634e-01],
          [ 3.5736e-02, -8.7744e-01, -3.3228e-01,  ...,  8.7842e-01,  7.6953e-01,  7.0996e-01],
          ...,
          [ 2.9565e-01, -1.1846e+00,  3.1592e-01,  ...,  8.2568e-01,  1.4248e+00,  9.4299e-02],
          [ 1.4922e+00,  8.7842e-01,  8.7012e-01,  ...,  8.3008e-01,  5.8252e-01, -1.9760e-02],
          [-1.0557e+00, -2.8027e-01,  5.5225e-01,  ...,  1.6455e-01,  1.2109e+00,  3.5327e-01]],

         ...,

         [[ 1.2002e+00, -6.1426e-01, -3.1738e-01,  ..., -1.2900e+00, -1.2744e+00,  8.9844e-02],
          [ 8.0469e-01, -8.0420e-01, -3.2153e-01,  ..., -8.5889e-01, -2.3026e-02,  8.6621e-01],
          [-2.3691e+00, -8.3887e-01,  2.3987e-01,  ...,  2.7026e-01,  9.4092e-01, -2.1619e-01],
          ...,
          [-4.5972e-01, -1.1836e+00, -4.3896e-01,  ..., -9.9792e-02, -3.6377e-01, -6.6016e-01],
          [ 1.3711e+00,  2.6953e-01,  9.1064e-01,  ...,  4.5947e-01, -5.0928e-01, -9.3457e-01],
          [-6.6406e-01,  1.0127e+00,  2.4536e-01,  ..., -4.8828e-01,  3.1836e-01, -1.4346e+00]],

         [[-7.7148e-02, -4.7998e-01, -8.4229e-01,  ...,  4.0698e-01, -3.7695e-01,  6.5283e-01],
          [-1.0654e+00,  3.6646e-01, -2.6932e-02,  ..., -6.2744e-02,  1.3293e-01, -6.4600e-01],
          [ 2.4438e-01,  1.0583e-01,  7.4170e-01,  ..., -7.8979e-02, -3.8159e-01,  3.9331e-01],
          ...,
          [ 1.1758e+00,  7.2266e-01,  6.6528e-02,  ..., -9.9854e-01,  1.3369e+00, -6.9238e-01],
          [ 1.9648e+00,  3.6816e-01, -9.6313e-02,  ...,  6.3281e-01, -1.6455e-01, -1.2646e+00],
          [ 6.4111e-01, -2.2534e-01,  6.3232e-02,  ...,  1.5664e+00,  1.9653e-01, -1.2773e+00]],

         [[-5.3223e-01, -5.7715e-01, -5.7227e-01,  ..., -3.4717e-01, -4.6143e-01, -1.2067e-01],
          [ 9.3213e-01,  6.7578e-01, -3.4985e-01,  ..., -3.2227e-01, -2.7954e-01, -4.6191e-01],
          [ 1.0830e+00,  4.7900e-01, -5.6250e-01,  ...,  6.9678e-01,  4.9707e-01,  3.6743e-01],
          ...,
          [ 2.6760e-03,  3.8062e-01, -5.9961e-01,  ...,  1.7410e-02,  2.1594e-01, -1.3418e+00],
          [ 2.8638e-01,  2.6538e-01,  6.2305e-01,  ...,  2.5610e-01,  6.8799e-01,  9.9268e-01],
          [-7.2412e-01, -4.2969e-01,  7.0117e-01,  ...,  5.0537e-01, -6.0010e-01, -5.5615e-01]]],


        [[[-1.6248e-01,  5.9619e-01,  4.5746e-02,  ...,  8.5205e-01, -2.2021e-01, -5.5713e-01],
          [ 7.6318e-01, -6.9678e-01, -8.7402e-01,  ...,  7.1680e-01,  1.5857e-01, -1.6377e+00],
          [ 8.7354e-01, -5.4883e-01, -2.1953e+00,  ...,  3.3228e-01,  5.9717e-01,  3.8013e-01],
          ...,
          [-1.0488e+00,  1.0537e+00,  1.7542e-01,  ..., -1.4355e+00,  8.0420e-01,  7.1338e-01],
          [-4.7827e-01,  3.2080e-01, -3.0472e-02,  ..., -1.6760e-01, -7.4268e-01, -5.2979e-01],
          [-1.0488e+00, -5.4443e-01,  2.7661e-01,  ..., -6.3818e-01,  2.3572e-01,  5.9717e-01]],

         [[-4.9878e-01, -1.3721e+00,  6.4600e-01,  ...,  2.4170e-01, -3.0200e-01,  1.7261e-01],
          [-1.0303e+00,  2.1069e-01, -2.9883e-01,  ..., -5.5176e-01, -2.2266e-01, -3.8989e-01],
          [-1.4912e+00, -5.7178e-01,  7.7286e-03,  ..., -2.8369e-01, -2.8931e-01,  2.6367e-01],
          ...,
          [ 1.0576e+00,  9.4043e-01,  1.8982e-01,  ...,  7.5586e-01,  2.9938e-02, -5.5664e-01],
          [ 1.8369e+00,  5.4199e-01, -9.8975e-01,  ..., -8.9417e-02, -1.1836e+00, -1.4727e+00],
          [ 1.6260e+00,  5.4492e-01,  3.1250e-01,  ...,  1.0322e+00, -3.5156e-01, -8.9014e-01]],

         [[-1.8835e-01, -5.9961e-01, -1.8770e+00,  ..., -4.8804e-01,  8.7842e-01, -5.8887e-01],
          [-1.1780e-01,  2.4695e-01, -4.0723e-01,  ..., -5.0391e-01, -6.4990e-01,  2.8540e-01],
          [ 6.0303e-01,  1.1279e-01, -3.5400e-01,  ..., -1.1719e+00, -8.4045e-02,  6.0303e-01],
          ...,
          [ 2.5903e-01,  1.2529e+00,  1.3701e+00,  ..., -1.3916e+00, -5.3760e-01,  1.1182e-01],
          [ 2.1814e-01, -2.9297e-01, -1.9348e-01,  ..., -7.7051e-01,  2.2290e-01,  7.1240e-01],
          [-4.0356e-01,  1.5186e-01,  1.5459e+00,  ...,  4.4604e-01, -5.9326e-01,  5.5322e-01]],

         ...,

         [[-2.1350e-01,  4.8291e-01, -9.3506e-01,  ...,  1.1920e-01, -1.5381e+00, -7.5146e-01],
          [ 1.6357e-01, -1.2031e+00,  3.2812e-01,  ...,  7.0361e-01,  8.2617e-01,  7.6562e-01],
          [ 1.9470e-01, -5.4297e-01, -7.2217e-01,  ...,  6.9971e-01,  9.9707e-01, -1.5732e+00],
          ...,
          [ 5.0781e-01,  1.0382e-01,  1.9568e-01,  ...,  2.3901e-01, -6.4697e-01,  1.6006e+00],
          [-7.8125e-01, -2.0752e-01, -1.0254e+00,  ..., -3.2520e-01,  2.2827e-01, -5.5664e-01],
          [-6.5186e-01, -7.6611e-01,  1.0785e-01,  ..., -3.1226e-01, -8.7646e-01, -8.2520e-01]],

         [[-2.9199e+00, -9.7705e-01, -1.0586e+00,  ..., -1.4824e+00,  1.7627e+00,  1.5293e+00],
          [-7.6172e-01,  3.7573e-01,  7.6709e-01,  ..., -3.0713e-01,  1.6982e+00,  1.5449e+00],
          [ 1.4316e+00,  1.6279e+00, -1.2329e-01,  ...,  1.6937e-02,  4.8926e-01,  6.9397e-02],
          ...,
          [-7.8711e-01, -8.8672e-01,  4.8828e-01,  ..., -4.0375e-02,  1.3457e+00, -8.3740e-01],
          [-1.9121e+00, -1.2949e+00, -7.4072e-01,  ..., -9.0771e-01, -3.6377e-01, -1.3701e+00],
          [ 7.0508e-01, -1.2256e-01, -6.8457e-01,  ..., -2.0762e+00, -1.5449e+00,  8.6719e-01]],

         [[ 3.9209e-01, -8.4668e-01,  8.6719e-01,  ..., -5.5176e-01,  2.4841e-01,  1.0332e+00],
          [ 6.0254e-01, -5.1666e-02,  2.6367e-01,  ...,  1.6553e+00,  1.7129e+00,  7.2144e-02],
          [-1.1680e+00,  9.5215e-01,  1.3486e+00,  ...,  1.9580e+00,  2.9761e-01, -8.9307e-01],
          ...,
          [-7.6172e-01,  5.3955e-01, -6.3721e-01,  ..., -1.4316e+00,  2.6245e-02,  7.1094e-01],
          [-6.7773e-01, -5.6396e-01,  2.0618e-01,  ..., -2.5879e-02,  5.9998e-02,  1.5254e+00],
          [-9.4824e-01, -1.5996e+00, -4.1553e-01,  ..., -5.6201e-01,  4.9292e-01, -1.1729e+00]]],


        [[[ 1.5879e+00,  3.7305e-01,  6.0840e-01,  ..., -1.5400e+00, -4.1895e-01, -4.0063e-01],
          [-2.1753e-01,  6.1621e-01, -1.5957e+00,  ..., -2.5244e-01, -4.4971e-01, -4.5776e-01],
          [-5.4053e-01, -1.5479e-01,  9.5410e-01,  ...,  8.9404e-01,  2.8320e-01,  1.5166e+00],
          ...,
          [-1.7065e-01,  4.7388e-01, -4.3408e-01,  ..., -2.2803e-01,  5.3406e-03, -5.2979e-01],
          [-3.7769e-01,  6.1328e-01, -1.2878e-01,  ...,  9.1748e-01,  2.7637e-01, -4.1235e-01],
          [-1.8330e+00, -1.0107e+00,  7.7148e-01,  ..., -4.7021e-01, -5.4736e-01, -1.0518e+00]],

         [[-1.5898e+00, -7.0264e-01,  2.0142e-01,  ..., -4.0479e-01,  2.1055e+00,  2.8296e-01],
          [-2.1367e+00, -1.2021e+00, -1.7261e-01,  ..., -5.8008e-01,  6.0889e-01, -4.9414e-01],
          [-7.6025e-01, -5.2637e-01, -1.7029e-01,  ..., -3.4375e-01,  9.0723e-01,  4.0308e-01],
          ...,
          [-2.3206e-01,  1.2168e+00, -3.3264e-02,  ...,  4.7998e-01,  1.1890e-01,  4.4873e-01],
          [ 9.8828e-01,  1.4531e+00,  1.3350e+00,  ...,  1.3037e+00,  1.4912e+00,  1.3281e-01],
          [-1.9153e-01,  1.4941e-01,  3.6597e-01,  ...,  2.5234e+00,  8.9893e-01, -9.4971e-01]],

         [[-1.3525e+00,  8.1836e-01, -1.6711e-01,  ...,  1.5283e+00, -5.6787e-01, -1.8896e-01],
          [-5.1270e-01, -7.2168e-01, -1.5352e+00,  ...,  4.8022e-01, -6.0059e-01,  1.0101e-02],
          [ 9.3164e-01,  6.3660e-02,  1.1641e+00,  ...,  1.1951e-01,  2.1988e-02, -2.3584e-01],
          ...,
          [ 3.3984e-01,  5.5878e-02, -1.6382e-01,  ..., -7.6758e-01,  4.0503e-01,  8.1543e-01],
          [ 4.1309e-01,  8.1689e-01, -9.9976e-02,  ..., -1.3330e+00, -1.1395e-01,  1.0049e+00],
          [ 9.7473e-02,  7.9883e-01,  6.4844e-01,  ...,  8.3984e-02,  1.7664e-01, -2.2891e+00]],

         ...,

         [[-1.3379e-01,  1.2588e+00, -5.0977e-01,  ..., -1.6235e-02,  1.4990e+00, -3.1281e-02],
          [ 1.8604e+00, -1.0850e+00,  4.5502e-02,  ...,  7.8918e-02,  5.4785e-01, -6.1719e-01],
          [ 7.2327e-02, -4.4946e-01, -2.6807e-01,  ..., -6.5234e-01, -6.8408e-01, -6.6748e-01],
          ...,
          [-3.6450e-01, -1.6919e-01, -6.0889e-01,  ..., -6.8164e-01, -2.8442e-01,  9.4824e-01],
          [-6.6113e-01,  5.5371e-01,  3.1616e-01,  ..., -6.2891e-01, -6.4941e-01,  1.4893e-02],
          [ 1.1768e+00,  2.0898e+00,  7.2607e-01,  ..., -7.1729e-01, -8.7207e-01,  4.9500e-02]],

         [[-7.0801e-01,  7.6172e-01,  3.7158e-01,  ...,  6.0840e-01,  2.2144e-01, -9.4287e-01],
          [ 2.0435e-01,  1.5112e-01, -1.0625e+00,  ...,  6.0107e-01,  3.5791e-01,  1.2695e+00],
          [-2.6978e-02, -2.9419e-01,  4.9731e-01,  ..., -9.9902e-01,  4.4409e-01,  8.4619e-01],
          ...,
          [-2.3450e-01,  2.8760e-01,  1.3340e+00,  ..., -7.7087e-02, -2.0156e+00, -2.1504e+00],
          [-1.0605e+00, -5.2637e-01, -8.3496e-02,  ...,  1.9739e-01,  1.4141e+00,  1.7456e-01],
          [ 4.9805e-01, -3.2056e-01, -4.2993e-01,  ...,  3.3594e-01,  1.6113e-01,  2.2473e-01]],

         [[-1.3594e+00, -1.5259e-05, -3.7170e-02,  ...,  5.8887e-01,  1.2927e-01, -4.6387e-01],
          [-1.8945e-01, -1.3708e-01, -4.8904e-03,  ..., -2.1948e-01, -6.0693e-01,  1.1289e+00],
          [-6.2061e-01,  7.5195e-01,  3.3154e-01,  ...,  5.0732e-01, -3.3838e-01, -3.7598e-01],
          ...,
          [-1.1104e+00,  4.8682e-01,  7.1289e-01,  ...,  7.4951e-01, -4.5728e-01, -5.7617e-01],
          [-1.2305e+00,  1.1920e-01, -4.6582e-01,  ...,  3.1830e-02, -4.1797e-01,  5.1172e-01],
          [-7.4524e-02, -4.6802e-01,  3.6108e-01,  ...,  7.2559e-01, -5.4346e-01,  7.7344e-01]]]], dtype=torch.float16)
DESIRED: (shape=torch.Size([4, 256, 16, 16]), dtype=torch.float16)
tensor([[[[-2.6318e-01,  3.3301e-01,  1.6577e-01,  ..., -7.4854e-01,  1.4771e-02, -9.8535e-01],
          [-2.7271e-01,  1.0879e+00,  6.0693e-01,  ...,  7.1143e-01,  1.2354e-01, -1.5601e-01],
          [ 1.2881e+00,  1.1895e+00, -1.0146e+00,  ...,  3.7744e-01,  1.7319e-02, -8.2458e-02],
          ...,
          [-7.3181e-02,  1.7261e-01,  4.6204e-02,  ...,  7.5488e-01,  1.4199e+00, -1.6367e+00],
          [ 2.5000e+00,  1.6582e+00, -1.7920e-01,  ..., -7.0410e-01, -9.3604e-01, -3.8623e-01],
          [-1.4648e-01,  3.9124e-02,  7.4951e-02,  ...,  2.9907e-01,  2.9639e-01, -6.4502e-01]],

         [[ 1.1865e+00, -3.1226e-01,  1.4873e+00,  ..., -3.1763e-01,  2.7051e-01,  1.2476e-01],
          [ 2.8467e-01, -6.4746e-01,  5.0488e-01,  ...,  3.9746e-01,  8.5693e-01,  3.0054e-01],
          [ 5.5957e-01, -9.8828e-01, -8.4814e-01,  ...,  4.5825e-01,  3.6426e-01,  4.8901e-01],
          ...,
          [-8.3838e-01, -2.5684e-01, -8.1738e-01,  ...,  6.2598e-01,  3.0786e-01, -4.4922e-01],
          [-3.8159e-01,  2.7148e-01,  1.6240e+00,  ...,  1.7090e-03,  3.5889e-02, -4.8096e-01],
          [-1.4297e+00, -4.4531e-01,  1.6367e+00,  ..., -4.5337e-01, -6.2305e-01, -1.2852e+00]],

         [[ 7.9785e-01,  1.0869e+00,  2.2168e-01,  ...,  1.3662e+00,  1.0693e+00,  4.6143e-01],
          [-3.9697e-01,  7.4658e-01,  6.7822e-01,  ...,  1.9287e-01, -1.5898e+00, -6.0425e-02],
          [ 8.4912e-01,  1.8265e-02, -1.0333e-01,  ..., -2.7979e-01, -1.2471e+00,  1.1212e-01],
          ...,
          [ 1.0635e+00, -3.1763e-01, -1.2360e-01,  ..., -2.3425e-01, -1.6211e-01,  4.1553e-01],
          [ 1.0078e+00, -1.3257e-01,  2.1423e-01,  ...,  9.7705e-01,  1.9690e-01, -1.5059e+00],
          [ 6.7578e-01,  1.6045e+00, -1.2510e+00,  ...,  1.3105e+00,  1.7188e+00,  6.0986e-01]],

         ...,

         [[ 1.2744e+00, -1.1123e+00,  2.7466e-01,  ...,  8.7158e-01, -4.8340e-01,  2.5806e-01],
          [ 2.0215e+00, -8.3691e-01,  6.7529e-01,  ...,  3.4961e-01,  3.2202e-01, -2.6367e-01],
          [-2.1777e-01, -7.7734e-01,  4.9658e-01,  ...,  1.3760e+00,  1.5146e+00, -1.3213e+00],
          ...,
          [-1.3220e-01,  2.6001e-01, -4.3945e-01,  ...,  1.0664e+00,  1.5684e+00,  1.4563e-01],
          [ 1.2949e+00,  5.8887e-01,  5.4736e-01,  ...,  1.1777e+00,  1.7383e-01,  1.3125e+00],
          [-3.5083e-01, -6.1768e-01, -3.4644e-01,  ...,  1.2822e+00,  1.2256e+00,  4.9707e-01]],

         [[ 6.8848e-01,  2.4658e-02,  7.8613e-01,  ..., -1.1865e+00,  2.0918e+00,  1.9561e+00],
          [-5.7178e-01,  1.5784e-01, -5.1416e-01,  ..., -1.1865e+00, -4.7583e-01,  1.2285e+00],
          [-1.9318e-02,  6.2695e-01,  1.3076e+00,  ..., -1.4014e+00,  3.6255e-01, -1.6333e-01],
          ...,
          [ 1.2344e+00,  7.3535e-01, -7.9980e-01,  ..., -3.4521e-01, -4.2969e-01, -6.8311e-01],
          [-8.3679e-02,  8.4351e-02,  2.2791e-01,  ..., -1.1432e-01, -2.5586e-01,  1.3984e+00],
          [ 7.4512e-01,  1.5552e-01, -7.6416e-01,  ..., -8.4668e-01, -1.0869e+00,  1.7542e-01]],

         [[-1.0703e+00, -3.8135e-01,  8.3643e-01,  ...,  6.8066e-01, -1.0576e+00,  1.5420e+00],
          [-6.6455e-01,  4.4556e-01, -2.6978e-02,  ...,  2.2285e+00,  6.5820e-01,  1.7031e+00],
          [ 9.2480e-01, -2.4646e-01, -7.0020e-01,  ...,  1.1533e+00, -6.7090e-01, -7.3047e-01],
          ...,
          [-1.3428e-02, -3.6035e-01,  8.2568e-01,  ..., -2.5635e-01,  4.8999e-01,  2.8931e-01],
          [ 7.3682e-01,  9.6582e-01, -4.0039e-01,  ..., -1.1221e+00, -1.0779e-01, -1.3501e-01],
          [ 5.8643e-01, -9.3567e-02, -6.9678e-01,  ...,  3.8452e-01, -2.6123e-01, -9.9805e-01]]],


        [[[-7.6172e-01,  6.3281e-01,  7.7490e-01,  ..., -2.7124e-01, -3.3032e-01,  9.6375e-02],
          [-3.9233e-01, -1.8311e-02, -4.1772e-01,  ...,  8.2568e-01,  3.1641e-01, -7.4951e-01],
          [-1.0762e+00, -1.2976e-01, -5.0635e-01,  ...,  3.5889e-01,  7.0703e-01, -3.2422e-01],
          ...,
          [ 1.6650e-01,  1.3467e+00, -3.0908e-01,  ..., -3.4009e-01, -1.3652e+00,  2.2021e-01],
          [-4.6997e-01,  4.4653e-01, -8.1604e-02,  ..., -6.7676e-01,  5.5811e-01,  1.4734e-01],
          [-9.9023e-01,  8.9722e-02,  4.2651e-01,  ..., -1.0059e+00, -2.2974e-01,  5.0830e-01]],

         [[ 5.4395e-01, -6.3379e-01,  3.6865e-02,  ..., -1.3135e+00, -1.4297e+00, -1.2924e-02],
          [ 9.7510e-01, -5.4004e-01,  2.6392e-01,  ..., -7.7734e-01, -2.5928e-01, -1.6992e+00],
          [ 1.4424e+00,  9.6191e-02,  1.0742e-02,  ...,  3.7769e-01, -8.9160e-01,  5.4883e-01],
          ...,
          [-8.7695e-01,  2.1826e-01, -4.4360e-01,  ..., -1.1255e-01,  5.5908e-01,  4.0918e-01],
          [-1.0272e-01, -3.7891e-01, -8.8867e-02,  ...,  9.8535e-01, -2.1899e-01,  5.4199e-01],
          [-5.4639e-01, -1.7275e+00, -1.7441e+00,  ...,  1.1982e+00, -1.2482e-01,  1.3232e-01]],

         [[-1.7480e+00, -9.2529e-02,  6.4551e-01,  ...,  2.9346e-01, -9.2188e-01,  2.0715e-01],
          [ 1.2637e+00, -3.3594e-01, -1.2170e-01,  ..., -4.8096e-02, -5.8691e-01, -2.5464e-01],
          [ 3.5858e-02, -8.8818e-01, -3.3447e-01,  ...,  8.8330e-01,  7.7344e-01,  7.1826e-01],
          ...,
          [ 2.9492e-01, -1.2021e+00,  3.1787e-01,  ...,  8.3496e-01,  1.4434e+00,  9.2102e-02],
          [ 1.5059e+00,  8.8525e-01,  8.7744e-01,  ...,  8.3447e-01,  5.8887e-01, -1.5259e-02],
          [-1.0625e+00, -2.8491e-01,  5.5518e-01,  ...,  1.6614e-01,  1.2236e+00,  3.4985e-01]],

         ...,

         [[ 1.2100e+00, -6.2207e-01, -3.2080e-01,  ..., -1.3115e+00, -1.2930e+00,  8.8745e-02],
          [ 8.1299e-01, -8.1299e-01, -3.2568e-01,  ..., -8.6621e-01, -2.2034e-02,  8.7744e-01],
          [-2.3906e+00, -8.4766e-01,  2.4243e-01,  ...,  2.7002e-01,  9.4385e-01, -2.1680e-01],
          ...,
          [-4.6143e-01, -1.1953e+00, -4.4604e-01,  ..., -1.0278e-01, -3.7354e-01, -6.7334e-01],
          [ 1.3809e+00,  2.6611e-01,  9.1895e-01,  ...,  4.6460e-01, -5.1514e-01, -9.3848e-01],
          [-6.5918e-01,  1.0264e+00,  2.4829e-01,  ..., -4.9170e-01,  3.2227e-01, -1.4463e+00]],

         [[-7.6477e-02, -4.8633e-01, -8.4863e-01,  ...,  4.0820e-01, -3.8208e-01,  6.6309e-01],
          [-1.0742e+00,  3.7085e-01, -2.8687e-02,  ..., -6.0791e-02,  1.3379e-01, -6.5137e-01],
          [ 2.4524e-01,  1.0443e-01,  7.4756e-01,  ..., -8.0444e-02, -3.8672e-01,  3.9526e-01],
          ...,
          [ 1.1836e+00,  7.3193e-01,  6.6772e-02,  ..., -1.0088e+00,  1.3564e+00, -6.9922e-01],
          [ 1.9775e+00,  3.7305e-01, -9.9243e-02,  ...,  6.3574e-01, -1.6626e-01, -1.2861e+00],
          [ 6.4795e-01, -2.2339e-01,  6.6772e-02,  ...,  1.5801e+00,  1.9604e-01, -1.2852e+00]],

         [[-5.3467e-01, -5.8594e-01, -5.7861e-01,  ..., -3.4668e-01, -4.6387e-01, -1.2323e-01],
          [ 9.3555e-01,  6.8506e-01, -3.5181e-01,  ..., -3.2886e-01, -2.8369e-01, -4.6289e-01],
          [ 1.0908e+00,  4.8047e-01, -5.6836e-01,  ...,  7.0703e-01,  5.0391e-01,  3.6890e-01],
          ...,
          [ 4.2496e-03,  3.8379e-01, -6.0889e-01,  ...,  1.7639e-02,  2.1521e-01, -1.3564e+00],
          [ 2.8833e-01,  2.7075e-01,  6.3184e-01,  ...,  2.5781e-01,  6.9482e-01,  1.0039e+00],
          [-7.2852e-01, -4.3774e-01,  7.0703e-01,  ...,  5.1025e-01, -6.0498e-01, -5.6689e-01]]],


        [[[-1.6455e-01,  6.0303e-01,  4.4922e-02,  ...,  8.5742e-01, -2.2205e-01, -5.6592e-01],
          [ 7.7051e-01, -7.0068e-01, -8.7402e-01,  ...,  7.2559e-01,  1.6089e-01, -1.6543e+00],
          [ 8.7744e-01, -5.6250e-01, -2.2188e+00,  ...,  3.3740e-01,  6.0303e-01,  3.8257e-01],
          ...,
          [-1.0664e+00,  1.0645e+00,  1.7603e-01,  ..., -1.4531e+00,  8.1201e-01,  7.1826e-01],
          [-4.7949e-01,  3.2397e-01, -3.1982e-02,  ..., -1.6833e-01, -7.4756e-01, -5.3369e-01],
          [-1.0645e+00, -5.4785e-01,  2.8662e-01,  ..., -6.4648e-01,  2.3767e-01,  6.0352e-01]],

         [[-5.0098e-01, -1.3887e+00,  6.5137e-01,  ...,  2.4170e-01, -3.0420e-01,  1.7432e-01],
          [-1.0371e+00,  2.1582e-01, -2.9858e-01,  ..., -5.5518e-01, -2.2510e-01, -3.9600e-01],
          [-1.5068e+00, -5.8057e-01,  4.9210e-03,  ..., -2.9395e-01, -2.9346e-01,  2.6636e-01],
          ...,
          [ 1.0654e+00,  9.5508e-01,  1.9922e-01,  ...,  7.6611e-01,  4.0039e-02, -5.6055e-01],
          [ 1.8477e+00,  5.4492e-01, -1.0029e+00,  ..., -9.1919e-02, -1.2031e+00, -1.4873e+00],
          [ 1.6387e+00,  5.5371e-01,  3.0811e-01,  ...,  1.0498e+00, -3.5303e-01, -8.9844e-01]],

         [[-1.8933e-01, -6.1035e-01, -1.8984e+00,  ..., -4.9072e-01,  8.9307e-01, -5.9668e-01],
          [-1.1932e-01,  2.4878e-01, -4.1577e-01,  ..., -5.1074e-01, -6.5918e-01,  2.8882e-01],
          [ 6.0791e-01,  1.1322e-01, -3.5498e-01,  ..., -1.1846e+00, -8.3557e-02,  6.0986e-01],
          ...,
          [ 2.6050e-01,  1.2676e+00,  1.3828e+00,  ..., -1.4082e+00, -5.4834e-01,  1.0767e-01],
          [ 2.2058e-01, -2.9590e-01, -1.9336e-01,  ..., -7.8125e-01,  2.2668e-01,  7.2070e-01],
          [-4.0698e-01,  1.5015e-01,  1.5576e+00,  ...,  4.4580e-01, -5.9766e-01,  5.5762e-01]],

         ...,

         [[-2.1594e-01,  4.8853e-01, -9.4824e-01,  ...,  1.2073e-01, -1.5586e+00, -7.6172e-01],
          [ 1.6528e-01, -1.2119e+00,  3.3130e-01,  ...,  7.0850e-01,  8.3203e-01,  7.7295e-01],
          [ 1.9592e-01, -5.5664e-01, -7.2998e-01,  ...,  7.1045e-01,  1.0127e+00, -1.5859e+00],
          ...,
          [ 5.1270e-01,  9.9487e-02,  1.9653e-01,  ...,  2.3999e-01, -6.5576e-01,  1.6191e+00],
          [-7.8564e-01, -2.0654e-01, -1.0391e+00,  ..., -3.2617e-01,  2.3145e-01, -5.5859e-01],
          [-6.5771e-01, -7.7979e-01,  1.0724e-01,  ..., -3.1689e-01, -8.8428e-01, -8.3350e-01]],

         [[-2.9512e+00, -9.8633e-01, -1.0791e+00,  ..., -1.5000e+00,  1.7734e+00,  1.5420e+00],
          [-7.7148e-01,  3.7646e-01,  7.7539e-01,  ..., -3.1201e-01,  1.7148e+00,  1.5664e+00],
          [ 1.4414e+00,  1.6436e+00, -1.2659e-01,  ...,  1.8295e-02,  4.9756e-01,  7.7942e-02],
          ...,
          [-7.9004e-01, -8.9160e-01,  4.9854e-01,  ..., -3.8605e-02,  1.3633e+00, -8.4521e-01],
          [-1.9277e+00, -1.3174e+00, -7.5098e-01,  ..., -9.1846e-01, -3.6670e-01, -1.3877e+00],
          [ 7.1191e-01, -1.1810e-01, -6.8848e-01,  ..., -2.0918e+00, -1.5547e+00,  8.6523e-01]],

         [[ 3.9648e-01, -8.5840e-01,  8.7744e-01,  ..., -5.5762e-01,  2.5098e-01,  1.0449e+00],
          [ 6.0840e-01, -5.4260e-02,  2.6318e-01,  ...,  1.6670e+00,  1.7275e+00,  7.8491e-02],
          [-1.1768e+00,  9.6582e-01,  1.3613e+00,  ...,  1.9746e+00,  3.0420e-01, -9.0088e-01],
          ...,
          [-7.6709e-01,  5.4297e-01, -6.4258e-01,  ..., -1.4492e+00,  2.6245e-02,  7.1533e-01],
          [-6.8213e-01, -5.6641e-01,  2.0923e-01,  ..., -2.6703e-02,  6.0181e-02,  1.5420e+00],
          [-9.5312e-01, -1.6211e+00, -4.2334e-01,  ..., -5.6738e-01,  4.9683e-01, -1.1777e+00]]],


        [[[ 1.6016e+00,  3.7769e-01,  6.2207e-01,  ..., -1.5566e+00, -4.2090e-01, -3.9917e-01],
          [-2.1851e-01,  6.2744e-01, -1.6123e+00,  ..., -2.5415e-01, -4.5483e-01, -4.6826e-01],
          [-5.4199e-01, -1.5576e-01,  9.6631e-01,  ...,  9.0527e-01,  2.8540e-01,  1.5322e+00],
          ...,
          [-1.7224e-01,  4.7827e-01, -4.3457e-01,  ..., -2.3328e-01,  5.8594e-03, -5.3418e-01],
          [-3.7793e-01,  6.2256e-01, -1.3245e-01,  ...,  9.2480e-01,  2.8003e-01, -4.1650e-01],
          [-1.8477e+00, -1.0195e+00,  7.7979e-01,  ..., -4.6631e-01, -5.5811e-01, -1.0615e+00]],

         [[-1.5967e+00, -7.0898e-01,  2.0239e-01,  ..., -4.0723e-01,  2.1328e+00,  2.8955e-01],
          [-2.1543e+00, -1.2148e+00, -1.7407e-01,  ..., -5.8936e-01,  6.1914e-01, -5.0049e-01],
          [-7.6660e-01, -5.3418e-01, -1.6956e-01,  ..., -3.4521e-01,  9.1504e-01,  4.0820e-01],
          ...,
          [-2.3828e-01,  1.2246e+00, -3.5126e-02,  ...,  4.8389e-01,  1.2183e-01,  4.5679e-01],
          [ 9.9561e-01,  1.4727e+00,  1.3496e+00,  ...,  1.3184e+00,  1.5029e+00,  1.3464e-01],
          [-1.9080e-01,  1.5515e-01,  3.7451e-01,  ...,  2.5566e+00,  9.0967e-01, -9.5557e-01]],

         [[-1.3633e+00,  8.3105e-01, -1.6443e-01,  ...,  1.5410e+00, -5.7275e-01, -1.8762e-01],
          [-5.1855e-01, -7.2949e-01, -1.5479e+00,  ...,  4.8877e-01, -6.0938e-01,  8.3313e-03],
          [ 9.3506e-01,  6.2866e-02,  1.1748e+00,  ...,  1.2061e-01,  2.2125e-02, -2.3669e-01],
          ...,
          [ 3.4131e-01,  5.5908e-02, -1.6797e-01,  ..., -7.7441e-01,  4.1064e-01,  8.2129e-01],
          [ 4.1675e-01,  8.2666e-01, -1.0046e-01,  ..., -1.3486e+00, -1.1615e-01,  1.0205e+00],
          [ 9.9121e-02,  8.0225e-01,  6.5039e-01,  ...,  8.3862e-02,  1.8286e-01, -2.3145e+00]],

         ...,

         [[-1.3525e-01,  1.2705e+00, -5.1514e-01,  ..., -1.6113e-02,  1.5166e+00, -3.3203e-02],
          [ 1.8721e+00, -1.0967e+00,  4.4250e-02,  ...,  7.9102e-02,  5.5811e-01, -6.2207e-01],
          [ 7.7454e-02, -4.5605e-01, -2.6465e-01,  ..., -6.5771e-01, -6.9141e-01, -6.7871e-01],
          ...,
          [-3.6743e-01, -1.7114e-01, -6.2012e-01,  ..., -6.8555e-01, -2.8369e-01,  9.5801e-01],
          [-6.6602e-01,  5.5664e-01,  3.1836e-01,  ..., -6.3721e-01, -6.5674e-01,  1.5839e-02],
          [ 1.1797e+00,  2.1113e+00,  7.3389e-01,  ..., -7.2949e-01, -8.8672e-01,  4.7729e-02]],

         [[-7.1240e-01,  7.6562e-01,  3.7695e-01,  ...,  6.1230e-01,  2.2375e-01, -9.5703e-01],
          [ 2.0337e-01,  1.5503e-01, -1.0781e+00,  ...,  6.1328e-01,  3.5986e-01,  1.2842e+00],
          [-2.6886e-02, -2.9858e-01,  5.0684e-01,  ..., -1.0068e+00,  4.5361e-01,  8.5645e-01],
          ...,
          [-2.3401e-01,  2.9370e-01,  1.3564e+00,  ..., -7.6294e-02, -2.0469e+00, -2.1855e+00],
          [-1.0693e+00, -5.2979e-01, -8.0933e-02,  ...,  1.9958e-01,  1.4277e+00,  1.7456e-01],
          [ 4.9438e-01, -3.2104e-01, -4.4092e-01,  ...,  3.3789e-01,  1.6357e-01,  2.2314e-01]],

         [[-1.3730e+00,  2.4414e-04, -3.4180e-02,  ...,  5.9375e-01,  1.3037e-01, -4.7607e-01],
          [-1.8835e-01, -1.3892e-01, -7.9346e-03,  ..., -2.2119e-01, -6.1279e-01,  1.1396e+00],
          [-6.2939e-01,  7.6221e-01,  3.3789e-01,  ...,  5.1123e-01, -3.4131e-01, -3.7769e-01],
          ...,
          [-1.1240e+00,  4.8706e-01,  7.2266e-01,  ...,  7.5732e-01, -4.6021e-01, -5.8301e-01],
          [-1.2412e+00,  1.2231e-01, -4.7021e-01,  ...,  3.3691e-02, -4.2236e-01,  5.1514e-01],
          [-7.4036e-02, -4.7021e-01,  3.6182e-01,  ...,  7.3096e-01, -5.5518e-01,  7.7734e-01]]]], dtype=torch.float16)

2025-06-10 00:13:33.321636 GPU 6 156010 test begin: paddle.nn.functional.interpolate(Tensor([4, 256, 64, 64],"float16"), size=list[256,256,], mode="bilinear", align_corners=False, )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([4, 256, 64, 64],"float16"), size=list[256,256,], mode="bilinear", align_corners=False, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 11186 / 4194304 (0.3%)
Greatest absolute difference: 0.05078125 at index (1, 68, 55, 42) (up to 0.01 allowed)
Greatest relative difference: 30.953125 at index (2, 109, 39, 34) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([4, 256, 64, 64]), dtype=torch.float16)
tensor([[[[-6.9275e-02,  6.8066e-01,  8.5010e-01,  ..., -3.6572e-01, -4.0112e-01, -6.3379e-01],
          [ 8.5547e-01,  2.9370e-01,  5.4053e-01,  ..., -4.6875e-01, -1.1396e+00, -6.7444e-02],
          [ 9.0869e-01, -9.9512e-01,  1.4609e+00,  ...,  1.8018e-01,  3.0859e-01, -3.4473e-01],
          ...,
          [ 6.9238e-01,  9.5557e-01, -5.8301e-01,  ..., -8.1152e-01, -6.7236e-01,  1.5735e-01],
          [-4.9658e-01,  1.4766e+00, -3.1104e-01,  ...,  1.2529e+00, -7.4219e-01,  8.2617e-01],
          [-3.9526e-01,  1.1455e+00,  1.4248e+00,  ...,  1.5059e+00,  3.5919e-02, -3.4131e-01]],

         [[-4.8413e-01, -4.7778e-01, -1.4541e+00,  ...,  6.3135e-01, -4.1138e-01,  1.1548e-01],
          [-6.9678e-01, -9.8730e-01, -7.1094e-01,  ...,  5.6836e-01,  8.5938e-01, -9.9072e-01],
          [ 7.2900e-01, -4.2944e-01, -6.6040e-02,  ..., -4.6753e-02,  4.8169e-01,  8.7158e-02],
          ...,
          [ 1.6836e+00, -1.0767e-01,  3.1519e-01,  ..., -5.1123e-01, -1.0137e+00, -9.1113e-01],
          [ 4.9976e-01, -6.1230e-01,  2.4353e-01,  ...,  1.3428e+00,  1.1055e+00, -4.8926e-01],
          [-9.1992e-01,  3.4814e-01,  1.8994e-01,  ...,  4.9731e-01,  1.5684e+00,  9.2334e-01]],

         [[ 1.1641e+00, -7.5012e-02, -1.2910e+00,  ...,  1.0869e+00,  1.0381e+00,  2.7246e-01],
          [ 5.0732e-01,  2.7832e-01, -4.7192e-01,  ...,  1.3269e-01,  8.1152e-01,  3.6719e-01],
          [-1.5635e+00, -1.4951e+00, -3.8306e-01,  ..., -5.7910e-01, -6.6162e-01,  1.3174e+00],
          ...,
          [ 2.1436e-01,  1.0771e+00, -1.5186e-01,  ...,  2.9590e-01, -3.0542e-01,  3.5156e-02],
          [ 1.1602e+00, -2.2354e-02, -4.3604e-01,  ...,  1.7542e-01, -2.9712e-01,  2.6562e-01],
          [-2.9297e-01,  1.0342e+00,  3.6572e-01,  ..., -1.1359e-01,  5.6091e-02, -2.3962e-01]],

         ...,

         [[-7.0947e-01, -3.3936e-01, -1.9897e-01,  ..., -1.4941e+00, -7.0898e-01,  3.9160e-01],
          [-5.0732e-01, -1.0967e+00, -7.0752e-01,  ...,  1.9189e+00,  1.0425e-01,  7.2070e-01],
          [ 5.0964e-02, -1.0811e+00, -2.3303e-01,  ...,  8.1445e-01,  5.9180e-01,  3.8867e-01],
          ...,
          [-1.1006e+00, -2.4353e-01,  3.8727e-02,  ..., -6.9824e-01, -1.2280e-01,  1.0928e+00],
          [-5.9521e-01, -6.5869e-01, -7.0215e-01,  ..., -1.4922e+00,  5.4688e-01,  1.6455e+00],
          [ 7.6074e-01,  5.9961e-01, -6.0303e-01,  ..., -5.3076e-01,  4.9487e-01, -6.5283e-01]],

         [[ 7.7515e-02,  2.5732e-01,  1.2148e+00,  ...,  1.1982e+00,  4.4922e-01,  1.0352e+00],
          [ 9.0485e-03,  8.1885e-01,  9.3066e-01,  ..., -8.1348e-01, -1.0654e+00,  8.9258e-01],
          [ 1.6650e+00,  2.1055e+00,  1.5942e-01,  ..., -1.8753e-02, -6.4551e-01,  2.2217e-01],
          ...,
          [ 2.0471e-01,  1.2773e+00,  6.1607e-03,  ..., -2.8418e-01,  6.9922e-01, -7.5586e-01],
          [ 2.5781e-01,  8.0908e-01,  2.9834e-01,  ...,  1.7981e-01,  1.6650e+00,  7.9834e-01],
          [ 1.9580e+00, -9.9854e-02, -1.7617e+00,  ...,  2.8784e-01,  6.7993e-02,  1.1353e-01]],

         [[ 1.1292e-02, -1.8760e+00, -2.5977e-01,  ..., -5.8008e-01, -7.3975e-01, -7.9199e-01],
          [ 2.6001e-01, -1.1299e-02,  4.9561e-02,  ..., -1.7637e+00, -3.1372e-01,  5.6592e-01],
          [ 1.4668e+00,  3.2080e-01,  8.2129e-01,  ..., -1.1943e+00, -1.2012e+00,  1.3196e-01],
          ...,
          [ 3.1909e-01,  1.3245e-01,  1.4673e-01,  ..., -4.2334e-01,  2.2986e-01,  8.3398e-01],
          [-8.9014e-01,  2.2925e-01,  7.2754e-01,  ..., -1.0449e+00, -8.3154e-01, -9.8193e-01],
          [-1.6270e+00, -1.0176e+00,  3.2568e-01,  ...,  4.8438e-01, -6.1572e-01,  1.8711e+00]]],


        [[[ 5.2441e-01,  1.2539e+00, -1.1113e+00,  ...,  5.0830e-01,  1.5078e+00,  1.2490e+00],
          [-1.0872e-02,  3.1909e-01,  2.7954e-01,  ...,  5.2344e-01,  8.9014e-01,  1.2637e+00],
          [ 2.6953e-01,  7.6562e-01,  2.2656e+00,  ..., -1.0078e+00,  4.8462e-02, -2.4939e-01],
          ...,
          [-6.8652e-01,  2.7637e-01, -1.3635e-01,  ...,  8.6865e-01,  4.3945e-01,  2.9492e-01],
          [-6.9141e-01, -4.3066e-01, -3.2764e-01,  ..., -3.1836e-01, -3.7305e-01,  8.3301e-01],
          [-3.8623e-01,  3.3618e-01, -4.3579e-01,  ..., -1.8677e-01,  9.5166e-01,  1.2878e-01]],

         [[ 9.1846e-01, -8.8623e-02, -7.9834e-01,  ...,  2.2253e-01,  1.6638e-01,  3.5693e-01],
          [ 9.4580e-01,  1.3513e-01,  6.3086e-01,  ...,  7.0508e-01, -2.1210e-02, -8.2520e-01],
          [ 5.8447e-01, -1.0996e+00,  1.0303e+00,  ...,  3.2861e-01,  7.8613e-01, -1.1438e-01],
          ...,
          [ 1.9727e+00,  8.7988e-01,  6.6406e-01,  ..., -5.2344e-01, -5.0586e-01, -5.6152e-01],
          [ 7.7441e-01,  3.2007e-01, -1.5410e+00,  ..., -1.1543e+00,  1.5076e-02,  1.1963e+00],
          [ 2.9774e-03,  2.0166e-01, -1.0156e+00,  ..., -1.7554e-01,  6.7773e-01,  8.5596e-01]],

         [[-9.1699e-01, -4.4922e-02,  9.6973e-01,  ..., -6.3538e-02, -1.0225e+00, -5.8838e-01],
          [-1.4267e-03,  1.4170e+00,  2.2595e-01,  ..., -1.6523e+00, -1.3926e+00,  3.8184e-01],
          [ 1.0492e-01, -6.5369e-02,  3.6224e-02,  ..., -2.7969e+00, -6.5088e-01,  2.7817e-02],
          ...,
          [-1.2266e+00,  5.5371e-01,  7.2900e-01,  ..., -1.0176e+00, -5.4736e-01,  2.2969e+00],
          [ 1.9128e-01, -7.6318e-01, -7.7295e-01,  ..., -9.6143e-01, -8.6816e-01, -2.5806e-01],
          [-5.9912e-01,  8.3252e-01, -1.2236e+00,  ..., -6.6895e-01,  4.9805e-01,  6.0699e-02]],

         ...,

         [[-4.8218e-01, -7.8369e-02, -8.1543e-01,  ..., -7.4463e-01, -1.7021e+00, -1.3799e+00],
          [ 1.3809e+00,  2.9639e-01, -3.7933e-02,  ..., -1.0615e+00, -1.2734e+00, -7.7930e-01],
          [-4.0955e-02,  2.0459e-01, -8.6523e-01,  ...,  6.6943e-01,  1.5051e-01, -3.8940e-01],
          ...,
          [-1.0977e+00, -1.0615e+00,  4.3750e-01,  ..., -1.3076e+00, -1.4343e-01,  1.5488e+00],
          [ 3.9404e-01,  1.5352e+00,  5.9717e-01,  ..., -2.0798e-02, -2.9224e-01,  1.5762e+00],
          [ 1.0303e+00, -5.9174e-02, -1.5808e-01,  ..., -3.4595e-01, -1.8448e-02,  1.2656e+00]],

         [[ 4.3042e-01, -5.0171e-02, -8.6768e-01,  ...,  1.9395e+00,  1.4766e+00,  3.7183e-01],
          [-3.8062e-01, -5.3955e-01, -3.4033e-01,  ...,  5.1465e-01,  2.5244e-01, -1.5156e+00],
          [-3.0029e-01, -9.6973e-01, -8.8672e-01,  ...,  6.2256e-01,  7.0898e-01, -3.9795e-01],
          ...,
          [-2.3157e-01,  2.3425e-01,  5.2148e-01,  ..., -8.4912e-01,  3.5059e-01, -6.2842e-01],
          [ 5.1611e-01,  3.9087e-01,  6.1670e-01,  ..., -8.7598e-01, -9.0430e-01, -9.9658e-01],
          [-9.0869e-01, -8.3838e-01,  2.7710e-01,  ..., -5.7764e-01, -6.7627e-02, -4.8169e-01]],

         [[ 1.5010e+00,  2.0557e-01, -8.0859e-01,  ...,  4.3262e-01, -9.4385e-01,  4.8047e-01],
          [ 7.8711e-01,  3.0273e-01,  6.7139e-02,  ...,  4.0918e-01,  2.5830e-01, -4.3335e-01],
          [ 8.5547e-01, -1.4197e-01, -2.5146e-01,  ..., -5.6122e-02,  1.4061e-02,  4.7461e-01],
          ...,
          [-7.8564e-01,  4.2822e-01,  6.6748e-01,  ..., -1.7070e+00,  4.0070e-02,  1.4893e+00],
          [-1.1621e+00, -1.8506e+00,  4.4385e-01,  ..., -6.4404e-01, -6.7236e-01,  1.0186e+00],
          [-1.5029e+00,  6.1084e-01,  2.4255e-01,  ...,  4.1431e-01,  6.6992e-01,  4.4751e-01]]],


        [[[ 1.7588e+00,  1.4270e-01, -1.5784e-01,  ...,  1.2598e-01, -6.8604e-01,  1.8036e-02],
          [-2.5952e-01, -5.7251e-02,  1.3870e-02,  ...,  1.3318e-01,  7.5049e-01, -1.4775e+00],
          [ 4.6826e-01,  7.8809e-01,  9.8877e-01,  ..., -4.3304e-02, -7.5195e-01, -1.0264e+00],
          ...,
          [-8.5205e-02, -3.8818e-01,  2.3865e-01,  ..., -1.1914e-01,  7.6855e-01,  1.0742e+00],
          [-1.5381e+00, -8.3984e-01, -4.9927e-01,  ..., -8.1934e-01, -9.3311e-01,  1.0234e+00],
          [-1.2830e-01, -3.7012e-01,  1.3398e+00,  ...,  4.4409e-01,  8.8501e-02, -3.8623e-01]],

         [[ 3.8257e-01, -7.6367e-01, -2.3477e+00,  ..., -9.9854e-02, -2.4261e-02,  2.2461e-01],
          [-1.8054e-01, -3.8501e-01,  6.0840e-01,  ...,  3.1226e-01, -1.8623e+00, -1.0762e+00],
          [ 9.6777e-01, -4.0063e-01,  7.0801e-01,  ...,  1.1016e+00,  1.7102e-01, -1.7725e-01],
          ...,
          [-4.0674e-01, -4.4092e-01, -1.2041e+00,  ..., -3.9282e-01,  3.3984e-01, -4.0674e-01],
          [-7.9150e-01,  3.7012e-01,  8.5938e-01,  ..., -7.9102e-01,  5.9776e-03,  5.8057e-01],
          [ 6.7090e-01, -1.6982e+00,  3.3356e-02,  ..., -9.3994e-01, -1.9897e-01,  5.3516e-01]],

         [[ 5.7715e-01, -2.9541e-01, -1.5137e+00,  ...,  1.1536e-01,  6.1005e-02,  2.8149e-01],
          [-6.8408e-01, -9.0869e-01,  1.6104e+00,  ..., -8.2568e-01,  6.2354e-01, -1.2195e-01],
          [-3.1860e-01, -9.7363e-01,  1.2383e+00,  ...,  3.3447e-01,  1.4639e+00, -6.5967e-01],
          ...,
          [ 5.3680e-02, -3.1543e-01,  1.2949e+00,  ...,  1.4673e-01, -3.5229e-01, -1.8438e+00],
          [-1.5264e+00, -1.0195e+00, -2.8296e-01,  ..., -4.2212e-01, -2.8809e-01, -6.9727e-01],
          [-1.0801e+00, -6.5088e-01,  1.2231e-01,  ...,  1.0459e+00, -4.8730e-01, -1.0822e-01]],

         ...,

         [[-1.0693e+00, -4.2212e-01, -6.5576e-01,  ...,  3.5327e-01, -2.0532e-01,  6.3135e-01],
          [-5.3809e-01, -5.4541e-01,  5.4248e-01,  ..., -2.0972e-01,  2.6733e-01,  6.3574e-01],
          [-5.2588e-01,  6.1084e-01,  1.0840e+00,  ...,  1.3701e+00, -6.4270e-02,  3.8300e-02],
          ...,
          [-3.8403e-01,  9.0723e-01, -7.1436e-01,  ..., -7.0508e-01, -1.0781e+00, -7.9053e-01],
          [-1.4844e+00, -2.2791e-01,  2.3755e-01,  ...,  4.7144e-01, -1.2490e+00,  1.6931e-01],
          [-1.3220e-01, -9.7839e-02,  8.8721e-01,  ...,  6.7529e-01, -1.1224e-01,  1.2256e+00]],

         [[-1.7354e+00,  9.1064e-01, -1.7102e-01,  ..., -1.1016e+00, -7.1777e-01, -1.5596e+00],
          [-1.0332e+00,  1.2715e+00, -3.0298e-01,  ..., -3.3960e-01,  1.0391e+00, -4.1895e-01],
          [ 2.2986e-01,  6.7578e-01, -9.8291e-01,  ...,  1.2676e+00,  1.0029e+00,  2.5146e-01],
          ...,
          [-7.7881e-01,  8.8184e-01,  3.0396e-01,  ...,  4.3115e-01, -5.9229e-01, -1.0713e+00],
          [ 1.6248e-01, -4.2090e-01, -4.7632e-01,  ...,  1.6687e-01, -2.8540e-01,  5.3369e-01],
          [-7.7209e-02, -2.8247e-01,  1.8250e-01,  ...,  9.3311e-01,  6.8701e-01,  5.0488e-01]],

         [[-1.3452e-01, -8.6475e-01, -7.5098e-01,  ..., -6.8701e-01, -3.8354e-01, -7.0703e-01],
          [ 5.8252e-01,  1.1816e+00,  1.6525e-02,  ...,  5.0195e-01, -6.3721e-01, -2.4731e-01],
          [-5.5615e-01, -4.8853e-01, -3.9062e-01,  ...,  6.1523e-01, -2.3262e+00, -1.8604e+00],
          ...,
          [-6.9678e-01,  5.2551e-02,  5.0684e-01,  ...,  8.1982e-01, -3.1592e-01,  1.0664e+00],
          [ 7.0068e-01,  4.2822e-01,  1.1230e+00,  ...,  5.9723e-02,  4.8633e-01,  2.7856e-01],
          [-4.9512e-01,  2.2070e-01,  6.7676e-01,  ...,  7.6123e-01,  1.1709e+00,  1.9785e+00]]],


        [[[ 9.6094e-01, -2.0349e-01,  1.2720e-01,  ...,  8.5449e-01,  1.4258e+00, -1.2510e+00],
          [ 1.0333e-01, -3.5010e-01,  1.6328e+00,  ...,  2.1460e-01,  1.7566e-01, -1.5127e+00],
          [ 1.7859e-01, -1.4331e-01,  1.2598e+00,  ...,  4.5728e-01,  1.0078e+00, -9.5068e-01],
          ...,
          [ 7.9248e-01,  1.5283e-01,  5.2490e-01,  ..., -1.5576e-01, -1.3018e+00,  8.5986e-01],
          [ 8.7891e-01,  4.6729e-01,  6.4990e-01,  ...,  4.7339e-01, -4.7607e-01,  1.3562e-01],
          [-8.0566e-01, -1.7578e-01, -9.0625e-01,  ...,  6.2354e-01, -3.0396e-01,  1.1807e+00]],

         [[-5.0635e-01, -1.4758e-01, -3.5913e-01,  ...,  4.0527e-01, -8.5498e-01, -3.7988e-01],
          [-1.1904e+00, -7.5867e-02,  6.7969e-01,  ...,  2.9102e-01,  2.4185e-02,  8.5840e-01],
          [ 9.9707e-01, -3.9429e-02,  7.2949e-01,  ..., -1.1316e-01, -2.2083e-01, -5.3613e-01],
          ...,
          [-9.0820e-01, -1.3611e-01,  3.7524e-01,  ...,  6.6504e-01,  7.0703e-01, -3.8483e-02],
          [-6.4014e-01, -7.2070e-01, -3.2593e-01,  ...,  7.2363e-01,  1.6660e+00,  8.8770e-01],
          [-6.8945e-01, -8.5645e-01, -1.0452e-02,  ...,  5.1221e-01,  3.5791e-01, -3.0859e-01]],

         [[ 9.0881e-02, -3.2446e-01, -8.3203e-01,  ..., -5.7324e-01, -6.2012e-01,  6.4697e-01],
          [ 1.0557e+00,  3.0243e-02, -1.6736e-01,  ...,  1.2588e+00, -7.2314e-01, -1.1328e+00],
          [-9.1736e-02,  5.5225e-01, -9.4360e-02,  ...,  3.4570e-01, -7.6562e-01,  2.3022e-01],
          ...,
          [ 4.7925e-01,  4.8682e-01,  4.5312e-01,  ..., -6.0889e-01, -2.8833e-01,  3.3569e-01],
          [-1.4343e-03, -6.9092e-01, -4.1650e-01,  ..., -1.2383e+00,  2.2974e-01,  8.6670e-01],
          [ 2.3865e-01,  1.2607e+00,  2.0520e-01,  ..., -6.4331e-02, -9.1797e-02, -6.4453e-01]],

         ...,

         [[-1.0459e+00,  2.6855e-01, -1.1709e+00,  ...,  2.5854e-01, -5.0635e-01,  1.8174e+00],
          [-1.0801e+00, -1.1064e+00,  5.5615e-01,  ...,  2.4805e-01, -5.3955e-01,  7.3535e-01],
          [-4.8730e-01, -8.9111e-01, -7.5781e-01,  ...,  6.1963e-01,  1.5247e-01,  3.7451e-01],
          ...,
          [ 1.0234e+00,  4.7339e-01,  4.7876e-01,  ...,  7.1680e-01, -3.4033e-01, -4.7754e-01],
          [ 4.1260e-01, -1.3135e-01, -1.0732e+00,  ..., -3.4961e-01,  1.1553e+00, -3.6304e-01],
          [ 3.2471e-01, -7.8552e-02,  6.0059e-02,  ..., -3.7903e-02, -1.7444e-01, -1.2773e+00]],

         [[-3.0054e-01, -1.9932e+00,  2.7496e-02,  ..., -7.5342e-01, -9.9951e-01,  1.0713e+00],
          [-8.2666e-01,  1.5850e+00, -4.4678e-01,  ..., -1.3504e-02, -4.4238e-01,  8.3447e-01],
          [ 3.2495e-01,  1.1943e+00, -6.3843e-02,  ...,  7.2559e-01,  1.8408e-01, -2.4817e-01],
          ...,
          [ 3.6133e-01, -9.4189e-01, -3.5449e-01,  ..., -3.7646e-01,  1.3878e-02, -5.4492e-01],
          [ 8.2568e-01, -7.0605e-01, -1.0830e+00,  ..., -5.2148e-01, -2.1790e-01, -1.0566e+00],
          [-1.5918e+00, -9.7266e-01, -1.7422e+00,  ...,  2.2559e-01, -2.5177e-03, -1.0225e+00]],

         [[-1.1807e+00, -1.6260e+00, -5.8496e-01,  ..., -5.8203e-01,  6.6699e-01,  4.8926e-01],
          [-9.8938e-02, -3.6694e-01,  6.7139e-01,  ..., -5.6299e-01,  2.6074e-01, -2.4561e-01],
          [-6.5430e-01,  3.8892e-01,  1.3196e-01,  ..., -3.1079e-01,  7.9248e-01,  5.4016e-03],
          ...,
          [ 3.2202e-01, -2.8760e-01,  2.1313e-01,  ..., -4.6460e-01,  1.0684e+00, -1.0406e-01],
          [-9.6826e-01, -6.5820e-01,  5.2539e-01,  ...,  1.1807e+00,  2.7075e-01,  3.6670e-01],
          [-1.9150e+00, -1.3174e+00,  1.4463e+00,  ..., -8.6035e-01,  1.5955e-01, -6.3049e-02]]]], dtype=torch.float16)
DESIRED: (shape=torch.Size([4, 256, 64, 64]), dtype=torch.float16)
tensor([[[[-7.0557e-02,  6.8457e-01,  8.5889e-01,  ..., -3.6865e-01, -4.0454e-01, -6.4111e-01],
          [ 8.6279e-01,  3.0078e-01,  5.5029e-01,  ..., -4.7437e-01, -1.1543e+00, -6.9885e-02],
          [ 9.1553e-01, -1.0088e+00,  1.4717e+00,  ...,  1.8262e-01,  3.1152e-01, -3.4521e-01],
          ...,
          [ 6.9971e-01,  9.6094e-01, -5.9082e-01,  ..., -8.2666e-01, -6.8066e-01,  1.5454e-01],
          [-5.0244e-01,  1.4932e+00, -3.1665e-01,  ...,  1.2676e+00, -7.4805e-01,  8.3398e-01],
          [-3.9600e-01,  1.1641e+00,  1.4385e+00,  ...,  1.5205e+00,  3.3875e-02, -3.4326e-01]],

         [[-4.8901e-01, -4.7900e-01, -1.4717e+00,  ...,  6.3818e-01, -4.1650e-01,  1.1804e-01],
          [-7.0410e-01, -9.9658e-01, -7.1924e-01,  ...,  5.7422e-01,  8.6523e-01, -9.9756e-01],
          [ 7.3486e-01, -4.3481e-01, -7.0190e-02,  ..., -4.9072e-02,  4.8853e-01,  8.3496e-02],
          ...,
          [ 1.6973e+00, -1.0583e-01,  3.2129e-01,  ..., -5.1855e-01, -1.0293e+00, -9.1699e-01],
          [ 5.0586e-01, -6.1963e-01,  2.4207e-01,  ...,  1.3574e+00,  1.1211e+00, -4.9561e-01],
          [-9.2383e-01,  3.4961e-01,  1.9763e-01,  ...,  5.0439e-01,  1.5781e+00,  9.3164e-01]],

         [[ 1.1748e+00, -7.7942e-02, -1.3057e+00,  ...,  1.1035e+00,  1.0488e+00,  2.7441e-01],
          [ 5.1562e-01,  2.8345e-01, -4.7754e-01,  ...,  1.3416e-01,  8.2031e-01,  3.7305e-01],
          [-1.5742e+00, -1.5078e+00, -3.8770e-01,  ..., -5.8203e-01, -6.7139e-01,  1.3262e+00],
          ...,
          [ 2.1606e-01,  1.0918e+00, -1.5112e-01,  ...,  3.0054e-01, -3.1006e-01,  3.4760e-02],
          [ 1.1719e+00, -2.1240e-02, -4.4336e-01,  ...,  1.7688e-01, -3.0176e-01,  2.6465e-01],
          [-2.9468e-01,  1.0430e+00,  3.7988e-01,  ..., -1.1224e-01,  6.2744e-02, -2.4097e-01]],

         ...,

         [[-7.1631e-01, -3.4351e-01, -2.0166e-01,  ..., -1.5078e+00, -7.2070e-01,  3.9697e-01],
          [-5.1318e-01, -1.1094e+00, -7.1240e-01,  ...,  1.9287e+00,  1.0632e-01,  7.2705e-01],
          [ 5.2856e-02, -1.0996e+00, -2.3560e-01,  ...,  8.2324e-01,  5.9668e-01,  3.9307e-01],
          ...,
          [-1.1104e+00, -2.4609e-01,  3.9001e-02,  ..., -7.0752e-01, -1.2646e-01,  1.1045e+00],
          [-6.0205e-01, -6.6553e-01, -7.0459e-01,  ..., -1.5068e+00,  5.5029e-01,  1.6611e+00],
          [ 7.6318e-01,  6.0449e-01, -6.1230e-01,  ..., -5.3760e-01,  5.0146e-01, -6.5674e-01]],

         [[ 7.7759e-02,  2.5830e-01,  1.2324e+00,  ...,  1.2158e+00,  4.5483e-01,  1.0508e+00],
          [ 8.2550e-03,  8.2617e-01,  9.4092e-01,  ..., -8.2031e-01, -1.0752e+00,  8.9795e-01],
          [ 1.6797e+00,  2.1309e+00,  1.6150e-01,  ..., -2.2583e-02, -6.5527e-01,  2.2778e-01],
          ...,
          [ 2.0618e-01,  1.2988e+00,  4.1199e-03,  ..., -2.8735e-01,  7.0508e-01, -7.6709e-01],
          [ 2.5830e-01,  8.1592e-01,  3.0469e-01,  ...,  1.8188e-01,  1.6855e+00,  8.0615e-01],
          [ 1.9697e+00, -1.0107e-01, -1.7773e+00,  ...,  2.9126e-01,  6.5063e-02,  1.1798e-01]],

         [[ 1.0475e-02, -1.8867e+00, -2.6416e-01,  ..., -5.8398e-01, -7.4902e-01, -8.0176e-01],
          [ 2.6074e-01, -2.0264e-02,  4.7607e-02,  ..., -1.7773e+00, -3.1519e-01,  5.7031e-01],
          [ 1.4824e+00,  3.2690e-01,  8.3154e-01,  ..., -1.2090e+00, -1.2158e+00,  1.3354e-01],
          ...,
          [ 3.2056e-01,  1.3293e-01,  1.4819e-01,  ..., -4.2480e-01,  2.3340e-01,  8.4570e-01],
          [-8.9648e-01,  2.3083e-01,  7.3340e-01,  ..., -1.0557e+00, -8.3838e-01, -9.9365e-01],
          [-1.6338e+00, -1.0254e+00,  3.2788e-01,  ...,  4.8389e-01, -6.1670e-01,  1.8809e+00]]],


        [[[ 5.3027e-01,  1.2734e+00, -1.1260e+00,  ...,  5.1416e-01,  1.5273e+00,  1.2666e+00],
          [-1.1284e-02,  3.2251e-01,  2.7661e-01,  ...,  5.3174e-01,  9.0039e-01,  1.2803e+00],
          [ 2.7173e-01,  7.7295e-01,  2.2949e+00,  ..., -1.0195e+00,  5.1636e-02, -2.5073e-01],
          ...,
          [-6.9238e-01,  2.8027e-01, -1.3525e-01,  ...,  8.7891e-01,  4.4922e-01,  2.9663e-01],
          [-6.9629e-01, -4.3604e-01, -3.3154e-01,  ..., -3.2080e-01, -3.7695e-01,  8.4180e-01],
          [-3.9478e-01,  3.3765e-01, -4.4189e-01,  ..., -1.8872e-01,  9.5361e-01,  1.2646e-01]],

         [[ 9.2432e-01, -8.9844e-02, -8.0566e-01,  ...,  2.2913e-01,  1.7065e-01,  3.6304e-01],
          [ 9.5264e-01,  1.3843e-01,  6.3525e-01,  ...,  7.1094e-01, -2.5635e-02, -8.3887e-01],
          [ 5.9033e-01, -1.1133e+00,  1.0459e+00,  ...,  3.2861e-01,  7.9980e-01, -1.1359e-01],
          ...,
          [ 1.9873e+00,  8.8916e-01,  6.7480e-01,  ..., -5.2832e-01, -5.0879e-01, -5.6787e-01],
          [ 7.8516e-01,  3.2471e-01, -1.5547e+00,  ..., -1.1729e+00,  1.1719e-02,  1.2090e+00],
          [ 9.1553e-05,  1.9824e-01, -1.0312e+00,  ..., -1.7712e-01,  6.8506e-01,  8.6426e-01]],

         [[-9.2480e-01, -4.6387e-02,  9.8047e-01,  ..., -6.2988e-02, -1.0352e+00, -5.9375e-01],
          [-3.8757e-03,  1.4307e+00,  2.3242e-01,  ..., -1.6621e+00, -1.4072e+00,  3.8647e-01],
          [ 1.0657e-01, -6.2744e-02,  3.5278e-02,  ..., -2.8301e+00, -6.6113e-01,  2.8122e-02],
          ...,
          [-1.2373e+00,  5.6250e-01,  7.4170e-01,  ..., -1.0254e+00, -5.5029e-01,  2.3301e+00],
          [ 1.9165e-01, -7.6953e-01, -7.8369e-01,  ..., -9.7119e-01, -8.8086e-01, -2.5684e-01],
          [-5.9912e-01,  8.3887e-01, -1.2305e+00,  ..., -6.7578e-01,  5.0195e-01,  5.8960e-02]],

         ...,

         [[-4.8535e-01, -7.5317e-02, -8.2080e-01,  ..., -7.5000e-01, -1.7168e+00, -1.4004e+00],
          [ 1.3945e+00,  2.9688e-01, -4.0283e-02,  ..., -1.0801e+00, -1.2891e+00, -7.8711e-01],
          [-3.9917e-02,  2.1094e-01, -8.7402e-01,  ...,  6.7773e-01,  1.5015e-01, -3.9624e-01],
          ...,
          [-1.1094e+00, -1.0820e+00,  4.4067e-01,  ..., -1.3232e+00, -1.4465e-01,  1.5664e+00],
          [ 3.9478e-01,  1.5469e+00,  6.0645e-01,  ..., -2.1484e-02, -2.9492e-01,  1.5869e+00],
          [ 1.0371e+00, -6.0364e-02, -1.5881e-01,  ..., -3.5449e-01, -1.9257e-02,  1.2812e+00]],

         [[ 4.3555e-01, -4.5166e-02, -8.7500e-01,  ...,  1.9609e+00,  1.4912e+00,  3.7402e-01],
          [-3.8257e-01, -5.4883e-01, -3.4570e-01,  ...,  5.2197e-01,  2.5952e-01, -1.5273e+00],
          [-3.0347e-01, -9.7705e-01, -8.9258e-01,  ...,  6.2939e-01,  7.1533e-01, -4.1113e-01],
          ...,
          [-2.3193e-01,  2.3389e-01,  5.2539e-01,  ..., -8.5742e-01,  3.5840e-01, -6.3330e-01],
          [ 5.2100e-01,  3.9429e-01,  6.2354e-01,  ..., -8.8525e-01, -9.1357e-01, -1.0088e+00],
          [-9.1211e-01, -8.4326e-01,  2.7783e-01,  ..., -5.8008e-01, -6.8848e-02, -4.8315e-01]],

         [[ 1.5117e+00,  2.0654e-01, -8.1592e-01,  ...,  4.3555e-01, -9.5410e-01,  4.9194e-01],
          [ 7.9150e-01,  3.0420e-01,  6.7566e-02,  ...,  4.1357e-01,  2.6099e-01, -4.4092e-01],
          [ 8.6523e-01, -1.4185e-01, -2.5171e-01,  ..., -5.4565e-02,  1.4801e-02,  4.8169e-01],
          ...,
          [-7.9150e-01,  4.3359e-01,  6.7432e-01,  ..., -1.7236e+00,  3.9917e-02,  1.5020e+00],
          [-1.1738e+00, -1.8652e+00,  4.4824e-01,  ..., -6.5381e-01, -6.7920e-01,  1.0322e+00],
          [-1.5166e+00,  6.0840e-01,  2.5000e-01,  ...,  4.1675e-01,  6.7383e-01,  4.4873e-01]]],


        [[[ 1.7744e+00,  1.4978e-01, -1.5649e-01,  ...,  1.2720e-01, -6.9336e-01,  2.1942e-02],
          [-2.6123e-01, -6.0913e-02,  8.5449e-03,  ...,  1.3379e-01,  7.6074e-01, -1.4961e+00],
          [ 4.6948e-01,  7.9150e-01,  1.0029e+00,  ..., -4.4434e-02, -7.6025e-01, -1.0352e+00],
          ...,
          [-8.6365e-02, -3.9160e-01,  2.4036e-01,  ..., -1.2085e-01,  7.7539e-01,  1.0820e+00],
          [-1.5488e+00, -8.4570e-01, -5.0537e-01,  ..., -8.2861e-01, -9.3994e-01,  1.0400e+00],
          [-1.3135e-01, -3.7744e-01,  1.3418e+00,  ...,  4.4385e-01,  8.0505e-02, -3.8940e-01]],

         [[ 3.8403e-01, -7.7490e-01, -2.3887e+00,  ..., -1.0095e-01, -2.0569e-02,  2.2681e-01],
          [-1.8079e-01, -3.8965e-01,  6.1084e-01,  ...,  3.1543e-01, -1.8857e+00, -1.0869e+00],
          [ 9.7998e-01, -4.0283e-01,  7.1631e-01,  ...,  1.1094e+00,  1.6833e-01, -1.8018e-01],
          ...,
          [-4.1211e-01, -4.4531e-01, -1.2158e+00,  ..., -3.9453e-01,  3.4204e-01, -4.1699e-01],
          [-8.0078e-01,  3.7500e-01,  8.6084e-01,  ..., -8.0029e-01,  8.1482e-03,  5.9180e-01],
          [ 6.7920e-01, -1.7100e+00,  3.3813e-02,  ..., -9.5508e-01, -2.0850e-01,  5.3955e-01]],

         [[ 5.8350e-01, -2.9712e-01, -1.5312e+00,  ...,  1.1670e-01,  6.3782e-02,  2.8857e-01],
          [-6.8848e-01, -9.1895e-01,  1.6211e+00,  ..., -8.3350e-01,  6.2744e-01, -1.2573e-01],
          [-3.2129e-01, -9.8389e-01,  1.2559e+00,  ...,  3.3496e-01,  1.4814e+00, -6.6406e-01],
          ...,
          [ 5.4230e-02, -3.2080e-01,  1.3105e+00,  ...,  1.5015e-01, -3.5498e-01, -1.8604e+00],
          [-1.5381e+00, -1.0312e+00, -2.8320e-01,  ..., -4.2798e-01, -2.9443e-01, -7.1045e-01],
          [-1.0889e+00, -6.5723e-01,  1.2103e-01,  ...,  1.0645e+00, -4.8877e-01, -1.0345e-01]],

         ...,

         [[-1.0762e+00, -4.2578e-01, -6.6309e-01,  ...,  3.6084e-01, -2.0691e-01,  6.3818e-01],
          [-5.4395e-01, -5.4980e-01,  5.4443e-01,  ..., -2.1411e-01,  2.7148e-01,  6.4307e-01],
          [-5.3076e-01,  6.1133e-01,  1.0977e+00,  ...,  1.3906e+00, -6.4819e-02,  4.2114e-02],
          ...,
          [-3.8550e-01,  9.2578e-01, -7.2021e-01,  ..., -7.1191e-01, -1.0918e+00, -7.9736e-01],
          [-1.4961e+00, -2.3145e-01,  2.3523e-01,  ...,  4.7827e-01, -1.2666e+00,  1.7114e-01],
          [-1.3513e-01, -9.6313e-02,  8.9697e-01,  ...,  6.8066e-01, -1.1377e-01,  1.2324e+00]],

         [[-1.7510e+00,  9.1797e-01, -1.7383e-01,  ..., -1.1104e+00, -7.2266e-01, -1.5801e+00],
          [-1.0420e+00,  1.2861e+00, -3.0347e-01,  ..., -3.4863e-01,  1.0459e+00, -4.2456e-01],
          [ 2.3035e-01,  6.8506e-01, -9.9316e-01,  ...,  1.2842e+00,  1.0156e+00,  2.5317e-01],
          ...,
          [-7.8613e-01,  8.9160e-01,  3.0469e-01,  ...,  4.3750e-01, -5.9766e-01, -1.0859e+00],
          [ 1.6309e-01, -4.2505e-01, -4.7900e-01,  ...,  1.6895e-01, -2.9077e-01,  5.3662e-01],
          [-7.6538e-02, -2.8418e-01,  1.8213e-01,  ...,  9.4336e-01,  6.9824e-01,  5.0879e-01]],

         [[-1.3599e-01, -8.7500e-01, -7.5781e-01,  ..., -6.9434e-01, -3.8770e-01, -7.1191e-01],
          [ 5.8789e-01,  1.1924e+00,  1.6296e-02,  ...,  5.0293e-01, -6.4209e-01, -2.4768e-01],
          [-5.6006e-01, -4.9072e-01, -3.8965e-01,  ...,  6.2402e-01, -2.3516e+00, -1.8760e+00],
          ...,
          [-7.0410e-01,  5.1300e-02,  5.1123e-01,  ...,  8.2910e-01, -3.1787e-01,  1.0771e+00],
          [ 7.0459e-01,  4.3604e-01,  1.1348e+00,  ...,  6.0120e-02,  4.8779e-01,  2.8174e-01],
          [-4.9829e-01,  2.2217e-01,  6.8262e-01,  ...,  7.6465e-01,  1.1777e+00,  1.9902e+00]]],


        [[[ 9.7168e-01, -2.0496e-01,  1.3135e-01,  ...,  8.6084e-01,  1.4463e+00, -1.2627e+00],
          [ 1.0242e-01, -3.5840e-01,  1.6475e+00,  ...,  2.1924e-01,  1.7688e-01, -1.5254e+00],
          [ 1.8250e-01, -1.4441e-01,  1.2764e+00,  ...,  4.6240e-01,  1.0195e+00, -9.6484e-01],
          ...,
          [ 7.9785e-01,  1.5112e-01,  5.2734e-01,  ..., -1.5405e-01, -1.3115e+00,  8.7207e-01],
          [ 8.8672e-01,  4.7266e-01,  6.6162e-01,  ...,  4.7290e-01, -4.8584e-01,  1.3550e-01],
          [-8.1152e-01, -1.8066e-01, -9.1748e-01,  ...,  6.3379e-01, -3.0322e-01,  1.1963e+00]],

         [[-5.1270e-01, -1.5051e-01, -3.6475e-01,  ...,  4.0869e-01, -8.6475e-01, -3.8672e-01],
          [-1.1982e+00, -7.6355e-02,  6.8555e-01,  ...,  2.9419e-01,  2.5818e-02,  8.6475e-01],
          [ 1.0010e+00, -3.9856e-02,  7.3730e-01,  ..., -1.1395e-01, -2.2498e-01, -5.4346e-01],
          ...,
          [-9.1211e-01, -1.3831e-01,  3.7354e-01,  ...,  6.7285e-01,  7.1094e-01, -4.0680e-02],
          [-6.4746e-01, -7.2900e-01, -3.2715e-01,  ...,  7.2998e-01,  1.6836e+00,  8.9404e-01],
          [-6.9238e-01, -8.5889e-01, -7.6904e-03,  ...,  5.1465e-01,  3.7329e-01, -3.0322e-01]],

         [[ 9.3628e-02, -3.2324e-01, -8.3887e-01,  ..., -5.8789e-01, -6.2695e-01,  6.5674e-01],
          [ 1.0625e+00,  2.7832e-02, -1.7163e-01,  ...,  1.2695e+00, -7.3096e-01, -1.1494e+00],
          [-8.9905e-02,  5.6006e-01, -9.4543e-02,  ...,  3.5645e-01, -7.7441e-01,  2.3193e-01],
          ...,
          [ 4.8560e-01,  4.9487e-01,  4.5728e-01,  ..., -6.1719e-01, -2.9150e-01,  3.3521e-01],
          [-2.8992e-03, -7.0020e-01, -4.1797e-01,  ..., -1.2520e+00,  2.2900e-01,  8.7891e-01],
          [ 2.4316e-01,  1.2754e+00,  2.0459e-01,  ..., -6.2866e-02, -8.4961e-02, -6.5625e-01]],

         ...,

         [[-1.0557e+00,  2.7832e-01, -1.1875e+00,  ...,  2.6416e-01, -5.1465e-01,  1.8359e+00],
          [-1.0918e+00, -1.1279e+00,  5.6250e-01,  ...,  2.4561e-01, -5.4395e-01,  7.4609e-01],
          [-4.9170e-01, -9.0039e-01, -7.6465e-01,  ...,  6.2891e-01,  1.5210e-01,  3.7744e-01],
          ...,
          [ 1.0332e+00,  4.8047e-01,  4.8462e-01,  ...,  7.2070e-01, -3.4399e-01, -4.8730e-01],
          [ 4.1479e-01, -1.3354e-01, -1.0859e+00,  ..., -3.5010e-01,  1.1699e+00, -3.6182e-01],
          [ 3.2861e-01, -7.5806e-02,  5.8472e-02,  ..., -3.6743e-02, -1.7554e-01, -1.2920e+00]],

         [[-3.0591e-01, -2.0332e+00,  2.6611e-02,  ..., -7.5977e-01, -1.0176e+00,  1.0850e+00],
          [-8.3545e-01,  1.6006e+00, -4.5190e-01,  ..., -1.5137e-02, -4.4189e-01,  8.4229e-01],
          [ 3.2666e-01,  1.2158e+00, -6.1707e-02,  ...,  7.3584e-01,  1.8494e-01, -2.4951e-01],
          ...,
          [ 3.6255e-01, -9.5264e-01, -3.5986e-01,  ..., -3.7793e-01,  2.2552e-02, -5.4736e-01],
          [ 8.3350e-01, -7.1387e-01, -1.0967e+00,  ..., -5.2539e-01, -2.2375e-01, -1.0684e+00],
          [-1.5986e+00, -9.8779e-01, -1.7568e+00,  ...,  2.2974e-01, -1.2207e-03, -1.0391e+00]],

         [[-1.1953e+00, -1.6465e+00, -5.9814e-01,  ..., -5.8643e-01,  6.7725e-01,  4.9780e-01],
          [-9.8145e-02, -3.6938e-01,  6.7822e-01,  ..., -5.7373e-01,  2.6172e-01, -2.4622e-01],
          [-6.6406e-01,  3.8916e-01,  1.2988e-01,  ..., -3.1201e-01,  8.0078e-01,  6.0120e-03],
          ...,
          [ 3.2202e-01, -2.9028e-01,  2.1692e-01,  ..., -4.7559e-01,  1.0771e+00, -1.0486e-01],
          [-9.7314e-01, -6.6260e-01,  5.3027e-01,  ...,  1.2012e+00,  2.7490e-01,  3.7036e-01],
          [-1.9297e+00, -1.3262e+00,  1.4629e+00,  ..., -8.6670e-01,  1.5674e-01, -6.1340e-02]]]], dtype=torch.float16)

2025-06-10 00:13:33.332637 GPU 7 156019 test begin: paddle.nn.functional.interpolate(Tensor([512, 40, 4, 3],"float16"), size=None, scale_factor=8, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
[accuracy error] backward  paddle.nn.functional.interpolate(Tensor([512, 40, 4, 3],"float16"), size=None, scale_factor=8, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 58645 / 245760 (23.9%)
Greatest absolute difference: 0.140625 at index (352, 37, 1, 0) (up to 0.01 allowed)
Greatest relative difference: 509.25 at index (405, 6, 0, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([512, 40, 4, 3]), dtype=torch.float16)
tensor([[[[-2.7422e+00, -1.6904e+00,  1.2363e+00],
          [ 2.1953e+00, -7.9932e-01, -1.8457e+00],
          [ 3.5508e+00,  1.3896e+00,  1.8701e+00],
          [ 2.8848e+00,  3.3535e+00,  4.3594e+00]],

         [[ 3.2544e-01,  2.0264e-01,  3.5215e+00],
          [-1.0840e+00, -2.6777e+00, -1.4795e-01],
          [ 1.0020e+00, -1.0977e+00,  3.0156e+00],
          [ 3.5376e-01, -7.8125e-01,  1.4441e-01]],

         [[ 3.4551e+00, -1.1230e-02, -7.1045e-01],
          [ 2.1035e+00, -5.9912e-01,  4.0703e+00],
          [ 6.7871e-01,  4.7500e+00, -2.8535e+00],
          [ 2.6777e+00,  2.6387e+00, -3.2324e-01]],

         ...,

         [[-1.2754e+00,  7.5098e-01,  2.5215e+00],
          [-2.6719e+00, -4.6016e+00, -2.1230e+00],
          [ 2.5723e+00, -2.9375e+00, -1.9116e-01],
          [ 1.4502e+00, -9.0918e-01,  4.1211e-01]],

         [[ 3.7476e-01, -2.9414e+00,  1.7979e+00],
          [-3.4297e+00, -8.3643e-01,  8.8379e-01],
          [ 4.4531e+00, -6.6553e-01, -1.9863e+00],
          [ 2.9375e+00, -4.0117e+00,  4.2617e+00]],

         [[ 5.5225e-01,  4.6289e+00, -2.8379e+00],
          [-3.5195e+00,  2.1211e+00,  1.4854e+00],
          [-3.8027e+00,  5.4688e+00, -2.1133e+00],
          [ 4.4971e-01,  2.8223e+00,  2.7266e+00]]],


        [[[-1.7402e+00, -3.2764e-01, -1.7969e-01],
          [-2.5879e-01,  2.5918e+00, -2.3105e+00],
          [ 2.9346e-01, -1.4807e-01, -6.1865e-01],
          [-2.3496e+00,  2.3770e+00, -9.1504e-01]],

         [[-1.4590e+00, -7.9375e+00,  5.6689e-01],
          [ 2.5830e-01,  9.1614e-02, -1.0508e+00],
          [ 5.9219e+00,  6.4688e+00, -1.7715e+00],
          [ 2.2363e+00, -1.9805e+00,  2.7617e+00]],

         [[ 2.3645e-01,  6.9531e-01, -9.5508e-01],
          [ 1.3945e+00,  3.6348e+00, -2.7344e+00],
          [ 1.7061e+00,  1.8701e+00, -3.0762e-02],
          [ 3.0840e+00,  4.1836e+00,  1.7861e+00]],

         ...,

         [[ 1.4590e+00,  8.4839e-02,  8.9600e-02],
          [-1.2158e+00, -1.9714e-01,  1.8926e+00],
          [ 3.7109e+00,  3.3555e+00, -3.7109e+00],
          [-3.9766e+00,  7.6025e-01,  1.4368e-01]],

         [[-2.1699e+00, -1.4189e+00,  5.8945e+00],
          [-9.8584e-01,  5.9219e+00,  2.3516e+00],
          [-5.8984e-01,  1.2500e+00, -2.0664e+00],
          [-3.8359e+00,  1.5889e+00,  2.8149e-01]],

         [[ 6.1133e-01, -2.7070e+00,  2.0703e+00],
          [ 4.1953e+00,  5.3828e+00, -2.5703e+00],
          [-6.0986e-01, -5.7227e+00,  1.3701e+00],
          [-2.3066e+00,  7.5781e-01,  2.0251e-01]]],


        [[[-8.9844e-01,  3.6841e-01,  9.5068e-01],
          [-1.5820e+00,  1.5264e+00,  1.5198e-01],
          [-3.2373e-01, -1.1895e+00,  2.1230e+00],
          [-6.6260e-01,  4.2969e+00,  4.0781e+00]],

         [[-7.8906e-01, -9.3066e-01,  1.1465e+00],
          [ 1.7004e-01,  2.8589e-01, -2.9883e+00],
          [-1.8408e+00,  1.8184e+00,  3.5742e-01],
          [-2.0728e-01,  3.3418e+00,  1.3457e+00]],

         [[ 8.2764e-01, -2.0825e-01, -4.3633e+00],
          [-5.3955e-01, -1.7412e+00,  2.0254e+00],
          [ 1.9785e+00, -4.8364e-01,  6.5820e-01],
          [ 3.1763e-01,  6.3721e-01,  2.8516e-01]],

         ...,

         [[-1.4707e+00,  1.9531e-03, -1.6562e+00],
          [ 4.5728e-01,  8.1348e-01, -7.3242e-01],
          [-3.1934e+00,  2.1094e+00,  3.0098e+00],
          [-1.3242e+00, -3.1719e+00,  2.8438e+00]],

         [[-2.8828e+00, -2.7324e+00, -2.2520e+00],
          [-1.0215e+00,  2.9238e+00,  5.7666e-01],
          [ 1.3115e+00,  2.7578e+00, -1.8232e+00],
          [-4.5000e+00, -2.1875e+00, -6.6162e-01]],

         [[ 2.0762e+00, -1.9014e+00, -2.9297e-03],
          [ 1.8389e+00, -2.3496e+00,  5.8655e-02],
          [ 3.1855e+00,  2.4434e+00, -5.6836e-01],
          [ 4.3789e+00, -2.8784e-01,  6.2158e-01]]],


        ...,


        [[[-4.3945e-02, -6.2402e-01,  4.1719e+00],
          [-1.1406e+00, -5.9766e-01, -7.8320e-01],
          [-5.2393e-01, -8.9160e-01, -5.1836e+00],
          [-1.0664e+00,  1.7852e+00, -1.0801e+00]],

         [[-1.0020e+00, -1.8779e+00,  6.3867e+00],
          [ 6.2207e-01,  5.7266e+00, -1.4219e+00],
          [-3.1113e+00,  4.0820e+00, -1.8340e+00],
          [ 6.8994e-01, -2.4766e+00,  4.2651e-01]],

         [[-1.7451e+00,  1.8477e+00, -9.4238e-02],
          [ 1.6006e+00,  6.5479e-01,  2.3809e+00],
          [ 3.7402e+00,  1.3164e+00,  4.6172e+00],
          [ 1.9521e+00,  3.6953e+00,  3.1270e+00]],

         ...,

         [[-6.1890e-02,  9.1846e-01, -1.2549e+00],
          [ 1.3477e+00, -2.4648e+00, -4.2578e+00],
          [ 1.9814e+00, -2.6289e+00, -1.9409e-02],
          [ 1.5908e+00, -1.5889e+00, -4.8901e-01]],

         [[-8.7769e-02,  1.0449e-01, -1.3535e+00],
          [ 1.0898e+00,  1.4512e+00, -2.9414e+00],
          [ 8.2080e-01,  1.3447e+00,  3.4648e+00],
          [-2.1934e+00,  2.5156e+00,  2.2021e-01]],

         [[-1.7598e+00,  1.4814e+00,  1.2900e+00],
          [-1.6338e+00,  1.8555e-01, -3.9824e+00],
          [ 3.1250e-02,  2.4883e+00, -1.8457e+00],
          [ 4.5156e+00, -3.9199e+00, -8.0176e-01]]],


        [[[-3.2910e-01, -5.7148e+00, -1.8433e-02],
          [-8.3838e-01,  1.2080e+00,  3.6758e+00],
          [ 1.6123e+00,  3.1934e-01, -1.7764e+00],
          [-3.9648e-01, -5.5518e-01,  3.3164e+00]],

         [[-2.1621e+00,  2.6309e+00,  9.0454e-02],
          [ 2.4160e+00, -3.2031e+00, -5.7324e-01],
          [ 6.2402e-01, -1.8799e+00,  1.0898e+00],
          [-5.1855e-01, -1.3750e+00, -1.5417e-01]],

         [[-1.1348e+00,  2.1973e+00,  5.2734e-02],
          [-9.7559e-01, -2.7949e+00,  2.2852e+00],
          [ 5.8887e-01, -5.6250e-01, -3.0996e+00],
          [ 1.1680e+00,  2.0996e+00,  3.2383e+00]],

         ...,

         [[-1.5674e+00,  3.6777e+00, -2.3145e+00],
          [ 3.4473e+00, -8.1836e-01, -6.6406e-01],
          [ 6.5674e-02, -1.0576e+00, -2.1777e+00],
          [ 5.0430e+00, -2.0630e-01, -7.1777e-01]],

         [[ 5.9326e-01, -7.1387e-01,  2.5957e+00],
          [ 1.1328e+00,  3.7773e+00,  2.7393e-01],
          [ 1.3037e+00, -3.7012e+00,  2.5757e-01],
          [ 1.6260e+00,  4.2188e+00,  5.4639e-01]],

         [[-9.1162e-01,  3.4521e-01, -2.4648e+00],
          [-2.1270e+00,  4.2930e+00,  3.6133e+00],
          [-6.1035e-02, -1.5830e+00, -2.6582e+00],
          [ 9.4434e-01, -2.2871e+00,  1.2480e+00]]],


        [[[-3.9531e+00, -2.0645e+00,  1.9521e+00],
          [-1.0752e+00,  2.8687e-01, -5.1797e+00],
          [ 9.4678e-01, -1.5420e+00,  2.3320e+00],
          [-5.7910e-01, -4.3945e+00, -6.6406e+00]],

         [[ 2.0840e+00,  3.0371e-01,  1.1025e+00],
          [ 1.8135e+00,  2.5234e+00,  2.2832e+00],
          [-6.9453e+00,  4.2656e+00,  8.1152e-01],
          [-5.5781e+00, -1.3696e-01,  1.5312e+00]],

         [[-7.7539e-01,  5.4102e-01, -1.0518e+00],
          [-2.8574e+00, -1.8955e+00, -1.8496e+00],
          [ 2.0879e+00,  5.7764e-01, -4.4219e+00],
          [ 6.0791e-01, -9.4482e-01,  3.2500e+00]],

         ...,

         [[-2.4785e+00, -4.8945e+00,  6.1367e+00],
          [-3.4688e+00, -8.6475e-01,  1.9033e+00],
          [-9.7656e-03, -4.2734e+00,  3.1201e-01],
          [-7.5537e-01, -3.2051e+00, -6.1572e-01]],

         [[-2.6152e+00, -6.5137e-01, -1.2822e+00],
          [-4.3286e-01,  5.3750e+00,  1.4121e+00],
          [ 6.9043e-01, -2.5449e+00,  1.2168e+00],
          [ 1.1090e-01,  4.2227e+00, -1.1694e-01]],

         [[ 9.6826e-01,  9.9170e-01, -1.1475e+00],
          [ 1.4160e-02,  5.5420e-02,  3.5605e+00],
          [ 3.5859e+00, -9.5264e-01,  3.8867e+00],
          [-7.3535e-01,  6.1133e-01,  1.4521e+00]]]], dtype=torch.float16)
DESIRED: (shape=torch.Size([512, 40, 4, 3]), dtype=torch.float16)
tensor([[[[-2.7676, -1.6963,  1.2412],
          [ 2.2383, -0.8081, -1.8799],
          [ 3.5723,  1.3965,  1.9189],
          [ 2.9180,  3.3672,  4.3984]],

         [[ 0.3154,  0.2211,  3.5723],
          [-1.0957, -2.6914, -0.1492],
          [ 1.0059, -1.1104,  3.0684],
          [ 0.3538, -0.7881,  0.1440]],

         [[ 3.4961,  0.0137, -0.6953],
          [ 2.1562, -0.6431,  4.0859],
          [ 0.6782,  4.8125, -2.8906],
          [ 2.7070,  2.6699, -0.3435]],

         ...,

         [[-1.2520,  0.7568,  2.5508],
          [-2.7012, -4.6523, -2.1465],
          [ 2.5859, -2.9668, -0.1868],
          [ 1.4492, -0.9146,  0.4045]],

         [[ 0.3652, -2.9766,  1.7979],
          [-3.4531, -0.8540,  0.8945],
          [ 4.4805, -0.6621, -1.9980],
          [ 2.9512, -4.0312,  4.2852]],

         [[ 0.5498,  4.6992, -2.8555],
          [-3.5410,  2.1270,  1.5137],
          [-3.8203,  5.5391, -2.1465],
          [ 0.4561,  2.8613,  2.7480]]],


        [[[-1.7666, -0.3530, -0.2052],
          [-0.2527,  2.6172, -2.3262],
          [ 0.2939, -0.1594, -0.6167],
          [-2.3672,  2.3789, -0.9160]],

         [[-1.4580, -8.0000,  0.5771],
          [ 0.2556,  0.0609, -1.0586],
          [ 6.0195,  6.5547, -1.7666],
          [ 2.2480, -2.0137,  2.8027]],

         [[ 0.2186,  0.7080, -0.9497],
          [ 1.4014,  3.6562, -2.7520],
          [ 1.7344,  1.8818, -0.0330],
          [ 3.1289,  4.2617,  1.7979]],

         ...,

         [[ 1.4736,  0.0895,  0.0964],
          [-1.2324, -0.2019,  1.9082],
          [ 3.7734,  3.3926, -3.7363],
          [-4.0391,  0.7754,  0.1432]],

         [[-2.2012, -1.4268,  5.9688],
          [-0.9824,  5.9961,  2.3848],
          [-0.6099,  1.2744, -2.0820],
          [-3.8633,  1.6113,  0.2861]],

         [[ 0.6431, -2.7344,  2.0938],
          [ 4.2461,  5.4336, -2.6133],
          [-0.6064, -5.7773,  1.3867],
          [-2.3379,  0.7539,  0.1895]]],


        [[[-0.9189,  0.3484,  0.9697],
          [-1.6270,  1.5508,  0.1322],
          [-0.3298, -1.2139,  2.1426],
          [-0.6646,  4.3320,  4.1250]],

         [[-0.7856, -0.9443,  1.1895],
          [ 0.1960,  0.2964, -3.0215],
          [-1.8389,  1.8330,  0.3572],
          [-0.2117,  3.3594,  1.3496]],

         [[ 0.8433, -0.2039, -4.3984],
          [-0.5532, -1.7754,  2.0469],
          [ 1.9854, -0.4900,  0.6572],
          [ 0.2939,  0.6348,  0.2886]],

         ...,

         [[-1.4893,  0.0226, -1.6865],
          [ 0.4441,  0.8223, -0.7275],
          [-3.2148,  2.1289,  3.0547],
          [-1.3164, -3.2129,  2.8809]],

         [[-2.9375, -2.7715, -2.2754],
          [-1.0234,  2.9512,  0.5737],
          [ 1.3223,  2.7812, -1.8477],
          [-4.5625, -2.1836, -0.6587]],

         [[ 2.0996, -1.8848,  0.0223],
          [ 1.8418, -2.3867,  0.0628],
          [ 3.2051,  2.4980, -0.5688],
          [ 4.4375, -0.3003,  0.6133]]],


        ...,


        [[[-0.0351, -0.6104,  4.1914],
          [-1.1533, -0.5879, -0.7808],
          [-0.5229, -0.9106, -5.2383],
          [-1.0752,  1.7910, -1.0850]],

         [[-1.0010, -1.8799,  6.4570],
          [ 0.6270,  5.7891, -1.4316],
          [-3.1621,  4.1367, -1.8633],
          [ 0.6797, -2.5293,  0.4382]],

         [[-1.7510,  1.8535, -0.1044],
          [ 1.6045,  0.6489,  2.4297],
          [ 3.7617,  1.3193,  4.6602],
          [ 1.9863,  3.7305,  3.1602]],

         ...,

         [[-0.0683,  0.9478, -1.2432],
          [ 1.3916, -2.4902, -4.2812],
          [ 2.0195, -2.6543, -0.0298],
          [ 1.6006, -1.5977, -0.5015]],

         [[-0.0852,  0.1081, -1.3555],
          [ 1.0967,  1.4854, -2.9746],
          [ 0.8257,  1.3584,  3.4785],
          [-2.2109,  2.5352,  0.2235]],

         [[-1.7734,  1.5010,  1.2842],
          [-1.6455,  0.1880, -4.0156],
          [ 0.0426,  2.5195, -1.8730],
          [ 4.5469, -3.9844, -0.7954]]],


        [[[-0.3474, -5.7969, -0.0235],
          [-0.8760,  1.2158,  3.7070],
          [ 1.6465,  0.3391, -1.8193],
          [-0.4114, -0.5557,  3.3398]],

         [[-2.2012,  2.6621,  0.0815],
          [ 2.4336, -3.2383, -0.5771],
          [ 0.6392, -1.8975,  1.0879],
          [-0.5259, -1.3809, -0.1543]],

         [[-1.1768,  2.2246,  0.0542],
          [-0.9766, -2.8203,  2.2832],
          [ 0.5972, -0.5659, -3.1270],
          [ 1.1699,  2.1230,  3.2559]],

         ...,

         [[-1.6025,  3.7090, -2.3457],
          [ 3.4590, -0.8354, -0.6538],
          [ 0.0783, -1.0752, -2.1895],
          [ 5.0977, -0.2144, -0.7397]],

         [[ 0.5972, -0.7339,  2.6133],
          [ 1.1436,  3.7949,  0.2820],
          [ 1.3154, -3.7461,  0.2585],
          [ 1.6309,  4.2539,  0.5317]],

         [[-0.9019,  0.3684, -2.4824],
          [-2.1367,  4.3242,  3.6660],
          [-0.0598, -1.5928, -2.6777],
          [ 0.9844, -2.2910,  1.2549]]],


        [[[-3.9980, -2.0742,  1.9766],
          [-1.0898,  0.2805, -5.2461],
          [ 0.9556, -1.5361,  2.3594],
          [-0.5781, -4.4336, -6.7227]],

         [[ 2.0820,  0.3035,  1.1387],
          [ 1.8389,  2.5391,  2.3047],
          [-7.0000,  4.3359,  0.8184],
          [-5.6406, -0.1539,  1.5527]],

         [[-0.7710,  0.5381, -1.0615],
          [-2.8945, -1.9131, -1.8545],
          [ 2.0918,  0.5889, -4.4609],
          [ 0.6045, -0.9541,  3.2949]],

         ...,

         [[-2.4941, -4.9570,  6.1758],
          [-3.5273, -0.8384,  1.9395],
          [-0.0177, -4.3008,  0.3132],
          [-0.7197, -3.2422, -0.6079]],

         [[-2.6289, -0.6455, -1.2861],
          [-0.4299,  5.4336,  1.4102],
          [ 0.7119, -2.5547,  1.2148],
          [ 0.1050,  4.2500, -0.1233]],

         [[ 1.0088,  1.0312, -1.1660],
          [ 0.0262,  0.0471,  3.6094],
          [ 3.6523, -0.9556,  3.9336],
          [-0.7241,  0.5864,  1.4531]]]], dtype=torch.float16)

2025-06-10 00:13:33.357449 GPU 4 157147 test begin: paddle.nn.functional.rnnt_loss(Tensor([3, 4, 3, 3],"float32"), Tensor([3, 2],"int32"), Tensor([3],"int32"), Tensor([3],"int32"), blank=0, fastemit_lambda=0.0, reduction="none", name=None, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.nn.functional.rnnt_loss(Tensor([3, 4, 3, 3],"float32"), Tensor([3, 2],"int32"), Tensor([3],"int32"), Tensor([3],"int32"), blank=0, fastemit_lambda=0.0, reduction="none", name=None, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 3 / 3 (100.0%)
Greatest absolute difference: 9.672027587890625 at index (2,) (up to 0.01 allowed)
Greatest relative difference: 2.326272964477539 at index (2,) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([3]), dtype=torch.float32)
tensor([-5.4131, -5.1953, -5.5143])
DESIRED: (shape=torch.Size([3]), dtype=torch.float32)
tensor([4.1674, 4.1955, 4.1577])

2025-06-10 00:13:33.563990 GPU 6 156017 test begin: paddle.nn.functional.rnnt_loss(Tensor([3, 4, 3, 3],"float32"), Tensor([3, 2],"int32"), Tensor([3],"int32"), Tensor([3],"int32"), blank=0, reduction="mean", fastemit_lambda=0.0, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.nn.functional.rnnt_loss(Tensor([3, 4, 3, 3],"float32"), Tensor([3, 2],"int32"), Tensor([3],"int32"), Tensor([3],"int32"), blank=0, reduction="mean", fastemit_lambda=0.0, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Scalars are not close!

Expected 4.26412296295166 but got -5.760981559753418.
Absolute difference: 10.025104522705078 (up to 0.01 allowed)
Relative difference: 2.351035514174202 (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([]), dtype=torch.float32)
-5.760981559753418
DESIRED: (shape=torch.Size([]), dtype=torch.float32)
4.26412296295166

2025-06-10 00:13:33.633898 GPU 5 156018 test begin: paddle.nn.functional.rnnt_loss(Tensor([3, 4, 3, 3],"float32"), Tensor([3, 2],"int32"), Tensor([3],"int32"), Tensor([3],"int32"), blank=0, reduction="sum", fastemit_lambda=0.0, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.nn.functional.rnnt_loss(Tensor([3, 4, 3, 3],"float32"), Tensor([3, 2],"int32"), Tensor([3],"int32"), Tensor([3],"int32"), blank=0, reduction="sum", fastemit_lambda=0.0, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Scalars are not close!

Expected 13.128751754760742 but got -16.92229461669922.
Absolute difference: 30.05104637145996 (up to 0.01 allowed)
Relative difference: 2.288949241542545 (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([]), dtype=torch.float32)
-16.92229461669922
DESIRED: (shape=torch.Size([]), dtype=torch.float32)
13.128751754760742

2025-06-10 00:13:34.649397 GPU 5 156018 test begin: paddle.sort(Tensor([3, 10000],"float32"), descending=True, )
[accuracy error] backward  paddle.sort(Tensor([3, 10000],"float32"), descending=True, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 6 / 30000 (0.0%)
Greatest absolute difference: 0.8022726774215698 at index (0, 133) (up to 0.01 allowed)
Greatest relative difference: 4.64130973815918 at index (2, 6446) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([3, 10000]), dtype=torch.float32)
tensor([[-0.4213, -0.1061,  0.1171,  ..., -0.1526,  0.2721, -0.1549],
        [-0.0541, -0.1028, -0.3423,  ..., -0.1028,  0.4160, -0.3471],
        [-0.4484, -0.2084, -0.4334,  ...,  0.0883, -0.3997,  0.3513]])
DESIRED: (shape=torch.Size([3, 10000]), dtype=torch.float32)
tensor([[-0.4213, -0.1061,  0.1171,  ..., -0.1526,  0.2721, -0.1549],
        [-0.0541, -0.1028, -0.3423,  ..., -0.1028,  0.4160, -0.3471],
        [-0.4484, -0.2084, -0.4334,  ...,  0.0883, -0.3997,  0.3513]])

2025-06-10 00:13:34.656086 GPU 4 156016 test begin: paddle.sort(Tensor([35968],"float32"), 0, )
[accuracy error] backward  paddle.sort(Tensor([35968],"float32"), 0, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 14 / 35968 (0.0%)
Greatest absolute difference: 0.9516134262084961 at index (10524,) (up to 0.01 allowed)
Greatest relative difference: 4.90602970123291 at index (22401,) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([35968]), dtype=torch.float32)
tensor([ 3.3223e-01,  1.1685e-01, -1.1943e-03,  ..., -2.1839e-02,  3.6598e-04,  4.6405e-01])
DESIRED: (shape=torch.Size([35968]), dtype=torch.float32)
tensor([ 3.3223e-01,  1.1685e-01, -1.1943e-03,  ..., -2.1839e-02,  3.6598e-04,  4.6405e-01])

2025-06-10 00:13:34.679321 GPU 4 157147 test begin: paddle.sort(Tensor([380086],"float32"), )
[accuracy error] backward  paddle.sort(Tensor([380086],"float32"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 1342 / 380086 (0.4%)
Greatest absolute difference: 0.9658920764923096 at index (5427,) (up to 0.01 allowed)
Greatest relative difference: 8144.88330078125 at index (223040,) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([380086]), dtype=torch.float32)
tensor([ 0.4353,  0.0237,  0.3936,  ..., -0.4636, -0.4111, -0.0986])
DESIRED: (shape=torch.Size([380086]), dtype=torch.float32)
tensor([ 0.4353,  0.0237,  0.3936,  ..., -0.4636, -0.4111, -0.0986])

2025-06-10 00:13:34.763929 GPU 5 155999 test begin: paddle.sort(Tensor([401899],"float32"), )
[accuracy error] backward  paddle.sort(Tensor([401899],"float32"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 1488 / 401899 (0.4%)
Greatest absolute difference: 0.9552021622657776 at index (203442,) (up to 0.01 allowed)
Greatest relative difference: 944.5874633789062 at index (11118,) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([401899]), dtype=torch.float32)
tensor([-0.1536,  0.3549, -0.2641,  ...,  0.0386, -0.1533, -0.3369])
DESIRED: (shape=torch.Size([401899]), dtype=torch.float32)
tensor([-0.1536,  0.3549, -0.2641,  ...,  0.0386, -0.1533, -0.3369])

2025-06-10 00:13:34.765729 GPU 6 156013 test begin: paddle.sort(Tensor([403187],"float32"), )
[accuracy error] backward  paddle.sort(Tensor([403187],"float32"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 1585 / 403187 (0.4%)
Greatest absolute difference: 0.9654260873794556 at index (237290,) (up to 0.01 allowed)
Greatest relative difference: 883.8982543945312 at index (98237,) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([403187]), dtype=torch.float32)
tensor([-0.4569,  0.1881, -0.1920,  ...,  0.1346, -0.4553,  0.0814])
DESIRED: (shape=torch.Size([403187]), dtype=torch.float32)
tensor([-0.4569,  0.1881, -0.1920,  ...,  0.1346, -0.4553,  0.0814])

2025-06-10 00:13:34.834953 GPU 6 156017 test begin: paddle.sort(Tensor([406580],"float32"), )
[accuracy error] backward  paddle.sort(Tensor([406580],"float32"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 1665 / 406580 (0.4%)
Greatest absolute difference: 0.9492859840393066 at index (349229,) (up to 0.01 allowed)
Greatest relative difference: 764.8751831054688 at index (148097,) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([406580]), dtype=torch.float32)
tensor([ 0.1605, -0.1932, -0.3896,  ..., -0.3301,  0.3241, -0.0514])
DESIRED: (shape=torch.Size([406580]), dtype=torch.float32)
tensor([ 0.1605, -0.1932, -0.3896,  ..., -0.3301,  0.3241, -0.0514])

2025-06-10 00:13:34.870555 GPU 5 156018 test begin: paddle.sort(Tensor([5, 12000],"float32"), descending=True, )
[accuracy error] backward  paddle.sort(Tensor([5, 12000],"float32"), descending=True, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 2 / 60000 (0.0%)
Greatest absolute difference: 0.6169500350952148 at index (1, 2100) (up to 0.01 allowed)
Greatest relative difference: 2.9448485374450684 at index (1, 2100) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([5, 12000]), dtype=torch.float32)
tensor([[-0.0420, -0.3431,  0.1135,  ...,  0.4451,  0.2183, -0.4690],
        [-0.1956, -0.4092, -0.1006,  ...,  0.1947,  0.0856,  0.4788],
        [-0.1135,  0.1965,  0.3771,  ..., -0.4304, -0.3245,  0.3735],
        [ 0.0972, -0.3745, -0.0853,  ...,  0.4568, -0.1259, -0.4342],
        [-0.3307,  0.1056,  0.1296,  ..., -0.4155, -0.1947, -0.2927]])
DESIRED: (shape=torch.Size([5, 12000]), dtype=torch.float32)
tensor([[-0.0420, -0.3431,  0.1135,  ...,  0.4451,  0.2183, -0.4690],
        [-0.1956, -0.4092, -0.1006,  ...,  0.1947,  0.0856,  0.4788],
        [-0.1135,  0.1965,  0.3771,  ..., -0.4304, -0.3245,  0.3735],
        [ 0.0972, -0.3745, -0.0853,  ...,  0.4568, -0.1259, -0.4342],
        [-0.3307,  0.1056,  0.1296,  ..., -0.4155, -0.1947, -0.2927]])

2025-06-10 12:00:53.176016 GPU 3 78431 test begin: paddle.strided_slice(Tensor([6, 6],"int64"), axes=list[0,1,], starts=list[8,-1,], ends=list[1,-5,], strides=list[-2,-3,], )
element 0 of tensors does not require grad and does not have a grad_fn
terminate called after throwing an instance of 'c10::Error'
  what():  Storage size calculation overflowed with sizes=[2, 2] and strides=[-12, -3]
Exception raised from computeStorageNbytes at /pytorch/aten/src/ATen/EmptyTensor.cpp:109 (most recent call first):
frame #0: c10::Error::Error(c10::SourceLocation, std::string) + 0x96 (0x7f4a659101b6 in /root/miniconda3/envs/paddle/lib/python3.12/site-packages/torch/lib/libc10.so)
frame #1: c10::detail::torchCheckFail(char const*, char const*, unsigned int, std::string const&) + 0x64 (0x7f4a658b9a76 in /root/miniconda3/envs/paddle/lib/python3.12/site-packages/torch/lib/libc10.so)
frame #2: at::detail::computeStorageNbytes(c10::ArrayRef<long>, c10::ArrayRef<long>, unsigned long, unsigned long) + 0x35e (0x7f4a3c7816ee in /root/miniconda3/envs/paddle/lib/python3.12/site-packages/torch/lib/libtorch_cpu.so)
frame #3: at::TensorMaker::computeStorageSize() const + 0xb3 (0x7f4a3d441f03 in /root/miniconda3/envs/paddle/lib/python3.12/site-packages/torch/lib/libtorch_cpu.so)
frame #4: at::TensorMaker::make_tensor() + 0x440 (0x7f4a3d442390 in /root/miniconda3/envs/paddle/lib/python3.12/site-packages/torch/lib/libtorch_cpu.so)
frame #5: at::fromDLPack(DLManagedTensor*, std::function<void (void*)>) + 0x354 (0x7f4a3c77cab4 in /root/miniconda3/envs/paddle/lib/python3.12/site-packages/torch/lib/libtorch_cpu.so)
frame #6: at::fromDLPack(DLManagedTensor*) + 0x31 (0x7f4a3c77cf41 in /root/miniconda3/envs/paddle/lib/python3.12/site-packages/torch/lib/libtorch_cpu.so)
frame #7: torch::utils::tensor_fromDLPack(_object*) + 0x40 (0x7f4a6680e8e0 in /root/miniconda3/envs/paddle/lib/python3.12/site-packages/torch/lib/libtorch_python.so)
frame #8: <unknown function> + 0x8235f9 (0x7f4a6627d5f9 in /root/miniconda3/envs/paddle/lib/python3.12/site-packages/torch/lib/libtorch_python.so)
frame #9: _PyEval_EvalFrameDefault + 0xd02 (0x529512 in /root/miniconda3/envs/paddle/bin/python)
frame #10: PyEval_EvalCode + 0xae (0x5e581e in /root/miniconda3/envs/paddle/bin/python)
frame #11: /root/miniconda3/envs/paddle/bin/python() [0x60bfd7]
frame #12: /root/miniconda3/envs/paddle/bin/python() [0x6071c7]
frame #13: PyRun_StringFlags + 0x5f (0x5f694f in /root/miniconda3/envs/paddle/bin/python)
frame #14: PyRun_SimpleStringFlags + 0x3a (0x5f687a in /root/miniconda3/envs/paddle/bin/python)
frame #15: Py_RunMain + 0x45f (0x617def in /root/miniconda3/envs/paddle/bin/python)
frame #16: Py_BytesMain + 0x39 (0x5d03c9 in /root/miniconda3/envs/paddle/bin/python)
frame #17: __libc_start_main + 0xe7 (0x7f4bb976cc87 in /lib/x86_64-linux-gnu/libc.so.6)
frame #18: /root/miniconda3/envs/paddle/bin/python() [0x5d01f9]



--------------------------------------
C++ Traceback (most recent call last):
--------------------------------------
0   torch::utils::tensor_fromDLPack(_object*)
1   at::fromDLPack(DLManagedTensor*)
2   at::fromDLPack(DLManagedTensor*, std::function<void (void*)>)
3   at::TensorMaker::make_tensor()
4   at::TensorMaker::computeStorageSize() const

----------------------
Error Message Summary:
----------------------
FatalError: `Process abort signal` is detected by the operating system.
  [TimeInfo: *** Aborted at 1749528053 (unix time) try "date -d @1749528053" if you are using GNU date ***]
  [SignalInfo: *** SIGABRT (@0x1325f) received by PID 78431 (TID 0x7f4bba715740) from PID 78431 ***]


2025-06-10 12:00:53.238553 GPU 3 78426 test begin: paddle.strided_slice(Tensor([6, 7, 8],"int64"), axes=list[0,2,], starts=list[7,-1,], ends=list[2,-5,], strides=list[-2,-3,], )
element 0 of tensors does not require grad and does not have a grad_fn
terminate called after throwing an instance of 'c10::Error'
  what():  Storage size calculation overflowed with sizes=[2, 7, 2] and strides=[-112, 8, -3]
Exception raised from computeStorageNbytes at /pytorch/aten/src/ATen/EmptyTensor.cpp:109 (most recent call first):
frame #0: c10::Error::Error(c10::SourceLocation, std::string) + 0x96 (0x7f3a265101b6 in /root/miniconda3/envs/paddle/lib/python3.12/site-packages/torch/lib/libc10.so)
frame #1: c10::detail::torchCheckFail(char const*, char const*, unsigned int, std::string const&) + 0x64 (0x7f3a264b9a76 in /root/miniconda3/envs/paddle/lib/python3.12/site-packages/torch/lib/libc10.so)
frame #2: at::detail::computeStorageNbytes(c10::ArrayRef<long>, c10::ArrayRef<long>, unsigned long, unsigned long) + 0x35e (0x7f39fc7816ee in /root/miniconda3/envs/paddle/lib/python3.12/site-packages/torch/lib/libtorch_cpu.so)
frame #3: at::TensorMaker::computeStorageSize() const + 0xb3 (0x7f39fd441f03 in /root/miniconda3/envs/paddle/lib/python3.12/site-packages/torch/lib/libtorch_cpu.so)
frame #4: at::TensorMaker::make_tensor() + 0x440 (0x7f39fd442390 in /root/miniconda3/envs/paddle/lib/python3.12/site-packages/torch/lib/libtorch_cpu.so)
frame #5: at::fromDLPack(DLManagedTensor*, std::function<void (void*)>) + 0x354 (0x7f39fc77cab4 in /root/miniconda3/envs/paddle/lib/python3.12/site-packages/torch/lib/libtorch_cpu.so)
frame #6: at::fromDLPack(DLManagedTensor*) + 0x31 (0x7f39fc77cf41 in /root/miniconda3/envs/paddle/lib/python3.12/site-packages/torch/lib/libtorch_cpu.so)
frame #7: torch::utils::tensor_fromDLPack(_object*) + 0x40 (0x7f3a2740e8e0 in /root/miniconda3/envs/paddle/lib/python3.12/site-packages/torch/lib/libtorch_python.so)
frame #8: <unknown function> + 0x8235f9 (0x7f3a26e7d5f9 in /root/miniconda3/envs/paddle/lib/python3.12/site-packages/torch/lib/libtorch_python.so)
frame #9: _PyEval_EvalFrameDefault + 0xd02 (0x529512 in /root/miniconda3/envs/paddle/bin/python)
frame #10: PyEval_EvalCode + 0xae (0x5e581e in /root/miniconda3/envs/paddle/bin/python)
frame #11: /root/miniconda3/envs/paddle/bin/python() [0x60bfd7]
frame #12: /root/miniconda3/envs/paddle/bin/python() [0x6071c7]
frame #13: PyRun_StringFlags + 0x5f (0x5f694f in /root/miniconda3/envs/paddle/bin/python)
frame #14: PyRun_SimpleStringFlags + 0x3a (0x5f687a in /root/miniconda3/envs/paddle/bin/python)
frame #15: Py_RunMain + 0x45f (0x617def in /root/miniconda3/envs/paddle/bin/python)
frame #16: Py_BytesMain + 0x39 (0x5d03c9 in /root/miniconda3/envs/paddle/bin/python)
frame #17: __libc_start_main + 0xe7 (0x7f3b7a41ec87 in /lib/x86_64-linux-gnu/libc.so.6)
frame #18: /root/miniconda3/envs/paddle/bin/python() [0x5d01f9]



--------------------------------------
C++ Traceback (most recent call last):
--------------------------------------
0   torch::utils::tensor_fromDLPack(_object*)
1   at::fromDLPack(DLManagedTensor*)
2   at::fromDLPack(DLManagedTensor*, std::function<void (void*)>)
3   at::TensorMaker::make_tensor()
4   at::TensorMaker::computeStorageSize() const

----------------------
Error Message Summary:
----------------------
FatalError: `Process abort signal` is detected by the operating system.
  [TimeInfo: *** Aborted at 1749528053 (unix time) try "date -d @1749528053" if you are using GNU date ***]
  [SignalInfo: *** SIGABRT (@0x1325a) received by PID 78426 (TID 0x7f3b7b3c7740) from PID 78426 ***]


2025-06-10 12:00:53.382646 GPU 3 78429 test begin: paddle.strided_slice(x=Tensor([5, 8, 6, 4, 2, 6],"float64"), axes=list[1,2,5,], starts=list[-3,3,4,], ends=list[3,0,1,], strides=list[-1,-1,-2,], )
terminate called after throwing an instance of 'c10::Error'
  what():  Storage size calculation overflowed with sizes=[5, 2, 3, 4, 2, 2] and strides=[2304, -288, -48, 12, 6, -2]
Exception raised from computeStorageNbytes at /pytorch/aten/src/ATen/EmptyTensor.cpp:109 (most recent call first):
frame #0: c10::Error::Error(c10::SourceLocation, std::string) + 0x96 (0x7f9bed6101b6 in /root/miniconda3/envs/paddle/lib/python3.12/site-packages/torch/lib/libc10.so)
frame #1: c10::detail::torchCheckFail(char const*, char const*, unsigned int, std::string const&) + 0x64 (0x7f9bed5b9a76 in /root/miniconda3/envs/paddle/lib/python3.12/site-packages/torch/lib/libc10.so)
frame #2: at::detail::computeStorageNbytes(c10::ArrayRef<long>, c10::ArrayRef<long>, unsigned long, unsigned long) + 0x35e (0x7f9bd47816ee in /root/miniconda3/envs/paddle/lib/python3.12/site-packages/torch/lib/libtorch_cpu.so)
frame #3: at::TensorMaker::computeStorageSize() const + 0xb3 (0x7f9bd5441f03 in /root/miniconda3/envs/paddle/lib/python3.12/site-packages/torch/lib/libtorch_cpu.so)
frame #4: at::TensorMaker::make_tensor() + 0x440 (0x7f9bd5442390 in /root/miniconda3/envs/paddle/lib/python3.12/site-packages/torch/lib/libtorch_cpu.so)
frame #5: at::fromDLPack(DLManagedTensor*, std::function<void (void*)>) + 0x354 (0x7f9bd477cab4 in /root/miniconda3/envs/paddle/lib/python3.12/site-packages/torch/lib/libtorch_cpu.so)
frame #6: at::fromDLPack(DLManagedTensor*) + 0x31 (0x7f9bd477cf41 in /root/miniconda3/envs/paddle/lib/python3.12/site-packages/torch/lib/libtorch_cpu.so)
frame #7: torch::utils::tensor_fromDLPack(_object*) + 0x40 (0x7f9bee50e8e0 in /root/miniconda3/envs/paddle/lib/python3.12/site-packages/torch/lib/libtorch_python.so)
frame #8: <unknown function> + 0x8235f9 (0x7f9bedf7d5f9 in /root/miniconda3/envs/paddle/lib/python3.12/site-packages/torch/lib/libtorch_python.so)
frame #9: _PyEval_EvalFrameDefault + 0xd02 (0x529512 in /root/miniconda3/envs/paddle/bin/python)
frame #10: PyEval_EvalCode + 0xae (0x5e581e in /root/miniconda3/envs/paddle/bin/python)
frame #11: /root/miniconda3/envs/paddle/bin/python() [0x60bfd7]
frame #12: /root/miniconda3/envs/paddle/bin/python() [0x6071c7]
frame #13: PyRun_StringFlags + 0x5f (0x5f694f in /root/miniconda3/envs/paddle/bin/python)
frame #14: PyRun_SimpleStringFlags + 0x3a (0x5f687a in /root/miniconda3/envs/paddle/bin/python)
frame #15: Py_RunMain + 0x45f (0x617def in /root/miniconda3/envs/paddle/bin/python)
frame #16: Py_BytesMain + 0x39 (0x5d03c9 in /root/miniconda3/envs/paddle/bin/python)
frame #17: __libc_start_main + 0xe7 (0x7f9d4d493c87 in /lib/x86_64-linux-gnu/libc.so.6)
frame #18: /root/miniconda3/envs/paddle/bin/python() [0x5d01f9]



--------------------------------------
C++ Traceback (most recent call last):
--------------------------------------
0   torch::utils::tensor_fromDLPack(_object*)
1   at::fromDLPack(DLManagedTensor*)
2   at::fromDLPack(DLManagedTensor*, std::function<void (void*)>)
3   at::TensorMaker::make_tensor()
4   at::TensorMaker::computeStorageSize() const

----------------------
Error Message Summary:
----------------------
FatalError: `Process abort signal` is detected by the operating system.
  [TimeInfo: *** Aborted at 1749528053 (unix time) try "date -d @1749528053" if you are using GNU date ***]
  [SignalInfo: *** SIGABRT (@0x1325d) received by PID 78429 (TID 0x7f9d4e43c740) from PID 78429 ***]


2025-06-10 12:00:53.469009 GPU 3 78425 test begin: paddle.strided_slice(x=Tensor([5, 8, 6, 4, 2, 6],"float64"), axes=list[1,2,5,], starts=list[6,5,4,], ends=list[2,0,1,], strides=list[-1,-2,-3,], )
terminate called after throwing an instance of 'c10::Error'
  what():  Storage size calculation overflowed with sizes=[5, 4, 3, 4, 2, 1] and strides=[2304, -288, -96, 12, 6, 1]
Exception raised from computeStorageNbytes at /pytorch/aten/src/ATen/EmptyTensor.cpp:109 (most recent call first):
frame #0: c10::Error::Error(c10::SourceLocation, std::string) + 0x96 (0x7f9d28e281b6 in /root/miniconda3/envs/paddle/lib/python3.12/site-packages/torch/lib/libc10.so)
frame #1: c10::detail::torchCheckFail(char const*, char const*, unsigned int, std::string const&) + 0x64 (0x7f9d28dd1a76 in /root/miniconda3/envs/paddle/lib/python3.12/site-packages/torch/lib/libc10.so)
frame #2: at::detail::computeStorageNbytes(c10::ArrayRef<long>, c10::ArrayRef<long>, unsigned long, unsigned long) + 0x35e (0x7f9cfc7816ee in /root/miniconda3/envs/paddle/lib/python3.12/site-packages/torch/lib/libtorch_cpu.so)
frame #3: at::TensorMaker::computeStorageSize() const + 0xb3 (0x7f9cfd441f03 in /root/miniconda3/envs/paddle/lib/python3.12/site-packages/torch/lib/libtorch_cpu.so)
frame #4: at::TensorMaker::make_tensor() + 0x440 (0x7f9cfd442390 in /root/miniconda3/envs/paddle/lib/python3.12/site-packages/torch/lib/libtorch_cpu.so)
frame #5: at::fromDLPack(DLManagedTensor*, std::function<void (void*)>) + 0x354 (0x7f9cfc77cab4 in /root/miniconda3/envs/paddle/lib/python3.12/site-packages/torch/lib/libtorch_cpu.so)
frame #6: at::fromDLPack(DLManagedTensor*) + 0x31 (0x7f9cfc77cf41 in /root/miniconda3/envs/paddle/lib/python3.12/site-packages/torch/lib/libtorch_cpu.so)
frame #7: torch::utils::tensor_fromDLPack(_object*) + 0x40 (0x7f9d238388e0 in /root/miniconda3/envs/paddle/lib/python3.12/site-packages/torch/lib/libtorch_python.so)
frame #8: <unknown function> + 0x8235f9 (0x7f9d232a75f9 in /root/miniconda3/envs/paddle/lib/python3.12/site-packages/torch/lib/libtorch_python.so)
frame #9: _PyEval_EvalFrameDefault + 0xd02 (0x529512 in /root/miniconda3/envs/paddle/bin/python)
frame #10: PyEval_EvalCode + 0xae (0x5e581e in /root/miniconda3/envs/paddle/bin/python)
frame #11: /root/miniconda3/envs/paddle/bin/python() [0x60bfd7]
frame #12: /root/miniconda3/envs/paddle/bin/python() [0x6071c7]
frame #13: PyRun_StringFlags + 0x5f (0x5f694f in /root/miniconda3/envs/paddle/bin/python)
frame #14: PyRun_SimpleStringFlags + 0x3a (0x5f687a in /root/miniconda3/envs/paddle/bin/python)
frame #15: Py_RunMain + 0x45f (0x617def in /root/miniconda3/envs/paddle/bin/python)
frame #16: Py_BytesMain + 0x39 (0x5d03c9 in /root/miniconda3/envs/paddle/bin/python)
frame #17: __libc_start_main + 0xe7 (0x7f9e776b3c87 in /lib/x86_64-linux-gnu/libc.so.6)
frame #18: /root/miniconda3/envs/paddle/bin/python() [0x5d01f9]



--------------------------------------
C++ Traceback (most recent call last):
--------------------------------------
0   torch::utils::tensor_fromDLPack(_object*)
1   at::fromDLPack(DLManagedTensor*)
2   at::fromDLPack(DLManagedTensor*, std::function<void (void*)>)
3   at::TensorMaker::make_tensor()
4   at::TensorMaker::computeStorageSize() const

----------------------
Error Message Summary:
----------------------
FatalError: `Process abort signal` is detected by the operating system.
  [TimeInfo: *** Aborted at 1749528053 (unix time) try "date -d @1749528053" if you are using GNU date ***]
  [SignalInfo: *** SIGABRT (@0x13259) received by PID 78425 (TID 0x7f9e7865c740) from PID 78425 ***]


2025-06-10 00:14:25.971962 GPU 5 156012 test begin: paddle.trapezoid(y=Tensor([2, 3],"float32"), x=None, dx=None, axis=-1, )
[accuracy error] backward  paddle.trapezoid(y=Tensor([2, 3],"float32"), x=None, dx=None, axis=-1, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 3 / 6 (50.0%)
Greatest absolute difference: 0.5807682275772095 at index (1, 1) (up to 0.01 allowed)
Greatest relative difference: 1.1774439811706543 at index (1, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2, 3]), dtype=torch.float32)
tensor([[-0.0438, -0.0875, -0.0438],
        [-0.0438, -0.0875, -0.0438]])
DESIRED: (shape=torch.Size([2, 3]), dtype=torch.float32)
tensor([[-0.0438, -0.0875, -0.0438],
        [ 0.2466,  0.4932,  0.2466]])

2025-06-10 00:14:25.987559 GPU 7 158411 test begin: paddle.trapezoid(y=Tensor([2, 3],"float32"), x=Tensor([2, 3],"float32"), dx=None, axis=-1, )
[accuracy error] backward  paddle.trapezoid(y=Tensor([2, 3],"float32"), x=Tensor([2, 3],"float32"), dx=None, axis=-1, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 3 / 6 (50.0%)
Greatest absolute difference: 0.07241073250770569 at index (1, 0) (up to 0.01 allowed)
Greatest relative difference: 6.587549686431885 at index (1, 2) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2, 3]), dtype=torch.float32)
tensor([[-0.0419, -0.0126,  0.0293],
        [-0.0419, -0.0126,  0.0293]])
DESIRED: (shape=torch.Size([2, 3]), dtype=torch.float32)
tensor([[-0.0419, -0.0126,  0.0293],
        [ 0.0305,  0.0344,  0.0039]])

2025-06-10 00:14:25.996976 GPU 4 156002 test begin: paddle.trapezoid(y=Tensor([2, 3],"float64"), x=None, dx=None, axis=-1, )
W0610 00:14:26.105412 156002 multiply_fwd_func.cc:76] got different data type, run type promotion automatically, this may cause data type been changed.
[accuracy error] backward  paddle.trapezoid(y=Tensor([2, 3],"float64"), x=None, dx=None, axis=-1, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 3 / 6 (50.0%)
Greatest absolute difference: 0.5497920509779376 at index (1, 1) (up to 0.01 allowed)
Greatest relative difference: 2.166121704912436 at index (1, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2, 3]), dtype=torch.float64)
tensor([[-0.1480, -0.2960, -0.1480],
        [-0.1480, -0.2960, -0.1480]], dtype=torch.float64)
DESIRED: (shape=torch.Size([2, 3]), dtype=torch.float64)
tensor([[-0.1480, -0.2960, -0.1480],
        [ 0.1269,  0.2538,  0.1269]], dtype=torch.float64)

2025-06-10 00:14:26.007940 GPU 4 156000 test begin: paddle.trapezoid(y=Tensor([2, 3],"float64"), x=Tensor([2, 3],"float64"), dx=None, axis=-1, )
[accuracy error] backward  paddle.trapezoid(y=Tensor([2, 3],"float64"), x=Tensor([2, 3],"float64"), dx=None, axis=-1, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 2 / 6 (33.3%)
Greatest absolute difference: 0.04384030315663599 at index (1, 1) (up to 0.01 allowed)
Greatest relative difference: 23.04458926629219 at index (1, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([2, 3]), dtype=torch.float64)
tensor([[ 0.0375,  0.0307, -0.0068],
        [ 0.0375,  0.0307, -0.0068]], dtype=torch.float64)
DESIRED: (shape=torch.Size([2, 3]), dtype=torch.float64)
tensor([[ 0.0375,  0.0307, -0.0068],
        [-0.0017, -0.0131, -0.0114]], dtype=torch.float64)

2025-06-10 00:14:26.012670 GPU 6 156956 test begin: paddle.trapezoid(y=Tensor([3, 3, 4],"float32"), x=Tensor([3],"float32"), dx=None, axis=1, )
[accuracy error] backward  paddle.trapezoid(y=Tensor([3, 3, 4],"float32"), x=Tensor([3],"float32"), dx=None, axis=1, ) 
 Not equal to tolerance rtol=0.01, atol=0.01
Tensor-likes are not close!

Mismatched elements: 12 / 36 (33.3%)
Greatest absolute difference: 0.06984260678291321 at index (2, 2, 2) (up to 0.01 allowed)
Greatest relative difference: 17.85518455505371 at index (1, 1, 0) (up to 0.01 allowed)
ACTUAL: (shape=torch.Size([3, 3, 4]), dtype=torch.float32)
tensor([[[ 0.0045, -0.0031, -0.0009,  0.0002],
         [-0.0357,  0.0243,  0.0073, -0.0017],
         [-0.0402,  0.0273,  0.0083, -0.0019]],

        [[ 0.0045, -0.0031, -0.0009,  0.0002],
         [-0.0357,  0.0243,  0.0073, -0.0017],
         [-0.0402,  0.0273,  0.0083, -0.0019]],

        [[ 0.0045, -0.0031, -0.0009,  0.0002],
         [-0.0357,  0.0243,  0.0073, -0.0017],
         [-0.0402,  0.0273,  0.0083, -0.0019]]])
DESIRED: (shape=torch.Size([3, 3, 4]), dtype=torch.float32)
tensor([[[ 0.0045, -0.0031, -0.0009,  0.0002],
         [-0.0357,  0.0243,  0.0073, -0.0017],
         [-0.0402,  0.0273,  0.0083, -0.0019]],

        [[ 0.0002,  0.0030,  0.0021, -0.0001],
         [-0.0019, -0.0236, -0.0166,  0.0009],
         [-0.0021, -0.0266, -0.0187,  0.0011]],

        [[ 0.0053, -0.0084,  0.0070, -0.0048],
         [-0.0414,  0.0657, -0.0546,  0.0376],
         [-0.0467,  0.0740, -0.0616,  0.0424]]])

2025-06-10 12:00:54.381727 GPU 3 78430 test begin: paddle.vander(Tensor([5],"complex128"), 2, False, )
terminate called after throwing an instance of 'c10::Error'
  what():  Storage size calculation overflowed with sizes=[5, 2] and strides=[2, -1]
Exception raised from computeStorageNbytes at /pytorch/aten/src/ATen/EmptyTensor.cpp:109 (most recent call first):
frame #0: c10::Error::Error(c10::SourceLocation, std::string) + 0x96 (0x7fb5e54101b6 in /root/miniconda3/envs/paddle/lib/python3.12/site-packages/torch/lib/libc10.so)
frame #1: c10::detail::torchCheckFail(char const*, char const*, unsigned int, std::string const&) + 0x64 (0x7fb5e53b9a76 in /root/miniconda3/envs/paddle/lib/python3.12/site-packages/torch/lib/libc10.so)
frame #2: at::detail::computeStorageNbytes(c10::ArrayRef<long>, c10::ArrayRef<long>, unsigned long, unsigned long) + 0x35e (0x7fb5bc7816ee in /root/miniconda3/envs/paddle/lib/python3.12/site-packages/torch/lib/libtorch_cpu.so)
frame #3: at::TensorMaker::computeStorageSize() const + 0xb3 (0x7fb5bd441f03 in /root/miniconda3/envs/paddle/lib/python3.12/site-packages/torch/lib/libtorch_cpu.so)
frame #4: at::TensorMaker::make_tensor() + 0x440 (0x7fb5bd442390 in /root/miniconda3/envs/paddle/lib/python3.12/site-packages/torch/lib/libtorch_cpu.so)
frame #5: at::fromDLPack(DLManagedTensor*, std::function<void (void*)>) + 0x354 (0x7fb5bc77cab4 in /root/miniconda3/envs/paddle/lib/python3.12/site-packages/torch/lib/libtorch_cpu.so)
frame #6: at::fromDLPack(DLManagedTensor*) + 0x31 (0x7fb5bc77cf41 in /root/miniconda3/envs/paddle/lib/python3.12/site-packages/torch/lib/libtorch_cpu.so)
frame #7: torch::utils::tensor_fromDLPack(_object*) + 0x40 (0x7fb5e630e8e0 in /root/miniconda3/envs/paddle/lib/python3.12/site-packages/torch/lib/libtorch_python.so)
frame #8: <unknown function> + 0x8235f9 (0x7fb5e5d7d5f9 in /root/miniconda3/envs/paddle/lib/python3.12/site-packages/torch/lib/libtorch_python.so)
frame #9: _PyEval_EvalFrameDefault + 0xd02 (0x529512 in /root/miniconda3/envs/paddle/bin/python)
frame #10: PyEval_EvalCode + 0xae (0x5e581e in /root/miniconda3/envs/paddle/bin/python)
frame #11: /root/miniconda3/envs/paddle/bin/python() [0x60bfd7]
frame #12: /root/miniconda3/envs/paddle/bin/python() [0x6071c7]
frame #13: PyRun_StringFlags + 0x5f (0x5f694f in /root/miniconda3/envs/paddle/bin/python)
frame #14: PyRun_SimpleStringFlags + 0x3a (0x5f687a in /root/miniconda3/envs/paddle/bin/python)
frame #15: Py_RunMain + 0x45f (0x617def in /root/miniconda3/envs/paddle/bin/python)
frame #16: Py_BytesMain + 0x39 (0x5d03c9 in /root/miniconda3/envs/paddle/bin/python)
frame #17: __libc_start_main + 0xe7 (0x7fb739247c87 in /lib/x86_64-linux-gnu/libc.so.6)
frame #18: /root/miniconda3/envs/paddle/bin/python() [0x5d01f9]



--------------------------------------
C++ Traceback (most recent call last):
--------------------------------------
0   torch::utils::tensor_fromDLPack(_object*)
1   at::fromDLPack(DLManagedTensor*)
2   at::fromDLPack(DLManagedTensor*, std::function<void (void*)>)
3   at::TensorMaker::make_tensor()
4   at::TensorMaker::computeStorageSize() const

----------------------
Error Message Summary:
----------------------
FatalError: `Process abort signal` is detected by the operating system.
  [TimeInfo: *** Aborted at 1749528054 (unix time) try "date -d @1749528054" if you are using GNU date ***]
  [SignalInfo: *** SIGABRT (@0x1325e) received by PID 78430 (TID 0x7fb73a1f0740) from PID 78430 ***]


2025-06-10 12:00:57.112906 GPU 3 78427 test begin: paddle.vander(Tensor([5],"complex128"), 3, False, )
terminate called after throwing an instance of 'c10::Error'
  what():  Storage size calculation overflowed with sizes=[5, 3] and strides=[3, -1]
Exception raised from computeStorageNbytes at /pytorch/aten/src/ATen/EmptyTensor.cpp:109 (most recent call first):
frame #0: c10::Error::Error(c10::SourceLocation, std::string) + 0x96 (0x7f247222e1b6 in /root/miniconda3/envs/paddle/lib/python3.12/site-packages/torch/lib/libc10.so)
frame #1: c10::detail::torchCheckFail(char const*, char const*, unsigned int, std::string const&) + 0x64 (0x7f24721d7a76 in /root/miniconda3/envs/paddle/lib/python3.12/site-packages/torch/lib/libc10.so)
frame #2: at::detail::computeStorageNbytes(c10::ArrayRef<long>, c10::ArrayRef<long>, unsigned long, unsigned long) + 0x35e (0x7f24447816ee in /root/miniconda3/envs/paddle/lib/python3.12/site-packages/torch/lib/libtorch_cpu.so)
frame #3: at::TensorMaker::computeStorageSize() const + 0xb3 (0x7f2445441f03 in /root/miniconda3/envs/paddle/lib/python3.12/site-packages/torch/lib/libtorch_cpu.so)
frame #4: at::TensorMaker::make_tensor() + 0x440 (0x7f2445442390 in /root/miniconda3/envs/paddle/lib/python3.12/site-packages/torch/lib/libtorch_cpu.so)
frame #5: at::fromDLPack(DLManagedTensor*, std::function<void (void*)>) + 0x354 (0x7f244477cab4 in /root/miniconda3/envs/paddle/lib/python3.12/site-packages/torch/lib/libtorch_cpu.so)
frame #6: at::fromDLPack(DLManagedTensor*) + 0x31 (0x7f244477cf41 in /root/miniconda3/envs/paddle/lib/python3.12/site-packages/torch/lib/libtorch_cpu.so)
frame #7: torch::utils::tensor_fromDLPack(_object*) + 0x40 (0x7f247315e8e0 in /root/miniconda3/envs/paddle/lib/python3.12/site-packages/torch/lib/libtorch_python.so)
frame #8: <unknown function> + 0x8235f9 (0x7f2472bcd5f9 in /root/miniconda3/envs/paddle/lib/python3.12/site-packages/torch/lib/libtorch_python.so)
frame #9: /root/miniconda3/envs/paddle/bin/python() [0x54be6b]
frame #10: PyObject_Vectorcall + 0x51 (0x5416a1 in /root/miniconda3/envs/paddle/bin/python)
frame #11: _PyEval_EvalFrameDefault + 0x6ce (0x528ede in /root/miniconda3/envs/paddle/bin/python)
frame #12: PyEval_EvalCode + 0xae (0x5e581e in /root/miniconda3/envs/paddle/bin/python)
frame #13: /root/miniconda3/envs/paddle/bin/python() [0x60bfd7]
frame #14: /root/miniconda3/envs/paddle/bin/python() [0x6071c7]
frame #15: PyRun_StringFlags + 0x5f (0x5f694f in /root/miniconda3/envs/paddle/bin/python)
frame #16: PyRun_SimpleStringFlags + 0x3a (0x5f687a in /root/miniconda3/envs/paddle/bin/python)
frame #17: Py_RunMain + 0x45f (0x617def in /root/miniconda3/envs/paddle/bin/python)
frame #18: Py_BytesMain + 0x39 (0x5d03c9 in /root/miniconda3/envs/paddle/bin/python)
frame #19: __libc_start_main + 0xe7 (0x7f25c2135c87 in /lib/x86_64-linux-gnu/libc.so.6)
frame #20: /root/miniconda3/envs/paddle/bin/python() [0x5d01f9]



--------------------------------------
C++ Traceback (most recent call last):
--------------------------------------
0   torch::utils::tensor_fromDLPack(_object*)
1   at::fromDLPack(DLManagedTensor*)
2   at::fromDLPack(DLManagedTensor*, std::function<void (void*)>)
3   at::TensorMaker::make_tensor()
4   at::TensorMaker::computeStorageSize() const

----------------------
Error Message Summary:
----------------------
FatalError: `Process abort signal` is detected by the operating system.
  [TimeInfo: *** Aborted at 1749528057 (unix time) try "date -d @1749528057" if you are using GNU date ***]
  [SignalInfo: *** SIGABRT (@0x1325b) received by PID 78427 (TID 0x7f25c30de740) from PID 78427 ***]


2025-06-10 12:00:58.225637 GPU 3 79152 test begin: paddle.vander(Tensor([5],"complex128"), 4, False, )
terminate called after throwing an instance of 'c10::Error'
  what():  Storage size calculation overflowed with sizes=[5, 4] and strides=[4, -1]
Exception raised from computeStorageNbytes at /pytorch/aten/src/ATen/EmptyTensor.cpp:109 (most recent call first):
frame #0: c10::Error::Error(c10::SourceLocation, std::string) + 0x96 (0x7f25048081b6 in /root/miniconda3/envs/paddle/lib/python3.12/site-packages/torch/lib/libc10.so)
frame #1: c10::detail::torchCheckFail(char const*, char const*, unsigned int, std::string const&) + 0x64 (0x7f25047b1a76 in /root/miniconda3/envs/paddle/lib/python3.12/site-packages/torch/lib/libc10.so)
frame #2: at::detail::computeStorageNbytes(c10::ArrayRef<long>, c10::ArrayRef<long>, unsigned long, unsigned long) + 0x35e (0x7f24d47816ee in /root/miniconda3/envs/paddle/lib/python3.12/site-packages/torch/lib/libtorch_cpu.so)
frame #3: at::TensorMaker::computeStorageSize() const + 0xb3 (0x7f24d5441f03 in /root/miniconda3/envs/paddle/lib/python3.12/site-packages/torch/lib/libtorch_cpu.so)
frame #4: at::TensorMaker::make_tensor() + 0x440 (0x7f24d5442390 in /root/miniconda3/envs/paddle/lib/python3.12/site-packages/torch/lib/libtorch_cpu.so)
frame #5: at::fromDLPack(DLManagedTensor*, std::function<void (void*)>) + 0x354 (0x7f24d477cab4 in /root/miniconda3/envs/paddle/lib/python3.12/site-packages/torch/lib/libtorch_cpu.so)
frame #6: at::fromDLPack(DLManagedTensor*) + 0x31 (0x7f24d477cf41 in /root/miniconda3/envs/paddle/lib/python3.12/site-packages/torch/lib/libtorch_cpu.so)
frame #7: torch::utils::tensor_fromDLPack(_object*) + 0x40 (0x7f25057388e0 in /root/miniconda3/envs/paddle/lib/python3.12/site-packages/torch/lib/libtorch_python.so)
frame #8: <unknown function> + 0x8235f9 (0x7f25051a75f9 in /root/miniconda3/envs/paddle/lib/python3.12/site-packages/torch/lib/libtorch_python.so)
frame #9: /root/miniconda3/envs/paddle/bin/python() [0x54be6b]
frame #10: PyObject_Vectorcall + 0x51 (0x5416a1 in /root/miniconda3/envs/paddle/bin/python)
frame #11: _PyEval_EvalFrameDefault + 0x6ce (0x528ede in /root/miniconda3/envs/paddle/bin/python)
frame #12: PyEval_EvalCode + 0xae (0x5e581e in /root/miniconda3/envs/paddle/bin/python)
frame #13: /root/miniconda3/envs/paddle/bin/python() [0x60bfd7]
frame #14: /root/miniconda3/envs/paddle/bin/python() [0x6071c7]
frame #15: PyRun_StringFlags + 0x5f (0x5f694f in /root/miniconda3/envs/paddle/bin/python)
frame #16: PyRun_SimpleStringFlags + 0x3a (0x5f687a in /root/miniconda3/envs/paddle/bin/python)
frame #17: Py_RunMain + 0x45f (0x617def in /root/miniconda3/envs/paddle/bin/python)
frame #18: Py_BytesMain + 0x39 (0x5d03c9 in /root/miniconda3/envs/paddle/bin/python)
frame #19: __libc_start_main + 0xe7 (0x7f265460dc87 in /lib/x86_64-linux-gnu/libc.so.6)
frame #20: /root/miniconda3/envs/paddle/bin/python() [0x5d01f9]



--------------------------------------
C++ Traceback (most recent call last):
--------------------------------------
0   torch::utils::tensor_fromDLPack(_object*)
1   at::fromDLPack(DLManagedTensor*)
2   at::fromDLPack(DLManagedTensor*, std::function<void (void*)>)
3   at::TensorMaker::make_tensor()
4   at::TensorMaker::computeStorageSize() const

----------------------
Error Message Summary:
----------------------
FatalError: `Process abort signal` is detected by the operating system.
  [TimeInfo: *** Aborted at 1749528075 (unix time) try "date -d @1749528075" if you are using GNU date ***]
  [SignalInfo: *** SIGABRT (@0x13530) received by PID 79152 (TID 0x7f26555b6740) from PID 79152 ***]


2025-06-10 12:00:58.656299 GPU 3 79181 test begin: paddle.vander(Tensor([5],"float32"), 2, False, )
terminate called after throwing an instance of 'c10::Error'
  what():  Storage size calculation overflowed with sizes=[5, 2] and strides=[2, -1]
Exception raised from computeStorageNbytes at /pytorch/aten/src/ATen/EmptyTensor.cpp:109 (most recent call first):
frame #0: c10::Error::Error(c10::SourceLocation, std::string) + 0x96 (0x7ffa029761b6 in /root/miniconda3/envs/paddle/lib/python3.12/site-packages/torch/lib/libc10.so)
frame #1: c10::detail::torchCheckFail(char const*, char const*, unsigned int, std::string const&) + 0x64 (0x7ffa0291fa76 in /root/miniconda3/envs/paddle/lib/python3.12/site-packages/torch/lib/libc10.so)
frame #2: at::detail::computeStorageNbytes(c10::ArrayRef<long>, c10::ArrayRef<long>, unsigned long, unsigned long) + 0x35e (0x7ff9d47816ee in /root/miniconda3/envs/paddle/lib/python3.12/site-packages/torch/lib/libtorch_cpu.so)
frame #3: at::TensorMaker::computeStorageSize() const + 0xb3 (0x7ff9d5441f03 in /root/miniconda3/envs/paddle/lib/python3.12/site-packages/torch/lib/libtorch_cpu.so)
frame #4: at::TensorMaker::make_tensor() + 0x440 (0x7ff9d5442390 in /root/miniconda3/envs/paddle/lib/python3.12/site-packages/torch/lib/libtorch_cpu.so)
frame #5: at::fromDLPack(DLManagedTensor*, std::function<void (void*)>) + 0x354 (0x7ff9d477cab4 in /root/miniconda3/envs/paddle/lib/python3.12/site-packages/torch/lib/libtorch_cpu.so)
frame #6: at::fromDLPack(DLManagedTensor*) + 0x31 (0x7ff9d477cf41 in /root/miniconda3/envs/paddle/lib/python3.12/site-packages/torch/lib/libtorch_cpu.so)
frame #7: torch::utils::tensor_fromDLPack(_object*) + 0x40 (0x7ffa038a68e0 in /root/miniconda3/envs/paddle/lib/python3.12/site-packages/torch/lib/libtorch_python.so)
frame #8: <unknown function> + 0x8235f9 (0x7ffa033155f9 in /root/miniconda3/envs/paddle/lib/python3.12/site-packages/torch/lib/libtorch_python.so)
frame #9: /root/miniconda3/envs/paddle/bin/python() [0x54be6b]
frame #10: PyObject_Vectorcall + 0x51 (0x5416a1 in /root/miniconda3/envs/paddle/bin/python)
frame #11: _PyEval_EvalFrameDefault + 0x6ce (0x528ede in /root/miniconda3/envs/paddle/bin/python)
frame #12: PyEval_EvalCode + 0xae (0x5e581e in /root/miniconda3/envs/paddle/bin/python)
frame #13: /root/miniconda3/envs/paddle/bin/python() [0x60bfd7]
frame #14: /root/miniconda3/envs/paddle/bin/python() [0x6071c7]
frame #15: PyRun_StringFlags + 0x5f (0x5f694f in /root/miniconda3/envs/paddle/bin/python)
frame #16: PyRun_SimpleStringFlags + 0x3a (0x5f687a in /root/miniconda3/envs/paddle/bin/python)
frame #17: Py_RunMain + 0x45f (0x617def in /root/miniconda3/envs/paddle/bin/python)
frame #18: Py_BytesMain + 0x39 (0x5d03c9 in /root/miniconda3/envs/paddle/bin/python)
frame #19: __libc_start_main + 0xe7 (0x7ffb5287bc87 in /lib/x86_64-linux-gnu/libc.so.6)
frame #20: /root/miniconda3/envs/paddle/bin/python() [0x5d01f9]



--------------------------------------
C++ Traceback (most recent call last):
--------------------------------------
0   torch::utils::tensor_fromDLPack(_object*)
1   at::fromDLPack(DLManagedTensor*)
2   at::fromDLPack(DLManagedTensor*, std::function<void (void*)>)
3   at::TensorMaker::make_tensor()
4   at::TensorMaker::computeStorageSize() const

----------------------
Error Message Summary:
----------------------
FatalError: `Process abort signal` is detected by the operating system.
  [TimeInfo: *** Aborted at 1749528075 (unix time) try "date -d @1749528075" if you are using GNU date ***]
  [SignalInfo: *** SIGABRT (@0x1354d) received by PID 79181 (TID 0x7ffb53824740) from PID 79181 ***]


2025-06-10 12:00:58.775979 GPU 3 79209 test begin: paddle.vander(Tensor([5],"float32"), 3, False, )
terminate called after throwing an instance of 'c10::Error'
  what():  Storage size calculation overflowed with sizes=[5, 3] and strides=[3, -1]
Exception raised from computeStorageNbytes at /pytorch/aten/src/ATen/EmptyTensor.cpp:109 (most recent call first):
frame #0: c10::Error::Error(c10::SourceLocation, std::string) + 0x96 (0x7f88d44be1b6 in /root/miniconda3/envs/paddle/lib/python3.12/site-packages/torch/lib/libc10.so)
frame #1: c10::detail::torchCheckFail(char const*, char const*, unsigned int, std::string const&) + 0x64 (0x7f88d4467a76 in /root/miniconda3/envs/paddle/lib/python3.12/site-packages/torch/lib/libc10.so)
frame #2: at::detail::computeStorageNbytes(c10::ArrayRef<long>, c10::ArrayRef<long>, unsigned long, unsigned long) + 0x35e (0x7f88a47816ee in /root/miniconda3/envs/paddle/lib/python3.12/site-packages/torch/lib/libtorch_cpu.so)
frame #3: at::TensorMaker::computeStorageSize() const + 0xb3 (0x7f88a5441f03 in /root/miniconda3/envs/paddle/lib/python3.12/site-packages/torch/lib/libtorch_cpu.so)
frame #4: at::TensorMaker::make_tensor() + 0x440 (0x7f88a5442390 in /root/miniconda3/envs/paddle/lib/python3.12/site-packages/torch/lib/libtorch_cpu.so)
frame #5: at::fromDLPack(DLManagedTensor*, std::function<void (void*)>) + 0x354 (0x7f88a477cab4 in /root/miniconda3/envs/paddle/lib/python3.12/site-packages/torch/lib/libtorch_cpu.so)
frame #6: at::fromDLPack(DLManagedTensor*) + 0x31 (0x7f88a477cf41 in /root/miniconda3/envs/paddle/lib/python3.12/site-packages/torch/lib/libtorch_cpu.so)
frame #7: torch::utils::tensor_fromDLPack(_object*) + 0x40 (0x7f88d53ee8e0 in /root/miniconda3/envs/paddle/lib/python3.12/site-packages/torch/lib/libtorch_python.so)
frame #8: <unknown function> + 0x8235f9 (0x7f88d4e5d5f9 in /root/miniconda3/envs/paddle/lib/python3.12/site-packages/torch/lib/libtorch_python.so)
frame #9: /root/miniconda3/envs/paddle/bin/python() [0x54be6b]
frame #10: PyObject_Vectorcall + 0x51 (0x5416a1 in /root/miniconda3/envs/paddle/bin/python)
frame #11: _PyEval_EvalFrameDefault + 0x6ce (0x528ede in /root/miniconda3/envs/paddle/bin/python)
frame #12: PyEval_EvalCode + 0xae (0x5e581e in /root/miniconda3/envs/paddle/bin/python)
frame #13: /root/miniconda3/envs/paddle/bin/python() [0x60bfd7]
frame #14: /root/miniconda3/envs/paddle/bin/python() [0x6071c7]
frame #15: PyRun_StringFlags + 0x5f (0x5f694f in /root/miniconda3/envs/paddle/bin/python)
frame #16: PyRun_SimpleStringFlags + 0x3a (0x5f687a in /root/miniconda3/envs/paddle/bin/python)
frame #17: Py_RunMain + 0x45f (0x617def in /root/miniconda3/envs/paddle/bin/python)
frame #18: Py_BytesMain + 0x39 (0x5d03c9 in /root/miniconda3/envs/paddle/bin/python)
frame #19: __libc_start_main + 0xe7 (0x7f8a242c3c87 in /lib/x86_64-linux-gnu/libc.so.6)
frame #20: /root/miniconda3/envs/paddle/bin/python() [0x5d01f9]



--------------------------------------
C++ Traceback (most recent call last):
--------------------------------------
0   torch::utils::tensor_fromDLPack(_object*)
1   at::fromDLPack(DLManagedTensor*)
2   at::fromDLPack(DLManagedTensor*, std::function<void (void*)>)
3   at::TensorMaker::make_tensor()
4   at::TensorMaker::computeStorageSize() const

----------------------
Error Message Summary:
----------------------
FatalError: `Process abort signal` is detected by the operating system.
  [TimeInfo: *** Aborted at 1749528076 (unix time) try "date -d @1749528076" if you are using GNU date ***]
  [SignalInfo: *** SIGABRT (@0x13569) received by PID 79209 (TID 0x7f8a2526c740) from PID 79209 ***]


2025-06-10 12:01:00.715268 GPU 3 79238 test begin: paddle.vander(Tensor([5],"float32"), 4, False, )
terminate called after throwing an instance of 'c10::Error'
  what():  Storage size calculation overflowed with sizes=[5, 4] and strides=[4, -1]
Exception raised from computeStorageNbytes at /pytorch/aten/src/ATen/EmptyTensor.cpp:109 (most recent call first):
frame #0: c10::Error::Error(c10::SourceLocation, std::string) + 0x96 (0x7f8f301f61b6 in /root/miniconda3/envs/paddle/lib/python3.12/site-packages/torch/lib/libc10.so)
frame #1: c10::detail::torchCheckFail(char const*, char const*, unsigned int, std::string const&) + 0x64 (0x7f8f3019fa76 in /root/miniconda3/envs/paddle/lib/python3.12/site-packages/torch/lib/libc10.so)
frame #2: at::detail::computeStorageNbytes(c10::ArrayRef<long>, c10::ArrayRef<long>, unsigned long, unsigned long) + 0x35e (0x7f8f047816ee in /root/miniconda3/envs/paddle/lib/python3.12/site-packages/torch/lib/libtorch_cpu.so)
frame #3: at::TensorMaker::computeStorageSize() const + 0xb3 (0x7f8f05441f03 in /root/miniconda3/envs/paddle/lib/python3.12/site-packages/torch/lib/libtorch_cpu.so)
frame #4: at::TensorMaker::make_tensor() + 0x440 (0x7f8f05442390 in /root/miniconda3/envs/paddle/lib/python3.12/site-packages/torch/lib/libtorch_cpu.so)
frame #5: at::fromDLPack(DLManagedTensor*, std::function<void (void*)>) + 0x354 (0x7f8f0477cab4 in /root/miniconda3/envs/paddle/lib/python3.12/site-packages/torch/lib/libtorch_cpu.so)
frame #6: at::fromDLPack(DLManagedTensor*) + 0x31 (0x7f8f0477cf41 in /root/miniconda3/envs/paddle/lib/python3.12/site-packages/torch/lib/libtorch_cpu.so)
frame #7: torch::utils::tensor_fromDLPack(_object*) + 0x40 (0x7f8f311268e0 in /root/miniconda3/envs/paddle/lib/python3.12/site-packages/torch/lib/libtorch_python.so)
frame #8: <unknown function> + 0x8235f9 (0x7f8f30b955f9 in /root/miniconda3/envs/paddle/lib/python3.12/site-packages/torch/lib/libtorch_python.so)
frame #9: /root/miniconda3/envs/paddle/bin/python() [0x54be6b]
frame #10: PyObject_Vectorcall + 0x51 (0x5416a1 in /root/miniconda3/envs/paddle/bin/python)
frame #11: _PyEval_EvalFrameDefault + 0x6ce (0x528ede in /root/miniconda3/envs/paddle/bin/python)
frame #12: PyEval_EvalCode + 0xae (0x5e581e in /root/miniconda3/envs/paddle/bin/python)
frame #13: /root/miniconda3/envs/paddle/bin/python() [0x60bfd7]
frame #14: /root/miniconda3/envs/paddle/bin/python() [0x6071c7]
frame #15: PyRun_StringFlags + 0x5f (0x5f694f in /root/miniconda3/envs/paddle/bin/python)
frame #16: PyRun_SimpleStringFlags + 0x3a (0x5f687a in /root/miniconda3/envs/paddle/bin/python)
frame #17: Py_RunMain + 0x45f (0x617def in /root/miniconda3/envs/paddle/bin/python)
frame #18: Py_BytesMain + 0x39 (0x5d03c9 in /root/miniconda3/envs/paddle/bin/python)
frame #19: __libc_start_main + 0xe7 (0x7f907fffbc87 in /lib/x86_64-linux-gnu/libc.so.6)
frame #20: /root/miniconda3/envs/paddle/bin/python() [0x5d01f9]



--------------------------------------
C++ Traceback (most recent call last):
--------------------------------------
0   torch::utils::tensor_fromDLPack(_object*)
1   at::fromDLPack(DLManagedTensor*)
2   at::fromDLPack(DLManagedTensor*, std::function<void (void*)>)
3   at::TensorMaker::make_tensor()
4   at::TensorMaker::computeStorageSize() const

----------------------
Error Message Summary:
----------------------
FatalError: `Process abort signal` is detected by the operating system.
  [TimeInfo: *** Aborted at 1749528076 (unix time) try "date -d @1749528076" if you are using GNU date ***]
  [SignalInfo: *** SIGABRT (@0x13586) received by PID 79238 (TID 0x7f9080fa4740) from PID 79238 ***]


2025-06-10 12:01:01.026434 GPU 3 78428 test begin: paddle.vander(Tensor([5],"float32"), 5, False, )
terminate called after throwing an instance of 'c10::Error'
  what():  Storage size calculation overflowed with sizes=[5, 5] and strides=[5, -1]
Exception raised from computeStorageNbytes at /pytorch/aten/src/ATen/EmptyTensor.cpp:109 (most recent call first):
frame #0: c10::Error::Error(c10::SourceLocation, std::string) + 0x96 (0x7fd74c7fa1b6 in /root/miniconda3/envs/paddle/lib/python3.12/site-packages/torch/lib/libc10.so)
frame #1: c10::detail::torchCheckFail(char const*, char const*, unsigned int, std::string const&) + 0x64 (0x7fd74c7a3a76 in /root/miniconda3/envs/paddle/lib/python3.12/site-packages/torch/lib/libc10.so)
frame #2: at::detail::computeStorageNbytes(c10::ArrayRef<long>, c10::ArrayRef<long>, unsigned long, unsigned long) + 0x35e (0x7fd71c7816ee in /root/miniconda3/envs/paddle/lib/python3.12/site-packages/torch/lib/libtorch_cpu.so)
frame #3: at::TensorMaker::computeStorageSize() const + 0xb3 (0x7fd71d441f03 in /root/miniconda3/envs/paddle/lib/python3.12/site-packages/torch/lib/libtorch_cpu.so)
frame #4: at::TensorMaker::make_tensor() + 0x440 (0x7fd71d442390 in /root/miniconda3/envs/paddle/lib/python3.12/site-packages/torch/lib/libtorch_cpu.so)
frame #5: at::fromDLPack(DLManagedTensor*, std::function<void (void*)>) + 0x354 (0x7fd71c77cab4 in /root/miniconda3/envs/paddle/lib/python3.12/site-packages/torch/lib/libtorch_cpu.so)
frame #6: at::fromDLPack(DLManagedTensor*) + 0x31 (0x7fd71c77cf41 in /root/miniconda3/envs/paddle/lib/python3.12/site-packages/torch/lib/libtorch_cpu.so)
frame #7: torch::utils::tensor_fromDLPack(_object*) + 0x40 (0x7fd7478388e0 in /root/miniconda3/envs/paddle/lib/python3.12/site-packages/torch/lib/libtorch_python.so)
frame #8: <unknown function> + 0x8235f9 (0x7fd7472a75f9 in /root/miniconda3/envs/paddle/lib/python3.12/site-packages/torch/lib/libtorch_python.so)
frame #9: /root/miniconda3/envs/paddle/bin/python() [0x54be6b]
frame #10: PyObject_Vectorcall + 0x51 (0x5416a1 in /root/miniconda3/envs/paddle/bin/python)
frame #11: _PyEval_EvalFrameDefault + 0x6ce (0x528ede in /root/miniconda3/envs/paddle/bin/python)
frame #12: PyEval_EvalCode + 0xae (0x5e581e in /root/miniconda3/envs/paddle/bin/python)
frame #13: /root/miniconda3/envs/paddle/bin/python() [0x60bfd7]
frame #14: /root/miniconda3/envs/paddle/bin/python() [0x6071c7]
frame #15: PyRun_StringFlags + 0x5f (0x5f694f in /root/miniconda3/envs/paddle/bin/python)
frame #16: PyRun_SimpleStringFlags + 0x3a (0x5f687a in /root/miniconda3/envs/paddle/bin/python)
frame #17: Py_RunMain + 0x45f (0x617def in /root/miniconda3/envs/paddle/bin/python)
frame #18: Py_BytesMain + 0x39 (0x5d03c9 in /root/miniconda3/envs/paddle/bin/python)
frame #19: __libc_start_main + 0xe7 (0x7fd89b088c87 in /lib/x86_64-linux-gnu/libc.so.6)
frame #20: /root/miniconda3/envs/paddle/bin/python() [0x5d01f9]



--------------------------------------
C++ Traceback (most recent call last):
--------------------------------------
0   torch::utils::tensor_fromDLPack(_object*)
1   at::fromDLPack(DLManagedTensor*)
2   at::fromDLPack(DLManagedTensor*, std::function<void (void*)>)
3   at::TensorMaker::make_tensor()
4   at::TensorMaker::computeStorageSize() const

----------------------
Error Message Summary:
----------------------
FatalError: `Process abort signal` is detected by the operating system.
  [TimeInfo: *** Aborted at 1749528061 (unix time) try "date -d @1749528061" if you are using GNU date ***]
  [SignalInfo: *** SIGABRT (@0x1325c) received by PID 78428 (TID 0x7fd89c031740) from PID 78428 ***]


2025-06-10 12:01:02.733680 GPU 3 79331 test begin: paddle.vander(Tensor([5],"float32"), 6, False, )
terminate called after throwing an instance of 'c10::Error'
  what():  Storage size calculation overflowed with sizes=[5, 6] and strides=[6, -1]
Exception raised from computeStorageNbytes at /pytorch/aten/src/ATen/EmptyTensor.cpp:109 (most recent call first):
frame #0: c10::Error::Error(c10::SourceLocation, std::string) + 0x96 (0x7f6118aa31b6 in /root/miniconda3/envs/paddle/lib/python3.12/site-packages/torch/lib/libc10.so)
frame #1: c10::detail::torchCheckFail(char const*, char const*, unsigned int, std::string const&) + 0x64 (0x7f6118a4ca76 in /root/miniconda3/envs/paddle/lib/python3.12/site-packages/torch/lib/libc10.so)
frame #2: at::detail::computeStorageNbytes(c10::ArrayRef<long>, c10::ArrayRef<long>, unsigned long, unsigned long) + 0x35e (0x7f60ec7816ee in /root/miniconda3/envs/paddle/lib/python3.12/site-packages/torch/lib/libtorch_cpu.so)
frame #3: at::TensorMaker::computeStorageSize() const + 0xb3 (0x7f60ed441f03 in /root/miniconda3/envs/paddle/lib/python3.12/site-packages/torch/lib/libtorch_cpu.so)
frame #4: at::TensorMaker::make_tensor() + 0x440 (0x7f60ed442390 in /root/miniconda3/envs/paddle/lib/python3.12/site-packages/torch/lib/libtorch_cpu.so)
frame #5: at::fromDLPack(DLManagedTensor*, std::function<void (void*)>) + 0x354 (0x7f60ec77cab4 in /root/miniconda3/envs/paddle/lib/python3.12/site-packages/torch/lib/libtorch_cpu.so)
frame #6: at::fromDLPack(DLManagedTensor*) + 0x31 (0x7f60ec77cf41 in /root/miniconda3/envs/paddle/lib/python3.12/site-packages/torch/lib/libtorch_cpu.so)
frame #7: torch::utils::tensor_fromDLPack(_object*) + 0x40 (0x7f61138388e0 in /root/miniconda3/envs/paddle/lib/python3.12/site-packages/torch/lib/libtorch_python.so)
frame #8: <unknown function> + 0x8235f9 (0x7f61132a75f9 in /root/miniconda3/envs/paddle/lib/python3.12/site-packages/torch/lib/libtorch_python.so)
frame #9: /root/miniconda3/envs/paddle/bin/python() [0x54be6b]
frame #10: PyObject_Vectorcall + 0x51 (0x5416a1 in /root/miniconda3/envs/paddle/bin/python)
frame #11: _PyEval_EvalFrameDefault + 0x6ce (0x528ede in /root/miniconda3/envs/paddle/bin/python)
frame #12: PyEval_EvalCode + 0xae (0x5e581e in /root/miniconda3/envs/paddle/bin/python)
frame #13: /root/miniconda3/envs/paddle/bin/python() [0x60bfd7]
frame #14: /root/miniconda3/envs/paddle/bin/python() [0x6071c7]
frame #15: PyRun_StringFlags + 0x5f (0x5f694f in /root/miniconda3/envs/paddle/bin/python)
frame #16: PyRun_SimpleStringFlags + 0x3a (0x5f687a in /root/miniconda3/envs/paddle/bin/python)
frame #17: Py_RunMain + 0x45f (0x617def in /root/miniconda3/envs/paddle/bin/python)
frame #18: Py_BytesMain + 0x39 (0x5d03c9 in /root/miniconda3/envs/paddle/bin/python)
frame #19: __libc_start_main + 0xe7 (0x7f626742dc87 in /lib/x86_64-linux-gnu/libc.so.6)
frame #20: /root/miniconda3/envs/paddle/bin/python() [0x5d01f9]



--------------------------------------
C++ Traceback (most recent call last):
--------------------------------------
0   torch::utils::tensor_fromDLPack(_object*)
1   at::fromDLPack(DLManagedTensor*)
2   at::fromDLPack(DLManagedTensor*, std::function<void (void*)>)
3   at::TensorMaker::make_tensor()
4   at::TensorMaker::computeStorageSize() const

----------------------
Error Message Summary:
----------------------
FatalError: `Process abort signal` is detected by the operating system.
  [TimeInfo: *** Aborted at 1749528077 (unix time) try "date -d @1749528077" if you are using GNU date ***]
  [SignalInfo: *** SIGABRT (@0x135e3) received by PID 79331 (TID 0x7f62683d6740) from PID 79331 ***]


2025-06-10 12:01:08.296750 GPU 3 79457 test begin: paddle.vander(Tensor([5],"float32"), 7, False, )
terminate called after throwing an instance of 'c10::Error'
  what():  Storage size calculation overflowed with sizes=[5, 7] and strides=[7, -1]
Exception raised from computeStorageNbytes at /pytorch/aten/src/ATen/EmptyTensor.cpp:109 (most recent call first):
frame #0: c10::Error::Error(c10::SourceLocation, std::string) + 0x96 (0x7f6e0073a1b6 in /root/miniconda3/envs/paddle/lib/python3.12/site-packages/torch/lib/libc10.so)
frame #1: c10::detail::torchCheckFail(char const*, char const*, unsigned int, std::string const&) + 0x64 (0x7f6e006e3a76 in /root/miniconda3/envs/paddle/lib/python3.12/site-packages/torch/lib/libc10.so)
frame #2: at::detail::computeStorageNbytes(c10::ArrayRef<long>, c10::ArrayRef<long>, unsigned long, unsigned long) + 0x35e (0x7f6dd47816ee in /root/miniconda3/envs/paddle/lib/python3.12/site-packages/torch/lib/libtorch_cpu.so)
frame #3: at::TensorMaker::computeStorageSize() const + 0xb3 (0x7f6dd5441f03 in /root/miniconda3/envs/paddle/lib/python3.12/site-packages/torch/lib/libtorch_cpu.so)
frame #4: at::TensorMaker::make_tensor() + 0x440 (0x7f6dd5442390 in /root/miniconda3/envs/paddle/lib/python3.12/site-packages/torch/lib/libtorch_cpu.so)
frame #5: at::fromDLPack(DLManagedTensor*, std::function<void (void*)>) + 0x354 (0x7f6dd477cab4 in /root/miniconda3/envs/paddle/lib/python3.12/site-packages/torch/lib/libtorch_cpu.so)
frame #6: at::fromDLPack(DLManagedTensor*) + 0x31 (0x7f6dd477cf41 in /root/miniconda3/envs/paddle/lib/python3.12/site-packages/torch/lib/libtorch_cpu.so)
frame #7: torch::utils::tensor_fromDLPack(_object*) + 0x40 (0x7f6e0165e8e0 in /root/miniconda3/envs/paddle/lib/python3.12/site-packages/torch/lib/libtorch_python.so)
frame #8: <unknown function> + 0x8235f9 (0x7f6e010cd5f9 in /root/miniconda3/envs/paddle/lib/python3.12/site-packages/torch/lib/libtorch_python.so)
frame #9: /root/miniconda3/envs/paddle/bin/python() [0x54be6b]
frame #10: PyObject_Vectorcall + 0x51 (0x5416a1 in /root/miniconda3/envs/paddle/bin/python)
frame #11: _PyEval_EvalFrameDefault + 0x6ce (0x528ede in /root/miniconda3/envs/paddle/bin/python)
frame #12: PyEval_EvalCode + 0xae (0x5e581e in /root/miniconda3/envs/paddle/bin/python)
frame #13: /root/miniconda3/envs/paddle/bin/python() [0x60bfd7]
frame #14: /root/miniconda3/envs/paddle/bin/python() [0x6071c7]
frame #15: PyRun_StringFlags + 0x5f (0x5f694f in /root/miniconda3/envs/paddle/bin/python)
frame #16: PyRun_SimpleStringFlags + 0x3a (0x5f687a in /root/miniconda3/envs/paddle/bin/python)
frame #17: Py_RunMain + 0x45f (0x617def in /root/miniconda3/envs/paddle/bin/python)
frame #18: Py_BytesMain + 0x39 (0x5d03c9 in /root/miniconda3/envs/paddle/bin/python)
frame #19: __libc_start_main + 0xe7 (0x7f6f50547c87 in /lib/x86_64-linux-gnu/libc.so.6)
frame #20: /root/miniconda3/envs/paddle/bin/python() [0x5d01f9]



--------------------------------------
C++ Traceback (most recent call last):
--------------------------------------
0   torch::utils::tensor_fromDLPack(_object*)
1   at::fromDLPack(DLManagedTensor*)
2   at::fromDLPack(DLManagedTensor*, std::function<void (void*)>)
3   at::TensorMaker::make_tensor()
4   at::TensorMaker::computeStorageSize() const

----------------------
Error Message Summary:
----------------------
FatalError: `Process abort signal` is detected by the operating system.
  [TimeInfo: *** Aborted at 1749528081 (unix time) try "date -d @1749528081" if you are using GNU date ***]
  [SignalInfo: *** SIGABRT (@0x13661) received by PID 79457 (TID 0x7f6f514f0740) from PID 79457 ***]


2025-06-10 12:01:11.023861 GPU 3 79528 test begin: paddle.vander(Tensor([5],"float32"), 8, False, )
terminate called after throwing an instance of 'c10::Error'
  what():  Storage size calculation overflowed with sizes=[5, 8] and strides=[8, -1]
Exception raised from computeStorageNbytes at /pytorch/aten/src/ATen/EmptyTensor.cpp:109 (most recent call first):
frame #0: c10::Error::Error(c10::SourceLocation, std::string) + 0x96 (0x7f2590f971b6 in /root/miniconda3/envs/paddle/lib/python3.12/site-packages/torch/lib/libc10.so)
frame #1: c10::detail::torchCheckFail(char const*, char const*, unsigned int, std::string const&) + 0x64 (0x7f2590f40a76 in /root/miniconda3/envs/paddle/lib/python3.12/site-packages/torch/lib/libc10.so)
frame #2: at::detail::computeStorageNbytes(c10::ArrayRef<long>, c10::ArrayRef<long>, unsigned long, unsigned long) + 0x35e (0x7f25647816ee in /root/miniconda3/envs/paddle/lib/python3.12/site-packages/torch/lib/libtorch_cpu.so)
frame #3: at::TensorMaker::computeStorageSize() const + 0xb3 (0x7f2565441f03 in /root/miniconda3/envs/paddle/lib/python3.12/site-packages/torch/lib/libtorch_cpu.so)
frame #4: at::TensorMaker::make_tensor() + 0x440 (0x7f2565442390 in /root/miniconda3/envs/paddle/lib/python3.12/site-packages/torch/lib/libtorch_cpu.so)
frame #5: at::fromDLPack(DLManagedTensor*, std::function<void (void*)>) + 0x354 (0x7f256477cab4 in /root/miniconda3/envs/paddle/lib/python3.12/site-packages/torch/lib/libtorch_cpu.so)
frame #6: at::fromDLPack(DLManagedTensor*) + 0x31 (0x7f256477cf41 in /root/miniconda3/envs/paddle/lib/python3.12/site-packages/torch/lib/libtorch_cpu.so)
frame #7: torch::utils::tensor_fromDLPack(_object*) + 0x40 (0x7f2591ec78e0 in /root/miniconda3/envs/paddle/lib/python3.12/site-packages/torch/lib/libtorch_python.so)
frame #8: <unknown function> + 0x8235f9 (0x7f25919365f9 in /root/miniconda3/envs/paddle/lib/python3.12/site-packages/torch/lib/libtorch_python.so)
frame #9: /root/miniconda3/envs/paddle/bin/python() [0x54be6b]
frame #10: PyObject_Vectorcall + 0x51 (0x5416a1 in /root/miniconda3/envs/paddle/bin/python)
frame #11: _PyEval_EvalFrameDefault + 0x6ce (0x528ede in /root/miniconda3/envs/paddle/bin/python)
frame #12: PyEval_EvalCode + 0xae (0x5e581e in /root/miniconda3/envs/paddle/bin/python)
frame #13: /root/miniconda3/envs/paddle/bin/python() [0x60bfd7]
frame #14: /root/miniconda3/envs/paddle/bin/python() [0x6071c7]
frame #15: PyRun_StringFlags + 0x5f (0x5f694f in /root/miniconda3/envs/paddle/bin/python)
frame #16: PyRun_SimpleStringFlags + 0x3a (0x5f687a in /root/miniconda3/envs/paddle/bin/python)
frame #17: Py_RunMain + 0x45f (0x617def in /root/miniconda3/envs/paddle/bin/python)
frame #18: Py_BytesMain + 0x39 (0x5d03c9 in /root/miniconda3/envs/paddle/bin/python)
frame #19: __libc_start_main + 0xe7 (0x7f26e0eabc87 in /lib/x86_64-linux-gnu/libc.so.6)
frame #20: /root/miniconda3/envs/paddle/bin/python() [0x5d01f9]



--------------------------------------
C++ Traceback (most recent call last):
--------------------------------------
0   torch::utils::tensor_fromDLPack(_object*)
1   at::fromDLPack(DLManagedTensor*)
2   at::fromDLPack(DLManagedTensor*, std::function<void (void*)>)
3   at::TensorMaker::make_tensor()
4   at::TensorMaker::computeStorageSize() const

----------------------
Error Message Summary:
----------------------
FatalError: `Process abort signal` is detected by the operating system.
  [TimeInfo: *** Aborted at 1749528084 (unix time) try "date -d @1749528084" if you are using GNU date ***]
  [SignalInfo: *** SIGABRT (@0x136a8) received by PID 79528 (TID 0x7f26e1e4f740) from PID 79528 ***]


2025-06-10 12:01:20.229147 GPU 3 79691 test begin: paddle.vander(Tensor([5],"float32"), None, False, )
terminate called after throwing an instance of 'c10::Error'
  what():  Storage size calculation overflowed with sizes=[5, 5] and strides=[5, -1]
Exception raised from computeStorageNbytes at /pytorch/aten/src/ATen/EmptyTensor.cpp:109 (most recent call first):
frame #0: c10::Error::Error(c10::SourceLocation, std::string) + 0x96 (0x7f8595f101b6 in /root/miniconda3/envs/paddle/lib/python3.12/site-packages/torch/lib/libc10.so)
frame #1: c10::detail::torchCheckFail(char const*, char const*, unsigned int, std::string const&) + 0x64 (0x7f8595eb9a76 in /root/miniconda3/envs/paddle/lib/python3.12/site-packages/torch/lib/libc10.so)
frame #2: at::detail::computeStorageNbytes(c10::ArrayRef<long>, c10::ArrayRef<long>, unsigned long, unsigned long) + 0x35e (0x7f856c7816ee in /root/miniconda3/envs/paddle/lib/python3.12/site-packages/torch/lib/libtorch_cpu.so)
frame #3: at::TensorMaker::computeStorageSize() const + 0xb3 (0x7f856d441f03 in /root/miniconda3/envs/paddle/lib/python3.12/site-packages/torch/lib/libtorch_cpu.so)
frame #4: at::TensorMaker::make_tensor() + 0x440 (0x7f856d442390 in /root/miniconda3/envs/paddle/lib/python3.12/site-packages/torch/lib/libtorch_cpu.so)
frame #5: at::fromDLPack(DLManagedTensor*, std::function<void (void*)>) + 0x354 (0x7f856c77cab4 in /root/miniconda3/envs/paddle/lib/python3.12/site-packages/torch/lib/libtorch_cpu.so)
frame #6: at::fromDLPack(DLManagedTensor*) + 0x31 (0x7f856c77cf41 in /root/miniconda3/envs/paddle/lib/python3.12/site-packages/torch/lib/libtorch_cpu.so)
frame #7: torch::utils::tensor_fromDLPack(_object*) + 0x40 (0x7f8596e0e8e0 in /root/miniconda3/envs/paddle/lib/python3.12/site-packages/torch/lib/libtorch_python.so)
frame #8: <unknown function> + 0x8235f9 (0x7f859687d5f9 in /root/miniconda3/envs/paddle/lib/python3.12/site-packages/torch/lib/libtorch_python.so)
frame #9: /root/miniconda3/envs/paddle/bin/python() [0x54be6b]
frame #10: PyObject_Vectorcall + 0x51 (0x5416a1 in /root/miniconda3/envs/paddle/bin/python)
frame #11: _PyEval_EvalFrameDefault + 0x6ce (0x528ede in /root/miniconda3/envs/paddle/bin/python)
frame #12: PyEval_EvalCode + 0xae (0x5e581e in /root/miniconda3/envs/paddle/bin/python)
frame #13: /root/miniconda3/envs/paddle/bin/python() [0x60bfd7]
frame #14: /root/miniconda3/envs/paddle/bin/python() [0x6071c7]
frame #15: PyRun_StringFlags + 0x5f (0x5f694f in /root/miniconda3/envs/paddle/bin/python)
frame #16: PyRun_SimpleStringFlags + 0x3a (0x5f687a in /root/miniconda3/envs/paddle/bin/python)
frame #17: Py_RunMain + 0x45f (0x617def in /root/miniconda3/envs/paddle/bin/python)
frame #18: Py_BytesMain + 0x39 (0x5d03c9 in /root/miniconda3/envs/paddle/bin/python)
frame #19: __libc_start_main + 0xe7 (0x7f86e9dbbc87 in /lib/x86_64-linux-gnu/libc.so.6)
frame #20: /root/miniconda3/envs/paddle/bin/python() [0x5d01f9]



--------------------------------------
C++ Traceback (most recent call last):
--------------------------------------
0   torch::utils::tensor_fromDLPack(_object*)
1   at::fromDLPack(DLManagedTensor*)
2   at::fromDLPack(DLManagedTensor*, std::function<void (void*)>)
3   at::TensorMaker::make_tensor()
4   at::TensorMaker::computeStorageSize() const

----------------------
Error Message Summary:
----------------------
FatalError: `Process abort signal` is detected by the operating system.
  [TimeInfo: *** Aborted at 1749528092 (unix time) try "date -d @1749528092" if you are using GNU date ***]
  [SignalInfo: *** SIGABRT (@0x1374b) received by PID 79691 (TID 0x7f86ead64740) from PID 79691 ***]


2025-06-09 22:05:20.113680 GPU 7 93160 test begin: paddle.Tensor.__matmul__(Tensor([1, 20, 2, 16],"float32"), Tensor([16, 16],"float16"), )
/root/miniconda3/envs/paddle/lib/python3.12/site-packages/torch/autograd/graph.py:823: UserWarning: Attempting to run cuBLAS, but there was no current CUDA context! Attempting to set the primary context... (Triggered internally at /pytorch/aten/src/ATen/cuda/CublasHandlePool.cpp:180.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
/root/miniconda3/envs/paddle/lib/python3.12/site-packages/paddle/amp/auto_cast.py:596: UserWarning: amp_guard can only be enabled on CUDAPlace, XPUPlace, and CustomPlace, current place is Place(cpu), so it makes no effect.
  warnings.warn(
[accuracy error] paddle.Tensor.__matmul__(Tensor([1, 20, 2, 16],"float32"), Tensor([16, 16],"float16"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
The values for attribute 'dtype' do not match: torch.float32 != torch.float16.
ACTUAL: (shape=torch.Size([1, 20, 2, 16]), dtype=torch.float32)
tensor([[[[-0.0269, -0.4246,  0.0041,  ...,  0.2637, -0.0513, -0.4872],
          [-0.1361, -0.2225,  0.2442,  ..., -0.3972,  0.0968,  0.1638]],

         [[ 0.0063, -0.1814,  0.0469,  ..., -0.4036, -0.2257,  0.0770],
          [-0.0572, -0.0328, -0.1606,  ...,  0.0941,  0.4792,  0.2133]],

         [[-0.0905, -0.3021,  0.1249,  ...,  0.3614, -0.2089,  0.4511],
          [ 0.2210,  0.3393, -0.1571,  ..., -0.3775,  0.2327, -0.0472]],

         ...,

         [[ 0.3809, -0.4419,  0.0624,  ...,  0.0978,  0.1622,  0.4639],
          [ 0.3147, -0.5278,  0.6630,  ..., -0.6169,  0.4774,  0.4590]],

         [[ 0.0022,  0.5269,  0.1328,  ..., -0.3278, -0.0037,  0.2823],
          [-0.1609, -0.2563,  0.1399,  ...,  0.6427, -0.2495, -0.5592]],

         [[-0.4059,  0.4647,  0.2821,  ..., -0.7902, -0.3123, -0.5693],
          [-0.2809,  0.2339,  0.6111,  ..., -0.4474,  0.2802, -0.0746]]]])
DESIRED: (shape=torch.Size([1, 20, 2, 16]), dtype=torch.float16)
tensor([[[[-0.0269, -0.4246,  0.0041,  ...,  0.2637, -0.0514, -0.4873],
          [-0.1361, -0.2224,  0.2441,  ..., -0.3972,  0.0969,  0.1638]],

         [[ 0.0064, -0.1815,  0.0469,  ..., -0.4038, -0.2257,  0.0771],
          [-0.0572, -0.0328, -0.1608,  ...,  0.0942,  0.4792,  0.2134]],

         [[-0.0906, -0.3020,  0.1248,  ...,  0.3616, -0.2089,  0.4512],
          [ 0.2209,  0.3394, -0.1571,  ..., -0.3774,  0.2325, -0.0472]],

         ...,

         [[ 0.3809, -0.4417,  0.0623,  ...,  0.0979,  0.1622,  0.4639],
          [ 0.3147, -0.5278,  0.6631,  ..., -0.6172,  0.4773,  0.4590]],

         [[ 0.0022,  0.5269,  0.1328,  ..., -0.3279, -0.0037,  0.2825],
          [-0.1608, -0.2563,  0.1400,  ...,  0.6426, -0.2494, -0.5591]],

         [[-0.4060,  0.4646,  0.2822,  ..., -0.7900, -0.3125, -0.5693],
          [-0.2810,  0.2340,  0.6108,  ..., -0.4473,  0.2803, -0.0745]]]], dtype=torch.float16)

2025-06-09 22:05:20.637186 GPU 6 93169 test begin: paddle.Tensor.__matmul__(Tensor([1, 20, 32],"float32"), Tensor([32, 4],"float16"), )
/root/miniconda3/envs/paddle/lib/python3.12/site-packages/torch/autograd/graph.py:823: UserWarning: Attempting to run cuBLAS, but there was no current CUDA context! Attempting to set the primary context... (Triggered internally at /pytorch/aten/src/ATen/cuda/CublasHandlePool.cpp:180.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
/root/miniconda3/envs/paddle/lib/python3.12/site-packages/paddle/amp/auto_cast.py:596: UserWarning: amp_guard can only be enabled on CUDAPlace, XPUPlace, and CustomPlace, current place is Place(cpu), so it makes no effect.
  warnings.warn(
[accuracy error] paddle.Tensor.__matmul__(Tensor([1, 20, 32],"float32"), Tensor([32, 4],"float16"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
The values for attribute 'dtype' do not match: torch.float32 != torch.float16.
ACTUAL: (shape=torch.Size([1, 20, 4]), dtype=torch.float32)
tensor([[[ 7.1851e-02, -5.2384e-01,  2.3975e-01, -4.4269e-01],
         [-5.8343e-01,  1.5814e-01, -4.5236e-01,  5.7490e-01],
         [ 1.5316e+00, -7.0307e-01,  4.3438e-01, -2.0269e-01],
         [-3.9626e-01,  2.1367e-01, -2.2109e-01,  1.0286e-01],
         [ 3.7632e-01, -3.2326e-01,  3.9520e-01,  4.8721e-01],
         [ 4.9957e-01, -2.5112e-01,  3.1071e-01,  2.6091e-01],
         [-1.1888e-03,  1.8398e+00, -5.6220e-01, -1.9487e-01],
         [ 9.5152e-01, -3.0251e-01,  2.8818e-03, -2.3642e-02],
         [-2.2316e-01,  4.7308e-01, -9.0690e-01,  5.5750e-02],
         [-2.2077e-01, -1.0265e+00,  5.1070e-01,  4.2245e-01],
         [ 4.3396e-01, -5.9855e-01,  1.8359e-01,  1.9615e-01],
         [-2.8333e-01,  4.0696e-01, -7.8453e-01, -1.3685e-01],
         [ 5.0826e-01, -9.2156e-02, -9.6341e-01, -1.9002e-01],
         [ 2.1833e-01, -8.9582e-01, -1.8950e-01,  3.3551e-01],
         [-2.4035e-01,  8.2579e-01, -3.1764e-02,  3.4264e-01],
         [-5.9959e-01,  6.7260e-01,  1.2128e+00, -7.3455e-02],
         [ 3.9333e-01, -3.6861e-01,  3.6568e-01, -2.2053e-01],
         [ 8.3999e-02,  4.4457e-01, -2.1013e-01,  8.3693e-01],
         [-4.4727e-01,  5.3196e-02, -8.0861e-01, -3.8490e-01],
         [ 1.7579e-01, -3.6740e-01, -1.9170e-01,  2.4851e-01]]])
DESIRED: (shape=torch.Size([1, 20, 4]), dtype=torch.float16)
tensor([[[ 7.1838e-02, -5.2393e-01,  2.3975e-01, -4.4263e-01],
         [-5.8350e-01,  1.5808e-01, -4.5239e-01,  5.7471e-01],
         [ 1.5312e+00, -7.0312e-01,  4.3433e-01, -2.0276e-01],
         [-3.9624e-01,  2.1375e-01, -2.2119e-01,  1.0284e-01],
         [ 3.7622e-01, -3.2300e-01,  3.9526e-01,  4.8706e-01],
         [ 4.9976e-01, -2.5098e-01,  3.1079e-01,  2.6074e-01],
         [-1.2894e-03,  1.8398e+00, -5.6201e-01, -1.9495e-01],
         [ 9.5166e-01, -3.0249e-01,  2.9068e-03, -2.3773e-02],
         [-2.2314e-01,  4.7314e-01, -9.0674e-01,  5.5969e-02],
         [-2.2083e-01, -1.0264e+00,  5.1074e-01,  4.2261e-01],
         [ 4.3384e-01, -5.9863e-01,  1.8359e-01,  1.9617e-01],
         [-2.8320e-01,  4.0698e-01, -7.8467e-01, -1.3696e-01],
         [ 5.0830e-01, -9.2285e-02, -9.6338e-01, -1.9006e-01],
         [ 2.1826e-01, -8.9600e-01, -1.8970e-01,  3.3569e-01],
         [-2.4011e-01,  8.2568e-01, -3.1830e-02,  3.4253e-01],
         [-5.9961e-01,  6.7285e-01,  1.2129e+00, -7.3425e-02],
         [ 3.9331e-01, -3.6841e-01,  3.6548e-01, -2.2046e-01],
         [ 8.3923e-02,  4.4458e-01, -2.1008e-01,  8.3691e-01],
         [-4.4727e-01,  5.3253e-02, -8.0859e-01, -3.8501e-01],
         [ 1.7578e-01, -3.6743e-01, -1.9165e-01,  2.4841e-01]]], dtype=torch.float16)

2025-06-09 22:05:20.641292 GPU 7 93163 test begin: paddle.Tensor.__matmul__(Tensor([1, 20, 4],"float32"), Tensor([4, 32],"float16"), )
/root/miniconda3/envs/paddle/lib/python3.12/site-packages/torch/autograd/graph.py:823: UserWarning: Attempting to run cuBLAS, but there was no current CUDA context! Attempting to set the primary context... (Triggered internally at /pytorch/aten/src/ATen/cuda/CublasHandlePool.cpp:180.)
  return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
/root/miniconda3/envs/paddle/lib/python3.12/site-packages/paddle/amp/auto_cast.py:596: UserWarning: amp_guard can only be enabled on CUDAPlace, XPUPlace, and CustomPlace, current place is Place(cpu), so it makes no effect.
  warnings.warn(
[accuracy error] paddle.Tensor.__matmul__(Tensor([1, 20, 4],"float32"), Tensor([4, 32],"float16"), ) 
 Not equal to tolerance rtol=0.01, atol=0.01
The values for attribute 'dtype' do not match: torch.float32 != torch.float16.
ACTUAL: (shape=torch.Size([1, 20, 32]), dtype=torch.float32)
tensor([[[-0.0873, -0.2707, -0.0091,  ...,  0.0479, -0.1387, -0.0212],
         [ 0.2863,  0.5153,  0.0470,  ...,  0.1203,  0.1570,  0.0577],
         [ 0.2852,  0.2749,  0.1557,  ...,  0.1528, -0.1268, -0.0895],
         ...,
         [-0.0718, -0.1926,  0.2197,  ...,  0.0493, -0.1102,  0.1083],
         [ 0.2125,  0.5041,  0.0191,  ..., -0.0394,  0.1951, -0.0038],
         [ 0.1976,  0.0887,  0.0759,  ...,  0.1801, -0.1642, -0.0808]]])
DESIRED: (shape=torch.Size([1, 20, 32]), dtype=torch.float16)
tensor([[[-0.0873, -0.2708, -0.0092,  ...,  0.0478, -0.1387, -0.0212],
         [ 0.2864,  0.5156,  0.0470,  ...,  0.1203,  0.1570,  0.0578],
         [ 0.2852,  0.2749,  0.1556,  ...,  0.1527, -0.1268, -0.0895],
         ...,
         [-0.0718, -0.1926,  0.2196,  ...,  0.0493, -0.1102,  0.1083],
         [ 0.2125,  0.5039,  0.0191,  ..., -0.0395,  0.1952, -0.0038],
         [ 0.1976,  0.0887,  0.0759,  ...,  0.1801, -0.1642, -0.0808]]], dtype=torch.float16)

2025-06-09 22:05:20.682354 GPU 6 93161 test begin: paddle.add_n(list[Tensor([],"float32"),Tensor([],"float32"),Tensor([],"float16"),Tensor([],"float32"),], )
/root/miniconda3/envs/paddle/lib/python3.12/site-packages/paddle/amp/auto_cast.py:596: UserWarning: amp_guard can only be enabled on CUDAPlace, XPUPlace, and CustomPlace, current place is Place(cpu), so it makes no effect.
  warnings.warn(
[paddle error] paddle.add_n(list[Tensor([],"float32"),Tensor([],"float32"),Tensor([],"float16"),Tensor([],"float32"),], ) 
 (InvalidArgument) The type of data we are trying to retrieve (float32) does not match the type of data (float16) currently contained in the container.
  [Hint: Expected dtype() == phi::CppTypeToDataType<T>::Type(), but received dtype():15 != phi::CppTypeToDataType<T>::Type():10.] (at ../paddle/phi/core/dense_tensor.cc:153)


2025-06-09 22:05:20.829053 GPU 6 93166 test begin: paddle.add_n(list[Tensor([],"float32"),Tensor([],"float32"),Tensor([],"float32"),Tensor([],"float16"),Tensor([],"float32"),], )
/root/miniconda3/envs/paddle/lib/python3.12/site-packages/paddle/amp/auto_cast.py:596: UserWarning: amp_guard can only be enabled on CUDAPlace, XPUPlace, and CustomPlace, current place is Place(cpu), so it makes no effect.
  warnings.warn(
[paddle error] paddle.add_n(list[Tensor([],"float32"),Tensor([],"float32"),Tensor([],"float32"),Tensor([],"float16"),Tensor([],"float32"),], ) 
 (InvalidArgument) The type of data we are trying to retrieve (float32) does not match the type of data (float16) currently contained in the container.
  [Hint: Expected dtype() == phi::CppTypeToDataType<T>::Type(), but received dtype():15 != phi::CppTypeToDataType<T>::Type():10.] (at ../paddle/phi/core/dense_tensor.cc:153)


2025-06-09 22:05:20.865789 GPU 6 93159 test begin: paddle.concat(list[Tensor([1, 256, 128, 128],"float32"),Tensor([1, 48, 128, 128],"float16"),], axis=1, )
/root/miniconda3/envs/paddle/lib/python3.12/site-packages/paddle/amp/auto_cast.py:596: UserWarning: amp_guard can only be enabled on CUDAPlace, XPUPlace, and CustomPlace, current place is Place(cpu), so it makes no effect.
  warnings.warn(
[paddle error] paddle.concat(list[Tensor([1, 256, 128, 128],"float32"),Tensor([1, 48, 128, 128],"float16"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:20.867397 GPU 7 93165 test begin: paddle.concat(list[Tensor([1, 256, 64, 64],"float16"),Tensor([1, 256, 64, 64],"float16"),Tensor([1, 256, 64, 64],"float16"),Tensor([1, 256, 64, 64],"float16"),Tensor([1, 256, 64, 64],"float32"),], axis=1, )
/root/miniconda3/envs/paddle/lib/python3.12/site-packages/paddle/amp/auto_cast.py:596: UserWarning: amp_guard can only be enabled on CUDAPlace, XPUPlace, and CustomPlace, current place is Place(cpu), so it makes no effect.
  warnings.warn(
[paddle error] paddle.concat(list[Tensor([1, 256, 64, 64],"float16"),Tensor([1, 256, 64, 64],"float16"),Tensor([1, 256, 64, 64],"float16"),Tensor([1, 256, 64, 64],"float16"),Tensor([1, 256, 64, 64],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 4th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:21.333012 GPU 7 93164 test begin: paddle.concat(list[Tensor([12, 128, 76, 136],"float32"),Tensor([12, 256, 76, 136],"float16"),], axis=1, )
/root/miniconda3/envs/paddle/lib/python3.12/site-packages/paddle/amp/auto_cast.py:596: UserWarning: amp_guard can only be enabled on CUDAPlace, XPUPlace, and CustomPlace, current place is Place(cpu), so it makes no effect.
  warnings.warn(
[paddle error] paddle.concat(list[Tensor([12, 128, 76, 136],"float32"),Tensor([12, 256, 76, 136],"float16"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:21.341832 GPU 7 93170 test begin: paddle.concat(list[Tensor([12, 256, 38, 68],"float32"),Tensor([12, 512, 38, 68],"float16"),], axis=1, )
/root/miniconda3/envs/paddle/lib/python3.12/site-packages/paddle/amp/auto_cast.py:596: UserWarning: amp_guard can only be enabled on CUDAPlace, XPUPlace, and CustomPlace, current place is Place(cpu), so it makes no effect.
  warnings.warn(
[paddle error] paddle.concat(list[Tensor([12, 256, 38, 68],"float32"),Tensor([12, 512, 38, 68],"float16"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:21.353276 GPU 7 93168 test begin: paddle.concat(list[Tensor([12, 256, 40, 40],"float32"),Tensor([12, 512, 40, 40],"float16"),], axis=1, )
/root/miniconda3/envs/paddle/lib/python3.12/site-packages/paddle/amp/auto_cast.py:596: UserWarning: amp_guard can only be enabled on CUDAPlace, XPUPlace, and CustomPlace, current place is Place(cpu), so it makes no effect.
  warnings.warn(
[paddle error] paddle.concat(list[Tensor([12, 256, 40, 40],"float32"),Tensor([12, 512, 40, 40],"float16"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:21.353434 GPU 6 93162 test begin: paddle.concat(list[Tensor([12, 512, 20, 20],"float32"),Tensor([12, 1024, 20, 20],"float16"),], axis=1, )
/root/miniconda3/envs/paddle/lib/python3.12/site-packages/paddle/amp/auto_cast.py:596: UserWarning: amp_guard can only be enabled on CUDAPlace, XPUPlace, and CustomPlace, current place is Place(cpu), so it makes no effect.
  warnings.warn(
[paddle error] paddle.concat(list[Tensor([12, 512, 20, 20],"float32"),Tensor([12, 1024, 20, 20],"float16"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:21.358812 GPU 7 93167 test begin: paddle.concat(list[Tensor([16, 1024, 40, 40],"float16"),Tensor([16, 192, 40, 40],"float32"),Tensor([16, 192, 40, 40],"float32"),Tensor([16, 192, 40, 40],"float32"),Tensor([16, 192, 40, 40],"float32"),Tensor([16, 192, 40, 40],"float32"),Tensor([16, 192, 40, 40],"float32"),], axis=1, )
/root/miniconda3/envs/paddle/lib/python3.12/site-packages/paddle/amp/auto_cast.py:596: UserWarning: amp_guard can only be enabled on CUDAPlace, XPUPlace, and CustomPlace, current place is Place(cpu), so it makes no effect.
  warnings.warn(
[paddle error] paddle.concat(list[Tensor([16, 1024, 40, 40],"float16"),Tensor([16, 192, 40, 40],"float32"),Tensor([16, 192, 40, 40],"float32"),Tensor([16, 192, 40, 40],"float32"),Tensor([16, 192, 40, 40],"float32"),Tensor([16, 192, 40, 40],"float32"),Tensor([16, 192, 40, 40],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:21.362982 GPU 6 93158 test begin: paddle.concat(list[Tensor([16, 128, 80, 80],"float32"),Tensor([16, 96, 80, 80],"float16"),Tensor([16, 96, 80, 80],"float16"),Tensor([16, 96, 80, 80],"float16"),Tensor([16, 96, 80, 80],"float16"),Tensor([16, 96, 80, 80],"float16"),Tensor([16, 96, 80, 80],"float16"),], axis=1, )
/root/miniconda3/envs/paddle/lib/python3.12/site-packages/paddle/amp/auto_cast.py:596: UserWarning: amp_guard can only be enabled on CUDAPlace, XPUPlace, and CustomPlace, current place is Place(cpu), so it makes no effect.
  warnings.warn(
[paddle error] paddle.concat(list[Tensor([16, 128, 80, 80],"float32"),Tensor([16, 96, 80, 80],"float16"),Tensor([16, 96, 80, 80],"float16"),Tensor([16, 96, 80, 80],"float16"),Tensor([16, 96, 80, 80],"float16"),Tensor([16, 96, 80, 80],"float16"),Tensor([16, 96, 80, 80],"float16"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:22.072117 GPU 6 93171 test begin: paddle.concat(list[Tensor([16, 192, 20, 20],"float16"),Tensor([16, 192, 20, 20],"float32"),], axis=1, )
/root/miniconda3/envs/paddle/lib/python3.12/site-packages/paddle/amp/auto_cast.py:596: UserWarning: amp_guard can only be enabled on CUDAPlace, XPUPlace, and CustomPlace, current place is Place(cpu), so it makes no effect.
  warnings.warn(
[paddle error] paddle.concat(list[Tensor([16, 192, 20, 20],"float16"),Tensor([16, 192, 20, 20],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:32.563121 GPU 6 93166 test begin: paddle.concat(list[Tensor([16, 192, 22, 22],"float16"),Tensor([16, 192, 22, 22],"float32"),], axis=1, )
/root/miniconda3/envs/paddle/lib/python3.12/site-packages/paddle/amp/auto_cast.py:596: UserWarning: amp_guard can only be enabled on CUDAPlace, XPUPlace, and CustomPlace, current place is Place(cpu), so it makes no effect.
  warnings.warn(
[paddle error] paddle.concat(list[Tensor([16, 192, 22, 22],"float16"),Tensor([16, 192, 22, 22],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:32.806117 GPU 6 93161 test begin: paddle.concat(list[Tensor([16, 192, 24, 24],"float16"),Tensor([16, 192, 24, 24],"float32"),], axis=1, )
/root/miniconda3/envs/paddle/lib/python3.12/site-packages/paddle/amp/auto_cast.py:596: UserWarning: amp_guard can only be enabled on CUDAPlace, XPUPlace, and CustomPlace, current place is Place(cpu), so it makes no effect.
  warnings.warn(
[paddle error] paddle.concat(list[Tensor([16, 192, 24, 24],"float16"),Tensor([16, 192, 24, 24],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:34.107277 GPU 6 93159 test begin: paddle.concat(list[Tensor([16, 192, 26, 26],"float16"),Tensor([16, 192, 26, 26],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 192, 26, 26],"float16"),Tensor([16, 192, 26, 26],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:34.431486 GPU 6 93159 test begin: paddle.concat(list[Tensor([16, 192, 28, 28],"float16"),Tensor([16, 192, 28, 28],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 192, 28, 28],"float16"),Tensor([16, 192, 28, 28],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:34.437059 GPU 6 93166 test begin: paddle.concat(list[Tensor([16, 192, 30, 30],"float16"),Tensor([16, 192, 30, 30],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 192, 30, 30],"float16"),Tensor([16, 192, 30, 30],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:34.652642 GPU 6 93161 test begin: paddle.concat(list[Tensor([16, 192, 32, 32],"float16"),Tensor([16, 192, 32, 32],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 192, 32, 32],"float16"),Tensor([16, 192, 32, 32],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:34.798777 GPU 6 93159 test begin: paddle.concat(list[Tensor([16, 192, 34, 34],"float16"),Tensor([16, 192, 34, 34],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 192, 34, 34],"float16"),Tensor([16, 192, 34, 34],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:34.857703 GPU 6 93166 test begin: paddle.concat(list[Tensor([16, 192, 36, 36],"float16"),Tensor([16, 192, 36, 36],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 192, 36, 36],"float16"),Tensor([16, 192, 36, 36],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:35.068735 GPU 7 93165 test begin: paddle.concat(list[Tensor([16, 192, 38, 38],"float16"),Tensor([16, 192, 38, 38],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 192, 38, 38],"float16"),Tensor([16, 192, 38, 38],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:35.119059 GPU 6 93161 test begin: paddle.concat(list[Tensor([16, 192, 40, 40],"float16"),Tensor([16, 192, 40, 40],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 192, 40, 40],"float16"),Tensor([16, 192, 40, 40],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:35.224589 GPU 6 93162 test begin: paddle.concat(list[Tensor([16, 192, 40, 40],"float32"),Tensor([16, 256, 40, 40],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 192, 40, 40],"float32"),Tensor([16, 256, 40, 40],"float16"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:35.237198 GPU 6 93159 test begin: paddle.concat(list[Tensor([16, 192, 42, 42],"float16"),Tensor([16, 192, 42, 42],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 192, 42, 42],"float16"),Tensor([16, 192, 42, 42],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:35.258107 GPU 6 93171 test begin: paddle.concat(list[Tensor([16, 192, 44, 44],"float16"),Tensor([16, 192, 44, 44],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 192, 44, 44],"float16"),Tensor([16, 192, 44, 44],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:35.339455 GPU 6 93166 test begin: paddle.concat(list[Tensor([16, 192, 44, 44],"float32"),Tensor([16, 256, 44, 44],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 192, 44, 44],"float32"),Tensor([16, 256, 44, 44],"float16"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:36.267699 GPU 7 93165 test begin: paddle.concat(list[Tensor([16, 192, 46, 46],"float16"),Tensor([16, 192, 46, 46],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 192, 46, 46],"float16"),Tensor([16, 192, 46, 46],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:36.368678 GPU 7 93168 test begin: paddle.concat(list[Tensor([16, 192, 48, 48],"float16"),Tensor([16, 192, 48, 48],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 192, 48, 48],"float16"),Tensor([16, 192, 48, 48],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:36.498735 GPU 6 93161 test begin: paddle.concat(list[Tensor([16, 192, 48, 48],"float32"),Tensor([16, 256, 48, 48],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 192, 48, 48],"float32"),Tensor([16, 256, 48, 48],"float16"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:36.847637 GPU 7 93170 test begin: paddle.concat(list[Tensor([16, 192, 52, 52],"float32"),Tensor([16, 256, 52, 52],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 192, 52, 52],"float32"),Tensor([16, 256, 52, 52],"float16"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:37.120946 GPU 7 93160 test begin: paddle.concat(list[Tensor([16, 192, 56, 56],"float32"),Tensor([16, 256, 56, 56],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 192, 56, 56],"float32"),Tensor([16, 256, 56, 56],"float16"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:37.129057 GPU 6 93169 test begin: paddle.concat(list[Tensor([16, 192, 60, 60],"float32"),Tensor([16, 256, 60, 60],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 192, 60, 60],"float32"),Tensor([16, 256, 60, 60],"float16"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:37.160019 GPU 7 93163 test begin: paddle.concat(list[Tensor([16, 192, 64, 64],"float32"),Tensor([16, 256, 64, 64],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 192, 64, 64],"float32"),Tensor([16, 256, 64, 64],"float16"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:37.210172 GPU 6 93159 test begin: paddle.concat(list[Tensor([16, 192, 68, 68],"float32"),Tensor([16, 256, 68, 68],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 192, 68, 68],"float32"),Tensor([16, 256, 68, 68],"float16"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:37.237154 GPU 6 93162 test begin: paddle.concat(list[Tensor([16, 192, 72, 72],"float32"),Tensor([16, 256, 72, 72],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 192, 72, 72],"float32"),Tensor([16, 256, 72, 72],"float16"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:37.241827 GPU 6 93166 test begin: paddle.concat(list[Tensor([16, 192, 76, 76],"float32"),Tensor([16, 256, 76, 76],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 192, 76, 76],"float32"),Tensor([16, 256, 76, 76],"float16"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:37.246842 GPU 6 93171 test begin: paddle.concat(list[Tensor([16, 192, 80, 80],"float32"),Tensor([16, 256, 80, 80],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 192, 80, 80],"float32"),Tensor([16, 256, 80, 80],"float16"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:37.446391 GPU 7 93168 test begin: paddle.concat(list[Tensor([16, 192, 84, 84],"float32"),Tensor([16, 256, 84, 84],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 192, 84, 84],"float32"),Tensor([16, 256, 84, 84],"float16"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:37.457376 GPU 7 93165 test begin: paddle.concat(list[Tensor([16, 192, 88, 88],"float32"),Tensor([16, 256, 88, 88],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 192, 88, 88],"float32"),Tensor([16, 256, 88, 88],"float16"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:37.493607 GPU 6 93161 test begin: paddle.concat(list[Tensor([16, 192, 92, 92],"float32"),Tensor([16, 256, 92, 92],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 192, 92, 92],"float32"),Tensor([16, 256, 92, 92],"float16"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:37.496514 GPU 7 93164 test begin: paddle.concat(list[Tensor([16, 192, 96, 96],"float32"),Tensor([16, 256, 96, 96],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 192, 96, 96],"float32"),Tensor([16, 256, 96, 96],"float16"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:37.682763 GPU 7 93167 test begin: paddle.concat(list[Tensor([16, 256, 40, 40],"float32"),Tensor([16, 256, 40, 40],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 256, 40, 40],"float32"),Tensor([16, 256, 40, 40],"float16"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:37.812161 GPU 6 93158 test begin: paddle.concat(list[Tensor([16, 256, 80, 80],"float32"),Tensor([16, 256, 80, 80],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 256, 80, 80],"float32"),Tensor([16, 256, 80, 80],"float16"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:37.969699 GPU 7 93170 test begin: paddle.concat(list[Tensor([16, 384, 10, 10],"float16"),Tensor([16, 384, 10, 10],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 384, 10, 10],"float16"),Tensor([16, 384, 10, 10],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:38.219419 GPU 7 93160 test begin: paddle.concat(list[Tensor([16, 384, 11, 11],"float16"),Tensor([16, 384, 11, 11],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 384, 11, 11],"float16"),Tensor([16, 384, 11, 11],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:38.474471 GPU 7 93167 test begin: paddle.concat(list[Tensor([16, 384, 12, 12],"float16"),Tensor([16, 384, 12, 12],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 384, 12, 12],"float16"),Tensor([16, 384, 12, 12],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:38.481741 GPU 7 93170 test begin: paddle.concat(list[Tensor([16, 384, 13, 13],"float16"),Tensor([16, 384, 13, 13],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 384, 13, 13],"float16"),Tensor([16, 384, 13, 13],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:38.778313 GPU 7 93163 test begin: paddle.concat(list[Tensor([16, 384, 14, 14],"float16"),Tensor([16, 384, 14, 14],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 384, 14, 14],"float16"),Tensor([16, 384, 14, 14],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:38.851010 GPU 6 93169 test begin: paddle.concat(list[Tensor([16, 384, 15, 15],"float16"),Tensor([16, 384, 15, 15],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 384, 15, 15],"float16"),Tensor([16, 384, 15, 15],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:39.134242 GPU 7 93160 test begin: paddle.concat(list[Tensor([16, 384, 16, 16],"float16"),Tensor([16, 384, 16, 16],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 384, 16, 16],"float16"),Tensor([16, 384, 16, 16],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:39.751179 GPU 6 93162 test begin: paddle.concat(list[Tensor([16, 384, 17, 17],"float16"),Tensor([16, 384, 17, 17],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 384, 17, 17],"float16"),Tensor([16, 384, 17, 17],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:39.755569 GPU 6 93159 test begin: paddle.concat(list[Tensor([16, 384, 18, 18],"float16"),Tensor([16, 384, 18, 18],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 384, 18, 18],"float16"),Tensor([16, 384, 18, 18],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:39.972528 GPU 7 93163 test begin: paddle.concat(list[Tensor([16, 384, 19, 19],"float16"),Tensor([16, 384, 19, 19],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 384, 19, 19],"float16"),Tensor([16, 384, 19, 19],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:40.009274 GPU 7 93170 test begin: paddle.concat(list[Tensor([16, 384, 20, 20],"float16"),Tensor([16, 384, 20, 20],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 384, 20, 20],"float16"),Tensor([16, 384, 20, 20],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:40.057606 GPU 7 93167 test begin: paddle.concat(list[Tensor([16, 384, 20, 20],"float32"),Tensor([16, 512, 20, 20],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 384, 20, 20],"float32"),Tensor([16, 512, 20, 20],"float16"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:40.082794 GPU 6 93169 test begin: paddle.concat(list[Tensor([16, 384, 21, 21],"float16"),Tensor([16, 384, 21, 21],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 384, 21, 21],"float16"),Tensor([16, 384, 21, 21],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:40.101937 GPU 6 93166 test begin: paddle.concat(list[Tensor([16, 384, 22, 22],"float16"),Tensor([16, 384, 22, 22],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 384, 22, 22],"float16"),Tensor([16, 384, 22, 22],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:40.166755 GPU 6 93171 test begin: paddle.concat(list[Tensor([16, 384, 22, 22],"float32"),Tensor([16, 512, 22, 22],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 384, 22, 22],"float32"),Tensor([16, 512, 22, 22],"float16"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:40.189994 GPU 7 93160 test begin: paddle.concat(list[Tensor([16, 384, 23, 23],"float16"),Tensor([16, 384, 23, 23],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 384, 23, 23],"float16"),Tensor([16, 384, 23, 23],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:40.233239 GPU 6 93159 test begin: paddle.concat(list[Tensor([16, 384, 24, 24],"float16"),Tensor([16, 384, 24, 24],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 384, 24, 24],"float16"),Tensor([16, 384, 24, 24],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:40.234092 GPU 6 93162 test begin: paddle.concat(list[Tensor([16, 384, 24, 24],"float32"),Tensor([16, 512, 24, 24],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 384, 24, 24],"float32"),Tensor([16, 512, 24, 24],"float16"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:40.363887 GPU 7 93163 test begin: paddle.concat(list[Tensor([16, 384, 26, 26],"float32"),Tensor([16, 512, 26, 26],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 384, 26, 26],"float32"),Tensor([16, 512, 26, 26],"float16"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:40.453993 GPU 6 93169 test begin: paddle.concat(list[Tensor([16, 384, 28, 28],"float32"),Tensor([16, 512, 28, 28],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 384, 28, 28],"float32"),Tensor([16, 512, 28, 28],"float16"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:40.490696 GPU 7 93170 test begin: paddle.concat(list[Tensor([16, 384, 30, 30],"float32"),Tensor([16, 512, 30, 30],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 384, 30, 30],"float32"),Tensor([16, 512, 30, 30],"float16"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:40.493540 GPU 7 93167 test begin: paddle.concat(list[Tensor([16, 384, 32, 32],"float32"),Tensor([16, 512, 32, 32],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 384, 32, 32],"float32"),Tensor([16, 512, 32, 32],"float16"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:40.585676 GPU 6 93166 test begin: paddle.concat(list[Tensor([16, 384, 34, 34],"float32"),Tensor([16, 512, 34, 34],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 384, 34, 34],"float32"),Tensor([16, 512, 34, 34],"float16"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:40.624484 GPU 7 93160 test begin: paddle.concat(list[Tensor([16, 384, 36, 36],"float32"),Tensor([16, 512, 36, 36],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 384, 36, 36],"float32"),Tensor([16, 512, 36, 36],"float16"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:40.645588 GPU 6 93159 test begin: paddle.concat(list[Tensor([16, 384, 38, 38],"float32"),Tensor([16, 512, 38, 38],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 384, 38, 38],"float32"),Tensor([16, 512, 38, 38],"float16"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:40.744162 GPU 7 93168 test begin: paddle.concat(list[Tensor([16, 384, 40, 40],"float32"),Tensor([16, 512, 40, 40],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 384, 40, 40],"float32"),Tensor([16, 512, 40, 40],"float16"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:40.745952 GPU 6 93162 test begin: paddle.concat(list[Tensor([16, 384, 42, 42],"float32"),Tensor([16, 512, 42, 42],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 384, 42, 42],"float32"),Tensor([16, 512, 42, 42],"float16"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:40.789027 GPU 7 93165 test begin: paddle.concat(list[Tensor([16, 384, 44, 44],"float32"),Tensor([16, 512, 44, 44],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 384, 44, 44],"float32"),Tensor([16, 512, 44, 44],"float16"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:40.840421 GPU 6 93171 test begin: paddle.concat(list[Tensor([16, 384, 46, 46],"float32"),Tensor([16, 512, 46, 46],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 384, 46, 46],"float32"),Tensor([16, 512, 46, 46],"float16"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:40.949880 GPU 7 93163 test begin: paddle.concat(list[Tensor([16, 384, 48, 48],"float32"),Tensor([16, 512, 48, 48],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 384, 48, 48],"float32"),Tensor([16, 512, 48, 48],"float16"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:40.953462 GPU 6 93158 test begin: paddle.concat(list[Tensor([16, 48, 104, 104],"float16"),Tensor([16, 48, 104, 104],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 48, 104, 104],"float16"),Tensor([16, 48, 104, 104],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:41.045119 GPU 6 93169 test begin: paddle.concat(list[Tensor([16, 48, 112, 112],"float16"),Tensor([16, 48, 112, 112],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 48, 112, 112],"float16"),Tensor([16, 48, 112, 112],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:41.146439 GPU 6 93161 test begin: paddle.concat(list[Tensor([16, 48, 120, 120],"float16"),Tensor([16, 48, 120, 120],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 48, 120, 120],"float16"),Tensor([16, 48, 120, 120],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:41.443962 GPU 7 93167 test begin: paddle.concat(list[Tensor([16, 48, 128, 128],"float16"),Tensor([16, 48, 128, 128],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 48, 128, 128],"float16"),Tensor([16, 48, 128, 128],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:41.454546 GPU 7 93170 test begin: paddle.concat(list[Tensor([16, 48, 136, 136],"float16"),Tensor([16, 48, 136, 136],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 48, 136, 136],"float16"),Tensor([16, 48, 136, 136],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:42.025620 GPU 7 93164 test begin: paddle.concat(list[Tensor([16, 48, 144, 144],"float16"),Tensor([16, 48, 144, 144],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 48, 144, 144],"float16"),Tensor([16, 48, 144, 144],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:42.356564 GPU 7 93160 test begin: paddle.concat(list[Tensor([16, 48, 152, 152],"float16"),Tensor([16, 48, 152, 152],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 48, 152, 152],"float16"),Tensor([16, 48, 152, 152],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:42.362234 GPU 6 93166 test begin: paddle.concat(list[Tensor([16, 48, 160, 160],"float16"),Tensor([16, 48, 160, 160],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 48, 160, 160],"float16"),Tensor([16, 48, 160, 160],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:42.372256 GPU 6 93159 test begin: paddle.concat(list[Tensor([16, 48, 168, 168],"float16"),Tensor([16, 48, 168, 168],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 48, 168, 168],"float16"),Tensor([16, 48, 168, 168],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:42.952608 GPU 6 93158 test begin: paddle.concat(list[Tensor([16, 48, 176, 176],"float16"),Tensor([16, 48, 176, 176],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 48, 176, 176],"float16"),Tensor([16, 48, 176, 176],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:42.975788 GPU 7 93168 test begin: paddle.concat(list[Tensor([16, 48, 184, 184],"float16"),Tensor([16, 48, 184, 184],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 48, 184, 184],"float16"),Tensor([16, 48, 184, 184],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:42.982716 GPU 6 93169 test begin: paddle.concat(list[Tensor([16, 48, 192, 192],"float16"),Tensor([16, 48, 192, 192],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 48, 192, 192],"float16"),Tensor([16, 48, 192, 192],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:43.186454 GPU 6 93162 test begin: paddle.concat(list[Tensor([16, 48, 80, 80],"float16"),Tensor([16, 48, 80, 80],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 48, 80, 80],"float16"),Tensor([16, 48, 80, 80],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:43.195051 GPU 6 93161 test begin: paddle.concat(list[Tensor([16, 48, 88, 88],"float16"),Tensor([16, 48, 88, 88],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 48, 88, 88],"float16"),Tensor([16, 48, 88, 88],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:43.268108 GPU 7 93165 test begin: paddle.concat(list[Tensor([16, 48, 96, 96],"float16"),Tensor([16, 48, 96, 96],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 48, 96, 96],"float16"),Tensor([16, 48, 96, 96],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:43.327310 GPU 7 93163 test begin: paddle.concat(list[Tensor([16, 512, 40, 40],"float32"),Tensor([16, 512, 40, 40],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 512, 40, 40],"float32"),Tensor([16, 512, 40, 40],"float16"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:43.358986 GPU 6 93171 test begin: paddle.concat(list[Tensor([16, 64, 160, 160],"float32"),Tensor([16, 64, 160, 160],"float32"),Tensor([16, 64, 160, 160],"float32"),Tensor([16, 64, 160, 160],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 64, 160, 160],"float32"),Tensor([16, 64, 160, 160],"float32"),Tensor([16, 64, 160, 160],"float32"),Tensor([16, 64, 160, 160],"float16"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 3th tensor is float16. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:43.563584 GPU 7 93167 test begin: paddle.concat(list[Tensor([16, 96, 40, 40],"float16"),Tensor([16, 96, 40, 40],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 96, 40, 40],"float16"),Tensor([16, 96, 40, 40],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:43.738601 GPU 6 93161 test begin: paddle.concat(list[Tensor([16, 96, 44, 44],"float16"),Tensor([16, 96, 44, 44],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 96, 44, 44],"float16"),Tensor([16, 96, 44, 44],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:43.745332 GPU 6 93162 test begin: paddle.concat(list[Tensor([16, 96, 48, 48],"float16"),Tensor([16, 96, 48, 48],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 96, 48, 48],"float16"),Tensor([16, 96, 48, 48],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:43.802123 GPU 7 93170 test begin: paddle.concat(list[Tensor([16, 96, 52, 52],"float16"),Tensor([16, 96, 52, 52],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 96, 52, 52],"float16"),Tensor([16, 96, 52, 52],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:43.802836 GPU 7 93164 test begin: paddle.concat(list[Tensor([16, 96, 56, 56],"float16"),Tensor([16, 96, 56, 56],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 96, 56, 56],"float16"),Tensor([16, 96, 56, 56],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:43.902077 GPU 7 93167 test begin: paddle.concat(list[Tensor([16, 96, 60, 60],"float16"),Tensor([16, 96, 60, 60],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 96, 60, 60],"float16"),Tensor([16, 96, 60, 60],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:43.941803 GPU 7 93165 test begin: paddle.concat(list[Tensor([16, 96, 64, 64],"float16"),Tensor([16, 96, 64, 64],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 96, 64, 64],"float16"),Tensor([16, 96, 64, 64],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:44.090910 GPU 7 93160 test begin: paddle.concat(list[Tensor([16, 96, 68, 68],"float16"),Tensor([16, 96, 68, 68],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 96, 68, 68],"float16"),Tensor([16, 96, 68, 68],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:44.167300 GPU 6 93166 test begin: paddle.concat(list[Tensor([16, 96, 72, 72],"float16"),Tensor([16, 96, 72, 72],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 96, 72, 72],"float16"),Tensor([16, 96, 72, 72],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:44.307176 GPU 6 93161 test begin: paddle.concat(list[Tensor([16, 96, 76, 76],"float16"),Tensor([16, 96, 76, 76],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 96, 76, 76],"float16"),Tensor([16, 96, 76, 76],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:44.349404 GPU 6 93162 test begin: paddle.concat(list[Tensor([16, 96, 80, 80],"float16"),Tensor([16, 96, 80, 80],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 96, 80, 80],"float16"),Tensor([16, 96, 80, 80],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:44.674871 GPU 6 93159 test begin: paddle.concat(list[Tensor([16, 96, 84, 84],"float16"),Tensor([16, 96, 84, 84],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 96, 84, 84],"float16"),Tensor([16, 96, 84, 84],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:44.969243 GPU 7 93170 test begin: paddle.concat(list[Tensor([16, 96, 88, 88],"float16"),Tensor([16, 96, 88, 88],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 96, 88, 88],"float16"),Tensor([16, 96, 88, 88],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:45.231180 GPU 7 93164 test begin: paddle.concat(list[Tensor([16, 96, 92, 92],"float16"),Tensor([16, 96, 92, 92],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 96, 92, 92],"float16"),Tensor([16, 96, 92, 92],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:45.275773 GPU 7 93163 test begin: paddle.concat(list[Tensor([16, 96, 96, 96],"float16"),Tensor([16, 96, 96, 96],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 96, 96, 96],"float16"),Tensor([16, 96, 96, 96],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:45.818805 GPU 7 93167 test begin: paddle.concat(list[Tensor([2, 256, 128, 128],"float32"),Tensor([2, 48, 128, 128],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([2, 256, 128, 128],"float32"),Tensor([2, 48, 128, 128],"float16"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:45.885752 GPU 6 93158 test begin: paddle.concat(list[Tensor([2, 256, 64, 64],"float16"),Tensor([2, 256, 64, 64],"float16"),Tensor([2, 256, 64, 64],"float16"),Tensor([2, 256, 64, 64],"float16"),Tensor([2, 256, 64, 64],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([2, 256, 64, 64],"float16"),Tensor([2, 256, 64, 64],"float16"),Tensor([2, 256, 64, 64],"float16"),Tensor([2, 256, 64, 64],"float16"),Tensor([2, 256, 64, 64],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 4th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:45.941338 GPU 7 93165 test begin: paddle.concat(list[Tensor([3, 1, 512, 512],"float32"),Tensor([3, 1, 512, 512],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([3, 1, 512, 512],"float32"),Tensor([3, 1, 512, 512],"float16"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:45.942848 GPU 6 93169 test begin: paddle.concat(list[Tensor([4, 1, 640, 640],"float16"),Tensor([4, 64, 640, 640],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 1, 640, 640],"float16"),Tensor([4, 64, 640, 640],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:45.965170 GPU 7 93160 test begin: paddle.concat(list[Tensor([4, 128, 248, 216],"float16"),Tensor([4, 128, 248, 216],"float16"),Tensor([4, 128, 248, 216],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 128, 248, 216],"float16"),Tensor([4, 128, 248, 216],"float16"),Tensor([4, 128, 248, 216],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 2th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:46.073807 GPU 6 93166 test begin: paddle.concat(list[Tensor([4, 128, 256, 256],"float16"),Tensor([4, 128, 256, 256],"float32"),Tensor([4, 128, 256, 256],"float32"),Tensor([4, 128, 256, 256],"float32"),], 1, )
[paddle error] paddle.concat(list[Tensor([4, 128, 256, 256],"float16"),Tensor([4, 128, 256, 256],"float32"),Tensor([4, 128, 256, 256],"float32"),Tensor([4, 128, 256, 256],"float32"),], 1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:46.077921 GPU 6 93161 test begin: paddle.concat(list[Tensor([4, 128, 32, 32],"float16"),Tensor([4, 32, 32, 32],"float32"),Tensor([4, 32, 32, 32],"float32"),Tensor([4, 32, 32, 32],"float32"),Tensor([4, 32, 32, 32],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 128, 32, 32],"float16"),Tensor([4, 32, 32, 32],"float32"),Tensor([4, 32, 32, 32],"float32"),Tensor([4, 32, 32, 32],"float32"),Tensor([4, 32, 32, 32],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:46.137800 GPU 7 93168 test begin: paddle.concat(list[Tensor([4, 256, 100, 136],"float16"),Tensor([4, 2, 100, 136],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 100, 136],"float16"),Tensor([4, 2, 100, 136],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:46.257800 GPU 7 93165 test begin: paddle.concat(list[Tensor([4, 256, 100, 140],"float16"),Tensor([4, 2, 100, 140],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 100, 140],"float16"),Tensor([4, 2, 100, 140],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:46.335862 GPU 6 93161 test begin: paddle.concat(list[Tensor([4, 256, 100, 144],"float16"),Tensor([4, 2, 100, 144],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 100, 144],"float16"),Tensor([4, 2, 100, 144],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:46.374990 GPU 6 93162 test begin: paddle.concat(list[Tensor([4, 256, 100, 148],"float16"),Tensor([4, 2, 100, 148],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 100, 148],"float16"),Tensor([4, 2, 100, 148],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:46.404319 GPU 6 93159 test begin: paddle.concat(list[Tensor([4, 256, 100, 152],"float16"),Tensor([4, 2, 100, 152],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 100, 152],"float16"),Tensor([4, 2, 100, 152],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:46.409699 GPU 7 93167 test begin: paddle.concat(list[Tensor([4, 256, 100, 156],"float16"),Tensor([4, 2, 100, 156],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 100, 156],"float16"),Tensor([4, 2, 100, 156],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:46.453266 GPU 7 93170 test begin: paddle.concat(list[Tensor([4, 256, 100, 160],"float16"),Tensor([4, 2, 100, 160],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 100, 160],"float16"),Tensor([4, 2, 100, 160],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:46.531041 GPU 6 93158 test begin: paddle.concat(list[Tensor([4, 256, 100, 164],"float16"),Tensor([4, 2, 100, 164],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 100, 164],"float16"),Tensor([4, 2, 100, 164],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:46.789736 GPU 7 93164 test begin: paddle.concat(list[Tensor([4, 256, 100, 168],"float16"),Tensor([4, 2, 100, 168],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 100, 168],"float16"),Tensor([4, 2, 100, 168],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:46.794607 GPU 7 93163 test begin: paddle.concat(list[Tensor([4, 256, 104, 136],"float16"),Tensor([4, 2, 104, 136],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 104, 136],"float16"),Tensor([4, 2, 104, 136],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:46.906645 GPU 7 93168 test begin: paddle.concat(list[Tensor([4, 256, 104, 152],"float16"),Tensor([4, 2, 104, 152],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 104, 152],"float16"),Tensor([4, 2, 104, 152],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:47.030387 GPU 7 93165 test begin: paddle.concat(list[Tensor([4, 256, 104, 164],"float16"),Tensor([4, 2, 104, 164],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 104, 164],"float16"),Tensor([4, 2, 104, 164],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:47.092880 GPU 6 93161 test begin: paddle.concat(list[Tensor([4, 256, 104, 168],"float16"),Tensor([4, 2, 104, 168],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 104, 168],"float16"),Tensor([4, 2, 104, 168],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:47.212781 GPU 7 93167 test begin: paddle.concat(list[Tensor([4, 256, 108, 148],"float16"),Tensor([4, 2, 108, 148],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 108, 148],"float16"),Tensor([4, 2, 108, 148],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:47.479882 GPU 6 93158 test begin: paddle.concat(list[Tensor([4, 256, 108, 152],"float16"),Tensor([4, 2, 108, 152],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 108, 152],"float16"),Tensor([4, 2, 108, 152],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:47.487637 GPU 6 93159 test begin: paddle.concat(list[Tensor([4, 256, 108, 156],"float16"),Tensor([4, 2, 108, 156],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 108, 156],"float16"),Tensor([4, 2, 108, 156],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:47.493185 GPU 7 93170 test begin: paddle.concat(list[Tensor([4, 256, 112, 152],"float16"),Tensor([4, 2, 112, 152],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 112, 152],"float16"),Tensor([4, 2, 112, 152],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:47.589489 GPU 6 93162 test begin: paddle.concat(list[Tensor([4, 256, 116, 152],"float16"),Tensor([4, 2, 116, 152],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 116, 152],"float16"),Tensor([4, 2, 116, 152],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:48.054271 GPU 7 93163 test begin: paddle.concat(list[Tensor([4, 256, 116, 160],"float16"),Tensor([4, 2, 116, 160],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 116, 160],"float16"),Tensor([4, 2, 116, 160],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:48.473676 GPU 6 93161 test begin: paddle.concat(list[Tensor([4, 256, 120, 152],"float16"),Tensor([4, 2, 120, 152],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 120, 152],"float16"),Tensor([4, 2, 120, 152],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:48.689734 GPU 7 93168 test begin: paddle.concat(list[Tensor([4, 256, 124, 136],"float16"),Tensor([4, 2, 124, 136],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 124, 136],"float16"),Tensor([4, 2, 124, 136],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:48.869756 GPU 6 93171 test begin: paddle.concat(list[Tensor([4, 256, 124, 152],"float16"),Tensor([4, 2, 124, 152],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 124, 152],"float16"),Tensor([4, 2, 124, 152],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:48.955857 GPU 7 93165 test begin: paddle.concat(list[Tensor([4, 256, 124, 168],"float16"),Tensor([4, 2, 124, 168],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 124, 168],"float16"),Tensor([4, 2, 124, 168],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:49.133832 GPU 7 93164 test begin: paddle.concat(list[Tensor([4, 256, 128, 128],"float32"),Tensor([4, 48, 128, 128],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 128, 128],"float32"),Tensor([4, 48, 128, 128],"float16"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:49.299305 GPU 7 93167 test begin: paddle.concat(list[Tensor([4, 256, 128, 136],"float16"),Tensor([4, 2, 128, 136],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 128, 136],"float16"),Tensor([4, 2, 128, 136],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:49.339158 GPU 7 93170 test begin: paddle.concat(list[Tensor([4, 256, 128, 152],"float16"),Tensor([4, 2, 128, 152],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 128, 152],"float16"),Tensor([4, 2, 128, 152],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:49.546619 GPU 6 93162 test begin: paddle.concat(list[Tensor([4, 256, 128, 168],"float16"),Tensor([4, 2, 128, 168],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 128, 168],"float16"),Tensor([4, 2, 128, 168],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:49.567861 GPU 6 93159 test begin: paddle.concat(list[Tensor([4, 256, 128, 256],"float32"),Tensor([4, 48, 128, 256],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 128, 256],"float32"),Tensor([4, 48, 128, 256],"float16"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:49.593326 GPU 6 93158 test begin: paddle.concat(list[Tensor([4, 256, 132, 144],"float16"),Tensor([4, 2, 132, 144],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 132, 144],"float16"),Tensor([4, 2, 132, 144],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:49.640545 GPU 7 93163 test begin: paddle.concat(list[Tensor([4, 256, 132, 148],"float16"),Tensor([4, 2, 132, 148],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 132, 148],"float16"),Tensor([4, 2, 132, 148],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:49.794096 GPU 7 93168 test begin: paddle.concat(list[Tensor([4, 256, 132, 152],"float16"),Tensor([4, 2, 132, 152],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 132, 152],"float16"),Tensor([4, 2, 132, 152],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:49.894976 GPU 7 93160 test begin: paddle.concat(list[Tensor([4, 256, 132, 160],"float16"),Tensor([4, 2, 132, 160],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 132, 160],"float16"),Tensor([4, 2, 132, 160],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:49.947666 GPU 6 93161 test begin: paddle.concat(list[Tensor([4, 256, 132, 168],"float16"),Tensor([4, 2, 132, 168],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 132, 168],"float16"),Tensor([4, 2, 132, 168],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:50.195033 GPU 6 93171 test begin: paddle.concat(list[Tensor([4, 256, 136, 100],"float16"),Tensor([4, 2, 136, 100],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 136, 100],"float16"),Tensor([4, 2, 136, 100],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:50.255105 GPU 7 93167 test begin: paddle.concat(list[Tensor([4, 256, 136, 108],"float16"),Tensor([4, 2, 136, 108],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 136, 108],"float16"),Tensor([4, 2, 136, 108],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:50.336658 GPU 7 93165 test begin: paddle.concat(list[Tensor([4, 256, 136, 136],"float16"),Tensor([4, 2, 136, 136],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 136, 136],"float16"),Tensor([4, 2, 136, 136],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:50.366898 GPU 7 93164 test begin: paddle.concat(list[Tensor([4, 256, 136, 140],"float16"),Tensor([4, 2, 136, 140],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 136, 140],"float16"),Tensor([4, 2, 136, 140],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:50.583816 GPU 6 93158 test begin: paddle.concat(list[Tensor([4, 256, 136, 148],"float16"),Tensor([4, 2, 136, 148],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 136, 148],"float16"),Tensor([4, 2, 136, 148],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:50.584607 GPU 7 93170 test begin: paddle.concat(list[Tensor([4, 256, 136, 152],"float16"),Tensor([4, 2, 136, 152],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 136, 152],"float16"),Tensor([4, 2, 136, 152],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:50.743439 GPU 7 93163 test begin: paddle.concat(list[Tensor([4, 256, 136, 156],"float16"),Tensor([4, 2, 136, 156],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 136, 156],"float16"),Tensor([4, 2, 136, 156],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:50.789690 GPU 6 93162 test begin: paddle.concat(list[Tensor([4, 256, 136, 160],"float16"),Tensor([4, 2, 136, 160],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 136, 160],"float16"),Tensor([4, 2, 136, 160],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:50.827761 GPU 6 93169 test begin: paddle.concat(list[Tensor([4, 256, 136, 164],"float16"),Tensor([4, 2, 136, 164],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 136, 164],"float16"),Tensor([4, 2, 136, 164],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:50.865535 GPU 7 93168 test begin: paddle.concat(list[Tensor([4, 256, 136, 168],"float16"),Tensor([4, 2, 136, 168],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 136, 168],"float16"),Tensor([4, 2, 136, 168],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:51.031947 GPU 7 93167 test begin: paddle.concat(list[Tensor([4, 256, 140, 136],"float16"),Tensor([4, 2, 140, 136],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 140, 136],"float16"),Tensor([4, 2, 140, 136],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:51.088955 GPU 6 93171 test begin: paddle.concat(list[Tensor([4, 256, 140, 140],"float16"),Tensor([4, 2, 140, 140],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 140, 140],"float16"),Tensor([4, 2, 140, 140],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:51.124440 GPU 7 93160 test begin: paddle.concat(list[Tensor([4, 256, 140, 152],"float16"),Tensor([4, 2, 140, 152],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 140, 152],"float16"),Tensor([4, 2, 140, 152],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:51.363750 GPU 6 93161 test begin: paddle.concat(list[Tensor([4, 256, 140, 156],"float16"),Tensor([4, 2, 140, 156],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 140, 156],"float16"),Tensor([4, 2, 140, 156],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:51.495149 GPU 7 93164 test begin: paddle.concat(list[Tensor([4, 256, 140, 164],"float16"),Tensor([4, 2, 140, 164],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 140, 164],"float16"),Tensor([4, 2, 140, 164],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:51.513666 GPU 7 93165 test begin: paddle.concat(list[Tensor([4, 256, 140, 168],"float16"),Tensor([4, 2, 140, 168],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 140, 168],"float16"),Tensor([4, 2, 140, 168],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:51.526938 GPU 6 93159 test begin: paddle.concat(list[Tensor([4, 256, 144, 136],"float16"),Tensor([4, 2, 144, 136],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 144, 136],"float16"),Tensor([4, 2, 144, 136],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:51.878334 GPU 6 93158 test begin: paddle.concat(list[Tensor([4, 256, 144, 152],"float16"),Tensor([4, 2, 144, 152],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 144, 152],"float16"),Tensor([4, 2, 144, 152],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:51.891892 GPU 7 93163 test begin: paddle.concat(list[Tensor([4, 256, 144, 168],"float16"),Tensor([4, 2, 144, 168],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 144, 168],"float16"),Tensor([4, 2, 144, 168],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:51.895594 GPU 7 93170 test begin: paddle.concat(list[Tensor([4, 256, 148, 136],"float16"),Tensor([4, 2, 148, 136],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 148, 136],"float16"),Tensor([4, 2, 148, 136],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:51.968829 GPU 6 93169 test begin: paddle.concat(list[Tensor([4, 256, 148, 152],"float16"),Tensor([4, 2, 148, 152],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 148, 152],"float16"),Tensor([4, 2, 148, 152],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:52.176331 GPU 6 93162 test begin: paddle.concat(list[Tensor([4, 256, 148, 164],"float16"),Tensor([4, 2, 148, 164],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 148, 164],"float16"),Tensor([4, 2, 148, 164],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:52.188111 GPU 7 93167 test begin: paddle.concat(list[Tensor([4, 256, 148, 168],"float16"),Tensor([4, 2, 148, 168],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 148, 168],"float16"),Tensor([4, 2, 148, 168],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:52.297253 GPU 7 93168 test begin: paddle.concat(list[Tensor([4, 256, 152, 100],"float16"),Tensor([4, 2, 152, 100],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 152, 100],"float16"),Tensor([4, 2, 152, 100],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:52.378381 GPU 7 93160 test begin: paddle.concat(list[Tensor([4, 256, 152, 108],"float16"),Tensor([4, 2, 152, 108],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 152, 108],"float16"),Tensor([4, 2, 152, 108],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:52.410338 GPU 6 93171 test begin: paddle.concat(list[Tensor([4, 256, 152, 132],"float16"),Tensor([4, 2, 152, 132],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 152, 132],"float16"),Tensor([4, 2, 152, 132],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:52.559819 GPU 6 93161 test begin: paddle.concat(list[Tensor([4, 256, 152, 136],"float16"),Tensor([4, 2, 152, 136],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 152, 136],"float16"),Tensor([4, 2, 152, 136],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:52.849680 GPU 6 93166 test begin: paddle.concat(list[Tensor([4, 256, 152, 140],"float16"),Tensor([4, 2, 152, 140],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 152, 140],"float16"),Tensor([4, 2, 152, 140],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:52.932897 GPU 7 93165 test begin: paddle.concat(list[Tensor([4, 256, 152, 144],"float16"),Tensor([4, 2, 152, 144],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 152, 144],"float16"),Tensor([4, 2, 152, 144],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:52.937168 GPU 6 93159 test begin: paddle.concat(list[Tensor([4, 256, 152, 148],"float16"),Tensor([4, 2, 152, 148],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 152, 148],"float16"),Tensor([4, 2, 152, 148],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:53.023683 GPU 7 93164 test begin: paddle.concat(list[Tensor([4, 256, 152, 152],"float16"),Tensor([4, 2, 152, 152],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 152, 152],"float16"),Tensor([4, 2, 152, 152],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:53.579590 GPU 6 93158 test begin: paddle.concat(list[Tensor([4, 256, 152, 156],"float16"),Tensor([4, 2, 152, 156],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 152, 156],"float16"),Tensor([4, 2, 152, 156],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:53.593590 GPU 7 93170 test begin: paddle.concat(list[Tensor([4, 256, 152, 160],"float16"),Tensor([4, 2, 152, 160],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 152, 160],"float16"),Tensor([4, 2, 152, 160],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:53.709102 GPU 6 93169 test begin: paddle.concat(list[Tensor([4, 256, 152, 164],"float16"),Tensor([4, 2, 152, 164],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 152, 164],"float16"),Tensor([4, 2, 152, 164],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:53.909661 GPU 7 93163 test begin: paddle.concat(list[Tensor([4, 256, 152, 168],"float16"),Tensor([4, 2, 152, 168],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 152, 168],"float16"),Tensor([4, 2, 152, 168],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:54.033479 GPU 7 93168 test begin: paddle.concat(list[Tensor([4, 256, 156, 136],"float16"),Tensor([4, 2, 156, 136],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 156, 136],"float16"),Tensor([4, 2, 156, 136],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:54.215948 GPU 7 93160 test begin: paddle.concat(list[Tensor([4, 256, 156, 148],"float16"),Tensor([4, 2, 156, 148],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 156, 148],"float16"),Tensor([4, 2, 156, 148],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:54.325276 GPU 7 93167 test begin: paddle.concat(list[Tensor([4, 256, 156, 152],"float16"),Tensor([4, 2, 156, 152],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 156, 152],"float16"),Tensor([4, 2, 156, 152],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:54.348427 GPU 6 93162 test begin: paddle.concat(list[Tensor([4, 256, 156, 168],"float16"),Tensor([4, 2, 156, 168],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 156, 168],"float16"),Tensor([4, 2, 156, 168],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:54.447442 GPU 6 93161 test begin: paddle.concat(list[Tensor([4, 256, 160, 136],"float16"),Tensor([4, 2, 160, 136],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 160, 136],"float16"),Tensor([4, 2, 160, 136],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:54.507736 GPU 6 93159 test begin: paddle.concat(list[Tensor([4, 256, 160, 152],"float16"),Tensor([4, 2, 160, 152],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 160, 152],"float16"),Tensor([4, 2, 160, 152],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:54.555629 GPU 6 93166 test begin: paddle.concat(list[Tensor([4, 256, 160, 160],"float16"),Tensor([4, 2, 160, 160],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 160, 160],"float16"),Tensor([4, 2, 160, 160],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:54.565240 GPU 6 93171 test begin: paddle.concat(list[Tensor([4, 256, 164, 100],"float16"),Tensor([4, 2, 164, 100],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 164, 100],"float16"),Tensor([4, 2, 164, 100],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:54.659058 GPU 7 93164 test begin: paddle.concat(list[Tensor([4, 256, 164, 136],"float16"),Tensor([4, 2, 164, 136],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 164, 136],"float16"),Tensor([4, 2, 164, 136],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:54.783628 GPU 6 93158 test begin: paddle.concat(list[Tensor([4, 256, 164, 148],"float16"),Tensor([4, 2, 164, 148],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 164, 148],"float16"),Tensor([4, 2, 164, 148],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:55.010794 GPU 7 93165 test begin: paddle.concat(list[Tensor([4, 256, 164, 152],"float16"),Tensor([4, 2, 164, 152],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 164, 152],"float16"),Tensor([4, 2, 164, 152],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:55.023320 GPU 6 93169 test begin: paddle.concat(list[Tensor([4, 256, 168, 100],"float16"),Tensor([4, 2, 168, 100],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 168, 100],"float16"),Tensor([4, 2, 168, 100],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:55.143995 GPU 7 93168 test begin: paddle.concat(list[Tensor([4, 256, 168, 136],"float16"),Tensor([4, 2, 168, 136],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 168, 136],"float16"),Tensor([4, 2, 168, 136],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:55.244307 GPU 7 93163 test begin: paddle.concat(list[Tensor([4, 256, 168, 140],"float16"),Tensor([4, 2, 168, 140],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 168, 140],"float16"),Tensor([4, 2, 168, 140],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:55.312819 GPU 7 93170 test begin: paddle.concat(list[Tensor([4, 256, 168, 152],"float16"),Tensor([4, 2, 168, 152],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 168, 152],"float16"),Tensor([4, 2, 168, 152],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:55.481718 GPU 7 93160 test begin: paddle.concat(list[Tensor([4, 256, 168, 156],"float16"),Tensor([4, 2, 168, 156],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 168, 156],"float16"),Tensor([4, 2, 168, 156],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:55.655758 GPU 6 93161 test begin: paddle.concat(list[Tensor([4, 256, 168, 160],"float16"),Tensor([4, 2, 168, 160],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 168, 160],"float16"),Tensor([4, 2, 168, 160],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:55.687038 GPU 7 93167 test begin: paddle.concat(list[Tensor([4, 256, 168, 168],"float16"),Tensor([4, 2, 168, 168],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 168, 168],"float16"),Tensor([4, 2, 168, 168],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:55.933349 GPU 6 93162 test begin: paddle.concat(list[Tensor([4, 256, 25, 34],"float16"),Tensor([4, 2, 25, 34],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 25, 34],"float16"),Tensor([4, 2, 25, 34],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:56.305460 GPU 6 93171 test begin: paddle.concat(list[Tensor([4, 256, 25, 35],"float16"),Tensor([4, 2, 25, 35],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 25, 35],"float16"),Tensor([4, 2, 25, 35],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:56.453439 GPU 7 93164 test begin: paddle.concat(list[Tensor([4, 256, 25, 36],"float16"),Tensor([4, 2, 25, 36],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 25, 36],"float16"),Tensor([4, 2, 25, 36],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:56.460448 GPU 6 93158 test begin: paddle.concat(list[Tensor([4, 256, 25, 37],"float16"),Tensor([4, 2, 25, 37],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 25, 37],"float16"),Tensor([4, 2, 25, 37],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:56.487955 GPU 6 93159 test begin: paddle.concat(list[Tensor([4, 256, 25, 38],"float16"),Tensor([4, 2, 25, 38],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 25, 38],"float16"),Tensor([4, 2, 25, 38],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:56.515053 GPU 6 93166 test begin: paddle.concat(list[Tensor([4, 256, 25, 39],"float16"),Tensor([4, 2, 25, 39],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 25, 39],"float16"),Tensor([4, 2, 25, 39],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:56.988294 GPU 6 93162 test begin: paddle.concat(list[Tensor([4, 256, 25, 40],"float16"),Tensor([4, 2, 25, 40],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 25, 40],"float16"),Tensor([4, 2, 25, 40],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:56.990216 GPU 6 93169 test begin: paddle.concat(list[Tensor([4, 256, 25, 41],"float16"),Tensor([4, 2, 25, 41],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 25, 41],"float16"),Tensor([4, 2, 25, 41],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:56.999719 GPU 7 93168 test begin: paddle.concat(list[Tensor([4, 256, 25, 42],"float16"),Tensor([4, 2, 25, 42],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 25, 42],"float16"),Tensor([4, 2, 25, 42],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:57.036466 GPU 7 93165 test begin: paddle.concat(list[Tensor([4, 256, 256, 256],"float32"),Tensor([4, 256, 256, 256],"float32"),Tensor([4, 256, 256, 256],"float32"),Tensor([4, 256, 256, 256],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 256, 256],"float32"),Tensor([4, 256, 256, 256],"float32"),Tensor([4, 256, 256, 256],"float32"),Tensor([4, 256, 256, 256],"float16"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 3th tensor is float16. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:57.071005 GPU 6 93171 test begin: paddle.concat(list[Tensor([4, 256, 26, 34],"float16"),Tensor([4, 2, 26, 34],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 26, 34],"float16"),Tensor([4, 2, 26, 34],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:57.080533 GPU 6 93158 test begin: paddle.concat(list[Tensor([4, 256, 26, 38],"float16"),Tensor([4, 2, 26, 38],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 26, 38],"float16"),Tensor([4, 2, 26, 38],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:57.084041 GPU 6 93166 test begin: paddle.concat(list[Tensor([4, 256, 26, 41],"float16"),Tensor([4, 2, 26, 41],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 26, 41],"float16"),Tensor([4, 2, 26, 41],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:57.087157 GPU 7 93164 test begin: paddle.concat(list[Tensor([4, 256, 26, 42],"float16"),Tensor([4, 2, 26, 42],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 26, 42],"float16"),Tensor([4, 2, 26, 42],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:57.129205 GPU 6 93159 test begin: paddle.concat(list[Tensor([4, 256, 27, 37],"float16"),Tensor([4, 2, 27, 37],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 27, 37],"float16"),Tensor([4, 2, 27, 37],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:57.252408 GPU 7 93168 test begin: paddle.concat(list[Tensor([4, 256, 27, 38],"float16"),Tensor([4, 2, 27, 38],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 27, 38],"float16"),Tensor([4, 2, 27, 38],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:57.266954 GPU 7 93163 test begin: paddle.concat(list[Tensor([4, 256, 27, 39],"float16"),Tensor([4, 2, 27, 39],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 27, 39],"float16"),Tensor([4, 2, 27, 39],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:57.290229 GPU 7 93170 test begin: paddle.concat(list[Tensor([4, 256, 28, 38],"float16"),Tensor([4, 2, 28, 38],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 28, 38],"float16"),Tensor([4, 2, 28, 38],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:57.303889 GPU 7 93160 test begin: paddle.concat(list[Tensor([4, 256, 29, 38],"float16"),Tensor([4, 2, 29, 38],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 29, 38],"float16"),Tensor([4, 2, 29, 38],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:57.331502 GPU 6 93171 test begin: paddle.concat(list[Tensor([4, 256, 29, 40],"float16"),Tensor([4, 2, 29, 40],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 29, 40],"float16"),Tensor([4, 2, 29, 40],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:57.356098 GPU 7 93164 test begin: paddle.concat(list[Tensor([4, 256, 30, 38],"float16"),Tensor([4, 2, 30, 38],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 30, 38],"float16"),Tensor([4, 2, 30, 38],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:57.386969 GPU 6 93166 test begin: paddle.concat(list[Tensor([4, 256, 31, 34],"float16"),Tensor([4, 2, 31, 34],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 31, 34],"float16"),Tensor([4, 2, 31, 34],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:57.391154 GPU 6 93159 test begin: paddle.concat(list[Tensor([4, 256, 31, 38],"float16"),Tensor([4, 2, 31, 38],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 31, 38],"float16"),Tensor([4, 2, 31, 38],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:57.410567 GPU 6 93161 test begin: paddle.concat(list[Tensor([4, 256, 31, 42],"float16"),Tensor([4, 2, 31, 42],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 31, 42],"float16"),Tensor([4, 2, 31, 42],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:57.434549 GPU 6 93169 test begin: paddle.concat(list[Tensor([4, 256, 32, 34],"float16"),Tensor([4, 2, 32, 34],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 32, 34],"float16"),Tensor([4, 2, 32, 34],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:57.487085 GPU 6 93158 test begin: paddle.concat(list[Tensor([4, 256, 32, 38],"float16"),Tensor([4, 2, 32, 38],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 32, 38],"float16"),Tensor([4, 2, 32, 38],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:57.513585 GPU 7 93168 test begin: paddle.concat(list[Tensor([4, 256, 32, 42],"float16"),Tensor([4, 2, 32, 42],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 32, 42],"float16"),Tensor([4, 2, 32, 42],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:57.549152 GPU 7 93163 test begin: paddle.concat(list[Tensor([4, 256, 33, 36],"float16"),Tensor([4, 2, 33, 36],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 33, 36],"float16"),Tensor([4, 2, 33, 36],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:57.555551 GPU 7 93160 test begin: paddle.concat(list[Tensor([4, 256, 33, 37],"float16"),Tensor([4, 2, 33, 37],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 33, 37],"float16"),Tensor([4, 2, 33, 37],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:57.570487 GPU 7 93170 test begin: paddle.concat(list[Tensor([4, 256, 33, 38],"float16"),Tensor([4, 2, 33, 38],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 33, 38],"float16"),Tensor([4, 2, 33, 38],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:57.576641 GPU 6 93162 test begin: paddle.concat(list[Tensor([4, 256, 33, 40],"float16"),Tensor([4, 2, 33, 40],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 33, 40],"float16"),Tensor([4, 2, 33, 40],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:57.605674 GPU 7 93164 test begin: paddle.concat(list[Tensor([4, 256, 33, 42],"float16"),Tensor([4, 2, 33, 42],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 33, 42],"float16"),Tensor([4, 2, 33, 42],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:57.606518 GPU 6 93171 test begin: paddle.concat(list[Tensor([4, 256, 34, 25],"float16"),Tensor([4, 2, 34, 25],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 34, 25],"float16"),Tensor([4, 2, 34, 25],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:57.651265 GPU 6 93166 test begin: paddle.concat(list[Tensor([4, 256, 34, 27],"float16"),Tensor([4, 2, 34, 27],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 34, 27],"float16"),Tensor([4, 2, 34, 27],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:57.671324 GPU 6 93159 test begin: paddle.concat(list[Tensor([4, 256, 34, 34],"float16"),Tensor([4, 2, 34, 34],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 34, 34],"float16"),Tensor([4, 2, 34, 34],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:57.687073 GPU 6 93161 test begin: paddle.concat(list[Tensor([4, 256, 34, 35],"float16"),Tensor([4, 2, 34, 35],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 34, 35],"float16"),Tensor([4, 2, 34, 35],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:57.688540 GPU 6 93169 test begin: paddle.concat(list[Tensor([4, 256, 34, 37],"float16"),Tensor([4, 2, 34, 37],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 34, 37],"float16"),Tensor([4, 2, 34, 37],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:57.693728 GPU 7 93167 test begin: paddle.concat(list[Tensor([4, 256, 34, 38],"float16"),Tensor([4, 2, 34, 38],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 34, 38],"float16"),Tensor([4, 2, 34, 38],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:57.800131 GPU 7 93168 test begin: paddle.concat(list[Tensor([4, 256, 34, 39],"float16"),Tensor([4, 2, 34, 39],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 34, 39],"float16"),Tensor([4, 2, 34, 39],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:57.816504 GPU 7 93163 test begin: paddle.concat(list[Tensor([4, 256, 34, 40],"float16"),Tensor([4, 2, 34, 40],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 34, 40],"float16"),Tensor([4, 2, 34, 40],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:57.817045 GPU 6 93158 test begin: paddle.concat(list[Tensor([4, 256, 34, 41],"float16"),Tensor([4, 2, 34, 41],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 34, 41],"float16"),Tensor([4, 2, 34, 41],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:57.829116 GPU 7 93160 test begin: paddle.concat(list[Tensor([4, 256, 34, 42],"float16"),Tensor([4, 2, 34, 42],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 34, 42],"float16"),Tensor([4, 2, 34, 42],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:57.838056 GPU 7 93170 test begin: paddle.concat(list[Tensor([4, 256, 35, 34],"float16"),Tensor([4, 2, 35, 34],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 35, 34],"float16"),Tensor([4, 2, 35, 34],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:57.863828 GPU 7 93164 test begin: paddle.concat(list[Tensor([4, 256, 35, 35],"float16"),Tensor([4, 2, 35, 35],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 35, 35],"float16"),Tensor([4, 2, 35, 35],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:57.882842 GPU 6 93171 test begin: paddle.concat(list[Tensor([4, 256, 35, 38],"float16"),Tensor([4, 2, 35, 38],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 35, 38],"float16"),Tensor([4, 2, 35, 38],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:57.912549 GPU 6 93162 test begin: paddle.concat(list[Tensor([4, 256, 35, 39],"float16"),Tensor([4, 2, 35, 39],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 35, 39],"float16"),Tensor([4, 2, 35, 39],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:57.922061 GPU 6 93166 test begin: paddle.concat(list[Tensor([4, 256, 35, 41],"float16"),Tensor([4, 2, 35, 41],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 35, 41],"float16"),Tensor([4, 2, 35, 41],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:57.933445 GPU 6 93159 test begin: paddle.concat(list[Tensor([4, 256, 35, 42],"float16"),Tensor([4, 2, 35, 42],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 35, 42],"float16"),Tensor([4, 2, 35, 42],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:57.952131 GPU 6 93161 test begin: paddle.concat(list[Tensor([4, 256, 36, 34],"float16"),Tensor([4, 2, 36, 34],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 36, 34],"float16"),Tensor([4, 2, 36, 34],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:57.952792 GPU 6 93169 test begin: paddle.concat(list[Tensor([4, 256, 36, 38],"float16"),Tensor([4, 2, 36, 38],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 36, 38],"float16"),Tensor([4, 2, 36, 38],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:57.971127 GPU 7 93167 test begin: paddle.concat(list[Tensor([4, 256, 36, 42],"float16"),Tensor([4, 2, 36, 42],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 36, 42],"float16"),Tensor([4, 2, 36, 42],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:58.062012 GPU 7 93168 test begin: paddle.concat(list[Tensor([4, 256, 37, 34],"float16"),Tensor([4, 2, 37, 34],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 37, 34],"float16"),Tensor([4, 2, 37, 34],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:58.085500 GPU 7 93163 test begin: paddle.concat(list[Tensor([4, 256, 37, 38],"float16"),Tensor([4, 2, 37, 38],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 37, 38],"float16"),Tensor([4, 2, 37, 38],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:58.087465 GPU 7 93160 test begin: paddle.concat(list[Tensor([4, 256, 37, 41],"float16"),Tensor([4, 2, 37, 41],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 37, 41],"float16"),Tensor([4, 2, 37, 41],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:58.098027 GPU 7 93170 test begin: paddle.concat(list[Tensor([4, 256, 37, 42],"float16"),Tensor([4, 2, 37, 42],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 37, 42],"float16"),Tensor([4, 2, 37, 42],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:58.105021 GPU 6 93158 test begin: paddle.concat(list[Tensor([4, 256, 38, 25],"float16"),Tensor([4, 2, 38, 25],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 38, 25],"float16"),Tensor([4, 2, 38, 25],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:58.113304 GPU 7 93164 test begin: paddle.concat(list[Tensor([4, 256, 38, 27],"float16"),Tensor([4, 2, 38, 27],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 38, 27],"float16"),Tensor([4, 2, 38, 27],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:58.383687 GPU 6 93171 test begin: paddle.concat(list[Tensor([4, 256, 38, 33],"float16"),Tensor([4, 2, 38, 33],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 38, 33],"float16"),Tensor([4, 2, 38, 33],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:58.385090 GPU 6 93166 test begin: paddle.concat(list[Tensor([4, 256, 38, 34],"float16"),Tensor([4, 2, 38, 34],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 38, 34],"float16"),Tensor([4, 2, 38, 34],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:58.385530 GPU 6 93159 test begin: paddle.concat(list[Tensor([4, 256, 38, 35],"float16"),Tensor([4, 2, 38, 35],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 38, 35],"float16"),Tensor([4, 2, 38, 35],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:58.390996 GPU 6 93161 test begin: paddle.concat(list[Tensor([4, 256, 38, 36],"float16"),Tensor([4, 2, 38, 36],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 38, 36],"float16"),Tensor([4, 2, 38, 36],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:58.419810 GPU 6 93162 test begin: paddle.concat(list[Tensor([4, 256, 38, 37],"float16"),Tensor([4, 2, 38, 37],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 38, 37],"float16"),Tensor([4, 2, 38, 37],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:58.632622 GPU 6 93169 test begin: paddle.concat(list[Tensor([4, 256, 38, 38],"float16"),Tensor([4, 2, 38, 38],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 38, 38],"float16"),Tensor([4, 2, 38, 38],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:58.638907 GPU 7 93167 test begin: paddle.concat(list[Tensor([4, 256, 38, 39],"float16"),Tensor([4, 2, 38, 39],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 38, 39],"float16"),Tensor([4, 2, 38, 39],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:59.060459 GPU 7 93164 test begin: paddle.concat(list[Tensor([4, 256, 38, 40],"float16"),Tensor([4, 2, 38, 40],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 38, 40],"float16"),Tensor([4, 2, 38, 40],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:59.060825 GPU 7 93160 test begin: paddle.concat(list[Tensor([4, 256, 38, 41],"float16"),Tensor([4, 2, 38, 41],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 38, 41],"float16"),Tensor([4, 2, 38, 41],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:59.060998 GPU 6 93158 test begin: paddle.concat(list[Tensor([4, 256, 38, 42],"float16"),Tensor([4, 2, 38, 42],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 38, 42],"float16"),Tensor([4, 2, 38, 42],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:59.205834 GPU 7 93168 test begin: paddle.concat(list[Tensor([4, 256, 39, 34],"float16"),Tensor([4, 2, 39, 34],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 39, 34],"float16"),Tensor([4, 2, 39, 34],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:59.269319 GPU 7 93163 test begin: paddle.concat(list[Tensor([4, 256, 39, 37],"float16"),Tensor([4, 2, 39, 37],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 39, 37],"float16"),Tensor([4, 2, 39, 37],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:59.364195 GPU 6 93169 test begin: paddle.concat(list[Tensor([4, 256, 39, 38],"float16"),Tensor([4, 2, 39, 38],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 39, 38],"float16"),Tensor([4, 2, 39, 38],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:59.366084 GPU 7 93170 test begin: paddle.concat(list[Tensor([4, 256, 39, 42],"float16"),Tensor([4, 2, 39, 42],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 39, 42],"float16"),Tensor([4, 2, 39, 42],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:59.368971 GPU 6 93162 test begin: paddle.concat(list[Tensor([4, 256, 40, 34],"float16"),Tensor([4, 2, 40, 34],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 40, 34],"float16"),Tensor([4, 2, 40, 34],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:59.370196 GPU 6 93159 test begin: paddle.concat(list[Tensor([4, 256, 40, 38],"float16"),Tensor([4, 2, 40, 38],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 40, 38],"float16"),Tensor([4, 2, 40, 38],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:59.370934 GPU 6 93171 test begin: paddle.concat(list[Tensor([4, 256, 40, 40],"float16"),Tensor([4, 2, 40, 40],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 40, 40],"float16"),Tensor([4, 2, 40, 40],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:59.371283 GPU 6 93166 test begin: paddle.concat(list[Tensor([4, 256, 41, 25],"float16"),Tensor([4, 2, 41, 25],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 41, 25],"float16"),Tensor([4, 2, 41, 25],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:59.519315 GPU 7 93167 test begin: paddle.concat(list[Tensor([4, 256, 41, 34],"float16"),Tensor([4, 2, 41, 34],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 41, 34],"float16"),Tensor([4, 2, 41, 34],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:59.597908 GPU 6 93161 test begin: paddle.concat(list[Tensor([4, 256, 41, 37],"float16"),Tensor([4, 2, 41, 37],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 41, 37],"float16"),Tensor([4, 2, 41, 37],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:59.696037 GPU 7 93160 test begin: paddle.concat(list[Tensor([4, 256, 41, 38],"float16"),Tensor([4, 2, 41, 38],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 41, 38],"float16"),Tensor([4, 2, 41, 38],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:59.718438 GPU 7 93163 test begin: paddle.concat(list[Tensor([4, 256, 42, 25],"float16"),Tensor([4, 2, 42, 25],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 42, 25],"float16"),Tensor([4, 2, 42, 25],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:59.820890 GPU 7 93164 test begin: paddle.concat(list[Tensor([4, 256, 42, 34],"float16"),Tensor([4, 2, 42, 34],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 42, 34],"float16"),Tensor([4, 2, 42, 34],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:59.824862 GPU 7 93168 test begin: paddle.concat(list[Tensor([4, 256, 42, 35],"float16"),Tensor([4, 2, 42, 35],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 42, 35],"float16"),Tensor([4, 2, 42, 35],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:59.837208 GPU 6 93162 test begin: paddle.concat(list[Tensor([4, 256, 42, 38],"float16"),Tensor([4, 2, 42, 38],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 42, 38],"float16"),Tensor([4, 2, 42, 38],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:59.849409 GPU 6 93166 test begin: paddle.concat(list[Tensor([4, 256, 42, 39],"float16"),Tensor([4, 2, 42, 39],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 42, 39],"float16"),Tensor([4, 2, 42, 39],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:59.860912 GPU 7 93167 test begin: paddle.concat(list[Tensor([4, 256, 42, 40],"float16"),Tensor([4, 2, 42, 40],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 42, 40],"float16"),Tensor([4, 2, 42, 40],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:59.869129 GPU 6 93171 test begin: paddle.concat(list[Tensor([4, 256, 42, 42],"float16"),Tensor([4, 2, 42, 42],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 42, 42],"float16"),Tensor([4, 2, 42, 42],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:59.903856 GPU 7 93170 test begin: paddle.concat(list[Tensor([4, 256, 50, 68],"float16"),Tensor([4, 2, 50, 68],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 50, 68],"float16"),Tensor([4, 2, 50, 68],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:59.934700 GPU 6 93159 test begin: paddle.concat(list[Tensor([4, 256, 50, 70],"float16"),Tensor([4, 2, 50, 70],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 50, 70],"float16"),Tensor([4, 2, 50, 70],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:59.953145 GPU 7 93160 test begin: paddle.concat(list[Tensor([4, 256, 50, 72],"float16"),Tensor([4, 2, 50, 72],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 50, 72],"float16"),Tensor([4, 2, 50, 72],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:59.958873 GPU 6 93169 test begin: paddle.concat(list[Tensor([4, 256, 50, 74],"float16"),Tensor([4, 2, 50, 74],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 50, 74],"float16"),Tensor([4, 2, 50, 74],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:59.980836 GPU 7 93163 test begin: paddle.concat(list[Tensor([4, 256, 50, 76],"float16"),Tensor([4, 2, 50, 76],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 50, 76],"float16"),Tensor([4, 2, 50, 76],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:05:59.985487 GPU 6 93161 test begin: paddle.concat(list[Tensor([4, 256, 50, 78],"float16"),Tensor([4, 2, 50, 78],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 50, 78],"float16"),Tensor([4, 2, 50, 78],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:00.078708 GPU 7 93164 test begin: paddle.concat(list[Tensor([4, 256, 50, 80],"float16"),Tensor([4, 2, 50, 80],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 50, 80],"float16"),Tensor([4, 2, 50, 80],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:00.087391 GPU 7 93168 test begin: paddle.concat(list[Tensor([4, 256, 50, 82],"float16"),Tensor([4, 2, 50, 82],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 50, 82],"float16"),Tensor([4, 2, 50, 82],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:00.101033 GPU 6 93162 test begin: paddle.concat(list[Tensor([4, 256, 50, 84],"float16"),Tensor([4, 2, 50, 84],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 50, 84],"float16"),Tensor([4, 2, 50, 84],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:00.128800 GPU 6 93166 test begin: paddle.concat(list[Tensor([4, 256, 52, 68],"float16"),Tensor([4, 2, 52, 68],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 52, 68],"float16"),Tensor([4, 2, 52, 68],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:00.130901 GPU 7 93167 test begin: paddle.concat(list[Tensor([4, 256, 52, 76],"float16"),Tensor([4, 2, 52, 76],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 52, 76],"float16"),Tensor([4, 2, 52, 76],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:00.151737 GPU 6 93171 test begin: paddle.concat(list[Tensor([4, 256, 52, 82],"float16"),Tensor([4, 2, 52, 82],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 52, 82],"float16"),Tensor([4, 2, 52, 82],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:00.162734 GPU 6 93158 test begin: paddle.concat(list[Tensor([4, 256, 52, 84],"float16"),Tensor([4, 2, 52, 84],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 52, 84],"float16"),Tensor([4, 2, 52, 84],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:00.262217 GPU 7 93170 test begin: paddle.concat(list[Tensor([4, 256, 54, 74],"float16"),Tensor([4, 2, 54, 74],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 54, 74],"float16"),Tensor([4, 2, 54, 74],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:00.285622 GPU 7 93160 test begin: paddle.concat(list[Tensor([4, 256, 54, 76],"float16"),Tensor([4, 2, 54, 76],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 54, 76],"float16"),Tensor([4, 2, 54, 76],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:00.313824 GPU 6 93169 test begin: paddle.concat(list[Tensor([4, 256, 54, 78],"float16"),Tensor([4, 2, 54, 78],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 54, 78],"float16"),Tensor([4, 2, 54, 78],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:00.330566 GPU 6 93159 test begin: paddle.concat(list[Tensor([4, 256, 56, 76],"float16"),Tensor([4, 2, 56, 76],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 56, 76],"float16"),Tensor([4, 2, 56, 76],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:00.334703 GPU 7 93163 test begin: paddle.concat(list[Tensor([4, 256, 58, 76],"float16"),Tensor([4, 2, 58, 76],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 58, 76],"float16"),Tensor([4, 2, 58, 76],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:00.382722 GPU 6 93161 test begin: paddle.concat(list[Tensor([4, 256, 58, 80],"float16"),Tensor([4, 2, 58, 80],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 58, 80],"float16"),Tensor([4, 2, 58, 80],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:00.433002 GPU 7 93168 test begin: paddle.concat(list[Tensor([4, 256, 60, 76],"float16"),Tensor([4, 2, 60, 76],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 60, 76],"float16"),Tensor([4, 2, 60, 76],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:00.445206 GPU 6 93162 test begin: paddle.concat(list[Tensor([4, 256, 62, 68],"float16"),Tensor([4, 2, 62, 68],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 62, 68],"float16"),Tensor([4, 2, 62, 68],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:00.450192 GPU 7 93164 test begin: paddle.concat(list[Tensor([4, 256, 62, 76],"float16"),Tensor([4, 2, 62, 76],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 62, 76],"float16"),Tensor([4, 2, 62, 76],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:00.473221 GPU 7 93167 test begin: paddle.concat(list[Tensor([4, 256, 62, 84],"float16"),Tensor([4, 2, 62, 84],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 62, 84],"float16"),Tensor([4, 2, 62, 84],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:00.475138 GPU 6 93166 test begin: paddle.concat(list[Tensor([4, 256, 64, 128],"float16"),Tensor([4, 256, 64, 128],"float16"),Tensor([4, 256, 64, 128],"float16"),Tensor([4, 256, 64, 128],"float16"),Tensor([4, 256, 64, 128],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 64, 128],"float16"),Tensor([4, 256, 64, 128],"float16"),Tensor([4, 256, 64, 128],"float16"),Tensor([4, 256, 64, 128],"float16"),Tensor([4, 256, 64, 128],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 4th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:00.543083 GPU 6 93171 test begin: paddle.concat(list[Tensor([4, 256, 64, 64],"float16"),Tensor([4, 256, 64, 64],"float16"),Tensor([4, 256, 64, 64],"float16"),Tensor([4, 256, 64, 64],"float16"),Tensor([4, 256, 64, 64],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 64, 64],"float16"),Tensor([4, 256, 64, 64],"float16"),Tensor([4, 256, 64, 64],"float16"),Tensor([4, 256, 64, 64],"float16"),Tensor([4, 256, 64, 64],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 4th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:00.646732 GPU 7 93160 test begin: paddle.concat(list[Tensor([4, 256, 64, 68],"float16"),Tensor([4, 2, 64, 68],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 64, 68],"float16"),Tensor([4, 2, 64, 68],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:00.674582 GPU 6 93169 test begin: paddle.concat(list[Tensor([4, 256, 64, 76],"float16"),Tensor([4, 2, 64, 76],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 64, 76],"float16"),Tensor([4, 2, 64, 76],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:00.677483 GPU 6 93159 test begin: paddle.concat(list[Tensor([4, 256, 64, 84],"float16"),Tensor([4, 2, 64, 84],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 64, 84],"float16"),Tensor([4, 2, 64, 84],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:00.684511 GPU 6 93158 test begin: paddle.concat(list[Tensor([4, 256, 66, 72],"float16"),Tensor([4, 2, 66, 72],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 66, 72],"float16"),Tensor([4, 2, 66, 72],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:00.717241 GPU 7 93163 test begin: paddle.concat(list[Tensor([4, 256, 66, 74],"float16"),Tensor([4, 2, 66, 74],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 66, 74],"float16"),Tensor([4, 2, 66, 74],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:00.761992 GPU 6 93161 test begin: paddle.concat(list[Tensor([4, 256, 66, 76],"float16"),Tensor([4, 2, 66, 76],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 66, 76],"float16"),Tensor([4, 2, 66, 76],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:00.777424 GPU 7 93168 test begin: paddle.concat(list[Tensor([4, 256, 66, 80],"float16"),Tensor([4, 2, 66, 80],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 66, 80],"float16"),Tensor([4, 2, 66, 80],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:00.779247 GPU 6 93162 test begin: paddle.concat(list[Tensor([4, 256, 66, 84],"float16"),Tensor([4, 2, 66, 84],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 66, 84],"float16"),Tensor([4, 2, 66, 84],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:00.836658 GPU 7 93170 test begin: paddle.concat(list[Tensor([4, 256, 68, 50],"float16"),Tensor([4, 2, 68, 50],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 68, 50],"float16"),Tensor([4, 2, 68, 50],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:00.839237 GPU 7 93164 test begin: paddle.concat(list[Tensor([4, 256, 68, 54],"float16"),Tensor([4, 2, 68, 54],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 68, 54],"float16"),Tensor([4, 2, 68, 54],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:00.877423 GPU 7 93167 test begin: paddle.concat(list[Tensor([4, 256, 68, 68],"float16"),Tensor([4, 2, 68, 68],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 68, 68],"float16"),Tensor([4, 2, 68, 68],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:01.418487 GPU 7 93160 test begin: paddle.concat(list[Tensor([4, 256, 68, 70],"float16"),Tensor([4, 2, 68, 70],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 68, 70],"float16"),Tensor([4, 2, 68, 70],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:01.578980 GPU 6 93169 test begin: paddle.concat(list[Tensor([4, 256, 68, 74],"float16"),Tensor([4, 2, 68, 74],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 68, 74],"float16"),Tensor([4, 2, 68, 74],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:01.659117 GPU 6 93158 test begin: paddle.concat(list[Tensor([4, 256, 68, 76],"float16"),Tensor([4, 2, 68, 76],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 68, 76],"float16"),Tensor([4, 2, 68, 76],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:01.842513 GPU 6 93159 test begin: paddle.concat(list[Tensor([4, 256, 68, 78],"float16"),Tensor([4, 2, 68, 78],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 68, 78],"float16"),Tensor([4, 2, 68, 78],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:01.843573 GPU 7 93163 test begin: paddle.concat(list[Tensor([4, 256, 68, 80],"float16"),Tensor([4, 2, 68, 80],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 68, 80],"float16"),Tensor([4, 2, 68, 80],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:02.154566 GPU 6 93161 test begin: paddle.concat(list[Tensor([4, 256, 68, 82],"float16"),Tensor([4, 2, 68, 82],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 68, 82],"float16"),Tensor([4, 2, 68, 82],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:02.159945 GPU 7 93164 test begin: paddle.concat(list[Tensor([4, 256, 68, 84],"float16"),Tensor([4, 2, 68, 84],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 68, 84],"float16"),Tensor([4, 2, 68, 84],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:02.247254 GPU 6 93162 test begin: paddle.concat(list[Tensor([4, 256, 70, 68],"float16"),Tensor([4, 2, 70, 68],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 70, 68],"float16"),Tensor([4, 2, 70, 68],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:02.400624 GPU 7 93168 test begin: paddle.concat(list[Tensor([4, 256, 70, 70],"float16"),Tensor([4, 2, 70, 70],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 70, 70],"float16"),Tensor([4, 2, 70, 70],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:02.491161 GPU 7 93167 test begin: paddle.concat(list[Tensor([4, 256, 70, 76],"float16"),Tensor([4, 2, 70, 76],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 70, 76],"float16"),Tensor([4, 2, 70, 76],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:02.499581 GPU 7 93170 test begin: paddle.concat(list[Tensor([4, 256, 70, 78],"float16"),Tensor([4, 2, 70, 78],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 70, 78],"float16"),Tensor([4, 2, 70, 78],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:02.507595 GPU 6 93169 test begin: paddle.concat(list[Tensor([4, 256, 70, 82],"float16"),Tensor([4, 2, 70, 82],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 70, 82],"float16"),Tensor([4, 2, 70, 82],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:02.508688 GPU 7 93160 test begin: paddle.concat(list[Tensor([4, 256, 70, 84],"float16"),Tensor([4, 2, 70, 84],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 70, 84],"float16"),Tensor([4, 2, 70, 84],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:02.553264 GPU 6 93171 test begin: paddle.concat(list[Tensor([4, 256, 72, 68],"float16"),Tensor([4, 2, 72, 68],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 72, 68],"float16"),Tensor([4, 2, 72, 68],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:02.626017 GPU 6 93158 test begin: paddle.concat(list[Tensor([4, 256, 72, 76],"float16"),Tensor([4, 2, 72, 76],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 72, 76],"float16"),Tensor([4, 2, 72, 76],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:02.645762 GPU 6 93159 test begin: paddle.concat(list[Tensor([4, 256, 72, 84],"float16"),Tensor([4, 2, 72, 84],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 72, 84],"float16"),Tensor([4, 2, 72, 84],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:02.648329 GPU 7 93163 test begin: paddle.concat(list[Tensor([4, 256, 74, 68],"float16"),Tensor([4, 2, 74, 68],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 74, 68],"float16"),Tensor([4, 2, 74, 68],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:02.701153 GPU 7 93164 test begin: paddle.concat(list[Tensor([4, 256, 74, 76],"float16"),Tensor([4, 2, 74, 76],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 74, 76],"float16"),Tensor([4, 2, 74, 76],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:02.704221 GPU 6 93161 test begin: paddle.concat(list[Tensor([4, 256, 74, 82],"float16"),Tensor([4, 2, 74, 82],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 74, 82],"float16"),Tensor([4, 2, 74, 82],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:02.753682 GPU 6 93162 test begin: paddle.concat(list[Tensor([4, 256, 74, 84],"float16"),Tensor([4, 2, 74, 84],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 74, 84],"float16"),Tensor([4, 2, 74, 84],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:02.771665 GPU 7 93168 test begin: paddle.concat(list[Tensor([4, 256, 76, 50],"float16"),Tensor([4, 2, 76, 50],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 76, 50],"float16"),Tensor([4, 2, 76, 50],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:02.852607 GPU 7 93167 test begin: paddle.concat(list[Tensor([4, 256, 76, 54],"float16"),Tensor([4, 2, 76, 54],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 76, 54],"float16"),Tensor([4, 2, 76, 54],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:02.916586 GPU 6 93169 test begin: paddle.concat(list[Tensor([4, 256, 76, 66],"float16"),Tensor([4, 2, 76, 66],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 76, 66],"float16"),Tensor([4, 2, 76, 66],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:02.921477 GPU 7 93160 test begin: paddle.concat(list[Tensor([4, 256, 76, 68],"float16"),Tensor([4, 2, 76, 68],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 76, 68],"float16"),Tensor([4, 2, 76, 68],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:02.933026 GPU 7 93170 test begin: paddle.concat(list[Tensor([4, 256, 76, 70],"float16"),Tensor([4, 2, 76, 70],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 76, 70],"float16"),Tensor([4, 2, 76, 70],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:02.968129 GPU 6 93171 test begin: paddle.concat(list[Tensor([4, 256, 76, 72],"float16"),Tensor([4, 2, 76, 72],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 76, 72],"float16"),Tensor([4, 2, 76, 72],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:02.996422 GPU 6 93158 test begin: paddle.concat(list[Tensor([4, 256, 76, 74],"float16"),Tensor([4, 2, 76, 74],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 76, 74],"float16"),Tensor([4, 2, 76, 74],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:03.014290 GPU 7 93163 test begin: paddle.concat(list[Tensor([4, 256, 76, 76],"float16"),Tensor([4, 2, 76, 76],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 76, 76],"float16"),Tensor([4, 2, 76, 76],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:03.067778 GPU 6 93159 test begin: paddle.concat(list[Tensor([4, 256, 76, 78],"float16"),Tensor([4, 2, 76, 78],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 76, 78],"float16"),Tensor([4, 2, 76, 78],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:03.095069 GPU 6 93161 test begin: paddle.concat(list[Tensor([4, 256, 76, 80],"float16"),Tensor([4, 2, 76, 80],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 76, 80],"float16"),Tensor([4, 2, 76, 80],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:03.095204 GPU 7 93168 test begin: paddle.concat(list[Tensor([4, 256, 76, 82],"float16"),Tensor([4, 2, 76, 82],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 76, 82],"float16"),Tensor([4, 2, 76, 82],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:03.137060 GPU 7 93164 test begin: paddle.concat(list[Tensor([4, 256, 76, 84],"float16"),Tensor([4, 2, 76, 84],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 76, 84],"float16"),Tensor([4, 2, 76, 84],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:03.137361 GPU 6 93162 test begin: paddle.concat(list[Tensor([4, 256, 78, 68],"float16"),Tensor([4, 2, 78, 68],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 78, 68],"float16"),Tensor([4, 2, 78, 68],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:03.179354 GPU 7 93167 test begin: paddle.concat(list[Tensor([4, 256, 78, 74],"float16"),Tensor([4, 2, 78, 74],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 78, 74],"float16"),Tensor([4, 2, 78, 74],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:03.296932 GPU 6 93169 test begin: paddle.concat(list[Tensor([4, 256, 78, 76],"float16"),Tensor([4, 2, 78, 76],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 78, 76],"float16"),Tensor([4, 2, 78, 76],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:03.307147 GPU 7 93160 test begin: paddle.concat(list[Tensor([4, 256, 78, 84],"float16"),Tensor([4, 2, 78, 84],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 78, 84],"float16"),Tensor([4, 2, 78, 84],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:03.316557 GPU 6 93166 test begin: paddle.concat(list[Tensor([4, 256, 80, 68],"float16"),Tensor([4, 2, 80, 68],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 80, 68],"float16"),Tensor([4, 2, 80, 68],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:03.386203 GPU 6 93171 test begin: paddle.concat(list[Tensor([4, 256, 80, 76],"float16"),Tensor([4, 2, 80, 76],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 80, 76],"float16"),Tensor([4, 2, 80, 76],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:03.388777 GPU 6 93158 test begin: paddle.concat(list[Tensor([4, 256, 80, 80],"float16"),Tensor([4, 2, 80, 80],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 80, 80],"float16"),Tensor([4, 2, 80, 80],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:03.394818 GPU 7 93170 test begin: paddle.concat(list[Tensor([4, 256, 82, 50],"float16"),Tensor([4, 2, 82, 50],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 82, 50],"float16"),Tensor([4, 2, 82, 50],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:03.426966 GPU 7 93163 test begin: paddle.concat(list[Tensor([4, 256, 82, 68],"float16"),Tensor([4, 2, 82, 68],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 82, 68],"float16"),Tensor([4, 2, 82, 68],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:03.474028 GPU 6 93159 test begin: paddle.concat(list[Tensor([4, 256, 82, 74],"float16"),Tensor([4, 2, 82, 74],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 82, 74],"float16"),Tensor([4, 2, 82, 74],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:03.516138 GPU 7 93168 test begin: paddle.concat(list[Tensor([4, 256, 82, 76],"float16"),Tensor([4, 2, 82, 76],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 82, 76],"float16"),Tensor([4, 2, 82, 76],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:03.535796 GPU 6 93162 test begin: paddle.concat(list[Tensor([4, 256, 84, 50],"float16"),Tensor([4, 2, 84, 50],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 84, 50],"float16"),Tensor([4, 2, 84, 50],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:03.553864 GPU 7 93167 test begin: paddle.concat(list[Tensor([4, 256, 84, 68],"float16"),Tensor([4, 2, 84, 68],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 84, 68],"float16"),Tensor([4, 2, 84, 68],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:03.557690 GPU 6 93161 test begin: paddle.concat(list[Tensor([4, 256, 84, 70],"float16"),Tensor([4, 2, 84, 70],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 84, 70],"float16"),Tensor([4, 2, 84, 70],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:03.622943 GPU 7 93164 test begin: paddle.concat(list[Tensor([4, 256, 84, 76],"float16"),Tensor([4, 2, 84, 76],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 84, 76],"float16"),Tensor([4, 2, 84, 76],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:03.921105 GPU 6 93169 test begin: paddle.concat(list[Tensor([4, 256, 84, 78],"float16"),Tensor([4, 2, 84, 78],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 84, 78],"float16"),Tensor([4, 2, 84, 78],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:03.926992 GPU 7 93160 test begin: paddle.concat(list[Tensor([4, 256, 84, 80],"float16"),Tensor([4, 2, 84, 80],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 84, 80],"float16"),Tensor([4, 2, 84, 80],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:03.935867 GPU 6 93166 test begin: paddle.concat(list[Tensor([4, 256, 84, 84],"float16"),Tensor([4, 2, 84, 84],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 84, 84],"float16"),Tensor([4, 2, 84, 84],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:04.179545 GPU 7 93170 test begin: paddle.concat(list[Tensor([4, 3, 256, 256],"float32"),Tensor([4, 32, 256, 256],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 3, 256, 256],"float32"),Tensor([4, 32, 256, 256],"float16"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:04.340148 GPU 6 93171 test begin: paddle.concat(list[Tensor([4, 32, 64, 64],"float16"),Tensor([4, 32, 64, 64],"float32"),Tensor([4, 32, 64, 64],"float32"),Tensor([4, 32, 64, 64],"float32"),Tensor([4, 32, 64, 64],"float32"),Tensor([4, 32, 64, 64],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 32, 64, 64],"float16"),Tensor([4, 32, 64, 64],"float32"),Tensor([4, 32, 64, 64],"float32"),Tensor([4, 32, 64, 64],"float32"),Tensor([4, 32, 64, 64],"float32"),Tensor([4, 32, 64, 64],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:04.591382 GPU 7 93163 test begin: paddle.concat(list[Tensor([4, 32, 64, 64],"float16"),Tensor([4, 32, 64, 64],"float32"),Tensor([4, 32, 64, 64],"float32"),Tensor([4, 32, 64, 64],"float32"),Tensor([4, 32, 64, 64],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 32, 64, 64],"float16"),Tensor([4, 32, 64, 64],"float32"),Tensor([4, 32, 64, 64],"float32"),Tensor([4, 32, 64, 64],"float32"),Tensor([4, 32, 64, 64],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:04.752571 GPU 7 93167 test begin: paddle.concat(list[Tensor([4, 32, 64, 64],"float16"),Tensor([4, 32, 64, 64],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 32, 64, 64],"float16"),Tensor([4, 32, 64, 64],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:04.754248 GPU 6 93162 test begin: paddle.concat(list[Tensor([4, 32, 64, 64],"float32"),Tensor([4, 32, 64, 64],"float16"),Tensor([4, 2, 64, 64],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 32, 64, 64],"float32"),Tensor([4, 32, 64, 64],"float16"),Tensor([4, 2, 64, 64],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:04.764024 GPU 6 93159 test begin: paddle.concat(list[Tensor([4, 32, 64, 64],"float32"),Tensor([4, 32, 64, 64],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 32, 64, 64],"float32"),Tensor([4, 32, 64, 64],"float16"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:04.818240 GPU 6 93158 test begin: paddle.concat(list[Tensor([4, 512, 128, 128],"float16"),Tensor([4, 128, 128, 128],"float32"),Tensor([4, 128, 128, 128],"float32"),Tensor([4, 128, 128, 128],"float32"),Tensor([4, 128, 128, 128],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 512, 128, 128],"float16"),Tensor([4, 128, 128, 128],"float32"),Tensor([4, 128, 128, 128],"float32"),Tensor([4, 128, 128, 128],"float32"),Tensor([4, 128, 128, 128],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:04.919950 GPU 7 93168 test begin: paddle.concat(list[Tensor([4, 64, 128, 128],"float32"),Tensor([4, 64, 128, 128],"float16"),], 1, )
[paddle error] paddle.concat(list[Tensor([4, 64, 128, 128],"float32"),Tensor([4, 64, 128, 128],"float16"),], 1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:04.925146 GPU 6 93161 test begin: paddle.concat(list[Tensor([4, 64, 160, 160],"float32"),Tensor([4, 64, 160, 160],"float32"),Tensor([4, 64, 160, 160],"float32"),Tensor([4, 64, 160, 160],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 64, 160, 160],"float32"),Tensor([4, 64, 160, 160],"float32"),Tensor([4, 64, 160, 160],"float32"),Tensor([4, 64, 160, 160],"float16"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 3th tensor is float16. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:04.940839 GPU 7 93164 test begin: paddle.concat(list[Tensor([4, 64, 256, 256],"float32"),Tensor([4, 64, 256, 256],"float16"),], 1, )
[paddle error] paddle.concat(list[Tensor([4, 64, 256, 256],"float32"),Tensor([4, 64, 256, 256],"float16"),], 1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:05.111456 GPU 6 93169 test begin: paddle.concat(list[Tensor([48, 128, 22, 22],"float32"),Tensor([48, 128, 22, 22],"float16"),], 1, )
[paddle error] paddle.concat(list[Tensor([48, 128, 22, 22],"float32"),Tensor([48, 128, 22, 22],"float16"),], 1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:05.281968 GPU 7 93163 test begin: paddle.concat(list[Tensor([48, 128, 24, 24],"float32"),Tensor([48, 128, 24, 24],"float16"),], 1, )
[paddle error] paddle.concat(list[Tensor([48, 128, 24, 24],"float32"),Tensor([48, 128, 24, 24],"float16"),], 1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:05.289291 GPU 6 93166 test begin: paddle.concat(list[Tensor([48, 128, 26, 26],"float32"),Tensor([48, 128, 26, 26],"float16"),], 1, )
[paddle error] paddle.concat(list[Tensor([48, 128, 26, 26],"float32"),Tensor([48, 128, 26, 26],"float16"),], 1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:05.310223 GPU 7 93160 test begin: paddle.concat(list[Tensor([48, 128, 28, 28],"float32"),Tensor([48, 128, 28, 28],"float16"),], 1, )
[paddle error] paddle.concat(list[Tensor([48, 128, 28, 28],"float32"),Tensor([48, 128, 28, 28],"float16"),], 1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:05.315673 GPU 6 93171 test begin: paddle.concat(list[Tensor([48, 128, 30, 30],"float32"),Tensor([48, 128, 30, 30],"float16"),], 1, )
[paddle error] paddle.concat(list[Tensor([48, 128, 30, 30],"float32"),Tensor([48, 128, 30, 30],"float16"),], 1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:05.324632 GPU 7 93170 test begin: paddle.concat(list[Tensor([48, 128, 44, 44],"float32"),Tensor([48, 128, 44, 44],"float16"),], 1, )
[paddle error] paddle.concat(list[Tensor([48, 128, 44, 44],"float32"),Tensor([48, 128, 44, 44],"float16"),], 1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:05.374621 GPU 6 93162 test begin: paddle.concat(list[Tensor([48, 128, 48, 48],"float32"),Tensor([48, 128, 48, 48],"float16"),], 1, )
[paddle error] paddle.concat(list[Tensor([48, 128, 48, 48],"float32"),Tensor([48, 128, 48, 48],"float16"),], 1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:05.383030 GPU 7 93167 test begin: paddle.concat(list[Tensor([48, 128, 52, 52],"float32"),Tensor([48, 128, 52, 52],"float16"),], 1, )
[paddle error] paddle.concat(list[Tensor([48, 128, 52, 52],"float32"),Tensor([48, 128, 52, 52],"float16"),], 1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:05.393717 GPU 6 93159 test begin: paddle.concat(list[Tensor([48, 128, 56, 56],"float32"),Tensor([48, 128, 56, 56],"float16"),], 1, )
[paddle error] paddle.concat(list[Tensor([48, 128, 56, 56],"float32"),Tensor([48, 128, 56, 56],"float16"),], 1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:05.550603 GPU 7 93168 test begin: paddle.concat(list[Tensor([48, 128, 60, 60],"float32"),Tensor([48, 128, 60, 60],"float16"),], 1, )
[paddle error] paddle.concat(list[Tensor([48, 128, 60, 60],"float32"),Tensor([48, 128, 60, 60],"float16"),], 1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:05.675684 GPU 6 93169 test begin: paddle.concat(list[Tensor([512, 20, 32, 24],"float32"),Tensor([512, 20, 32, 24],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([512, 20, 32, 24],"float32"),Tensor([512, 20, 32, 24],"float16"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:05.731177 GPU 7 93163 test begin: paddle.concat(list[Tensor([512, 40, 16, 12],"float32"),Tensor([512, 40, 16, 12],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([512, 40, 16, 12],"float32"),Tensor([512, 40, 16, 12],"float16"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:05.798069 GPU 6 93166 test begin: paddle.concat(list[Tensor([512, 80, 8, 6],"float32"),Tensor([512, 80, 8, 6],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([512, 80, 8, 6],"float32"),Tensor([512, 80, 8, 6],"float16"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:05.896274 GPU 7 93160 test begin: paddle.concat(list[Tensor([6, 1, 512, 512],"float32"),Tensor([6, 1, 512, 512],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([6, 1, 512, 512],"float32"),Tensor([6, 1, 512, 512],"float16"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:06.077986 GPU 6 93171 test begin: paddle.concat(list[Tensor([64, 24, 32, 32],"float16"),Tensor([64, 24, 32, 32],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([64, 24, 32, 32],"float16"),Tensor([64, 24, 32, 32],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:06.176079 GPU 6 93166 test begin: paddle.concat(list[Tensor([64, 24, 36, 36],"float16"),Tensor([64, 24, 36, 36],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([64, 24, 36, 36],"float16"),Tensor([64, 24, 36, 36],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:06.193047 GPU 7 93160 test begin: paddle.concat(list[Tensor([64, 24, 40, 40],"float16"),Tensor([64, 24, 40, 40],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([64, 24, 40, 40],"float16"),Tensor([64, 24, 40, 40],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:06.201164 GPU 6 93161 test begin: paddle.concat(list[Tensor([64, 24, 44, 44],"float16"),Tensor([64, 24, 44, 44],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([64, 24, 44, 44],"float16"),Tensor([64, 24, 44, 44],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:06.212531 GPU 7 93163 test begin: paddle.concat(list[Tensor([64, 24, 48, 48],"float16"),Tensor([64, 24, 48, 48],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([64, 24, 48, 48],"float16"),Tensor([64, 24, 48, 48],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:06.410319 GPU 6 93171 test begin: paddle.concat(list[Tensor([64, 48, 16, 16],"float16"),Tensor([64, 48, 16, 16],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([64, 48, 16, 16],"float16"),Tensor([64, 48, 16, 16],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:06.707855 GPU 6 93166 test begin: paddle.concat(list[Tensor([64, 48, 18, 18],"float16"),Tensor([64, 48, 18, 18],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([64, 48, 18, 18],"float16"),Tensor([64, 48, 18, 18],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:06.715582 GPU 7 93160 test begin: paddle.concat(list[Tensor([64, 48, 20, 20],"float16"),Tensor([64, 48, 20, 20],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([64, 48, 20, 20],"float16"),Tensor([64, 48, 20, 20],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:06.723792 GPU 6 93169 test begin: paddle.concat(list[Tensor([64, 48, 22, 22],"float16"),Tensor([64, 48, 22, 22],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([64, 48, 22, 22],"float16"),Tensor([64, 48, 22, 22],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:06.794033 GPU 7 93164 test begin: paddle.concat(list[Tensor([64, 48, 24, 24],"float16"),Tensor([64, 48, 24, 24],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([64, 48, 24, 24],"float16"),Tensor([64, 48, 24, 24],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:06.967615 GPU 6 93161 test begin: paddle.concat(list[Tensor([64, 60, 16, 16],"float16"),Tensor([64, 60, 16, 16],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([64, 60, 16, 16],"float16"),Tensor([64, 60, 16, 16],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:06.986682 GPU 7 93163 test begin: paddle.concat(list[Tensor([64, 60, 18, 18],"float16"),Tensor([64, 60, 18, 18],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([64, 60, 18, 18],"float16"),Tensor([64, 60, 18, 18],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:07.037578 GPU 6 93162 test begin: paddle.concat(list[Tensor([64, 60, 20, 20],"float16"),Tensor([64, 60, 20, 20],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([64, 60, 20, 20],"float16"),Tensor([64, 60, 20, 20],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:07.406437 GPU 7 93170 test begin: paddle.concat(list[Tensor([64, 60, 22, 22],"float16"),Tensor([64, 60, 22, 22],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([64, 60, 22, 22],"float16"),Tensor([64, 60, 22, 22],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:07.528325 GPU 6 93171 test begin: paddle.concat(list[Tensor([64, 60, 24, 24],"float16"),Tensor([64, 60, 24, 24],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([64, 60, 24, 24],"float16"),Tensor([64, 60, 24, 24],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:07.535013 GPU 7 93160 test begin: paddle.concat(list[Tensor([64, 64, 32, 32],"float16"),Tensor([64, 64, 32, 32],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([64, 64, 32, 32],"float16"),Tensor([64, 64, 32, 32],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:07.541525 GPU 6 93169 test begin: paddle.concat(list[Tensor([64, 64, 64, 64],"float16"),Tensor([64, 64, 64, 64],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([64, 64, 64, 64],"float16"),Tensor([64, 64, 64, 64],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:07.594859 GPU 7 93167 test begin: paddle.concat(list[Tensor([64, 96, 10, 10],"float16"),Tensor([64, 96, 10, 10],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([64, 96, 10, 10],"float16"),Tensor([64, 96, 10, 10],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:07.628461 GPU 6 93159 test begin: paddle.concat(list[Tensor([64, 96, 11, 11],"float16"),Tensor([64, 96, 11, 11],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([64, 96, 11, 11],"float16"),Tensor([64, 96, 11, 11],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:07.692928 GPU 7 93164 test begin: paddle.concat(list[Tensor([64, 96, 12, 12],"float16"),Tensor([64, 96, 12, 12],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([64, 96, 12, 12],"float16"),Tensor([64, 96, 12, 12],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:07.699014 GPU 6 93166 test begin: paddle.concat(list[Tensor([64, 96, 122, 122],"float32"),Tensor([64, 96, 122, 122],"float16"),], 1, )
[paddle error] paddle.concat(list[Tensor([64, 96, 122, 122],"float32"),Tensor([64, 96, 122, 122],"float16"),], 1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:07.858183 GPU 6 93161 test begin: paddle.concat(list[Tensor([64, 96, 16, 16],"float32"),Tensor([64, 96, 16, 16],"float16"),], 1, )
[paddle error] paddle.concat(list[Tensor([64, 96, 16, 16],"float32"),Tensor([64, 96, 16, 16],"float16"),], 1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:07.976429 GPU 7 93168 test begin: paddle.concat(list[Tensor([64, 96, 18, 18],"float32"),Tensor([64, 96, 18, 18],"float16"),], 1, )
[paddle error] paddle.concat(list[Tensor([64, 96, 18, 18],"float32"),Tensor([64, 96, 18, 18],"float16"),], 1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:08.029407 GPU 6 93158 test begin: paddle.concat(list[Tensor([64, 96, 20, 20],"float32"),Tensor([64, 96, 20, 20],"float16"),], 1, )
[paddle error] paddle.concat(list[Tensor([64, 96, 20, 20],"float32"),Tensor([64, 96, 20, 20],"float16"),], 1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:08.032072 GPU 7 93163 test begin: paddle.concat(list[Tensor([64, 96, 22, 22],"float32"),Tensor([64, 96, 22, 22],"float16"),], 1, )
[paddle error] paddle.concat(list[Tensor([64, 96, 22, 22],"float32"),Tensor([64, 96, 22, 22],"float16"),], 1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:08.055229 GPU 6 93162 test begin: paddle.concat(list[Tensor([64, 96, 24, 24],"float32"),Tensor([64, 96, 24, 24],"float16"),], 1, )
[paddle error] paddle.concat(list[Tensor([64, 96, 24, 24],"float32"),Tensor([64, 96, 24, 24],"float16"),], 1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:08.159563 GPU 7 93167 test begin: paddle.concat(list[Tensor([64, 96, 31, 31],"float32"),Tensor([64, 96, 31, 31],"float16"),], 1, )
[paddle error] paddle.concat(list[Tensor([64, 96, 31, 31],"float32"),Tensor([64, 96, 31, 31],"float16"),], 1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:08.163411 GPU 7 93164 test begin: paddle.concat(list[Tensor([64, 96, 32, 32],"float32"),Tensor([64, 96, 32, 32],"float16"),], 1, )
[paddle error] paddle.concat(list[Tensor([64, 96, 32, 32],"float32"),Tensor([64, 96, 32, 32],"float16"),], 1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:08.185923 GPU 6 93159 test begin: paddle.concat(list[Tensor([64, 96, 36, 36],"float32"),Tensor([64, 96, 36, 36],"float16"),], 1, )
[paddle error] paddle.concat(list[Tensor([64, 96, 36, 36],"float32"),Tensor([64, 96, 36, 36],"float16"),], 1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:08.244754 GPU 6 93161 test begin: paddle.concat(list[Tensor([64, 96, 40, 40],"float32"),Tensor([64, 96, 40, 40],"float16"),], 1, )
[paddle error] paddle.concat(list[Tensor([64, 96, 40, 40],"float32"),Tensor([64, 96, 40, 40],"float16"),], 1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:08.285656 GPU 7 93168 test begin: paddle.concat(list[Tensor([64, 96, 44, 44],"float32"),Tensor([64, 96, 44, 44],"float16"),], 1, )
[paddle error] paddle.concat(list[Tensor([64, 96, 44, 44],"float32"),Tensor([64, 96, 44, 44],"float16"),], 1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:08.287788 GPU 7 93170 test begin: paddle.concat(list[Tensor([64, 96, 48, 48],"float32"),Tensor([64, 96, 48, 48],"float16"),], 1, )
[paddle error] paddle.concat(list[Tensor([64, 96, 48, 48],"float32"),Tensor([64, 96, 48, 48],"float16"),], 1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:08.289521 GPU 7 93160 test begin: paddle.concat(list[Tensor([64, 96, 61, 61],"float32"),Tensor([64, 96, 61, 61],"float16"),], 1, )
[paddle error] paddle.concat(list[Tensor([64, 96, 61, 61],"float32"),Tensor([64, 96, 61, 61],"float16"),], 1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:08.306819 GPU 6 93171 test begin: paddle.concat(list[Tensor([64, 96, 8, 8],"float16"),Tensor([64, 96, 8, 8],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([64, 96, 8, 8],"float16"),Tensor([64, 96, 8, 8],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:08.427416 GPU 7 93163 test begin: paddle.concat(list[Tensor([64, 96, 9, 9],"float16"),Tensor([64, 96, 9, 9],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([64, 96, 9, 9],"float16"),Tensor([64, 96, 9, 9],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:08.440286 GPU 6 93162 test begin: paddle.concat(list[Tensor([64, 96],"float16"),Tensor([64, 50],"float32"),], 1, )
[paddle error] paddle.concat(list[Tensor([64, 96],"float16"),Tensor([64, 50],"float32"),], 1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:08.509486 GPU 6 93158 test begin: paddle.concat(list[Tensor([8, 1, 512, 512],"float32"),Tensor([8, 1, 512, 512],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([8, 1, 512, 512],"float32"),Tensor([8, 1, 512, 512],"float16"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:08.563190 GPU 6 93171 test begin: paddle.concat(list[Tensor([8, 128, 128, 128],"float16"),Tensor([8, 128, 128, 128],"float16"),Tensor([8, 128, 128, 128],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([8, 128, 128, 128],"float16"),Tensor([8, 128, 128, 128],"float16"),Tensor([8, 128, 128, 128],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 2th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:08.656487 GPU 6 93162 test begin: paddle.concat(list[Tensor([8, 128, 40, 40],"float16"),Tensor([8, 128, 40, 40],"float32"),], 1, )
[paddle error] paddle.concat(list[Tensor([8, 128, 40, 40],"float16"),Tensor([8, 128, 40, 40],"float32"),], 1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:08.689532 GPU 7 93163 test begin: paddle.concat(list[Tensor([8, 128, 40, 40],"float32"),Tensor([8, 256, 40, 40],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([8, 128, 40, 40],"float32"),Tensor([8, 256, 40, 40],"float16"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:08.737844 GPU 7 93167 test begin: paddle.concat(list[Tensor([8, 128, 44, 44],"float32"),Tensor([8, 256, 44, 44],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([8, 128, 44, 44],"float32"),Tensor([8, 256, 44, 44],"float16"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:08.821689 GPU 7 93164 test begin: paddle.concat(list[Tensor([8, 128, 48, 48],"float32"),Tensor([8, 256, 48, 48],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([8, 128, 48, 48],"float32"),Tensor([8, 256, 48, 48],"float16"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:08.855289 GPU 6 93158 test begin: paddle.concat(list[Tensor([8, 128, 52, 52],"float32"),Tensor([8, 256, 52, 52],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([8, 128, 52, 52],"float32"),Tensor([8, 256, 52, 52],"float16"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:08.952749 GPU 6 93162 test begin: paddle.concat(list[Tensor([8, 128, 56, 56],"float32"),Tensor([8, 256, 56, 56],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([8, 128, 56, 56],"float32"),Tensor([8, 256, 56, 56],"float16"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:09.052613 GPU 6 93159 test begin: paddle.concat(list[Tensor([8, 128, 60, 60],"float32"),Tensor([8, 256, 60, 60],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([8, 128, 60, 60],"float32"),Tensor([8, 256, 60, 60],"float16"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:09.075677 GPU 7 93163 test begin: paddle.concat(list[Tensor([8, 128, 64, 64],"float32"),Tensor([8, 256, 64, 64],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([8, 128, 64, 64],"float32"),Tensor([8, 256, 64, 64],"float16"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:09.107300 GPU 6 93161 test begin: paddle.concat(list[Tensor([8, 128, 68, 68],"float32"),Tensor([8, 256, 68, 68],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([8, 128, 68, 68],"float32"),Tensor([8, 256, 68, 68],"float16"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:09.122305 GPU 7 93167 test begin: paddle.concat(list[Tensor([8, 128, 72, 72],"float32"),Tensor([8, 256, 72, 72],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([8, 128, 72, 72],"float32"),Tensor([8, 256, 72, 72],"float16"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:09.151185 GPU 6 93169 test begin: paddle.concat(list[Tensor([8, 128, 76, 76],"float32"),Tensor([8, 256, 76, 76],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([8, 128, 76, 76],"float32"),Tensor([8, 256, 76, 76],"float16"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:09.453350 GPU 7 93164 test begin: paddle.concat(list[Tensor([8, 128, 80, 80],"float16"),Tensor([8, 128, 80, 80],"float32"),], 1, )
[paddle error] paddle.concat(list[Tensor([8, 128, 80, 80],"float16"),Tensor([8, 128, 80, 80],"float32"),], 1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:09.453531 GPU 6 93158 test begin: paddle.concat(list[Tensor([8, 128, 80, 80],"float32"),Tensor([8, 128, 80, 80],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([8, 128, 80, 80],"float32"),Tensor([8, 128, 80, 80],"float16"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:09.754461 GPU 7 93168 test begin: paddle.concat(list[Tensor([8, 192, 20, 20],"float32"),Tensor([8, 256, 20, 20],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([8, 192, 20, 20],"float32"),Tensor([8, 256, 20, 20],"float16"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:09.871837 GPU 6 93162 test begin: paddle.concat(list[Tensor([8, 192, 22, 22],"float32"),Tensor([8, 256, 22, 22],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([8, 192, 22, 22],"float32"),Tensor([8, 256, 22, 22],"float16"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:10.045053 GPU 7 93165 test begin: paddle.concat(list[Tensor([8, 192, 24, 24],"float32"),Tensor([8, 256, 24, 24],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([8, 192, 24, 24],"float32"),Tensor([8, 256, 24, 24],"float16"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:10.206103 GPU 7 93170 test begin: paddle.concat(list[Tensor([8, 192, 26, 26],"float32"),Tensor([8, 256, 26, 26],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([8, 192, 26, 26],"float32"),Tensor([8, 256, 26, 26],"float16"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:10.453758 GPU 7 93168 test begin: paddle.concat(list[Tensor([8, 192, 28, 28],"float32"),Tensor([8, 256, 28, 28],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([8, 192, 28, 28],"float32"),Tensor([8, 256, 28, 28],"float16"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:10.469986 GPU 6 93159 test begin: paddle.concat(list[Tensor([8, 192, 30, 30],"float32"),Tensor([8, 256, 30, 30],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([8, 192, 30, 30],"float32"),Tensor([8, 256, 30, 30],"float16"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:10.677480 GPU 6 93158 test begin: paddle.concat(list[Tensor([8, 192, 32, 32],"float32"),Tensor([8, 256, 32, 32],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([8, 192, 32, 32],"float32"),Tensor([8, 256, 32, 32],"float16"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:10.745040 GPU 7 93160 test begin: paddle.concat(list[Tensor([8, 192, 34, 34],"float32"),Tensor([8, 256, 34, 34],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([8, 192, 34, 34],"float32"),Tensor([8, 256, 34, 34],"float16"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:10.825012 GPU 6 93162 test begin: paddle.concat(list[Tensor([8, 192, 36, 36],"float32"),Tensor([8, 256, 36, 36],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([8, 192, 36, 36],"float32"),Tensor([8, 256, 36, 36],"float16"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:10.836321 GPU 7 93167 test begin: paddle.concat(list[Tensor([8, 192, 38, 38],"float32"),Tensor([8, 256, 38, 38],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([8, 192, 38, 38],"float32"),Tensor([8, 256, 38, 38],"float16"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:10.849949 GPU 6 93169 test begin: paddle.concat(list[Tensor([8, 192, 40, 40],"float32"),Tensor([8, 256, 40, 40],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([8, 192, 40, 40],"float32"),Tensor([8, 256, 40, 40],"float16"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:10.852753 GPU 7 93163 test begin: paddle.concat(list[Tensor([8, 192, 42, 42],"float32"),Tensor([8, 256, 42, 42],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([8, 192, 42, 42],"float32"),Tensor([8, 256, 42, 42],"float16"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:10.859459 GPU 7 93165 test begin: paddle.concat(list[Tensor([8, 192, 44, 44],"float32"),Tensor([8, 256, 44, 44],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([8, 192, 44, 44],"float32"),Tensor([8, 256, 44, 44],"float16"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:10.868605 GPU 6 93161 test begin: paddle.concat(list[Tensor([8, 192, 46, 46],"float32"),Tensor([8, 256, 46, 46],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([8, 192, 46, 46],"float32"),Tensor([8, 256, 46, 46],"float16"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:10.988074 GPU 7 93170 test begin: paddle.concat(list[Tensor([8, 192, 48, 48],"float32"),Tensor([8, 256, 48, 48],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([8, 192, 48, 48],"float32"),Tensor([8, 256, 48, 48],"float16"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:10.988492 GPU 6 93159 test begin: paddle.concat(list[Tensor([8, 24, 160, 160],"float32"),Tensor([8, 24, 160, 160],"float32"),Tensor([8, 24, 160, 160],"float32"),Tensor([8, 24, 160, 160],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([8, 24, 160, 160],"float32"),Tensor([8, 24, 160, 160],"float32"),Tensor([8, 24, 160, 160],"float32"),Tensor([8, 24, 160, 160],"float16"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 3th tensor is float16. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:11.012330 GPU 7 93168 test begin: paddle.concat(list[Tensor([8, 24, 240, 240],"float32"),Tensor([8, 24, 240, 240],"float32"),Tensor([8, 24, 240, 240],"float32"),Tensor([8, 24, 240, 240],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([8, 24, 240, 240],"float32"),Tensor([8, 24, 240, 240],"float32"),Tensor([8, 24, 240, 240],"float32"),Tensor([8, 24, 240, 240],"float16"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 3th tensor is float16. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:11.013560 GPU 6 93158 test begin: paddle.concat(list[Tensor([8, 256, 160, 160],"float16"),Tensor([8, 256, 160, 160],"float32"),Tensor([8, 256, 160, 160],"float32"),Tensor([8, 256, 160, 160],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([8, 256, 160, 160],"float16"),Tensor([8, 256, 160, 160],"float32"),Tensor([8, 256, 160, 160],"float32"),Tensor([8, 256, 160, 160],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:11.036968 GPU 7 93164 test begin: paddle.concat(list[Tensor([8, 256, 20, 20],"float32"),Tensor([8, 512, 20, 20],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([8, 256, 20, 20],"float32"),Tensor([8, 512, 20, 20],"float16"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:11.060225 GPU 7 93160 test begin: paddle.concat(list[Tensor([8, 256, 22, 22],"float32"),Tensor([8, 512, 22, 22],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([8, 256, 22, 22],"float32"),Tensor([8, 512, 22, 22],"float16"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:11.185454 GPU 7 93167 test begin: paddle.concat(list[Tensor([8, 256, 24, 24],"float32"),Tensor([8, 512, 24, 24],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([8, 256, 24, 24],"float32"),Tensor([8, 512, 24, 24],"float16"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:11.188717 GPU 6 93162 test begin: paddle.concat(list[Tensor([8, 256, 26, 26],"float32"),Tensor([8, 512, 26, 26],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([8, 256, 26, 26],"float32"),Tensor([8, 512, 26, 26],"float16"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:11.227944 GPU 6 93169 test begin: paddle.concat(list[Tensor([8, 256, 28, 28],"float32"),Tensor([8, 512, 28, 28],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([8, 256, 28, 28],"float32"),Tensor([8, 512, 28, 28],"float16"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:11.269176 GPU 7 93163 test begin: paddle.concat(list[Tensor([8, 256, 30, 30],"float32"),Tensor([8, 512, 30, 30],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([8, 256, 30, 30],"float32"),Tensor([8, 512, 30, 30],"float16"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:11.284268 GPU 6 93161 test begin: paddle.concat(list[Tensor([8, 256, 32, 32],"float32"),Tensor([8, 512, 32, 32],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([8, 256, 32, 32],"float32"),Tensor([8, 512, 32, 32],"float16"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:11.312748 GPU 7 93164 test begin: paddle.concat(list[Tensor([8, 256, 34, 34],"float32"),Tensor([8, 512, 34, 34],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([8, 256, 34, 34],"float32"),Tensor([8, 512, 34, 34],"float16"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:11.317173 GPU 7 93165 test begin: paddle.concat(list[Tensor([8, 256, 36, 36],"float32"),Tensor([8, 512, 36, 36],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([8, 256, 36, 36],"float32"),Tensor([8, 512, 36, 36],"float16"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:11.374481 GPU 7 93160 test begin: paddle.concat(list[Tensor([8, 256, 38, 38],"float32"),Tensor([8, 512, 38, 38],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([8, 256, 38, 38],"float32"),Tensor([8, 512, 38, 38],"float16"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:11.400062 GPU 6 93171 test begin: paddle.concat(list[Tensor([8, 256, 40, 40],"float16"),Tensor([8, 256, 40, 40],"float32"),], 1, )
[paddle error] paddle.concat(list[Tensor([8, 256, 40, 40],"float16"),Tensor([8, 256, 40, 40],"float32"),], 1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:11.490456 GPU 7 93167 test begin: paddle.concat(list[Tensor([8, 256, 40, 40],"float32"),Tensor([8, 256, 40, 40],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([8, 256, 40, 40],"float32"),Tensor([8, 256, 40, 40],"float16"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:11.510065 GPU 6 93162 test begin: paddle.concat(list[Tensor([8, 64, 160, 160],"float16"),Tensor([8, 64, 160, 160],"float32"),Tensor([8, 64, 160, 160],"float32"),Tensor([8, 64, 160, 160],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([8, 64, 160, 160],"float16"),Tensor([8, 64, 160, 160],"float32"),Tensor([8, 64, 160, 160],"float32"),Tensor([8, 64, 160, 160],"float32"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:11.591608 GPU 6 93169 test begin: paddle.concat(list[Tensor([8, 64, 160, 160],"float32"),Tensor([8, 64, 160, 160],"float32"),Tensor([8, 64, 160, 160],"float32"),Tensor([8, 64, 160, 160],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([8, 64, 160, 160],"float32"),Tensor([8, 64, 160, 160],"float32"),Tensor([8, 64, 160, 160],"float32"),Tensor([8, 64, 160, 160],"float16"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 3th tensor is float16. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:11.658436 GPU 7 93170 test begin: paddle.concat(list[Tensor([8, 64, 80, 80],"float16"),Tensor([8, 64, 80, 80],"float32"),], 1, )
[paddle error] paddle.concat(list[Tensor([8, 64, 80, 80],"float16"),Tensor([8, 64, 80, 80],"float32"),], 1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:11.670687 GPU 6 93161 test begin: paddle.concat(list[Tensor([8, 96, 40, 40],"float32"),Tensor([8, 128, 40, 40],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([8, 96, 40, 40],"float32"),Tensor([8, 128, 40, 40],"float16"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:11.691326 GPU 7 93163 test begin: paddle.concat(list[Tensor([8, 96, 44, 44],"float32"),Tensor([8, 128, 44, 44],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([8, 96, 44, 44],"float32"),Tensor([8, 128, 44, 44],"float16"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:11.745333 GPU 7 93164 test begin: paddle.concat(list[Tensor([8, 96, 48, 48],"float32"),Tensor([8, 128, 48, 48],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([8, 96, 48, 48],"float32"),Tensor([8, 128, 48, 48],"float16"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:11.807408 GPU 7 93165 test begin: paddle.concat(list[Tensor([8, 96, 52, 52],"float32"),Tensor([8, 128, 52, 52],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([8, 96, 52, 52],"float32"),Tensor([8, 128, 52, 52],"float16"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:11.840358 GPU 6 93171 test begin: paddle.concat(list[Tensor([8, 96, 56, 56],"float32"),Tensor([8, 128, 56, 56],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([8, 96, 56, 56],"float32"),Tensor([8, 128, 56, 56],"float16"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:11.855350 GPU 6 93159 test begin: paddle.concat(list[Tensor([8, 96, 60, 60],"float32"),Tensor([8, 128, 60, 60],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([8, 96, 60, 60],"float32"),Tensor([8, 128, 60, 60],"float16"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:11.878869 GPU 7 93160 test begin: paddle.concat(list[Tensor([8, 96, 64, 64],"float32"),Tensor([8, 128, 64, 64],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([8, 96, 64, 64],"float32"),Tensor([8, 128, 64, 64],"float16"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:11.880502 GPU 7 93167 test begin: paddle.concat(list[Tensor([8, 96, 68, 68],"float32"),Tensor([8, 128, 68, 68],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([8, 96, 68, 68],"float32"),Tensor([8, 128, 68, 68],"float16"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:11.974525 GPU 6 93161 test begin: paddle.concat(list[Tensor([8, 96, 72, 72],"float32"),Tensor([8, 128, 72, 72],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([8, 96, 72, 72],"float32"),Tensor([8, 128, 72, 72],"float16"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:12.240853 GPU 7 93170 test begin: paddle.concat(list[Tensor([8, 96, 76, 76],"float32"),Tensor([8, 128, 76, 76],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([8, 96, 76, 76],"float32"),Tensor([8, 128, 76, 76],"float16"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:12.242523 GPU 7 93163 test begin: paddle.concat(list[Tensor([8, 96, 80, 80],"float32"),Tensor([8, 128, 80, 80],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([8, 96, 80, 80],"float32"),Tensor([8, 128, 80, 80],"float16"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:12.325863 GPU 7 93164 test begin: paddle.concat(list[Tensor([8, 96, 84, 84],"float32"),Tensor([8, 128, 84, 84],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([8, 96, 84, 84],"float32"),Tensor([8, 128, 84, 84],"float16"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:12.937202 GPU 7 93165 test begin: paddle.concat(list[Tensor([8, 96, 88, 88],"float32"),Tensor([8, 128, 88, 88],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([8, 96, 88, 88],"float32"),Tensor([8, 128, 88, 88],"float16"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:13.092981 GPU 6 93159 test begin: paddle.concat(list[Tensor([8, 96, 92, 92],"float32"),Tensor([8, 128, 92, 92],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([8, 96, 92, 92],"float32"),Tensor([8, 128, 92, 92],"float16"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:13.095125 GPU 6 93171 test begin: paddle.concat(list[Tensor([8, 96, 96, 96],"float32"),Tensor([8, 128, 96, 96],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([8, 96, 96, 96],"float32"),Tensor([8, 128, 96, 96],"float16"),], axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:13.195072 GPU 7 93168 test begin: paddle.concat(list[Tensor([90, 128, 22, 22],"float32"),Tensor([90, 128, 22, 22],"float16"),], 1, )
[paddle error] paddle.concat(list[Tensor([90, 128, 22, 22],"float32"),Tensor([90, 128, 22, 22],"float16"),], 1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:13.233700 GPU 7 93160 test begin: paddle.concat(list[Tensor([90, 128, 24, 24],"float32"),Tensor([90, 128, 24, 24],"float16"),], 1, )
[paddle error] paddle.concat(list[Tensor([90, 128, 24, 24],"float32"),Tensor([90, 128, 24, 24],"float16"),], 1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:13.249110 GPU 7 93167 test begin: paddle.concat(list[Tensor([90, 128, 26, 26],"float32"),Tensor([90, 128, 26, 26],"float16"),], 1, )
[paddle error] paddle.concat(list[Tensor([90, 128, 26, 26],"float32"),Tensor([90, 128, 26, 26],"float16"),], 1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:13.439810 GPU 6 93161 test begin: paddle.concat(list[Tensor([90, 128, 28, 28],"float32"),Tensor([90, 128, 28, 28],"float16"),], 1, )
[paddle error] paddle.concat(list[Tensor([90, 128, 28, 28],"float32"),Tensor([90, 128, 28, 28],"float16"),], 1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:13.654018 GPU 7 93170 test begin: paddle.concat(list[Tensor([90, 128, 30, 30],"float32"),Tensor([90, 128, 30, 30],"float16"),], 1, )
[paddle error] paddle.concat(list[Tensor([90, 128, 30, 30],"float32"),Tensor([90, 128, 30, 30],"float16"),], 1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:13.678834 GPU 7 93163 test begin: paddle.concat(list[Tensor([90, 128, 44, 44],"float32"),Tensor([90, 128, 44, 44],"float16"),], 1, )
[paddle error] paddle.concat(list[Tensor([90, 128, 44, 44],"float32"),Tensor([90, 128, 44, 44],"float16"),], 1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:13.803738 GPU 7 93164 test begin: paddle.concat(list[Tensor([90, 128, 48, 48],"float32"),Tensor([90, 128, 48, 48],"float16"),], 1, )
[paddle error] paddle.concat(list[Tensor([90, 128, 48, 48],"float32"),Tensor([90, 128, 48, 48],"float16"),], 1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:13.870529 GPU 7 93165 test begin: paddle.concat(list[Tensor([90, 128, 52, 52],"float32"),Tensor([90, 128, 52, 52],"float16"),], 1, )
[paddle error] paddle.concat(list[Tensor([90, 128, 52, 52],"float32"),Tensor([90, 128, 52, 52],"float16"),], 1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:13.925955 GPU 7 93168 test begin: paddle.concat(list[Tensor([90, 128, 56, 56],"float32"),Tensor([90, 128, 56, 56],"float16"),], 1, )
[paddle error] paddle.concat(list[Tensor([90, 128, 56, 56],"float32"),Tensor([90, 128, 56, 56],"float16"),], 1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:13.971285 GPU 7 93160 test begin: paddle.concat(list[Tensor([90, 128, 60, 60],"float32"),Tensor([90, 128, 60, 60],"float16"),], 1, )
[paddle error] paddle.concat(list[Tensor([90, 128, 60, 60],"float32"),Tensor([90, 128, 60, 60],"float16"),], 1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:14.047183 GPU 6 93159 test begin: paddle.concat(tuple(Tensor([128, 1, 768],"float32"),Tensor([128, 196, 768],"float16"),), axis=1, )
[paddle error] paddle.concat(tuple(Tensor([128, 1, 768],"float32"),Tensor([128, 196, 768],"float16"),), axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:14.117266 GPU 7 93167 test begin: paddle.concat(tuple(Tensor([14, 1, 768],"float32"),Tensor([14, 1568, 768],"float16"),), axis=1, )
[paddle error] paddle.concat(tuple(Tensor([14, 1, 768],"float32"),Tensor([14, 1568, 768],"float16"),), axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:14.128588 GPU 6 93171 test begin: paddle.concat(tuple(Tensor([24, 32, 128, 128],"float32"),Tensor([24, 34, 128, 128],"float16"),), axis=1, )
[paddle error] paddle.concat(tuple(Tensor([24, 32, 128, 128],"float32"),Tensor([24, 34, 128, 128],"float16"),), axis=1, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:14.361352 GPU 6 93161 test begin: paddle.concat(x=tuple(Tensor([2, 3, 1, 64],"float16"),Tensor([2, 3, 256, 64],"float32"),), axis=-2, )
[paddle error] paddle.concat(x=tuple(Tensor([2, 3, 1, 64],"float16"),Tensor([2, 3, 256, 64],"float32"),), axis=-2, ) 
 (InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at ../paddle/phi/api/lib/kernel_dispatch.cc:131)


2025-06-09 22:06:14.572620 GPU 6 93162 test begin: paddle.einsum("i,j->ij", Tensor([93],"float32"), Tensor([16],"float16"), )
Warning: The core code of paddle.einsum is too complex.
[paddle error] paddle.einsum("i,j->ij", Tensor([93],"float32"), Tensor([16],"float16"), ) 
 (InvalidArgument) The type of data we are trying to retrieve (float32) does not match the type of data (float16) currently contained in the container.
  [Hint: Expected dtype() == phi::CppTypeToDataType<T>::Type(), but received dtype():15 != phi::CppTypeToDataType<T>::Type():10.] (at ../paddle/phi/core/dense_tensor.cc:153)


2025-06-09 22:06:14.614918 GPU 6 93161 test begin: paddle.nn.functional.conv1d(Tensor([8, 400, 100],"float32"), Tensor([256, 100, 3],"float16"), bias=Tensor([256],"float16"), padding=1, stride=list[1,], dilation=list[1,], groups=4, data_format="NCL", )
[paddle error] paddle.nn.functional.conv1d(Tensor([8, 400, 100],"float32"), Tensor([256, 100, 3],"float16"), bias=Tensor([256],"float16"), padding=1, stride=list[1,], dilation=list[1,], groups=4, data_format="NCL", ) 
 (InvalidArgument) The type of data we are trying to retrieve (float32) does not match the type of data (float16) currently contained in the container.
  [Hint: Expected dtype() == phi::CppTypeToDataType<T>::Type(), but received dtype():15 != phi::CppTypeToDataType<T>::Type():10.] (at ../paddle/phi/core/dense_tensor.cc:153)


2025-06-09 22:06:14.713092 GPU 6 93169 test begin: paddle.nn.functional.linear(x=Tensor([1, 10],"float16"), weight=Tensor([10, 10],"float32"), bias=None, name=None, )
Warning: The core code of paddle.nn.functional.linear is too complex.
[paddle error] paddle.nn.functional.linear(x=Tensor([1, 10],"float16"), weight=Tensor([10, 10],"float32"), bias=None, name=None, ) 
 (InvalidArgument) The type of data we are trying to retrieve (float32) does not match the type of data (float16) currently contained in the container.
  [Hint: Expected dtype() == phi::CppTypeToDataType<T>::Type(), but received dtype():15 != phi::CppTypeToDataType<T>::Type():10.] (at ../paddle/phi/core/dense_tensor.cc:153)
  [operator < linear > error]

2025-06-09 22:06:14.988350 GPU 6 93162 test begin: paddle.nn.functional.linear(x=Tensor([1, 10],"float16"), weight=Tensor([10, 1],"float32"), bias=None, name=None, )
Warning: The core code of paddle.nn.functional.linear is too complex.
[paddle error] paddle.nn.functional.linear(x=Tensor([1, 10],"float16"), weight=Tensor([10, 1],"float32"), bias=None, name=None, ) 
 (InvalidArgument) The type of data we are trying to retrieve (float32) does not match the type of data (float16) currently contained in the container.
  [Hint: Expected dtype() == phi::CppTypeToDataType<T>::Type(), but received dtype():15 != phi::CppTypeToDataType<T>::Type():10.] (at ../paddle/phi/core/dense_tensor.cc:153)
  [operator < linear > error]

2025-06-09 22:06:15.071437 GPU 7 93170 test begin: paddle.nn.functional.linear(x=Tensor([10, 10],"float16"), weight=Tensor([10, 10],"float32"), bias=None, name=None, )
Warning: The core code of paddle.nn.functional.linear is too complex.
[paddle error] paddle.nn.functional.linear(x=Tensor([10, 10],"float16"), weight=Tensor([10, 10],"float32"), bias=None, name=None, ) 
 (InvalidArgument) The type of data we are trying to retrieve (float32) does not match the type of data (float16) currently contained in the container.
  [Hint: Expected dtype() == phi::CppTypeToDataType<T>::Type(), but received dtype():15 != phi::CppTypeToDataType<T>::Type():10.] (at ../paddle/phi/core/dense_tensor.cc:153)
  [operator < linear > error]

2025-06-09 22:06:15.230557 GPU 6 93169 test begin: paddle.nn.functional.linear(x=Tensor([170628, 20, 64],"float16"), weight=Tensor([64, 64],"float32"), bias=None, name=None, )
[paddle error] paddle.nn.functional.linear(x=Tensor([170628, 20, 64],"float16"), weight=Tensor([64, 64],"float32"), bias=None, name=None, ) 
 (InvalidArgument) The type of data we are trying to retrieve (float32) does not match the type of data (float16) currently contained in the container.
  [Hint: Expected dtype() == phi::CppTypeToDataType<T>::Type(), but received dtype():15 != phi::CppTypeToDataType<T>::Type():10.] (at ../paddle/phi/core/dense_tensor.cc:153)
  [operator < linear > error]

2025-06-09 22:06:15.494495 GPU 6 93166 test begin: paddle.nn.functional.linear(x=Tensor([2, 14, 768],"bfloat16"), weight=Tensor([768, 8],"float32"), bias=Tensor([8],"float32"), name=None, )
Warning: The core code of paddle.nn.functional.linear is too complex.
[paddle error] paddle.nn.functional.linear(x=Tensor([2, 14, 768],"bfloat16"), weight=Tensor([768, 8],"float32"), bias=Tensor([8],"float32"), name=None, ) 
 (InvalidArgument) The type of data we are trying to retrieve (float32) does not match the type of data (bfloat16) currently contained in the container.
  [Hint: Expected dtype() == phi::CppTypeToDataType<T>::Type(), but received dtype():16 != phi::CppTypeToDataType<T>::Type():10.] (at ../paddle/phi/core/dense_tensor.cc:153)
  [operator < linear > error]

2025-06-09 22:06:15.814403 GPU 7 93167 test begin: paddle.nn.functional.linear(x=Tensor([29151, 100, 64],"float16"), weight=Tensor([64, 64],"float32"), bias=None, name=None, )
Warning: The core code of paddle.nn.functional.linear is too complex.
[paddle error] paddle.nn.functional.linear(x=Tensor([29151, 100, 64],"float16"), weight=Tensor([64, 64],"float32"), bias=None, name=None, ) 
 (InvalidArgument) The type of data we are trying to retrieve (float32) does not match the type of data (float16) currently contained in the container.
  [Hint: Expected dtype() == phi::CppTypeToDataType<T>::Type(), but received dtype():15 != phi::CppTypeToDataType<T>::Type():10.] (at ../paddle/phi/core/dense_tensor.cc:153)
  [operator < linear > error]

2025-06-09 22:06:16.180621 GPU 6 93171 test begin: paddle.vision.ops.deform_conv2d(x=Tensor([20, 128, 76, 136],"float32"), offset=Tensor([20, 18, 76, 136],"float16"), weight=Tensor([128, 128, 3, 3],"float16"), bias=Tensor([128],"float16"), stride=list[1,1,], padding=list[1,1,], dilation=list[1,1,], deformable_groups=1, groups=1, mask=Tensor([20, 9, 76, 136],"float16"), )
[paddle error] paddle.vision.ops.deform_conv2d(x=Tensor([20, 128, 76, 136],"float32"), offset=Tensor([20, 18, 76, 136],"float16"), weight=Tensor([128, 128, 3, 3],"float16"), bias=Tensor([128],"float16"), stride=list[1,1,], padding=list[1,1,], dilation=list[1,1,], deformable_groups=1, groups=1, mask=Tensor([20, 9, 76, 136],"float16"), ) 
 (InvalidArgument) The type of data we are trying to retrieve (float32) does not match the type of data (float16) currently contained in the container.
  [Hint: Expected dtype() == phi::CppTypeToDataType<T>::Type(), but received dtype():15 != phi::CppTypeToDataType<T>::Type():10.] (at ../paddle/phi/core/dense_tensor.cc:153)



2025-06-09 22:06:16.231660 GPU 6 93159 test begin: paddle.vision.ops.deform_conv2d(x=Tensor([20, 128, 76, 136],"float32"), offset=Tensor([20, 18, 76, 136],"float16"), weight=Tensor([64, 128, 3, 3],"float16"), bias=Tensor([64],"float16"), stride=list[1,1,], padding=list[1,1,], dilation=list[1,1,], deformable_groups=1, groups=1, mask=Tensor([20, 9, 76, 136],"float16"), )
[paddle error] paddle.vision.ops.deform_conv2d(x=Tensor([20, 128, 76, 136],"float32"), offset=Tensor([20, 18, 76, 136],"float16"), weight=Tensor([64, 128, 3, 3],"float16"), bias=Tensor([64],"float16"), stride=list[1,1,], padding=list[1,1,], dilation=list[1,1,], deformable_groups=1, groups=1, mask=Tensor([20, 9, 76, 136],"float16"), ) 
 (InvalidArgument) The type of data we are trying to retrieve (float32) does not match the type of data (float16) currently contained in the container.
  [Hint: Expected dtype() == phi::CppTypeToDataType<T>::Type(), but received dtype():15 != phi::CppTypeToDataType<T>::Type():10.] (at ../paddle/phi/core/dense_tensor.cc:153)


2025-06-09 22:06:16.483567 GPU 7 93163 test begin: paddle.vision.ops.deform_conv2d(x=Tensor([20, 256, 38, 68],"float32"), offset=Tensor([20, 18, 38, 68],"float16"), weight=Tensor([128, 256, 3, 3],"float16"), bias=Tensor([128],"float16"), stride=list[1,1,], padding=list[1,1,], dilation=list[1,1,], deformable_groups=1, groups=1, mask=Tensor([20, 9, 38, 68],"float16"), )
[paddle error] paddle.vision.ops.deform_conv2d(x=Tensor([20, 256, 38, 68],"float32"), offset=Tensor([20, 18, 38, 68],"float16"), weight=Tensor([128, 256, 3, 3],"float16"), bias=Tensor([128],"float16"), stride=list[1,1,], padding=list[1,1,], dilation=list[1,1,], deformable_groups=1, groups=1, mask=Tensor([20, 9, 38, 68],"float16"), ) 
 (InvalidArgument) The type of data we are trying to retrieve (float32) does not match the type of data (float16) currently contained in the container.
  [Hint: Expected dtype() == phi::CppTypeToDataType<T>::Type(), but received dtype():15 != phi::CppTypeToDataType<T>::Type():10.] (at ../paddle/phi/core/dense_tensor.cc:153)


2025-06-09 22:06:16.961632 GPU 7 93164 test begin: paddle.vision.ops.deform_conv2d(x=Tensor([20, 256, 38, 68],"float32"), offset=Tensor([20, 18, 38, 68],"float16"), weight=Tensor([256, 256, 3, 3],"float16"), bias=Tensor([256],"float16"), stride=list[1,1,], padding=list[1,1,], dilation=list[1,1,], deformable_groups=1, groups=1, mask=Tensor([20, 9, 38, 68],"float16"), )
[paddle error] paddle.vision.ops.deform_conv2d(x=Tensor([20, 256, 38, 68],"float32"), offset=Tensor([20, 18, 38, 68],"float16"), weight=Tensor([256, 256, 3, 3],"float16"), bias=Tensor([256],"float16"), stride=list[1,1,], padding=list[1,1,], dilation=list[1,1,], deformable_groups=1, groups=1, mask=Tensor([20, 9, 38, 68],"float16"), ) 
 (InvalidArgument) The type of data we are trying to retrieve (float32) does not match the type of data (float16) currently contained in the container.
  [Hint: Expected dtype() == phi::CppTypeToDataType<T>::Type(), but received dtype():15 != phi::CppTypeToDataType<T>::Type():10.] (at ../paddle/phi/core/dense_tensor.cc:153)


2025-06-09 22:06:17.350780 GPU 7 93165 test begin: paddle.vision.ops.deform_conv2d(x=Tensor([20, 256, 38, 68],"float32"), offset=Tensor([20, 18, 38, 68],"float16"), weight=Tensor([64, 256, 3, 3],"float16"), bias=Tensor([64],"float16"), stride=list[1,1,], padding=list[1,1,], dilation=list[1,1,], deformable_groups=1, groups=1, mask=Tensor([20, 9, 38, 68],"float16"), )
[paddle error] paddle.vision.ops.deform_conv2d(x=Tensor([20, 256, 38, 68],"float32"), offset=Tensor([20, 18, 38, 68],"float16"), weight=Tensor([64, 256, 3, 3],"float16"), bias=Tensor([64],"float16"), stride=list[1,1,], padding=list[1,1,], dilation=list[1,1,], deformable_groups=1, groups=1, mask=Tensor([20, 9, 38, 68],"float16"), ) 
 (InvalidArgument) The type of data we are trying to retrieve (float32) does not match the type of data (float16) currently contained in the container.
  [Hint: Expected dtype() == phi::CppTypeToDataType<T>::Type(), but received dtype():15 != phi::CppTypeToDataType<T>::Type():10.] (at ../paddle/phi/core/dense_tensor.cc:153)


2025-06-09 22:06:17.741028 GPU 6 93162 test begin: paddle.vision.ops.deform_conv2d(x=Tensor([20, 64, 152, 272],"float32"), offset=Tensor([20, 18, 152, 272],"float16"), weight=Tensor([64, 64, 3, 3],"float16"), bias=Tensor([64],"float16"), stride=list[1,1,], padding=list[1,1,], dilation=list[1,1,], deformable_groups=1, groups=1, mask=Tensor([20, 9, 152, 272],"float16"), )
[paddle error] paddle.vision.ops.deform_conv2d(x=Tensor([20, 64, 152, 272],"float32"), offset=Tensor([20, 18, 152, 272],"float16"), weight=Tensor([64, 64, 3, 3],"float16"), bias=Tensor([64],"float16"), stride=list[1,1,], padding=list[1,1,], dilation=list[1,1,], deformable_groups=1, groups=1, mask=Tensor([20, 9, 152, 272],"float16"), ) 
 (InvalidArgument) The type of data we are trying to retrieve (float32) does not match the type of data (float16) currently contained in the container.
  [Hint: Expected dtype() == phi::CppTypeToDataType<T>::Type(), but received dtype():15 != phi::CppTypeToDataType<T>::Type():10.] (at ../paddle/phi/core/dense_tensor.cc:153)


2025-06-09 22:06:17.932238 GPU 7 93168 test begin: paddle.vision.ops.deform_conv2d(x=Tensor([4, 32, 64, 64],"float32"), offset=Tensor([4, 144, 64, 64],"float32"), weight=Tensor([32, 32, 3, 3],"float16"), bias=Tensor([32],"float16"), stride=list[1,1,], padding=list[1,1,], dilation=list[1,1,], deformable_groups=8, groups=1, mask=Tensor([4, 72, 64, 64],"float16"), )
[paddle error] paddle.vision.ops.deform_conv2d(x=Tensor([4, 32, 64, 64],"float32"), offset=Tensor([4, 144, 64, 64],"float32"), weight=Tensor([32, 32, 3, 3],"float16"), bias=Tensor([32],"float16"), stride=list[1,1,], padding=list[1,1,], dilation=list[1,1,], deformable_groups=8, groups=1, mask=Tensor([4, 72, 64, 64],"float16"), ) 
 (InvalidArgument) The type of data we are trying to retrieve (float32) does not match the type of data (float16) currently contained in the container.
  [Hint: Expected dtype() == phi::CppTypeToDataType<T>::Type(), but received dtype():15 != phi::CppTypeToDataType<T>::Type():10.] (at ../paddle/phi/core/dense_tensor.cc:153)


2025-06-09 22:06:18.217655 GPU 7 93160 test begin: paddle.vision.ops.deform_conv2d(x=Tensor([4, 32, 64, 64],"float32"), offset=Tensor([4, 72, 64, 64],"float32"), weight=Tensor([32, 32, 3, 3],"float16"), bias=Tensor([32],"float16"), stride=list[1,1,], padding=list[1,1,], dilation=list[1,1,], deformable_groups=4, groups=1, mask=Tensor([4, 36, 64, 64],"float16"), )
[paddle error] paddle.vision.ops.deform_conv2d(x=Tensor([4, 32, 64, 64],"float32"), offset=Tensor([4, 72, 64, 64],"float32"), weight=Tensor([32, 32, 3, 3],"float16"), bias=Tensor([32],"float16"), stride=list[1,1,], padding=list[1,1,], dilation=list[1,1,], deformable_groups=4, groups=1, mask=Tensor([4, 36, 64, 64],"float16"), ) 
 (InvalidArgument) The type of data we are trying to retrieve (float32) does not match the type of data (float16) currently contained in the container.
  [Hint: Expected dtype() == phi::CppTypeToDataType<T>::Type(), but received dtype():15 != phi::CppTypeToDataType<T>::Type():10.] (at ../paddle/phi/core/dense_tensor.cc:153)


2025-06-09 22:06:19.118771 GPU 7 93163 test begin: paddle.vision.ops.deform_conv2d(x=Tensor([4, 32, 64, 64],"float32"), offset=Tensor([4, 72, 64, 64],"float32"), weight=Tensor([32, 32, 3, 3],"float16"), bias=Tensor([32],"float16"), stride=list[1,1,], padding=list[1,1,], dilation=list[1,1,], deformable_groups=4, groups=1, mask=Tensor([4, 36, 64, 64],"float32"), )
[paddle error] paddle.vision.ops.deform_conv2d(x=Tensor([4, 32, 64, 64],"float32"), offset=Tensor([4, 72, 64, 64],"float32"), weight=Tensor([32, 32, 3, 3],"float16"), bias=Tensor([32],"float16"), stride=list[1,1,], padding=list[1,1,], dilation=list[1,1,], deformable_groups=4, groups=1, mask=Tensor([4, 36, 64, 64],"float32"), ) 
 (InvalidArgument) The type of data we are trying to retrieve (float32) does not match the type of data (float16) currently contained in the container.
  [Hint: Expected dtype() == phi::CppTypeToDataType<T>::Type(), but received dtype():15 != phi::CppTypeToDataType<T>::Type():10.] (at ../paddle/phi/core/dense_tensor.cc:153)


2025-04-27 00:03:48.131154 test begin: paddle.Tensor.argsort(Tensor([2097152],"float32"), )
element 0 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.argsort(Tensor([2097152],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 42056 / 2097152 (2.01%)
Max absolute difference among violations: 2069909
Max relative difference among violations: 218699.33333333
ACTUAL: array([1360358,  962596, 1233478, ...,  979149,   25634, 1324964])
DESIRED: array([1360358,  962596, 1233478, ...,  979149,   25634, 1324964])
2025-04-27 00:03:48.862860 test begin: paddle.Tensor.argsort(Tensor([4, 22400],"float32"), axis=1, descending=True, )
element 0 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.argsort(Tensor([4, 22400],"float32"), axis=1, descending=True, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 20 / 89600 (0.0223%)
Max absolute difference among violations: 15310
Max relative difference among violations: 4.26343637
ACTUAL: array([[13423, 17652,  8074, ...,  3025,  9495,  7736],
[ 5409, 17757, 19949, ...,  3587, 20603, 16113],
[ 2169, 16932, 22178, ...,  6587, 14547, 11816],
[11217,  1886,  7966, ..., 16938,  2504, 11269]])
DESIRED: array([[13423, 17652,  8074, ...,  3025,  9495,  7736],
[ 5409, 17757, 19949, ...,  3587, 20603, 16113],
[ 2169, 16932, 22178, ...,  6587, 14547, 11816],
[11217,  1886,  7966, ..., 16938,  2504, 11269]])
2025-04-27 00:03:49.046985 test begin: paddle.Tensor.argsort(Tensor([4, 22400],"int64"), axis=1, )
element 0 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.argsort(Tensor([4, 22400],"int64"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 6945 / 89600 (7.75%)
Max absolute difference among violations: 21946
Max relative difference among violations: 1790.8
ACTUAL: array([[19511, 22202, 14029, ..., 15383, 11709, 14817],
[ 3918,  2617, 16140, ...,  5933,  3966, 17003],
[ 1340, 13980, 13802, ...,  1528,  2939,  9333],
[19363,   675, 22221, ..., 15222, 10019, 14305]])
DESIRED: array([[19511, 22202, 14029, ..., 15383, 11709, 14817],
[ 3918,  2617, 16140, ...,  5933,  3966, 17003],
[ 1340, 13980, 13802, ..., 13508,  2939,  9333],
[19363,   675, 22221, ..., 15222, 10019, 14305]])
2025-04-27 00:03:49.219621 test begin: paddle.Tensor.argsort(Tensor([4194304],"float32"), )
element 0 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.argsort(Tensor([4194304],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 166569 / 4194304 (3.97%)
Max absolute difference among violations: 4183696
Max relative difference among violations: 98988.93103448
ACTUAL: array([3712840, 3650000, 2497673, ..., 2178437, 1929673,  383172])
DESIRED: array([3712840, 3650000, 2497673, ..., 2178437, 1929673,  383172])
2025-04-27 00:04:58.579759 test begin: paddle.Tensor.cholesky_solve(x=Tensor([4, 1],"float32"), y=Tensor([4, 4],"float32"), )
[accuracy error] backward  paddle.Tensor.cholesky_solve(x=Tensor([4, 1],"float32"), y=Tensor([4, 4],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 6 / 16 (37.5%)
Max absolute difference among violations: 63.251324
Max relative difference among violations: 1.
ACTUAL: array([[   1.558253,    0.      ,    0.      ,    0.      ],
[  -0.335259,  -13.942763,    0.      ,    0.      ],
[  -1.035792,  -20.6457  ,  -88.84976 ,    0.      ],...
DESIRED: array([[   1.55826 ,    6.380728,   16.419611,  -41.154564],
[  -0.335251,  -13.942764,  -63.251324,  -46.36852 ],
[  -1.035797,  -20.645697,  -88.84973 ,  -44.711906],...
2025-04-27 00:04:58.813703 test begin: paddle.Tensor.cholesky_solve(x=Tensor([4, 1],"float64"), y=Tensor([4, 4],"float64"), )
[accuracy error] backward  paddle.Tensor.cholesky_solve(x=Tensor([4, 1],"float64"), y=Tensor([4, 4],"float64"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 6 / 16 (37.5%)
Max absolute difference among violations: 216.89674012
Max relative difference among violations: 1.
ACTUAL: array([[ 68.501427,   0.      ,   0.      ,   0.      ],
[-32.95105 ,  99.411086,   0.      ,   0.      ],
[ 32.164586,  13.379003,   3.433269,   0.      ],
[ 37.929322,  34.044123,  -6.421289, -36.956821]])
DESIRED: array([[  68.501427, -175.769176,  124.385191, -216.89674 ],
[ -32.95105 ,   99.411086,  -68.350444,  113.738575],
[  32.164586,   13.379003,    3.433269,  -41.14366 ],
[  37.929322,   34.044123,   -6.421289,  -36.956821]])
2025-04-27 00:04:58.966223 test begin: paddle.Tensor.cholesky_solve(x=Tensor([4, 3],"float64"), y=Tensor([4, 4],"float64"), )
[accuracy error] backward  paddle.Tensor.cholesky_solve(x=Tensor([4, 3],"float64"), y=Tensor([4, 4],"float64"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 6 / 16 (37.5%)
Max absolute difference among violations: 621.19630234
Max relative difference among violations: 1.
ACTUAL: array([[-84.125261,   0.      ,   0.      ,   0.      ],
[ -6.743824,  11.550201,   0.      ,   0.      ],
[-29.583558,  59.100027, 194.588419,   0.      ],
[-17.682056,  26.647904,  99.681249,  -2.931873]])
DESIRED: array([[-84.125261, 169.090519, 621.196302,  30.761263],
[ -6.743824,  11.550201,  70.756211,  -6.614004],
[-29.583558,  59.100027, 194.588419,  16.4599  ],
[-17.682056,  26.647904,  99.681249,  -2.931873]])
2025-04-27 00:04:59.120093 test begin: paddle.Tensor.cholesky_solve(x=Tensor([5, 2, 4, 3],"float64"), y=Tensor([5, 2, 4, 4],"float64"), )
[accuracy error] backward  paddle.Tensor.cholesky_solve(x=Tensor([5, 2, 4, 3],"float64"), y=Tensor([5, 2, 4, 4],"float64"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 60 / 160 (37.5%)
Max absolute difference among violations: 8.6310639e+08
Max relative difference among violations: 1.
ACTUAL: array([[[[-1.518425e+06,  0.000000e+00,  0.000000e+00,  0.000000e+00],
[ 5.462455e+04,  2.956952e+07,  0.000000e+00,  0.000000e+00],
[ 1.991019e+04,  1.077676e+07,  1.131648e+07,  0.000000e+00],...
DESIRED: array([[[[-1.518425e+06, -8.219420e+08, -8.631064e+08, -3.391778e+08],
[ 5.462455e+04,  2.956952e+07,  3.105041e+07,  1.220199e+07],
[ 1.991019e+04,  1.077676e+07,  1.131648e+07,  4.447075e+06],...
2025-04-27 00:04:59.285351 test begin: paddle.Tensor.cholesky_solve(x=Tensor([5, 2, 4, 3],"float64"), y=Tensor([5, 2, 4, 4],"float64"), upper=True, )
[accuracy error] backward  paddle.Tensor.cholesky_solve(x=Tensor([5, 2, 4, 3],"float64"), y=Tensor([5, 2, 4, 4],"float64"), upper=True, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 60 / 160 (37.5%)
Max absolute difference among violations: 1.8087761e+16
Max relative difference among violations: 1.
ACTUAL: array([[[[-3.033613e+04,  3.631561e+03,  2.885982e+03, -1.768201e+03],
[ 0.000000e+00,  1.744898e+06,  1.389506e+06, -8.493163e+05],
[ 0.000000e+00,  0.000000e+00, -5.246358e+05,  3.206750e+05],...
DESIRED: array([[[[-3.033613e+04,  3.631561e+03,  2.885982e+03, -1.768201e+03],
[-1.459205e+07,  1.744898e+06,  1.389506e+06, -8.493163e+05],
[ 5.509546e+06, -6.588229e+05, -5.246358e+05,  3.206750e+05],...
2025-04-27 00:04:59.437166 test begin: paddle.Tensor.cholesky_solve(x=Tensor([5, 4, 3],"float64"), y=Tensor([5, 4, 4],"float64"), )
[accuracy error] backward  paddle.Tensor.cholesky_solve(x=Tensor([5, 4, 3],"float64"), y=Tensor([5, 4, 4],"float64"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 30 / 80 (37.5%)
Max absolute difference among violations: 47652.50703995
Max relative difference among violations: 1.
ACTUAL: array([[[ 2.751852e+00,  0.000000e+00,  0.000000e+00,  0.000000e+00],
[-3.292291e+01,  1.789166e+02,  0.000000e+00,  0.000000e+00],
[ 7.358088e+01, -3.981070e+02,  1.298996e+03,  0.000000e+00],...
DESIRED: array([[[ 2.751852e+00, -2.374773e+01,  7.824679e+01,  1.933588e+02],
[-3.292291e+01,  1.789166e+02, -6.022527e+02, -1.641196e+03],
[ 7.358088e+01, -3.981070e+02,  1.298996e+03,  3.438936e+03],...
2025-04-27 03:43:19.375755 test begin: paddle.Tensor.fill_diagonal_(Tensor([3, 3],"float32"), 1, offset=2, wrap=True, )
[accuracy error] paddle.Tensor.fill_diagonal_(Tensor([3, 3],"float32"), 1, offset=2, wrap=True, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 4 / 9 (44.4%)
Max absolute difference among violations: 1.3625655
Max relative difference among violations: 4.3055415
ACTUAL: array([[-0.237473,  0.376778,  1.      ],
[ 0.247586,  0.155266, -0.091576],
[-0.26609 ,  0.128507, -0.362566]], dtype=float32)
DESIRED: array([[ 1.      ,  0.376778, -0.302522],
[ 0.247586,  1.      , -0.091576],
[-0.26609 ,  0.128507,  1.      ]], dtype=float32)
2025-04-27 03:43:19.583358 test begin: paddle.Tensor.fill_diagonal_(Tensor([3, 3],"float32"), 4, 1, False, )
[accuracy error] paddle.Tensor.fill_diagonal_(Tensor([3, 3],"float32"), 4, 1, False, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 5 / 9 (55.6%)
Max absolute difference among violations: 4.3468723
Max relative difference among violations: 55.080048
ACTUAL: array([[ 0.438234,  4.      , -0.434706],
[ 0.298504, -0.346872,  4.      ],
[ 0.061066,  0.484327, -0.049584]], dtype=float32)
DESIRED: array([[ 4.      ,  0.423311, -0.434706],
[ 0.298504,  4.      ,  0.071327],
[ 0.061066,  0.484327,  4.      ]], dtype=float32)
2025-04-27 03:43:20.260866 test begin: paddle.Tensor.fill_diagonal_(Tensor([3, 3],"float64"), 1, offset=2, wrap=True, )
[accuracy error] paddle.Tensor.fill_diagonal_(Tensor([3, 3],"float64"), 1, offset=2, wrap=True, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 4 / 9 (44.4%)
Max absolute difference among violations: 1.38719483
Max relative difference among violations: 41.64627649
ACTUAL: array([[-0.273387, -0.186274,  1.      ],
[-0.051259, -0.285893,  0.412113],
[-0.384819,  0.496127, -0.387195]])
DESIRED: array([[ 1.      , -0.186274, -0.024602],
[-0.051259,  1.      ,  0.412113],
[-0.384819,  0.496127,  1.      ]])
2025-04-27 03:43:20.466111 test begin: paddle.Tensor.fill_diagonal_(Tensor([3, 3],"float64"), 4, 1, False, )
[accuracy error] paddle.Tensor.fill_diagonal_(Tensor([3, 3],"float64"), 4, 1, False, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 5 / 9 (55.6%)
Max absolute difference among violations: 4.42670682
Max relative difference among violations: 18.03077507
ACTUAL: array([[ 0.197124,  4.      ,  0.27553 ],
[-0.136906, -0.321778,  4.      ],
[-0.211315, -0.492112, -0.426707]])
DESIRED: array([[ 4.      ,  0.210186,  0.27553 ],
[-0.136906,  4.      , -0.268263],
[-0.211315, -0.492112,  4.      ]])
2025-04-27 03:43:21.068347 test begin: paddle.Tensor.fill_diagonal_(Tensor([3, 3],"int32"), 1, offset=2, wrap=True, )
element 0 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.fill_diagonal_(Tensor([3, 3],"int32"), 1, offset=2, wrap=True, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 4 / 9 (44.4%)
Max absolute difference among violations: 64962
Max relative difference among violations: 64962.
ACTUAL: array([[-64961,  58277,      1],
[-23861,  59503, -41604],
[-14586, -16686, -64605]], dtype=int32)
DESIRED: array([[     1,  58277,  33437],
[-23861,      1, -41604],
[-14586, -16686,      1]], dtype=int32)
2025-04-27 03:43:21.216122 test begin: paddle.Tensor.fill_diagonal_(Tensor([3, 3],"int32"), 4, 1, False, )
element 0 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.fill_diagonal_(Tensor([3, 3],"int32"), 4, 1, False, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 5 / 9 (55.6%)
Max absolute difference among violations: 53774
Max relative difference among violations: 13443.5
ACTUAL: array([[-12349,      4,  56900],
[ 51893,  53778,      4],
[ 46394,  31965,  29262]], dtype=int32)
DESIRED: array([[     4, -41750,  56900],
[ 51893,      4,  44562],
[ 46394,  31965,      4]], dtype=int32)
2025-04-27 03:43:21.816870 test begin: paddle.Tensor.fill_diagonal_(Tensor([3, 3],"int64"), 1, offset=2, wrap=True, )
element 0 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.fill_diagonal_(Tensor([3, 3],"int64"), 1, offset=2, wrap=True, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 4 / 9 (44.4%)
Max absolute difference among violations: 55193
Max relative difference among violations: 55193.
ACTUAL: array([[ 36390, -29461,      1],
[  1878, -55192, -43836],
[ 31764, -29906, -35976]])
DESIRED: array([[     1, -29461,  30963],
[  1878,      1, -43836],
[ 31764, -29906,      1]])
2025-04-27 03:43:22.022722 test begin: paddle.Tensor.fill_diagonal_(Tensor([3, 3],"int64"), 4, 1, False, )
element 0 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.fill_diagonal_(Tensor([3, 3],"int64"), 4, 1, False, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 5 / 9 (55.6%)
Max absolute difference among violations: 56497
Max relative difference among violations: 14124.25
ACTUAL: array([[ 35553,      4, -38891],
[  5503,  56176,      4],
[-55505, -13188, -56493]])
DESIRED: array([[     4,  36433, -38891],
[  5503,      4,  -8847],
[-55505, -13188,      4]])
2025-04-27 05:04:37.754512 test begin: paddle.Tensor.logit(x=Tensor([4, 2],"float64"), )
[accuracy error] backward  paddle.Tensor.logit(x=Tensor([4, 2],"float64"), )
Not equal to tolerance rtol=0.01, atol=0.01
nan location mismatch:
ACTUAL: array([[ 0.      ,  0.      ],
[ 1.041895, -3.124673],
[-0.226129,  0.      ],
[ 0.      ,  1.813515]])
DESIRED: array([[      nan,       nan],
[ 1.041895, -3.124673],
[-0.226129,       nan],
[      nan,  1.813515]])
2025-04-27 05:04:37.965689 test begin: paddle.Tensor.logit(x=Tensor([4, 3, 2, 5],"float64"), )
[accuracy error] backward  paddle.Tensor.logit(x=Tensor([4, 3, 2, 5],"float64"), )
Not equal to tolerance rtol=0.01, atol=0.01
nan location mismatch:
ACTUAL: array([[[[ 2.473833e-01,  0.000000e+00,  2.707482e+00,  0.000000e+00,
0.000000e+00],
[-6.354895e-01,  0.000000e+00, -1.828153e+00,  0.000000e+00,...
DESIRED: array([[[[ 2.473833e-01,           nan,  2.707482e+00,           nan,
nan],
[-6.354895e-01,           nan, -1.828153e+00,           nan,...
2025-04-27 05:04:38.329305 test begin: paddle.Tensor.logit(x=Tensor([4, 3, 2],"float64"), )
[accuracy error] backward  paddle.Tensor.logit(x=Tensor([4, 3, 2],"float64"), )
Not equal to tolerance rtol=0.01, atol=0.01
nan location mismatch:
ACTUAL: array([[[ 2.849518,  1.886942],
[64.62069 ,  0.      ],
[-1.013883,  1.98491 ]],...
DESIRED: array([[[ 2.849518,  1.886942],
[64.62069 ,       nan],
[-1.013883,  1.98491 ]],...
2025-04-27 05:04:38.505170 test begin: paddle.Tensor.logit(x=Tensor([4],"float32"), )
[accuracy error] backward  paddle.Tensor.logit(x=Tensor([4],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
nan location mismatch:
ACTUAL: array([ 0.      ,  0.      , -1.415163,  3.809534], dtype=float32)
DESIRED: array([      nan,       nan, -1.415163,  3.809534], dtype=float32)
2025-04-27 05:04:38.697791 test begin: paddle.Tensor.logit(x=Tensor([4],"float64"), )
[accuracy error] backward  paddle.Tensor.logit(x=Tensor([4],"float64"), )
Not equal to tolerance rtol=0.01, atol=0.01
nan location mismatch:
ACTUAL: array([0.      , 0.110388, 0.      , 0.      ])
DESIRED: array([     nan, 0.110388,      nan,      nan])
2025-04-27 05:56:29.332286 test begin: paddle.Tensor.median(Tensor([1000, 784],"float32"), )
[accuracy error] backward  paddle.Tensor.median(Tensor([1000, 784],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2 / 784000 (0.000255%)
Max absolute difference among violations: 0.12393778
Max relative difference among violations: 0.5
ACTUAL: array([[0., 0., 0., ..., 0., 0., 0.],
[0., 0., 0., ..., 0., 0., 0.],
[0., 0., 0., ..., 0., 0., 0.],...
DESIRED: array([[-0., -0., -0., ..., -0., -0., -0.],
[-0., -0., -0., ..., -0., -0., -0.],
[-0., -0., -0., ..., -0., -0., -0.],...
2025-04-27 06:23:03.177745 test begin: paddle.Tensor.set_(Tensor([3, 8],"float16"), Tensor([6, 3],"float16"), list[3,8,], list[2,2,], 0, )
One of the differentiated Tensors appears to not have been used in the graph. Set allow_unused=True if this is the desired behavior.
[accuracy error] paddle.Tensor.set_(Tensor([3, 8],"float16"), Tensor([6, 3],"float16"), list[3,8,], list[2,2,], 0, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 24 (4.17%)
Max absolute difference among violations: 39232.
Max relative difference among violations: inf
ACTUAL: array([[ 7.324e-02, -1.863e-01, -3.523e-01, -4.985e-01, -3.145e-01,
4.390e-01, -2.793e-01,  4.314e-01],
[-1.863e-01, -3.523e-01, -4.985e-01, -3.145e-01,  4.390e-01,...
DESIRED: array([[ 0.07324, -0.1863 , -0.3523 , -0.4985 , -0.3145 ,  0.439  ,
-0.2793 ,  0.4314 ],
[-0.1863 , -0.3523 , -0.4985 , -0.3145 ,  0.439  , -0.2793 ,...
2025-04-27 14:30:27.718851 test begin: paddle.add_n(list[Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),], )
[accuracy error] paddle.add_n(list[Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),], )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 18 / 4096 (0.439%)
Max absolute difference among violations: 0.02295
Max relative difference among violations: 2.227
ACTUAL: array([[-0.673  ,  0.9497 ,  1.739  , ...,  0.3157 , -1.98   , -2.697  ],
[-0.7095 , -0.11255,  0.8096 , ..., -0.5903 ,  1.035  ,  2.334  ],
[ 0.4895 , -1.178  ,  0.4705 , ..., -0.1296 , -0.509  ,  0.271  ],...
DESIRED: array([[-0.674 ,  0.9517,  1.748 , ...,  0.312 , -1.997 , -2.717 ],
[-0.714 , -0.1168,  0.815 , ..., -0.594 ,  1.035 ,  2.346 ],
[ 0.4885, -1.179 ,  0.4697, ..., -0.1287, -0.5137,  0.2764],...
2025-04-27 14:30:27.868721 test begin: paddle.add_n(list[Tensor([16, 256],"float32"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),], )
[paddle error] paddle.add_n(list[Tensor([16, 256],"float32"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),], )
(InvalidArgument) The type of data we are trying to retrieve (float32) does not match the type of data (float16) currently contained in the container.
[Hint: Expected dtype() == phi::CppTypeToDataType<T>::Type(), but received dtype():15 != phi::CppTypeToDataType<T>::Type():10.] (at /paddle/paddle/phi/core/dense_tensor.cc:153)
2025-04-27 14:31:55.223198 test begin: paddle.cumprod(x=Tensor([3, 4],"int32"), dim=0, )
element 0 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.cumprod(x=Tensor([3, 4],"int32"), dim=0, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 6 / 12 (50%)
Max absolute difference among violations: 210702505607168
Max relative difference among violations: 1.58955651
ACTUAL: array([[     -22210,      -15706,       45485,       59830],
[  204043270,  -103800954, -1592976356,   606746946],
[ 1026309882, -1935501304,   953110940, -1834767982]], dtype=int32)
DESIRED: array([[          -22210,           -15706,            45485,
59830],
[       204043270,       -103800954,       2701990940,...
2025-04-27 00:45:31.658341 test begin: paddle.Tensor.sum(Tensor([104, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([104, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.02637
Max relative difference among violations: 0.02849
ACTUAL: array(0.8994, dtype=float16)
DESIRED: array(0.926, dtype=float16)
2025-04-27 00:45:48.292338 test begin: paddle.Tensor.sum(Tensor([105, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([105, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.0742
Max relative difference among violations: 0.03284
ACTUAL: array(2.186, dtype=float16)
DESIRED: array(2.26, dtype=float16)
2025-04-27 00:46:34.850493 test begin: paddle.Tensor.sum(Tensor([108, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([108, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.0327
Max relative difference among violations: 0.0357
ACTUAL: array(0.884, dtype=float16)
DESIRED: array(0.9165, dtype=float16)
2025-04-27 00:47:33.038531 test begin: paddle.Tensor.sum(Tensor([110, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([110, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.05212
Max relative difference among violations: 1.115
ACTUAL: array(-0.0989, dtype=float16)
DESIRED: array(-0.04675, dtype=float16)
2025-04-27 00:47:52.672244 test begin: paddle.Tensor.sum(Tensor([111, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([111, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.09766
Max relative difference among violations: 0.02226
ACTUAL: array(-4.29, dtype=float16)
DESIRED: array(-4.387, dtype=float16)
2025-04-27 00:48:07.264332 test begin: paddle.Tensor.sum(Tensor([112, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([112, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.06445
Max relative difference among violations: 0.02393
ACTUAL: array(-2.629, dtype=float16)
DESIRED: array(-2.693, dtype=float16)
2025-04-27 00:48:54.677598 test begin: paddle.Tensor.sum(Tensor([115, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([115, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.0625
Max relative difference among violations: 0.01432
ACTUAL: array(-4.3, dtype=float16)
DESIRED: array(-4.363, dtype=float16)
2025-04-27 00:49:10.011001 test begin: paddle.Tensor.sum(Tensor([116, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([116, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.0762
Max relative difference among violations: 0.02078
ACTUAL: array(-3.59, dtype=float16)
DESIRED: array(-3.666, dtype=float16)
2025-04-27 00:49:24.600953 test begin: paddle.Tensor.sum(Tensor([117, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([117, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.04688
Max relative difference among violations: 0.0184
ACTUAL: array(-2.5, dtype=float16)
DESIRED: array(-2.547, dtype=float16)
2025-04-27 00:49:51.061279 test begin: paddle.Tensor.sum(Tensor([119, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([119, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.05273
Max relative difference among violations: 0.0162
ACTUAL: array(3.201, dtype=float16)
DESIRED: array(3.254, dtype=float16)
2025-04-27 00:50:37.124829 test begin: paddle.Tensor.sum(Tensor([120, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([120, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.01721
Max relative difference among violations: 0.08795
ACTUAL: array(-0.1785, dtype=float16)
DESIRED: array(-0.1957, dtype=float16)
2025-04-27 00:51:09.640732 test begin: paddle.Tensor.sum(Tensor([122, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([122, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.02832
Max relative difference among violations: 0.04715
ACTUAL: array(-0.629, dtype=float16)
DESIRED: array(-0.6006, dtype=float16)
2025-04-27 00:51:43.232178 test begin: paddle.Tensor.sum(Tensor([124, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([124, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.12305
Max relative difference among violations: 0.04425
ACTUAL: array(-2.658, dtype=float16)
DESIRED: array(-2.781, dtype=float16)
2025-04-27 00:52:56.756515 test begin: paddle.Tensor.sum(Tensor([129, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([129, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.0586
Max relative difference among violations: 0.02066
ACTUAL: array(2.777, dtype=float16)
DESIRED: array(2.836, dtype=float16)
2025-04-27 00:54:08.055970 test begin: paddle.Tensor.sum(Tensor([132, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([132, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.0781
Max relative difference among violations: 0.01698
ACTUAL: array(4.523, dtype=float16)
DESIRED: array(4.6, dtype=float16)
2025-04-27 00:54:33.134039 test begin: paddle.Tensor.sum(Tensor([134, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([134, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.1445
Max relative difference among violations: 0.0217
ACTUAL: array(-6.516, dtype=float16)
DESIRED: array(-6.66, dtype=float16)
2025-04-27 00:54:47.270359 test begin: paddle.Tensor.sum(Tensor([135, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([135, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.1172
Max relative difference among violations: 0.06256
ACTUAL: array(-1.757, dtype=float16)
DESIRED: array(-1.874, dtype=float16)
2025-04-27 00:54:58.953046 test begin: paddle.Tensor.sum(Tensor([136, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([136, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.02246
Max relative difference among violations: 0.0366
ACTUAL: array(0.636, dtype=float16)
DESIRED: array(0.614, dtype=float16)
2025-04-27 00:55:21.472144 test begin: paddle.Tensor.sum(Tensor([137, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([137, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.08594
Max relative difference among violations: 0.03041
ACTUAL: array(-2.74, dtype=float16)
DESIRED: array(-2.826, dtype=float16)
2025-04-27 00:56:24.071087 test begin: paddle.Tensor.sum(Tensor([140, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([140, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.07227
Max relative difference among violations: 0.0624
ACTUAL: array(-1.086, dtype=float16)
DESIRED: array(-1.158, dtype=float16)
2025-04-27 00:56:52.342187 test begin: paddle.Tensor.sum(Tensor([142, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([142, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.042
Max relative difference among violations: 0.02737
ACTUAL: array(-1.492, dtype=float16)
DESIRED: array(-1.534, dtype=float16)
2025-04-27 00:57:06.915453 test begin: paddle.Tensor.sum(Tensor([143, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([143, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.1562
Max relative difference among violations: 0.03026
ACTUAL: array(-5.008, dtype=float16)
DESIRED: array(-5.164, dtype=float16)
2025-04-27 00:57:33.629754 test begin: paddle.Tensor.sum(Tensor([145, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([145, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.1328
Max relative difference among violations: 0.02911
ACTUAL: array(4.43, dtype=float16)
DESIRED: array(4.562, dtype=float16)
2025-04-27 00:57:58.746085 test begin: paddle.Tensor.sum(Tensor([147, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([147, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.06494
Max relative difference among violations: 0.1401
ACTUAL: array(0.5283, dtype=float16)
DESIRED: array(0.4634, dtype=float16)
2025-04-27 00:58:09.846319 test begin: paddle.Tensor.sum(Tensor([148, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([148, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.05518
Max relative difference among violations: 0.4265
ACTUAL: array(0.0742, dtype=float16)
DESIRED: array(0.1294, dtype=float16)
2025-04-27 00:58:56.453191 test begin: paddle.Tensor.sum(Tensor([150, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([150, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.09375
Max relative difference among violations: 0.01515
ACTUAL: array(-6.094, dtype=float16)
DESIRED: array(-6.188, dtype=float16)
2025-04-27 00:59:11.646350 test begin: paddle.Tensor.sum(Tensor([151, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([151, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.0703
Max relative difference among violations: 0.02708
ACTUAL: array(-2.525, dtype=float16)
DESIRED: array(-2.596, dtype=float16)
2025-04-27 00:59:23.319793 test begin: paddle.Tensor.sum(Tensor([152, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([152, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.0664
Max relative difference among violations: 0.01598
ACTUAL: array(4.09, dtype=float16)
DESIRED: array(4.156, dtype=float16)
2025-04-27 00:59:35.470638 test begin: paddle.Tensor.sum(Tensor([153, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([153, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.0664
Max relative difference among violations: 0.014694
ACTUAL: array(4.453, dtype=float16)
DESIRED: array(4.52, dtype=float16)
2025-04-27 00:59:58.765579 test begin: paddle.Tensor.sum(Tensor([155, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([155, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.09033
Max relative difference among violations: 0.1571
ACTUAL: array(0.4849, dtype=float16)
DESIRED: array(0.575, dtype=float16)
2025-04-27 01:00:11.444204 test begin: paddle.Tensor.sum(Tensor([156, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([156, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.06055
Max relative difference among violations: 0.01616
ACTUAL: array(3.686, dtype=float16)
DESIRED: array(3.746, dtype=float16)
2025-04-27 01:00:21.570410 test begin: paddle.Tensor.sum(Tensor([157, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([157, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.1992
Max relative difference among violations: 0.02747
ACTUAL: array(7.055, dtype=float16)
DESIRED: array(7.254, dtype=float16)
2025-04-27 01:00:30.749763 test begin: paddle.Tensor.sum(Tensor([158, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([158, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.1309
Max relative difference among violations: 0.03772
ACTUAL: array(3.338, dtype=float16)
DESIRED: array(3.469, dtype=float16)
2025-04-27 01:00:41.689216 test begin: paddle.Tensor.sum(Tensor([159, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([159, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.1445
Max relative difference among violations: 0.02386
ACTUAL: array(-5.91, dtype=float16)
DESIRED: array(-6.055, dtype=float16)
2025-04-27 01:13:40.131939 test begin: paddle.Tensor.sum(Tensor([160, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([160, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.01837
Max relative difference among violations: 0.1667
ACTUAL: array(0.0918, dtype=float16)
DESIRED: array(0.11017, dtype=float16)
2025-04-27 01:13:52.572068 test begin: paddle.Tensor.sum(Tensor([161, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([161, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.09766
Max relative difference among violations: 0.04205
ACTUAL: array(2.225, dtype=float16)
DESIRED: array(2.322, dtype=float16)
2025-04-27 01:14:03.454190 test begin: paddle.Tensor.sum(Tensor([162, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([162, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.0547
Max relative difference among violations: 0.01949
ACTUAL: array(2.752, dtype=float16)
DESIRED: array(2.807, dtype=float16)
2025-04-27 01:14:14.639444 test begin: paddle.Tensor.sum(Tensor([163, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([163, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.083
Max relative difference among violations: 0.06192
ACTUAL: array(1.258, dtype=float16)
DESIRED: array(1.341, dtype=float16)
2025-04-27 01:14:25.322714 test begin: paddle.Tensor.sum(Tensor([164, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([164, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.2383
Max relative difference among violations: 0.05292
ACTUAL: array(4.266, dtype=float16)
DESIRED: array(4.504, dtype=float16)
2025-04-27 01:14:38.488312 test begin: paddle.Tensor.sum(Tensor([165, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([165, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.2031
Max relative difference among violations: 0.0429
ACTUAL: array(-4.53, dtype=float16)
DESIRED: array(-4.734, dtype=float16)
2025-04-27 01:14:51.200895 test begin: paddle.Tensor.sum(Tensor([166, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([166, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.0649
Max relative difference among violations: 0.687
ACTUAL: array(-0.02954, dtype=float16)
DESIRED: array(-0.0944, dtype=float16)
2025-04-27 01:15:09.781140 test begin: paddle.Tensor.sum(Tensor([167, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([167, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.10547
Max relative difference among violations: 0.0242
ACTUAL: array(4.254, dtype=float16)
DESIRED: array(4.36, dtype=float16)
2025-04-27 01:15:20.267155 test begin: paddle.Tensor.sum(Tensor([168, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([168, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.09375
Max relative difference among violations: 0.02538
ACTUAL: array(3.602, dtype=float16)
DESIRED: array(3.695, dtype=float16)
2025-04-27 01:15:31.542977 test begin: paddle.Tensor.sum(Tensor([169, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([169, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.1992
Max relative difference among violations: 0.2146
ACTUAL: array(0.729, dtype=float16)
DESIRED: array(0.928, dtype=float16)
2025-04-27 01:16:05.170855 test begin: paddle.Tensor.sum(Tensor([170, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([170, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.02979
Max relative difference among violations: 0.0719
ACTUAL: array(-0.3845, dtype=float16)
DESIRED: array(-0.4143, dtype=float16)
2025-04-27 01:16:16.718924 test begin: paddle.Tensor.sum(Tensor([171, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([171, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.03613
Max relative difference among violations: 0.0525
ACTUAL: array(0.6523, dtype=float16)
DESIRED: array(0.6885, dtype=float16)
2025-04-27 01:16:26.966429 test begin: paddle.Tensor.sum(Tensor([172, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([172, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.09436
Max relative difference among violations: 1.762
ACTUAL: array(-0.148, dtype=float16)
DESIRED: array(-0.05356, dtype=float16)
2025-04-27 01:16:47.585992 test begin: paddle.Tensor.sum(Tensor([173, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([173, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.0742
Max relative difference among violations: 0.02171
ACTUAL: array(3.344, dtype=float16)
DESIRED: array(3.418, dtype=float16)
2025-04-27 01:16:58.089359 test begin: paddle.Tensor.sum(Tensor([174, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([174, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.11914
Max relative difference among violations: 0.0408
ACTUAL: array(2.8, dtype=float16)
DESIRED: array(2.92, dtype=float16)
2025-04-27 01:17:12.049121 test begin: paddle.Tensor.sum(Tensor([175, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([175, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.04004
Max relative difference among violations: 0.03622
ACTUAL: array(-1.065, dtype=float16)
DESIRED: array(-1.105, dtype=float16)
2025-04-27 01:17:26.829096 test begin: paddle.Tensor.sum(Tensor([176, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([176, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.03662
Max relative difference among violations: 0.0436
ACTUAL: array(0.8765, dtype=float16)
DESIRED: array(0.84, dtype=float16)
2025-04-27 01:17:48.214328 test begin: paddle.Tensor.sum(Tensor([178, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([178, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.1406
Max relative difference among violations: 0.0219
ACTUAL: array(-6.28, dtype=float16)
DESIRED: array(-6.42, dtype=float16)
2025-04-27 01:18:00.462329 test begin: paddle.Tensor.sum(Tensor([179, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([179, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.0625
Max relative difference among violations: 0.02252
ACTUAL: array(-2.713, dtype=float16)
DESIRED: array(-2.775, dtype=float16)
2025-04-27 01:18:38.345213 test begin: paddle.Tensor.sum(Tensor([180, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([180, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.2266
Max relative difference among violations: 0.03836
ACTUAL: array(-5.68, dtype=float16)
DESIRED: array(-5.906, dtype=float16)
2025-04-27 01:18:50.582997 test begin: paddle.Tensor.sum(Tensor([181, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([181, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.1172
Max relative difference among violations: 0.0275
ACTUAL: array(4.145, dtype=float16)
DESIRED: array(4.26, dtype=float16)
2025-04-27 01:19:01.753577 test begin: paddle.Tensor.sum(Tensor([182, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([182, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.1172
Max relative difference among violations: 0.03976
ACTUAL: array(-2.83, dtype=float16)
DESIRED: array(-2.947, dtype=float16)
2025-04-27 01:19:24.047484 test begin: paddle.Tensor.sum(Tensor([184, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([184, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.11426
Max relative difference among violations: 0.05847
ACTUAL: array(-1.84, dtype=float16)
DESIRED: array(-1.954, dtype=float16)
2025-04-27 01:19:34.036685 test begin: paddle.Tensor.sum(Tensor([184832, 68],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([184832, 68],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 10.25
Max relative difference among violations: 0.02255
ACTUAL: array(-464.8, dtype=float16)
DESIRED: array(-454.5, dtype=float16)
2025-04-27 01:19:37.654128 test begin: paddle.Tensor.sum(Tensor([185, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([185, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.2109
Max relative difference among violations: 0.0346
ACTUAL: array(-5.883, dtype=float16)
DESIRED: array(-6.094, dtype=float16)
2025-04-27 01:19:57.152366 test begin: paddle.Tensor.sum(Tensor([187, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([187, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.2344
Max relative difference among violations: 0.04303
ACTUAL: array(-5.21, dtype=float16)
DESIRED: array(-5.445, dtype=float16)
2025-04-27 01:20:06.158312 test begin: paddle.Tensor.sum(Tensor([188, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([188, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.3555
Max relative difference among violations: 0.0629
ACTUAL: array(-5.293, dtype=float16)
DESIRED: array(-5.65, dtype=float16)
2025-04-27 01:20:18.738489 test begin: paddle.Tensor.sum(Tensor([189, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([189, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.125
Max relative difference among violations: 0.01994
ACTUAL: array(6.145, dtype=float16)
DESIRED: array(6.27, dtype=float16)
2025-04-27 01:20:47.817453 test begin: paddle.Tensor.sum(Tensor([190, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([190, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.1953
Max relative difference among violations: 0.0788
ACTUAL: array(-2.283, dtype=float16)
DESIRED: array(-2.479, dtype=float16)
2025-04-27 01:20:59.278482 test begin: paddle.Tensor.sum(Tensor([191, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([191, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.1045
Max relative difference among violations: 0.0503
ACTUAL: array(-1.974, dtype=float16)
DESIRED: array(-2.078, dtype=float16)
2025-04-27 01:21:27.740408 test begin: paddle.Tensor.sum(Tensor([193, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([193, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.10254
Max relative difference among violations: 0.05737
ACTUAL: array(1.685, dtype=float16)
DESIRED: array(1.787, dtype=float16)
2025-04-27 01:21:38.354754 test begin: paddle.Tensor.sum(Tensor([194, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([194, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.1621
Max relative difference among violations: 0.0485
ACTUAL: array(3.182, dtype=float16)
DESIRED: array(3.344, dtype=float16)
2025-04-27 01:21:52.028549 test begin: paddle.Tensor.sum(Tensor([195, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([195, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.2344
Max relative difference among violations: 0.05536
ACTUAL: array(-4., dtype=float16)
DESIRED: array(-4.234, dtype=float16)
2025-04-27 01:22:03.960829 test begin: paddle.Tensor.sum(Tensor([196, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([196, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.1797
Max relative difference among violations: 0.02837
ACTUAL: array(6.156, dtype=float16)
DESIRED: array(6.336, dtype=float16)
2025-04-27 01:22:12.945718 test begin: paddle.Tensor.sum(Tensor([197, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([197, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.06445
Max relative difference among violations: 0.0466
ACTUAL: array(-1.318, dtype=float16)
DESIRED: array(-1.383, dtype=float16)
2025-04-27 01:22:30.265068 test begin: paddle.Tensor.sum(Tensor([199, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([199, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.0801
Max relative difference among violations: 0.01964
ACTUAL: array(3.998, dtype=float16)
DESIRED: array(4.08, dtype=float16)
2025-04-27 01:44:38.192313 test begin: paddle.Tensor.sum(Tensor([2, 64, 768],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([2, 64, 768],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 1.543
Max relative difference among violations: 0.397
ACTUAL: array(-2.344, dtype=float16)
DESIRED: array(-3.887, dtype=float16)
2025-04-27 01:50:39.616724 test begin: paddle.Tensor.sum(Tensor([20, 500, 2],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([20, 500, 2],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 5.47
Max relative difference among violations: 0.1055
ACTUAL: array(-46.34, dtype=float16)
DESIRED: array(-51.8, dtype=float16)
2025-04-27 01:50:39.992171 test begin: paddle.Tensor.sum(Tensor([20, 500, 4],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([20, 500, 4],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 2.553
Max relative difference among violations: 1.005
ACTUAL: array(5.094, dtype=float16)
DESIRED: array(2.541, dtype=float16)
2025-04-27 01:50:42.842131 test begin: paddle.Tensor.sum(Tensor([200, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([200, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.0742
Max relative difference among violations: 0.01926
ACTUAL: array(-3.781, dtype=float16)
DESIRED: array(-3.855, dtype=float16)
2025-04-27 01:50:55.120999 test begin: paddle.Tensor.sum(Tensor([201, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([201, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.1387
Max relative difference among violations: 0.04565
ACTUAL: array(2.898, dtype=float16)
DESIRED: array(3.037, dtype=float16)
2025-04-27 01:51:03.806738 test begin: paddle.Tensor.sum(Tensor([202, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([202, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.0762
Max relative difference among violations: 0.0359
ACTUAL: array(2.047, dtype=float16)
DESIRED: array(2.123, dtype=float16)
2025-04-27 01:51:13.733683 test begin: paddle.Tensor.sum(Tensor([203, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([203, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.1445
Max relative difference among violations: 0.03375
ACTUAL: array(-4.137, dtype=float16)
DESIRED: array(-4.28, dtype=float16)
2025-04-27 01:51:20.637087 test begin: paddle.Tensor.sum(Tensor([204, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([204, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.05273
Max relative difference among violations: 0.04822
ACTUAL: array(-1.041, dtype=float16)
DESIRED: array(-1.094, dtype=float16)
2025-04-27 01:51:33.978646 test begin: paddle.Tensor.sum(Tensor([205, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([205, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.2969
Max relative difference among violations: 0.0425
ACTUAL: array(6.688, dtype=float16)
DESIRED: array(6.984, dtype=float16)
2025-04-27 01:51:43.207720 test begin: paddle.Tensor.sum(Tensor([206, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([206, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.125
Max relative difference among violations: 0.01411
ACTUAL: array(-8.734, dtype=float16)
DESIRED: array(-8.86, dtype=float16)
2025-04-27 01:51:52.388388 test begin: paddle.Tensor.sum(Tensor([207, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([207, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.1992
Max relative difference among violations: 0.02687
ACTUAL: array(7.215, dtype=float16)
DESIRED: array(7.414, dtype=float16)
2025-04-27 01:52:03.522914 test begin: paddle.Tensor.sum(Tensor([208, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([208, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.3125
Max relative difference among violations: 0.04153
ACTUAL: array(-7.21, dtype=float16)
DESIRED: array(-7.523, dtype=float16)
2025-04-27 01:52:12.682720 test begin: paddle.Tensor.sum(Tensor([209, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([209, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.1641
Max relative difference among violations: 0.02925
ACTUAL: array(-5.445, dtype=float16)
DESIRED: array(-5.61, dtype=float16)
2025-04-27 01:52:35.688399 test begin: paddle.Tensor.sum(Tensor([210, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([210, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.0928
Max relative difference among violations: 0.0589
ACTUAL: array(-1.482, dtype=float16)
DESIRED: array(-1.575, dtype=float16)
2025-04-27 01:52:57.262561 test begin: paddle.Tensor.sum(Tensor([212, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([212, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.1602
Max relative difference among violations: 0.03665
ACTUAL: array(4.21, dtype=float16)
DESIRED: array(4.37, dtype=float16)
2025-04-27 01:53:13.747541 test begin: paddle.Tensor.sum(Tensor([213, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([213, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.25
Max relative difference among violations: 0.0517
ACTUAL: array(4.586, dtype=float16)
DESIRED: array(4.836, dtype=float16)
2025-04-27 01:53:21.375707 test begin: paddle.Tensor.sum(Tensor([214, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([214, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.084
Max relative difference among violations: 0.04572
ACTUAL: array(-1.753, dtype=float16)
DESIRED: array(-1.837, dtype=float16)
2025-04-27 01:53:30.562532 test begin: paddle.Tensor.sum(Tensor([215, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([215, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.04883
Max relative difference among violations: 0.04932
ACTUAL: array(1.039, dtype=float16)
DESIRED: array(0.99, dtype=float16)
2025-04-27 01:53:49.802657 test begin: paddle.Tensor.sum(Tensor([217, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([217, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.1562
Max relative difference among violations: 0.03842
ACTUAL: array(-3.91, dtype=float16)
DESIRED: array(-4.066, dtype=float16)
2025-04-27 01:54:05.294687 test begin: paddle.Tensor.sum(Tensor([219, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([219, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.2695
Max relative difference among violations: 0.09155
ACTUAL: array(-2.674, dtype=float16)
DESIRED: array(-2.943, dtype=float16)
2025-04-27 01:54:27.248024 test begin: paddle.Tensor.sum(Tensor([220, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([220, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.1465
Max relative difference among violations: 0.05634
ACTUAL: array(-2.453, dtype=float16)
DESIRED: array(-2.6, dtype=float16)
2025-04-27 01:54:38.530936 test begin: paddle.Tensor.sum(Tensor([221, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([221, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.1377
Max relative difference among violations: 0.0831
ACTUAL: array(1.519, dtype=float16)
DESIRED: array(1.656, dtype=float16)
2025-04-27 01:54:45.123919 test begin: paddle.Tensor.sum(Tensor([222, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([222, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.1758
Max relative difference among violations: 0.03366
ACTUAL: array(5.047, dtype=float16)
DESIRED: array(5.223, dtype=float16)
2025-04-27 01:54:52.950176 test begin: paddle.Tensor.sum(Tensor([223, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([223, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.2344
Max relative difference among violations: 0.0822
ACTUAL: array(2.617, dtype=float16)
DESIRED: array(2.852, dtype=float16)
2025-04-27 01:55:01.204841 test begin: paddle.Tensor.sum(Tensor([224, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([224, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.1074
Max relative difference among violations: 0.04773
ACTUAL: array(-2.143, dtype=float16)
DESIRED: array(-2.25, dtype=float16)
2025-04-27 01:55:11.271705 test begin: paddle.Tensor.sum(Tensor([225, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([225, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.1367
Max relative difference among violations: 0.02458
ACTUAL: array(5.426, dtype=float16)
DESIRED: array(5.562, dtype=float16)
2025-04-27 01:55:48.512863 test begin: paddle.Tensor.sum(Tensor([229, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([229, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.3281
Max relative difference among violations: 0.05118
ACTUAL: array(6.082, dtype=float16)
DESIRED: array(6.41, dtype=float16)
2025-04-27 01:56:06.873929 test begin: paddle.Tensor.sum(Tensor([230, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([230, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.2129
Max relative difference among violations: 0.0934
ACTUAL: array(2.066, dtype=float16)
DESIRED: array(2.28, dtype=float16)
2025-04-27 01:56:15.467150 test begin: paddle.Tensor.sum(Tensor([231, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([231, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.1445
Max relative difference among violations: 0.0268
ACTUAL: array(5.25, dtype=float16)
DESIRED: array(5.395, dtype=float16)
2025-04-27 01:56:22.440852 test begin: paddle.Tensor.sum(Tensor([232, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([232, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.1719
Max relative difference among violations: 0.02203
ACTUAL: array(-7.63, dtype=float16)
DESIRED: array(-7.8, dtype=float16)
2025-04-27 01:56:30.911925 test begin: paddle.Tensor.sum(Tensor([233, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([233, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.1035
Max relative difference among violations: 0.03014
ACTUAL: array(-3.332, dtype=float16)
DESIRED: array(-3.436, dtype=float16)
2025-04-27 01:56:38.782453 test begin: paddle.Tensor.sum(Tensor([234, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([234, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.2383
Max relative difference among violations: 0.0456
ACTUAL: array(4.99, dtype=float16)
DESIRED: array(5.227, dtype=float16)
2025-04-27 01:56:47.401899 test begin: paddle.Tensor.sum(Tensor([235, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([235, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.2383
Max relative difference among violations: 0.03296
ACTUAL: array(6.992, dtype=float16)
DESIRED: array(7.23, dtype=float16)
2025-04-27 01:56:55.718779 test begin: paddle.Tensor.sum(Tensor([236, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([236, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.3047
Max relative difference among violations: 0.03812
ACTUAL: array(7.69, dtype=float16)
DESIRED: array(7.996, dtype=float16)
2025-04-27 01:57:13.903827 test begin: paddle.Tensor.sum(Tensor([238, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([238, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.03613
Max relative difference among violations: 0.03247
ACTUAL: array(1.077, dtype=float16)
DESIRED: array(1.113, dtype=float16)
2025-04-27 01:57:23.043786 test begin: paddle.Tensor.sum(Tensor([239, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([239, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.1953
Max relative difference among violations: 0.0757
ACTUAL: array(2.385, dtype=float16)
DESIRED: array(2.58, dtype=float16)
2025-04-27 01:57:40.115734 test begin: paddle.Tensor.sum(Tensor([240, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([240, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.1504
Max relative difference among violations: 0.0641
ACTUAL: array(2.195, dtype=float16)
DESIRED: array(2.346, dtype=float16)
2025-04-27 01:57:48.322576 test begin: paddle.Tensor.sum(Tensor([241, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([241, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.0654
Max relative difference among violations: 0.05682
ACTUAL: array(-1.086, dtype=float16)
DESIRED: array(-1.151, dtype=float16)
2025-04-27 01:57:57.545623 test begin: paddle.Tensor.sum(Tensor([242, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([242, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.2461
Max relative difference among violations: 0.03967
ACTUAL: array(-5.957, dtype=float16)
DESIRED: array(-6.203, dtype=float16)
2025-04-27 01:58:09.063661 test begin: paddle.Tensor.sum(Tensor([243, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([243, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.293
Max relative difference among violations: 0.04132
ACTUAL: array(6.797, dtype=float16)
DESIRED: array(7.09, dtype=float16)
2025-04-27 01:58:17.272108 test begin: paddle.Tensor.sum(Tensor([244, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([244, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.1914
Max relative difference among violations: 0.05377
ACTUAL: array(-3.37, dtype=float16)
DESIRED: array(-3.56, dtype=float16)
2025-04-27 01:58:25.032491 test begin: paddle.Tensor.sum(Tensor([245, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([245, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.248
Max relative difference among violations: 0.08307
ACTUAL: array(2.738, dtype=float16)
DESIRED: array(2.986, dtype=float16)
2025-04-27 01:58:41.944490 test begin: paddle.Tensor.sum(Tensor([246, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([246, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.02832
Max relative difference among violations: 0.03029
ACTUAL: array(0.9634, dtype=float16)
DESIRED: array(0.935, dtype=float16)
2025-04-27 01:58:56.105954 test begin: paddle.Tensor.sum(Tensor([248, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([248, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.1392
Max relative difference among violations: 0.1765
ACTUAL: array(0.6494, dtype=float16)
DESIRED: array(0.7886, dtype=float16)
2025-04-27 01:59:05.172805 test begin: paddle.Tensor.sum(Tensor([249, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([249, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.1582
Max relative difference among violations: 0.0439
ACTUAL: array(-3.445, dtype=float16)
DESIRED: array(-3.604, dtype=float16)
2025-04-27 01:59:29.242426 test begin: paddle.Tensor.sum(Tensor([251, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([251, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.2812
Max relative difference among violations: 0.0641
ACTUAL: array(4.105, dtype=float16)
DESIRED: array(4.387, dtype=float16)
2025-04-27 01:59:36.073751 test begin: paddle.Tensor.sum(Tensor([252, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([252, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.03027
Max relative difference among violations: 0.01747
ACTUAL: array(-1.763, dtype=float16)
DESIRED: array(-1.732, dtype=float16)
2025-04-27 01:59:46.864550 test begin: paddle.Tensor.sum(Tensor([253, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([253, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.1274
Max relative difference among violations: 0.1984
ACTUAL: array(0.515, dtype=float16)
DESIRED: array(0.6426, dtype=float16)
2025-04-27 01:59:54.284141 test begin: paddle.Tensor.sum(Tensor([254, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([254, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.4688
Max relative difference among violations: 0.0681
ACTUAL: array(-6.41, dtype=float16)
DESIRED: array(-6.88, dtype=float16)
2025-04-27 02:00:04.201028 test begin: paddle.Tensor.sum(Tensor([255, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([255, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.127
Max relative difference among violations: 0.0498
ACTUAL: array(2.422, dtype=float16)
DESIRED: array(2.549, dtype=float16)
2025-04-27 02:00:12.491727 test begin: paddle.Tensor.sum(Tensor([256, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([256, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.1426
Max relative difference among violations: 0.0957
ACTUAL: array(-1.348, dtype=float16)
DESIRED: array(-1.49, dtype=float16)
2025-04-27 02:00:20.866956 test begin: paddle.Tensor.sum(Tensor([257, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([257, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.09766
Max relative difference among violations: 0.02246
ACTUAL: array(4.25, dtype=float16)
DESIRED: array(4.348, dtype=float16)
2025-04-27 02:00:37.777429 test begin: paddle.Tensor.sum(Tensor([258, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([258, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.289
Max relative difference among violations: 0.03117
ACTUAL: array(8.984, dtype=float16)
DESIRED: array(9.27, dtype=float16)
2025-04-27 02:00:45.348756 test begin: paddle.Tensor.sum(Tensor([259, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([259, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.1367
Max relative difference among violations: 0.03488
ACTUAL: array(3.783, dtype=float16)
DESIRED: array(3.92, dtype=float16)
2025-04-27 02:01:26.584209 test begin: paddle.Tensor.sum(Tensor([264, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([264, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.125
Max relative difference among violations: 0.03665
ACTUAL: array(3.285, dtype=float16)
DESIRED: array(3.41, dtype=float16)
2025-04-27 02:01:32.980834 test begin: paddle.Tensor.sum(Tensor([265, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([265, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.1924
Max relative difference among violations: 0.1255
ACTUAL: array(-1.341, dtype=float16)
DESIRED: array(-1.533, dtype=float16)
2025-04-27 02:01:40.938538 test begin: paddle.Tensor.sum(Tensor([266, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([266, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.1201
Max relative difference among violations: 0.1716
ACTUAL: array(-0.82, dtype=float16)
DESIRED: array(-0.6997, dtype=float16)
2025-04-27 02:01:48.392046 test begin: paddle.Tensor.sum(Tensor([267, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([267, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.0371
Max relative difference among violations: 0.01436
ACTUAL: array(-2.621, dtype=float16)
DESIRED: array(-2.584, dtype=float16)
2025-04-27 02:01:56.994504 test begin: paddle.Tensor.sum(Tensor([268, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([268, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.4766
Max relative difference among violations: 0.0521
ACTUAL: array(-8.67, dtype=float16)
DESIRED: array(-9.15, dtype=float16)
2025-04-27 02:02:04.684070 test begin: paddle.Tensor.sum(Tensor([269, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([269, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.0879
Max relative difference among violations: 0.0391
ACTUAL: array(-2.16, dtype=float16)
DESIRED: array(-2.248, dtype=float16)
2025-04-27 02:02:21.854401 test begin: paddle.Tensor.sum(Tensor([270, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([270, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.4805
Max relative difference among violations: 0.07434
ACTUAL: array(-5.98, dtype=float16)
DESIRED: array(-6.46, dtype=float16)
2025-04-27 02:02:36.607522 test begin: paddle.Tensor.sum(Tensor([272, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([272, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.4453
Max relative difference among violations: 0.0514
ACTUAL: array(8.22, dtype=float16)
DESIRED: array(8.664, dtype=float16)
2025-04-27 02:02:50.683133 test begin: paddle.Tensor.sum(Tensor([274, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([274, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.2344
Max relative difference among violations: 0.0468
ACTUAL: array(4.773, dtype=float16)
DESIRED: array(5.008, dtype=float16)
2025-04-27 02:02:59.150469 test begin: paddle.Tensor.sum(Tensor([275, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([275, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.1875
Max relative difference among violations: 0.06058
ACTUAL: array(2.908, dtype=float16)
DESIRED: array(3.096, dtype=float16)
2025-04-27 02:03:13.961605 test begin: paddle.Tensor.sum(Tensor([276, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([276, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.05664
Max relative difference among violations: 0.02206
ACTUAL: array(2.51, dtype=float16)
DESIRED: array(2.566, dtype=float16)
2025-04-27 02:03:37.080451 test begin: paddle.Tensor.sum(Tensor([279, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([279, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.2812
Max relative difference among violations: 0.04892
ACTUAL: array(-5.47, dtype=float16)
DESIRED: array(-5.75, dtype=float16)
2025-04-27 02:03:53.124270 test begin: paddle.Tensor.sum(Tensor([280, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([280, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.2852
Max relative difference among violations: 0.05188
ACTUAL: array(-5.21, dtype=float16)
DESIRED: array(-5.496, dtype=float16)
2025-04-27 02:04:08.283547 test begin: paddle.Tensor.sum(Tensor([282, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([282, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.547
Max relative difference among violations: 0.1387
ACTUAL: array(-3.396, dtype=float16)
DESIRED: array(-3.943, dtype=float16)
2025-04-27 02:04:18.397177 test begin: paddle.Tensor.sum(Tensor([283, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([283, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.2695
Max relative difference among violations: 0.04953
ACTUAL: array(5.17, dtype=float16)
DESIRED: array(5.44, dtype=float16)
2025-04-27 02:04:25.767443 test begin: paddle.Tensor.sum(Tensor([284, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([284, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.2617
Max relative difference among violations: 0.03223
ACTUAL: array(7.863, dtype=float16)
DESIRED: array(8.125, dtype=float16)
2025-04-27 02:04:32.642749 test begin: paddle.Tensor.sum(Tensor([285, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([285, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.1445
Max relative difference among violations: 0.03006
ACTUAL: array(4.664, dtype=float16)
DESIRED: array(4.81, dtype=float16)
2025-04-27 02:04:39.416602 test begin: paddle.Tensor.sum(Tensor([286, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([286, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.0703
Max relative difference among violations: 0.03207
ACTUAL: array(-2.262, dtype=float16)
DESIRED: array(-2.191, dtype=float16)
2025-04-27 02:04:47.475133 test begin: paddle.Tensor.sum(Tensor([287, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([287, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.09375
Max relative difference among violations: 0.03207
ACTUAL: array(-2.828, dtype=float16)
DESIRED: array(-2.922, dtype=float16)
2025-04-27 02:04:57.518818 test begin: paddle.Tensor.sum(Tensor([288, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([288, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.2227
Max relative difference among violations: 0.05017
ACTUAL: array(4.215, dtype=float16)
DESIRED: array(4.438, dtype=float16)
2025-04-27 02:05:06.822818 test begin: paddle.Tensor.sum(Tensor([289, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([289, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.126
Max relative difference among violations: 0.1604
ACTUAL: array(-0.6597, dtype=float16)
DESIRED: array(-0.7856, dtype=float16)
2025-04-27 02:05:19.504897 test begin: paddle.Tensor.sum(Tensor([290, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([290, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.02002
Max relative difference among violations: 0.1719
ACTUAL: array(-0.09644, dtype=float16)
DESIRED: array(-0.11646, dtype=float16)
2025-04-27 02:05:39.295158 test begin: paddle.Tensor.sum(Tensor([293, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([293, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.6953
Max relative difference among violations: 0.05832
ACTUAL: array(11.23, dtype=float16)
DESIRED: array(11.92, dtype=float16)
2025-04-27 02:05:45.980330 test begin: paddle.Tensor.sum(Tensor([294, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([294, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.4844
Max relative difference among violations: 0.0501
ACTUAL: array(-9.18, dtype=float16)
DESIRED: array(-9.664, dtype=float16)
2025-04-27 02:05:53.888121 test begin: paddle.Tensor.sum(Tensor([295, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([295, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.03223
Max relative difference among violations: 0.01688
ACTUAL: array(1.878, dtype=float16)
DESIRED: array(1.91, dtype=float16)
2025-04-27 02:06:05.893692 test begin: paddle.Tensor.sum(Tensor([297, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([297, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.2422
Max relative difference among violations: 0.05798
ACTUAL: array(4.418, dtype=float16)
DESIRED: array(4.176, dtype=float16)
2025-04-27 02:06:20.644595 test begin: paddle.Tensor.sum(Tensor([299, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([299, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.207
Max relative difference among violations: 0.04462
ACTUAL: array(-4.434, dtype=float16)
DESIRED: array(-4.64, dtype=float16)
2025-04-27 02:07:32.394244 test begin: paddle.Tensor.sum(Tensor([300, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([300, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.8125
Max relative difference among violations: 0.08636
ACTUAL: array(8.59, dtype=float16)
DESIRED: array(9.41, dtype=float16)
2025-04-27 02:07:41.099979 test begin: paddle.Tensor.sum(Tensor([301, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([301, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.0498
Max relative difference among violations: 0.04434
ACTUAL: array(1.073, dtype=float16)
DESIRED: array(1.123, dtype=float16)
2025-04-27 02:07:47.567846 test begin: paddle.Tensor.sum(Tensor([302, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([302, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.2383
Max relative difference among violations: 0.04834
ACTUAL: array(4.69, dtype=float16)
DESIRED: array(4.93, dtype=float16)
2025-04-27 02:08:01.580638 test begin: paddle.Tensor.sum(Tensor([304, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([304, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.3574
Max relative difference among violations: 0.1404
ACTUAL: array(-2.19, dtype=float16)
DESIRED: array(-2.547, dtype=float16)
2025-04-27 02:08:07.927341 test begin: paddle.Tensor.sum(Tensor([305, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([305, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.1133
Max relative difference among violations: 0.0531
ACTUAL: array(2.02, dtype=float16)
DESIRED: array(2.133, dtype=float16)
2025-04-27 02:08:14.063082 test begin: paddle.Tensor.sum(Tensor([306, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([306, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.0742
Max relative difference among violations: 0.03275
ACTUAL: array(-2.193, dtype=float16)
DESIRED: array(-2.268, dtype=float16)
2025-04-27 02:08:30.234092 test begin: paddle.Tensor.sum(Tensor([307, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([307, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.6484
Max relative difference among violations: 0.07135
ACTUAL: array(8.44, dtype=float16)
DESIRED: array(9.086, dtype=float16)
2025-04-27 02:08:42.955847 test begin: paddle.Tensor.sum(Tensor([309, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([309, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.2793
Max relative difference among violations: 0.0716
ACTUAL: array(3.623, dtype=float16)
DESIRED: array(3.902, dtype=float16)
2025-04-27 02:09:01.419432 test begin: paddle.Tensor.sum(Tensor([310, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([310, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.1387
Max relative difference among violations: 0.1265
ACTUAL: array(0.958, dtype=float16)
DESIRED: array(1.097, dtype=float16)
2025-04-27 02:09:20.656039 test begin: paddle.Tensor.sum(Tensor([313, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([313, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.1777
Max relative difference among violations: 0.0686
ACTUAL: array(-2.412, dtype=float16)
DESIRED: array(-2.59, dtype=float16)
2025-04-27 02:09:26.409527 test begin: paddle.Tensor.sum(Tensor([314, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([314, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.0774
Max relative difference among violations: 0.3179
ACTUAL: array(-0.3208, dtype=float16)
DESIRED: array(-0.2434, dtype=float16)
2025-04-27 02:09:32.668509 test begin: paddle.Tensor.sum(Tensor([315, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([315, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.8047
Max relative difference among violations: 0.1002
ACTUAL: array(7.227, dtype=float16)
DESIRED: array(8.03, dtype=float16)
2025-04-27 02:09:37.719364 test begin: paddle.Tensor.sum(Tensor([316, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([316, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.758
Max relative difference among violations: 0.0867
ACTUAL: array(-7.984, dtype=float16)
DESIRED: array(-8.74, dtype=float16)
2025-04-27 02:09:45.595051 test begin: paddle.Tensor.sum(Tensor([317, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([317, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.5195
Max relative difference among violations: 0.06537
ACTUAL: array(7.43, dtype=float16)
DESIRED: array(7.95, dtype=float16)
2025-04-27 02:09:58.816193 test begin: paddle.Tensor.sum(Tensor([319, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([319, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.758
Max relative difference among violations: 0.0922
ACTUAL: array(7.46, dtype=float16)
DESIRED: array(8.22, dtype=float16)
2025-04-27 02:10:23.304199 test begin: paddle.Tensor.sum(Tensor([322, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([322, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.0332
Max relative difference among violations: 0.02286
ACTUAL: array(-1.485, dtype=float16)
DESIRED: array(-1.452, dtype=float16)
2025-04-27 02:10:29.836790 test begin: paddle.Tensor.sum(Tensor([323, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([323, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.2344
Max relative difference among violations: 0.08685
ACTUAL: array(2.465, dtype=float16)
DESIRED: array(2.7, dtype=float16)
2025-04-27 02:10:35.667611 test begin: paddle.Tensor.sum(Tensor([324, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([324, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.3086
Max relative difference among violations: 0.0456
ACTUAL: array(6.46, dtype=float16)
DESIRED: array(6.77, dtype=float16)
2025-04-27 02:10:45.055923 test begin: paddle.Tensor.sum(Tensor([325, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([325, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.3555
Max relative difference among violations: 0.0725
ACTUAL: array(-4.547, dtype=float16)
DESIRED: array(-4.902, dtype=float16)
2025-04-27 02:10:50.244170 test begin: paddle.Tensor.sum(Tensor([326, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([326, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.168
Max relative difference among violations: 0.02379
ACTUAL: array(6.895, dtype=float16)
DESIRED: array(7.062, dtype=float16)
2025-04-27 02:10:58.887576 test begin: paddle.Tensor.sum(Tensor([328, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([328, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.578
Max relative difference among violations: 0.1432
ACTUAL: array(-3.46, dtype=float16)
DESIRED: array(-4.04, dtype=float16)
2025-04-27 02:11:27.723160 test begin: paddle.Tensor.sum(Tensor([332, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([332, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.3242
Max relative difference among violations: 0.1686
ACTUAL: array(1.599, dtype=float16)
DESIRED: array(1.923, dtype=float16)
2025-04-27 02:11:33.043335 test begin: paddle.Tensor.sum(Tensor([333, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([333, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.09076
Max relative difference among violations: 12.59
ACTUAL: array(-0.09796, dtype=float16)
DESIRED: array(-0.007206, dtype=float16)
2025-04-27 02:11:58.562972 test begin: paddle.Tensor.sum(Tensor([337, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([337, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.25
Max relative difference among violations: 0.05493
ACTUAL: array(4.3, dtype=float16)
DESIRED: array(4.55, dtype=float16)
2025-04-27 02:12:07.327477 test begin: paddle.Tensor.sum(Tensor([339, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([339, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.293
Max relative difference among violations: 0.1903
ACTUAL: array(1.246, dtype=float16)
DESIRED: array(1.539, dtype=float16)
2025-04-27 02:12:35.243800 test begin: paddle.Tensor.sum(Tensor([342, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([342, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.5547
Max relative difference among violations: 0.07385
ACTUAL: array(-6.953, dtype=float16)
DESIRED: array(-7.508, dtype=float16)
2025-04-27 02:12:41.120552 test begin: paddle.Tensor.sum(Tensor([343, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([343, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.11865
Max relative difference among violations: 0.2317
ACTUAL: array(0.3936, dtype=float16)
DESIRED: array(0.512, dtype=float16)
2025-04-27 02:12:51.931082 test begin: paddle.Tensor.sum(Tensor([345, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([345, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.07324
Max relative difference among violations: 0.0522
ACTUAL: array(-1.33, dtype=float16)
DESIRED: array(-1.403, dtype=float16)
2025-04-27 02:12:58.910622 test begin: paddle.Tensor.sum(Tensor([346, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([346, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.1626
Max relative difference among violations: 0.1864
ACTUAL: array(-0.71, dtype=float16)
DESIRED: array(-0.8726, dtype=float16)
2025-04-27 02:13:04.868067 test begin: paddle.Tensor.sum(Tensor([347, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([347, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.08203
Max relative difference among violations: 0.035
ACTUAL: array(2.262, dtype=float16)
DESIRED: array(2.344, dtype=float16)
2025-04-27 02:13:29.001463 test begin: paddle.Tensor.sum(Tensor([351, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([351, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.0967
Max relative difference among violations: 0.0531
ACTUAL: array(1.724, dtype=float16)
DESIRED: array(1.82, dtype=float16)
2025-04-27 02:13:51.260243 test begin: paddle.Tensor.sum(Tensor([355, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([355, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.07227
Max relative difference among violations: 0.03323
ACTUAL: array(-2.246, dtype=float16)
DESIRED: array(-2.174, dtype=float16)
2025-04-27 02:14:04.098841 test begin: paddle.Tensor.sum(Tensor([357, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([357, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.207
Max relative difference among violations: 0.03702
ACTUAL: array(-5.387, dtype=float16)
DESIRED: array(-5.594, dtype=float16)
2025-04-27 02:14:13.769665 test begin: paddle.Tensor.sum(Tensor([359, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([359, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.3203
Max relative difference among violations: 0.0359
ACTUAL: array(-8.6, dtype=float16)
DESIRED: array(-8.92, dtype=float16)
2025-04-27 02:14:39.562518 test begin: paddle.Tensor.sum(Tensor([361, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([361, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.3672
Max relative difference among violations: 0.1337
ACTUAL: array(-2.38, dtype=float16)
DESIRED: array(-2.748, dtype=float16)
2025-04-27 02:14:47.786499 test begin: paddle.Tensor.sum(Tensor([363, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([363, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.5625
Max relative difference among violations: 0.05936
ACTUAL: array(8.914, dtype=float16)
DESIRED: array(9.48, dtype=float16)
2025-04-27 02:14:57.242727 test begin: paddle.Tensor.sum(Tensor([365, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([365, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.291
Max relative difference among violations: 0.0752
ACTUAL: array(3.578, dtype=float16)
DESIRED: array(3.87, dtype=float16)
2025-04-27 02:15:14.096521 test begin: paddle.Tensor.sum(Tensor([368, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([368, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.3477
Max relative difference among violations: 0.0436
ACTUAL: array(7.625, dtype=float16)
DESIRED: array(7.973, dtype=float16)
2025-04-27 02:15:20.675232 test begin: paddle.Tensor.sum(Tensor([369, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([369, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.0781
Max relative difference among violations: 0.01773
ACTUAL: array(-4.33, dtype=float16)
DESIRED: array(-4.406, dtype=float16)
2025-04-27 02:15:33.353487 test begin: paddle.Tensor.sum(Tensor([371, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([371, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.1758
Max relative difference among violations: 0.02739
ACTUAL: array(-6.242, dtype=float16)
DESIRED: array(-6.418, dtype=float16)
2025-04-27 02:15:37.484691 test begin: paddle.Tensor.sum(Tensor([372, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([372, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.2344
Max relative difference among violations: 0.03793
ACTUAL: array(-5.945, dtype=float16)
DESIRED: array(-6.18, dtype=float16)
2025-04-27 02:16:07.967696 test begin: paddle.Tensor.sum(Tensor([378, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([378, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.09766
Max relative difference among violations: 0.06696
ACTUAL: array(-1.361, dtype=float16)
DESIRED: array(-1.459, dtype=float16)
2025-04-27 02:16:13.740076 test begin: paddle.Tensor.sum(Tensor([379, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([379, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.2188
Max relative difference among violations: 0.02989
ACTUAL: array(7.098, dtype=float16)
DESIRED: array(7.316, dtype=float16)
2025-04-27 02:16:31.015253 test begin: paddle.Tensor.sum(Tensor([382, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([382, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.1426
Max relative difference among violations: 0.0811
ACTUAL: array(-1.615, dtype=float16)
DESIRED: array(-1.758, dtype=float16)
2025-04-27 02:16:43.484835 test begin: paddle.Tensor.sum(Tensor([384, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([384, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.4219
Max relative difference among violations: 0.0623
ACTUAL: array(-6.35, dtype=float16)
DESIRED: array(-6.773, dtype=float16)
2025-04-27 02:16:58.386906 test begin: paddle.Tensor.sum(Tensor([387, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([387, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.10156
Max relative difference among violations: 0.02263
ACTUAL: array(-4.387, dtype=float16)
DESIRED: array(-4.49, dtype=float16)
2025-04-27 02:17:20.719123 test begin: paddle.Tensor.sum(Tensor([391, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([391, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 1.305
Max relative difference among violations: 0.0787
ACTUAL: array(-15.27, dtype=float16)
DESIRED: array(-16.58, dtype=float16)
2025-04-27 02:17:27.350148 test begin: paddle.Tensor.sum(Tensor([392, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([392, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.1855
Max relative difference among violations: 0.0806
ACTUAL: array(2.115, dtype=float16)
DESIRED: array(2.3, dtype=float16)
2025-04-27 02:17:32.483003 test begin: paddle.Tensor.sum(Tensor([393, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([393, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.6055
Max relative difference among violations: 0.07465
ACTUAL: array(-7.504, dtype=float16)
DESIRED: array(-8.11, dtype=float16)
2025-04-27 02:17:37.248301 test begin: paddle.Tensor.sum(Tensor([394, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([394, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.2031
Max relative difference among violations: 0.039
ACTUAL: array(5.004, dtype=float16)
DESIRED: array(5.207, dtype=float16)
2025-04-27 02:17:43.446996 test begin: paddle.Tensor.sum(Tensor([395, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([395, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.2969
Max relative difference among violations: 0.0546
ACTUAL: array(-5.14, dtype=float16)
DESIRED: array(-5.438, dtype=float16)
2025-04-27 02:18:07.086854 test begin: paddle.Tensor.sum(Tensor([399, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([399, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.1895
Max relative difference among violations: 0.07605
ACTUAL: array(-2.3, dtype=float16)
DESIRED: array(-2.49, dtype=float16)
2025-04-27 02:23:45.116725 test begin: paddle.Tensor.sum(Tensor([40, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([40, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.01855
Max relative difference among violations: 0.1306
ACTUAL: array(0.12354, dtype=float16)
DESIRED: array(0.1421, dtype=float16)
2025-04-27 02:23:48.376985 test begin: paddle.Tensor.sum(Tensor([400, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([400, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.2725
Max relative difference among violations: 0.1948
ACTUAL: array(1.671, dtype=float16)
DESIRED: array(1.398, dtype=float16)
2025-04-27 02:24:07.586259 test begin: paddle.Tensor.sum(Tensor([404, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([404, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.127
Max relative difference among violations: 0.0514
ACTUAL: array(-2.598, dtype=float16)
DESIRED: array(-2.47, dtype=float16)
2025-04-27 02:24:11.972063 test begin: paddle.Tensor.sum(Tensor([405, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([405, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.7266
Max relative difference among violations: 0.04498
ACTUAL: array(15.43, dtype=float16)
DESIRED: array(16.16, dtype=float16)
2025-04-27 02:25:52.761368 test begin: paddle.Tensor.sum(Tensor([425, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([425, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.6094
Max relative difference among violations: 0.1388
ACTUAL: array(-3.781, dtype=float16)
DESIRED: array(-4.39, dtype=float16)
2025-04-27 02:25:57.270284 test begin: paddle.Tensor.sum(Tensor([426, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([426, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.2117
Max relative difference among violations: 0.7354
ACTUAL: array(0.4995, dtype=float16)
DESIRED: array(0.2878, dtype=float16)
2025-04-27 02:26:12.341359 test begin: paddle.Tensor.sum(Tensor([429, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([429, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.1074
Max relative difference among violations: 0.0392
ACTUAL: array(-2.63, dtype=float16)
DESIRED: array(-2.738, dtype=float16)
2025-04-27 02:26:27.215085 test begin: paddle.Tensor.sum(Tensor([432, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([432, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.0537
Max relative difference among violations: 0.0684
ACTUAL: array(-0.7314, dtype=float16)
DESIRED: array(-0.785, dtype=float16)
2025-04-27 02:28:43.707777 test begin: paddle.Tensor.sum(Tensor([462, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([462, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 1.328
Max relative difference among violations: 0.1
ACTUAL: array(-11.95, dtype=float16)
DESIRED: array(-13.28, dtype=float16)
2025-04-27 02:28:45.431678 test begin: paddle.Tensor.sum(Tensor([46208, 68],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([46208, 68],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 24.69
Max relative difference among violations: 0.4175
ACTUAL: array(-83.8, dtype=float16)
DESIRED: array(-59.12, dtype=float16)
2025-04-27 02:29:49.971078 test begin: paddle.Tensor.sum(Tensor([477, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([477, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.4492
Max relative difference among violations: 0.2085
ACTUAL: array(1.705, dtype=float16)
DESIRED: array(2.154, dtype=float16)
2025-04-27 02:30:23.109899 test begin: paddle.Tensor.sum(Tensor([482, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([482, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.2031
Max relative difference among violations: 0.03333
ACTUAL: array(5.89, dtype=float16)
DESIRED: array(6.094, dtype=float16)
2025-04-27 02:31:10.543369 test begin: paddle.Tensor.sum(Tensor([493, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([493, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.711
Max relative difference among violations: 0.05197
ACTUAL: array(12.97, dtype=float16)
DESIRED: array(13.68, dtype=float16)
2025-04-27 02:31:13.199110 test begin: paddle.Tensor.sum(Tensor([494, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([494, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.3096
Max relative difference among violations: 0.2042
ACTUAL: array(-1.206, dtype=float16)
DESIRED: array(-1.516, dtype=float16)
2025-04-27 02:33:32.524942 test begin: paddle.Tensor.sum(Tensor([519, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([519, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.2051
Max relative difference among violations: 0.0529
ACTUAL: array(-4.082, dtype=float16)
DESIRED: array(-3.877, dtype=float16)
2025-04-27 02:33:35.557749 test begin: paddle.Tensor.sum(Tensor([52, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([52, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.0371
Max relative difference among violations: 0.013824
ACTUAL: array(-2.646, dtype=float16)
DESIRED: array(-2.684, dtype=float16)
2025-04-27 02:33:41.705385 test begin: paddle.Tensor.sum(Tensor([521, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([521, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.5312
Max relative difference among violations: 0.0995
ACTUAL: array(-4.81, dtype=float16)
DESIRED: array(-5.34, dtype=float16)
2025-04-27 02:34:08.572171 test begin: paddle.Tensor.sum(Tensor([529, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([529, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.6875
Max relative difference among violations: 0.1154
ACTUAL: array(5.27, dtype=float16)
DESIRED: array(5.957, dtype=float16)
2025-04-27 02:34:19.551301 test begin: paddle.Tensor.sum(Tensor([532, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([532, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.4883
Max relative difference among violations: 0.05856
ACTUAL: array(7.848, dtype=float16)
DESIRED: array(8.336, dtype=float16)
2025-04-27 02:35:15.460845 test begin: paddle.Tensor.sum(Tensor([547, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([547, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.7246
Max relative difference among violations: 0.51
ACTUAL: array(0.6963, dtype=float16)
DESIRED: array(1.421, dtype=float16)
2025-04-27 02:35:27.841151 test begin: paddle.Tensor.sum(Tensor([550, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([550, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.1885
Max relative difference among violations: 0.3455
ACTUAL: array(-0.734, dtype=float16)
DESIRED: array(-0.5454, dtype=float16)
2025-04-27 02:35:58.160984 test begin: paddle.Tensor.sum(Tensor([560, 68],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([560, 68],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 3.39
Max relative difference among violations: 0.1335
ACTUAL: array(22., dtype=float16)
DESIRED: array(25.39, dtype=float16)
2025-04-27 02:36:00.661955 test begin: paddle.Tensor.sum(Tensor([561, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([561, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.5234
Max relative difference among violations: 0.0815
ACTUAL: array(5.9, dtype=float16)
DESIRED: array(6.42, dtype=float16)
2025-04-27 02:37:00.645469 test begin: paddle.Tensor.sum(Tensor([578, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([578, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.3525
Max relative difference among violations: 0.3198
ACTUAL: array(-1.455, dtype=float16)
DESIRED: array(-1.103, dtype=float16)
2025-04-27 02:37:03.221690 test begin: paddle.Tensor.sum(Tensor([579, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([579, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.6797
Max relative difference among violations: 0.04965
ACTUAL: array(-13.01, dtype=float16)
DESIRED: array(-13.69, dtype=float16)
2025-04-27 02:37:17.734572 test begin: paddle.Tensor.sum(Tensor([584, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([584, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.1914
Max relative difference among violations: 0.06335
ACTUAL: array(-2.83, dtype=float16)
DESIRED: array(-3.021, dtype=float16)
2025-04-27 02:39:19.057072 test begin: paddle.Tensor.sum(Tensor([610, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([610, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.461
Max relative difference among violations: 0.05008
ACTUAL: array(8.74, dtype=float16)
DESIRED: array(9.2, dtype=float16)
2025-04-27 02:39:36.982233 test begin: paddle.Tensor.sum(Tensor([616, 68],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([616, 68],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 3.43
Max relative difference among violations: 0.2537
ACTUAL: array(-16.95, dtype=float16)
DESIRED: array(-13.52, dtype=float16)
2025-04-27 02:39:50.092971 test begin: paddle.Tensor.sum(Tensor([62, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([62, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.08203
Max relative difference among violations: 0.011894
ACTUAL: array(6.812, dtype=float16)
DESIRED: array(6.895, dtype=float16)
2025-04-27 02:40:39.077884 test begin: paddle.Tensor.sum(Tensor([636, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([636, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.1792
Max relative difference among violations: 0.3984
ACTUAL: array(-0.2705, dtype=float16)
DESIRED: array(-0.4497, dtype=float16)
2025-04-27 02:41:42.685888 test begin: paddle.Tensor.sum(Tensor([64, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([64, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.01337
Max relative difference among violations: 0.1968
ACTUAL: array(0.05457, dtype=float16)
DESIRED: array(0.06793, dtype=float16)
2025-04-27 02:49:11.480513 test begin: paddle.Tensor.sum(Tensor([640, 68],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([640, 68],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 12.81
Max relative difference among violations: 0.1497
ACTUAL: array(72.8, dtype=float16)
DESIRED: array(85.6, dtype=float16)
2025-04-27 02:49:41.676546 test begin: paddle.Tensor.sum(Tensor([65, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([65, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.03223
Max relative difference among violations: 0.02672
ACTUAL: array(-1.174, dtype=float16)
DESIRED: array(-1.206, dtype=float16)
2025-04-27 02:49:49.011832 test begin: paddle.Tensor.sum(Tensor([652, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([652, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 1.371
Max relative difference among violations: 0.1932
ACTUAL: array(5.723, dtype=float16)
DESIRED: array(7.094, dtype=float16)
2025-04-27 02:51:15.317124 test begin: paddle.Tensor.sum(Tensor([68, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([68, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.02975
Max relative difference among violations: 0.8354
ACTUAL: array(0.00586, dtype=float16)
DESIRED: array(0.0356, dtype=float16)
2025-04-27 02:51:46.998506 test begin: paddle.Tensor.sum(Tensor([69, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([69, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.0586
Max relative difference among violations: 0.02504
ACTUAL: array(-2.281, dtype=float16)
DESIRED: array(-2.34, dtype=float16)
2025-04-27 02:52:50.350599 test begin: paddle.Tensor.sum(Tensor([70, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([70, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.01709
Max relative difference among violations: 0.03775
ACTUAL: array(-0.4355, dtype=float16)
DESIRED: array(-0.4526, dtype=float16)
2025-04-27 02:53:03.180197 test begin: paddle.Tensor.sum(Tensor([704, 68],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([704, 68],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 18.69
Max relative difference among violations: 0.1511
ACTUAL: array(104.94, dtype=float16)
DESIRED: array(123.6, dtype=float16)
2025-04-27 02:53:50.507134 test begin: paddle.Tensor.sum(Tensor([72, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([72, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.03174
Max relative difference among violations: 0.04843
ACTUAL: array(-0.6235, dtype=float16)
DESIRED: array(-0.6553, dtype=float16)
2025-04-27 02:53:51.537390 test begin: paddle.Tensor.sum(Tensor([720, 68],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([720, 68],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 1.75
Max relative difference among violations: 0.1035
ACTUAL: array(-15.16, dtype=float16)
DESIRED: array(-16.9, dtype=float16)
2025-04-27 02:54:19.012808 test begin: paddle.Tensor.sum(Tensor([73, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([73, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.06836
Max relative difference among violations: 0.02162
ACTUAL: array(-3.094, dtype=float16)
DESIRED: array(-3.162, dtype=float16)
2025-04-27 02:56:15.011782 test begin: paddle.Tensor.sum(Tensor([77, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([77, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.03445
Max relative difference among violations: 1.428
ACTUAL: array(-0.0586, dtype=float16)
DESIRED: array(-0.02414, dtype=float16)
2025-04-27 02:56:42.177852 test begin: paddle.Tensor.sum(Tensor([78, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([78, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.03076
Max relative difference among violations: 0.03662
ACTUAL: array(0.8096, dtype=float16)
DESIRED: array(0.8403, dtype=float16)
2025-04-27 02:57:15.313889 test begin: paddle.Tensor.sum(Tensor([792, 68],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([792, 68],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 18.31
Max relative difference among violations: 0.186
ACTUAL: array(80.1, dtype=float16)
DESIRED: array(98.44, dtype=float16)
2025-04-27 03:09:04.548103 test begin: paddle.Tensor.sum(Tensor([80, 128, 128],"bfloat16"), )
[accuracy error] paddle.Tensor.sum(Tensor([80, 128, 128],"bfloat16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 5.5
Max relative difference among violations: 0.04932735
ACTUAL: array(117., dtype=float32)
DESIRED: array(111.5, dtype=float32)
2025-04-27 03:09:04.777985 test begin: paddle.Tensor.sum(Tensor([80, 128, 128],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([80, 128, 128],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 31.66
Max relative difference among violations: 1.429
ACTUAL: array(9.5, dtype=float16)
DESIRED: array(-22.16, dtype=float16)
2025-04-27 03:09:09.389204 test begin: paddle.Tensor.sum(Tensor([800, 68],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([800, 68],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 8.47
Max relative difference among violations: 0.1499
ACTUAL: array(-48.03, dtype=float16)
DESIRED: array(-56.5, dtype=float16)
2025-04-27 03:09:12.845858 test begin: paddle.Tensor.sum(Tensor([802, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([802, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.0947
Max relative difference among violations: 0.04755
ACTUAL: array(-1.897, dtype=float16)
DESIRED: array(-1.992, dtype=float16)
2025-04-27 03:10:06.771712 test begin: paddle.Tensor.sum(Tensor([82, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([82, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.05078
Max relative difference among violations: 0.01287
ACTUAL: array(-3.895, dtype=float16)
DESIRED: array(-3.945, dtype=float16)
2025-04-27 03:10:34.536091 test begin: paddle.Tensor.sum(Tensor([83, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([83, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.04883
Max relative difference among violations: 0.01614
ACTUAL: array(2.975, dtype=float16)
DESIRED: array(3.023, dtype=float16)
2025-04-27 03:12:50.105312 test begin: paddle.Tensor.sum(Tensor([88, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([88, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.1172
Max relative difference among violations: 0.01826
ACTUAL: array(-6.297, dtype=float16)
DESIRED: array(-6.414, dtype=float16)
2025-04-27 03:12:51.046128 test begin: paddle.Tensor.sum(Tensor([880, 68],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([880, 68],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 16.81
Max relative difference among violations: 0.1842
ACTUAL: array(-74.44, dtype=float16)
DESIRED: array(-91.25, dtype=float16)
2025-04-27 03:13:13.811505 test begin: paddle.Tensor.sum(Tensor([89, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([89, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.05566
Max relative difference among violations: 0.02805
ACTUAL: array(-1.929, dtype=float16)
DESIRED: array(-1.984, dtype=float16)
2025-04-27 03:14:32.979257 test begin: paddle.Tensor.sum(Tensor([91, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([91, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.1094
Max relative difference among violations: 0.01863
ACTUAL: array(5.76, dtype=float16)
DESIRED: array(5.87, dtype=float16)
2025-04-27 03:15:24.899846 test begin: paddle.Tensor.sum(Tensor([93, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([93, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.0459
Max relative difference among violations: 0.02434
ACTUAL: array(-1.84, dtype=float16)
DESIRED: array(-1.886, dtype=float16)
2025-04-27 03:15:47.711603 test begin: paddle.Tensor.sum(Tensor([94, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([94, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.0332
Max relative difference among violations: 0.0388
ACTUAL: array(0.8228, dtype=float16)
DESIRED: array(0.856, dtype=float16)
2025-04-27 03:16:33.774717 test begin: paddle.Tensor.sum(Tensor([96, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([96, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.0586
Max relative difference among violations: 0.01826
ACTUAL: array(-3.148, dtype=float16)
DESIRED: array(-3.207, dtype=float16)
2025-04-27 03:16:51.812178 test begin: paddle.Tensor.sum(Tensor([968, 68],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([968, 68],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 4.72
Max relative difference among violations: 0.2568
ACTUAL: array(-23.1, dtype=float16)
DESIRED: array(-18.38, dtype=float16)
2025-04-27 03:17:33.703874 test begin: paddle.Tensor.sum(Tensor([99, 1],"float16"), )
[accuracy error] paddle.Tensor.sum(Tensor([99, 1],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.05273
Max relative difference among violations: 0.0431
ACTUAL: array(1.171, dtype=float16)
DESIRED: array(1.224, dtype=float16)
2025-04-27 03:18:20.927258 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 100083, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 100083, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 4711 / 100083 (4.71%)
Max absolute difference among violations: 3245038
Max relative difference among violations: 4195.61538462
ACTUAL: array([1209608, 1480148,  579909, ..., 1174051, 3138507, 1395070])
DESIRED: array([1209608, 1480148,  579909, ..., 1174051, 3138507, 1395070])
2025-04-27 03:18:21.350138 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 10173, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 10173, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 470 / 10173 (4.62%)
Max absolute difference among violations: 2910114
Max relative difference among violations: 122.07549495
ACTUAL: array([ 849605, 1873247,  404490, ...,   80977, 1331900, 1140940])
DESIRED: array([ 849605, 1873247,  404490, ...,   80977, 1331900, 1140940])
2025-04-27 03:18:21.674761 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 101931, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 101931, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 4766 / 101931 (4.68%)
Max absolute difference among violations: 3196231
Max relative difference among violations: 2007.86825397
ACTUAL: array([1424139,  355826, 2571675, ...,  794598, 1805436,  187821])
DESIRED: array([1424139,  355826,  694538, ...,  794598, 1805436,  187821])
2025-04-27 03:18:22.051596 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 101946, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 101946, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 4752 / 101946 (4.66%)
Max absolute difference among violations: 3184345
Max relative difference among violations: 11236.92682927
ACTUAL: array([ 854054, 3099305,  513105, ..., 2355617,  446425, 2020911])
DESIRED: array([ 854054, 3099305,  513105, ..., 2355617,  446425, 2020911])
2025-04-27 03:18:22.296529 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 102327, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 102327, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 4869 / 102327 (4.76%)
Max absolute difference among violations: 3260402
Max relative difference among violations: 92048.28571429
ACTUAL: array([ 750661, 1506239, 1269344, ..., 1325760,  782117, 2433455])
DESIRED: array([ 750661, 1506239, 1269344, ..., 3129222,  782117, 2433455])
2025-04-27 03:18:22.597524 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 102396, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 102396, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 4753 / 102396 (4.64%)
Max absolute difference among violations: 3232010
Max relative difference among violations: 4591.11844332
ACTUAL: array([2578367, 2268612, 1431638, ..., 1872405,  362602,  608677])
DESIRED: array([2578367, 2268612, 1431638, ..., 1872405,  362602,  608677])
2025-04-27 03:18:22.844728 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 104598, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 104598, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 4960 / 104598 (4.74%)
Max absolute difference among violations: 3242443
Max relative difference among violations: 2787.23284823
ACTUAL: array([1532277, 2074806, 2568214, ..., 2542451, 2956508,  296151])
DESIRED: array([1532277, 2074806, 2568214, ..., 2542451, 2956508,  296151])
2025-04-27 03:18:23.244828 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 104646, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 104646, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 4862 / 104646 (4.65%)
Max absolute difference among violations: 3179854
Max relative difference among violations: 118948.375
ACTUAL: array([2409991, 2792262, 2254718, ..., 2633479, 1004409,  871151])
DESIRED: array([2409991, 2792262, 2254718, ..., 2633479, 1004409,  871151])
2025-04-27 03:18:23.579324 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 104883, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 104883, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 5023 / 104883 (4.79%)
Max absolute difference among violations: 3167561
Max relative difference among violations: 2953.71084337
ACTUAL: array([2021576, 1050010, 2924763, ..., 2666426,  551060,  488135])
DESIRED: array([2021576, 1050010, 2924763, ..., 2666426,  551060,  488135])
2025-04-27 03:18:23.959306 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 105876, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 105876, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 5076 / 105876 (4.79%)
Max absolute difference among violations: 3245675
Max relative difference among violations: 6884.35
ACTUAL: array([2236376, 2419348, 1286840, ..., 1736099, 3124528,  576743])
DESIRED: array([2236376, 2419348, 1286840, ..., 1736099, 3124528,  576743])
2025-04-27 03:18:24.288581 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 107739, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 107739, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 4959 / 107739 (4.6%)
Max absolute difference among violations: 3243280
Max relative difference among violations: 2157.9312205
ACTUAL: array([ 196614, 2601419, 2869560, ..., 1865070, 1813172,  806282])
DESIRED: array([ 196614, 2601419, 2869560, ..., 1865070, 1813172,  806282])
2025-04-27 03:18:24.662648 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 108291, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 108291, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 5075 / 108291 (4.69%)
Max absolute difference among violations: 3217318
Max relative difference among violations: 2547.11130587
ACTUAL: array([ 324637, 2608212, 1923967, ..., 2431550, 2804626, 1683495])
DESIRED: array([ 324637, 2608212, 1923967, ..., 2431550, 2804626, 1683495])
2025-04-27 03:18:25.038749 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 108540, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 108540, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 5111 / 108540 (4.71%)
Max absolute difference among violations: 3223644
Max relative difference among violations: 2841.34744526
ACTUAL: array([ 566759, 2235635, 1731353, ...,  114783,  278349, 3176539])
DESIRED: array([ 566759, 2235635, 1731353, ...,  114783,  278349, 3176539])
2025-04-27 03:18:25.291650 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 110289, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 110289, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 5200 / 110289 (4.71%)
Max absolute difference among violations: 3184696
Max relative difference among violations: 12183.7615894
ACTUAL: array([3046513, 3069282, 2274062, ..., 1422009, 2680346,  320704])
DESIRED: array([3046513, 2274062, 3069282, ..., 1422009, 2680346,  320704])
2025-04-27 03:18:25.554525 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 110832, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 110832, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 5123 / 110832 (4.62%)
Max absolute difference among violations: 3260004
Max relative difference among violations: 1608.46098361
ACTUAL: array([1100494, 2819427, 2849965, ..., 2203396, 1208412, 1455039])
DESIRED: array([1100494, 2819427, 2849965, ..., 2203396, 1208412, 1455039])
2025-04-27 03:18:25.876570 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 111645, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 111645, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 5236 / 111645 (4.69%)
Max absolute difference among violations: 3208690
Max relative difference among violations: 1201.827064
ACTUAL: array([1201741,  375872,  918443, ..., 2737313, 1683614,  385071])
DESIRED: array([1201741,  375872,  918443, ..., 1683614, 2737313,  385071])
2025-04-27 03:18:26.230260 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 112293, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 112293, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 5162 / 112293 (4.6%)
Max absolute difference among violations: 3223994
Max relative difference among violations: 11678.88979592
ACTUAL: array([ 646929, 2000281,  632945, ..., 2717433, 1545526, 2912093])
DESIRED: array([ 646929, 2000281,  632945, ..., 2717433, 1545526, 2912093])
2025-04-27 03:18:26.592219 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 113463, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 113463, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 5352 / 113463 (4.72%)
Max absolute difference among violations: 3188008
Max relative difference among violations: 2557.11111111
ACTUAL: array([1950478,  410843, 1338149, ..., 1158827, 2910714, 1206075])
DESIRED: array([1950478,  410843, 1338149, ..., 1158827, 2910714, 1206075])
2025-04-27 03:18:26.882474 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 113676, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 113676, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 5369 / 113676 (4.72%)
Max absolute difference among violations: 3266974
Max relative difference among violations: 1911.62902282
ACTUAL: array([ 701714, 1505495, 1391623, ..., 3163825, 1716166,  785487])
DESIRED: array([ 701714, 1505495, 1391623, ..., 3163825, 1716166,  785487])
2025-04-27 03:18:27.207915 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 113790, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 113790, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 5411 / 113790 (4.76%)
Max absolute difference among violations: 3243465
Max relative difference among violations: 222185.33333333
ACTUAL: array([1635008, 1630894,  266098, ..., 1057489,  542986, 1512721])
DESIRED: array([1635008, 1630894,  266098, ..., 1057489,  542986, 1512721])
2025-04-27 03:18:27.529328 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 114213, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 114213, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 5517 / 114213 (4.83%)
Max absolute difference among violations: 3239797
Max relative difference among violations: 3376.73397823
ACTUAL: array([  23566,  767051, 1078189, ...,  189844, 1770307, 2495638])
DESIRED: array([  23566,  767051, 1078189, ...,  189844, 1770307, 2495638])
2025-04-27 03:18:27.875618 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 114261, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 114261, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 5182 / 114261 (4.54%)
Max absolute difference among violations: 3200129
Max relative difference among violations: 867.04396396
ACTUAL: array([1030428, 1980088, 1477093, ..., 3230747, 1414367, 1926234])
DESIRED: array([1030428, 1980088, 1477093, ..., 3230747, 1414367, 1926234])
2025-04-27 03:18:28.209106 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 114330, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 114330, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 5096 / 114330 (4.46%)
Max absolute difference among violations: 3202746
Max relative difference among violations: 4385.59237537
ACTUAL: array([2900660,  996865, 1312339, ...,  960072, 1463428, 1464689])
DESIRED: array([2900660,  996865, 1312339, ...,  960072, 1463428, 1464689])
2025-04-27 03:18:28.555292 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 114561, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 114561, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 5335 / 114561 (4.66%)
Max absolute difference among violations: 3248997
Max relative difference among violations: 5041.740625
ACTUAL: array([  40720,  222767, 1326112, ..., 1131254, 2153018, 2883170])
DESIRED: array([  40720,  222767, 1326112, ..., 1131254, 2153018, 2883170])
2025-04-27 03:18:28.920722 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 114750, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 114750, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 5358 / 114750 (4.67%)
Max absolute difference among violations: 3186859
Max relative difference among violations: 1660.45188053
ACTUAL: array([ 394690, 2655229, 1927337, ..., 2351510, 1529835,  773092])
DESIRED: array([ 394690, 2655229, 1927337, ..., 2351510, 1529835,  773092])
2025-04-27 03:18:29.252437 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 115383, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 115383, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 5098 / 115383 (4.42%)
Max absolute difference among violations: 3206889
Max relative difference among violations: 2824.85582255
ACTUAL: array([3152561, 2708225, 2253863, ...,  569911,  143504,  343177])
DESIRED: array([3152561, 2708225, 2253863, ...,  569911,  143504,  343177])
2025-04-27 03:18:29.577882 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 115494, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 115494, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 5235 / 115494 (4.53%)
Max absolute difference among violations: 3233676
Max relative difference among violations: 41440.76190476
ACTUAL: array([ 196704, 3250933, 2071912, ..., 1617422, 2847767, 2872639])
DESIRED: array([ 196704, 3250933, 2071912, ..., 1617422, 2847767, 2872639])
2025-04-27 03:18:29.841292 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 115920, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 115920, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 5689 / 115920 (4.91%)
Max absolute difference among violations: 3259485
Max relative difference among violations: 4785.26534296
ACTUAL: array([3218860, 2640752, 2560401, ..., 2058307, 2248861,  107642])
DESIRED: array([3218860, 2640752, 2560401, ..., 2058307, 2248861,  107642])
2025-04-27 03:18:30.163414 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 116010, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 116010, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 5472 / 116010 (4.72%)
Max absolute difference among violations: 3212819
Max relative difference among violations: 1015.68766404
ACTUAL: array([ 764719,  289071, 1568171, ..., 3070215, 2473473,  853364])
DESIRED: array([ 764719,  289071, 1568171, ..., 3070215, 2473473,  853364])
2025-04-27 03:18:30.416551 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 116085, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 116085, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 5460 / 116085 (4.7%)
Max absolute difference among violations: 3231441
Max relative difference among violations: 2833.88461538
ACTUAL: array([  52549, 2699141,  913338, ..., 1693402, 2873151,  140698])
DESIRED: array([  52549, 2699141,  913338, ..., 1693402, 2873151,  140698])
2025-04-27 03:18:30.743211 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 120090, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 120090, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 5493 / 120090 (4.57%)
Max absolute difference among violations: 3204816
Max relative difference among violations: 117324.84615385
ACTUAL: array([1431374,  639170,   59269, ..., 1785997, 1960265, 1099286])
DESIRED: array([1431374,  639170,   59269, ..., 1785997, 1960265, 1099286])
2025-04-27 03:18:31.128932 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 120693, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 120693, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 5691 / 120693 (4.72%)
Max absolute difference among violations: 3247620
Max relative difference among violations: 4010.74522293
ACTUAL: array([ 516592, 2627153, 1173714, ...,  499428, 2720282, 2801553])
DESIRED: array([ 516592, 2627153, 1173714, ...,  499428, 2720282, 2801553])
2025-04-27 03:18:31.447949 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 120765, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 120765, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 5696 / 120765 (4.72%)
Max absolute difference among violations: 3235199
Max relative difference among violations: 7825.825
ACTUAL: array([2440958, 2626104,  957227, ...,  316535, 2806891, 3182183])
DESIRED: array([2440958, 2626104,  957227, ...,  316535, 2806891, 3182183])
2025-04-27 03:18:31.795278 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 121008, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 121008, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 5671 / 121008 (4.69%)
Max absolute difference among violations: 3213964
Max relative difference among violations: 1350.72058824
ACTUAL: array([3178196, 2250750, 2184329, ..., 1340662, 2565931, 1365792])
DESIRED: array([3178196, 2250750, 2184329, ..., 1340662, 2565931,  287183])
2025-04-27 03:18:32.205988 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 121383, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 121383, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 5550 / 121383 (4.57%)
Max absolute difference among violations: 3249321
Max relative difference among violations: 15644.28571429
ACTUAL: array([ 368691, 2260038, 1162955, ..., 2076669, 3230472,  271918])
DESIRED: array([ 368691, 2260038, 1162955, ..., 2076669, 3230472,  271918])
2025-04-27 03:18:32.572927 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 121500, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 121500, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 5693 / 121500 (4.69%)
Max absolute difference among violations: 3225245
Max relative difference among violations: 19026.23809524
ACTUAL: array([ 813317, 1408225, 2084682, ..., 3125708,  294569, 1079810])
DESIRED: array([ 813317, 1408225, 2084682, ..., 3125708,  294569, 1079810])
2025-04-27 03:18:32.951964 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 121539, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 121539, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 5721 / 121539 (4.71%)
Max absolute difference among violations: 3215038
Max relative difference among violations: 3778.80716253
ACTUAL: array([1654519, 2146006,  904286, ..., 2933394,  470985,  116304])
DESIRED: array([1654519, 2146006,  904286, ..., 2933394,  470985,  116304])
2025-04-27 03:18:33.346195 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 121758, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 121758, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 5710 / 121758 (4.69%)
Max absolute difference among violations: 3192273
Max relative difference among violations: 6708.96445498
ACTUAL: array([2827047,  657958,  469645, ..., 1558321,  771722, 1717094])
DESIRED: array([2827047,  657958,  469645, ..., 1558321,  771722, 1717094])
2025-04-27 03:18:33.689916 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 122073, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 122073, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 5628 / 122073 (4.61%)
Max absolute difference among violations: 3167564
Max relative difference among violations: 2963.39221273
ACTUAL: array([ 347679, 2946483, 1806083, ..., 2797723, 2016242, 3190225])
DESIRED: array([ 347679, 2946483, 1806083, ..., 2797723, 2016242, 3190225])
2025-04-27 03:18:33.965322 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 122982, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 122982, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 5637 / 122982 (4.58%)
Max absolute difference among violations: 3140861
Max relative difference among violations: 1991.516
ACTUAL: array([2582661, 2992646, 2025937, ..., 1894999, 1997348, 2165763])
DESIRED: array([2582661, 2992646, 2025937, ..., 1894999, 1997348, 2165763])
2025-04-27 03:18:34.282987 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 123516, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 123516, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 5696 / 123516 (4.61%)
Max absolute difference among violations: 3155111
Max relative difference among violations: 3295.59246955
ACTUAL: array([1790819,  961462, 1466811, ..., 1088113,  745696, 2259907])
DESIRED: array([1790819,  961462, 1466811, ..., 1088113,  745696, 2259907])
2025-04-27 03:18:34.544701 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 124155, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 124155, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 5791 / 124155 (4.66%)
Max absolute difference among violations: 3200336
Max relative difference among violations: 11455.89542484
ACTUAL: array([2359582, 1611836,  683576, ..., 2139183, 1686445, 3095310])
DESIRED: array([2359582, 1611836,  683576, ..., 2139183, 1686445, 3095310])
2025-04-27 03:18:34.807422 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 124257, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 124257, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 5727 / 124257 (4.61%)
Max absolute difference among violations: 3245642
Max relative difference among violations: 20438.23357664
ACTUAL: array([3249728, 1591117, 1756394, ..., 2467989, 2385482, 2533853])
DESIRED: array([3249728, 1591117, 1756394, ..., 2467989, 2385482, 2533853])
2025-04-27 03:18:35.126564 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 129726, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 129726, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 6031 / 129726 (4.65%)
Max absolute difference among violations: 3241798
Max relative difference among violations: 2983.89419087
ACTUAL: array([ 981985, 1393449, 1143132, ..., 3264980, 3004702, 2230045])
DESIRED: array([ 981985, 1143132, 1393449, ..., 3264980, 3004702, 2230045])
2025-04-27 03:18:35.437577 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 131643, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 131643, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 6269 / 131643 (4.76%)
Max absolute difference among violations: 3247343
Max relative difference among violations: 16143.59183673
ACTUAL: array([ 434696, 2771482, 1501873, ...,  976856, 2981149, 2965609])
DESIRED: array([ 434696, 2771482, 1501873, ...,  976856, 2981149, 2965609])
2025-04-27 03:18:35.713126 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 131952, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 131952, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 6137 / 131952 (4.65%)
Max absolute difference among violations: 3222645
Max relative difference among violations: 1438.29788332
ACTUAL: array([2013646, 2622086, 2332823, ..., 2645528, 1991826, 2237622])
DESIRED: array([2013646, 2622086, 2332823, ..., 2645528, 1991826, 2237622])
2025-04-27 03:18:35.970262 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 131961, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 131961, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 6341 / 131961 (4.81%)
Max absolute difference among violations: 3257691
Max relative difference among violations: 5089.59701493
ACTUAL: array([ 475894, 2484161, 1581583, ..., 2082628, 1741871,  956469])
DESIRED: array([ 475894, 2484161, 1581583, ..., 2082628, 1741871,  956469])
2025-04-27 03:18:36.220131 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 132105, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 132105, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 6121 / 132105 (4.63%)
Max absolute difference among violations: 3255174
Max relative difference among violations: 8315.85889571
ACTUAL: array([ 564913, 2650229, 2740577, ..., 1874627, 3268780, 2562179])
DESIRED: array([ 564913, 2650229, 2740577, ..., 1874627, 3268780, 2562179])
2025-04-27 03:18:36.535473 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 132522, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 132522, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 6235 / 132522 (4.7%)
Max absolute difference among violations: 3261102
Max relative difference among violations: 6036.76937984
ACTUAL: array([ 766606,  818389, 2944019, ...,  468387, 1341704, 1384682])
DESIRED: array([ 766606,  818389, 2944019, ...,  468387, 1341704, 1384682])
2025-04-27 03:18:36.918815 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 134115, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 134115, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 6199 / 134115 (4.62%)
Max absolute difference among violations: 3243023
Max relative difference among violations: 4468.23958333
ACTUAL: array([2597234,  868549, 1868964, ..., 3208650,  281435, 2109760])
DESIRED: array([2597234,  868549, 1868964, ..., 3208650,  281435, 2109760])
2025-04-27 03:18:37.266039 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 136164, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 136164, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 6278 / 136164 (4.61%)
Max absolute difference among violations: 3236655
Max relative difference among violations: 1987.89209726
ACTUAL: array([2407583,  360368, 1201903, ...,  948084, 2975014, 1320878])
DESIRED: array([2407583,  360368, 1201903, ...,  948084, 2975014, 1320878])
2025-04-27 03:18:37.626162 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 137484, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 137484, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 6524 / 137484 (4.75%)
Max absolute difference among violations: 3244578
Max relative difference among violations: 5774.640625
ACTUAL: array([ 790158, 2691745, 1561535, ..., 1201515, 1240549, 1979690])
DESIRED: array([ 790158, 2691745, 1561535, ..., 1201515, 1240549, 1979690])
2025-04-27 03:18:37.900076 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 138210, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 138210, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 6634 / 138210 (4.8%)
Max absolute difference among violations: 3252929
Max relative difference among violations: 20153.27906977
ACTUAL: array([ 838029, 1225153, 2943954, ..., 2055953,   91160,  762527])
DESIRED: array([ 838029, 1225153, 2943954, ..., 2055953,   91160,  762527])
2025-04-27 03:18:38.163490 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 138852, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 138852, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 6492 / 138852 (4.68%)
Max absolute difference among violations: 3238694
Max relative difference among violations: 4291.24897401
ACTUAL: array([2529681, 2059310,  223731, ...,  927897, 1310061,  932418])
DESIRED: array([2529681, 2059310,  223731, ...,  927897, 1310061,  932418])
2025-04-27 03:18:38.455765 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 145707, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 145707, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 6745 / 145707 (4.63%)
Max absolute difference among violations: 3209137
Max relative difference among violations: 20154.44202899
ACTUAL: array([ 776671, 3017877, 1414586, ..., 2601498, 3268034, 2198893])
DESIRED: array([ 776671, 1414586, 3017877, ..., 2601498, 3268034, 2198893])
2025-04-27 03:18:38.777369 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 146148, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 146148, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 6761 / 146148 (4.63%)
Max absolute difference among violations: 3196480
Max relative difference among violations: 1351.48836032
ACTUAL: array([1715540, 2448785, 2587143, ...,  239874, 1025591, 2444903])
DESIRED: array([1715540, 2448785, 2587143, ...,  239874, 1025591, 2444903])
2025-04-27 03:18:39.119913 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 147111, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 147111, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 7003 / 147111 (4.76%)
Max absolute difference among violations: 3201505
Max relative difference among violations: 5476.62571977
ACTUAL: array([2879563, 2977541, 1685364, ...,  287351, 1704590,  693969])
DESIRED: array([2879563, 2977541, 1685364, ...,  287351, 1704590,  693969])
2025-04-27 03:18:39.437612 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 147315, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 147315, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 6867 / 147315 (4.66%)
Max absolute difference among violations: 3212722
Max relative difference among violations: 768.23725982
ACTUAL: array([  32245, 3220312, 1230935, ..., 1689473, 1110028, 2121671])
DESIRED: array([  32245, 3220312, 1230935, ..., 1689473, 1110028, 2121671])
2025-04-27 03:18:39.816816 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 150507, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 150507, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 6970 / 150507 (4.63%)
Max absolute difference among violations: 3209081
Max relative difference among violations: 1916.96428571
ACTUAL: array([1198919, 1221775, 2955541, ..., 2482718, 2416455,  513824])
DESIRED: array([1198919, 1221775, 2955541, ..., 2482718, 2416455,  513824])
2025-04-27 03:18:40.199670 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 150945, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 150945, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 7225 / 150945 (4.79%)
Max absolute difference among violations: 3192938
Max relative difference among violations: 1320.5084473
ACTUAL: array([ 866714,  624661, 1685207, ..., 2433684, 1480834, 1764991])
DESIRED: array([ 866714,  624661, 1685207, ..., 2433684, 1480834, 1764991])
2025-04-27 03:18:40.547977 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 151971, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 151971, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 7141 / 151971 (4.7%)
Max absolute difference among violations: 3195448
Max relative difference among violations: 1971.80097879
ACTUAL: array([2150105, 2478701, 1687174, ..., 1698851, 2108921,  346783])
DESIRED: array([2150105, 2478701, 1687174, ..., 1698851, 2108921,  346783])
2025-04-27 03:18:40.902384 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 158844, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 158844, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 7417 / 158844 (4.67%)
Max absolute difference among violations: 3239620
Max relative difference among violations: 877.87745098
ACTUAL: array([ 111003, 2933169, 3260141, ..., 1508441, 1056020,  525645])
DESIRED: array([ 111003, 2933169, 3260141, ..., 2341342, 1056020,  525645])
2025-04-27 03:18:41.288822 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 160434, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 160434, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 7351 / 160434 (4.58%)
Max absolute difference among violations: 3219523
Max relative difference among violations: 725.71871033
ACTUAL: array([1216295, 2111327, 2373975, ..., 2439748,  911481,  587000])
DESIRED: array([1216295, 2111327, 2373975, ..., 2439748,  911481,  587000])
2025-04-27 03:18:41.681536 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 16623, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 16623, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 795 / 16623 (4.78%)
Max absolute difference among violations: 3041690
Max relative difference among violations: 934.59459459
ACTUAL: array([ 434786, 1977410,  236698, ...,  650550, 1068557, 2929710])
DESIRED: array([ 434786, 1977410,  236698, ..., 1999780, 1068557, 2929710])
2025-04-27 03:18:42.099381 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 16704, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 16704, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 772 / 16704 (4.62%)
Max absolute difference among violations: 3090209
Max relative difference among violations: 800.34639801
ACTUAL: array([1027511, 2170344, 1718460, ...,  579460, 2751151,  833441])
DESIRED: array([1027511, 2170344, 1718460, ...,  579460, 2751151,  833441])
2025-04-27 03:18:42.345658 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 173505, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 173505, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 8330 / 173505 (4.8%)
Max absolute difference among violations: 3187620
Max relative difference among violations: 28901.84848485
ACTUAL: array([3156715,   18966, 3076067, ..., 2896552, 2191144, 2774253])
DESIRED: array([3156715,   18966, 3076067, ..., 2896552, 2191144, 2774253])
2025-04-27 03:18:42.709286 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 17520, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 17520, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 767 / 17520 (4.38%)
Max absolute difference among violations: 3106449
Max relative difference among violations: 397.66157827
ACTUAL: array([ 458526, 2703363, 2984661, ..., 3273463, 1068503, 3027638])
DESIRED: array([ 458526, 2703363, 2984661, ..., 1068503, 3273463, 3027638])
2025-04-27 03:18:43.015496 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 17526, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 17526, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 854 / 17526 (4.87%)
Max absolute difference among violations: 3033066
Max relative difference among violations: 392.96381751
ACTUAL: array([ 847654, 1197581, 2714565, ..., 2374428, 3095732, 2806685])
DESIRED: array([ 847654, 1197581, 2714565, ..., 2374428, 3095732, 2806685])
2025-04-27 03:18:43.255085 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 175965, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 175965, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 8198 / 175965 (4.66%)
Max absolute difference among violations: 3213442
Max relative difference among violations: 54559.65
ACTUAL: array([1453743,  137175,  817719, ...,  618688, 2421699, 1332021])
DESIRED: array([1453743,  137175,  817719, ...,  618688, 2421699, 1332021])
2025-04-27 03:18:43.576629 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 17598, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 17598, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 797 / 17598 (4.53%)
Max absolute difference among violations: 3123195
Max relative difference among violations: 332.09053651
ACTUAL: array([ 873682, 2726116, 2150462, ..., 3161032, 1102068, 1160921])
DESIRED: array([ 873682, 2726116, 2150462, ..., 3161032, 1102068, 1160921])
2025-04-27 03:18:43.901807 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 17601, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 17601, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 765 / 17601 (4.35%)
Max absolute difference among violations: 3209793
Max relative difference among violations: 29839.67708333
ACTUAL: array([3044118, 2572497, 2712065, ..., 2059168,  928753,  304015])
DESIRED: array([3044118, 2572497, 2712065, ..., 2059168,  928753,  304015])
2025-04-27 03:18:44.158931 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 176061, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 176061, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 8459 / 176061 (4.8%)
Max absolute difference among violations: 3219927
Max relative difference among violations: 4692.0510397
ACTUAL: array([1229600,  784154, 1697217, ..., 2030763, 2167726, 2105708])
DESIRED: array([1229600,  784154, 1697217, ..., 2030763, 2167726, 2105708])
2025-04-27 03:18:44.418211 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 178701, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 178701, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 8316 / 178701 (4.65%)
Max absolute difference among violations: 3208776
Max relative difference among violations: 12588.94247788
ACTUAL: array([2348275, 1969287, 1703604, ...,  340852, 2374508, 2598753])
DESIRED: array([2348275, 1969287, 1703604, ...,  340852, 2374508, 2598753])
2025-04-27 03:18:44.762189 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 17988, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 17988, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 848 / 17988 (4.71%)
Max absolute difference among violations: 3166190
Max relative difference among violations: 477.25693132
ACTUAL: array([2351066,  980854,  576662, ..., 2536813,  163048, 3037339])
DESIRED: array([2351066,  980854,  576662, ..., 2536813,  163048, 3037339])
2025-04-27 03:18:45.114815 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 18054, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 18054, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 844 / 18054 (4.67%)
Max absolute difference among violations: 3167315
Max relative difference among violations: 455.47397742
ACTUAL: array([2317342, 3246276,  648877, ...,  496647, 1538600, 2672002])
DESIRED: array([2317342, 3246276,  648877, ...,  496647, 1538600, 2672002])
2025-04-27 03:18:45.455877 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 18081, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 18081, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 819 / 18081 (4.53%)
Max absolute difference among violations: 3074534
Max relative difference among violations: 1561.35169492
ACTUAL: array([2725413, 2350894, 1324249, ..., 1109982, 2526700,   93367])
DESIRED: array([2725413, 2350894, 1324249, ..., 1109982, 2526700,   93367])
2025-04-27 03:18:45.763316 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 182052, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 182052, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 8411 / 182052 (4.62%)
Max absolute difference among violations: 3260611
Max relative difference among violations: 8170.34304207
ACTUAL: array([ 655898, 2163264,  421835, ..., 1809933, 2881303,  204637])
DESIRED: array([ 655898, 2163264,  421835, ..., 1809933, 2881303,  204637])
2025-04-27 03:18:46.099304 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 18795, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 18795, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 852 / 18795 (4.53%)
Max absolute difference among violations: 3079557
Max relative difference among violations: 11365.1902439
ACTUAL: array([2021127, 1719181, 1276936, ...,  613343,  278159, 1775937])
DESIRED: array([2021127, 1719181, 1276936, ...,  613343,  278159, 1775937])
2025-04-27 03:18:46.412978 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 18969, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 18969, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 891 / 18969 (4.7%)
Max absolute difference among violations: 2990313
Max relative difference among violations: 404.03968939
ACTUAL: array([2204881, 1761013,  211398, ..., 2614304, 1139874,  303795])
DESIRED: array([2204881, 1761013,  211398, ..., 2614304, 1139874,  303795])
2025-04-27 03:18:46.727610 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 192987, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 192987, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 9035 / 192987 (4.68%)
Max absolute difference among violations: 3243997
Max relative difference among violations: 2843.8603352
ACTUAL: array([2626110, 1583000, 2627437, ..., 2218626, 2641439, 3240043])
DESIRED: array([2626110, 1583000, 2627437, ..., 2218626, 2641439, 3240043])
2025-04-27 03:18:47.001210 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 19461, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 19461, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 823 / 19461 (4.23%)
Max absolute difference among violations: 3207695
Max relative difference among violations: 2104.18463303
ACTUAL: array([1537354,  239829, 2571711, ..., 3176289, 2903522, 2367264])
DESIRED: array([1537354,  239829, 2571711, ..., 3176289, 2367264, 2903522])
2025-04-27 03:18:47.339166 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 195024, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 195024, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 9302 / 195024 (4.77%)
Max absolute difference among violations: 3273163
Max relative difference among violations: 12179.844
ACTUAL: array([1420116, 1782307,  199647, ..., 2042189, 1771058, 2302076])
DESIRED: array([1420116, 1782307,  199647, ..., 2042189, 1771058, 2302076])
2025-04-27 03:18:47.686286 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 206889, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 206889, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 9429 / 206889 (4.56%)
Max absolute difference among violations: 3258180
Max relative difference among violations: 12224.57435897
ACTUAL: array([2137549, 1217490, 2776655, ...,   64348,  355974,  355934])
DESIRED: array([2137549, 1217490, 2776655, ...,   64348,  355974,  355934])
2025-04-27 03:18:47.978725 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 20913, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 20913, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 976 / 20913 (4.67%)
Max absolute difference among violations: 3176573
Max relative difference among violations: 284.72871546
ACTUAL: array([ 853296, 2428008, 2270461, ..., 1953355, 2857900, 3176110])
DESIRED: array([ 853296, 2428008, 2270461, ..., 1953355, 2857900, 3176110])
2025-04-27 03:18:48.302767 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 21504, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 21504, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1004 / 21504 (4.67%)
Max absolute difference among violations: 3007884
Max relative difference among violations: 258.87558917
ACTUAL: array([2640269, 2372091, 1138852, ..., 1507822, 1647517, 3208061])
DESIRED: array([2640269, 2372091, 1138852, ..., 1507822, 1647517, 3208061])
2025-04-27 03:18:48.614654 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 21621, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 21621, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 974 / 21621 (4.5%)
Max absolute difference among violations: 3239821
Max relative difference among violations: 4561.23275862
ACTUAL: array([2929176, 1968912, 2314035, ..., 1405070, 2906379, 1915503])
DESIRED: array([2929176, 1968912, 2314035, ..., 1405070, 2906379, 1915503])
2025-04-27 03:18:48.921519 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 21639, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 21639, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1017 / 21639 (4.7%)
Max absolute difference among violations: 3141797
Max relative difference among violations: 889.03538663
ACTUAL: array([2449745, 1774218,  346340, ...,  200123,  303122, 2321222])
DESIRED: array([2449745, 1774218,  346340, ...,  200123,  303122, 2321222])
2025-04-27 03:18:49.224465 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 22047, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 22047, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1023 / 22047 (4.64%)
Max absolute difference among violations: 3254038
Max relative difference among violations: 250.71561754
ACTUAL: array([2490487, 1530887,  591484, ...,  624922, 1829493, 1124775])
DESIRED: array([2490487, 1530887,  591484, ...,  624922, 1829493, 1124775])
2025-04-27 03:18:49.550673 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 222156, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 222156, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 10432 / 222156 (4.7%)
Max absolute difference among violations: 3218587
Max relative difference among violations: 5845.84567901
ACTUAL: array([1423102, 3167512, 3081380, ..., 2016356, 2458989, 1050816])
DESIRED: array([1423102, 3167512, 3081380, ..., 2016356, 2458989, 1050816])
2025-04-27 03:18:49.898075 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 22458, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 22458, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1052 / 22458 (4.68%)
Max absolute difference among violations: 3163859
Max relative difference among violations: 1388.93159316
ACTUAL: array([3122362, 1861498,  180307, ..., 2706801, 2493574, 2844767])
DESIRED: array([3122362, 1861498,  180307, ..., 2706801, 2493574, 2844767])
2025-04-27 03:18:50.215250 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 22485, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 22485, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1036 / 22485 (4.61%)
Max absolute difference among violations: 3139485
Max relative difference among violations: 795.27877238
ACTUAL: array([2590824, 2610228, 2423054, ..., 2902586, 2667296, 1936219])
DESIRED: array([2590824, 2610228, 2423054, ..., 2902586, 2667296, 1936219])
2025-04-27 03:18:50.463436 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 22938, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 22938, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1058 / 22938 (4.61%)
Max absolute difference among violations: 3260855
Max relative difference among violations: 3138.81762918
ACTUAL: array([ 509178, 1245883,  325198, ...,  559930, 2393540, 2879673])
DESIRED: array([ 509178, 1245883,  325198, ...,  559930, 2393540, 2879673])
2025-04-27 03:18:50.758163 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 23199, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 23199, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1156 / 23199 (4.98%)
Max absolute difference among violations: 3172256
Max relative difference among violations: 1311.54942693
ACTUAL: array([1042166, 1515040, 1803655, ..., 2292444, 2749523,  237181])
DESIRED: array([1042166, 1515040, 1737412, ..., 2292444, 2749523,  237181])
2025-04-27 03:18:51.081273 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 23337, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 23337, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1045 / 23337 (4.48%)
Max absolute difference among violations: 3201792
Max relative difference among violations: 86750.39130435
ACTUAL: array([ 969886,  330167,  429564, ..., 2466401,  583363, 2284223])
DESIRED: array([ 969886,  330167,  429564, ..., 2466401,  583363, 2284223])
2025-04-27 03:18:51.460128 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 234837, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 234837, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 11129 / 234837 (4.74%)
Max absolute difference among violations: 3222134
Max relative difference among violations: 5572.47785548
ACTUAL: array([ 556467,  833326,  724900, ..., 1166603, 3139635, 2047360])
DESIRED: array([ 556467,  833326,  724900, ..., 1166603, 3139635, 2047360])
2025-04-27 03:18:51.814556 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 23964, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 23964, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1180 / 23964 (4.92%)
Max absolute difference among violations: 3142084
Max relative difference among violations: 2458.14686469
ACTUAL: array([ 136713, 1553118, 2077153, ..., 1335046, 2020514, 2465681])
DESIRED: array([ 136713, 1553118, 2077153, ..., 1335046, 2020514, 2465681])
2025-04-27 03:18:52.125723 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 24081, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 24081, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1198 / 24081 (4.97%)
Max absolute difference among violations: 3232003
Max relative difference among violations: 1013.15636497
ACTUAL: array([1225986, 2016843, 2818634, ..., 2040253, 1082293,  837784])
DESIRED: array([1225986, 2016843, 2818634, ..., 2040253, 1082293,  837784])
2025-04-27 03:18:52.439559 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 24285, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 24285, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1134 / 24285 (4.67%)
Max absolute difference among violations: 2985859
Max relative difference among violations: 753.40538885
ACTUAL: array([2817823, 2351978, 3136171, ...,    8568, 2018346, 2424626])
DESIRED: array([2817823, 2351978, 3136171, ...,    8568, 2018346, 2095993])
2025-04-27 03:18:52.750200 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 24426, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 24426, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1156 / 24426 (4.73%)
Max absolute difference among violations: 3035235
Max relative difference among violations: 289.23176505
ACTUAL: array([2248741, 1441997, 1371473, ..., 2978733, 1552900, 3244093])
DESIRED: array([2248741, 1441997, 1371473, ..., 2978733, 1552900, 3244093])
2025-04-27 03:18:53.055651 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 24729, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 24729, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1255 / 24729 (5.08%)
Max absolute difference among violations: 3257966
Max relative difference among violations: 16352.60233918
ACTUAL: array([2551529, 2079436, 2594406, ...,  305119,  118293, 2360843])
DESIRED: array([2551529, 2079436, 2594406, ...,  305119,  118293, 2360843])
2025-04-27 03:18:53.366630 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 24861, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 24861, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1242 / 24861 (5%)
Max absolute difference among violations: 3203722
Max relative difference among violations: 2673.21639344
ACTUAL: array([ 605899, 1668265, 1147081, ..., 2384165,  276676, 2164833])
DESIRED: array([ 605899, 1668265, 1147081, ..., 2384165,  276676, 2164833])
2025-04-27 03:18:53.685557 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 24891, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 24891, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1176 / 24891 (4.72%)
Max absolute difference among violations: 3204558
Max relative difference among violations: 2427.68870523
ACTUAL: array([ 258920, 2477859, 3236677, ..., 2894453,  557114, 1932248])
DESIRED: array([ 258920, 2477859, 3236677, ..., 2894453,  557114, 1932248])
2025-04-27 03:18:53.939622 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 25389, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 25389, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1204 / 25389 (4.74%)
Max absolute difference among violations: 3096494
Max relative difference among violations: 1217.73471183
ACTUAL: array([2133332, 2435093,   81879, ..., 2160802, 1003606, 1713204])
DESIRED: array([2133332, 2435093,   81879, ..., 2160802, 1003606, 1713204])
2025-04-27 03:18:54.250152 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 25449, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 25449, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1167 / 25449 (4.59%)
Max absolute difference among violations: 3066107
Max relative difference among violations: 527.11761458
ACTUAL: array([ 852793, 1320990, 2103303, ..., 1156977, 2589828, 1586295])
DESIRED: array([ 852793, 1320990, 2103303, ..., 1156977, 2589828, 1586295])
2025-04-27 03:18:54.493120 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 25653, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 25653, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1270 / 25653 (4.95%)
Max absolute difference among violations: 3227258
Max relative difference among violations: 274.14746544
ACTUAL: array([2687866, 2902997, 2300909, ...,  855231, 2753076, 2426932])
DESIRED: array([2687866, 2300909, 2902997, ...,  855231, 2753076, 2426932])
2025-04-27 03:18:54.789474 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 25665, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 25665, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1221 / 25665 (4.76%)
Max absolute difference among violations: 3162659
Max relative difference among violations: 700.67714438
ACTUAL: array([1987608,  944810, 2061670, ..., 2232013, 2533026,  155000])
DESIRED: array([1987608,  944810, 2061670, ..., 2232013, 2533026,  155000])
2025-04-27 03:18:55.104819 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 25707, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 25707, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1184 / 25707 (4.61%)
Max absolute difference among violations: 3134156
Max relative difference among violations: 695.09215017
ACTUAL: array([1743863, 1798508, 2300017, ...,  919583, 2916352, 2686142])
DESIRED: array([1743863, 1798508, 2300017, ...,  919583, 2916352, 2686142])
2025-04-27 03:18:55.421003 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 26028, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 26028, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1205 / 26028 (4.63%)
Max absolute difference among violations: 3211264
Max relative difference among violations: 167.27075737
ACTUAL: array([3175230,  318690, 1695471, ..., 3014818, 1256892, 2139221])
DESIRED: array([3175230,  318690, 1695471, ..., 3014818, 1256892, 2139221])
2025-04-27 03:18:55.735223 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 26037, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 26037, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1223 / 26037 (4.7%)
Max absolute difference among violations: 3183809
Max relative difference among violations: 1364.37893983
ACTUAL: array([3222820,  263793, 1822120, ..., 1873847, 1280626, 3238902])
DESIRED: array([3222820,  263793, 1822120, ..., 1873847, 1280626, 3238902])
2025-04-27 03:18:56.078823 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 26064, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 26064, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1190 / 26064 (4.57%)
Max absolute difference among violations: 3080680
Max relative difference among violations: 619.58300589
ACTUAL: array([ 374185,  883605, 1648824, ...,  658723, 2922796,  283057])
DESIRED: array([ 374185,  883605, 1648824, ...,  658723, 2922796,  283057])
2025-04-27 03:18:56.401105 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 26340, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 26340, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1261 / 26340 (4.79%)
Max absolute difference among violations: 3192380
Max relative difference among violations: 790.97621407
ACTUAL: array([2707045, 1664759,  636442, ..., 2608943, 1562703, 3003855])
DESIRED: array([2707045, 1664759,  636442, ..., 2608943, 1562703, 3003855])
2025-04-27 03:18:56.718259 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 26358, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 26358, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1284 / 26358 (4.87%)
Max absolute difference among violations: 3041104
Max relative difference among violations: 4022.14719626
ACTUAL: array([1364425,  350866, 1193863, ...,  809630,  773716, 2240837])
DESIRED: array([1364425,  350866, 1193863, ...,  809630,  773716, 2240837])
2025-04-27 03:18:57.035459 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 26721, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 26721, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1204 / 26721 (4.51%)
Max absolute difference among violations: 3195140
Max relative difference among violations: 373.89020948
ACTUAL: array([1456238, 3038577, 1777732, ...,  186715,  606749, 2755439])
DESIRED: array([1456238, 3038577, 1777732, ...,  449881,  606749, 2755439])
2025-04-27 03:18:57.346597 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 26763, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 26763, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1312 / 26763 (4.9%)
Max absolute difference among violations: 3127594
Max relative difference among violations: 353.42248996
ACTUAL: array([3077067,  259311,  140742, ..., 1244704,  201366,  126847])
DESIRED: array([3077067,  259311,  140742, ..., 1244704,  201366,  126847])
2025-04-27 03:18:57.659401 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 26820, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 26820, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1303 / 26820 (4.86%)
Max absolute difference among violations: 3192720
Max relative difference among violations: 665.07172131
ACTUAL: array([ 604623,  171469, 1601409, ...,  492203,  475535, 2992535])
DESIRED: array([ 604623,  171469, 1601409, ...,  492203,  475535, 2992535])
2025-04-27 03:18:57.977799 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 27378, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 27378, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1309 / 27378 (4.78%)
Max absolute difference among violations: 3112432
Max relative difference among violations: 807.07124937
ACTUAL: array([1581023, 2718234, 2109542, ..., 1744394, 1005405, 2752306])
DESIRED: array([1581023, 2718234, 2109542, ..., 1744394, 1005405, 2752306])
2025-04-27 03:18:58.300868 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 27540, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 27540, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1239 / 27540 (4.5%)
Max absolute difference among violations: 3179071
Max relative difference among violations: 147.12169385
ACTUAL: array([ 660925, 1727449, 2058815, ...,   51737,  378417,  936842])
DESIRED: array([ 660925, 1727449, 2058815, ...,   51737,  378417,  936842])
2025-04-27 03:18:58.621413 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 27789, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 27789, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1331 / 27789 (4.79%)
Max absolute difference among violations: 3190408
Max relative difference among violations: 369.3877845
ACTUAL: array([2992959, 1850430,  535106, ..., 1756552, 3088162, 2587177])
DESIRED: array([2992959, 1850430,  535106, ..., 1756552, 3088162, 2587177])
2025-04-27 03:18:58.881576 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 28236, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 28236, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1384 / 28236 (4.9%)
Max absolute difference among violations: 3174412
Max relative difference among violations: 2437.36510501
ACTUAL: array([1098751, 2356856,  873121, ..., 3082011, 1230619,  152708])
DESIRED: array([1098751, 2356856,  873121, ..., 3082011, 1230619,  152708])
2025-04-27 03:18:59.179853 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 28269, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 28269, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1375 / 28269 (4.86%)
Max absolute difference among violations: 3253887
Max relative difference among violations: 3915.62815884
ACTUAL: array([2973088, 1595002, 1306599, ..., 2062122, 1995778, 2874702])
DESIRED: array([2973088, 1595002, 1306599, ..., 2062122, 1995778, 2874702])
2025-04-27 03:18:59.510228 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 28776, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 28776, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1260 / 28776 (4.38%)
Max absolute difference among violations: 3077846
Max relative difference among violations: 214.77366816
ACTUAL: array([ 972501, 1948514, 2096938, ..., 1940542, 2076668, 1563090])
DESIRED: array([ 972501, 1948514, 2096938, ..., 1940542, 2076668, 1563090])
2025-04-27 03:18:59.772702 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 28779, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 28779, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1369 / 28779 (4.76%)
Max absolute difference among violations: 3213208
Max relative difference among violations: 319.73055509
ACTUAL: array([1894622, 1421156, 3170770, ..., 3104389, 3269538,  847089])
DESIRED: array([1894622, 1421156, 3170770, ..., 3104389, 3269538,  847089])
2025-04-27 03:19:00.051823 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 28836, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 28836, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1341 / 28836 (4.65%)
Max absolute difference among violations: 3224898
Max relative difference among violations: 213.21138606
ACTUAL: array([3212131,  503713, 1451595, ...,  402692, 1302970,  809667])
DESIRED: array([3212131,  503713,  277392, ...,  402692, 1302970,  809667])
2025-04-27 03:19:00.283784 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 28848, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 28848, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1379 / 28848 (4.78%)
Max absolute difference among violations: 3191005
Max relative difference among violations: 775.51893491
ACTUAL: array([1308464, 2285107,  594341, ..., 1834900, 2429547,  247646])
DESIRED: array([1308464, 2285107,  594341, ..., 1834900, 2429547,  247646])
2025-04-27 03:19:00.588717 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 29025, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 29025, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1329 / 29025 (4.58%)
Max absolute difference among violations: 3115966
Max relative difference among violations: 1088.98438784
ACTUAL: array([3174387,  856762, 2567746, ..., 2504372, 1614245,   68941])
DESIRED: array([ 856762, 3174387, 2567746, ..., 2504372, 1614245,   68941])
2025-04-27 03:19:00.922747 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 29103, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 29103, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1367 / 29103 (4.7%)
Max absolute difference among violations: 3239770
Max relative difference among violations: 1385.80541369
ACTUAL: array([2414473,  720834, 1948084, ..., 2309453,  395022,  890504])
DESIRED: array([2414473,  720834, 1275174, ..., 2748034,  395022,  890504])
2025-04-27 03:19:01.226063 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 29124, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 29124, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1308 / 29124 (4.49%)
Max absolute difference among violations: 3073416
Max relative difference among violations: 438.74240891
ACTUAL: array([2806867, 2053856, 2964056, ..., 1210604, 2105678,  248356])
DESIRED: array([2806867, 2053856, 2964056, ..., 1210604, 2105678,  248356])
2025-04-27 03:19:01.554463 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 29274, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 29274, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1323 / 29274 (4.52%)
Max absolute difference among violations: 3082208
Max relative difference among violations: 993.76617179
ACTUAL: array([2860007, 1614591, 2147790, ..., 1419999, 1922262, 2116210])
DESIRED: array([2860007, 1614591, 2147790, ..., 1419999, 1922262, 2116210])
2025-04-27 03:19:01.881907 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 29724, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 29724, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1381 / 29724 (4.65%)
Max absolute difference among violations: 3071199
Max relative difference among violations: 3313.65348837
ACTUAL: array([2663871, 2504202, 2516924, ..., 2314188, 1414933, 2048861])
DESIRED: array([2663871, 2504202, 2516924, ..., 2314188, 1414933, 2048861])
2025-04-27 03:19:02.197157 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 29847, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 29847, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1518 / 29847 (5.09%)
Max absolute difference among violations: 3258480
Max relative difference among violations: 505.26903396
ACTUAL: array([1082235, 2772012, 1571221, ..., 2009516,  261289,  319218])
DESIRED: array([1082235, 2772012, 1571221, ..., 2009516,  261289,  319218])
2025-04-27 03:19:02.528223 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 29865, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 29865, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1474 / 29865 (4.94%)
Max absolute difference among violations: 3176026
Max relative difference among violations: 1924.18311777
ACTUAL: array([2093558, 1978757,  912994, ..., 1617321, 2451352,  880394])
DESIRED: array([2093558, 1978757,  912994, ..., 1617321, 2451352,  880394])
2025-04-27 03:19:02.920225 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 30033, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 30033, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1377 / 30033 (4.58%)
Max absolute difference among violations: 3194236
Max relative difference among violations: 764.01712329
ACTUAL: array([1929052,  375340,  909760, ..., 1510850,  669963, 2356870])
DESIRED: array([1929052,  375340,  909760, ..., 1510850,  669963, 2356870])
2025-04-27 03:19:03.231483 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 30063, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 30063, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1336 / 30063 (4.44%)
Max absolute difference among violations: 3261988
Max relative difference among violations: 1267.79011047
ACTUAL: array([ 477153, 3005512, 2976932, ...,  465920, 2454475, 1232512])
DESIRED: array([ 477153, 2976932, 3005512, ..., 2355506, 2454475, 1232512])
2025-04-27 03:19:03.578148 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 30096, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 30096, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1452 / 30096 (4.82%)
Max absolute difference among violations: 3158927
Max relative difference among violations: 2599.66695728
ACTUAL: array([1367164,  891478,  646514, ..., 2976181, 2717052, 2497226])
DESIRED: array([1367164,  891478,  646514, ..., 2976181, 2717052, 2497226])
2025-04-27 03:19:03.880748 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 30141, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 30141, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1376 / 30141 (4.57%)
Max absolute difference among violations: 3199277
Max relative difference among violations: 267.69565889
ACTUAL: array([3115618, 2310763, 1661081, ..., 2618354, 2425475, 2671090])
DESIRED: array([3115618, 1661081, 2310763, ..., 2618354, 2425475, 2671090])
2025-04-27 03:19:04.132579 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 30144, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 30144, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1334 / 30144 (4.43%)
Max absolute difference among violations: 3151339
Max relative difference among violations: 2729.60189076
ACTUAL: array([3062795, 1695293, 1972601, ..., 2285753, 1421449,  803688])
DESIRED: array([3062795, 1695293, 1972601, ..., 2285753, 1421449,  803688])
2025-04-27 03:19:04.432478 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 30231, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 30231, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1442 / 30231 (4.77%)
Max absolute difference among violations: 3078655
Max relative difference among violations: 532.5279517
ACTUAL: array([1988978, 1764266, 2641631, ...,  576050, 2336706, 2722493])
DESIRED: array([1764266, 1988978, 2641631, ...,  576050, 2336706, 2722493])
2025-04-27 03:19:04.796780 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 30297, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 30297, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1386 / 30297 (4.57%)
Max absolute difference among violations: 3108288
Max relative difference among violations: 804.62314225
ACTUAL: array([ 293047, 1505689, 2661418, ..., 1850341, 3118078, 2092716])
DESIRED: array([ 293047, 1505689, 2661418, ..., 1850341, 3118078, 2092716])
2025-04-27 03:19:05.220002 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 30339, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 30339, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1333 / 30339 (4.39%)
Max absolute difference among violations: 3232671
Max relative difference among violations: 25861.368
ACTUAL: array([ 644619, 2262181,  582768, ..., 2106350, 1561337, 1009911])
DESIRED: array([ 644619, 2262181,  582768, ..., 2106350, 1561337, 1009911])
2025-04-27 03:19:05.548047 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 30528, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 30528, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1353 / 30528 (4.43%)
Max absolute difference among violations: 3122586
Max relative difference among violations: 278.07045859
ACTUAL: array([ 947523, 1145506, 1498742, ...,  132728, 2737483,  998289])
DESIRED: array([ 947523, 1145506, 1498742, ...,  132728,  998289, 2737483])
2025-04-27 03:19:05.872588 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 30624, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 30624, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1492 / 30624 (4.87%)
Max absolute difference among violations: 3124164
Max relative difference among violations: 551.83866563
ACTUAL: array([1790440,  333160, 2380778, ..., 2369632,  425329, 2518164])
DESIRED: array([1790440,  333160, 2380778, ..., 2369632,  425329, 2518164])
2025-04-27 03:19:06.206330 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 30690, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 30690, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1466 / 30690 (4.78%)
Max absolute difference among violations: 3182899
Max relative difference among violations: 2471.92544987
ACTUAL: array([2167519, 2694059, 2851234, ..., 2921013,  897325, 2007864])
DESIRED: array([2167519, 2694059, 2851234, ..., 2921013,  897325, 2007864])
2025-04-27 03:19:06.526047 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 30852, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 30852, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1388 / 30852 (4.5%)
Max absolute difference among violations: 3216821
Max relative difference among violations: 1667.06811989
ACTUAL: array([2399079,   46545, 1069610, ..., 2381004, 2819633, 3117225])
DESIRED: array([2399079,   46545, 1069610, ..., 2381004, 2819633, 3117225])
2025-04-27 03:19:06.889215 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 30912, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 30912, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1410 / 30912 (4.56%)
Max absolute difference among violations: 3045136
Max relative difference among violations: 2110.28135828
ACTUAL: array([ 161579, 1074290, 1439234, ..., 1610459,  811999,  239802])
DESIRED: array([ 161579, 1074290, 1439234, ..., 1610459,  811999,  239802])
2025-04-27 03:19:07.215085 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 30981, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 30981, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1397 / 30981 (4.51%)
Max absolute difference among violations: 3125340
Max relative difference among violations: 4693.18181818
ACTUAL: array([3095151, 2159772, 2813202, ..., 1370102, 1635362,  302883])
DESIRED: array([3095151, 2159772, 2813202, ..., 1370102, 1635362,  302883])
2025-04-27 03:19:07.567908 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 31110, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 31110, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1428 / 31110 (4.59%)
Max absolute difference among violations: 3244968
Max relative difference among violations: 728.55848329
ACTUAL: array([ 907888, 2519460, 1861309, ..., 3239856,   64433, 1916784])
DESIRED: array([ 907888, 2519460, 1861309, ..., 3239856,   64433, 1916784])
2025-04-27 03:19:07.894547 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 31170, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 31170, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1456 / 31170 (4.67%)
Max absolute difference among violations: 3133903
Max relative difference among violations: 959.31286895
ACTUAL: array([2780075, 1767248, 2886783, ...,  131258,  620914, 1246418])
DESIRED: array([2780075, 1767248, 2886783, ...,  131258,  620914, 1246418])
2025-04-27 03:19:08.307838 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 31368, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 31368, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1558 / 31368 (4.97%)
Max absolute difference among violations: 3161362
Max relative difference among violations: 1432.80101752
ACTUAL: array([2491814, 2760044, 1162791, ..., 3090157,  318718, 1042420])
DESIRED: array([2491814, 2760044, 1162791, ..., 3090157,  318718, 1042420])
2025-04-27 03:19:08.660285 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 31698, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 31698, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1459 / 31698 (4.6%)
Max absolute difference among violations: 3060457
Max relative difference among violations: 4906.21617162
ACTUAL: array([1806761, 1210000, 2460296, ..., 2229555,  334762, 1668369])
DESIRED: array([1806761, 1210000, 2460296, ..., 2229555,  334762, 1668369])
2025-04-27 03:19:08.983514 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 31800, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 31800, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1477 / 31800 (4.64%)
Max absolute difference among violations: 3127879
Max relative difference among violations: 7004.35926773
ACTUAL: array([ 325444, 1127761, 1829283, ..., 2403976, 2222337, 1400238])
DESIRED: array([ 325444, 1127761, 1829283, ..., 2403976, 2222337, 1400238])
2025-04-27 03:19:09.319122 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 32778, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 32778, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1570 / 32778 (4.79%)
Max absolute difference among violations: 3248057
Max relative difference among violations: 1357.09447415
ACTUAL: array([2036279, 2616507,  731245, ..., 1097748, 2866403, 2680012])
DESIRED: array([2036279,  731245, 2616507, ..., 1097748, 2866403, 2680012])
2025-04-27 03:19:09.633654 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 32892, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 32892, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1561 / 32892 (4.75%)
Max absolute difference among violations: 3195409
Max relative difference among violations: 287.95531838
ACTUAL: array([ 727962, 1504801, 2961401, ..., 1897807,  402563, 1185875])
DESIRED: array([ 727962, 1504801, 2961401, ..., 1897807,  402563, 1185875])
2025-04-27 03:19:09.912762 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 32937, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 32937, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1505 / 32937 (4.57%)
Max absolute difference among violations: 3132209
Max relative difference among violations: 8142.2761194
ACTUAL: array([2660853, 2682212, 2558652, ...,  584222, 2166193, 2558759])
DESIRED: array([2660853, 2682212, 2558652, ...,  584222, 2166193, 2558759])
2025-04-27 03:19:10.282203 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 33039, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 33039, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1547 / 33039 (4.68%)
Max absolute difference among violations: 3196825
Max relative difference among violations: 702.95210166
ACTUAL: array([3061710, 1137295, 2978973, ...,   65098, 2247466, 2495340])
DESIRED: array([3061710, 1137295, 2978973, ...,   65098, 2247466, 2495340])
2025-04-27 03:19:10.610451 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 33102, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 33102, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1587 / 33102 (4.79%)
Max absolute difference among violations: 3115388
Max relative difference among violations: 726.96772983
ACTUAL: array([2283731,  534663,  642702, ..., 1811362,  891053,  567797])
DESIRED: array([2283731,  534663,  642702, ..., 1811362,  891053,  567797])
2025-04-27 03:19:10.929350 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 33111, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 33111, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1607 / 33111 (4.85%)
Max absolute difference among violations: 3108352
Max relative difference among violations: 433.80073327
ACTUAL: array([3016026, 1110626,   65907, ..., 1378455,  735517,  689474])
DESIRED: array([3016026, 1110626,   65907, ..., 1378455,  735517,  689474])
2025-04-27 03:19:11.245072 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 33132, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 33132, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1621 / 33132 (4.89%)
Max absolute difference among violations: 3169074
Max relative difference among violations: 364.30221732
ACTUAL: array([2385402,   84797, 2547508, ..., 2745168, 3059931, 1504940])
DESIRED: array([2385402,   84797, 2547508, ..., 2745168, 3059931, 1504940])
2025-04-27 03:19:11.587097 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 33333, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 33333, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1625 / 33333 (4.88%)
Max absolute difference among violations: 3236047
Max relative difference among violations: 731.60290932
ACTUAL: array([1004888, 3069042,  606555, ..., 1239310,  462856,  138045])
DESIRED: array([1004888, 3069042,  606555, ...,  462856, 1239310,  138045])
2025-04-27 03:19:11.950429 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 33336, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 33336, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1500 / 33336 (4.5%)
Max absolute difference among violations: 3151010
Max relative difference among violations: 1257.82094595
ACTUAL: array([ 225178,  769837, 1277348, ..., 2323295, 1599114, 1334682])
DESIRED: array([ 225178,  769837, 1277348, ..., 2323295, 1599114, 1334682])
2025-04-27 03:19:12.268106 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 33636, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 33636, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1519 / 33636 (4.52%)
Max absolute difference among violations: 3245450
Max relative difference among violations: 1845.98314607
ACTUAL: array([2325394, 1428016, 3053276, ..., 2866799, 3270444,  513160])
DESIRED: array([2325394, 1428016, 3053276, ..., 2866799, 3270444,  513160])
2025-04-27 03:19:12.591390 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 33642, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 33642, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1525 / 33642 (4.53%)
Max absolute difference among violations: 3207028
Max relative difference among violations: 867.04786428
ACTUAL: array([  29584, 1538226, 3113387, ...,  966998,   60279,  823823])
DESIRED: array([  29584, 1538226, 1218728, ...,  966998,   60279,  823823])
2025-04-27 03:19:12.977210 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 33762, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 33762, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1530 / 33762 (4.53%)
Max absolute difference among violations: 3151258
Max relative difference among violations: 220959.16666667
ACTUAL: array([2650735, 2556475,  168831, ..., 2947985, 1562735, 1546521])
DESIRED: array([2650735, 2556475,  168831, ..., 2947985, 1562735, 1546521])
2025-04-27 03:19:13.294741 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 33873, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 33873, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1682 / 33873 (4.97%)
Max absolute difference among violations: 3191306
Max relative difference among violations: 495.90177983
ACTUAL: array([2134992, 2644612, 1428162, ..., 2693763, 1668129,  538053])
DESIRED: array([2134992, 2644612, 1428162, ..., 2693763, 1668129,  538053])
2025-04-27 03:19:13.638776 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 33909, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 33909, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1562 / 33909 (4.61%)
Max absolute difference among violations: 3222290
Max relative difference among violations: 270.73531989
ACTUAL: array([ 295983,  944336, 1826590, ..., 3068617,   97356, 3006698])
DESIRED: array([ 295983,  944336, 1826590, ..., 3068617,   97356, 3006698])
2025-04-27 03:19:13.899029 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 33984, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 33984, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1637 / 33984 (4.82%)
Max absolute difference among violations: 3165684
Max relative difference among violations: 830.52932802
ACTUAL: array([ 636837, 1845831, 1806563, ...,  205210, 3241009,  707266])
DESIRED: array([ 636837, 1845831, 1806563, ...,  205210, 3241009,  707266])
2025-04-27 03:19:14.216191 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 34158, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 34158, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1616 / 34158 (4.73%)
Max absolute difference among violations: 3147126
Max relative difference among violations: 1474.55111365
ACTUAL: array([1921876, 2809145, 1709480, ..., 1087367, 3197254, 1855300])
DESIRED: array([1921876, 2809145, 1709480, ..., 1087367, 3197254, 1855300])
2025-04-27 03:19:14.533438 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 34533, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 34533, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1568 / 34533 (4.54%)
Max absolute difference among violations: 3161274
Max relative difference among violations: 329.75856758
ACTUAL: array([ 989250, 1617349, 2100746, ...,  290234, 2851391, 2950180])
DESIRED: array([ 989250, 1617349,   56162, ...,  290234, 2851391, 2950180])
2025-04-27 03:19:14.865358 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 35178, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 35178, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1651 / 35178 (4.69%)
Max absolute difference among violations: 3191960
Max relative difference among violations: 26672.11363636
ACTUAL: array([2953367, 3000454,  126976, ...,  631611, 2777135, 3139187])
DESIRED: array([2953367, 3000454,  126976, ...,  631611, 2777135, 3139187])
2025-04-27 03:19:15.186210 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 35379, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 35379, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1625 / 35379 (4.59%)
Max absolute difference among violations: 3113832
Max relative difference among violations: 1873.90996785
ACTUAL: array([1183909, 1567949,   50391, ...,  175173, 1159768, 1667904])
DESIRED: array([1183909, 1567949,   50391, ...,  175173, 1159768, 1667904])
2025-04-27 03:19:15.504795 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 35391, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 35391, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1779 / 35391 (5.03%)
Max absolute difference among violations: 3141717
Max relative difference among violations: 391.94257541
ACTUAL: array([2408924, 2746271, 2587171, ..., 3046778,  759790, 2903533])
DESIRED: array([2408924, 2746271, 2587171, ..., 3046778,  759790, 2903533])
2025-04-27 03:19:15.919554 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 35412, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 35412, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1752 / 35412 (4.95%)
Max absolute difference among violations: 3152604
Max relative difference among violations: 705.11659693
ACTUAL: array([1937705, 3162917, 1975789, ..., 1661068, 2333144,  942532])
DESIRED: array([1937705, 1975789, 3162917, ..., 1661068, 2333144,  942532])
2025-04-27 03:19:16.257748 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 35559, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 35559, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1668 / 35559 (4.69%)
Max absolute difference among violations: 3119432
Max relative difference among violations: 450.71772465
ACTUAL: array([3147278, 2277501,  202251, ..., 2013172,  368913, 2117783])
DESIRED: array([3147278, 2277501,  202251, ..., 2013172,  368913, 2117783])
2025-04-27 03:19:16.593276 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 35565, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 35565, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1644 / 35565 (4.62%)
Max absolute difference among violations: 3095793
Max relative difference among violations: 3449.54393305
ACTUAL: array([1026197, 2203419,  421226, ..., 2714703, 2239066, 2855438])
DESIRED: array([1026197, 2203419,  421226, ..., 2714703, 2239066, 2855438])
2025-04-27 03:19:16.857571 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 35616, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 35616, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1584 / 35616 (4.45%)
Max absolute difference among violations: 3114426
Max relative difference among violations: 375.63749051
ACTUAL: array([ 355373,  283964, 1334449, ..., 2965586, 3018430, 2893289])
DESIRED: array([ 355373,  283964, 1334449, ..., 2965586, 3018430, 2893289])
2025-04-27 03:19:17.172061 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 35811, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 35811, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1652 / 35811 (4.61%)
Max absolute difference among violations: 3196273
Max relative difference among violations: 2105.85123967
ACTUAL: array([1966920,  468837,  440494, ...,  246394, 2519151,  447154])
DESIRED: array([1966920,  468837,  440494, ...,  246394,  447154, 2519151])
2025-04-27 03:19:17.535707 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 36585, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 36585, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1726 / 36585 (4.72%)
Max absolute difference among violations: 3226421
Max relative difference among violations: 410.29209555
ACTUAL: array([ 118045, 1012764,   62940, ..., 3055267, 2796737,  722462])
DESIRED: array([ 118045, 1012764,   62940, ..., 3055267, 2796737,  722462])
2025-04-27 03:19:17.852114 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 36780, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 36780, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1731 / 36780 (4.71%)
Max absolute difference among violations: 3150104
Max relative difference among violations: 1202.0037037
ACTUAL: array([2887005, 2796865, 2222002, ...,  377065,  618221,  255485])
DESIRED: array([2887005, 2796865, 2222002, ...,  377065,  618221,  255485])
2025-04-27 03:19:18.174994 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 36963, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 36963, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1745 / 36963 (4.72%)
Max absolute difference among violations: 3069878
Max relative difference among violations: 412.6815989
ACTUAL: array([1852682, 1154184, 3017852, ..., 1227960,  337276, 1727636])
DESIRED: array([1852682, 1154184, 3017852, ..., 1227960,  337276, 1727636])
2025-04-27 03:19:18.499934 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 37524, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 37524, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1795 / 37524 (4.78%)
Max absolute difference among violations: 3210975
Max relative difference among violations: 981.1442606
ACTUAL: array([2069912,  678528, 2946286, ...,  898818,  142069,  824016])
DESIRED: array([2069912,  678528, 2946286, ...,  898818,  142069,  824016])
2025-04-27 03:19:18.828348 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 37749, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 37749, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1786 / 37749 (4.73%)
Max absolute difference among violations: 3185864
Max relative difference among violations: 840.36075544
ACTUAL: array([2789340,  453419, 2966553, ...,  184637, 1372479,  599782])
DESIRED: array([2789340,  453419, 2966553, ...,  184637, 1372479,  599782])
2025-04-27 03:19:19.095133 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 37920, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 37920, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1690 / 37920 (4.46%)
Max absolute difference among violations: 3147825
Max relative difference among violations: 2335.10037736
ACTUAL: array([ 152102, 1177553, 2705590, ..., 1583819, 1737725, 1613186])
DESIRED: array([ 152102, 1177553, 2705590, ..., 1583819, 1737725, 1613186])
2025-04-27 03:19:19.346492 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 37986, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 37986, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1704 / 37986 (4.49%)
Max absolute difference among violations: 3108853
Max relative difference among violations: 1513.97974414
ACTUAL: array([3169398,  433034, 2509910, ..., 2753115, 1787854, 2323570])
DESIRED: array([3169398,  433034, 2509910, ..., 2753115, 1787854, 2323570])
2025-04-27 03:19:19.667256 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 37998, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 37998, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1878 / 37998 (4.94%)
Max absolute difference among violations: 3138274
Max relative difference among violations: 8001.06198347
ACTUAL: array([2592518, 3021774, 3177051, ..., 1090637,  230958, 2416928])
DESIRED: array([2592518, 3021774, 3177051, ..., 1090637,  230958, 2416928])
2025-04-27 03:19:20.021317 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 38208, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 38208, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1791 / 38208 (4.69%)
Max absolute difference among violations: 3046422
Max relative difference among violations: 544.09222598
ACTUAL: array([2362977,   83698,  422016, ...,  648565,  342675, 1098670])
DESIRED: array([  83698, 2362977,  422016, ...,  648565,  342675, 1098670])
2025-04-27 03:19:20.376569 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 38250, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 38250, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1775 / 38250 (4.64%)
Max absolute difference among violations: 3117641
Max relative difference among violations: 773527.
ACTUAL: array([2088487,  719599,  452353, ...,  877160,  359972,  613772])
DESIRED: array([2088487,  719599,  452353, ...,  877160,  359972,  613772])
2025-04-27 03:19:20.709642 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 38253, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 38253, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1810 / 38253 (4.73%)
Max absolute difference among violations: 3125062
Max relative difference among violations: 3390.08978873
ACTUAL: array([  49446, 2073463, 2372001, ...,  460699,  987760, 2921465])
DESIRED: array([  49446, 2073463, 2372001, ...,  460699,  987760, 2921465])
2025-04-27 03:19:21.057666 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 38301, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 38301, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1751 / 38301 (4.57%)
Max absolute difference among violations: 3240878
Max relative difference among violations: 14542.53333333
ACTUAL: array([3179578,   64814, 2851741, ..., 2195764,   92482, 1840770])
DESIRED: array([3179578,   64814, 2851741, ..., 2195764,   92482, 1840770])
2025-04-27 03:19:21.382692 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 38430, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 38430, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1761 / 38430 (4.58%)
Max absolute difference among violations: 3136473
Max relative difference among violations: 6518.61643836
ACTUAL: array([ 873358, 2353304,  226580, ...,   76460,  803720,   19993])
DESIRED: array([ 873358, 2353304,  226580, ...,   76460,  803720,   19993])
2025-04-27 03:19:21.727612 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 38682, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 38682, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1826 / 38682 (4.72%)
Max absolute difference among violations: 3152912
Max relative difference among violations: 8089.0984252
ACTUAL: array([ 867874, 3124678, 1670705, ..., 1820662,  216025, 1253909])
DESIRED: array([ 867874, 3124678, 1077139, ..., 1820662,  216025, 1253909])
2025-04-27 03:19:22.106339 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 38772, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 38772, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1956 / 38772 (5.04%)
Max absolute difference among violations: 3226861
Max relative difference among violations: 9257.
ACTUAL: array([ 290291, 2285779, 1705226, ...,   13003, 1565801, 1893166])
DESIRED: array([ 290291, 2285779, 1705226, ...,   13003, 1565801, 1893166])
2025-04-27 03:19:22.370361 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 38958, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 38958, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1880 / 38958 (4.83%)
Max absolute difference among violations: 3175374
Max relative difference among violations: 755.44880677
ACTUAL: array([ 631743, 1006567, 2597741, ...,  708995, 1125687, 2407900])
DESIRED: array([ 631743, 1006567, 2597741, ...,  708995, 1125687, 2407900])
2025-04-27 03:19:22.710662 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 39411, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 39411, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1822 / 39411 (4.62%)
Max absolute difference among violations: 3241847
Max relative difference among violations: 4047.56472081
ACTUAL: array([2561332, 1878516, 3141978, ..., 1089020, 1892548, 1863569])
DESIRED: array([2561332, 1878516, 3141978, ..., 1089020, 1892548, 1863569])
2025-04-27 03:19:23.080227 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 39684, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 39684, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1751 / 39684 (4.41%)
Max absolute difference among violations: 3141395
Max relative difference among violations: 80651.13513514
ACTUAL: array([ 794998, 2872502,  411030, ...,  499535, 1181760, 3166247])
DESIRED: array([ 794998, 2872502,  411030, ...,  499535, 1181760, 3166247])
2025-04-27 03:19:23.415647 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 39831, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 39831, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1889 / 39831 (4.74%)
Max absolute difference among violations: 3208407
Max relative difference among violations: 1235.40838068
ACTUAL: array([1359706,  143508,  415621, ...,  458299, 3232738,  392457])
DESIRED: array([1359706,  143508,  415621, ...,  458299, 3232738,  392457])
2025-04-27 03:19:23.742368 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 39897, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 39897, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1866 / 39897 (4.68%)
Max absolute difference among violations: 3226494
Max relative difference among violations: 2163.65181058
ACTUAL: array([2750138, 3121570, 1445862, ..., 3190591, 2754235, 2792438])
DESIRED: array([2750138, 3121570, 1445862, ..., 3190591, 2754235, 2792438])
2025-04-27 03:19:24.072305 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 39918, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 39918, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1918 / 39918 (4.8%)
Max absolute difference among violations: 3186241
Max relative difference among violations: 1474.79161372
ACTUAL: array([ 597308, 2377927, 1002657, ..., 2936191, 1134613,  206220])
DESIRED: array([ 597308, 2377927, 1002657, ..., 2936191, 1134613,  206220])
2025-04-27 03:19:24.393057 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 39921, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 39921, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1857 / 39921 (4.65%)
Max absolute difference among violations: 3082305
Max relative difference among violations: 1385.12797784
ACTUAL: array([2520001,  659535, 2860766, ...,  148423, 1953880, 1036867])
DESIRED: array([2520001,  659535, 2860766, ...,  148423, 1953880, 1036867])
2025-04-27 03:19:24.779767 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 40053, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 40053, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1855 / 40053 (4.63%)
Max absolute difference among violations: 3084985
Max relative difference among violations: 2156.51618257
ACTUAL: array([ 799294, 1593244, 1023372, ..., 1262595,  558777, 3126402])
DESIRED: array([ 799294, 1593244, 1023372, ..., 1262595,  558777, 3126402])
2025-04-27 03:19:25.174877 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 40095, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 40095, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1954 / 40095 (4.87%)
Max absolute difference among violations: 3164985
Max relative difference among violations: 581.05707071
ACTUAL: array([ 400426,  763711, 2628423, ..., 1550028, 1682161, 1889104])
DESIRED: array([ 400426,  763711, 2628423, ..., 1550028, 1682161, 1889104])
2025-04-27 03:19:25.500768 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 40149, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 40149, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1779 / 40149 (4.43%)
Max absolute difference among violations: 3217109
Max relative difference among violations: 1212.095
ACTUAL: array([1461199,   75928, 3088385, ..., 3134260, 2762763, 2696432])
DESIRED: array([1461199,   75928, 3088385, ..., 2762763, 3134260, 2696432])
2025-04-27 03:19:25.814541 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 40275, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 40275, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1809 / 40275 (4.49%)
Max absolute difference among violations: 3191533
Max relative difference among violations: 845.286
ACTUAL: array([2305979, 2238793, 1954169, ..., 1863798, 2529633, 2383872])
DESIRED: array([2305979, 2238793, 1954169, ..., 1863798, 2529633, 2383872])
2025-04-27 03:19:26.155059 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 40650, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 40650, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1992 / 40650 (4.9%)
Max absolute difference among violations: 3202275
Max relative difference among violations: 8797.36423841
ACTUAL: array([2734849, 2986957, 3151013, ...,  518223, 2769880, 2741010])
DESIRED: array([2734849, 2986957, 3151013, ...,  518223, 2769880, 2741010])
2025-04-27 03:19:26.520822 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 40686, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 40686, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1892 / 40686 (4.65%)
Max absolute difference among violations: 3181587
Max relative difference among violations: 1279.28381375
ACTUAL: array([1928765, 2716029, 1641882, ...,  956876, 1180346,  683287])
DESIRED: array([1928765, 2716029, 1641882, ...,  956876, 1180346,  683287])
2025-04-27 03:19:26.845905 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 40767, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 40767, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1881 / 40767 (4.61%)
Max absolute difference among violations: 3215611
Max relative difference among violations: 5113.47843943
ACTUAL: array([   9176, 2603354,  307478, ..., 1241907, 1872420,  843821])
DESIRED: array([   9176, 2603354,  307478, ..., 1241907, 1872420,  843821])
2025-04-27 03:19:27.213640 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 41334, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 41334, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1994 / 41334 (4.82%)
Max absolute difference among violations: 3205445
Max relative difference among violations: 2662.94169835
ACTUAL: array([2694777, 1299903,  492058, ..., 1121382,  412017,  260430])
DESIRED: array([2694777, 1299903,  492058, ..., 1121382,  412017,  260430])
2025-04-27 03:19:27.483725 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 41421, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 41421, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1900 / 41421 (4.59%)
Max absolute difference among violations: 3172407
Max relative difference among violations: 981.66127847
ACTUAL: array([3083129,  567066, 2485061, ..., 1049093, 2537142, 1647978])
DESIRED: array([3083129,  567066, 2485061, ..., 1049093, 2537142, 1647978])
2025-04-27 03:19:27.852710 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 41532, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 41532, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1913 / 41532 (4.61%)
Max absolute difference among violations: 3193658
Max relative difference among violations: 813.73264984
ACTUAL: array([ 505447,  477260,   44710, ..., 2205766,  257269, 2041544])
DESIRED: array([ 505447,  477260,   44710, ..., 2205766,  257269, 2041544])
2025-04-27 03:19:28.190847 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 41553, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 41553, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1947 / 41553 (4.69%)
Max absolute difference among violations: 3216169
Max relative difference among violations: 880.11653718
ACTUAL: array([1540068, 1926261, 2680298, ..., 2415951, 1363893, 3180382])
DESIRED: array([1540068, 1926261, 2680298, ..., 2415951, 1363893, 3180382])
2025-04-27 03:19:28.458226 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 42129, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 42129, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2024 / 42129 (4.8%)
Max absolute difference among violations: 3219811
Max relative difference among violations: 1657.37199582
ACTUAL: array([1770909, 2327864, 1796925, ...,  173183, 3227062,  254558])
DESIRED: array([1770909, 2327864, 1796925, ...,  173183, 3227062,  254558])
2025-04-27 03:19:28.817020 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 42345, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 42345, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1924 / 42345 (4.54%)
Max absolute difference among violations: 3214991
Max relative difference among violations: 2718.15514184
ACTUAL: array([ 884248, 2543325,  864277, ...,  651907,  484016, 3020155])
DESIRED: array([ 884248, 2543325,  864277, ...,  651907,  484016, 3020155])
2025-04-27 03:19:29.156288 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 42774, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 42774, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2042 / 42774 (4.77%)
Max absolute difference among violations: 3263901
Max relative difference among violations: 41155.91071429
ACTUAL: array([ 758437, 2185963,  997983, ...,  512009,  864560, 2037781])
DESIRED: array([ 758437, 2185963,  997983, ...,  512009,  864560, 1767426])
2025-04-27 03:19:29.617445 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 43290, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 43290, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2105 / 43290 (4.86%)
Max absolute difference among violations: 3115236
Max relative difference among violations: 1853.98537477
ACTUAL: array([2811384,  491598, 1534022, ..., 2617806, 1780359, 2320279])
DESIRED: array([2811384,  491598, 1534022, ..., 2617806, 1780359, 2320279])
2025-04-27 03:19:29.897432 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 43299, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 43299, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2020 / 43299 (4.67%)
Max absolute difference among violations: 3118439
Max relative difference among violations: 8939.22898551
ACTUAL: array([1322446, 1048786,   24515, ..., 1736548,  498640, 2848072])
DESIRED: array([1322446, 1048786,   24515, ..., 1736548,  498640, 2848072])
2025-04-27 03:19:30.189883 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 43455, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 43455, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2025 / 43455 (4.66%)
Max absolute difference among violations: 3215504
Max relative difference among violations: 481.05857204
ACTUAL: array([ 765604, 1608057,  556202, ..., 1583506,  978090, 2543281])
DESIRED: array([ 765604, 1608057,  556202, ..., 1583506,  978090, 2543281])
2025-04-27 03:19:30.439368 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 43542, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 43542, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2044 / 43542 (4.69%)
Max absolute difference among violations: 3231827
Max relative difference among violations: 2057.17823043
ACTUAL: array([1185231, 3072574,  272254, ...,  218857,  221779, 1264604])
DESIRED: array([1185231, 3072574,  272254, ...,  218857,  221779, 1264604])
2025-04-27 03:19:30.752239 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 43629, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 43629, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1886 / 43629 (4.32%)
Max absolute difference among violations: 3053385
Max relative difference among violations: 773.49921011
ACTUAL: array([2242686, 2928210,  900074, ..., 3088794,  608189, 2040982])
DESIRED: array([2242686, 2928210,  798530, ..., 3088794,  608189, 2040982])
2025-04-27 03:19:31.006264 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 43770, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 43770, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2084 / 43770 (4.76%)
Max absolute difference among violations: 3213118
Max relative difference among violations: 3041.2012848
ACTUAL: array([2811450, 1312713, 2757054, ...,  886522, 1305626,  692500])
DESIRED: array([2811450, 1312713, 2757054, ...,  886522, 1305626,  692500])
2025-04-27 03:19:31.323051 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 43803, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 43803, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2040 / 43803 (4.66%)
Max absolute difference among violations: 3195291
Max relative difference among violations: 3222.44314869
ACTUAL: array([1848252, 3258816, 2357198, ...,  554074, 2755766, 1534683])
DESIRED: array([1848252, 3258816, 2357198, ...,  554074, 2755766,   13963])
2025-04-27 03:19:31.708319 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 43809, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 43809, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2047 / 43809 (4.67%)
Max absolute difference among violations: 3261431
Max relative difference among violations: 2048.55254461
ACTUAL: array([1475861, 2796963, 2003616, ...,  330175,  527767,  718366])
DESIRED: array([1475861, 2796963, 2003616, ...,  330175,  527767,  718366])
2025-04-27 03:19:32.039009 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 43920, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 43920, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2009 / 43920 (4.57%)
Max absolute difference among violations: 3118830
Max relative difference among violations: 707.18259386
ACTUAL: array([  54021,  734970, 1364052, ..., 2998933, 3024421,  657621])
DESIRED: array([  54021,  734970, 1364052, ..., 2998933, 3024421,  657621])
2025-04-27 03:19:32.367018 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 43950, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 43950, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2069 / 43950 (4.71%)
Max absolute difference among violations: 3097512
Max relative difference among violations: 850.50304613
ACTUAL: array([1504137, 1142331, 1867161, ..., 1862551, 2538312,  625370])
DESIRED: array([1504137, 1142331, 1867161, ..., 1862551, 2538312,  625370])
2025-04-27 03:19:32.631417 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 43986, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 43986, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2043 / 43986 (4.64%)
Max absolute difference among violations: 3076781
Max relative difference among violations: 276837.16666667
ACTUAL: array([ 272642, 1389005,  219799, ...,  918333, 2014201,   55730])
DESIRED: array([ 272642, 1389005,  219799, ...,  918333, 2014201,   55730])
2025-04-27 03:19:32.957301 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 44064, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 44064, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1993 / 44064 (4.52%)
Max absolute difference among violations: 3184153
Max relative difference among violations: 1831.19128329
ACTUAL: array([1871678, 1075972, 2385902, ..., 2983136, 2138262,  238829])
DESIRED: array([1871678, 1075972, 2385902, ..., 2983136, 2138262,  238829])
2025-04-27 03:19:33.305508 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 44106, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 44106, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2039 / 44106 (4.62%)
Max absolute difference among violations: 3164819
Max relative difference among violations: 521.52399381
ACTUAL: array([  21449, 2464503,  181279, ..., 2298517, 2531297, 1172912])
DESIRED: array([  21449, 2464503,  181279, ..., 2298517, 2531297, 1172912])
2025-04-27 03:19:33.633312 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 44193, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 44193, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2179 / 44193 (4.93%)
Max absolute difference among violations: 3200868
Max relative difference among violations: 529.76040312
ACTUAL: array([2174956,  141512, 3230992, ...,  406237, 1128592, 2900435])
DESIRED: array([2174956,  141512, 3230992, ..., 1867131, 1128592, 2900435])
2025-04-27 03:19:33.957584 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 44355, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 44355, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2040 / 44355 (4.6%)
Max absolute difference among violations: 3206648
Max relative difference among violations: 761.48426461
ACTUAL: array([3267139, 1414636, 1560985, ..., 2987848, 1102347, 2812627])
DESIRED: array([3267139, 1414636, 1560985, ..., 2987848, 1102347, 1651133])
2025-04-27 03:19:34.318905 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 44373, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 44373, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2120 / 44373 (4.78%)
Max absolute difference among violations: 3193690
Max relative difference among violations: 3487.20221607
ACTUAL: array([1060133, 1524822, 1709961, ..., 2026880, 2979259, 2467251])
DESIRED: array([1060133, 1524822, 1709961, ..., 2026880, 2979259,  257378])
2025-04-27 03:19:34.648322 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 44409, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 44409, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2107 / 44409 (4.74%)
Max absolute difference among violations: 3213134
Max relative difference among violations: 982.37265856
ACTUAL: array([1856156,  133973, 1950835, ..., 2465320, 1040871, 1685811])
DESIRED: array([1856156,  133973, 1950835, ..., 2465320, 1040871, 1685811])
2025-04-27 03:19:34.970780 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 44598, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 44598, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2051 / 44598 (4.6%)
Max absolute difference among violations: 3138764
Max relative difference among violations: 1252.52282515
ACTUAL: array([ 503177, 2060955, 1516884, ..., 2650803, 3189415,  912151])
DESIRED: array([ 503177, 2060955, 1516884, ..., 2650803, 3189415,  912151])
2025-04-27 03:19:35.295982 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 44754, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 44754, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2051 / 44754 (4.58%)
Max absolute difference among violations: 3155204
Max relative difference among violations: 469.25086505
ACTUAL: array([3262925,  542627, 1146785, ...,   73609,  992582, 1816155])
DESIRED: array([3262925,  542627, 1146785, ...,   73609,  992582, 1816155])
2025-04-27 03:19:35.634506 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 44793, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 44793, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2142 / 44793 (4.78%)
Max absolute difference among violations: 3087602
Max relative difference among violations: 2019.23836793
ACTUAL: array([2385698, 1725459, 2005668, ...,  633355, 1009258, 2226063])
DESIRED: array([2385698, 1725459, 2005668, ...,  633355, 1009258, 2226063])
2025-04-27 03:19:35.962974 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 45291, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 45291, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2183 / 45291 (4.82%)
Max absolute difference among violations: 3168605
Max relative difference among violations: 390.08123742
ACTUAL: array([ 623855,  907377, 1382147, ..., 1966905, 2425055, 2999357])
DESIRED: array([ 623855,  907377, 1382147, ..., 1966905, 2425055, 2999357])
2025-04-27 03:19:36.298209 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 45354, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 45354, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2019 / 45354 (4.45%)
Max absolute difference among violations: 3120507
Max relative difference among violations: 3332.25210084
ACTUAL: array([ 229179, 1930849, 1796056, ..., 1010501, 2661331, 1770842])
DESIRED: array([ 229179, 1930849, 1796056, ..., 1010501, 2661331, 1770842])
2025-04-27 03:19:36.642107 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 45390, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 45390, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2096 / 45390 (4.62%)
Max absolute difference among violations: 3228291
Max relative difference among violations: 1011.24661893
ACTUAL: array([2915482, 2687067, 3146353, ..., 1285453, 2349966,  858129])
DESIRED: array([2915482, 2687067, 3146353, ..., 1285453, 2349966,  858129])
2025-04-27 03:19:36.987065 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 45423, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 45423, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2044 / 45423 (4.5%)
Max absolute difference among violations: 3228814
Max relative difference among violations: 358.5728022
ACTUAL: array([1072597, 2571548, 2774982, ..., 1826623,  214345,  620875])
DESIRED: array([1072597, 2571548, 1940116, ..., 1826623,  214345,  620875])
2025-04-27 03:19:37.321923 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 45564, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 45564, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2094 / 45564 (4.6%)
Max absolute difference among violations: 3199741
Max relative difference among violations: 821.05089367
ACTUAL: array([2032912,  910129, 3249137, ..., 3008339, 2070609, 2952139])
DESIRED: array([2032912,  910129, 3249137, ..., 3008339, 2070609, 2952139])
2025-04-27 03:19:37.698068 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 46104, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 46104, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2048 / 46104 (4.44%)
Max absolute difference among violations: 3176026
Max relative difference among violations: 4437.98076923
ACTUAL: array([2244462, 2710184, 2603564, ..., 2606590, 1794118,  151346])
DESIRED: array([2244462, 2710184, 2603564, ..., 2606590, 1794118,  151346])
2025-04-27 03:19:38.030454 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 46344, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 46344, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2284 / 46344 (4.93%)
Max absolute difference among violations: 3157989
Max relative difference among violations: 1066.94239241
ACTUAL: array([1300242, 2870228,  469152, ..., 1982711, 2864483, 1324569])
DESIRED: array([1300242, 2870228,  469152, ..., 1982711, 2864483, 1324569])
2025-04-27 03:19:38.637060 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 46404, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 46404, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2218 / 46404 (4.78%)
Max absolute difference among violations: 3152153
Max relative difference among violations: 11330.23255814
ACTUAL: array([2506329, 1131788,  350300, ..., 1922819, 2423168, 2833583])
DESIRED: array([2506329, 1131788,  350300, ..., 1922819, 2423168, 2833583])
2025-04-27 03:19:39.564225 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 46431, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 46431, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2241 / 46431 (4.83%)
Max absolute difference among violations: 3144239
Max relative difference among violations: 1296.70015949
ACTUAL: array([2451224,  851803,  624628, ...,  937496, 1713310,  759412])
DESIRED: array([2451224,  851803,  624628, ...,  937496, 1713310,  759412])
2025-04-27 03:19:39.827045 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 46722, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 46722, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2204 / 46722 (4.72%)
Max absolute difference among violations: 3147855
Max relative difference among violations: 738.54737903
ACTUAL: array([1032555, 2206313,  865096, ..., 1232766, 2149395, 1464653])
DESIRED: array([1032555, 2206313,  865096, ..., 1232766, 2149395, 1464653])
2025-04-27 03:19:40.611818 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 46812, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 46812, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2194 / 46812 (4.69%)
Max absolute difference among violations: 3200619
Max relative difference among violations: 1926.63002364
ACTUAL: array([2305902, 2369932, 1981773, ...,    6879, 1676740, 1911627])
DESIRED: array([2305902, 2369932, 1981773, ...,    6879, 1676740, 1911627])
2025-04-27 03:19:41.351481 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 46848, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 46848, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2165 / 46848 (4.62%)
Max absolute difference among violations: 3125958
Max relative difference among violations: 1170.01363991
ACTUAL: array([2774500,  147465,  522376, ..., 1672075, 2717193, 3206880])
DESIRED: array([2774500,  147465,  522376, ..., 1672075, 2717193, 3206880])
2025-04-27 03:19:41.718092 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 46929, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 46929, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2122 / 46929 (4.52%)
Max absolute difference among violations: 3181683
Max relative difference among violations: 2135.22293578
ACTUAL: array([2647892,  976228, 1117764, ...,  486328, 1984285,  129251])
DESIRED: array([2647892,  976228, 1117764, ...,  486328, 1984285,  129251])
2025-04-27 03:19:42.126930 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 46959, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 46959, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2218 / 46959 (4.72%)
Max absolute difference among violations: 3226780
Max relative difference among violations: 1681.9122807
ACTUAL: array([2888903, 2047581, 1199555, ...,  532004, 2362473, 1755775])
DESIRED: array([2888903, 2047581,    1364, ...,  532004, 2362473, 1755775])
2025-04-27 03:19:42.452690 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 47199, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 47199, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2239 / 47199 (4.74%)
Max absolute difference among violations: 3069932
Max relative difference among violations: 314.70449912
ACTUAL: array([ 671661, 2682215, 2141691, ...,   14110,  754372, 2030617])
DESIRED: array([ 671661, 2682215, 2141691, ...,   14110,  754372, 2030617])
2025-04-27 03:19:42.842594 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 47625, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 47625, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2234 / 47625 (4.69%)
Max absolute difference among violations: 3213832
Max relative difference among violations: 552.63847858
ACTUAL: array([2222559, 2668019, 2128370, ..., 2606965,  363853, 1367657])
DESIRED: array([2222559, 2668019, 2128370, ..., 2606965,  363853, 1367657])
2025-04-27 03:19:43.187784 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 47640, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 47640, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2133 / 47640 (4.48%)
Max absolute difference among violations: 3170989
Max relative difference among violations: 3490.33918129
ACTUAL: array([2528167, 3082965, 1904536, ..., 1572010,   46292, 2322072])
DESIRED: array([2528167, 3082965, 1904536, ..., 1572010,   46292, 2322072])
2025-04-27 03:19:43.521392 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 47715, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 47715, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2125 / 47715 (4.45%)
Max absolute difference among violations: 3229607
Max relative difference among violations: 689.39719157
ACTUAL: array([2077887, 1824444, 2010061, ..., 2663855,  970823, 1999816])
DESIRED: array([2077887, 1824444, 2010061, ..., 2663855,  970823, 1999816])
2025-04-27 03:19:43.859936 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 47904, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 47904, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2268 / 47904 (4.73%)
Max absolute difference among violations: 3152077
Max relative difference among violations: 35010.40963855
ACTUAL: array([2540362, 2880038, 2871959, ..., 1105437, 1251907, 2021371])
DESIRED: array([2540362, 2880038, 2871959, ..., 1105437, 1251907, 2021371])
2025-04-27 03:19:44.116231 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 48150, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 48150, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2164 / 48150 (4.49%)
Max absolute difference among violations: 3166992
Max relative difference among violations: 1117.16274752
ACTUAL: array([2021803, 1038317, 2534670, ..., 2506526, 1566217, 1275118])
DESIRED: array([2021803, 1038317, 2534670, ..., 2506526, 1566217, 1275118])
2025-04-27 03:19:44.369805 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 48177, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 48177, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2333 / 48177 (4.84%)
Max absolute difference among violations: 3200363
Max relative difference among violations: 477.22297436
ACTUAL: array([2821474, 2471035,  292305, ..., 2666907,  646131, 2375729])
DESIRED: array([2821474,  292305, 2471035, ..., 2666907,  646131, 2375729])
2025-04-27 03:19:44.713220 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 48282, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 48282, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2336 / 48282 (4.84%)
Max absolute difference among violations: 3223076
Max relative difference among violations: 12557.24017467
ACTUAL: array([1661221, 2416748,  217254, ..., 2889487,  419529, 1590159])
DESIRED: array([1661221,  217254, 2416748, ..., 2889487,  419529, 1590159])
2025-04-27 03:19:44.988905 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 48336, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 48336, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2320 / 48336 (4.8%)
Max absolute difference among violations: 3198540
Max relative difference among violations: 52591.60714286
ACTUAL: array([ 692792,  206437,  310878, ..., 2963188,   48392,  694614])
DESIRED: array([ 692792,  206437,  310878, ..., 2963188,   48392,  694614])
2025-04-27 03:19:45.333275 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 48465, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 48465, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2213 / 48465 (4.57%)
Max absolute difference among violations: 3216414
Max relative difference among violations: 8082.1023622
ACTUAL: array([3024651,  678218, 1017198, ...,  279364, 1063538, 1385503])
DESIRED: array([3024651,  678218, 1017198, ...,  279364, 1063538, 1385503])
2025-04-27 03:19:45.703688 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 48504, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 48504, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2303 / 48504 (4.75%)
Max absolute difference among violations: 3171911
Max relative difference among violations: 640.59850788
ACTUAL: array([1209796, 3252287, 2055894, ..., 1629181, 2404603, 1690929])
DESIRED: array([1209796, 3252287, 2055894, ..., 1629181, 2404603, 1690929])
2025-04-27 03:19:46.061223 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 48636, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 48636, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2285 / 48636 (4.7%)
Max absolute difference among violations: 3073493
Max relative difference among violations: 1192.21280788
ACTUAL: array([1966995, 1992819,  118305, ...,  353971,  344535, 1119077])
DESIRED: array([1966995, 1992819,  118305, ...,  353971,  344535, 1119077])
2025-04-27 03:19:46.394013 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 48759, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 48759, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2222 / 48759 (4.56%)
Max absolute difference among violations: 3252535
Max relative difference among violations: 2448.96126761
ACTUAL: array([1768725, 1608865, 1844240, ...,  936619, 2861441, 1606386])
DESIRED: array([1768725, 1608865, 1844240, ...,  936619, 2861441, 1606386])
2025-04-27 03:19:46.801822 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 48978, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 48978, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2394 / 48978 (4.89%)
Max absolute difference among violations: 3187962
Max relative difference among violations: 2269.44384449
ACTUAL: array([2796322, 2549683,  106917, ..., 2370662, 3033359, 2654185])
DESIRED: array([2796322, 2549683,  106917, ..., 2376533, 3033359, 2654185])
2025-04-27 03:19:47.136027 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 49089, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 49089, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2184 / 49089 (4.45%)
Max absolute difference among violations: 3111705
Max relative difference among violations: 1697.90243902
ACTUAL: array([2034962, 2916971, 2981894, ..., 2904758,  176344, 2243618])
DESIRED: array([2034962, 2916971, 2981894, ..., 2904758,  176344, 2243618])
2025-04-27 03:19:47.432755 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 49614, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 49614, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2339 / 49614 (4.71%)
Max absolute difference among violations: 3133152
Max relative difference among violations: 2182.75651189
ACTUAL: array([3170849,  506546, 3165788, ..., 3177966, 1057999,  483520])
DESIRED: array([3170849,  506546, 3165788, ..., 1057999, 3177966,  483520])
2025-04-27 03:19:47.759921 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 49929, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 49929, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2350 / 49929 (4.71%)
Max absolute difference among violations: 3148950
Max relative difference among violations: 844.71793275
ACTUAL: array([3017322,  206361, 2185458, ..., 1313926, 1860947, 2684035])
DESIRED: array([3017322,  206361,  875624, ..., 1313926, 1860947, 2684035])
2025-04-27 03:19:48.097368 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 49986, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 49986, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2273 / 49986 (4.55%)
Max absolute difference among violations: 3222317
Max relative difference among violations: 2226.50405306
ACTUAL: array([2897510,  114508, 1124522, ...,  431281, 2667155,  879882])
DESIRED: array([2897510,  114508, 1124522, ...,  431281, 2667155,  879882])
2025-04-27 03:19:48.437625 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 50169, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 50169, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2301 / 50169 (4.59%)
Max absolute difference among violations: 3164921
Max relative difference among violations: 1147.62159329
ACTUAL: array([2616852, 1382293, 1059796, ..., 3188717,  111480, 2273406])
DESIRED: array([2616852, 1382293, 1059796, ..., 3188717,  111480, 2273406])
2025-04-27 03:19:48.770320 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 50184, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 50184, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2268 / 50184 (4.52%)
Max absolute difference among violations: 3265296
Max relative difference among violations: 1084.51104566
ACTUAL: array([1196956,   53818, 1245576, ..., 2176463, 3265752, 2033110])
DESIRED: array([1196956,   53818, 1245576, ..., 2176463, 3265752, 2033110])
2025-04-27 03:19:49.092642 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 50247, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 50247, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2485 / 50247 (4.95%)
Max absolute difference among violations: 3242059
Max relative difference among violations: 10237.96414343
ACTUAL: array([ 460520, 1118607,  551476, ..., 2692575, 1657060,  398696])
DESIRED: array([ 460520, 1118607,  551476, ..., 2692575, 1657060,  398696])
2025-04-27 03:19:49.470542 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 50400, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 50400, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2419 / 50400 (4.8%)
Max absolute difference among violations: 3219005
Max relative difference among violations: 3143.22033898
ACTUAL: array([3276718, 2813375,  135904, ...,  248535, 3118643, 2900854])
DESIRED: array([3276718, 2813375,  135904, ...,  248535, 3118643, 2900854])
2025-04-27 03:19:49.808724 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 50424, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 50424, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2411 / 50424 (4.78%)
Max absolute difference among violations: 3187891
Max relative difference among violations: 1143.63055992
ACTUAL: array([2213116, 1171539, 2798690, ...,  512096,  595645, 1378191])
DESIRED: array([2213116, 1171539, 2798690, ...,  512096,  595645, 1378191])
2025-04-27 03:19:50.169634 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 50604, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 50604, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2509 / 50604 (4.96%)
Max absolute difference among violations: 3256983
Max relative difference among violations: 16505.28342246
ACTUAL: array([3008557, 1006134,  889137, ..., 1682608, 2458598,  673519])
DESIRED: array([3008557, 1006134,  889137, ..., 1682608, 2458598,  673519])
2025-04-27 03:19:50.489483 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 50712, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 50712, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2449 / 50712 (4.83%)
Max absolute difference among violations: 3195031
Max relative difference among violations: 3025.23925668
ACTUAL: array([2837080, 2134065,  737951, ..., 1977012,  538592, 1188460])
DESIRED: array([2837080, 2134065,  737951, ..., 1977012,  538592, 1188460])
2025-04-27 03:19:50.869100 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 51051, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 51051, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2172 / 51051 (4.25%)
Max absolute difference among violations: 3161313
Max relative difference among violations: 852.93710458
ACTUAL: array([ 196416, 2040534, 1445349, ..., 3079132, 2985091, 2452146])
DESIRED: array([ 196416, 2040534, 1445349, ..., 3079132, 2985091, 2452146])
2025-04-27 03:19:51.244159 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 51150, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 51150, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2351 / 51150 (4.6%)
Max absolute difference among violations: 3149573
Max relative difference among violations: 9636.22421525
ACTUAL: array([1024807,  770840, 1762873, ..., 1621747, 1060601,  440058])
DESIRED: array([1024807,  770840, 1762873, ..., 1621747, 1060601,  440058])
2025-04-27 03:19:51.572119 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 51171, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 51171, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2360 / 51171 (4.61%)
Max absolute difference among violations: 3201500
Max relative difference among violations: 5199.82352941
ACTUAL: array([1825121, 1377929, 1980647, ..., 2611509, 1144081,  334037])
DESIRED: array([1825121, 1377929, 1980647, ..., 2611509, 1144081,  334037])
2025-04-27 03:19:51.911910 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 51213, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 51213, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2417 / 51213 (4.72%)
Max absolute difference among violations: 3231019
Max relative difference among violations: 1608.27227476
ACTUAL: array([1027042,  350367,  315290, ..., 1863626, 2348373, 2159204])
DESIRED: array([1027042,  350367,  315290, ..., 1863626, 2348373, 2159204])
2025-04-27 03:19:52.217584 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 51357, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 51357, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2454 / 51357 (4.78%)
Max absolute difference among violations: 3209673
Max relative difference among violations: 4806.45382586
ACTUAL: array([2792069, 3267310, 3169161, ...,  652340,  678540, 1616530])
DESIRED: array([2792069, 3267310, 3169161, ...,  652340,  678540, 1616530])
2025-04-27 03:19:52.517161 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 51444, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 51444, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2286 / 51444 (4.44%)
Max absolute difference among violations: 3197410
Max relative difference among violations: 1103.1356383
ACTUAL: array([1162189, 2977036, 1676169, ..., 3196431, 1571534,  265071])
DESIRED: array([1162189, 2977036, 1676169, ..., 3196431, 1571534,  265071])
2025-04-27 03:19:52.837808 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 51459, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 51459, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2406 / 51459 (4.68%)
Max absolute difference among violations: 3124184
Max relative difference among violations: 5916.98786408
ACTUAL: array([ 573383, 1327771, 1201441, ..., 1644433, 2372343, 3039186])
DESIRED: array([ 573383, 1201441, 1327771, ..., 1644433, 2372343, 3039186])
2025-04-27 03:19:53.156620 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 51555, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 51555, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2461 / 51555 (4.77%)
Max absolute difference among violations: 3199902
Max relative difference among violations: 2355.5127421
ACTUAL: array([ 795395, 3227837,  507506, ..., 1222223, 1074803,  405800])
DESIRED: array([ 795395, 3227837,  507506, ..., 1074803, 1222223,  405800])
2025-04-27 03:19:53.512752 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 51558, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 51558, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2462 / 51558 (4.78%)
Max absolute difference among violations: 3169634
Max relative difference among violations: 7563.94736842
ACTUAL: array([ 602703, 1006521, 1319678, ..., 1461444, 2707476,  714448])
DESIRED: array([ 602703, 1006521, 1319678, ..., 1461444, 2707476,  714448])
2025-04-27 03:19:53.842456 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 51633, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 51633, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2416 / 51633 (4.68%)
Max absolute difference among violations: 3142997
Max relative difference among violations: 1474.4890471
ACTUAL: array([2538332,  325975,  507199, ..., 3013655, 3218993,  159137])
DESIRED: array([2538332,  325975,  507199, ..., 3013655,  159137, 3218993])
2025-04-27 03:19:54.108286 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 51639, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 51639, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2471 / 51639 (4.79%)
Max absolute difference among violations: 3137901
Max relative difference among violations: 1476.77594728
ACTUAL: array([2064378,  914596, 1391211, ...,  861897, 1849591, 2564236])
DESIRED: array([2064378,  914596, 1391211, ...,  861897, 1849591, 2564236])
2025-04-27 03:19:54.416833 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 51753, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 51753, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2319 / 51753 (4.48%)
Max absolute difference among violations: 3206671
Max relative difference among violations: 16191.87272727
ACTUAL: array([ 416517, 1968525, 1748511, ..., 1655460, 1828992, 1338856])
DESIRED: array([ 416517, 1968525, 1748511, ..., 1655460, 1828992, 1338856])
2025-04-27 03:19:54.751855 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 51912, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 51912, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2425 / 51912 (4.67%)
Max absolute difference among violations: 3226475
Max relative difference among violations: 1083.80080618
ACTUAL: array([3074132, 2199775, 2333626, ...,  604278,  738172, 2619904])
DESIRED: array([3074132, 2199775, 2333626, ...,  604278,  738172,   28408])
2025-04-27 03:19:55.078475 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 52089, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 52089, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2410 / 52089 (4.63%)
Max absolute difference among violations: 3232325
Max relative difference among violations: 1625.13065327
ACTUAL: array([1522251, 1478475,   44210, ..., 2728513,  169559, 2966896])
DESIRED: array([1522251, 1478475,   44210, ..., 2728513,  169559,  164190])
2025-04-27 03:19:55.406708 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 52191, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 52191, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2500 / 52191 (4.79%)
Max absolute difference among violations: 3253473
Max relative difference among violations: 4681.34991974
ACTUAL: array([2378767,  121893,  609642, ...,  385029, 1458044,  720054])
DESIRED: array([2378767,  121893,  609642, ...,  385029, 1458044,  720054])
2025-04-27 03:19:55.739192 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 52236, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 52236, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2455 / 52236 (4.7%)
Max absolute difference among violations: 3134588
Max relative difference among violations: 2364.4567757
ACTUAL: array([2648857,  498755,  568020, ...,  143362,  858843, 1319516])
DESIRED: array([2648857,  498755,  568020, ...,  143362,  858843, 1319516])
2025-04-27 03:19:56.061282 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 52518, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 52518, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2460 / 52518 (4.68%)
Max absolute difference among violations: 3214491
Max relative difference among violations: 11786.81343284
ACTUAL: array([ 634237,  548167,  114235, ..., 1445165, 2867593,  882459])
DESIRED: array([ 634237,  548167,  114235, ..., 1445165, 2867593,  882459])
2025-04-27 03:19:56.390813 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 52530, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 52530, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2451 / 52530 (4.67%)
Max absolute difference among violations: 3172010
Max relative difference among violations: 501.29105537
ACTUAL: array([1442596, 2701079, 2983324, ...,  851513, 2699001, 3041955])
DESIRED: array([1442596, 2701079, 2983324, ...,  851513, 2699001, 3041955])
2025-04-27 03:19:56.657233 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 52980, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 52980, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2400 / 52980 (4.53%)
Max absolute difference among violations: 3215219
Max relative difference among violations: 1515.31225071
ACTUAL: array([3012401,  528082, 2381286, ..., 1301238, 1191008, 1723419])
DESIRED: array([3012401,  528082, 2381286, ..., 1301238, 1191008, 1723419])
2025-04-27 03:19:56.988591 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 53001, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 53001, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2603 / 53001 (4.91%)
Max absolute difference among violations: 3262473
Max relative difference among violations: 12495.88477366
ACTUAL: array([2573611, 1039800, 1709604, ..., 2570142, 3248700, 1182349])
DESIRED: array([2573611, 1039800, 1709604, ..., 2570142, 3248700, 1182349])
2025-04-27 03:19:57.315401 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 53010, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 53010, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2517 / 53010 (4.75%)
Max absolute difference among violations: 3120954
Max relative difference among violations: 930.16666667
ACTUAL: array([ 901829, 1296026, 3086383, ..., 2447606, 1550180, 1737383])
DESIRED: array([ 901829, 1296026, 3086383, ..., 2447606, 1550180, 1737383])
2025-04-27 03:19:57.636101 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 53040, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 53040, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2444 / 53040 (4.61%)
Max absolute difference among violations: 3179418
Max relative difference among violations: 560.62926935
ACTUAL: array([ 378877, 2414609,  372563, ..., 2420668, 2462129, 1851057])
DESIRED: array([ 378877, 2414609,  372563, ..., 2420668, 2462129, 1851057])
2025-04-27 03:19:57.961493 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 53190, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 53190, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2559 / 53190 (4.81%)
Max absolute difference among violations: 3153625
Max relative difference among violations: 449.91841235
ACTUAL: array([ 401301, 2583042, 2846621, ...,  821216,  830594, 1457154])
DESIRED: array([ 401301, 2583042, 2846621, ...,  821216,  830594, 1457154])
2025-04-27 03:19:58.297640 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 53301, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 53301, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2519 / 53301 (4.73%)
Max absolute difference among violations: 3257930
Max relative difference among violations: 3214.68916155
ACTUAL: array([2635419,  476783, 1948709, ...,  729925, 2042701,  157848])
DESIRED: array([2635419,  476783, 1948709, ...,  729925, 2042701,  157848])
2025-04-27 03:19:58.566437 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 53778, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 53778, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2444 / 53778 (4.54%)
Max absolute difference among violations: 3209857
Max relative difference among violations: 7245.15957447
ACTUAL: array([2497735, 1655153, 2174322, ..., 3186917, 2739028, 1276125])
DESIRED: array([2497735, 1655153, 2166729, ..., 3186917, 2739028, 1276125])
2025-04-27 03:19:58.802154 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 53829, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 53829, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2628 / 53829 (4.88%)
Max absolute difference among violations: 3119121
Max relative difference among violations: 725.54867464
ACTUAL: array([1814555, 2484681, 3232487, ...,  125370, 1047386, 2470616])
DESIRED: array([1814555, 2484681, 3232487, ...,  125370, 1047386, 2470616])
2025-04-27 03:19:59.061492 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 53901, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 53901, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2523 / 53901 (4.68%)
Max absolute difference among violations: 3252983
Max relative difference among violations: 8374.88622754
ACTUAL: array([ 784473, 2929255, 1000342, ..., 1740906, 2032846, 1919310])
DESIRED: array([ 784473, 2929255, 1000342, ..., 1740906, 2032846, 1919310])
2025-04-27 03:19:59.403048 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 54171, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 54171, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2431 / 54171 (4.49%)
Max absolute difference among violations: 3184894
Max relative difference among violations: 1326.3783319
ACTUAL: array([ 400103, 2411769,  696174, ..., 1701804,  229300,  785618])
DESIRED: array([ 400103, 2411769,  696174, ..., 1701804,  229300,  785618])
2025-04-27 03:19:59.732646 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 54249, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 54249, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2508 / 54249 (4.62%)
Max absolute difference among violations: 3248508
Max relative difference among violations: 1228.5413643
ACTUAL: array([3194929, 2844118,  246996, ..., 1939487,  755073,  325980])
DESIRED: array([3194929, 2844118,  246996, ..., 1939487,  755073,  325980])
2025-04-27 03:20:00.091575 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 54756, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 54756, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2484 / 54756 (4.54%)
Max absolute difference among violations: 3203656
Max relative difference among violations: 642.21159715
ACTUAL: array([2437984, 1828794, 1138026, ..., 2386469,  414335, 2644928])
DESIRED: array([2437984, 1828794, 1138026, ..., 2386469,  414335, 2644928])
2025-04-27 03:20:00.497182 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 54873, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 54873, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2517 / 54873 (4.59%)
Max absolute difference among violations: 3165971
Max relative difference among violations: 27922.45054945
ACTUAL: array([2678058, 2070964, 1321355, ..., 2439087,  820755, 1803893])
DESIRED: array([2678058, 1321355, 2070964, ..., 2439087,  820755, 1803893])
2025-04-27 03:20:00.816530 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 54954, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 54954, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2579 / 54954 (4.69%)
Max absolute difference among violations: 3143374
Max relative difference among violations: 7226.60547945
ACTUAL: array([2591365,  822948, 1711734, ..., 1363701, 2864962,  301693])
DESIRED: array([2591365,  822948, 1711734, ..., 1363701, 2864962,  301693])
2025-04-27 03:20:01.142150 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 54999, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 54999, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2605 / 54999 (4.74%)
Max absolute difference among violations: 3201838
Max relative difference among violations: 187.21333953
ACTUAL: array([1920479,  979159,  989477, ..., 2987987, 2833965, 2014402])
DESIRED: array([1920479,  979159,  989477, ..., 2987987, 2833965, 2014402])
2025-04-27 03:20:01.483349 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 55089, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 55089, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2482 / 55089 (4.51%)
Max absolute difference among violations: 3204155
Max relative difference among violations: 1000.99936041
ACTUAL: array([3058510, 1545044,  926581, ..., 1830695,  594255, 2894690])
DESIRED: array([3058510, 1545044,  926581, ..., 1830695,  594255, 2894690])
2025-04-27 03:20:01.829318 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 55194, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 55194, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2661 / 55194 (4.82%)
Max absolute difference among violations: 3232547
Max relative difference among violations: 1234.91457587
ACTUAL: array([1306320,   98848,  243372, ...,  114774,  939515, 1231099])
DESIRED: array([1306320,   98848,  243372, ...,  114774,  939515, 1231099])
2025-04-27 03:20:02.146994 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 55548, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 55548, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2699 / 55548 (4.86%)
Max absolute difference among violations: 3231258
Max relative difference among violations: 705.97371429
ACTUAL: array([ 285330, 3184006, 1905746, ...,  350480, 1565634,  215944])
DESIRED: array([ 285330, 3184006, 1905746, ...,  350480, 1565634,  215944])
2025-04-27 03:20:02.415241 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 55572, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 55572, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2609 / 55572 (4.69%)
Max absolute difference among violations: 3148871
Max relative difference among violations: 11873.58846154
ACTUAL: array([1476609, 2245657, 1804894, ..., 2362989, 1459696, 3078894])
DESIRED: array([1476609, 2245657, 1804894, ..., 2362989, 1459696, 3078894])
2025-04-27 03:20:02.659082 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 55722, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 55722, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2771 / 55722 (4.97%)
Max absolute difference among violations: 3203580
Max relative difference among violations: 696.75359343
ACTUAL: array([1229329, 2548312,   32149, ..., 1217314, 1912672, 2762883])
DESIRED: array([1229329, 2548312,   32149, ..., 1217314, 1912672, 2762883])
2025-04-27 03:20:02.961827 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 55821, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 55821, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2603 / 55821 (4.66%)
Max absolute difference among violations: 3196243
Max relative difference among violations: 470.217595
ACTUAL: array([2569164,  146703, 1908801, ..., 3227167, 1484446,   35323])
DESIRED: array([2569164,  146703, 1908801, ..., 3227167, 1484446,   35323])
2025-04-27 03:20:03.309252 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 55917, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 55917, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2609 / 55917 (4.67%)
Max absolute difference among violations: 3181158
Max relative difference among violations: 1181.33359253
ACTUAL: array([ 496501, 2361814, 1670065, ...,  911088, 1455415, 1246593])
DESIRED: array([ 496501, 2361814, 1670065, ...,  911088, 1455415, 1246593])
2025-04-27 03:20:03.619508 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 55974, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 55974, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2556 / 55974 (4.57%)
Max absolute difference among violations: 3196091
Max relative difference among violations: 1177.25566572
ACTUAL: array([ 380289,  922376, 2711806, ...,  674408, 1112080, 2714321])
DESIRED: array([ 380289,  922376, 2711806, ...,  674408, 1112080, 2714321])
2025-04-27 03:20:03.863763 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 56211, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 56211, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2584 / 56211 (4.6%)
Max absolute difference among violations: 3262040
Max relative difference among violations: 2437.17653391
ACTUAL: array([2897066, 3098717,  518493, ...,  775293,  980161, 2835022])
DESIRED: array([2897066, 3098717,  518493, ...,  775293,  980161, 2835022])
2025-04-27 03:20:04.200343 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 56316, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 56316, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2784 / 56316 (4.94%)
Max absolute difference among violations: 3257508
Max relative difference among violations: 622.16492891
ACTUAL: array([1372815, 3072387, 1355423, ..., 2561825,  602016,  871060])
DESIRED: array([1372815, 3072387, 1355423, ..., 2561825,  602016,  871060])
2025-04-27 03:20:04.588921 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 56376, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 56376, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2574 / 56376 (4.57%)
Max absolute difference among violations: 3184607
Max relative difference among violations: 1320.12393162
ACTUAL: array([2233913, 3021316, 1537192, ..., 1115787, 1564998,  552787])
DESIRED: array([2233913, 1537192, 3021316, ..., 1115787, 1564998,  552787])
2025-04-27 03:20:04.859518 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 56559, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 56559, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2680 / 56559 (4.74%)
Max absolute difference among violations: 3186102
Max relative difference among violations: 839.37248563
ACTUAL: array([ 296712, 2139200, 2573733, ...,  234078, 1573189, 1945528])
DESIRED: array([ 296712, 2139200, 2470190, ...,  234078, 1573189, 1945528])
2025-04-27 03:20:05.159619 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 56577, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 56577, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2731 / 56577 (4.83%)
Max absolute difference among violations: 3233279
Max relative difference among violations: 3543.50775194
ACTUAL: array([2203694, 2028542,   64429, ..., 2490709, 2068417, 2504455])
DESIRED: array([2203694, 2028542,   64429, ..., 2490709, 2068417, 2504455])
2025-04-27 03:20:05.480292 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 56886, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 56886, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2626 / 56886 (4.62%)
Max absolute difference among violations: 3125267
Max relative difference among violations: 9152.62248996
ACTUAL: array([2605758, 2976485, 1323216, ..., 1708630, 1946013,  549876])
DESIRED: array([2605758, 2976485, 1323216, ..., 1708630, 1946013,  549876])
2025-04-27 03:20:05.809840 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 56910, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 56910, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2627 / 56910 (4.62%)
Max absolute difference among violations: 3105586
Max relative difference among violations: 876.00215916
ACTUAL: array([2462500, 2410255,  545878, ..., 3012011, 1827261, 1391042])
DESIRED: array([2462500, 2410255,  545878, ..., 3012011, 1827261, 1391042])
2025-04-27 03:20:06.171633 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 56925, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 56925, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2568 / 56925 (4.51%)
Max absolute difference among violations: 3246320
Max relative difference among violations: 700.79393084
ACTUAL: array([2992327, 2600837, 3145685, ..., 2590660,  878284, 3180762])
DESIRED: array([2992327, 2600837, 3145685, ..., 2590660,  878284, 3180762])
2025-04-27 03:20:06.442228 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 57108, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 57108, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2670 / 57108 (4.68%)
Max absolute difference among violations: 3215471
Max relative difference among violations: 3444.01362862
ACTUAL: array([1905045, 2657844, 3026540, ..., 3059748, 1830006, 1713904])
DESIRED: array([1905045, 2657844, 3026540, ..., 3059748, 1830006, 1713904])
2025-04-27 03:20:06.775056 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 57147, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 57147, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2678 / 57147 (4.69%)
Max absolute difference among violations: 3239360
Max relative difference among violations: 8151.29268293
ACTUAL: array([1772943, 2108722,  872721, ..., 2140201, 1844838,   57200])
DESIRED: array([1772943, 2108722,  872721, ..., 1844838, 2140201,   57200])
2025-04-27 03:20:07.107341 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 57291, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 57291, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2653 / 57291 (4.63%)
Max absolute difference among violations: 3252049
Max relative difference among violations: 1909.58942065
ACTUAL: array([1300297,  347817,  649871, ..., 1068175, 2697035, 2927077])
DESIRED: array([1300297,  347817,  649871, ..., 1068175, 2697035, 2927077])
2025-04-27 03:20:07.422456 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 57471, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 57471, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2670 / 57471 (4.65%)
Max absolute difference among violations: 3232704
Max relative difference among violations: 4602.58
ACTUAL: array([2026333, 1414462, 2266814, ..., 2151249, 2477662, 2246939])
DESIRED: array([2026333, 1414462, 2266814, ..., 2151249, 2477662, 2246939])
2025-04-27 03:20:07.738460 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 57564, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 57564, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2762 / 57564 (4.8%)
Max absolute difference among violations: 3211690
Max relative difference among violations: 9115.81081081
ACTUAL: array([ 749604,  193247, 2029423, ...,  477476, 2055012, 2901970])
DESIRED: array([ 749604,  193247, 2029423, ...,  477476, 2055012, 2901970])
2025-04-27 03:20:08.069917 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 57576, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 57576, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2616 / 57576 (4.54%)
Max absolute difference among violations: 3174283
Max relative difference among violations: 441.43297943
ACTUAL: array([ 913440,  605096, 3202353, ..., 3258934,  464472,  239068])
DESIRED: array([ 913440,  605096, 2108753, ..., 3258934,  239068,  464472])
2025-04-27 03:20:08.385202 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 57648, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 57648, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2605 / 57648 (4.52%)
Max absolute difference among violations: 3190431
Max relative difference among violations: 3960.19512195
ACTUAL: array([3060879, 1795083,  101022, ...,  161048, 3054727, 3148612])
DESIRED: array([3060879, 1795083,  101022, ...,  161048, 3054727, 3148612])
2025-04-27 03:20:08.773549 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 57708, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 57708, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2633 / 57708 (4.56%)
Max absolute difference among violations: 3263158
Max relative difference among violations: 4843.11143695
ACTUAL: array([ 178823, 3058132,  585954, ..., 1789181,  531847, 2391479])
DESIRED: array([ 178823, 3058132,  585954, ..., 1789181,  531847, 2391479])
2025-04-27 03:20:09.040321 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 58017, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 58017, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2815 / 58017 (4.85%)
Max absolute difference among violations: 3196515
Max relative difference among violations: 9398.43859649
ACTUAL: array([ 544343, 1765425, 2757027, ...,  303977, 1393995, 1964114])
DESIRED: array([ 544343, 1765425, 2757027, ...,  303977, 1393995, 1964114])
2025-04-27 03:20:09.313313 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 58056, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 58056, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2655 / 58056 (4.57%)
Max absolute difference among violations: 3230922
Max relative difference among violations: 978.65470715
ACTUAL: array([1291359, 1720409,  912619, ..., 2935408, 2952480, 1564539])
DESIRED: array([1291359, 1720409,  912619, ..., 2935408, 2952480, 1564539])
2025-04-27 03:20:09.618501 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 58143, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 58143, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2747 / 58143 (4.72%)
Max absolute difference among violations: 3169911
Max relative difference among violations: 987.2402863
ACTUAL: array([2465733, 1731607,  713230, ..., 2238730,  315262, 1194193])
DESIRED: array([1731607, 2465733,  713230, ..., 2238730,  315262, 1194193])
2025-04-27 03:20:09.924458 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 58221, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 58221, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2743 / 58221 (4.71%)
Max absolute difference among violations: 3244440
Max relative difference among violations: 7041.46170678
ACTUAL: array([3233429,   17433, 1107655, ...,   36621,  479748, 2707820])
DESIRED: array([3233429,   17433, 1107655, ...,   36621,  479748, 2707820])
2025-04-27 03:20:10.235083 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 58260, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 58260, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2841 / 58260 (4.88%)
Max absolute difference among violations: 3172209
Max relative difference among violations: 835.67149631
ACTUAL: array([2823542, 2028651,  903529, ..., 3191072,  660829,  276382])
DESIRED: array([2823542, 2028651,  903529, ..., 3191072,  660829,  276382])
2025-04-27 03:20:10.555816 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 58677, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 58677, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2786 / 58677 (4.75%)
Max absolute difference among violations: 3160799
Max relative difference among violations: 424.78510405
ACTUAL: array([ 624065, 3273262, 2632417, ..., 1122807,  852416, 2753246])
DESIRED: array([ 624065, 3273262, 2632417, ..., 1122807,  852416, 2753246])
2025-04-27 03:20:10.919545 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 59277, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 59277, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2840 / 59277 (4.79%)
Max absolute difference among violations: 3185952
Max relative difference among violations: 843.67121047
ACTUAL: array([  34458, 1686765,  539606, ..., 1229848, 2041134, 2489499])
DESIRED: array([  34458, 1686765,  539606, ..., 1229848, 2041134, 2489499])
2025-04-27 03:20:11.255419 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 59442, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 59442, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2754 / 59442 (4.63%)
Max absolute difference among violations: 3270089
Max relative difference among violations: 6422.705
ACTUAL: array([2448019, 1518794,  136170, ...,  955733, 2907120,  135760])
DESIRED: array([2448019, 1518794,  136170, ...,  955733, 2907120,  135760])
2025-04-27 03:20:11.572502 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 59547, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 59547, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2767 / 59547 (4.65%)
Max absolute difference among violations: 3136871
Max relative difference among violations: 1780.01851852
ACTUAL: array([2871191, 2326511, 2088635, ..., 2961738,  175965, 2709710])
DESIRED: array([2326511, 2871191, 2088635, ..., 2961738,  175965, 2709710])
2025-04-27 03:20:11.945043 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 59736, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 59736, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2776 / 59736 (4.65%)
Max absolute difference among violations: 3254706
Max relative difference among violations: 6126.69072165
ACTUAL: array([ 238084, 1138388, 1415404, ..., 1562575, 1783465, 2238159])
DESIRED: array([ 238084, 1138388, 1415404, ..., 1562575, 1783465, 2238159])
2025-04-27 03:20:12.213436 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 59802, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 59802, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2734 / 59802 (4.57%)
Max absolute difference among violations: 3249155
Max relative difference among violations: 6031.69033531
ACTUAL: array([ 589623, 3005864,  695232, ..., 1889657,  839501, 1494072])
DESIRED: array([ 589623, 3005864,  695232, ..., 1889657,  839501, 1494072])
2025-04-27 03:20:12.513736 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 59841, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 59841, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2828 / 59841 (4.73%)
Max absolute difference among violations: 3202934
Max relative difference among violations: 638.28895974
ACTUAL: array([3091751, 1744924, 2412251, ...,  460223, 1625885,  971759])
DESIRED: array([3091751, 1744924, 2412251, ...,  460223, 1625885,  971759])
2025-04-27 03:20:12.910652 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 59844, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 59844, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2767 / 59844 (4.62%)
Max absolute difference among violations: 3189425
Max relative difference among violations: 7137.40594059
ACTUAL: array([1968632,  183621, 2251136, ..., 1564529,  737497, 1882103])
DESIRED: array([1968632,  183621, 2251136, ..., 1564529,  737497, 1882103])
2025-04-27 03:20:13.261029 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 59994, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 59994, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2770 / 59994 (4.62%)
Max absolute difference among violations: 3186823
Max relative difference among violations: 4899.76744186
ACTUAL: array([ 367138, 1430230, 2947708, ..., 3047973, 1921953, 2024395])
DESIRED: array([ 367138, 1430230, 2947708, ..., 3047973, 1921953, 2024395])
2025-04-27 03:20:13.600259 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 60099, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 60099, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2806 / 60099 (4.67%)
Max absolute difference among violations: 3195201
Max relative difference among violations: 14021.09793814
ACTUAL: array([1176562, 1856823, 1304562, ..., 2983314, 1149012, 2929918])
DESIRED: array([1176562, 1856823, 1304562, ..., 2983314, 1149012, 2929918])
2025-04-27 03:20:13.938665 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 60102, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 60102, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2896 / 60102 (4.82%)
Max absolute difference among violations: 3169863
Max relative difference among violations: 1111.03900872
ACTUAL: array([3174641, 1645046, 1756260, ..., 1384441, 1549301, 2641086])
DESIRED: array([3174641, 1645046, 1756260, ..., 1384441, 1549301, 2641086])
2025-04-27 03:20:14.303577 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 60261, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 60261, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2921 / 60261 (4.85%)
Max absolute difference among violations: 3198946
Max relative difference among violations: 1328.29743374
ACTUAL: array([2592882, 2044740, 2584982, ..., 2944255, 3071056, 1666106])
DESIRED: array([2592882, 2044740, 2584982, ..., 2944255, 3071056, 1666106])
2025-04-27 03:20:14.670272 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 60366, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 60366, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2794 / 60366 (4.63%)
Max absolute difference among violations: 3205024
Max relative difference among violations: 689.38575007
ACTUAL: array([1815560,  281495, 1962495, ..., 1167227,  175686,  921924])
DESIRED: array([1815560,  281495, 1962495, ..., 1167227,  175686,  921924])
2025-04-27 03:20:15.001570 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 60396, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 60396, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2813 / 60396 (4.66%)
Max absolute difference among violations: 3228928
Max relative difference among violations: 587.97933964
ACTUAL: array([1783506,  341876, 1031409, ..., 2338432,  784745, 1906876])
DESIRED: array([1783506,  341876, 1031409, ..., 2338432,  784745, 1906876])
2025-04-27 03:20:15.376484 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 60483, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 60483, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2786 / 60483 (4.61%)
Max absolute difference among violations: 3251890
Max relative difference among violations: 1283.94881398
ACTUAL: array([  67658,  513944,  976976, ..., 2651548, 2547888, 3007581])
DESIRED: array([  67658,  513944,  976976, ..., 2651548, 2547888, 3007581])
2025-04-27 03:20:15.793422 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 60606, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 60606, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2897 / 60606 (4.78%)
Max absolute difference among violations: 3186381
Max relative difference among violations: 2179.80264072
ACTUAL: array([ 738453, 2717964, 2994049, ..., 2505941,  493769,   66485])
DESIRED: array([ 738453, 2717964, 2994049, ..., 2505941,  493769,   66485])
2025-04-27 03:20:16.147916 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 60630, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 60630, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2779 / 60630 (4.58%)
Max absolute difference among violations: 3201032
Max relative difference among violations: 8381.67532468
ACTUAL: array([ 385528, 2575759, 1840772, ..., 2336946,  488567, 2321439])
DESIRED: array([ 385528, 2575759, 1840772, ..., 2336946,  488567, 2321439])
2025-04-27 03:20:16.456653 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 60681, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 60681, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2691 / 60681 (4.43%)
Max absolute difference among violations: 3231349
Max relative difference among violations: 1206.54706163
ACTUAL: array([ 216014, 3173058, 2588718, ...,  455417,  676670, 2139484])
DESIRED: array([ 216014, 3173058, 2588718, ...,  455417,  676670, 2139484])
2025-04-27 03:20:16.812749 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 60720, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 60720, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2907 / 60720 (4.79%)
Max absolute difference among violations: 3191653
Max relative difference among violations: 528.4322658
ACTUAL: array([2262497, 1528118,  521414, ...,  734660, 1539206,  904676])
DESIRED: array([2262497, 1528118,  521414, ...,  734660, 1539206,  904676])
2025-04-27 03:20:17.128833 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 60804, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 60804, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2795 / 60804 (4.6%)
Max absolute difference among violations: 3047538
Max relative difference among violations: 1245.56849602
ACTUAL: array([ 303504, 1616970, 1653039, ..., 3079433,   28050, 2695406])
DESIRED: array([ 303504, 1616970, 1653039, ..., 3079433,   28050, 2695406])
2025-04-27 03:20:17.383638 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 60849, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 60849, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2861 / 60849 (4.7%)
Max absolute difference among violations: 3241881
Max relative difference among violations: 5218.73958333
ACTUAL: array([ 909301, 2689260, 2050800, ...,  151223,  519917,  158309])
DESIRED: array([ 909301, 2689260, 2050800, ...,  151223,  519917,  158309])
2025-04-27 03:20:17.712132 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 60963, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 60963, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2824 / 60963 (4.63%)
Max absolute difference among violations: 3230950
Max relative difference among violations: 3268.51417004
ACTUAL: array([ 971149, 2746383, 1962595, ..., 2055976,  452114, 1708158])
DESIRED: array([ 971149, 2746383, 1962595, ..., 2055976,  452114, 1708158])
2025-04-27 03:20:18.053799 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 61149, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 61149, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2897 / 61149 (4.74%)
Max absolute difference among violations: 3205648
Max relative difference among violations: 110164.
ACTUAL: array([1428958,  837370,  580285, ..., 2793771, 2363773, 2755315])
DESIRED: array([1428958,  837370,  580285, ..., 2793771, 2363773, 2755315])
2025-04-27 03:20:18.372811 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 61197, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 61197, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2897 / 61197 (4.73%)
Max absolute difference among violations: 3189418
Max relative difference among violations: 722.68490566
ACTUAL: array([ 689110, 1082027, 2685134, ..., 2670784, 3084818, 1789817])
DESIRED: array([ 689110, 1082027, 2685134, ..., 2670784, 3084818, 1789817])
2025-04-27 03:20:18.670777 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 61251, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 61251, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2781 / 61251 (4.54%)
Max absolute difference among violations: 3140685
Max relative difference among violations: 1043.9760479
ACTUAL: array([ 426334,  142808, 3056305, ...,  838722, 1904434, 3190966])
DESIRED: array([ 426334,  142808, 3056305, ...,  838722, 1904434, 3190966])
2025-04-27 03:20:19.041668 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 61338, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 61338, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2930 / 61338 (4.78%)
Max absolute difference among violations: 3210668
Max relative difference among violations: 831.4929694
ACTUAL: array([ 392317,  302292,  506027, ..., 2984233, 1216374, 2744885])
DESIRED: array([ 392317,  302292,  249110, ..., 2984233, 1216374, 2744885])
2025-04-27 03:20:19.392221 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 61608, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 61608, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2826 / 61608 (4.59%)
Max absolute difference among violations: 3202180
Max relative difference among violations: 524.77548345
ACTUAL: array([1198161, 2040175, 2145644, ..., 2785457,  616002, 2411325])
DESIRED: array([1198161, 2040175, 2145644, ..., 2785457,  616002, 2411325])
2025-04-27 03:20:19.722934 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 61749, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 61749, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2899 / 61749 (4.69%)
Max absolute difference among violations: 3227941
Max relative difference among violations: 1589.7983871
ACTUAL: array([ 663227,  253469, 3234459, ..., 1156401, 2139576, 2212938])
DESIRED: array([ 663227,  253469, 1659054, ..., 1156401, 2139576, 2212938])
2025-04-27 03:20:19.990650 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 61776, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 61776, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2920 / 61776 (4.73%)
Max absolute difference among violations: 3209793
Max relative difference among violations: 3569.1588785
ACTUAL: array([ 493539, 3086229, 2333249, ..., 1436467,  808982, 3181478])
DESIRED: array([ 493539, 3086229, 2333249, ..., 1436467,  808982, 3181478])
2025-04-27 03:20:20.296961 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 61998, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 61998, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2878 / 61998 (4.64%)
Max absolute difference among violations: 3211419
Max relative difference among violations: 62763.13333333
ACTUAL: array([1246076, 1651283, 2044688, ..., 1610231, 2670261, 1635033])
DESIRED: array([1246076, 1651283, 2044688, ..., 1610231, 2670261, 1635033])
2025-04-27 03:20:20.643058 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 62004, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 62004, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2986 / 62004 (4.82%)
Max absolute difference among violations: 3094700
Max relative difference among violations: 3700.55426357
ACTUAL: array([2542551,  810039, 1298592, ...,  608427, 1227372, 1875759])
DESIRED: array([2542551,  810039, 1298592, ...,  608427, 1227372, 1875759])
2025-04-27 03:20:20.989935 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 62109, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 62109, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2797 / 62109 (4.5%)
Max absolute difference among violations: 3218521
Max relative difference among violations: 603.85019608
ACTUAL: array([ 853634, 1953698, 1921214, ..., 1670907, 3038036,  728144])
DESIRED: array([ 853634, 1953698, 1921214, ..., 2234916, 3038036,  728144])
2025-04-27 03:20:21.248941 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 62199, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 62199, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2954 / 62199 (4.75%)
Max absolute difference among violations: 3229816
Max relative difference among violations: 2406.03116883
ACTUAL: array([1177533,  869884, 1969562, ..., 2695592, 1076145,  564700])
DESIRED: array([1177533,  869884, 1969562, ..., 2695592, 1076145,  564700])
2025-04-27 03:20:21.560568 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 62229, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 62229, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2938 / 62229 (4.72%)
Max absolute difference among violations: 3209095
Max relative difference among violations: 13295.1635514
ACTUAL: array([ 994697, 1549651, 2838028, ..., 1580223, 1101430, 2786600])
DESIRED: array([ 994697, 1549651, 2838028, ..., 1580223, 1101430, 2786600])
2025-04-27 03:20:21.860588 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 62421, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 62421, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2942 / 62421 (4.71%)
Max absolute difference among violations: 3180823
Max relative difference among violations: 1201.40377662
ACTUAL: array([2183963,  260740, 2057795, ..., 2710296, 1287467, 2062648])
DESIRED: array([2183963,  260740, 2057795, ..., 2710296, 1287467, 2062648])
2025-04-27 03:20:22.175299 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 62445, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 62445, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 3004 / 62445 (4.81%)
Max absolute difference among violations: 3213885
Max relative difference among violations: 6199.25255973
ACTUAL: array([ 942006, 1757285, 1017509, ...,  874074, 1093268, 1393762])
DESIRED: array([ 942006, 1757285, 1017509, ...,  874074, 1093268, 1393762])
2025-04-27 03:20:22.527172 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 62481, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 62481, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2964 / 62481 (4.74%)
Max absolute difference among violations: 3164472
Max relative difference among violations: 6378.9047619
ACTUAL: array([  37494, 2403872,  111166, ..., 2880246, 2705750, 2805449])
DESIRED: array([  37494,  111166, 1138565, ..., 2880246, 2705750, 2805449])
2025-04-27 03:20:22.863010 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 62544, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 62544, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 3031 / 62544 (4.85%)
Max absolute difference among violations: 3156891
Max relative difference among violations: 5891.55252918
ACTUAL: array([1777929, 3244074,  518425, ...,  570416, 1388839,  919189])
DESIRED: array([1777929, 3244074,  518425, ...,  570416, 1388839,  919189])
2025-04-27 03:20:23.184717 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 62910, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 62910, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2933 / 62910 (4.66%)
Max absolute difference among violations: 3175171
Max relative difference among violations: 1056.36997194
ACTUAL: array([ 630380, 1777355, 2047242, ...,  727328, 2210300, 1627479])
DESIRED: array([ 630380, 1777355, 2047242, ...,  727328, 2210300, 1627479])
2025-04-27 03:20:23.505609 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 62967, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 62967, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2877 / 62967 (4.57%)
Max absolute difference among violations: 3161621
Max relative difference among violations: 16406.43243243
ACTUAL: array([2917204, 3085779,  380376, ..., 3116385, 1931963, 2188406])
DESIRED: array([2917204, 3085779,  380376, ..., 3116385, 1931963, 2188406])
2025-04-27 03:20:23.889520 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 63618, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 63618, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2999 / 63618 (4.71%)
Max absolute difference among violations: 3182668
Max relative difference among violations: 833.11695906
ACTUAL: array([   4538, 2264637,  875473, ..., 2129769,  127264,  689050])
DESIRED: array([   4538, 2264637,  875473, ..., 2129769,  127264,  689050])
2025-04-27 03:20:24.233052 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 63759, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 63759, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2953 / 63759 (4.63%)
Max absolute difference among violations: 3210105
Max relative difference among violations: 831.02798635
ACTUAL: array([1055631, 1290374, 1453930, ..., 2857650, 1172833, 1749668])
DESIRED: array([1055631, 1290374, 1453930, ..., 2857650, 1172833, 1749668])
2025-04-27 03:20:24.586707 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 63786, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 63786, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 3046 / 63786 (4.78%)
Max absolute difference among violations: 3225177
Max relative difference among violations: 1079.54204501
ACTUAL: array([ 503555,  848589,  472452, ..., 1724971, 1717207,  727607])
DESIRED: array([ 503555,  848589,  472452, ..., 1724971, 1717207,  727607])
2025-04-27 03:20:24.926228 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 63798, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 63798, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 3023 / 63798 (4.74%)
Max absolute difference among violations: 3229091
Max relative difference among violations: 8414.72222222
ACTUAL: array([2520560, 2785803, 2176841, ..., 2505641, 1502288,  574494])
DESIRED: array([2520560, 2785803, 2176841, ..., 2505641, 1502288,  574494])
2025-04-27 03:20:25.282833 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 63855, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 63855, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 3146 / 63855 (4.93%)
Max absolute difference among violations: 3192476
Max relative difference among violations: 2459.37419355
ACTUAL: array([ 951524,  184423,  641838, ..., 3102598, 2399635, 1407246])
DESIRED: array([ 951524,  184423,  641838, ..., 3102598, 2399635, 1407246])
2025-04-27 03:20:25.661034 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 64239, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 64239, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 3046 / 64239 (4.74%)
Max absolute difference among violations: 3238782
Max relative difference among violations: 15368.57142857
ACTUAL: array([1753653, 2434888, 1754114, ..., 2795814, 2227506, 1289438])
DESIRED: array([1753653, 2434888, 1754114, ..., 2795814, 2227506, 1289438])
2025-04-27 03:20:25.984942 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 64314, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 64314, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 3011 / 64314 (4.68%)
Max absolute difference among violations: 3224840
Max relative difference among violations: 769.57894737
ACTUAL: array([ 336531, 2320292, 2039450, ..., 1505966, 1706595, 1447609])
DESIRED: array([ 336531, 2320292, 2039450, ..., 1505966, 1706595, 1447609])
2025-04-27 03:20:26.312433 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 64389, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 64389, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2934 / 64389 (4.56%)
Max absolute difference among violations: 3157818
Max relative difference among violations: 587.05581395
ACTUAL: array([2474643, 1041132, 1605376, ..., 1675207, 2879643, 1050312])
DESIRED: array([2474643, 1041132, 1605376, ..., 1675207, 2879643, 1050312])
2025-04-27 03:20:26.655012 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 64866, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 64866, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 3057 / 64866 (4.71%)
Max absolute difference among violations: 3233616
Max relative difference among violations: 7944.8671875
ACTUAL: array([1447479,  332575, 2306806, ..., 1894779,  215501, 2326787])
DESIRED: array([1447479,  332575, 2306806, ..., 1894779,  215501, 2326787])
2025-04-27 03:20:27.006901 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 65013, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 65013, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 3030 / 65013 (4.66%)
Max absolute difference among violations: 3221100
Max relative difference among violations: 812.27705411
ACTUAL: array([1666780, 1388654,  438944, ..., 1976589, 2467428,   53800])
DESIRED: array([1666780, 1388654,  438944, ..., 1976589, 2467428,   53800])
2025-04-27 03:20:27.339159 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 65382, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 65382, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 3084 / 65382 (4.72%)
Max absolute difference among violations: 3219678
Max relative difference among violations: 1105.24961948
ACTUAL: array([ 635153, 2476584,  306487, ...,  974650, 2502420, 1805422])
DESIRED: array([ 635153, 2476584,  306487, ...,  974650, 2502420, 1805422])
2025-04-27 03:20:27.663302 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 65421, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 65421, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 3074 / 65421 (4.7%)
Max absolute difference among violations: 3230358
Max relative difference among violations: 2799.87680462
ACTUAL: array([2697950, 2644086, 2477130, ..., 1098553,  917500, 2509833])
DESIRED: array([2697950, 2644086, 2477130, ..., 1098553,  917500, 2509833])
2025-04-27 03:20:27.986841 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 65778, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 65778, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 3109 / 65778 (4.73%)
Max absolute difference among violations: 3190187
Max relative difference among violations: 19279.17171717
ACTUAL: array([2907349, 3038980, 3088793, ..., 2271919, 2511988,  757944])
DESIRED: array([2907349, 3038980, 3088793, ..., 2271919, 2511988,  757944])
2025-04-27 03:20:28.316753 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 65871, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 65871, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2999 / 65871 (4.55%)
Max absolute difference among violations: 3226251
Max relative difference among violations: 3931.07395994
ACTUAL: array([1450981, 3080149, 1323744, ..., 1151421, 1249010, 2117230])
DESIRED: array([1450981, 3080149, 1323744, ..., 1151421, 1249010, 2117230])
2025-04-27 03:20:28.655186 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 66123, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 66123, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 3110 / 66123 (4.7%)
Max absolute difference among violations: 3227310
Max relative difference among violations: 5427.28806584
ACTUAL: array([2256319, 2712368, 2272949, ..., 2474935, 1875917, 2134061])
DESIRED: array([2256319, 2712368, 2272949, ..., 2474935, 1875917, 2134061])
2025-04-27 03:20:29.004400 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 66195, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 66195, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 3012 / 66195 (4.55%)
Max absolute difference among violations: 3201308
Max relative difference among violations: 2286.13555992
ACTUAL: array([1503943, 2389048, 2943441, ..., 2229207,  603241, 3148323])
DESIRED: array([1503943, 2389048, 2943441, ..., 2229207,  603241, 3148323])
2025-04-27 03:20:29.331203 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 66234, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 66234, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 3188 / 66234 (4.81%)
Max absolute difference among violations: 3182798
Max relative difference among violations: 2789.95341615
ACTUAL: array([ 963670,  753744, 2256614, ...,  421350, 2542205, 1544384])
DESIRED: array([ 963670,  753744, 2256614, ...,  421350, 2542205, 1544384])
2025-04-27 03:20:29.577010 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 66324, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 66324, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2993 / 66324 (4.51%)
Max absolute difference among violations: 3163296
Max relative difference among violations: 20236.37974684
ACTUAL: array([1585437, 2372708,  522910, ..., 2286650,  441991, 2265172])
DESIRED: array([1585437, 2372708,  522910, ..., 2286650,  441991, 2265172])
2025-04-27 03:20:29.891983 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 66501, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 66501, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 3255 / 66501 (4.89%)
Max absolute difference among violations: 3130171
Max relative difference among violations: 9260.42207792
ACTUAL: array([2821420, 2305396,  748247, ..., 1493977, 3161740,   14254])
DESIRED: array([2821420, 2305396,  748247, ..., 2100104, 3161740,   14254])
2025-04-27 03:20:30.209197 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 67125, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 67125, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 3207 / 67125 (4.78%)
Max absolute difference among violations: 3243713
Max relative difference among violations: 10669.80681818
ACTUAL: array([3013133, 1819532, 2758485, ..., 2049377, 1227039, 2011079])
DESIRED: array([3013133, 1819532, 2758485, ..., 2049377, 1227039, 2011079])
2025-04-27 03:20:30.533913 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 67434, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 67434, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 3144 / 67434 (4.66%)
Max absolute difference among violations: 3211239
Max relative difference among violations: 1345.4591029
ACTUAL: array([ 979011, 2013536, 3159265, ..., 3035728, 3274770, 1263191])
DESIRED: array([ 979011, 2013536, 3159265, ..., 3035728, 3274770, 1263191])
2025-04-27 03:20:30.843494 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 67440, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 67440, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 3164 / 67440 (4.69%)
Max absolute difference among violations: 3089834
Max relative difference among violations: 1548.50393288
ACTUAL: array([ 709941, 1812709, 3170023, ...,  588233, 2906126, 2366164])
DESIRED: array([ 709941, 1812709, 3170023, ...,  588233, 2906126, 2366164])
2025-04-27 03:20:31.199413 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 67491, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 67491, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 3149 / 67491 (4.67%)
Max absolute difference among violations: 3232271
Max relative difference among violations: 17690.58181818
ACTUAL: array([ 238302,  546677, 1451053, ..., 2935599, 2594057, 2252587])
DESIRED: array([ 238302,  546677, 1451053, ..., 2935599, 2594057, 2252587])
2025-04-27 03:20:31.505665 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 67635, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 67635, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 3215 / 67635 (4.75%)
Max absolute difference among violations: 3179180
Max relative difference among violations: 1783.61014925
ACTUAL: array([2683379, 1857945, 2481275, ...,  298751,  410142,  586380])
DESIRED: array([2683379, 1857945, 2481275, ...,  298751,  410142,  586380])
2025-04-27 03:20:31.825883 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 67641, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 67641, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 3231 / 67641 (4.78%)
Max absolute difference among violations: 3186810
Max relative difference among violations: 1384.96740548
ACTUAL: array([ 905145, 2750923, 2943636, ..., 1261925,  475460, 1984420])
DESIRED: array([ 905145, 2750923, 2943636, ..., 1261925,  475460, 1984420])
2025-04-27 03:20:32.144354 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 67680, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 67680, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 3153 / 67680 (4.66%)
Max absolute difference among violations: 3244662
Max relative difference among violations: 1674.70889988
ACTUAL: array([3157086,  895533, 1773247, ...,  267925,  845593, 3017110])
DESIRED: array([3157086,  895533, 1773247, ...,  267925,  845593, 3017110])
2025-04-27 03:20:32.463962 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 68058, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 68058, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 3193 / 68058 (4.69%)
Max absolute difference among violations: 3232756
Max relative difference among violations: 3280.15195369
ACTUAL: array([1402638, 1308545, 1941540, ..., 1511729, 1836034, 1664970])
DESIRED: array([1402638, 1308545, 1941540, ..., 1511729, 1836034, 1664970])
2025-04-27 03:20:32.780122 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 68109, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 68109, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 3110 / 68109 (4.57%)
Max absolute difference among violations: 3233760
Max relative difference among violations: 4656.08869565
ACTUAL: array([2234412, 2946354,  485709, ...,  757237, 2462831, 2727611])
DESIRED: array([2234412, 2946354,  485709, ...,  757237, 2462831, 2727611])
2025-04-27 03:20:33.107753 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 68373, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 68373, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 3064 / 68373 (4.48%)
Max absolute difference among violations: 3192759
Max relative difference among violations: 1271.40728875
ACTUAL: array([ 209145, 3202154, 3154567, ..., 2138737, 2210872, 1347122])
DESIRED: array([ 209145, 3202154, 3154567, ..., 2138737, 2210872, 1347122])
2025-04-27 03:20:33.439008 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 68604, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 68604, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 3150 / 68604 (4.59%)
Max absolute difference among violations: 3198135
Max relative difference among violations: 1790.14646465
ACTUAL: array([3265714, 2611641, 1036046, ...,   58264,  955298, 2290894])
DESIRED: array([3265714, 2611641, 1036046, ...,   58264,  955298, 2290894])
2025-04-27 03:20:33.767502 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 68985, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 68985, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 3260 / 68985 (4.73%)
Max absolute difference among violations: 3168180
Max relative difference among violations: 1830.63656388
ACTUAL: array([ 168948,  696527, 2508957, ...,  811839, 3035256, 2049568])
DESIRED: array([ 168948,  696527, 1372271, ...,  811839, 3035256, 2049568])
2025-04-27 03:20:34.039631 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 69009, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 69009, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 3259 / 69009 (4.72%)
Max absolute difference among violations: 3195926
Max relative difference among violations: 1983.67605634
ACTUAL: array([1264194, 3151376,  861108, ..., 1539757, 1227656,  803881])
DESIRED: array([1264194, 3151376,  861108, ..., 1539757, 1227656,  803881])
2025-04-27 03:20:34.372420 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 69075, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 69075, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 3100 / 69075 (4.49%)
Max absolute difference among violations: 3221501
Max relative difference among violations: 594.24714829
ACTUAL: array([  97554,  568831,  764574, ..., 2385382, 3048088, 1167348])
DESIRED: array([  97554,  568831,  764574, ..., 2385382, 3048088, 1167348])
2025-04-27 03:20:34.688540 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 69132, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 69132, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 3168 / 69132 (4.58%)
Max absolute difference among violations: 3214963
Max relative difference among violations: 8905.71468144
ACTUAL: array([1198959,  659022, 1078477, ..., 2680761, 1843024,  152415])
DESIRED: array([1198959,  659022, 1078477, ..., 2680761, 1843024,  152415])
2025-04-27 03:20:35.021893 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 69147, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 69147, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 3215 / 69147 (4.65%)
Max absolute difference among violations: 3113712
Max relative difference among violations: 289.27562571
ACTUAL: array([2314859,  711293, 1719105, ..., 1918084, 1914686, 1681298])
DESIRED: array([2314859,  711293, 1719105, ..., 1918084, 1914686, 1681298])
2025-04-27 03:20:35.417893 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 69168, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 69168, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 3066 / 69168 (4.43%)
Max absolute difference among violations: 3199101
Max relative difference among violations: 4028.94109589
ACTUAL: array([2298994,  627130, 1598905, ..., 1363118, 1882252, 2994551])
DESIRED: array([2298994,  627130, 1598905, ..., 1363118, 1882252, 2994551])
2025-04-27 03:20:35.796096 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 69384, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 69384, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 3311 / 69384 (4.77%)
Max absolute difference among violations: 3192157
Max relative difference among violations: 63305.77272727
ACTUAL: array([  51268, 1770416, 2739233, ..., 3016010, 2373168, 2659424])
DESIRED: array([  51268, 1770416, 2739233, ..., 3016010, 2373168, 2659424])
2025-04-27 03:20:36.135005 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 69429, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 69429, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 3183 / 69429 (4.58%)
Max absolute difference among violations: 3213530
Max relative difference among violations: 3672.43217287
ACTUAL: array([2332869, 1990390, 2333119, ..., 1583570, 1060676, 1035645])
DESIRED: array([2332869, 1990390, 2333119, ..., 1583570, 1060676, 1035645])
2025-04-27 03:20:36.482159 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 69450, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 69450, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 3224 / 69450 (4.64%)
Max absolute difference among violations: 3161397
Max relative difference among violations: 842.50527192
ACTUAL: array([2311434, 3030056, 2540935, ...,  975222,  902138, 1194159])
DESIRED: array([2311434, 3030056, 2540935, ...,  975222,  902138, 1194159])
2025-04-27 03:20:36.820578 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 69582, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 69582, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 3208 / 69582 (4.61%)
Max absolute difference among violations: 3261260
Max relative difference among violations: 1255.53917728
ACTUAL: array([1879141, 3221379, 2337810, ...,  362022, 2749665, 2090184])
DESIRED: array([1879141, 3221379, 2337810, ...,  362022, 2749665, 2090184])
2025-04-27 03:20:37.146048 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 69993, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 69993, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 3187 / 69993 (4.55%)
Max absolute difference among violations: 3178999
Max relative difference among violations: 1021.4982906
ACTUAL: array([ 756097, 1358080, 1575039, ..., 1260161, 3150244,  112560])
DESIRED: array([ 756097, 1358080, 1575039, ..., 1260161, 3150244,  112560])
2025-04-27 03:20:37.473264 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 70152, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 70152, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 3214 / 70152 (4.58%)
Max absolute difference among violations: 3176414
Max relative difference among violations: 5577.53904282
ACTUAL: array([  14439, 1171987, 1384661, ..., 2339732, 1708802, 2256947])
DESIRED: array([  14439, 1171987, 1384661, ..., 2339732, 1708802, 2256947])
2025-04-27 03:20:37.784757 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 70311, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 70311, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 3268 / 70311 (4.65%)
Max absolute difference among violations: 3132831
Max relative difference among violations: 2451.35446009
ACTUAL: array([1842294,  514348,  178689, ...,  406850, 1010697,   37787])
DESIRED: array([1842294,  514348,  178689, ...,  406850, 1010697,   37787])
2025-04-27 03:20:38.100687 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 70338, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 70338, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 3188 / 70338 (4.53%)
Max absolute difference among violations: 3227454
Max relative difference among violations: 644.20923657
ACTUAL: array([2307542, 2010590,  681057, ..., 1177269, 1446697, 2269004])
DESIRED: array([2307542, 2010590,  681057, ..., 1177269, 1446697, 2269004])
2025-04-27 03:20:38.418367 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 70395, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 70395, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 3242 / 70395 (4.61%)
Max absolute difference among violations: 3136332
Max relative difference among violations: 2221.73575949
ACTUAL: array([  26888, 2498748, 1065799, ..., 1599990, 1027251,   89358])
DESIRED: array([  26888, 2498748, 1065799, ..., 1599990, 1027251,   89358])
2025-04-27 03:20:38.785288 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 70446, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 70446, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 3321 / 70446 (4.71%)
Max absolute difference among violations: 3269604
Max relative difference among violations: 40147.90196078
ACTUAL: array([ 474846,  218010, 2621939, ..., 2721800, 1309747, 3210658])
DESIRED: array([ 474846,  218010, 2621939, ..., 2721800, 1309747, 3210658])
2025-04-27 03:20:39.116881 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 70503, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 70503, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 3188 / 70503 (4.52%)
Max absolute difference among violations: 3215494
Max relative difference among violations: 4381.83870968
ACTUAL: array([1551537,   31206, 2083546, ..., 1719302,    7668, 1801763])
DESIRED: array([1551537,   31206, 2083546, ..., 1719302,    7668, 1801763])
2025-04-27 03:20:39.478821 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 70704, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 70704, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 3333 / 70704 (4.71%)
Max absolute difference among violations: 3189121
Max relative difference among violations: 10424.53744493
ACTUAL: array([1856615,  395312,  400532, ..., 1579771, 1545773, 1075928])
DESIRED: array([1856615,  395312,  400532, ..., 1579771, 1545773, 1075928])
2025-04-27 03:20:39.796054 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 70998, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 70998, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 3197 / 70998 (4.5%)
Max absolute difference among violations: 3216570
Max relative difference among violations: 8633.35526316
ACTUAL: array([1776306, 2285531,  558697, ..., 1071020, 3178756,  446333])
DESIRED: array([1776306, 2285531,  558697, ..., 1071020, 3178756,  446333])
2025-04-27 03:20:40.107779 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 71139, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 71139, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 3221 / 71139 (4.53%)
Max absolute difference among violations: 3229712
Max relative difference among violations: 1931.32801595
ACTUAL: array([ 833011, 2635769,  629713, ...,  986626, 1877041, 1450940])
DESIRED: array([ 833011, 2635769,  629713, ...,  986626, 1877041, 1450940])
2025-04-27 03:20:40.406187 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 71175, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 71175, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 3245 / 71175 (4.56%)
Max absolute difference among violations: 3162126
Max relative difference among violations: 2020.95081967
ACTUAL: array([ 122512, 2549455, 1060655, ..., 2989323, 3066363, 1555096])
DESIRED: array([ 122512, 2549455, 1060655, ..., 2989323, 3066363,   96435])
2025-04-27 03:20:40.719833 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 71655, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 71655, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 3363 / 71655 (4.69%)
Max absolute difference among violations: 3212842
Max relative difference among violations: 2175.34806034
ACTUAL: array([1747835, 2498201, 1678710, ..., 3127886, 2919280,  102111])
DESIRED: array([1747835, 2498201, 1678710, ..., 3127886, 2919280,  102111])
2025-04-27 03:20:41.021174 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 71886, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 71886, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 3259 / 71886 (4.53%)
Max absolute difference among violations: 3241953
Max relative difference among violations: 3731.99447514
ACTUAL: array([3035309, 1668230, 1617669, ...,  267512,  822721, 2751785])
DESIRED: array([3035309, 1617669, 1668230, ...,  267512,  822721, 2751785])
2025-04-27 03:20:41.345189 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 71889, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 71889, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 3216 / 71889 (4.47%)
Max absolute difference among violations: 3223416
Max relative difference among violations: 867.77708593
ACTUAL: array([2493692, 2745586, 2779061, ..., 2186317, 1312123,   26288])
DESIRED: array([2493692, 2745586, 2779061, ..., 2186317, 1312123,   26288])
2025-04-27 03:20:41.670689 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 71895, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 71895, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 3373 / 71895 (4.69%)
Max absolute difference among violations: 3215773
Max relative difference among violations: 11098.02116402
ACTUAL: array([ 545812, 1722387, 2885462, ...,  316845, 2066395,  700754])
DESIRED: array([ 545812, 1722387, 2885462, ...,  316845, 2066395,  700754])
2025-04-27 03:20:42.010401 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 72033, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 72033, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 3420 / 72033 (4.75%)
Max absolute difference among violations: 3234033
Max relative difference among violations: 1227.12229679
ACTUAL: array([2279774, 1066869,  465231, ..., 1970145,  376918, 2205555])
DESIRED: array([2279774, 1066869,  465231, ..., 1970145,  376918, 2205555])
2025-04-27 03:20:42.366128 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 72054, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 72054, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 3261 / 72054 (4.53%)
Max absolute difference among violations: 3195452
Max relative difference among violations: 4362.88059701
ACTUAL: array([3001215, 1327191, 1606854, ...,  234587,  498433, 3189570])
DESIRED: array([3001215, 1327191, 1606854, ...,  234587,  498433, 3189570])
2025-04-27 03:20:42.639639 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 73086, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 73086, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 3487 / 73086 (4.77%)
Max absolute difference among violations: 3235853
Max relative difference among violations: 1591.64547304
ACTUAL: array([2840359, 1164551, 1289811, ..., 2529306, 2830489, 1234213])
DESIRED: array([2840359, 1164551, 1289811, ..., 2529306, 2830489, 1234213])
2025-04-27 03:20:42.958644 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 73167, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 73167, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 3388 / 73167 (4.63%)
Max absolute difference among violations: 3215385
Max relative difference among violations: 2131.00071582
ACTUAL: array([1673788, 1948241, 3081727, ..., 2912498,  652083,  513593])
DESIRED: array([1673788, 1948241, 3081727, ..., 2912498,  513593,  652083])
2025-04-27 03:20:43.290322 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 73416, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 73416, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 3610 / 73416 (4.92%)
Max absolute difference among violations: 3238799
Max relative difference among violations: 1100.92156863
ACTUAL: array([ 895894,   23151, 2560454, ..., 2549207, 2860894,  589330])
DESIRED: array([ 895894,   23151, 2560454, ..., 2549207, 2860894,  589330])
2025-04-27 03:20:43.612804 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 73707, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 73707, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 3515 / 73707 (4.77%)
Max absolute difference among violations: 3169647
Max relative difference among violations: 7130.46979866
ACTUAL: array([2189350, 3000485, 1782730, ..., 1898033,    1853, 2824626])
DESIRED: array([2189350, 3000485, 1782730, ..., 1898033,    1853, 2824626])
2025-04-27 03:20:43.949141 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 73848, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 73848, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 3434 / 73848 (4.65%)
Max absolute difference among violations: 3243682
Max relative difference among violations: 57749.56521739
ACTUAL: array([2715420, 2867908,  177220, ...,  407140,  556104, 1501348])
DESIRED: array([2715420, 2867908,  177220, ...,  407140,  556104, 1501348])
2025-04-27 03:20:44.312677 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 74232, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 74232, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 3374 / 74232 (4.55%)
Max absolute difference among violations: 3174721
Max relative difference among violations: 2968.38028169
ACTUAL: array([1042500,   79564, 1968176, ..., 2872202, 1129882,  910455])
DESIRED: array([1042500,   79564, 1968176, ..., 2872202, 1129882,  910455])
2025-04-27 03:20:44.635428 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 74310, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 74310, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 3529 / 74310 (4.75%)
Max absolute difference among violations: 3183612
Max relative difference among violations: 4420.57271364
ACTUAL: array([2465544, 1517430,   50629, ...,  289643, 2798277,  830340])
DESIRED: array([2465544, 1517430,   50629, ...,  289643, 2798277,  830340])
2025-04-27 03:20:44.895493 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 74502, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 74502, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 3651 / 74502 (4.9%)
Max absolute difference among violations: 3187089
Max relative difference among violations: 32339.35
ACTUAL: array([2825654, 2199062,   26152, ...,  438377, 1034341, 2915234])
DESIRED: array([2825654, 2199062,   26152, ...,  438377, 1034341, 2915234])
2025-04-27 03:20:45.230996 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 74796, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 74796, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 3635 / 74796 (4.86%)
Max absolute difference among violations: 3250051
Max relative difference among violations: 492.0921847
ACTUAL: array([2310235, 3250735, 2692995, ...,   56464,  459131,  171410])
DESIRED: array([2310235, 3250735, 2692995, ..., 1120929,  459131,  171410])
2025-04-27 03:20:45.527412 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 75063, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 75063, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 3646 / 75063 (4.86%)
Max absolute difference among violations: 3221031
Max relative difference among violations: 3013.52351097
ACTUAL: array([1778055,   93116,  846905, ...,  583915, 2152291, 2813063])
DESIRED: array([1778055,   93116,  846905, ...,  583915, 2152291, 2813063])
2025-04-27 03:20:45.810719 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 75546, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 75546, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 3550 / 75546 (4.7%)
Max absolute difference among violations: 3243803
Max relative difference among violations: 4508.25411061
ACTUAL: array([ 407365, 1012470, 2280819, ...,  706408, 2248894,  381416])
DESIRED: array([ 407365, 1012470, 2280819, ...,  706408, 2248894,  381416])
2025-04-27 03:20:46.109501 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 75975, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 75975, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 3493 / 75975 (4.6%)
Max absolute difference among violations: 3178343
Max relative difference among violations: 1002.63034367
ACTUAL: array([ 713661, 2813847,  982041, ...,  808743, 2193412, 2736688])
DESIRED: array([ 713661, 2813847,  982041, ...,  808743, 2193412, 2736688])
2025-04-27 03:20:46.437736 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 75978, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 75978, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 3526 / 75978 (4.64%)
Max absolute difference among violations: 3233761
Max relative difference among violations: 3582.15301724
ACTUAL: array([   9534, 1769378, 1651599, ..., 2554906, 2946015, 2296105])
DESIRED: array([   9534, 1651599, 1769378, ..., 2554906, 2946015, 2296105])
2025-04-27 03:20:46.785020 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 76713, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 76713, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 3600 / 76713 (4.69%)
Max absolute difference among violations: 3245644
Max relative difference among violations: 1678.42197253
ACTUAL: array([2634918, 1749768,  888841, ..., 2392120, 2523242, 1211878])
DESIRED: array([2634918, 1749768,  888841, ..., 2392120, 2523242, 1211878])
2025-04-27 03:20:47.112924 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 76914, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 76914, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 3630 / 76914 (4.72%)
Max absolute difference among violations: 3127964
Max relative difference among violations: 31615.81481481
ACTUAL: array([2156077, 1209421,  782388, ...,   88329,  244741, 2374268])
DESIRED: array([2156077, 1209421,  782388, ...,   88329,  244741, 2374268])
2025-04-27 03:20:47.467888 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 77040, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 77040, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 3655 / 77040 (4.74%)
Max absolute difference among violations: 3207067
Max relative difference among violations: 4972.02166065
ACTUAL: array([2482024,  886789, 2822128, ..., 1534659, 2671137, 2769876])
DESIRED: array([2482024,  886789, 2822128, ..., 1534659, 2671137, 2769876])
2025-04-27 03:20:47.794727 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 77478, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 77478, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 3702 / 77478 (4.78%)
Max absolute difference among violations: 3161076
Max relative difference among violations: 1798.59367089
ACTUAL: array([1840240, 1437968, 3185942, ..., 1235000,  607658,  426647])
DESIRED: array([1840240, 1437968, 3185942, ..., 1235000,  607658,  426647])
2025-04-27 03:20:48.124303 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 77481, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 77481, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 3639 / 77481 (4.7%)
Max absolute difference among violations: 3192148
Max relative difference among violations: 3023.84774665
ACTUAL: array([1216678,  792173, 1631059, ..., 2438962, 1049192,  477074])
DESIRED: array([1216678,  792173, 1631059, ..., 2438962, 1049192,  477074])
2025-04-27 03:20:48.455034 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 77610, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 77610, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 3684 / 77610 (4.75%)
Max absolute difference among violations: 3183430
Max relative difference among violations: 1057.15583955
ACTUAL: array([ 226005, 1578772, 1698261, ..., 2136123, 1152018, 1217209])
DESIRED: array([ 226005, 1578772, 1698261, ..., 2136123, 1152018, 1217209])
2025-04-27 03:20:48.788611 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 77745, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 77745, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 3732 / 77745 (4.8%)
Max absolute difference among violations: 3218327
Max relative difference among violations: 4164.88659794
ACTUAL: array([1215723,  119024,  863471, ...,  155058,  776725,   88595])
DESIRED: array([1215723,  119024,  863471, ..., 2283542,  776725,   88595])
2025-04-27 03:20:49.116796 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 78177, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 78177, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 3650 / 78177 (4.67%)
Max absolute difference among violations: 3245027
Max relative difference among violations: 2778.2765411
ACTUAL: array([2694805,  244826, 1603096, ..., 1432569, 1677177, 2652211])
DESIRED: array([2694805,  244826, 1603096, ..., 1432569, 1677177, 2652211])
2025-04-27 03:20:49.469550 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 78426, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 78426, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 3747 / 78426 (4.78%)
Max absolute difference among violations: 3238886
Max relative difference among violations: 12635.35384615
ACTUAL: array([ 797139,  670924, 3047008, ...,  753086, 2018666, 2510040])
DESIRED: array([ 797139,  670924, 3047008, ...,  753086, 2018666, 2510040])
2025-04-27 03:20:49.863088 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 78570, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 78570, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 3521 / 78570 (4.48%)
Max absolute difference among violations: 3134981
Max relative difference among violations: 5761.41826923
ACTUAL: array([3015406, 1638965, 2176243, ...,  584007, 1495120,  770029])
DESIRED: array([3015406, 1638965, 2176243, ...,  584007, 1495120,  158153])
2025-04-27 03:20:50.118721 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 78801, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 78801, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 3615 / 78801 (4.59%)
Max absolute difference among violations: 3149315
Max relative difference among violations: 9597.31007752
ACTUAL: array([ 257460, 3013161, 2893914, ..., 1698605, 3256569, 1931887])
DESIRED: array([ 257460, 3013161, 2893914, ..., 1698605, 3256569, 1931887])
2025-04-27 03:20:50.419433 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 78942, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 78942, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 3666 / 78942 (4.64%)
Max absolute difference among violations: 3217584
Max relative difference among violations: 30222.56818182
ACTUAL: array([ 256457, 1619488, 2485462, ...,  738364, 1073346,  418715])
DESIRED: array([ 256457, 1619488, 2485462, ...,  738364, 1073346,  418715])
2025-04-27 03:20:50.682574 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 79038, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 79038, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 3652 / 79038 (4.62%)
Max absolute difference among violations: 3246592
Max relative difference among violations: 1601.94322709
ACTUAL: array([2725156, 2853455, 1232740, ...,  511983,  265185,  789995])
DESIRED: array([2725156, 2853455, 1232740, ...,  511983,  265185,  789995])
2025-04-27 03:20:50.979252 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 79812, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 79812, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 3703 / 79812 (4.64%)
Max absolute difference among violations: 3207420
Max relative difference among violations: 1286.73313253
ACTUAL: array([2525739, 1001585,  701155, ..., 2583185,  623836,   79447])
DESIRED: array([2525739, 1001585,  701155, ..., 2583185,  623836,   79447])
2025-04-27 03:20:51.327584 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 80262, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 80262, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 3700 / 80262 (4.61%)
Max absolute difference among violations: 3244345
Max relative difference among violations: 44612.42105263
ACTUAL: array([ 528579,  154797, 3122747, ...,  385930,  461483, 1854518])
DESIRED: array([ 528579,  154797, 3122747, ...,  385930,  461483, 1854518])
2025-04-27 03:20:51.645131 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 80370, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 80370, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 3810 / 80370 (4.74%)
Max absolute difference among violations: 3227093
Max relative difference among violations: 2749.06221719
ACTUAL: array([ 203777,  459736,  633085, ..., 1771680, 2433768, 2287742])
DESIRED: array([ 203777,  459736,  633085, ..., 1771680, 2433768, 2287742])
2025-04-27 03:20:51.962549 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 80526, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 80526, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 3801 / 80526 (4.72%)
Max absolute difference among violations: 3235817
Max relative difference among violations: 11719.26406926
ACTUAL: array([1249941, 1290975,  624226, ...,  908061, 2480198,   57902])
DESIRED: array([1249941, 1290975,  624226, ...,  908061, 2480198,   57902])
2025-04-27 03:20:52.300948 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 80535, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 80535, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 3791 / 80535 (4.71%)
Max absolute difference among violations: 3205541
Max relative difference among violations: 2044.69748654
ACTUAL: array([ 961049, 3235206, 1639419, ...,   62856,  297804, 2282670])
DESIRED: array([ 961049, 3235206, 1639419, ...,   62856,  297804, 2282670])
2025-04-27 03:20:52.556879 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 80781, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 80781, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 3789 / 80781 (4.69%)
Max absolute difference among violations: 3268594
Max relative difference among violations: 843.94340203
ACTUAL: array([1078880, 1163011,  431278, ..., 2886741, 1533031, 2003871])
DESIRED: array([1078880, 1163011,  431278, ..., 2886741, 1533031, 2003871])
2025-04-27 03:20:52.800226 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 81294, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 81294, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 3891 / 81294 (4.79%)
Max absolute difference among violations: 3252274
Max relative difference among violations: 8135.39634146
ACTUAL: array([1850772,  866504, 1479734, ..., 1362165,  739976, 1747076])
DESIRED: array([1850772,  866504, 1479734, ..., 1362165,  739976, 1735979])
2025-04-27 03:20:53.133978 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 81633, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 81633, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 4014 / 81633 (4.92%)
Max absolute difference among violations: 3235257
Max relative difference among violations: 2525.92857143
ACTUAL: array([2394491,  511319, 3265365, ..., 1616989, 1408580,  605937])
DESIRED: array([2394491,  511319, 3265365, ..., 1616989, 1408580,  605937])
2025-04-27 03:20:53.460202 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 81687, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 81687, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 3777 / 81687 (4.62%)
Max absolute difference among violations: 3265589
Max relative difference among violations: 2006.54691877
ACTUAL: array([1352736, 2229844,  547029, ..., 1436549, 2973618, 2067546])
DESIRED: array([1352736, 2229844,  547029, ..., 1436549, 2973618, 2067546])
2025-04-27 03:20:53.811645 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 81873, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 81873, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 3809 / 81873 (4.65%)
Max absolute difference among violations: 3224598
Max relative difference among violations: 8029.89347079
ACTUAL: array([1377218, 2609221, 1827114, ...,  402658, 1273921, 2440008])
DESIRED: array([1377218, 2609221, 1827114, ...,  402658, 1273921, 2440008])
2025-04-27 03:20:54.150608 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 82131, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 82131, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 3786 / 82131 (4.61%)
Max absolute difference among violations: 3216991
Max relative difference among violations: 1224.79663609
ACTUAL: array([1167807,  693410,  553180, ..., 1637018, 2204459, 2349172])
DESIRED: array([1167807,  693410,  553180, ..., 1637018, 2204459, 2349172])
2025-04-27 03:20:54.526921 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 82152, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 82152, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 3787 / 82152 (4.61%)
Max absolute difference among violations: 3159163
Max relative difference among violations: 3357.87398844
ACTUAL: array([ 471117,  999955, 2252464, ..., 1092673,  142017, 3181301])
DESIRED: array([ 471117,  999955, 2252464, ...,  142017, 1092673, 3181301])
2025-04-27 03:20:54.794287 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 82398, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 82398, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 3903 / 82398 (4.74%)
Max absolute difference among violations: 3181577
Max relative difference among violations: 10461.41666667
ACTUAL: array([3081571, 2648201, 2172212, ..., 1872179,   43476,  530576])
DESIRED: array([3081571, 2648201, 2172212, ..., 1872179,   43476,  530576])
2025-04-27 03:20:55.092031 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 82482, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 82482, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 3896 / 82482 (4.72%)
Max absolute difference among violations: 3184940
Max relative difference among violations: 1122.7042042
ACTUAL: array([1765083,  941665, 1204143, ...,  425268,  709098,   95687])
DESIRED: array([1765083,  941665, 1204143, ...,  425268,  709098,   95687])
2025-04-27 03:20:55.444796 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 82647, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 82647, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 3822 / 82647 (4.62%)
Max absolute difference among violations: 3237446
Max relative difference among violations: 777.5114063
ACTUAL: array([2990746, 1921765, 2017787, ..., 1894789, 1522917, 2272683])
DESIRED: array([1921765, 2990746, 2017787, ..., 1894789, 1522917, 2272683])
2025-04-27 03:20:55.783941 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 82944, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 82944, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 4013 / 82944 (4.84%)
Max absolute difference among violations: 3180326
Max relative difference among violations: 827.07421875
ACTUAL: array([1846200, 1158719, 2917374, ..., 2862454, 2545674,  898823])
DESIRED: array([1846200, 1158719, 2917374, ..., 2862454, 2545674,  898823])
2025-04-27 03:20:56.109978 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 83031, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 83031, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 3850 / 83031 (4.64%)
Max absolute difference among violations: 3165062
Max relative difference among violations: 3205.37045455
ACTUAL: array([   5544, 1881958,  161786, ...,  722763, 3211268, 1072425])
DESIRED: array([   5544, 1881958,  161786, ...,  722763, 3211268, 1072425])
2025-04-27 03:20:56.407968 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 83259, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 83259, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 3897 / 83259 (4.68%)
Max absolute difference among violations: 3124784
Max relative difference among violations: 281.43842232
ACTUAL: array([ 234107, 2467890,  401398, ...,  614228, 1916079,  251716])
DESIRED: array([ 234107, 2467890,  401398, ...,  614228, 1916079,  251716])
2025-04-27 03:20:56.736432 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 83439, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 83439, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 3837 / 83439 (4.6%)
Max absolute difference among violations: 3267790
Max relative difference among violations: 590.16780186
ACTUAL: array([1820565, 1991362, 3061724, ...,  805611, 2268327,  836253])
DESIRED: array([1820565, 1991362, 3061724, ...,  805611, 2268327,  836253])
2025-04-27 03:20:57.056129 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 83523, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 83523, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 3808 / 83523 (4.56%)
Max absolute difference among violations: 3159354
Max relative difference among violations: 42699.04285714
ACTUAL: array([3094480, 2742133, 3044250, ..., 1321367, 2055655, 2609403])
DESIRED: array([3094480, 2742133, 3044250, ..., 1321367, 2055655, 2609403])
2025-04-27 03:20:57.379219 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 83919, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 83919, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 3797 / 83919 (4.52%)
Max absolute difference among violations: 3177461
Max relative difference among violations: 9701.00632911
ACTUAL: array([ 242552,  352683, 2929103, ..., 2492458, 1909506,    5805])
DESIRED: array([ 242552,  352683, 2929103, ..., 2492458, 1909506,    5805])
2025-04-27 03:20:57.721678 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 83922, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 83922, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 3920 / 83922 (4.67%)
Max absolute difference among violations: 3216009
Max relative difference among violations: 18895.3862069
ACTUAL: array([1382105, 1241229, 2096358, ..., 1459622,  366479, 3238378])
DESIRED: array([1382105, 1241229, 2096358, ..., 1459622,  366479, 3238378])
2025-04-27 03:20:58.067004 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 84111, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 84111, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 3929 / 84111 (4.67%)
Max absolute difference among violations: 3206786
Max relative difference among violations: 4295.09393346
ACTUAL: array([2821635, 2054568, 2692290, ...,  191525, 2956384, 1209480])
DESIRED: array([2821635, 2054568, 2692290, ...,  191525, 2956384, 1209480])
2025-04-27 03:20:58.438929 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 84552, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 84552, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 3887 / 84552 (4.6%)
Max absolute difference among violations: 3259386
Max relative difference among violations: 1766.21416084
ACTUAL: array([1150774, 1815526, 1843991, ..., 2797990,  859252,  992403])
DESIRED: array([1150774, 1815526, 1843991, ..., 2797990,  859252,  992403])
2025-04-27 03:20:58.722924 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 84789, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 84789, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 3953 / 84789 (4.66%)
Max absolute difference among violations: 3212450
Max relative difference among violations: 3868.62777778
ACTUAL: array([1647047, 1908052, 2792099, ..., 1306864,  303975, 2320531])
DESIRED: array([1647047, 1908052, 2792099, ..., 1306864,  303975, 2320531])
2025-04-27 03:20:59.047139 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 85515, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 85515, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 4006 / 85515 (4.68%)
Max absolute difference among violations: 3207915
Max relative difference among violations: 2810.43202417
ACTUAL: array([3005153, 1746412, 2096796, ...,  221697,  841407, 2097039])
DESIRED: array([3005153, 1746412, 2096796, ...,  221697,  841407, 2097039])
2025-04-27 03:20:59.371141 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 85977, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 85977, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 3914 / 85977 (4.55%)
Max absolute difference among violations: 3240790
Max relative difference among violations: 32808.83823529
ACTUAL: array([  57934,  862285, 1498994, ..., 1063676, 2006556, 2752226])
DESIRED: array([  57934,  862285, 1498994, ..., 1063676, 2006556, 2752226])
2025-04-27 03:20:59.689458 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 86346, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 86346, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 3986 / 86346 (4.62%)
Max absolute difference among violations: 3251651
Max relative difference among violations: 1798.48498498
ACTUAL: array([1389936,  813197, 2127685, ..., 1727016, 3201561, 2762945])
DESIRED: array([1389936,  813197, 2127685, ..., 1727016, 3201561, 2762945])
2025-04-27 03:21:00.030038 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 86835, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 86835, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 3907 / 86835 (4.5%)
Max absolute difference among violations: 3188753
Max relative difference among violations: 2744.11906893
ACTUAL: array([1504367, 1001015, 1056160, ..., 2071389, 1125994,  491991])
DESIRED: array([1504367, 1001015, 1056160, ..., 2071389, 1125994,  491991])
2025-04-27 03:21:00.357926 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 87768, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 87768, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 3977 / 87768 (4.53%)
Max absolute difference among violations: 3255710
Max relative difference among violations: 837.37397119
ACTUAL: array([2235040, 1894225,  454039, ..., 2660619,   32951, 3182774])
DESIRED: array([2235040, 1894225,  454039, ..., 2660619,   32951, 3182774])
2025-04-27 03:21:00.609643 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 87798, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 87798, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 4115 / 87798 (4.69%)
Max absolute difference among violations: 3231672
Max relative difference among violations: 2571.46864686
ACTUAL: array([ 633837,  579998,  863825, ..., 2197004, 1834676, 2472584])
DESIRED: array([ 633837,  579998,  863825, ..., 2197004, 1834676, 2472584])
2025-04-27 03:21:00.905731 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 88182, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 88182, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 4143 / 88182 (4.7%)
Max absolute difference among violations: 3212891
Max relative difference among violations: 729.22725926
ACTUAL: array([2253758, 1508709, 2152169, ...,  956364,  102632, 2549537])
DESIRED: array([2253758, 1508709, 2152169, ...,  956364,  102632, 2549537])
2025-04-27 03:21:01.231848 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 88404, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 88404, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 4170 / 88404 (4.72%)
Max absolute difference among violations: 3212636
Max relative difference among violations: 6589.63772455
ACTUAL: array([1976162, 3206916, 1543311, ..., 1152781, 3255915, 1389792])
DESIRED: array([1976162, 3206916, 1543311, ..., 1152781, 3255915, 1389792])
2025-04-27 03:21:01.613799 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 88719, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 88719, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 4182 / 88719 (4.71%)
Max absolute difference among violations: 3222542
Max relative difference among violations: 16747.27722772
ACTUAL: array([ 342421, 1917197, 1649628, ...,  358695, 1660702, 3128894])
DESIRED: array([ 342421, 1917197, 1649628, ...,  358695, 1660702, 3128894])
2025-04-27 03:21:01.988963 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 88755, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 88755, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 4137 / 88755 (4.66%)
Max absolute difference among violations: 3267447
Max relative difference among violations: 1651.89433771
ACTUAL: array([2111495, 1573546, 1782072, ..., 1232538, 2986967, 1454872])
DESIRED: array([2111495, 1573546, 1782072, ..., 1232538, 2986967, 1454872])
2025-04-27 03:21:02.349461 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 89019, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 89019, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 4101 / 89019 (4.61%)
Max absolute difference among violations: 3272922
Max relative difference among violations: 3202.46771037
ACTUAL: array([ 911326, 3038239, 1948374, ...,   47298, 2429674, 1020710])
DESIRED: array([ 911326, 3038239, 1948374, ...,   47298, 2429674, 1020710])
2025-04-27 03:21:02.682691 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 89715, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 89715, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 4260 / 89715 (4.75%)
Max absolute difference among violations: 3210008
Max relative difference among violations: 5305.09367089
ACTUAL: array([2899862, 2275040, 3080247, ..., 2552588, 1192341, 1369682])
DESIRED: array([2899862, 2275040, 3080247, ..., 2552588, 1192341, 1369682])
2025-04-27 03:21:03.015355 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 90303, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 90303, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 4218 / 90303 (4.67%)
Max absolute difference among violations: 3245091
Max relative difference among violations: 3194.94255319
ACTUAL: array([ 966196, 1574315, 1210443, ..., 1126864,  140966, 2904544])
DESIRED: array([ 966196, 1574315, 1210443, ..., 1126864,  140966, 2904544])
2025-04-27 03:21:03.346360 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 90414, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 90414, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 4077 / 90414 (4.51%)
Max absolute difference among violations: 3224873
Max relative difference among violations: 2816.55753138
ACTUAL: array([3188365, 1336404, 1289997, ...,    9575, 1576459,  895697])
DESIRED: array([3188365, 1336404, 1289997, ...,    9575,  895697, 1576459])
2025-04-27 03:21:03.678100 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 90771, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 90771, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 4288 / 90771 (4.72%)
Max absolute difference among violations: 3227130
Max relative difference among violations: 3520.48863636
ACTUAL: array([ 916364, 1480822, 2773474, ..., 2540533, 3013812,   86534])
DESIRED: array([ 916364, 1480822, 2773474, ..., 2540533, 3013812,   86534])
2025-04-27 03:21:04.002654 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 90849, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 90849, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 4357 / 90849 (4.8%)
Max absolute difference among violations: 3244707
Max relative difference among violations: 2564.98577075
ACTUAL: array([ 253384,  129463, 1295984, ..., 2921055, 2212241,  400372])
DESIRED: array([ 253384,  129463, 1295984, ..., 2921055, 2212241,  400372])
2025-04-27 03:21:04.329492 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 91281, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 91281, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 4334 / 91281 (4.75%)
Max absolute difference among violations: 3239585
Max relative difference among violations: 3474.52267819
ACTUAL: array([2191997, 3083340, 3140048, ..., 2818725,  798563,   33692])
DESIRED: array([2191997, 3083340, 3140048, ..., 2818725,  798563,   33692])
2025-04-27 03:21:04.652936 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 91317, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 91317, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 4191 / 91317 (4.59%)
Max absolute difference among violations: 3159125
Max relative difference among violations: 10214.33333333
ACTUAL: array([2036459, 1440136, 2411829, ...,  920816, 1461475, 1543768])
DESIRED: array([2036459, 1440136, 2411829, ...,  920816, 1461475, 1543768])
2025-04-27 03:21:04.931365 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 91515, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 91515, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 4166 / 91515 (4.55%)
Max absolute difference among violations: 3186709
Max relative difference among violations: 16403.59230769
ACTUAL: array([ 426477, 1484565,  199559, ...,  860079, 1251880, 2823511])
DESIRED: array([ 426477, 1484565,  199559, ...,  860079, 1251880, 2823511])
2025-04-27 03:21:05.237990 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 91554, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 91554, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 4360 / 91554 (4.76%)
Max absolute difference among violations: 3262855
Max relative difference among violations: 365.80487255
ACTUAL: array([2007381, 2529505, 3151966, ..., 1795495, 2938357, 2016842])
DESIRED: array([2007381, 2529505, 3151966, ..., 1795495, 2016842, 2938357])
2025-04-27 03:21:05.547369 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 92397, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 92397, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 4350 / 92397 (4.71%)
Max absolute difference among violations: 3262601
Max relative difference among violations: 1911.29637306
ACTUAL: array([ 478664,  525764, 2122132, ..., 1030730, 2158532, 2847882])
DESIRED: array([ 478664,  525764, 2122132, ..., 1030730, 2158532, 2847882])
2025-04-27 03:21:05.878845 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 92409, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 92409, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 4252 / 92409 (4.6%)
Max absolute difference among violations: 3159059
Max relative difference among violations: 5812.32905983
ACTUAL: array([ 504383, 1631820, 1561764, ..., 1596515, 1688312, 1371653])
DESIRED: array([ 504383, 1631820, 1561764, ..., 1596515, 1688312, 1371653])
2025-04-27 03:21:06.221706 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 92916, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 92916, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 4371 / 92916 (4.7%)
Max absolute difference among violations: 3264850
Max relative difference among violations: 2872.74613003
ACTUAL: array([2391388,  752106, 1969031, ..., 1621941,    8636,  819837])
DESIRED: array([2391388,  752106, 1969031, ..., 1621941,    8636,  819837])
2025-04-27 03:21:06.552707 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 93366, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 93366, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 4423 / 93366 (4.74%)
Max absolute difference among violations: 3255173
Max relative difference among violations: 38099.58333333
ACTUAL: array([1827256,  918924,  954623, ...,  819881, 1155831, 3247347])
DESIRED: array([1827256,  918924,  940802, ...,  819881, 1155831, 3247347])
2025-04-27 03:21:06.900228 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 93528, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 93528, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 4489 / 93528 (4.8%)
Max absolute difference among violations: 3210574
Max relative difference among violations: 1009.0264296
ACTUAL: array([1500323, 3105613, 2662198, ..., 2070520, 2284634, 1135705])
DESIRED: array([1500323, 3105613, 2662198, ..., 2070520, 2284634, 1135705])
2025-04-27 03:21:07.171493 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 93792, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 93792, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 4512 / 93792 (4.81%)
Max absolute difference among violations: 3235398
Max relative difference among violations: 1045.5909719
ACTUAL: array([1069463,  695109, 2980813, ..., 1988616,  987130,  680248])
DESIRED: array([1069463,  695109, 2980813, ..., 1988616,  987130,  680248])
2025-04-27 03:21:07.538862 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 94272, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 94272, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 4615 / 94272 (4.9%)
Max absolute difference among violations: 3169065
Max relative difference among violations: 814.59884768
ACTUAL: array([1407444,  230127,  780044, ...,  341397, 1314948, 2373560])
DESIRED: array([1407444,  230127,  780044, ...,  341397, 1314948, 2373560])
2025-04-27 03:21:07.866884 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 94842, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 94842, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 4481 / 94842 (4.72%)
Max absolute difference among violations: 3233099
Max relative difference among violations: 1470.75765054
ACTUAL: array([2049190, 2843569, 2741227, ..., 3211025, 2885686,  673871])
DESIRED: array([2049190, 2843569, 2741227, ..., 3211025, 2885686,  673871])
2025-04-27 03:21:08.217451 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 95037, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 95037, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 4512 / 95037 (4.75%)
Max absolute difference among violations: 3196936
Max relative difference among violations: 1678.42477257
ACTUAL: array([2915196,  562609, 1006042, ..., 2502553,  424583,  777086])
DESIRED: array([2915196,  562609, 1006042, ..., 2502553,  424583,  777086])
2025-04-27 03:21:08.568091 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 95178, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 95178, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 4602 / 95178 (4.84%)
Max absolute difference among violations: 3236710
Max relative difference among violations: 4236.33394495
ACTUAL: array([2969120,  771698,  599487, ..., 2188903,  329717,  917598])
DESIRED: array([2969120,  771698,  599487, ..., 2188903,  329717,  917598])
2025-04-27 03:21:08.889257 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 95928, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 95928, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 4489 / 95928 (4.68%)
Max absolute difference among violations: 3210125
Max relative difference among violations: 2346.52295918
ACTUAL: array([ 860633,  837928, 1163233, ..., 2976809, 3207726,  309753])
DESIRED: array([ 860633,  837928, 1163233, ..., 2976809, 3207726,  309753])
2025-04-27 03:21:09.216716 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 96321, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 96321, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 4347 / 96321 (4.51%)
Max absolute difference among violations: 3154299
Max relative difference among violations: 4941.36971831
ACTUAL: array([2485557, 2501110, 2100854, ..., 2998885, 2772058, 1784003])
DESIRED: array([2485557, 2501110, 2100854, ..., 2998885, 2772058, 1784003])
2025-04-27 03:21:09.526795 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 98148, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 98148, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 4690 / 98148 (4.78%)
Max absolute difference among violations: 3251495
Max relative difference among violations: 17137.59139785
ACTUAL: array([ 629054, 1800730,  869790, ..., 2035454, 1664690, 1453366])
DESIRED: array([ 629054, 1800730,  869790, ..., 2035454, 1664690, 1453366])
2025-04-27 03:21:09.851847 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 98550, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 98550, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 4656 / 98550 (4.72%)
Max absolute difference among violations: 3189863
Max relative difference among violations: 2816.25337838
ACTUAL: array([1950516,  154677, 1866278, ..., 2087905, 1855711,  486858])
DESIRED: array([1950516,  154677, 1866278, ..., 2087905, 1855711,  486858])
2025-04-27 03:21:10.201235 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 98760, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 98760, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 4685 / 98760 (4.74%)
Max absolute difference among violations: 3186459
Max relative difference among violations: 23980.208
ACTUAL: array([1234476, 1127366, 1600045, ..., 2900794, 2141743, 1576024])
DESIRED: array([1234476, 1127366, 1600045, ..., 2900794, 2141743, 1576024])
2025-04-27 03:21:10.463062 test begin: paddle.Tensor.topk(Tensor([3276800],"float32"), 99432, )
element 1 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.topk(Tensor([3276800],"float32"), 99432, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 4546 / 99432 (4.57%)
Max absolute difference among violations: 3195716
Max relative difference among violations: 5433.6461126
ACTUAL: array([ 109069,  997575,   17390, ..., 2750067,   48943,  965662])
DESIRED: array([ 109069,  997575,   17390, ..., 2750067,   48943,  965662])
2025-04-27 04:01:35.373264 test begin: paddle.all(Tensor([1, 0, 2],"bool"), axis=tuple(), keepdim=True, )
[accuracy error] paddle.all(Tensor([1, 0, 2],"bool"), axis=tuple(), keepdim=True, )
Arrays are not equal
(shapes (1, 1, 1), (1, 0, 2) mismatch)
ACTUAL: array([[[ True]]])
DESIRED: array([], shape=(1, 0, 2), dtype=bool)
2025-04-27 04:01:39.570353 test begin: paddle.all(Tensor([1, 0, 2],"complex128"), axis=tuple(), keepdim=True, )
[accuracy error] paddle.all(Tensor([1, 0, 2],"complex128"), axis=tuple(), keepdim=True, )
Arrays are not equal
(shapes (1, 1, 1), (1, 0, 2) mismatch)
ACTUAL: array([[[ True]]])
DESIRED: array([], shape=(1, 0, 2), dtype=bool)
2025-04-27 04:01:43.898219 test begin: paddle.all(Tensor([1, 0, 2],"complex64"), axis=tuple(), keepdim=True, )
[accuracy error] paddle.all(Tensor([1, 0, 2],"complex64"), axis=tuple(), keepdim=True, )
Arrays are not equal
(shapes (1, 1, 1), (1, 0, 2) mismatch)
ACTUAL: array([[[ True]]])
DESIRED: array([], shape=(1, 0, 2), dtype=bool)
2025-04-27 04:01:48.033438 test begin: paddle.all(Tensor([1, 0, 2],"float32"), axis=tuple(), keepdim=True, )
[accuracy error] paddle.all(Tensor([1, 0, 2],"float32"), axis=tuple(), keepdim=True, )
Arrays are not equal
(shapes (1, 1, 1), (1, 0, 2) mismatch)
ACTUAL: array([[[ True]]])
DESIRED: array([], shape=(1, 0, 2), dtype=bool)
2025-04-27 04:01:52.196141 test begin: paddle.all(Tensor([1, 0, 2],"float64"), axis=tuple(), keepdim=True, )
[accuracy error] paddle.all(Tensor([1, 0, 2],"float64"), axis=tuple(), keepdim=True, )
Arrays are not equal
(shapes (1, 1, 1), (1, 0, 2) mismatch)
ACTUAL: array([[[ True]]])
DESIRED: array([], shape=(1, 0, 2), dtype=bool)
2025-04-27 04:01:56.649750 test begin: paddle.all(Tensor([1, 0, 2],"int32"), axis=tuple(), keepdim=True, )
[accuracy error] paddle.all(Tensor([1, 0, 2],"int32"), axis=tuple(), keepdim=True, )
Arrays are not equal
(shapes (1, 1, 1), (1, 0, 2) mismatch)
ACTUAL: array([[[ True]]])
DESIRED: array([], shape=(1, 0, 2), dtype=bool)
2025-04-27 04:02:20.463809 test begin: paddle.any(Tensor([1, 0, 2],"bool"), axis=tuple(), keepdim=True, )
[accuracy error] paddle.any(Tensor([1, 0, 2],"bool"), axis=tuple(), keepdim=True, )
Arrays are not equal
(shapes (1, 1, 1), (1, 0, 2) mismatch)
ACTUAL: array([[[False]]])
DESIRED: array([], shape=(1, 0, 2), dtype=bool)
2025-04-27 04:02:24.824202 test begin: paddle.any(Tensor([1, 0, 2],"complex128"), axis=tuple(), keepdim=True, )
[accuracy error] paddle.any(Tensor([1, 0, 2],"complex128"), axis=tuple(), keepdim=True, )
Arrays are not equal
(shapes (1, 1, 1), (1, 0, 2) mismatch)
ACTUAL: array([[[False]]])
DESIRED: array([], shape=(1, 0, 2), dtype=bool)
2025-04-27 04:02:29.410486 test begin: paddle.any(Tensor([1, 0, 2],"complex64"), axis=tuple(), keepdim=True, )
[accuracy error] paddle.any(Tensor([1, 0, 2],"complex64"), axis=tuple(), keepdim=True, )
Arrays are not equal
(shapes (1, 1, 1), (1, 0, 2) mismatch)
ACTUAL: array([[[False]]])
DESIRED: array([], shape=(1, 0, 2), dtype=bool)
2025-04-27 04:02:33.389399 test begin: paddle.any(Tensor([1, 0, 2],"float32"), axis=tuple(), keepdim=True, )
[accuracy error] paddle.any(Tensor([1, 0, 2],"float32"), axis=tuple(), keepdim=True, )
Arrays are not equal
(shapes (1, 1, 1), (1, 0, 2) mismatch)
ACTUAL: array([[[False]]])
DESIRED: array([], shape=(1, 0, 2), dtype=bool)
2025-04-27 04:02:37.207056 test begin: paddle.any(Tensor([1, 0, 2],"float64"), axis=tuple(), keepdim=True, )
[accuracy error] paddle.any(Tensor([1, 0, 2],"float64"), axis=tuple(), keepdim=True, )
Arrays are not equal
(shapes (1, 1, 1), (1, 0, 2) mismatch)
ACTUAL: array([[[False]]])
DESIRED: array([], shape=(1, 0, 2), dtype=bool)
2025-04-27 04:02:41.115484 test begin: paddle.any(Tensor([1, 0, 2],"int32"), axis=tuple(), keepdim=True, )
[accuracy error] paddle.any(Tensor([1, 0, 2],"int32"), axis=tuple(), keepdim=True, )
Arrays are not equal
(shapes (1, 1, 1), (1, 0, 2) mismatch)
ACTUAL: array([[[False]]])
DESIRED: array([], shape=(1, 0, 2), dtype=bool)
2025-04-27 04:04:08.843210 test begin: paddle.argsort(Tensor([1, 30000],"float32"), descending=True, )
element 0 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.argsort(Tensor([1, 30000],"float32"), descending=True, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 12 / 30000 (0.04%)
Max absolute difference among violations: 13946
Max relative difference among violations: 5.06574646
ACTUAL: array([[12936, 23321, 17339, ...,  6445, 11807,   587]])
DESIRED: array([[12936, 23321, 17339, ...,  6445, 11807,   587]])
2025-04-27 04:04:09.665048 test begin: paddle.argsort(Tensor([1, 50304],"float32"), descending=True, )
element 0 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.argsort(Tensor([1, 50304],"float32"), descending=True, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 28 / 50304 (0.0557%)
Max absolute difference among violations: 44993
Max relative difference among violations: 140.94560669
ACTUAL: array([[34041, 47512,  6302, ..., 34471, 50034, 30683]])
DESIRED: array([[34041, 47512,  6302, ..., 34471, 50034, 30683]])
2025-04-27 04:04:12.973565 test begin: paddle.argsort(Tensor([16384],"float32"), )
element 0 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.argsort(Tensor([16384],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2 / 16384 (0.0122%)
Max absolute difference among violations: 3392
Max relative difference among violations: 1.07341772
ACTUAL: array([  267,  5144, 11762, ...,  8745,  1474, 13744])
DESIRED: array([  267,  5144, 11762, ...,  8745,  1474, 13744])
2025-04-27 04:04:19.792604 test begin: paddle.argsort(Tensor([35968],"float32"), )
element 0 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.argsort(Tensor([35968],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 14 / 35968 (0.0389%)
Max absolute difference among violations: 21196
Max relative difference among violations: 3.40607424
ACTUAL: array([15454, 30002,  3557, ..., 15039,  3194, 24258])
DESIRED: array([15454, 30002,  3557, ..., 15039,  3194, 24258])
2025-04-27 04:04:21.495809 test begin: paddle.argsort(Tensor([5, 12000],"float32"), descending=True, )
element 0 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.argsort(Tensor([5, 12000],"float32"), descending=True, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 14 / 60000 (0.0233%)
Max absolute difference among violations: 9407
Max relative difference among violations: 102.25
ACTUAL: array([[ 4190,  2038,   971, ..., 11090,  4640,  5239],
[  608,  3435,  5330, ...,  4957, 11011,  6017],
[ 1701,   308,  8595, ...,  4700, 11738,  3592],...
DESIRED: array([[ 4190,  2038,   971, ..., 11090,  4640,  5239],
[  608,  3435,  5330, ...,  4957, 11011,  6017],
[ 1701,   308,  8595, ...,  4700, 11738,  3592],...
2025-04-27 04:04:59.127379 test begin: paddle.bitwise_right_shift(Tensor([1],"int8"), Tensor([1],"int8"), False, )
[accuracy error] paddle.bitwise_right_shift(Tensor([1],"int8"), Tensor([1],"int8"), False, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 1
Max relative difference among violations: 1.
ACTUAL: array([0], dtype=int8)
DESIRED: array([-1], dtype=int8)
2025-04-27 04:04:59.776891 test begin: paddle.bitwise_right_shift(Tensor([200, 300],"int16"), Tensor([200, 300],"int16"), False, )
[accuracy error] paddle.bitwise_right_shift(Tensor([200, 300],"int16"), Tensor([200, 300],"int16"), False, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 30061 / 60000 (50.1%)
Max absolute difference among violations: 2048
Max relative difference among violations: 14.5248227
ACTUAL: array([[0, 0, 0, ..., 0, 0, 0],
[0, 0, 0, ..., 0, 0, 0],
[0, 0, 0, ..., 0, 0, 0],...
DESIRED: array([[-1, -1, -1, ..., -1,  0, -1],
[ 0,  0, -1, ...,  0,  0,  0],
[ 0,  0,  0, ...,  0,  0, -1],...
2025-04-27 04:05:00.201813 test begin: paddle.bitwise_right_shift(Tensor([200, 300],"int16"), Tensor([300],"int16"), False, )
[accuracy error] paddle.bitwise_right_shift(Tensor([200, 300],"int16"), Tensor([300],"int16"), False, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 29917 / 60000 (49.9%)
Max absolute difference among violations: 1
Max relative difference among violations: 1.
ACTUAL: array([[0, 0, 0, ..., 0, 0, 0],
[0, 0, 0, ..., 0, 0, 0],
[0, 0, 0, ..., 0, 0, 0],...
DESIRED: array([[-1,  0, -1, ..., -1,  0,  0],
[-1,  0,  0, ...,  0, -1,  0],
[-1,  0,  0, ...,  0,  0, -1],...
2025-04-27 04:05:00.539361 test begin: paddle.bitwise_right_shift(Tensor([200, 300],"int32"), Tensor([200, 300],"int32"), False, )
[accuracy error] paddle.bitwise_right_shift(Tensor([200, 300],"int32"), Tensor([200, 300],"int32"), False, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 30178 / 60000 (50.3%)
Max absolute difference among violations: 1073741824
Max relative difference among violations: 158275.62264151
ACTUAL: array([[0, 0, 0, ..., 0, 0, 0],
[0, 0, 0, ..., 0, 0, 0],
[0, 0, 0, ..., 0, 0, 0],...
DESIRED: array([[-1,  0,  0, ..., -1, -1, -1],
[ 0,  0,  0, ..., -1,  0, -1],
[ 0, -1,  0, ...,  0, -1, -1],...
2025-04-27 04:05:00.869091 test begin: paddle.bitwise_right_shift(Tensor([200, 300],"int32"), Tensor([300],"int32"), False, )
[accuracy error] paddle.bitwise_right_shift(Tensor([200, 300],"int32"), Tensor([300],"int32"), False, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 29971 / 60000 (50%)
Max absolute difference among violations: 1
Max relative difference among violations: 1.
ACTUAL: array([[0, 0, 0, ..., 0, 0, 0],
[0, 0, 0, ..., 0, 0, 0],
[0, 0, 0, ..., 0, 0, 0],...
DESIRED: array([[ 0, -1,  0, ...,  0,  0,  0],
[ 0,  0, -1, ..., -1,  0, -1],
[ 0,  0, -1, ..., -1,  0, -1],...
2025-04-27 04:05:01.164739 test begin: paddle.bitwise_right_shift(Tensor([200, 300],"int64"), Tensor([200, 300],"int64"), False, )
[accuracy error] paddle.bitwise_right_shift(Tensor([200, 300],"int64"), Tensor([200, 300],"int64"), False, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 29991 / 60000 (50%)
Max absolute difference among violations: 4503599627370496
Max relative difference among violations: 5.62949953e+14
ACTUAL: array([[0, 0, 0, ..., 0, 0, 0],
[0, 0, 0, ..., 0, 0, 0],
[0, 0, 0, ..., 0, 0, 0],...
DESIRED: array([[ 0,  0, -1, ...,  0, -1,  0],
[ 0, -1,  0, ..., -1, -1, -1],
[ 0, -1,  0, ...,  0,  0, -1],...
2025-04-27 04:05:01.542570 test begin: paddle.bitwise_right_shift(Tensor([200, 300],"int64"), Tensor([300],"int64"), False, )
[accuracy error] paddle.bitwise_right_shift(Tensor([200, 300],"int64"), Tensor([300],"int64"), False, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 30013 / 60000 (50%)
Max absolute difference among violations: 1
Max relative difference among violations: 1.
ACTUAL: array([[0, 0, 0, ..., 0, 0, 0],
[0, 0, 0, ..., 0, 0, 0],
[0, 0, 0, ..., 0, 0, 0],...
DESIRED: array([[ 0, -1,  0, ..., -1,  0, -1],
[ 0,  0,  0, ...,  0,  0,  0],
[ 0, -1,  0, ...,  0,  0,  0],...
2025-04-27 04:05:01.928651 test begin: paddle.bitwise_right_shift(Tensor([200, 300],"int8"), Tensor([200, 300],"int8"), False, )
[accuracy error] paddle.bitwise_right_shift(Tensor([200, 300],"int8"), Tensor([200, 300],"int8"), False, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 29760 / 60000 (49.6%)
Max absolute difference among violations: 64
Max relative difference among violations: 64.
ACTUAL: array([[0, 0, 0, ..., 0, 0, 0],
[0, 0, 0, ..., 0, 0, 0],
[0, 0, 0, ..., 0, 0, 0],...
DESIRED: array([[ 0, -1,  0, ..., -1,  0,  0],
[-1,  0,  0, ...,  0,  0, -1],
[-1, -1,  0, ..., -1,  0, -1],...
2025-04-27 04:05:02.371399 test begin: paddle.bitwise_right_shift(Tensor([200, 300],"int8"), Tensor([300],"int8"), False, )
[accuracy error] paddle.bitwise_right_shift(Tensor([200, 300],"int8"), Tensor([300],"int8"), False, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 29985 / 60000 (50%)
Max absolute difference among violations: 32
Max relative difference among violations: 32.
ACTUAL: array([[0, 0, 0, ..., 0, 0, 0],
[0, 0, 0, ..., 0, 0, 0],
[0, 0, 0, ..., 0, 0, 0],...
DESIRED: array([[ 0,  0,  0, ..., -1,  0,  0],
[ 0,  0, -1, ...,  0, -1,  0],
[ 0,  0, -1, ..., -1, -1,  0],...
2025-04-27 04:05:03.470427 test begin: paddle.bitwise_right_shift(Tensor([300],"int16"), Tensor([200, 300],"int16"), False, )
[accuracy error] paddle.bitwise_right_shift(Tensor([300],"int16"), Tensor([200, 300],"int16"), False, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 33400 / 60000 (55.7%)
Max absolute difference among violations: 2048
Max relative difference among violations: 16.
ACTUAL: array([[0, 0, 0, ..., 0, 0, 0],
[0, 0, 0, ..., 0, 0, 0],
[0, 0, 0, ..., 0, 0, 0],...
DESIRED: array([[ 0, -1, -1, ..., -1, -1,  0],
[ 0, -1, -1, ..., -1, -1,  0],
[ 0, -1, -1, ..., -1, -1,  0],...
2025-04-27 04:05:03.914700 test begin: paddle.bitwise_right_shift(Tensor([300],"int32"), Tensor([200, 300],"int32"), False, )
[accuracy error] paddle.bitwise_right_shift(Tensor([300],"int32"), Tensor([200, 300],"int32"), False, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 30800 / 60000 (51.3%)
Max absolute difference among violations: 536870912
Max relative difference among violations: 2485513.48148148
ACTUAL: array([[0, 0, 0, ..., 0, 0, 0],
[0, 0, 0, ..., 0, 0, 0],
[0, 0, 0, ..., 0, 0, 0],...
DESIRED: array([[ 0,  0,  0, ..., -1,  0,  0],
[ 0,  0,  0, ..., -1,  0,  0],
[ 0,  0,  0, ..., -1,  0,  0],...
2025-04-27 04:05:04.276716 test begin: paddle.bitwise_right_shift(Tensor([300],"int64"), Tensor([200, 300],"int64"), False, )
[accuracy error] paddle.bitwise_right_shift(Tensor([300],"int64"), Tensor([200, 300],"int64"), False, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 30600 / 60000 (51%)
Max absolute difference among violations: 1125899906842624
Max relative difference among violations: 1.12589991e+15
ACTUAL: array([[0, 0, 0, ..., 0, 0, 0],
[0, 0, 0, ..., 0, 0, 0],
[0, 0, 0, ..., 0, 0, 0],...
DESIRED: array([[ 0, -1, -1, ..., -1, -1, -1],
[ 0, -1, -1, ..., -1, -1, -1],
[ 0, -1, -1, ..., -1, -1, -1],...
2025-04-27 04:05:04.633486 test begin: paddle.bitwise_right_shift(Tensor([300],"int8"), Tensor([200, 300],"int8"), False, )
[accuracy error] paddle.bitwise_right_shift(Tensor([300],"int8"), Tensor([200, 300],"int8"), False, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 29477 / 60000 (49.1%)
Max absolute difference among violations: 64
Max relative difference among violations: 32.
ACTUAL: array([[0, 0, 0, ..., 0, 0, 0],
[0, 0, 1, ..., 0, 0, 0],
[0, 0, 0, ..., 0, 0, 0],...
DESIRED: array([[-1,  0, -1, ...,  0,  0, -1],
[-1,  0, -1, ...,  0,  0, -1],
[-1,  0, -1, ...,  0,  0, -1],...
2025-04-27 04:06:43.949410 test begin: paddle.broadcast_to(Tensor([0],"float64"), list[0,0,0,], )
--------------------------------------
C++ Traceback (most recent call last):
--------------------------------------
0   egr::Grad(std::vector<paddle::Tensor, std::allocator<paddle::Tensor> > const&, std::vector<paddle::Tensor, std::allocator<paddle::Tensor> > const&, std::vector<paddle::Tensor, std::allocator<paddle::Tensor> > const&, bool, bool, bool, bool, std::vector<paddle::Tensor, std::allocator<paddle::Tensor> > const&)
1   egr::RunBackward(std::vector<paddle::Tensor, std::allocator<paddle::Tensor> > const&, std::vector<paddle::Tensor, std::allocator<paddle::Tensor> > const&, bool, bool, std::vector<paddle::Tensor, std::allocator<paddle::Tensor> > const&, bool, std::vector<paddle::Tensor, std::allocator<paddle::Tensor> > const&)
2   ExpandGradNode::operator()(paddle::small_vector<std::vector<paddle::Tensor, std::allocator<paddle::Tensor> >, 15u>&, bool, bool)
3   paddle::experimental::expand_grad(paddle::Tensor const&, paddle::Tensor const&, paddle::experimental::IntArrayBase<paddle::Tensor> const&, paddle::Tensor*)
4   void phi::ExpandGradKernel<double, phi::CPUContext>(phi::CPUContext const&, phi::DenseTensor const&, phi::DenseTensor const&, paddle::experimental::IntArrayBase<phi::DenseTensor> const&, phi::DenseTensor*)
----------------------
Error Message Summary:
----------------------
FatalError: `Erroneous arithmetic operation` is detected by the operating system.
[TimeInfo: *** Aborted at 1745698004 (unix time) try "date -d @1745698004" if you are using GNU date ***]
[SignalInfo: *** SIGFPE (@0x7f34791b6dea) received by PID 95775 (TID 0x7f347138c700) from PID 2031840746 ***]
2025-04-27 04:06:53.992329 test begin: paddle.broadcast_to(Tensor([0],"float64"), list[0,0,], )
--------------------------------------
C++ Traceback (most recent call last):
--------------------------------------
0   egr::Grad(std::vector<paddle::Tensor, std::allocator<paddle::Tensor> > const&, std::vector<paddle::Tensor, std::allocator<paddle::Tensor> > const&, std::vector<paddle::Tensor, std::allocator<paddle::Tensor> > const&, bool, bool, bool, bool, std::vector<paddle::Tensor, std::allocator<paddle::Tensor> > const&)
1   egr::RunBackward(std::vector<paddle::Tensor, std::allocator<paddle::Tensor> > const&, std::vector<paddle::Tensor, std::allocator<paddle::Tensor> > const&, bool, bool, std::vector<paddle::Tensor, std::allocator<paddle::Tensor> > const&, bool, std::vector<paddle::Tensor, std::allocator<paddle::Tensor> > const&)
2   ExpandGradNode::operator()(paddle::small_vector<std::vector<paddle::Tensor, std::allocator<paddle::Tensor> >, 15u>&, bool, bool)
3   paddle::experimental::expand_grad(paddle::Tensor const&, paddle::Tensor const&, paddle::experimental::IntArrayBase<paddle::Tensor> const&, paddle::Tensor*)
4   void phi::ExpandGradKernel<double, phi::CPUContext>(phi::CPUContext const&, phi::DenseTensor const&, phi::DenseTensor const&, paddle::experimental::IntArrayBase<phi::DenseTensor> const&, phi::DenseTensor*)
----------------------
Error Message Summary:
----------------------
FatalError: `Erroneous arithmetic operation` is detected by the operating system.
[TimeInfo: *** Aborted at 1745698015 (unix time) try "date -d @1745698015" if you are using GNU date ***]
[SignalInfo: *** SIGFPE (@0x7f3910602dea) received by PID 91004 (TID 0x7f38e9165700) from PID 274738666 ***]
2025-04-27 04:57:39.922117 test begin: paddle.broadcast_to(Tensor([1],"float16"), list[168,], )
[accuracy error] backward  paddle.broadcast_to(Tensor([1],"float16"), list[168,], )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.09766
Max relative difference among violations: 0.013145
ACTUAL: array([-7.332], dtype=float16)
DESIRED: array([-7.43], dtype=float16)
2025-04-27 04:57:40.327109 test begin: paddle.broadcast_to(Tensor([1],"float16"), list[3,40,], )
[accuracy error] backward  paddle.broadcast_to(Tensor([1],"float16"), list[3,40,], )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.0586
Max relative difference among violations: 0.02481
ACTUAL: array([-2.303], dtype=float16)
DESIRED: array([-2.361], dtype=float16)
2025-04-27 04:57:40.704462 test begin: paddle.broadcast_to(Tensor([1],"float16"), list[300,40,], )
[accuracy error] backward  paddle.broadcast_to(Tensor([1],"float16"), list[300,40,], )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 12.72
Max relative difference among violations: 0.558
ACTUAL: array([-10.08], dtype=float16)
DESIRED: array([-22.8], dtype=float16)
2025-04-27 04:57:41.116988 test begin: paddle.broadcast_to(Tensor([1],"float16"), list[6,8,9,18,], )
[accuracy error] backward  paddle.broadcast_to(Tensor([1],"float16"), list[6,8,9,18,], )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 29.7
Max relative difference among violations: 0.6025
ACTUAL: array([19.58], dtype=float16)
DESIRED: array([49.28], dtype=float16)
2025-04-27 05:22:57.805537 test begin: paddle.broadcast_to(Tensor([300, 1],"float16"), list[300,40,], )
[accuracy error] backward  paddle.broadcast_to(Tensor([300, 1],"float16"), list[300,40,], )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 8 / 300 (2.67%)
Max absolute difference among violations: 0.03516
Max relative difference among violations: 0.836
ACTUAL: array([[ 1.4521e+00],
[ 1.3750e+00],
[-2.2791e-01],...
DESIRED: array([[ 1.45   ],
[ 1.376  ],
[-0.2318 ],...
2025-04-27 05:46:14.114172 test begin: paddle.broadcast_to(Tensor([],"float16"), list[11008,], )
[accuracy error] backward  paddle.broadcast_to(Tensor([],"float16"), list[11008,], )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 13.85
Max relative difference among violations: 0.676
ACTUAL: array(-6.65, dtype=float16)
DESIRED: array(-20.5, dtype=float16)
2025-04-27 05:46:14.517056 test begin: paddle.broadcast_to(Tensor([],"float16"), list[168,], )
[accuracy error] backward  paddle.broadcast_to(Tensor([],"float16"), list[168,], )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.1445
Max relative difference among violations: 0.03183
ACTUAL: array(4.395, dtype=float16)
DESIRED: array(4.54, dtype=float16)
2025-04-27 05:46:14.961903 test begin: paddle.broadcast_to(Tensor([],"float16"), list[300,40,], )
[accuracy error] backward  paddle.broadcast_to(Tensor([],"float16"), list[300,40,], )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 26.2
Max relative difference among violations: 2.871
ACTUAL: array(17.08, dtype=float16)
DESIRED: array(-9.125, dtype=float16)
2025-04-27 06:58:22.182874 test begin: paddle.clip(Tensor([10, 2],"float64"), min=1e-06, )
[accuracy error] paddle.clip(Tensor([10, 2],"float64"), min=1e-06, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 8 / 20 (40%)
Max absolute difference among violations: 8.89146697e+307
Max relative difference among violations: 1.
ACTUAL: array([[3.402823e+38, 3.402823e+38],
[1.000000e-06, 3.402823e+38],
[1.000000e-06, 1.000000e-06],...
DESIRED: array([[5.701409e+307, 3.747946e+307],
[1.000000e-006, 2.957486e+307],
[1.000000e-006, 1.000000e-006],...
2025-04-27 06:59:46.945020 test begin: paddle.clip(Tensor([5, 2],"float64"), min=0.0, )
[accuracy error] paddle.clip(Tensor([5, 2],"float64"), min=0.0, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 6 / 10 (60%)
Max absolute difference among violations: 6.5692742e+307
Max relative difference among violations: 1.
ACTUAL: array([[3.402823e+38, 0.000000e+00],
[3.402823e+38, 3.402823e+38],
[0.000000e+00, 0.000000e+00],...
DESIRED: array([[5.308327e+307, 0.000000e+000],
[7.326962e+306, 6.569274e+307],
[0.000000e+000, 0.000000e+000],...
2025-04-27 07:00:08.417020 test begin: paddle.clip(Tensor([5],"float64"), min=0, )
[accuracy error] paddle.clip(Tensor([5],"float64"), min=0, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2 / 5 (40%)
Max absolute difference among violations: 3.39918578e+307
Max relative difference among violations: 1.
ACTUAL: array([0.000000e+00, 0.000000e+00, 3.402823e+38, 3.402823e+38,
0.000000e+00])
DESIRED: array([0.000000e+000, 0.000000e+000, 6.133390e+306, 3.399186e+307,
0.000000e+000])
2025-04-27 07:00:08.720113 test begin: paddle.clip(Tensor([5],"float64"), min=0.0, )
[accuracy error] paddle.clip(Tensor([5],"float64"), min=0.0, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 4 / 5 (80%)
Max absolute difference among violations: 8.23226953e+307
Max relative difference among violations: 1.
ACTUAL: array([3.402823e+38, 3.402823e+38, 3.402823e+38, 0.000000e+00,
3.402823e+38])
DESIRED: array([8.232270e+307, 2.658902e+307, 2.753390e+307, 0.000000e+000,
3.513521e+307])
2025-04-27 07:00:41.047993 test begin: paddle.clip(x=Tensor([1, 2, 3],"float64"), min=None, max=1, )
[accuracy error] paddle.clip(x=Tensor([1, 2, 3],"float64"), min=None, max=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 4 / 6 (66.7%)
Max absolute difference among violations: 6.94948952e+307
Max relative difference among violations: 1.
ACTUAL: array([[[ 1.000000e+00, -3.402823e+38, -3.402823e+38],
[ 1.000000e+00, -3.402823e+38, -3.402823e+38]]])
DESIRED: array([[[ 1.000000e+000, -2.615262e+307, -6.287235e+307],
[ 1.000000e+000, -6.949490e+307, -1.056756e+307]]])
2025-04-27 07:00:44.523320 test begin: paddle.clip(x=Tensor([3, 3, 3],"float64"), min=None, max=5, )
[accuracy error] paddle.clip(x=Tensor([3, 3, 3],"float64"), min=None, max=5, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 14 / 27 (51.9%)
Max absolute difference among violations: 8.91041366e+307
Max relative difference among violations: 1.
ACTUAL: array([[[-3.402823e+38,  5.000000e+00, -3.402823e+38],
[ 5.000000e+00, -3.402823e+38,  5.000000e+00],
[-3.402823e+38,  5.000000e+00,  5.000000e+00]],...
DESIRED: array([[[-8.614704e+307,  5.000000e+000, -7.464209e+307],
[ 5.000000e+000, -5.996799e+307,  5.000000e+000],
[-1.913600e+307,  5.000000e+000,  5.000000e+000]],...
2025-04-27 07:00:46.184027 test begin: paddle.clip(x=Tensor([3, 3],"float64"), min=1.0, max=None, )
[accuracy error] paddle.clip(x=Tensor([3, 3],"float64"), min=1.0, max=None, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 6 / 9 (66.7%)
Max absolute difference among violations: 8.34669932e+307
Max relative difference among violations: 1.
ACTUAL: array([[1.000000e+00, 3.402823e+38, 1.000000e+00],
[3.402823e+38, 3.402823e+38, 1.000000e+00],
[3.402823e+38, 3.402823e+38, 3.402823e+38]])
DESIRED: array([[1.000000e+000, 3.817957e+307, 1.000000e+000],
[5.636087e+307, 3.132987e+307, 1.000000e+000],
[5.885456e+307, 8.346699e+307, 4.893858e+307]])
2025-04-27 07:00:46.609499 test begin: paddle.clip(x=Tensor([3, 3],"float64"), min=5, max=None, )
[accuracy error] paddle.clip(x=Tensor([3, 3],"float64"), min=5, max=None, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 8 / 9 (88.9%)
Max absolute difference among violations: 7.71822919e+307
Max relative difference among violations: 1.
ACTUAL: array([[5.000000e+00, 3.402823e+38, 3.402823e+38],
[3.402823e+38, 3.402823e+38, 3.402823e+38],
[3.402823e+38, 3.402823e+38, 3.402823e+38]])
DESIRED: array([[5.000000e+000, 2.934106e+307, 2.788764e+307],
[1.904865e+307, 7.072127e+307, 7.718229e+307],
[4.818553e+307, 7.192690e+307, 3.553137e+307]])
2025-04-27 07:00:47.413924 test begin: paddle.clip(x=Tensor([3],"float64"), min=None, max=-1, )
[accuracy error] paddle.clip(x=Tensor([3],"float64"), min=None, max=-1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 3 (33.3%)
Max absolute difference among violations: 7.69544662e+307
Max relative difference among violations: 1.
ACTUAL: array([-1.000000e+00, -1.000000e+00, -3.402823e+38])
DESIRED: array([-1.000000e+000, -1.000000e+000, -7.695447e+307])
2025-04-28 07:14:23.843193 test begin: paddle.count_nonzero(Tensor([1, 14, 5, 14],"float64"), axis=list[1,3,], keepdim=True, name=None, )
element 0 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.count_nonzero(Tensor([1, 14, 5, 14],"float64"), axis=list[1,3,], keepdim=True, name=None, )
Not equal to tolerance rtol=0.01, atol=0.01
(shapes (1, 1, 5, 1), (1, 5) mismatch)
ACTUAL: array([[[[196],
[196],
[196],...
DESIRED: array([[196, 196, 196, 196, 196]])
2025-04-28 07:14:24.194795 test begin: paddle.count_nonzero(Tensor([2, 3, 4, 5],"float32"), axis=2, keepdim=True, )
element 0 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.count_nonzero(Tensor([2, 3, 4, 5],"float32"), axis=2, keepdim=True, )
Not equal to tolerance rtol=0.01, atol=0.01
(shapes (2, 3, 1, 5), (2, 3, 5) mismatch)
ACTUAL: array([[[[4, 4, 4, 4, 4]],
[[4, 4, 4, 4, 4]],...
DESIRED: array([[[4, 4, 4, 4, 4],
[4, 4, 4, 4, 4],
[4, 4, 4, 4, 4]],...
2025-04-28 07:20:27.421283 test begin: paddle.cumsum(Tensor([906698],"float32"), axis=0, )
[accuracy error] backward  paddle.cumsum(Tensor([906698],"float32"), axis=0, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 28 / 906698 (0.00309%)
Max absolute difference among violations: 0.01024079
Max relative difference among violations: 30.190596
ACTUAL: array([-6.879299, -6.617482, -6.784642, ...,  0.697785,  0.553444,
0.337798], dtype=float32)
DESIRED: array([-6.889431, -6.627614, -6.794775, ...,  0.697785,  0.553444,
0.337798], dtype=float32)
2025-04-28 07:21:03.728901 test begin: paddle.diag(Tensor([100],"float64"), padding_value=8, )
[accuracy error] paddle.diag(Tensor([100],"float64"), padding_value=8, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 9900 / 10000 (99%)
Max absolute difference among violations: 8.
Max relative difference among violations: inf
ACTUAL: array([[ 0.381472,  8.      ,  8.      , ...,  8.      ,  8.      ,
8.      ],
[ 8.      , -0.472762,  8.      , ...,  8.      ,  8.      ,...
DESIRED: array([[ 0.381472,  0.      ,  0.      , ...,  0.      ,  0.      ,
0.      ],
[ 0.      , -0.472762,  0.      , ...,  0.      ,  0.      ,...
2025-04-28 07:21:03.874065 test begin: paddle.diag(Tensor([100],"int64"), padding_value=-8, )
element 0 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.diag(Tensor([100],"int64"), padding_value=-8, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 9900 / 10000 (99%)
Max absolute difference among violations: 8
Max relative difference among violations: inf
ACTUAL: array([[-29723,     -8,     -8, ...,     -8,     -8,     -8],
[    -8,  26779,     -8, ...,     -8,     -8,     -8],
[    -8,     -8, -59358, ...,     -8,     -8,     -8],...
DESIRED: array([[-29723,      0,      0, ...,      0,      0,      0],
[     0,  26779,      0, ...,      0,      0,      0],
[     0,      0, -59358, ...,      0,      0,      0],...
2025-04-28 07:21:04.056718 test begin: paddle.diag(Tensor([100],"int64"), padding_value=8.0, )
element 0 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.diag(Tensor([100],"int64"), padding_value=8.0, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 9900 / 10000 (99%)
Max absolute difference among violations: 8
Max relative difference among violations: inf
ACTUAL: array([[-25048,      8,      8, ...,      8,      8,      8],
[     8,  49029,      8, ...,      8,      8,      8],
[     8,      8,  47864, ...,      8,      8,      8],...
DESIRED: array([[-25048,      0,      0, ...,      0,      0,      0],
[     0,  49029,      0, ...,      0,      0,      0],
[     0,      0,  47864, ...,      0,      0,      0],...
2025-04-28 07:21:34.268862 test begin: paddle.diag(x=Tensor([2],"float64"), offset=1, padding_value=1.1, )
[accuracy error] paddle.diag(x=Tensor([2],"float64"), offset=1, padding_value=1.1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 7 / 9 (77.8%)
Max absolute difference among violations: 1.10000002
Max relative difference among violations: inf
ACTUAL: array([[ 1.1     , -0.251383,  1.1     ],
[ 1.1     ,  1.1     ,  0.006226],
[ 1.1     ,  1.1     ,  1.1     ]])
DESIRED: array([[ 0.      , -0.251383,  0.      ],
[ 0.      ,  0.      ,  0.006226],
[ 0.      ,  0.      ,  0.      ]])
2025-04-28 07:29:40.765555 test begin: paddle.heaviside(Tensor([1],"float32"), Tensor([300, 2048],"float32"), )
derivative for aten::heaviside is not implemented
[accuracy error] paddle.heaviside(Tensor([1],"float32"), Tensor([300, 2048],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 307389 / 614400 (50%)
Max absolute difference among violations: 1.
Max relative difference among violations: inf
ACTUAL: array([[0., 1., 1., ..., 1., 1., 0.],
[1., 0., 1., ..., 1., 0., 1.],
[0., 0., 0., ..., 0., 0., 1.],...
DESIRED: array([[0., 0., 0., ..., 0., 0., 0.],
[0., 0., 0., ..., 0., 0., 0.],
[0., 0., 0., ..., 0., 0., 0.],...
2025-04-28 07:29:42.502470 test begin: paddle.heaviside(Tensor([2048],"float32"), Tensor([300, 2048],"float32"), )
derivative for aten::heaviside is not implemented
[accuracy error] paddle.heaviside(Tensor([2048],"float32"), Tensor([300, 2048],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 307252 / 614400 (50%)
Max absolute difference among violations: 1.
Max relative difference among violations: 1.
ACTUAL: array([[1., 1., 0., ..., 0., 1., 0.],
[0., 0., 1., ..., 1., 0., 0.],
[0., 1., 1., ..., 0., 0., 0.],...
DESIRED: array([[0., 0., 1., ..., 1., 1., 0.],
[0., 0., 1., ..., 1., 1., 0.],
[0., 0., 1., ..., 1., 1., 0.],...
2025-04-28 07:29:43.261260 test begin: paddle.heaviside(Tensor([],"float32"), Tensor([2, 3, 4],"float32"), )
derivative for aten::heaviside is not implemented
[accuracy error] paddle.heaviside(Tensor([],"float32"), Tensor([2, 3, 4],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 10 / 24 (41.7%)
Max absolute difference among violations: 1.
Max relative difference among violations: 1.
ACTUAL: array([[[0., 1., 1., 1.],
[1., 1., 0., 0.],
[0., 1., 0., 1.]],...
DESIRED: array([[[1., 1., 1., 1.],
[1., 1., 1., 1.],
[1., 1., 1., 1.]],...
2025-04-28 07:34:33.622950 test begin: paddle.kron(Tensor([12, 8],"float16"), Tensor([16, 8],"float16"), )
[accuracy error] backward  paddle.kron(Tensor([12, 8],"float16"), Tensor([16, 8],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 51 / 96 (53.1%)
Max absolute difference among violations: 0.06055
Max relative difference among violations: 0.1736
ACTUAL: array([[ 0.3867 ,  0.06146,  0.196  ,  0.866  ,  0.967  ,  0.1978 ,
0.7563 , -0.2888 ],
[-0.2705 , -0.518  , -0.8257 ,  1.016  , -0.9355 , -0.7534 ,...
DESIRED: array([[ 0.4216 ,  0.0678 ,  0.2148 ,  0.895  ,  0.9785 ,  0.1826 ,
0.7534 , -0.2861 ],
[-0.2722 , -0.5405 , -0.857  ,  1.032  , -0.9673 , -0.7617 ,...
2025-04-28 07:34:33.783567 test begin: paddle.kron(Tensor([16, 16],"float16"), Tensor([32, 20],"float16"), )
[accuracy error] backward  paddle.kron(Tensor([16, 16],"float16"), Tensor([32, 20],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 249 / 256 (97.3%)
Max absolute difference among violations: 0.7803
Max relative difference among violations: 7.79
ACTUAL: array([[ 1.948   , -0.797   ,  1.889   ,  1.628   , -1.132   , -1.186   ,
0.4363  ,  0.7334  ,  0.4514  ,  0.81    ,  3.064   , -4.97    ,
1.493   ,  1.379   ,  1.729   ,  1.569   ],...
DESIRED: array([[ 2.154   , -0.6523  ,  1.963   ,  1.781   , -1.469   , -1.34    ,
0.5537  ,  0.9644  ,  0.5605  ,  0.94    ,  3.404   , -5.58    ,
1.436   ,  1.271   ,  1.889   ,  1.84    ],...
2025-04-28 07:34:33.956089 test begin: paddle.kron(Tensor([16, 16],"float16"), Tensor([32, 32],"float16"), )
[accuracy error] backward  paddle.kron(Tensor([16, 16],"float16"), Tensor([32, 32],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 244 / 256 (95.3%)
Max absolute difference among violations: 1.59
Max relative difference among violations: 19.61
ACTUAL: array([[ 3.197   ,  1.999   , -0.9897  ,  2.793   , -4.617   ,  2.148   ,
-2.076   ,  1.979   ,  0.212   , -0.04843 , -2.52    , -2.72    ,
0.492   , -1.016   ,  0.451   , -1.956   ],...
DESIRED: array([[ 4.277  ,  2.365  , -1.065  ,  3.59   , -6.09   ,  2.576  ,
-2.596  ,  2.486  ,  0.3262 , -0.0671 , -3.264  , -3.422  ,
0.7036 , -1.136  ,  0.3435 , -2.186  ],...
2025-04-28 07:34:34.153085 test begin: paddle.kron(Tensor([16, 8],"float16"), Tensor([16, 8],"float16"), )
[accuracy error] backward  paddle.kron(Tensor([16, 8],"float16"), Tensor([16, 8],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 52 / 128 (40.6%)
Max absolute difference among violations: 0.0762
Max relative difference among violations: 1.074
ACTUAL: array([[ 5.2100e-01,  2.2644e-02,  6.6357e-01, -1.3110e-01,  4.8431e-02,
-2.9663e-01,  7.8271e-01, -2.7441e-01],
[ 1.2329e-02, -5.9570e-01, -1.7151e-01,  5.0659e-02,  2.8076e-02,...
DESIRED: array([[ 0.543   ,  0.02916 ,  0.6963  , -0.1333  ,  0.03613 , -0.2944  ,
0.7856  , -0.2825  ],
[ 0.004627, -0.5938  , -0.1617  ,  0.0509  ,  0.013535,  2.402   ,...
2025-04-28 07:34:35.846075 test begin: paddle.kron(Tensor([20, 16],"float16"), Tensor([32, 32],"float16"), )
[accuracy error] backward  paddle.kron(Tensor([20, 16],"float16"), Tensor([32, 32],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 303 / 320 (94.7%)
Max absolute difference among violations: 1.582
Max relative difference among violations: 34.12
ACTUAL: array([[-5.0195e+00,  1.5576e+00,  1.4072e+00, -1.8447e+00,  3.4106e-01,
2.2598e+00,  4.5166e-01, -2.5000e+00,  8.7402e-01,  7.6758e-01,
2.0938e+00, -1.5703e+00, -1.1562e+00, -4.2920e-01, -2.2598e+00,...
DESIRED: array([[-6.27    ,  1.407   ,  1.827   , -1.762   ,  0.651   ,  2.932   ,
0.576   , -3.318   ,  0.876   ,  1.099   ,  2.55    , -1.243   ,
-1.345   , -0.4285  , -2.674   , -2.527   ],...
2025-04-28 07:34:36.094389 test begin: paddle.kron(Tensor([24, 24],"float16"), Tensor([32, 32],"float16"), )
[accuracy error] backward  paddle.kron(Tensor([24, 24],"float16"), Tensor([32, 32],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 551 / 576 (95.7%)
Max absolute difference among violations: 1.629
Max relative difference among violations: 211.1
ACTUAL: array([[ 2.4043e+00, -2.6465e+00,  3.2520e-01, -4.3281e+00, -2.1309e+00,
1.6953e+00,  1.3174e+00,  1.6687e-01,  7.0898e-01, -5.2979e-01,
3.0234e+00, -1.8623e+00,  7.4023e-01,  3.3574e+00, -6.2207e-01,...
DESIRED: array([[ 2.5586e+00, -3.2461e+00,  4.3359e-01, -4.5977e+00, -3.2832e+00,
2.1855e+00,  1.5156e+00, -2.4612e-02,  9.6777e-01, -5.7373e-01,
3.4062e+00, -2.0449e+00,  4.4434e-01,  4.1641e+00, -3.5693e-01,...
2025-04-28 07:34:36.393926 test begin: paddle.kron(Tensor([24, 86],"float16"), Tensor([32, 128],"float16"), )
[accuracy error] backward  paddle.kron(Tensor([24, 86],"float16"), Tensor([32, 128],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2052 / 2064 (99.4%)
Max absolute difference among violations: 10.18
Max relative difference among violations: 1068.
ACTUAL: array([[-6.793 , -4.082 ,  2.8   , ...,  0.537 , -0.9805, -2.918 ],
[ 3.707 ,  3.078 ,  0.415 , ...,  1.732 , -3.047 , -1.912 ],
[ 4.98  , -4.082 ,  3.904 , ...,  0.535 ,  0.1715,  1.364 ],...
DESIRED: array([[ -9.055 , -13.55  ,   5.117 , ...,  -1.774 ,  -1.709 ,  -0.3025],
[  7.598 ,   4.496 ,   1.126 , ...,   2.07  ,  -1.322 ,  -5.85  ],
[  6.934 ,  -8.78  ,   7.42  , ...,  -0.7217,   1.58  ,   0.3848],...
2025-04-28 07:34:38.818616 test begin: paddle.kron(Tensor([32, 16],"float16"), Tensor([32, 32],"float16"), )
[accuracy error] backward  paddle.kron(Tensor([32, 16],"float16"), Tensor([32, 32],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 495 / 512 (96.7%)
Max absolute difference among violations: 1.625
Max relative difference among violations: 15.66
ACTUAL: array([[-0.4456 ,  0.975  ,  0.10425,  1.962  , -0.2325 , -0.4783 ,
-0.1615 , -0.1478 , -0.993  , -3.484  ,  2.871  , -2.328  ,
3.604  ,  0.2224 ,  2.77   ,  2.812  ],...
DESIRED: array([[-0.2242 ,  1.439  ,  0.0948 ,  2.621  , -0.1127 , -0.1952 ,
-0.0609 , -0.2367 , -1.194  , -3.857  ,  2.986  , -2.695  ,
4.223  ,  0.2468 ,  3.867  ,  3.363  ],...
2025-04-28 07:34:39.310282 test begin: paddle.kron(Tensor([4, 8],"float16"), Tensor([8, 8],"float16"), )
[accuracy error] backward  paddle.kron(Tensor([4, 8],"float16"), Tensor([8, 8],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2 / 32 (6.25%)
Max absolute difference among violations: 0.0293
Max relative difference among violations: 0.02098
ACTUAL: array([[ 1.282  , -1.277  , -0.05536,  0.1752 , -0.3826 , -0.3865 ,
-0.6704 ,  0.456  ],
[ 0.1798 ,  0.4426 , -1.349  , -0.3132 ,  0.0793 ,  0.5913 ,...
DESIRED: array([[ 1.304  , -1.29   , -0.05447,  0.1785 , -0.3855 , -0.3848 ,
-0.6704 ,  0.456  ],
[ 0.1846 ,  0.4543 , -1.365  , -0.3132 ,  0.0837 ,  0.5996 ,...
2025-04-28 07:34:43.132537 test begin: paddle.kron(Tensor([8, 16],"float16"), Tensor([8, 16],"float16"), )
[accuracy error] backward  paddle.kron(Tensor([8, 16],"float16"), Tensor([8, 16],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 48 / 128 (37.5%)
Max absolute difference among violations: 0.0664
Max relative difference among violations: 13.24
ACTUAL: array([[-9.141e-01, -8.362e-02,  1.877e-01,  9.111e-01, -3.623e-01,
-7.583e-01, -3.748e-01,  8.647e-01,  3.147e-01, -2.756e-01,
1.187e-01, -2.246e-02, -3.516e-01,  1.280e+00, -4.436e-01,...
DESIRED: array([[-9.3066e-01, -6.7261e-02,  1.9812e-01,  9.1211e-01, -3.5986e-01,
-7.5342e-01, -3.8989e-01,  8.8770e-01,  3.2739e-01, -2.7490e-01,
1.2042e-01, -3.9276e-02, -3.6084e-01,  1.3066e+00, -4.6069e-01,...
2025-04-28 07:34:43.566266 test begin: paddle.kron(Tensor([86, 24],"float16"), Tensor([128, 32],"float16"), )
[accuracy error] backward  paddle.kron(Tensor([86, 24],"float16"), Tensor([128, 32],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2051 / 2064 (99.4%)
Max absolute difference among violations: 10.04
Max relative difference among violations: 4140.
ACTUAL: array([[-1.299  ,  2.043  , -4.285  , ...,  2.365  ,  1.444  ,  2.615  ],
[ 2.54   ,  1.06   , -2.379  , ..., -4.152  , -1.553  , -3.182  ],
[-6.87   ,  0.1825 , -1.952  , ..., -6.516  , -0.4187 ,  2.342  ],...
DESIRED: array([[ -1.685 ,   2.02  ,  -6.945 , ...,   4.766 ,   1.085 ,   6.41  ],
[  3.715 ,   0.325 ,  -2.182 , ...,  -7.97  ,  -4.47  ,  -3.807 ],
[-12.445 ,   1.688 ,  -2.484 , ..., -10.305 ,   4.82  ,   5.613 ],...
2025-04-28 07:35:02.469296 test begin: paddle.linalg.cholesky_solve(Tensor([1, 30, 2],"float64"), Tensor([2, 30, 30],"float64"), upper=True, )
[accuracy error] backward  paddle.linalg.cholesky_solve(Tensor([1, 30, 2],"float64"), Tensor([2, 30, 30],"float64"), upper=True, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 898 / 1800 (49.9%)
Max absolute difference among violations: 3.57339909e+31
Max relative difference among violations: 1.
ACTUAL: array([[[ 2.083483e+16, -7.775089e+15,  1.405941e+16, ...,
-3.473221e+09, -5.825766e+08, -2.453309e+08],
[ 0.000000e+00, -4.677651e+30,  8.094077e+30, ...,...
DESIRED: array([[[ 1.803351e+16, -7.318737e+15,  1.525246e+16, ...,
-3.527739e+09, -6.128427e+08, -2.400602e+08],
[ 1.186317e+31, -4.677651e+30,  8.094077e+30, ...,...
2025-04-28 07:35:02.670989 test begin: paddle.linalg.cholesky_solve(Tensor([20, 2],"float64"), Tensor([20, 20],"float64"), upper=True, )
[accuracy error] backward  paddle.linalg.cholesky_solve(Tensor([20, 2],"float64"), Tensor([20, 20],"float64"), upper=True, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 190 / 400 (47.5%)
Max absolute difference among violations: 4.32409914e+19
Max relative difference among violations: 1.
ACTUAL: array([[-3.022693e+10, -6.503329e+10, -2.305760e+10,  9.850614e+07,
-2.535263e+08, -7.007950e+08,  3.891202e+08,  2.631867e+08,
2.133095e+06,  1.492051e+07,  6.697590e+07, -2.950978e+07,...
DESIRED: array([[-3.022692e+10, -6.503320e+10, -2.305756e+10,  9.850606e+07,
-2.535261e+08, -7.007943e+08,  3.891200e+08,  2.631864e+08,
2.133093e+06,  1.492049e+07,  6.697586e+07, -2.950975e+07,...
2025-04-28 07:35:02.824667 test begin: paddle.linalg.cholesky_solve(x=Tensor([4, 1],"float32"), y=Tensor([4, 4],"float32"), )
[accuracy error] backward  paddle.linalg.cholesky_solve(x=Tensor([4, 1],"float32"), y=Tensor([4, 4],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 6 / 16 (37.5%)
Max absolute difference among violations: 72.84685
Max relative difference among violations: 1.
ACTUAL: array([[-14.606019,   0.      ,   0.      ,   0.      ],
[ -1.54855 ,   5.08298 ,   0.      ,   0.      ],
[ 18.383682, -61.365784,  87.21313 ,   0.      ],
[  5.146684, -17.151741,  24.424585,  20.370398]], dtype=float32)
DESIRED: array([[-14.606016,  48.649048, -69.323654, -57.78762 ],
[ -1.548549,   5.082978,  -7.372206,  -6.063619],
[ 18.383682, -61.365784,  87.213135,  72.84685 ],
[  5.146686, -17.151741,  24.424587,  20.370398]], dtype=float32)
2025-04-28 07:35:02.976443 test begin: paddle.linalg.cholesky_solve(x=Tensor([4, 1],"float64"), y=Tensor([4, 4],"float64"), )
[accuracy error] backward  paddle.linalg.cholesky_solve(x=Tensor([4, 1],"float64"), y=Tensor([4, 4],"float64"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 6 / 16 (37.5%)
Max absolute difference among violations: 3012.63876762
Max relative difference among violations: 1.
ACTUAL: array([[-1.758393e+02,  0.000000e+00,  0.000000e+00,  0.000000e+00],
[ 8.147788e+01,  1.404289e+03,  0.000000e+00,  0.000000e+00],
[-4.065582e+01, -6.957686e+02,  9.476485e+00,  0.000000e+00],
[ 2.305639e+00,  5.215461e+01,  1.678974e-01,  7.724929e+00]])
DESIRED: array([[-1.758393e+02, -3.012639e+03,  4.079816e+01, -5.726763e+02],
[ 8.147788e+01,  1.404289e+03, -1.844140e+01,  2.655007e+02],
[-4.065582e+01, -6.957686e+02,  9.476485e+00, -1.323952e+02],
[ 2.305639e+00,  5.215461e+01,  1.678974e-01,  7.724929e+00]])
2025-04-28 07:35:03.126037 test begin: paddle.linalg.cholesky_solve(x=Tensor([4, 3],"float64"), y=Tensor([4, 4],"float64"), )
[accuracy error] backward  paddle.linalg.cholesky_solve(x=Tensor([4, 3],"float64"), y=Tensor([4, 4],"float64"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 6 / 16 (37.5%)
Max absolute difference among violations: 12305.55901296
Max relative difference among violations: 1.
ACTUAL: array([[  559.075489,     0.      ,     0.      ,     0.      ],
[  116.039494,  2057.140991,     0.      ,     0.      ],
[   40.205714,   704.819852,  -284.329661,     0.      ],
[   80.540115,  1417.266974,  -577.930767, -1769.01867 ]])
DESIRED: array([[   559.075489,   9856.696806,  -4017.528182, -12305.559013],
[   116.039494,   2057.140991,   -836.838118,  -2570.338873],
[    40.205714,    704.819852,   -284.329661,   -886.175842],
[    80.540115,   1417.266974,   -577.930767,  -1769.01867 ]])
2025-04-28 07:35:03.263938 test begin: paddle.linalg.cholesky_solve(x=Tensor([5, 2, 4, 3],"float64"), y=Tensor([5, 2, 4, 4],"float64"), )
[accuracy error] backward  paddle.linalg.cholesky_solve(x=Tensor([5, 2, 4, 3],"float64"), y=Tensor([5, 2, 4, 4],"float64"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 60 / 160 (37.5%)
Max absolute difference among violations: 24144995.6027014
Max relative difference among violations: 1.
ACTUAL: array([[[[ 1.042297e+02,  0.000000e+00,  0.000000e+00,  0.000000e+00],
[ 7.731250e+01,  1.831314e+03,  0.000000e+00,  0.000000e+00],
[ 6.141957e+01,  1.435279e+03,  1.502322e+03,  0.000000e+00],...
DESIRED: array([[[[ 1.042297e+02,  2.514600e+03,  2.629691e+03,  2.200631e+02],
[ 7.731250e+01,  1.831314e+03,  1.908703e+03,  1.122071e+02],
[ 6.141957e+01,  1.435279e+03,  1.502322e+03,  1.357302e+02],...
2025-04-28 07:35:03.407064 test begin: paddle.linalg.cholesky_solve(x=Tensor([5, 2, 4, 3],"float64"), y=Tensor([5, 2, 4, 4],"float64"), upper=True, )
[accuracy error] backward  paddle.linalg.cholesky_solve(x=Tensor([5, 2, 4, 3],"float64"), y=Tensor([5, 2, 4, 4],"float64"), upper=True, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 60 / 160 (37.5%)
Max absolute difference among violations: 2.39047386e+11
Max relative difference among violations: 1.
ACTUAL: array([[[[-1.392806e+03,  3.037792e+01,  9.073616e+01, -3.178553e+01],
[ 0.000000e+00,  4.956140e+01,  2.024325e+02, -1.972046e+02],
[ 0.000000e+00,  0.000000e+00, -6.744633e+01,  7.575219e+01],...
DESIRED: array([[[[-1.392806e+03,  3.037792e+01,  9.073616e+01, -3.178553e+01],
[-4.392203e+03,  4.956140e+01,  2.024325e+02, -1.972046e+02],
[ 1.410241e+03, -2.065824e+01, -6.744633e+01,  7.575219e+01],...
2025-04-28 07:35:03.603697 test begin: paddle.linalg.cholesky_solve(x=Tensor([5, 4, 3],"float64"), y=Tensor([5, 4, 4],"float64"), )
[accuracy error] backward  paddle.linalg.cholesky_solve(x=Tensor([5, 4, 3],"float64"), y=Tensor([5, 4, 4],"float64"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 30 / 80 (37.5%)
Max absolute difference among violations: 12902620.82978012
Max relative difference among violations: 1.
ACTUAL: array([[[ 7.473123e+00,  0.000000e+00,  0.000000e+00,  0.000000e+00],
[-5.367511e+00, -8.410003e+01,  0.000000e+00,  0.000000e+00],
[-6.458268e+00,  1.207628e+02, -2.288099e+02,  0.000000e+00],...
DESIRED: array([[[ 7.473123e+00, -3.174688e+01,  7.651774e+01,  1.622999e+02],
[-5.367511e+00, -8.410003e+01,  1.308415e+02,  3.187141e+02],
[-6.458268e+00,  1.207628e+02, -2.288099e+02, -4.901609e+02],...
2025-04-28 07:35:22.664554 test begin: paddle.linalg.eigvals(Tensor([128, 128],"complex128"), name="large_x", )
[accuracy error] paddle.linalg.eigvals(Tensor([128, 128],"complex128"), name="large_x", )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 102 / 128 (79.7%)
Max absolute difference among violations: 6.41500032
Max relative difference among violations: 5.74049942
ACTUAL: array([-3.534018+7.549517e-15j, -1.596397+2.891048e+00j,
1.545262+2.973893e+00j,  1.545262-2.973893e+00j,
-1.596397-2.891048e+00j,  2.550864-2.003077e+00j,...
DESIRED: array([-3.534018+1.776357e-15j,  1.545262+2.973893e+00j,
-1.596397+2.891048e+00j,  1.545262-2.973893e+00j,
2.550864+2.003077e+00j, -1.596397-2.891048e+00j,...
2025-04-28 07:35:23.456280 test begin: paddle.linalg.eigvals(Tensor([128, 128],"complex64"), name="large_x", )
[accuracy error] paddle.linalg.eigvals(Tensor([128, 128],"complex64"), name="large_x", )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 113 / 128 (88.3%)
Max absolute difference among violations: 6.5089064
Max relative difference among violations: 2.2148914
ACTUAL: array([ 1.292983+3.004139e+00j,  0.166206+3.254452e+00j,
-2.362216+2.185353e+00j,  3.134335+8.247716e-01j,
2.786994+1.470395e+00j,  3.134334-8.247700e-01j,...
DESIRED: array([ 1.292981-3.004136e+00j,  0.166203-3.254455e+00j,
-2.362217-2.185352e+00j, -2.362215+2.185353e+00j,
0.166206+3.254451e+00j,  1.292985+3.004138e+00j,...
2025-04-28 07:35:24.297765 test begin: paddle.linalg.eigvals(Tensor([128, 128],"float32"), name="large_x", )
[accuracy error] paddle.linalg.eigvals(Tensor([128, 128],"float32"), name="large_x", )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 70 / 128 (54.7%)
Max absolute difference among violations: 4.8697786
Max relative difference among violations: 4.4932566
ACTUAL: array([ 3.209423+0.521827j,  3.209423-0.521827j,  1.458932+2.813688j,
1.458932-2.813688j, -2.071568+2.304915j, -2.071568-2.304915j,
-3.011558+0.423534j, -3.011558-0.423534j, -3.001479+0.j      ,...
DESIRED: array([ 3.209425+0.521829j,  3.209425-0.521829j,  1.458925+2.813684j,
1.458925-2.813684j, -3.011558+0.423534j, -3.011558-0.423534j,
-3.001476+0.j      , -2.071568+2.304913j, -2.071568-2.304913j,...
2025-04-28 07:35:24.705153 test begin: paddle.linalg.eigvals(Tensor([128, 128],"float64"), name="large_x", )
[accuracy error] paddle.linalg.eigvals(Tensor([128, 128],"float64"), name="large_x", )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 75 / 128 (58.6%)
Max absolute difference among violations: 6.68218142
Max relative difference among violations: 2.17403395
ACTUAL: array([-3.399999+0.j      ,  0.790789+3.341091j,  0.790789-3.341091j,
-0.266749+3.253463j, -0.266749-3.253463j,  2.835326+1.51213j ,
2.835326-1.51213j ,  2.408959+2.116102j,  2.408959-2.116102j,...
DESIRED: array([ 0.790789+3.341091j,  0.790789-3.341091j, -3.399999+0.j      ,
-0.266749+3.253463j, -0.266749-3.253463j,  2.408959+2.116102j,
2.408959-2.116102j,  2.835326+1.51213j ,  2.835326-1.51213j ,...
2025-04-28 07:35:25.210921 test begin: paddle.linalg.eigvals(Tensor([6, 6],"complex128"), name="small_x", )
[accuracy error] paddle.linalg.eigvals(Tensor([6, 6],"complex128"), name="small_x", )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2 / 6 (33.3%)
Max absolute difference among violations: 0.42790713
Max relative difference among violations: 1.88295356
ACTUAL: array([-0.920705-5.551115e-17j,  0.588228+5.893115e-01j,
0.588228-5.893115e-01j, -0.116004+2.554977e-01j,
0.227253-1.638995e-16j, -0.116004-2.554977e-01j])
DESIRED: array([-0.920705+2.775558e-16j,  0.588228+5.893115e-01j,
0.588228-5.893115e-01j, -0.116004+2.554977e-01j,
-0.116004-2.554977e-01j,  0.227253+2.990288e-17j])
2025-04-28 07:35:25.363428 test begin: paddle.linalg.eigvals(Tensor([6, 6],"complex64"), name="small_x", )
[accuracy error] paddle.linalg.eigvals(Tensor([6, 6],"complex64"), name="small_x", )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2 / 6 (33.3%)
Max absolute difference among violations: 0.2447776
Max relative difference among violations: 0.81187123
ACTUAL: array([-0.763656-4.809772e-08j, -0.419832+2.575309e-08j,
0.257779+1.563688e-01j,  0.4461  -7.462175e-08j,
0.257778-1.563687e-01j,  0.117249+0.000000e+00j], dtype=complex64)
DESIRED: array([-0.763655-1.510489e-08j, -0.419832-1.175580e-08j,
0.4461  -2.843237e-09j,  0.257779+1.563690e-01j,
0.257779-1.563689e-01j,  0.117249-8.048310e-09j], dtype=complex64)
2025-04-28 07:35:25.617940 test begin: paddle.linalg.eigvals(Tensor([6, 6],"float64"), name="small_x", )
[accuracy error] paddle.linalg.eigvals(Tensor([6, 6],"float64"), name="small_x", )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 6 / 6 (100%)
Max absolute difference among violations: 1.07205095
Max relative difference among violations: 2.36036284
ACTUAL: array([-0.440463+0.110813j, -0.440463-0.110813j,  0.238521+0.635584j,
0.238521-0.635584j,  0.631534+0.100104j,  0.631534-0.100104j])
DESIRED: array([ 0.238521+0.635584j,  0.238521-0.635584j,  0.631534+0.100104j,
0.631534-0.100104j, -0.440463+0.110813j, -0.440463-0.110813j])
2025-04-28 07:35:26.462103 test begin: paddle.linalg.eigvals(x=Tensor([2, 4, 4],"float64"), )
[accuracy error] paddle.linalg.eigvals(x=Tensor([2, 4, 4],"float64"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 7 / 8 (87.5%)
Max absolute difference among violations: 0.6782104
Max relative difference among violations: 10.81802199
ACTUAL: array([[ 0.580598+0.j      ,  0.231565+0.j      , -0.110139+0.16763j ,
-0.110139-0.16763j ],
[ 0.062693+0.j      , -0.585724+0.j      , -0.344084+0.542681j,
-0.344084-0.542681j]])
DESIRED: array([[ 0.580598+0.j      , -0.110139+0.16763j , -0.110139-0.16763j ,
0.231565+0.j      ],
[-0.344084+0.542681j, -0.344084-0.542681j, -0.585724+0.j      ,
0.062693+0.j      ]])
2025-04-28 07:35:26.968820 test begin: paddle.linalg.eigvals(x=Tensor([4, 4],"float64"), )
[accuracy error] paddle.linalg.eigvals(x=Tensor([4, 4],"float64"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 4 / 4 (100%)
Max absolute difference among violations: 0.97761618
Max relative difference among violations: 3.52616815
ACTUAL: array([-0.206167+0.488808j, -0.206167-0.488808j, -0.168194+0.j      ,
0.424886+0.j      ])
DESIRED: array([ 0.424886+0.j      , -0.206167+0.488808j, -0.206167-0.488808j,
-0.168194+0.j      ])
2025-04-28 07:35:27.291473 test begin: paddle.linalg.eigvalsh(Tensor([0, 5, 5],"float32"), )
[accuracy error] backward  paddle.linalg.eigvalsh(Tensor([0, 5, 5],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
(shapes (0, 5, 5, 5), (0, 5, 5) mismatch)
ACTUAL: array([], shape=(0, 5, 5, 5), dtype=float32)
DESIRED: array([], shape=(0, 5, 5), dtype=float32)
2025-04-28 07:35:27.429216 test begin: paddle.linalg.eigvalsh(Tensor([2, 5, 5],"complex64"), )
[accuracy error] backward  paddle.linalg.eigvalsh(Tensor([2, 5, 5],"complex64"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 17 / 50 (34%)
Max absolute difference among violations: 0.4612596
Max relative difference among violations: 18.899368
ACTUAL: array([[[-0.28252 +0.j,  0.033633+0.j,  0.057274+0.j, -0.084838+0.j,
-0.030537+0.j],
[ 0.024343+0.j,  0.259649+0.j, -0.05465 +0.j,  0.023132+0.j,...
DESIRED: array([[[-0.28252 +0.j,  0.033633+0.j,  0.057274+0.j, -0.084838+0.j,
-0.030537+0.j],
[ 0.033633+0.j, -0.164715+0.j, -0.058938+0.j, -0.06148 +0.j,...
2025-04-28 07:35:27.594620 test begin: paddle.linalg.eigvalsh(Tensor([2, 5, 5],"float32"), )
[accuracy error] backward  paddle.linalg.eigvalsh(Tensor([2, 5, 5],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 19 / 50 (38%)
Max absolute difference among violations: 0.2552661
Max relative difference among violations: 7.5906706
ACTUAL: array([[[-0.202321,  0.023073, -0.110628,  0.082887,  0.120847],
[-0.060893, -0.254811,  0.06863 ,  0.040282,  0.067199],
[-0.110628, -0.112318, -0.061943,  0.10308 , -0.059043],...
DESIRED: array([[[-0.202321,  0.023073, -0.110628,  0.082887,  0.120847],
[ 0.023073, -0.153182, -0.112319, -0.006763, -0.188067],
[-0.110628, -0.112319, -0.061943,  0.10308 , -0.059043],...
2025-04-28 07:35:29.310486 test begin: paddle.linalg.eigvalsh(x=Tensor([4, 5, 5],"float64"), )
[accuracy error] backward  paddle.linalg.eigvalsh(x=Tensor([4, 5, 5],"float64"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 54 / 100 (54%)
Max absolute difference among violations: 0.48860799
Max relative difference among violations: 683.58937026
ACTUAL: array([[[-0.236201, -0.051638, -0.086063, -0.119229, -0.010956],
[ 0.038253,  0.27406 , -0.071785,  0.054811, -0.047415],
[-0.056354,  0.094139,  0.145752, -0.029957,  0.119227],...
DESIRED: array([[[-2.362010e-01, -5.163821e-02, -8.606339e-02, -1.192287e-01,
-1.095579e-02],
[-5.163821e-02, -2.145483e-01,  1.240613e-01, -3.423643e-02,...
2025-04-28 07:35:29.428967 test begin: paddle.linalg.eigvalsh(x=Tensor([4, 5, 5],"float64"), UPLO="U", )
[accuracy error] backward  paddle.linalg.eigvalsh(x=Tensor([4, 5, 5],"float64"), UPLO="U", )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 54 / 100 (54%)
Max absolute difference among violations: 0.37456467
Max relative difference among violations: 64.28240817
ACTUAL: array([[[ 0.098662, -0.161529,  0.172352, -0.119222, -0.161289],
[ 0.143089, -0.008297, -0.07723 ,  0.060498,  0.005612],
[-0.159157, -0.035972, -0.074253, -0.182144, -0.227027],...
DESIRED: array([[[ 0.098662, -0.161529,  0.172352, -0.119222, -0.161289],
[-0.161529,  0.141246, -0.030237,  0.01553 ,  0.039494],
[ 0.172352, -0.030237, -0.028573, -0.153637, -0.221198],...
2025-04-28 07:35:29.544235 test begin: paddle.linalg.eigvalsh(x=Tensor([5, 10, 10],"complex128"), )
[accuracy error] backward  paddle.linalg.eigvalsh(x=Tensor([5, 10, 10],"complex128"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 367 / 500 (73.4%)
Max absolute difference among violations: 0.41173487
Max relative difference among violations: 40.02432002
ACTUAL: array([[[ 0.025388+0.j, -0.02033 +0.j, -0.07506 +0.j,  0.039769+0.j,
0.023722+0.j,  0.038157+0.j,  0.177222+0.j,  0.103633+0.j,
0.05099 +0.j,  0.025599+0.j],...
DESIRED: array([[[ 0.025388+0.j, -0.02033 +0.j, -0.07506 +0.j,  0.039769+0.j,
0.023722+0.j,  0.038157+0.j,  0.177222+0.j,  0.103633+0.j,
0.05099 +0.j,  0.025599+0.j],...
2025-04-28 07:35:29.710864 test begin: paddle.linalg.eigvalsh(x=Tensor([5, 10, 10],"complex128"), UPLO="U", )
[accuracy error] backward  paddle.linalg.eigvalsh(x=Tensor([5, 10, 10],"complex128"), UPLO="U", )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 384 / 500 (76.8%)
Max absolute difference among violations: 0.40382242
Max relative difference among violations: 168.96185806
ACTUAL: array([[[ 0.302895+0.j, -0.03315 +0.j,  0.031107+0.j, -0.067479+0.j,
0.064874+0.j,  0.003666+0.j, -0.021266+0.j, -0.003169+0.j,
0.014444+0.j,  0.11698 +0.j],...
DESIRED: array([[[ 0.302895+0.j, -0.03315 +0.j,  0.031107+0.j, -0.067479+0.j,
0.064874+0.j,  0.003666+0.j, -0.021266+0.j, -0.003169+0.j,
0.014444+0.j,  0.11698 +0.j],...
2025-04-28 07:35:43.611603 test begin: paddle.linalg.norm(Tensor([16, 16],"float32"), 2.0, )
[accuracy error] paddle.linalg.norm(Tensor([16, 16],"float32"), 2.0, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 2.4351866
Max relative difference among violations: 1.1267445
ACTUAL: array(4.596446, dtype=float32)
DESIRED: array(2.161259, dtype=float32)
2025-04-28 07:35:50.830529 test begin: paddle.linalg.norm(x=Tensor([3, 4],"float32"), p=2, axis=None, keepdim=False, )
[accuracy error] paddle.linalg.norm(x=Tensor([3, 4],"float32"), p=2, axis=None, keepdim=False, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.26000828
Max relative difference among violations: 0.4372468
ACTUAL: array(0.854657, dtype=float32)
DESIRED: array(0.594649, dtype=float32)
2025-04-28 07:35:50.933472 test begin: paddle.linalg.norm(x=Tensor([3, 4],"float32"), p=2, axis=None, keepdim=True, )
[accuracy error] paddle.linalg.norm(x=Tensor([3, 4],"float32"), p=2, axis=None, keepdim=True, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.21806091
Max relative difference among violations: 0.3559446
ACTUAL: array([[0.830687]], dtype=float32)
DESIRED: array([[0.612626]], dtype=float32)
2025-04-28 07:35:53.187648 test begin: paddle.linalg.pinv(Tensor([3, 5, 5],"complex128"), rcond=1e-15, hermitian=True, )
W0428 07:35:53.386022 41195 multiply_fwd_func.cc:76] got different data type, run type promotion automatically, this may cause data type been changed.
[accuracy error] paddle.linalg.pinv(Tensor([3, 5, 5],"complex128"), rcond=1e-15, hermitian=True, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 75 / 75 (100%)
Max absolute difference among violations: 165.34111654
Max relative difference among violations: 242.50682185
ACTUAL: array([[[ 1.301204+0.j,  1.207733+0.j,  0.988819+0.j, -0.906557+0.j,
-1.197164+0.j],
[ 1.207733+0.j,  1.117683+0.j, -0.384968+0.j,  0.017341+0.j,...
DESIRED: array([[[-2.347794e+00+0.j,  5.224195e+00+0.j, -3.163580e-01+0.j,
-1.245365e+00+0.j,  1.183074e+00+0.j],
[ 5.224195e+00+0.j, -5.565817e+00+0.j,  1.803000e-01+0.j,...
2025-04-28 07:35:53.389243 test begin: paddle.linalg.pinv(Tensor([3, 5, 5],"complex64"), rcond=1e-15, hermitian=True, )
[accuracy error] paddle.linalg.pinv(Tensor([3, 5, 5],"complex64"), rcond=1e-15, hermitian=True, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 75 / 75 (100%)
Max absolute difference among violations: 21.621462
Max relative difference among violations: 18.7798
ACTUAL: array([[[-6.082090e-01+0.j, -3.552245e+00+0.j,  1.418094e+00+0.j,
-7.447334e-01+0.j,  1.670247e-01+0.j],
[-3.552245e+00+0.j, -4.244250e+00+0.j,  1.624049e+00+0.j,...
DESIRED: array([[[ -0.833136+0.j,   3.205235+0.j,   0.690489+0.j,   2.685066+0.j,
-0.206443+0.j],
[  3.205235+0.j,  -0.700505+0.j,  -2.654905+0.j,   0.372817+0.j,...
2025-04-28 07:35:53.714110 test begin: paddle.linalg.pinv(Tensor([3, 5, 5],"float32"), rcond=1e-15, hermitian=True, )
[accuracy error] paddle.linalg.pinv(Tensor([3, 5, 5],"float32"), rcond=1e-15, hermitian=True, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 75 / 75 (100%)
Max absolute difference among violations: 6.652959
Max relative difference among violations: 36.160168
ACTUAL: array([[[-2.551239,  1.034517,  5.184921,  2.917928,  0.969659],
[ 1.034517,  1.363744, -0.983597, -1.660112, -1.673041],
[ 5.184921, -0.983597, -3.75847 , -4.279133, -3.380254],...
DESIRED: array([[[ 0.163823, -1.028708, -1.468038, -1.368785,  0.026094],
[-1.028708, -0.062849, -0.531497, -1.472088, -1.1278  ],
[-1.468038, -0.531497,  2.504534,  0.480912,  0.747207],...
2025-04-28 07:35:54.277267 test begin: paddle.linalg.pinv(Tensor([3, 5, 5],"float64"), rcond=1e-15, hermitian=True, )
[accuracy error] paddle.linalg.pinv(Tensor([3, 5, 5],"float64"), rcond=1e-15, hermitian=True, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 75 / 75 (100%)
Max absolute difference among violations: 76.99495692
Max relative difference among violations: 14.04935343
ACTUAL: array([[[ 0.972617,  1.759353, -2.0999  ,  1.100813, -2.415185],
[ 1.759353, -0.799284, -1.099244, -0.109762, -2.167176],
[-2.0999  , -1.099244,  6.162263, -1.066041,  4.016313],...
DESIRED: array([[[-3.125033e+00,  2.134784e+00, -5.987777e-01, -1.395735e+00,
1.399055e+00],
[ 2.134784e+00,  7.619567e+01,  1.652610e+01, -4.312947e+01,...
2025-04-28 07:35:54.957414 test begin: paddle.linalg.pinv(Tensor([5, 5],"complex128"), rcond=1e-15, hermitian=True, )
[accuracy error] paddle.linalg.pinv(Tensor([5, 5],"complex128"), rcond=1e-15, hermitian=True, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 25 / 25 (100%)
Max absolute difference among violations: 11.26089383
Max relative difference among violations: 95.64313897
ACTUAL: array([[  0.123321+0.j,   2.014372+0.j,   1.400483+0.j,  -1.359698+0.j,
-0.307249+0.j],
[  2.014372+0.j, -11.378632+0.j,  -2.741164+0.j,   8.822672+0.j,...
DESIRED: array([[ 1.174201+0.j, -1.266995+0.j,  1.098913+0.j, -2.608359+0.j,
1.798645+0.j],
[-1.266995+0.j, -0.117739+0.j,  0.266683+0.j, -1.512352+0.j,...
2025-04-28 07:35:55.384295 test begin: paddle.linalg.pinv(Tensor([5, 5],"float64"), rcond=1e-15, hermitian=True, )
[accuracy error] paddle.linalg.pinv(Tensor([5, 5],"float64"), rcond=1e-15, hermitian=True, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 25 / 25 (100%)
Max absolute difference among violations: 55.62592891
Max relative difference among violations: 2.08011326
ACTUAL: array([[-6.217042, -1.874486,  4.500692, -4.724098,  4.346378],
[-1.874486,  0.396406,  0.583   , -1.581505,  0.246655],
[ 4.500692,  0.583   , -2.312353,  2.652257, -3.656472],...
DESIRED: array([[ 5.755917, -2.570214,  6.279366, 15.643591,  1.682767],
[-2.570214,  3.30921 , -2.52595 , -7.626983, -2.226595],
[ 6.279366, -2.52595 ,  6.906203, 16.350789,  6.302162],...
2025-04-28 07:35:55.560778 test begin: paddle.linalg.pinv(x=Tensor([2, 2],"complex128"), hermitian=True, )
[accuracy error] paddle.linalg.pinv(x=Tensor([2, 2],"complex128"), hermitian=True, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 4 / 4 (100%)
Max absolute difference among violations: 0.14707015
Max relative difference among violations: 0.11009359
ACTUAL: array([[ 1.188795+0.j, -1.347831+0.j],
[-1.347831+0.j, -0.888822+0.j]])
DESIRED: array([[ 1.335865+0.j, -1.376409+0.j],
[-1.376409+0.j, -0.998781+0.j]])
2025-04-28 07:35:55.750736 test begin: paddle.linalg.pinv(x=Tensor([2, 2],"complex64"), hermitian=True, )
[accuracy error] paddle.linalg.pinv(x=Tensor([2, 2],"complex64"), hermitian=True, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 4 / 4 (100%)
Max absolute difference among violations: 45.43338
Max relative difference among violations: 3.397023
ACTUAL: array([[37.046288+0.j, 32.05891 +0.j],
[32.05891 +0.j, 31.792835+0.j]], dtype=complex64)
DESIRED: array([[ 16.988327+0.j, -13.37447 +0.j],
[-13.37447 +0.j,  14.579245+0.j]], dtype=complex64)
2025-04-28 07:35:55.891212 test begin: paddle.linalg.pinv(x=Tensor([2, 2],"float32"), hermitian=True, )
[accuracy error] paddle.linalg.pinv(x=Tensor([2, 2],"float32"), hermitian=True, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 4 / 4 (100%)
Max absolute difference among violations: 9.076805
Max relative difference among violations: 4.282636
ACTUAL: array([[-4.09232 , -4.053092],
[-4.053092, -1.947732]], dtype=float32)
DESIRED: array([[4.984485, 1.234707],
[1.234706, 2.372356]], dtype=float32)
2025-04-28 07:35:56.057850 test begin: paddle.linalg.pinv(x=Tensor([2, 2],"float64"), hermitian=True, )
[accuracy error] paddle.linalg.pinv(x=Tensor([2, 2],"float64"), hermitian=True, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 4 / 4 (100%)
Max absolute difference among violations: 1.36348712
Max relative difference among violations: 1.36805285
ACTUAL: array([[ 2.225048, -0.366825],
[-0.366825, -2.163344]])
DESIRED: array([[ 1.678607,  0.996663],
[ 0.996663, -1.632057]])
2025-04-28 07:35:57.114853 test begin: paddle.linalg.pinv(x=Tensor([4, 2, 2],"float64"), hermitian=True, )
[accuracy error] paddle.linalg.pinv(x=Tensor([4, 2, 2],"float64"), hermitian=True, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 16 / 16 (100%)
Max absolute difference among violations: 3.61240015
Max relative difference among violations: 8.36038252
ACTUAL: array([[[-3.971188,  2.152937],
[ 2.152937, -3.612327]],
...
DESIRED: array([[[-5.556925,  3.808088],
[ 3.808088, -5.054767]],
...
2025-04-28 07:36:00.056867 test begin: paddle.linalg.svd_lowrank(Tensor([1, 100, 40],"float64"), q=12, )
[accuracy error] paddle.linalg.svd_lowrank(Tensor([1, 100, 40],"float64"), q=12, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1094 / 1200 (91.2%)
Max absolute difference among violations: 0.51849364
Max relative difference among violations: 112.10248418
ACTUAL: array([[[-0.008368, -0.036367, -0.026683, ..., -0.269858, -0.007783,
-0.05926 ],
[-0.015843, -0.014978,  0.044709, ...,  0.219235,  0.085346,...
DESIRED: array([[[ 0.009771,  0.071686, -0.025389, ...,  0.153554, -0.154862,
-0.050373],
[ 0.014025,  0.043115, -0.006834, ...,  0.081862,  0.140086,...
2025-04-28 07:36:00.221156 test begin: paddle.linalg.svd_lowrank(Tensor([1, 100, 40],"float64"), q=6, )
[accuracy error] paddle.linalg.svd_lowrank(Tensor([1, 100, 40],"float64"), q=6, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 570 / 600 (95%)
Max absolute difference among violations: 0.46696878
Max relative difference among violations: 271.9408862
ACTUAL: array([[[ 2.623289e-02, -1.421766e-01, -1.340412e-01,  3.950361e-02,
1.225264e-01, -5.434239e-03],
[ 4.516791e-02,  6.120726e-02,  1.054292e-01,  1.083080e-01,...
DESIRED: array([[[-6.876301e-02, -8.146626e-02, -1.126065e-01,  8.981060e-02,
3.705099e-02, -4.824691e-02],
[-5.175766e-02, -4.228111e-02,  2.382641e-01, -2.926112e-02,...
2025-04-28 07:36:00.407288 test begin: paddle.linalg.svd_lowrank(Tensor([1, 100, 40],"float64"), q=8, )
[accuracy error] paddle.linalg.svd_lowrank(Tensor([1, 100, 40],"float64"), q=8, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 732 / 800 (91.5%)
Max absolute difference among violations: 0.48751124
Max relative difference among violations: 514.06392273
ACTUAL: array([[[-1.863380e-01, -5.129736e-03,  3.365950e-03,  2.230492e-01,
-1.184664e-01,  3.821189e-02,  7.876173e-02, -7.714038e-02],
[-1.085701e-01,  2.024793e-01, -3.337017e-02,  5.601212e-02,...
DESIRED: array([[[-1.580347e-01,  5.045372e-02, -1.912469e-01, -1.893392e-02,
9.539745e-02, -2.878972e-01, -4.700543e-02, -1.583573e-01],
[-7.600855e-02,  1.715914e-01, -9.328913e-02,  3.149918e-02,...
2025-04-28 07:36:00.635421 test begin: paddle.linalg.svd_lowrank(Tensor([1, 17, 4],"float64"), q=2, )
[accuracy error] paddle.linalg.svd_lowrank(Tensor([1, 17, 4],"float64"), q=2, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 25 / 34 (73.5%)
Max absolute difference among violations: 0.53733505
Max relative difference among violations: 39.49702564
ACTUAL: array([[[ 1.094225e-02, -3.079300e-01],
[-7.178493e-02, -4.315657e-01],
[ 2.854275e-01, -1.710376e-01],...
DESIRED: array([[[-0.002252, -0.206012],
[-0.09275 , -0.319001],
[ 0.271967,  0.036303],...
2025-04-28 07:36:00.808607 test begin: paddle.linalg.svd_lowrank(Tensor([1, 17, 4],"float64"), q=4, )
[accuracy error] paddle.linalg.svd_lowrank(Tensor([1, 17, 4],"float64"), q=4, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 17 / 68 (25%)
Max absolute difference among violations: 1.16835186
Max relative difference among violations: 2.
ACTUAL: array([[[ 0.086766,  0.180596,  0.376895, -0.465237],
[-0.197979, -0.394179, -0.366513, -0.103664],
[-0.459594,  0.101285, -0.062833, -0.248116],...
DESIRED: array([[[ 0.086766,  0.180596,  0.376895,  0.465237],
[-0.197979, -0.394179, -0.366513,  0.103664],
[-0.459594,  0.101285, -0.062833,  0.248116],...
2025-04-28 07:36:00.987313 test begin: paddle.linalg.svd_lowrank(Tensor([1, 4, 17],"float64"), q=2, )
[accuracy error] paddle.linalg.svd_lowrank(Tensor([1, 4, 17],"float64"), q=2, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 8 / 8 (100%)
Max absolute difference among violations: 0.54146518
Max relative difference among violations: 2.75700724
ACTUAL: array([[[-0.6264  , -0.725109],
[-0.067516, -0.269631],
[-0.222652,  0.344315],
[ 0.74397 , -0.531944]]])
DESIRED: array([[[-0.562469, -0.420226],
[ 0.038427,  0.229228],
[-0.694734, -0.19715 ],
[ 0.446651, -0.855568]]])
2025-04-28 07:36:01.324110 test begin: paddle.linalg.svd_lowrank(Tensor([1, 40, 100],"float64"), q=12, )
[accuracy error] paddle.linalg.svd_lowrank(Tensor([1, 40, 100],"float64"), q=12, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 452 / 480 (94.2%)
Max absolute difference among violations: 0.73747394
Max relative difference among violations: 255.57766075
ACTUAL: array([[[-1.681912e-01, -1.336295e-01, -5.199782e-02, -2.105701e-01,
5.569407e-02, -4.094100e-02, -1.063041e-01,  1.590754e-01,
2.168415e-01, -9.125578e-02, -1.492270e-01, -6.043359e-02],...
DESIRED: array([[[ 0.222321, -0.110912,  0.068485, -0.106333,  0.062896,
-0.045956, -0.181044, -0.168809, -0.085892,  0.123661,
-0.089713,  0.061196],...
2025-04-28 07:36:01.540641 test begin: paddle.linalg.svd_lowrank(Tensor([1, 40, 100],"float64"), q=6, )
[accuracy error] paddle.linalg.svd_lowrank(Tensor([1, 40, 100],"float64"), q=6, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 232 / 240 (96.7%)
Max absolute difference among violations: 0.73994665
Max relative difference among violations: 88.74316611
ACTUAL: array([[[-8.406597e-02,  6.728471e-02,  1.668546e-02, -1.509575e-01,
-1.413685e-01, -2.807826e-01],
[ 1.225689e-01, -2.037981e-01,  1.408758e-01, -3.142048e-02,...
DESIRED: array([[[ 0.139215, -0.040798, -0.036524, -0.087461,  0.316519,
-0.169719],
[-0.163372,  0.152988, -0.209635, -0.102336, -0.028065,...
2025-04-28 07:36:01.744023 test begin: paddle.linalg.svd_lowrank(Tensor([1, 40, 100],"float64"), q=8, )
[accuracy error] paddle.linalg.svd_lowrank(Tensor([1, 40, 100],"float64"), q=8, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 307 / 320 (95.9%)
Max absolute difference among violations: 0.67459065
Max relative difference among violations: 313.18117868
ACTUAL: array([[[-0.016601,  0.048889,  0.014384, -0.066125, -0.3562  ,
-0.116119, -0.218116, -0.001616],
[-0.032666, -0.157537, -0.085964,  0.079837, -0.089734,...
DESIRED: array([[[-9.549514e-02, -6.971338e-02,  1.580341e-01,  1.638730e-01,
2.752752e-01,  2.607765e-01, -2.653712e-01,  1.119656e-01],
[-1.217344e-01,  1.637977e-01,  2.519616e-01,  2.606068e-01,...
2025-04-28 07:36:01.941594 test begin: paddle.linalg.svd_lowrank(Tensor([100, 40],"float64"), q=12, )
[accuracy error] paddle.linalg.svd_lowrank(Tensor([100, 40],"float64"), q=12, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1115 / 1200 (92.9%)
Max absolute difference among violations: 0.56091549
Max relative difference among violations: 132.78166861
ACTUAL: array([[-0.227843, -0.040752,  0.160375, ..., -0.071885, -0.030689,
-0.159444],
[-0.041642, -0.090999, -0.152355, ..., -0.057503, -0.014608,...
DESIRED: array([[ 0.214112,  0.047647,  0.160921, ..., -0.140869, -0.014403,
-0.182101],
[ 0.049375,  0.094428, -0.176399, ..., -0.101812, -0.139357,...
2025-04-28 07:36:02.128441 test begin: paddle.linalg.svd_lowrank(Tensor([100, 40],"float64"), q=6, )
[accuracy error] paddle.linalg.svd_lowrank(Tensor([100, 40],"float64"), q=6, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 564 / 600 (94%)
Max absolute difference among violations: 0.43969352
Max relative difference among violations: 287.43872112
ACTUAL: array([[ 0.075821, -0.013991,  0.069402, -0.166358, -0.129373, -0.185463],
[-0.125273,  0.118702,  0.057439, -0.129326,  0.087593,  0.034573],
[-0.006355,  0.124428, -0.086992,  0.047528, -0.055213,  0.245249],...
DESIRED: array([[ 0.106061,  0.244327, -0.07082 ,  0.273335,  0.010238,  0.120088],
[-0.158449,  0.034718, -0.195513,  0.111004,  0.060266,  0.063118],
[ 0.021965, -0.009646, -0.134514, -0.139109, -0.101471,  0.022482],...
2025-04-28 07:36:02.295505 test begin: paddle.linalg.svd_lowrank(Tensor([100, 40],"float64"), q=8, )
[accuracy error] paddle.linalg.svd_lowrank(Tensor([100, 40],"float64"), q=8, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 722 / 800 (90.2%)
Max absolute difference among violations: 0.43325754
Max relative difference among violations: 211.19967457
ACTUAL: array([[-8.372755e-02, -4.993811e-02, -8.891164e-02,  1.397868e-01,
1.434493e-01, -8.647687e-02, -1.227896e-02, -2.200685e-02],
[ 1.805394e-02, -1.178981e-01,  2.379089e-01,  2.065282e-02,...
DESIRED: array([[-7.042323e-02,  9.604739e-02, -9.693655e-02,  3.395182e-02,
7.319507e-03,  6.641192e-03,  1.248754e-01, -9.168187e-02],
[-1.186754e-03, -2.720656e-01,  3.294435e-02,  5.049319e-02,...
2025-04-28 07:36:02.461952 test begin: paddle.linalg.svd_lowrank(Tensor([17, 4],"float64"), q=2, )
[accuracy error] paddle.linalg.svd_lowrank(Tensor([17, 4],"float64"), q=2, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 32 / 34 (94.1%)
Max absolute difference among violations: 0.75870575
Max relative difference among violations: 15.55664538
ACTUAL: array([[-0.107107,  0.281487],
[ 0.008873, -0.088075],
[ 0.264206, -0.230034],...
DESIRED: array([[-0.009854,  0.114683],
[-0.07681 , -0.44981 ],
[ 0.139485, -0.100314],...
2025-04-28 07:36:02.601822 test begin: paddle.linalg.svd_lowrank(Tensor([17, 4],"float64"), q=4, )
[accuracy error] paddle.linalg.svd_lowrank(Tensor([17, 4],"float64"), q=4, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 17 / 68 (25%)
Max absolute difference among violations: 0.9131666
Max relative difference among violations: 2.
ACTUAL: array([[ 0.254219, -0.350903,  0.213145, -0.357274],
[ 0.079649,  0.196259, -0.141142, -0.229506],
[-0.21397 , -0.017244,  0.456583, -0.134551],...
DESIRED: array([[ 0.254219, -0.350903, -0.213145, -0.357274],
[ 0.079649,  0.196259,  0.141142, -0.229506],
[-0.21397 , -0.017244, -0.456583, -0.134551],...
2025-04-28 07:36:02.776935 test begin: paddle.linalg.svd_lowrank(Tensor([2, 3, 100, 40],"float64"), q=12, )
[accuracy error] paddle.linalg.svd_lowrank(Tensor([2, 3, 100, 40],"float64"), q=12, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 6622 / 7200 (92%)
Max absolute difference among violations: 0.62688025
Max relative difference among violations: 11793.62040465
ACTUAL: array([[[[-0.045847,  0.043868, -0.088041, ..., -0.035224,  0.00282 ,
-0.110998],
[ 0.051889,  0.105697, -0.043729, ...,  0.020645,  0.033847,...
DESIRED: array([[[[ 0.030478,  0.026849, -0.058692, ..., -0.020856, -0.25179 ,
0.099298],
[-0.023721,  0.118976, -0.036957, ..., -0.082477, -0.053478,...
2025-04-28 07:36:03.073989 test begin: paddle.linalg.svd_lowrank(Tensor([2, 3, 100, 40],"float64"), q=6, )
[accuracy error] paddle.linalg.svd_lowrank(Tensor([2, 3, 100, 40],"float64"), q=6, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 3313 / 3600 (92%)
Max absolute difference among violations: 0.63216506
Max relative difference among violations: 786.40509531
ACTUAL: array([[[[-0.094948,  0.267121,  0.062744, -0.005704,  0.055632,
0.013655],
[-0.134377, -0.067025, -0.02245 , -0.130952, -0.093726,...
DESIRED: array([[[[-0.055158, -0.133346,  0.067083, -0.018706, -0.104712,
-0.104172],
[-0.124906,  0.024227, -0.005186,  0.095055, -0.116061,...
2025-04-28 07:36:03.341069 test begin: paddle.linalg.svd_lowrank(Tensor([2, 3, 100, 40],"float64"), q=8, )
[accuracy error] paddle.linalg.svd_lowrank(Tensor([2, 3, 100, 40],"float64"), q=8, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 4454 / 4800 (92.8%)
Max absolute difference among violations: 0.60865667
Max relative difference among violations: 2329.84480564
ACTUAL: array([[[[-7.323236e-02,  1.961434e-03,  5.645371e-02, ...,
-1.182705e-01, -7.759402e-02, -2.403421e-02],
[-1.698018e-01,  3.986052e-02,  1.608174e-01, ...,...
DESIRED: array([[[[-1.003469e-01, -1.651576e-02,  4.883713e-02, ...,
-6.028677e-02, -1.484520e-01, -4.873979e-02],
[-3.447912e-02, -1.259053e-01,  1.191529e-01, ...,...
2025-04-28 07:36:03.603654 test begin: paddle.linalg.svd_lowrank(Tensor([2, 3, 17, 4],"float64"), q=2, )
[accuracy error] paddle.linalg.svd_lowrank(Tensor([2, 3, 17, 4],"float64"), q=2, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 192 / 204 (94.1%)
Max absolute difference among violations: 0.98251486
Max relative difference among violations: 881.12476866
ACTUAL: array([[[[-0.474346,  0.136114],
[-0.121378, -0.013003],
[ 0.081733, -0.264408],...
DESIRED: array([[[[-3.485340e-01, -1.468248e-01],
[-3.650937e-01, -1.238305e-01],
[ 1.189276e-02, -8.332788e-02],...
2025-04-28 07:36:03.747988 test begin: paddle.linalg.svd_lowrank(Tensor([2, 3, 17, 4],"float64"), q=4, )
[accuracy error] paddle.linalg.svd_lowrank(Tensor([2, 3, 17, 4],"float64"), q=4, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 220 / 408 (53.9%)
Max absolute difference among violations: 1.35766115
Max relative difference among violations: 2.
ACTUAL: array([[[[ 1.349736e-01,  5.103816e-02,  5.389941e-01, -3.427434e-01],
[-4.602557e-01,  8.330847e-06,  1.611406e-01, -2.539512e-01],
[-3.690710e-01, -5.958795e-03,  7.523576e-02,  1.487638e-01],...
DESIRED: array([[[[ 1.349736e-01,  5.103816e-02,  5.389941e-01, -3.427434e-01],
[-4.602557e-01,  8.330847e-06,  1.611406e-01, -2.539512e-01],
[-3.690710e-01, -5.958795e-03,  7.523576e-02,  1.487638e-01],...
2025-04-28 07:36:03.905884 test begin: paddle.linalg.svd_lowrank(Tensor([2, 3, 4, 17],"float64"), q=2, )
[accuracy error] paddle.linalg.svd_lowrank(Tensor([2, 3, 4, 17],"float64"), q=2, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 46 / 48 (95.8%)
Max absolute difference among violations: 1.88515858
Max relative difference among violations: 17.41154793
ACTUAL: array([[[[-0.28418 , -0.370101],
[ 0.312402, -0.560418],
[-0.177434, -0.737732],...
DESIRED: array([[[[ 0.39554 , -0.668111],
[-0.13214 , -0.637552],
[ 0.374533, -0.217714],...
2025-04-28 07:36:04.052436 test begin: paddle.linalg.svd_lowrank(Tensor([2, 3, 4, 17],"float64"), q=4, )
[accuracy error] paddle.linalg.svd_lowrank(Tensor([2, 3, 4, 17],"float64"), q=4, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 43 / 96 (44.8%)
Max absolute difference among violations: 1.99349312
Max relative difference among violations: 2.
ACTUAL: array([[[[-0.168109,  0.838888,  0.448799,  0.258042],
[ 0.701962, -0.265892,  0.546093,  0.371932],
[-0.343796, -0.267802,  0.698294, -0.567866],...
DESIRED: array([[[[-0.168109,  0.838888,  0.448799,  0.258042],
[ 0.701962, -0.265892,  0.546093,  0.371932],
[-0.343796, -0.267802,  0.698294, -0.567866],...
2025-04-28 07:36:04.181118 test begin: paddle.linalg.svd_lowrank(Tensor([2, 3, 40, 100],"float64"), q=12, )
[accuracy error] paddle.linalg.svd_lowrank(Tensor([2, 3, 40, 100],"float64"), q=12, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2714 / 2880 (94.2%)
Max absolute difference among violations: 0.90568826
Max relative difference among violations: 702.13821621
ACTUAL: array([[[[-2.079967e-01,  5.883963e-02,  4.094055e-02, ...,
-3.612224e-02, -1.285188e-01, -5.571322e-02],
[-1.107143e-01, -7.427274e-02, -1.164166e-01, ...,...
DESIRED: array([[[[ 2.682366e-01,  7.100031e-02,  1.077480e-01, ...,
-1.517010e-01, -8.710635e-02,  1.791701e-01],
[ 8.112769e-02, -7.112341e-03,  1.140484e-01, ...,...
2025-04-28 07:36:04.468714 test begin: paddle.linalg.svd_lowrank(Tensor([2, 3, 40, 100],"float64"), q=6, )
[accuracy error] paddle.linalg.svd_lowrank(Tensor([2, 3, 40, 100],"float64"), q=6, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1383 / 1440 (96%)
Max absolute difference among violations: 0.92897724
Max relative difference among violations: 3043.48562825
ACTUAL: array([[[[-7.841370e-02,  1.197343e-01, -1.085109e-01,  1.822599e-01,
-8.976690e-02,  1.377483e-01],
[-1.797815e-01, -6.415917e-02,  9.099492e-02, -2.818860e-01,...
DESIRED: array([[[[ 0.090688,  0.323394,  0.117734, -0.110529, -0.033054,
-0.320754],
[ 0.109654, -0.203891, -0.136647,  0.093878, -0.061694,...
2025-04-28 07:36:04.743355 test begin: paddle.linalg.svd_lowrank(Tensor([2, 3, 40, 100],"float64"), q=8, )
[accuracy error] paddle.linalg.svd_lowrank(Tensor([2, 3, 40, 100],"float64"), q=8, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1832 / 1920 (95.4%)
Max absolute difference among violations: 0.8273099
Max relative difference among violations: 322.04249162
ACTUAL: array([[[[-0.196543,  0.275036,  0.003557, ...,  0.343154,  0.129071,
-0.063717],
[-0.266028, -0.080433,  0.194648, ..., -0.049961, -0.290358,...
DESIRED: array([[[[ 0.221569, -0.265478,  0.079649, ..., -0.031447,  0.196719,
-0.265298],
[ 0.242599, -0.003138,  0.164194, ..., -0.101439, -0.279331,...
2025-04-28 07:36:05.056439 test begin: paddle.linalg.svd_lowrank(Tensor([3, 100, 40],"float64"), q=12, )
[accuracy error] paddle.linalg.svd_lowrank(Tensor([3, 100, 40],"float64"), q=12, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 3340 / 3600 (92.8%)
Max absolute difference among violations: 0.56649131
Max relative difference among violations: 1591.89612495
ACTUAL: array([[[ 3.805719e-02,  5.815118e-02,  2.423013e-01, ...,
-2.283947e-02, -2.092983e-02, -1.287425e-02],
[-7.508188e-02, -3.081218e-02,  2.006178e-03, ...,...
DESIRED: array([[[-0.029966, -0.019746, -0.235873, ..., -0.036646,  0.046184,
-0.104542],
[ 0.04406 , -0.025823,  0.027217, ...,  0.146224,  0.161857,...
2025-04-28 07:36:05.257193 test begin: paddle.linalg.svd_lowrank(Tensor([3, 100, 40],"float64"), q=6, )
[accuracy error] paddle.linalg.svd_lowrank(Tensor([3, 100, 40],"float64"), q=6, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1656 / 1800 (92%)
Max absolute difference among violations: 0.51398772
Max relative difference among violations: 323.1567032
ACTUAL: array([[[-0.19278 , -0.130279,  0.138192, -0.062031,  0.084523,
-0.035159],
[-0.068508,  0.104933, -0.022811,  0.016183,  0.0358  ,...
DESIRED: array([[[-0.207153,  0.21621 , -0.001721,  0.033937,  0.008289,
-0.077634],
[-0.023785, -0.170619,  0.130117,  0.031709,  0.025306,...
2025-04-28 07:36:05.482559 test begin: paddle.linalg.svd_lowrank(Tensor([3, 100, 40],"float64"), q=8, )
[accuracy error] paddle.linalg.svd_lowrank(Tensor([3, 100, 40],"float64"), q=8, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2250 / 2400 (93.8%)
Max absolute difference among violations: 0.59057409
Max relative difference among violations: 397135.96136893
ACTUAL: array([[[-0.11528 , -0.156524, -0.043776, ..., -0.009895,  0.048575,
0.013448],
[ 0.055603, -0.183702,  0.068333, ...,  0.105843, -0.01868 ,...
DESIRED: array([[[ 1.256379e-02,  1.513241e-03, -2.001428e-01, ...,
1.218492e-01,  1.107455e-01, -1.269425e-01],
[-1.828500e-01,  9.306802e-02, -6.166778e-02, ...,...
2025-04-28 07:36:05.669251 test begin: paddle.linalg.svd_lowrank(Tensor([3, 17, 4],"float64"), q=2, )
[accuracy error] paddle.linalg.svd_lowrank(Tensor([3, 17, 4],"float64"), q=2, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 57 / 102 (55.9%)
Max absolute difference among violations: 1.0468803
Max relative difference among violations: 18.86132478
ACTUAL: array([[[-3.347469e-01,  8.005002e-03],
[ 2.641673e-01, -6.931760e-02],
[-6.269637e-02, -5.480470e-02],...
DESIRED: array([[[-0.233005,  0.023835],
[ 0.395049,  0.152222],
[-0.14659 , -0.023472],...
2025-04-28 07:36:05.779458 test begin: paddle.linalg.svd_lowrank(Tensor([3, 17, 4],"float64"), q=4, )
[accuracy error] paddle.linalg.svd_lowrank(Tensor([3, 17, 4],"float64"), q=4, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 83 / 204 (40.7%)
Max absolute difference among violations: 1.27463808
Max relative difference among violations: 2.
ACTUAL: array([[[ 4.614467e-01, -1.696986e-01,  1.291978e-02,  2.340759e-01],
[ 1.686860e-01, -1.753070e-01,  1.813803e-01,  2.936051e-01],
[ 8.278511e-02, -1.423441e-01, -1.612108e-01, -1.460747e-01],...
DESIRED: array([[[ 4.614467e-01,  1.696986e-01,  1.291978e-02, -2.340759e-01],
[ 1.686860e-01,  1.753070e-01,  1.813803e-01, -2.936051e-01],
[ 8.278511e-02,  1.423441e-01, -1.612108e-01,  1.460747e-01],...
2025-04-28 07:36:05.885553 test begin: paddle.linalg.svd_lowrank(Tensor([3, 4, 17],"float64"), q=2, )
[accuracy error] paddle.linalg.svd_lowrank(Tensor([3, 4, 17],"float64"), q=2, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 24 / 24 (100%)
Max absolute difference among violations: 1.54250679
Max relative difference among violations: 9.34542739
ACTUAL: array([[[-0.483264, -0.294425],
[-0.335921, -0.750568],
[ 0.501664, -0.565113],...
DESIRED: array([[[ 0.405238, -0.028459],
[ 0.045183,  0.583817],
[-0.40819 , -0.718382],...
2025-04-28 07:36:05.985680 test begin: paddle.linalg.svd_lowrank(Tensor([3, 4, 17],"float64"), q=4, )
[accuracy error] paddle.linalg.svd_lowrank(Tensor([3, 4, 17],"float64"), q=4, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 28 / 48 (58.3%)
Max absolute difference among violations: 1.62005455
Max relative difference among violations: 2.
ACTUAL: array([[[-0.674433, -0.26764 , -0.687885,  0.018001],
[ 0.08025 ,  0.817004, -0.407038, -0.40048 ],
[-0.498762,  0.51051 ,  0.306858,  0.629646],...
DESIRED: array([[[ 0.674433, -0.26764 ,  0.687885, -0.018001],
[-0.08025 ,  0.817004,  0.407038,  0.40048 ],
[ 0.498762,  0.51051 , -0.306858, -0.629646],...
2025-04-28 07:36:06.167306 test begin: paddle.linalg.svd_lowrank(Tensor([3, 40, 100],"float64"), q=12, )
[accuracy error] paddle.linalg.svd_lowrank(Tensor([3, 40, 100],"float64"), q=12, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1376 / 1440 (95.6%)
Max absolute difference among violations: 0.84796046
Max relative difference among violations: 1094.30163797
ACTUAL: array([[[-0.210984, -0.045391,  0.235395, ..., -0.191838, -0.226372,
-0.195161],
[ 0.346131,  0.17917 , -0.039846, ...,  0.044533, -0.204668,...
DESIRED: array([[[ 0.265492, -0.003471, -0.21653 , ...,  0.172759, -0.093336,
0.21512 ],
[-0.335968, -0.193047,  0.001045, ...,  0.035016, -0.187881,...
2025-04-28 07:36:06.403883 test begin: paddle.linalg.svd_lowrank(Tensor([3, 40, 100],"float64"), q=6, )
[accuracy error] paddle.linalg.svd_lowrank(Tensor([3, 40, 100],"float64"), q=6, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 689 / 720 (95.7%)
Max absolute difference among violations: 0.69234478
Max relative difference among violations: 92.57963801
ACTUAL: array([[[-7.158321e-02, -1.472105e-01, -1.009510e-01,  2.244229e-01,
-8.237407e-02,  1.908148e-01],
[-2.751051e-01,  1.232658e-01, -1.336633e-01, -1.528129e-02,...
DESIRED: array([[[-0.159772, -0.190304,  0.134024, -0.187208, -0.259069,
-0.06023 ],
[-0.310509, -0.014806, -0.183005,  0.032175, -0.130893,...
2025-04-28 07:36:06.595303 test begin: paddle.linalg.svd_lowrank(Tensor([3, 40, 100],"float64"), q=8, )
[accuracy error] paddle.linalg.svd_lowrank(Tensor([3, 40, 100],"float64"), q=8, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 903 / 960 (94.1%)
Max absolute difference among violations: 0.71092401
Max relative difference among violations: 53927.49681736
ACTUAL: array([[[ 1.348446e-01,  1.366284e-01,  8.576675e-02, -1.081185e-01,
8.948819e-02, -5.436892e-02,  1.487489e-01, -2.410781e-02],
[ 2.927277e-01,  1.911779e-02, -4.901200e-02,  2.214774e-01,...
DESIRED: array([[[ 1.226572e-01, -9.627061e-02, -5.211591e-02, -9.762511e-02,
1.824428e-01, -1.262213e-01, -1.684470e-01, -4.440662e-03],
[ 3.375902e-01,  3.688202e-02,  4.988005e-03, -2.182807e-02,...
2025-04-28 07:36:06.835660 test begin: paddle.linalg.svd_lowrank(Tensor([4, 17],"float64"), q=2, )
[accuracy error] paddle.linalg.svd_lowrank(Tensor([4, 17],"float64"), q=2, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 8 / 8 (100%)
Max absolute difference among violations: 1.61097524
Max relative difference among violations: 9.49221892
ACTUAL: array([[-0.806769,  0.011853],
[-0.35224 , -0.265521],
[ 0.443678, -0.50099 ],
[ 0.167931,  0.823631]])
DESIRED: array([[ 0.804206,  0.159215],
[ 0.321623,  0.20183 ],
[-0.469531,  0.058994],
[-0.171322,  0.964591]])
2025-04-28 07:36:06.962581 test begin: paddle.linalg.svd_lowrank(Tensor([4, 17],"float64"), q=4, )
[accuracy error] paddle.linalg.svd_lowrank(Tensor([4, 17],"float64"), q=4, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 8 / 16 (50%)
Max absolute difference among violations: 1.69122648
Max relative difference among violations: 2.
ACTUAL: array([[-0.066806, -0.412776,  0.83314 ,  0.361982],
[ 0.74911 , -0.080702,  0.278806, -0.595474],
[ 0.600234, -0.328696, -0.384028,  0.619839],
[ 0.272197,  0.845613,  0.284021,  0.360804]])
DESIRED: array([[-0.066806,  0.412776,  0.83314 , -0.361982],
[ 0.74911 ,  0.080702,  0.278806,  0.595474],
[ 0.600234,  0.328696, -0.384028, -0.619839],
[ 0.272197, -0.845613,  0.284021, -0.360804]])
2025-04-28 07:36:07.143612 test begin: paddle.linalg.svd_lowrank(Tensor([40, 100],"float64"), q=12, )
[accuracy error] paddle.linalg.svd_lowrank(Tensor([40, 100],"float64"), q=12, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 465 / 480 (96.9%)
Max absolute difference among violations: 0.8601979
Max relative difference among violations: 638.89979215
ACTUAL: array([[-6.819460e-02, -1.836163e-01, -7.991854e-02, -1.943675e-01,
2.660873e-01, -1.409153e-01,  3.707034e-02,  2.098037e-02,
6.372253e-02,  6.794030e-02, -8.391703e-02,  3.232452e-01],...
DESIRED: array([[ 8.049447e-02,  5.972057e-02,  1.456645e-01,  2.703554e-02,
2.582441e-01, -3.625769e-02,  4.452906e-02, -1.297367e-01,
3.450114e-02,  1.001772e-03, -3.443533e-01,  1.982597e-01],...
2025-04-28 07:36:07.350044 test begin: paddle.linalg.svd_lowrank(Tensor([40, 100],"float64"), q=6, )
[accuracy error] paddle.linalg.svd_lowrank(Tensor([40, 100],"float64"), q=6, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 233 / 240 (97.1%)
Max absolute difference among violations: 0.75135491
Max relative difference among violations: 170.12424564
ACTUAL: array([[ 1.809503e-01, -2.373712e-01, -8.450408e-02, -4.046296e-02,
9.292239e-02,  2.857535e-01],
[ 3.054991e-01,  2.492069e-01,  9.216087e-02,  1.173762e-01,...
DESIRED: array([[-0.162598, -0.12695 ,  0.177188,  0.119542, -0.038731, -0.051154],
[-0.281818,  0.161813, -0.119697, -0.22753 , -0.223837,  0.081252],
[ 0.035329, -0.045726,  0.034512, -0.318254,  0.021133,  0.104434],...
2025-04-28 07:36:07.564001 test begin: paddle.linalg.svd_lowrank(Tensor([40, 100],"float64"), q=8, )
[accuracy error] paddle.linalg.svd_lowrank(Tensor([40, 100],"float64"), q=8, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 310 / 320 (96.9%)
Max absolute difference among violations: 0.57643896
Max relative difference among violations: 165.16715878
ACTUAL: array([[ 0.282522,  0.12436 ,  0.220446,  0.280446, -0.040143,  0.122999,
0.139759,  0.045044],
[ 0.129667,  0.281664,  0.017047, -0.136243,  0.2379  , -0.132693,...
DESIRED: array([[-8.507609e-02, -2.402845e-01, -7.382422e-02,  1.595031e-01,
2.163889e-01,  2.379271e-01,  1.653012e-01, -8.287447e-02],
[-1.897132e-01, -3.642486e-02, -1.713973e-02,  6.903716e-02,...
2025-04-28 07:36:07.711781 test begin: paddle.linalg.svd_lowrank(Tensor([5, 5],"float64"), None, )
[accuracy error] paddle.linalg.svd_lowrank(Tensor([5, 5],"float64"), None, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 15 / 25 (60%)
Max absolute difference among violations: 1.58237868
Max relative difference among violations: 2.
ACTUAL: array([[ 0.146099,  0.410658,  0.703635,  0.354706,  0.434852],
[-0.156931,  0.81105 , -0.381774,  0.269297, -0.315116],
[-0.576981,  0.010272,  0.562826, -0.214607, -0.551506],...
DESIRED: array([[ 0.146099,  0.410658, -0.703635, -0.354706, -0.434852],
[-0.156931,  0.81105 ,  0.381774, -0.269297,  0.315116],
[-0.576981,  0.010272, -0.562826,  0.214607,  0.551506],...
2025-04-28 10:17:34.825440 test begin: paddle.logit(Tensor([],"float32"), )
[accuracy error] backward  paddle.logit(Tensor([],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
nan location mismatch:
ACTUAL: array(0., dtype=float32)
DESIRED: array(nan, dtype=float32)
2025-04-28 10:17:34.964109 test begin: paddle.logit(x=Tensor([4, 2],"float64"), )
[accuracy error] backward  paddle.logit(x=Tensor([4, 2],"float64"), )
Not equal to tolerance rtol=0.01, atol=0.01
nan location mismatch:
ACTUAL: array([[ 6.70439 ,  0.957735],
[ 0.820053,  0.      ],
[ 1.446783, -1.772912],
[ 0.729978,  0.972663]])
DESIRED: array([[ 6.70439 ,  0.957735],
[ 0.820053,       nan],
[ 1.446783, -1.772912],
[ 0.729978,  0.972663]])
2025-04-28 10:17:35.118809 test begin: paddle.logit(x=Tensor([4, 3, 2, 5],"float64"), )
[accuracy error] backward  paddle.logit(x=Tensor([4, 3, 2, 5],"float64"), )
Not equal to tolerance rtol=0.01, atol=0.01
nan location mismatch:
ACTUAL: array([[[[  0.      ,  -5.945271,  -9.59595 ,  -0.785348,   0.      ],
[  0.      ,   0.      ,   1.433308,   1.556783,   0.      ]],
...
DESIRED: array([[[[       nan,  -5.945271,  -9.59595 ,  -0.785348,        nan],
[       nan,        nan,   1.433308,   1.556783,        nan]],
...
2025-04-28 10:17:35.388081 test begin: paddle.logit(x=Tensor([4, 3, 2],"float64"), )
[accuracy error] backward  paddle.logit(x=Tensor([4, 3, 2],"float64"), )
Not equal to tolerance rtol=0.01, atol=0.01
nan location mismatch:
ACTUAL: array([[[ -2.135871,   1.075585],
[ -0.869578,   0.      ],
[  0.      ,   0.      ]],...
DESIRED: array([[[ -2.135871,   1.075585],
[ -0.869578,        nan],
[       nan,        nan]],...
2025-04-28 10:17:35.524412 test begin: paddle.logit(x=Tensor([4],"float32"), )
[accuracy error] backward  paddle.logit(x=Tensor([4],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
nan location mismatch:
ACTUAL: array([-1.241574,  0.366135, -1.379244,  0.      ], dtype=float32)
DESIRED: array([-1.241574,  0.366135, -1.379244,       nan], dtype=float32)
2025-04-28 10:17:35.650774 test begin: paddle.logit(x=Tensor([4],"float64"), )
[accuracy error] backward  paddle.logit(x=Tensor([4],"float64"), )
Not equal to tolerance rtol=0.01, atol=0.01
nan location mismatch:
ACTUAL: array([51.459876,  0.      ,  0.      , -2.80865 ])
DESIRED: array([51.459876,       nan,       nan, -2.80865 ])
2025-04-28 10:19:27.918751 test begin: paddle.maximum(Tensor([1, 1, 2],"float32"), Tensor([272118, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([1, 1, 2],"float32"), Tensor([272118, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 544236 (0.000184%)
Max absolute difference among violations: 0.0158963
Max relative difference among violations: 1.
ACTUAL: array([[-0.390763, -0.254332],
[ 0.      , -0.257147],
[ 0.      ,  0.368936],...
DESIRED: array([[-0.390763, -0.254332],
[ 0.      , -0.257147],
[ 0.      ,  0.368936],...
2025-04-28 10:19:41.895476 test begin: paddle.maximum(Tensor([1, 1, 2],"float32"), Tensor([369303, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([1, 1, 2],"float32"), Tensor([369303, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 738606 (0.000135%)
Max absolute difference among violations: 0.05055449
Max relative difference among violations: 1.
ACTUAL: array([[ 0.398681,  0.      ],
[ 0.15825 ,  0.      ],
[ 0.1315  ,  0.      ],...
DESIRED: array([[ 0.398681,  0.      ],
[ 0.15825 ,  0.      ],
[ 0.1315  ,  0.      ],...
2025-04-28 10:20:28.447462 test begin: paddle.maximum(Tensor([1, 113, 1, 2],"float32"), Tensor([1, 1, 56784, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([1, 113, 1, 2],"float32"), Tensor([1, 1, 56784, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 113568 (0.000881%)
Max absolute difference among violations: 0.03888571
Max relative difference among violations: 0.0247292
ACTUAL: array([[[[-0.766329,  0.088297],
[ 1.767774,  2.361958],
[ 2.671793, -1.519509],...
DESIRED: array([[[[-0.766329,  0.088297],
[ 1.767774,  2.361958],
[ 2.671792, -1.519508],...
2025-04-28 10:20:29.600293 test begin: paddle.maximum(Tensor([1, 116, 1, 2],"float32"), Tensor([1, 1, 40656, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([1, 116, 1, 2],"float32"), Tensor([1, 1, 40656, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 81312 (0.00123%)
Max absolute difference among violations: 0.19727707
Max relative difference among violations: 0.0865771
ACTUAL: array([[[[ 0.454112, -3.618928],
[-0.326084,  2.624962],
[ 0.091807, -0.587899],...
DESIRED: array([[[[ 0.454112, -3.618927],
[-0.326084,  2.624961],
[ 0.091807, -0.587899],...
2025-04-28 10:20:30.503600 test begin: paddle.maximum(Tensor([1, 117, 1, 2],"float32"), Tensor([1, 1, 30324, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([1, 117, 1, 2],"float32"), Tensor([1, 1, 30324, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 60648 (0.00165%)
Max absolute difference among violations: 0.05344462
Max relative difference among violations: 0.02636942
ACTUAL: array([[[[-1.891582, -3.095902],
[-0.221535, -0.976024],
[-0.508642,  2.845995],...
DESIRED: array([[[[-1.891582, -3.095902],
[-0.221535, -0.976024],
[-0.508642,  2.845995],...
2025-04-28 10:20:59.278129 test begin: paddle.maximum(Tensor([1, 15, 1, 2],"float32"), Tensor([1, 1, 75600, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([1, 15, 1, 2],"float32"), Tensor([1, 1, 75600, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 151200 (0.000661%)
Max absolute difference among violations: 0.0700809
Max relative difference among violations: 0.57548547
ACTUAL: array([[[[-0.075834,  1.852566],
[-0.757951,  0.39587 ],
[-0.15253 ,  0.010325],...
DESIRED: array([[[[-0.075834,  1.852566],
[-0.757951,  0.39587 ],
[-0.15253 ,  0.010325],...
2025-04-28 10:20:59.527470 test begin: paddle.maximum(Tensor([1, 150, 1, 2],"float32"), Tensor([1, 1, 21504, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([1, 150, 1, 2],"float32"), Tensor([1, 1, 21504, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 300 (0.333%)
Max absolute difference among violations: 0.20404434
Max relative difference among violations: 0.05819076
ACTUAL: array([[[[-2.807676e+01, -6.728290e+00]],
[[-7.284770e+01,  2.039017e+00]],...
DESIRED: array([[[[-2.807662e+01, -6.728146e+00]],
[[-7.284783e+01,  2.039009e+00]],...
2025-04-28 10:21:00.135728 test begin: paddle.maximum(Tensor([1, 150, 1, 2],"float32"), Tensor([1, 1, 27216, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([1, 150, 1, 2],"float32"), Tensor([1, 1, 27216, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 54432 (0.00184%)
Max absolute difference among violations: 0.14369965
Max relative difference among violations: 0.06949148
ACTUAL: array([[[[ 1.736994, -0.153459],
[-7.607468,  1.363457],
[-4.370901, -4.34672 ],...
DESIRED: array([[[[ 1.736994, -0.153459],
[-7.607469,  1.363457],
[-4.370901, -4.34672 ],...
2025-04-28 10:21:02.981871 test begin: paddle.maximum(Tensor([1, 16, 1, 2],"float32"), Tensor([1, 1, 52500, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([1, 16, 1, 2],"float32"), Tensor([1, 1, 52500, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 105000 (0.000952%)
Max absolute difference among violations: 0.10478494
Max relative difference among violations: 1.
ACTUAL: array([[[[-0.262858, -0.292827],
[ 0.559149,  0.517993],
[ 0.3166  ,  0.      ],...
DESIRED: array([[[[-0.262858, -0.292827],
[ 0.559149,  0.517993],
[ 0.3166  ,  0.      ],...
2025-04-28 10:21:08.351851 test begin: paddle.maximum(Tensor([1, 17, 1, 2],"float32"), Tensor([1, 1, 44436, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([1, 17, 1, 2],"float32"), Tensor([1, 1, 44436, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 34 (2.94%)
Max absolute difference among violations: 0.22637355
Max relative difference among violations: 0.16600825
ACTUAL: array([[[[-10.637179, -37.905518]],
[[ -4.453309,  48.77819 ]],...
DESIRED: array([[[[-10.637192, -37.905502]],
[[ -4.453312,  48.77822 ]],...
2025-04-28 10:21:08.631210 test begin: paddle.maximum(Tensor([1, 17, 1, 2],"float32"), Tensor([1, 1, 48384, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([1, 17, 1, 2],"float32"), Tensor([1, 1, 48384, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 96768 (0.00103%)
Max absolute difference among violations: 0.03172262
Max relative difference among violations: 0.1601213
ACTUAL: array([[[[-0.542525,  0.995085],
[ 0.109066,  0.519151],
[ 0.429949,  1.163396],...
DESIRED: array([[[[-0.542525,  0.995085],
[ 0.109066,  0.519151],
[ 0.429949,  1.163396],...
2025-04-28 10:21:12.290924 test begin: paddle.maximum(Tensor([1, 18, 1, 2],"float32"), Tensor([1, 1, 48384, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([1, 18, 1, 2],"float32"), Tensor([1, 1, 48384, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 96768 (0.00103%)
Max absolute difference among violations: 0.04376233
Max relative difference among violations: 0.05456878
ACTUAL: array([[[[-0.279196, -0.613523],
[ 0.826969,  1.586545],
[-1.550281, -0.168237],...
DESIRED: array([[[[-0.279196, -0.613523],
[ 0.82697 ,  1.586545],
[-1.550281, -0.168237],...
2025-04-28 10:21:29.961654 test begin: paddle.maximum(Tensor([1, 21, 1, 2],"float32"), Tensor([1, 1, 61236, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([1, 21, 1, 2],"float32"), Tensor([1, 1, 61236, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 42 (2.38%)
Max absolute difference among violations: 0.18458796
Max relative difference among violations: 0.04502894
ACTUAL: array([[[[-72.73611 , -74.72199 ]],
[[-74.11954 ,  71.27296 ]],...
DESIRED: array([[[[-72.73573 , -74.721565]],
[[-74.119644,  71.2729  ]],...
2025-04-28 10:21:33.939945 test begin: paddle.maximum(Tensor([1, 215, 1, 2],"float32"), Tensor([1, 1, 33600, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([1, 215, 1, 2],"float32"), Tensor([1, 1, 33600, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 430 (0.233%)
Max absolute difference among violations: 0.17275524
Max relative difference among violations: 0.0162359
ACTUAL: array([[[[-1.109570e+01, -6.293017e+00]],
[[-3.052134e+01,  3.659229e+01]],...
DESIRED: array([[[[-1.109567e+01, -6.293032e+00]],
[[-3.052131e+01,  3.659253e+01]],...
2025-04-28 10:21:41.555946 test begin: paddle.maximum(Tensor([1, 22, 1, 2],"float32"), Tensor([1, 1, 65856, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([1, 22, 1, 2],"float32"), Tensor([1, 1, 65856, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 131712 (0.000759%)
Max absolute difference among violations: 0.14466965
Max relative difference among violations: 0.11364659
ACTUAL: array([[[[-0.87033 , -0.122414],
[-1.07882 , -1.305988],
[ 0.358752,  0.487206],...
DESIRED: array([[[[-0.87033 , -0.122414],
[-1.07882 , -1.305988],
[ 0.358752,  0.487206],...
2025-04-28 10:21:43.684292 test begin: paddle.maximum(Tensor([1, 227, 1, 2],"float32"), Tensor([1, 1, 52500, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([1, 227, 1, 2],"float32"), Tensor([1, 1, 52500, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 105000 (0.000952%)
Max absolute difference among violations: 0.2262888
Max relative difference among violations: 0.05803106
ACTUAL: array([[[[ 0.854459, -1.044377],
[ 0.006203, -0.652401],
[ 4.794348,  0.      ],...
DESIRED: array([[[[ 0.854459, -1.044377],
[ 0.006203, -0.6524  ],
[ 4.794348,  0.      ],...
2025-04-28 10:21:48.576788 test begin: paddle.maximum(Tensor([1, 24, 1, 2],"float32"), Tensor([1, 1, 33600, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([1, 24, 1, 2],"float32"), Tensor([1, 1, 33600, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 48 (2.08%)
Max absolute difference among violations: 0.22096062
Max relative difference among violations: 0.01214788
ACTUAL: array([[[[-39.80026 ,  29.858377]],
[[-24.000397,  10.090701]],...
DESIRED: array([[[[-39.80021 ,  29.858402]],
[[-24.000217,  10.090689]],...
2025-04-28 10:21:54.266430 test begin: paddle.maximum(Tensor([1, 25, 1, 2],"float32"), Tensor([1, 1, 40656, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([1, 25, 1, 2],"float32"), Tensor([1, 1, 40656, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 50 (2%)
Max absolute difference among violations: 0.24062824
Max relative difference among violations: 0.02119242
ACTUAL: array([[[[ -60.359955,    5.484029]],
[[   5.923226,   13.430752]],...
DESIRED: array([[[[ -60.35999 ,    5.484026]],
[[   5.923236,   13.430756]],...
2025-04-28 10:21:59.018851 test begin: paddle.maximum(Tensor([1, 26, 1, 2],"float32"), Tensor([1, 1, 27216, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([1, 26, 1, 2],"float32"), Tensor([1, 1, 27216, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 52 (1.92%)
Max absolute difference among violations: 0.10805035
Max relative difference among violations: 0.01384668
ACTUAL: array([[[[ 16.377384,  -3.820771]],
[[ -8.643725,  32.447487]],...
DESIRED: array([[[[ 16.377378,  -3.820775]],
[[ -8.643684,  32.447353]],...
2025-04-28 10:22:06.925830 test begin: paddle.maximum(Tensor([1, 29, 1, 2],"float32"), Tensor([1, 1, 37044, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([1, 29, 1, 2],"float32"), Tensor([1, 1, 37044, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 58 (1.72%)
Max absolute difference among violations: 0.08718157
Max relative difference among violations: 0.02052423
ACTUAL: array([[[[ 18.046423,  -0.116138]],
[[-47.285213, -19.745754]],...
DESIRED: array([[[[ 18.046295,  -0.116141]],
[[-47.285313, -19.745724]],...
2025-04-28 10:22:07.506890 test begin: paddle.maximum(Tensor([1, 29, 1, 2],"float32"), Tensor([1, 1, 48384, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([1, 29, 1, 2],"float32"), Tensor([1, 1, 48384, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 96768 (0.00103%)
Max absolute difference among violations: 0.22908163
Max relative difference among violations: 0.07417369
ACTUAL: array([[[[ 0.450324, -0.84825 ],
[ 0.      ,  0.087006],
[-0.554073,  0.067392],...
DESIRED: array([[[[ 0.450324, -0.84825 ],
[ 0.      ,  0.087006],
[-0.554073,  0.067392],...
2025-04-28 10:22:07.793760 test begin: paddle.maximum(Tensor([1, 29, 1, 2],"float32"), Tensor([1, 1, 52500, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([1, 29, 1, 2],"float32"), Tensor([1, 1, 52500, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 105000 (0.000952%)
Max absolute difference among violations: 0.19178319
Max relative difference among violations: 0.10710647
ACTUAL: array([[[[-0.01693 , -3.739648],
[-3.972225, -0.067841],
[-1.405734,  2.147684],...
DESIRED: array([[[[-0.01693 , -3.739647],
[-3.972225, -0.067841],
[-1.405734,  2.147684],...
2025-04-28 10:22:09.377004 test begin: paddle.maximum(Tensor([1, 29, 1, 2],"float32"), Tensor([1, 1, 70644, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([1, 29, 1, 2],"float32"), Tensor([1, 1, 70644, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 58 (1.72%)
Max absolute difference among violations: 0.18077946
Max relative difference among violations: 0.01735104
ACTUAL: array([[[[-139.96205 ,   -6.233041]],
[[ -18.000647, -110.02644 ]],...
DESIRED: array([[[[-139.96175 ,   -6.233013]],
[[ -18.00074 , -110.026886]],...
2025-04-28 10:22:10.253738 test begin: paddle.maximum(Tensor([1, 296, 1, 2],"float32"), Tensor([1, 1, 24276, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([1, 296, 1, 2],"float32"), Tensor([1, 1, 24276, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 592 (0.169%)
Max absolute difference among violations: 0.1854496
Max relative difference among violations: 0.01308671
ACTUAL: array([[[[ 7.063781e+00,  1.947007e+00]],
[[ 5.064719e+00, -6.849010e+00]],...
DESIRED: array([[[[ 7.063801e+00,  1.947007e+00]],
[[ 5.064754e+00, -6.849019e+00]],...
2025-04-28 10:22:15.323168 test begin: paddle.maximum(Tensor([1, 30, 1, 2],"float32"), Tensor([1, 1, 44436, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([1, 30, 1, 2],"float32"), Tensor([1, 1, 44436, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 88872 (0.00113%)
Max absolute difference among violations: 0.20604229
Max relative difference among violations: 0.11155894
ACTUAL: array([[[[-0.363041,  1.185695],
[ 0.9418  , -0.537176],
[-1.155174, -0.264714],...
DESIRED: array([[[[-0.363041,  1.185695],
[ 0.9418  , -0.537176],
[-1.155174, -0.264714],...
2025-04-28 10:22:20.296598 test begin: paddle.maximum(Tensor([1, 31, 1, 2],"float32"), Tensor([1, 1, 24276, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([1, 31, 1, 2],"float32"), Tensor([1, 1, 24276, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 48552 (0.00206%)
Max absolute difference among violations: 0.22944073
Max relative difference among violations: 9.956776
ACTUAL: array([[[[ 1.639316,  1.001835],
[ 0.27547 , -0.063752],
[-0.25066 ,  0.393686],...
DESIRED: array([[[[ 1.639315,  1.001835],
[ 0.27547 , -0.063752],
[-0.25066 ,  0.393686],...
2025-04-28 10:22:36.063657 test begin: paddle.maximum(Tensor([1, 35, 1, 2],"float32"), Tensor([1, 1, 27216, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([1, 35, 1, 2],"float32"), Tensor([1, 1, 27216, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 54432 (0.00184%)
Max absolute difference among violations: 0.1912788
Max relative difference among violations: 5.127902
ACTUAL: array([[[[-0.765701, -0.596544],
[-0.840938, -0.490002],
[-3.590912,  0.526528],...
DESIRED: array([[[[-0.765701, -0.596544],
[-0.840938, -0.490001],
[-3.590913,  0.526528],...
2025-04-28 10:22:43.391939 test begin: paddle.maximum(Tensor([1, 37, 1, 2],"float32"), Tensor([1, 1, 56784, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([1, 37, 1, 2],"float32"), Tensor([1, 1, 56784, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 113568 (0.000881%)
Max absolute difference among violations: 0.01251488
Max relative difference among violations: 1.
ACTUAL: array([[[[ 2.352221, -0.442142],
[-0.906758, -1.554726],
[-0.812804,  2.876819],...
DESIRED: array([[[[ 2.352221, -0.442142],
[-0.906758, -1.554726],
[-0.812804,  2.876819],...
2025-04-28 10:22:44.392264 test begin: paddle.maximum(Tensor([1, 37, 1, 2],"float32"), Tensor([1, 1, 70644, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([1, 37, 1, 2],"float32"), Tensor([1, 1, 70644, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 141288 (0.000708%)
Max absolute difference among violations: 0.13913053
Max relative difference among violations: 0.15327796
ACTUAL: array([[[[ 4.032964,  0.940066],
[-0.669684, -1.184724],
[ 0.16248 ,  1.968894],...
DESIRED: array([[[[ 4.032965,  0.940066],
[-0.669684, -1.184724],
[ 0.16248 ,  1.968894],...
2025-04-28 10:23:11.308462 test begin: paddle.maximum(Tensor([1, 44, 1, 2],"float32"), Tensor([1, 1, 40656, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([1, 44, 1, 2],"float32"), Tensor([1, 1, 40656, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 81312 (0.00123%)
Max absolute difference among violations: 0.13800168
Max relative difference among violations: 0.09384931
ACTUAL: array([[[[ 3.415115, -2.160985],
[-0.495597,  0.674819],
[ 0.456644, -0.698804],...
DESIRED: array([[[[ 3.415115, -2.160986],
[-0.495597,  0.674819],
[ 0.456644, -0.698804],...
2025-04-28 10:23:11.694278 test begin: paddle.maximum(Tensor([1, 44, 1, 2],"float32"), Tensor([1, 1, 44436, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([1, 44, 1, 2],"float32"), Tensor([1, 1, 44436, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 88872 (0.00113%)
Max absolute difference among violations: 0.09070945
Max relative difference among violations: 1.3666179
ACTUAL: array([[[[-0.787271, -0.258542],
[ 0.61357 , -0.042607],
[ 1.196069, -2.203732],...
DESIRED: array([[[[-0.787271, -0.258542],
[ 0.61357 , -0.042607],
[ 1.196069, -2.203732],...
2025-04-28 10:23:12.571421 test begin: paddle.maximum(Tensor([1, 44, 1, 2],"float32"), Tensor([1, 1, 52500, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([1, 44, 1, 2],"float32"), Tensor([1, 1, 52500, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 105000 (0.000952%)
Max absolute difference among violations: 0.01676869
Max relative difference among violations: 0.04444502
ACTUAL: array([[[[ 0.194694,  3.378042],
[-0.179542,  0.013341],
[-1.264682,  0.64429 ],...
DESIRED: array([[[[ 0.194694,  3.378042],
[-0.179542,  0.013342],
[-1.264682,  0.64429 ],...
2025-04-28 10:23:19.219092 test begin: paddle.maximum(Tensor([1, 46, 1, 2],"float32"), Tensor([1, 1, 48384, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([1, 46, 1, 2],"float32"), Tensor([1, 1, 48384, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 96768 (0.00103%)
Max absolute difference among violations: 0.22142583
Max relative difference among violations: 0.43027803
ACTUAL: array([[[[-0.595445,  0.233006],
[-0.688159,  1.705847],
[ 0.058395,  1.545713],...
DESIRED: array([[[[-0.595445,  0.233006],
[-0.688159,  1.705847],
[ 0.058395,  1.545713],...
2025-04-28 10:23:29.800803 test begin: paddle.maximum(Tensor([1, 49, 1, 2],"float32"), Tensor([1, 1, 65856, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([1, 49, 1, 2],"float32"), Tensor([1, 1, 65856, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 98 (1.02%)
Max absolute difference among violations: 0.15532684
Max relative difference among violations: 0.01622211
ACTUAL: array([[[[  -4.739477,   18.54526 ]],
[[ -72.05424 ,   22.192936]],...
DESIRED: array([[[[  -4.739197,   18.545216]],
[[ -72.05371 ,   22.192766]],...
2025-04-28 10:23:37.523705 test begin: paddle.maximum(Tensor([1, 51, 1, 2],"float32"), Tensor([1, 1, 75600, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([1, 51, 1, 2],"float32"), Tensor([1, 1, 75600, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 151200 (0.000661%)
Max absolute difference among violations: 0.07512581
Max relative difference among violations: 0.04705529
ACTUAL: array([[[[ 4.077867,  0.102478],
[-1.860965, -0.352358],
[-0.737626, -0.027581],...
DESIRED: array([[[[ 4.077867,  0.102478],
[-1.860965, -0.352358],
[-0.737626, -0.027581],...
2025-04-28 10:23:39.775515 test begin: paddle.maximum(Tensor([1, 52, 1, 2],"float32"), Tensor([1, 1, 48384, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([1, 52, 1, 2],"float32"), Tensor([1, 1, 48384, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 96768 (0.00103%)
Max absolute difference among violations: 0.15317583
Max relative difference among violations: 0.28667554
ACTUAL: array([[[[-2.144874e-01, -7.454395e-01],
[-9.720623e-02, -9.910040e-01],
[-1.303799e+00,  1.326807e-03],...
DESIRED: array([[[[-2.144876e-01, -7.454395e-01],
[-9.720623e-02, -9.910039e-01],
[-1.303799e+00,  1.326799e-03],...
2025-04-28 10:23:40.788301 test begin: paddle.maximum(Tensor([1, 52, 1, 2],"float32"), Tensor([1, 1, 65856, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([1, 52, 1, 2],"float32"), Tensor([1, 1, 65856, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 131712 (0.000759%)
Max absolute difference among violations: 0.10977627
Max relative difference among violations: 0.32307696
ACTUAL: array([[[[-0.075004,  2.06788 ],
[ 0.782247, -2.908624],
[ 0.624657, -1.196877],...
DESIRED: array([[[[-0.075003,  2.06788 ],
[ 0.782247, -2.908624],
[ 0.624657, -1.196878],...
2025-04-28 10:23:47.765783 test begin: paddle.maximum(Tensor([1, 55, 1, 2],"float32"), Tensor([1, 1, 44436, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([1, 55, 1, 2],"float32"), Tensor([1, 1, 44436, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 88872 (0.00113%)
Max absolute difference among violations: 0.24165332
Max relative difference among violations: 0.24184741
ACTUAL: array([[[[-1.333575,  0.306668],
[-0.190415, -0.355908],
[-0.553353,  1.801785],...
DESIRED: array([[[[-1.333575,  0.306668],
[-0.190415, -0.355908],
[-0.553353,  1.801785],...
2025-04-28 10:23:49.936494 test begin: paddle.maximum(Tensor([1, 56, 1, 2],"float32"), Tensor([1, 1, 24276, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([1, 56, 1, 2],"float32"), Tensor([1, 1, 24276, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 112 (0.893%)
Max absolute difference among violations: 0.08876324
Max relative difference among violations: 0.0127278
ACTUAL: array([[[[ 34.90945 , -11.402018]],
[[-23.880447,  -9.918987]],...
DESIRED: array([[[[ 34.90947 , -11.402019]],
[[-23.88047 ,  -9.919   ]],...
2025-04-28 10:23:55.941841 test begin: paddle.maximum(Tensor([1, 57, 1, 2],"float32"), Tensor([1, 1, 40656, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([1, 57, 1, 2],"float32"), Tensor([1, 1, 40656, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 114 (0.877%)
Max absolute difference among violations: 0.14852333
Max relative difference among violations: 0.0374881
ACTUAL: array([[[[ -21.056213,  -16.864622]],
[[  11.85602 ,   11.339752]],...
DESIRED: array([[[[ -21.056265,  -16.864622]],
[[  11.856013,   11.339785]],...
2025-04-28 10:24:00.359842 test begin: paddle.maximum(Tensor([1, 59, 1, 2],"float32"), Tensor([1, 1, 27216, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([1, 59, 1, 2],"float32"), Tensor([1, 1, 27216, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 118 (0.847%)
Max absolute difference among violations: 0.15054703
Max relative difference among violations: 0.01916346
ACTUAL: array([[[[ 2.363768e+00, -3.528103e+01]],
[[ 3.354475e+01, -1.057899e+01]],...
DESIRED: array([[[[ 2.363794e+00, -3.528093e+01]],
[[ 3.354485e+01, -1.057897e+01]],...
2025-04-28 10:24:12.819850 test begin: paddle.maximum(Tensor([1, 62, 1, 2],"float32"), Tensor([1, 1, 75600, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([1, 62, 1, 2],"float32"), Tensor([1, 1, 75600, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 151200 (0.000661%)
Max absolute difference among violations: 0.13027716
Max relative difference among violations: 0.05037637
ACTUAL: array([[[[-3.293401, -0.935591],
[-0.05027 , -2.587731],
[ 0.240411, -1.071208],...
DESIRED: array([[[[-3.293401, -0.935591],
[-0.05027 , -2.587731],
[ 0.240411, -1.071208],...
2025-04-28 10:24:25.926261 test begin: paddle.maximum(Tensor([1, 67, 1, 2],"float32"), Tensor([1, 1, 75600, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([1, 67, 1, 2],"float32"), Tensor([1, 1, 75600, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2 / 151200 (0.00132%)
Max absolute difference among violations: 0.07309234
Max relative difference among violations: 0.05540366
ACTUAL: array([[[[ 2.472389,  3.29016 ],
[ 2.522894, -1.21723 ],
[-0.732195, -3.202446],...
DESIRED: array([[[[ 2.472389,  3.29016 ],
[ 2.522894, -1.21723 ],
[-0.732195, -3.202445],...
2025-04-28 10:24:26.910622 test begin: paddle.maximum(Tensor([1, 68, 1, 2],"float32"), Tensor([1, 1, 37044, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([1, 68, 1, 2],"float32"), Tensor([1, 1, 37044, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 74088 (0.00135%)
Max absolute difference among violations: 0.16583216
Max relative difference among violations: 0.14184284
ACTUAL: array([[[[-0.560642,  1.095422],
[ 0.223057, -0.317167],
[-0.271232,  0.42753 ],...
DESIRED: array([[[[-0.560642,  1.095422],
[ 0.223057, -0.317168],
[-0.271232,  0.42753 ],...
2025-04-28 10:24:37.383636 test begin: paddle.maximum(Tensor([1, 72, 1, 2],"float32"), Tensor([1, 1, 48384, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([1, 72, 1, 2],"float32"), Tensor([1, 1, 48384, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 96768 (0.00103%)
Max absolute difference among violations: 0.13696878
Max relative difference among violations: 0.5889013
ACTUAL: array([[[[ 0.223838,  1.645306],
[-1.078937,  0.680584],
[-2.610106,  1.330408],...
DESIRED: array([[[[ 0.223838,  1.645306],
[-1.078937,  0.680584],
[-2.610106,  1.330408],...
2025-04-28 10:24:42.800818 test begin: paddle.maximum(Tensor([1, 73, 1, 2],"float32"), Tensor([1, 1, 75600, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([1, 73, 1, 2],"float32"), Tensor([1, 1, 75600, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 151200 (0.000661%)
Max absolute difference among violations: 0.09589559
Max relative difference among violations: 0.10139202
ACTUAL: array([[[[ 0.086711, -6.06678 ],
[-0.919871, -1.049507],
[ 0.97051 , -1.458475],...
DESIRED: array([[[[ 0.086712, -6.06678 ],
[-0.919871, -1.049507],
[ 0.97051 , -1.458475],...
2025-04-28 10:24:45.699335 test begin: paddle.maximum(Tensor([1, 76, 1, 2],"float32"), Tensor([1, 1, 44436, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([1, 76, 1, 2],"float32"), Tensor([1, 1, 44436, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 88872 (0.00113%)
Max absolute difference among violations: 0.18109536
Max relative difference among violations: 0.23292175
ACTUAL: array([[[[ 1.221918, -1.171743],
[ 3.274465, -0.322708],
[ 0.581824,  2.858965],...
DESIRED: array([[[[ 1.221919, -1.171742],
[ 3.274465, -0.322708],
[ 0.581825,  2.858965],...
2025-04-28 10:24:48.600224 test begin: paddle.maximum(Tensor([1, 77, 1, 2],"float32"), Tensor([1, 1, 65856, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([1, 77, 1, 2],"float32"), Tensor([1, 1, 65856, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 154 (0.649%)
Max absolute difference among violations: 0.15690899
Max relative difference among violations: 0.03093976
ACTUAL: array([[[[-4.812527e+01, -5.819049e+01]],
[[-4.914527e+00,  9.922935e+01]],...
DESIRED: array([[[[-4.812555e+01, -5.819030e+01]],
[[-5.071436e+00,  9.922971e+01]],...
2025-04-28 10:24:57.062909 test begin: paddle.maximum(Tensor([1, 80, 1, 2],"float32"), Tensor([1, 1, 48384, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([1, 80, 1, 2],"float32"), Tensor([1, 1, 48384, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2 / 160 (1.25%)
Max absolute difference among violations: 0.17165661
Max relative difference among violations: 0.01923597
ACTUAL: array([[[[-103.8642  ,   -1.43827 ]],
[[  60.875557,  -12.506854]],...
DESIRED: array([[[[-103.86388 ,   -1.438217]],
[[  60.875534,  -12.506821]],...
2025-04-28 10:24:57.741723 test begin: paddle.maximum(Tensor([1, 80, 1, 2],"float32"), Tensor([1, 1, 56784, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([1, 80, 1, 2],"float32"), Tensor([1, 1, 56784, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 160 (0.625%)
Max absolute difference among violations: 0.17459774
Max relative difference among violations: 0.01974118
ACTUAL: array([[[[ -33.256603,  -15.560411]],
[[ -25.066238,   10.528696]],...
DESIRED: array([[[[ -33.25682 ,  -15.560501]],
[[ -25.066198,   10.528541]],...
2025-04-28 10:24:59.675235 test begin: paddle.maximum(Tensor([1, 81, 1, 2],"float32"), Tensor([1, 1, 48384, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([1, 81, 1, 2],"float32"), Tensor([1, 1, 48384, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 96768 (0.00103%)
Max absolute difference among violations: 0.13323176
Max relative difference among violations: 0.1637952
ACTUAL: array([[[[-2.636009,  4.043803],
[ 1.384139,  1.350868],
[-5.109567,  4.264837],...
DESIRED: array([[[[-2.636009,  4.043802],
[ 1.384139,  1.350868],
[-5.109567,  4.264837],...
2025-04-28 10:25:00.398815 test begin: paddle.maximum(Tensor([1, 83, 1, 2],"float32"), Tensor([1, 1, 52500, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([1, 83, 1, 2],"float32"), Tensor([1, 1, 52500, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 166 (0.602%)
Max absolute difference among violations: 0.20720458
Max relative difference among violations: 0.05440337
ACTUAL: array([[[[ -11.313012,  -13.696949]],
[[ -35.005844,  -19.774532]],...
DESIRED: array([[[[ -11.312954,  -13.696949]],
[[ -35.005836,  -19.774662]],...
2025-04-28 10:25:01.261296 test begin: paddle.maximum(Tensor([1, 83, 1, 2],"float32"), Tensor([1, 1, 65856, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([1, 83, 1, 2],"float32"), Tensor([1, 1, 65856, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 131712 (0.000759%)
Max absolute difference among violations: 0.14403985
Max relative difference among violations: 2.0914757
ACTUAL: array([[[[-1.482533,  0.04628 ],
[-0.885429,  0.804709],
[-0.759365,  2.231363],...
DESIRED: array([[[[-1.482533,  0.04628 ],
[-0.885429,  0.804709],
[-0.759365,  2.231363],...
2025-04-28 10:25:04.769254 test begin: paddle.maximum(Tensor([1, 86, 1, 2],"float32"), Tensor([1, 1, 33600, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([1, 86, 1, 2],"float32"), Tensor([1, 1, 33600, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 67200 (0.00149%)
Max absolute difference among violations: 0.2466771
Max relative difference among violations: 0.60726845
ACTUAL: array([[[[ 0.559768, -2.086231],
[-0.020884, -0.95321 ],
[ 0.828534, -3.589957],...
DESIRED: array([[[[ 0.559768, -2.086231],
[-0.020884, -0.95321 ],
[ 0.828534, -3.589956],...
2025-04-28 10:25:16.258813 test begin: paddle.maximum(Tensor([1, 93, 1, 2],"float32"), Tensor([1, 1, 70644, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([1, 93, 1, 2],"float32"), Tensor([1, 1, 70644, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 141288 (0.000708%)
Max absolute difference among violations: 0.1398921
Max relative difference among violations: 0.05264745
ACTUAL: array([[[[ 0.291297,  2.053088],
[-0.504219, -2.64244 ],
[ 0.70909 , -1.005911],...
DESIRED: array([[[[ 0.291297,  2.053088],
[-0.504219, -2.64244 ],
[ 0.70909 , -1.005911],...
2025-04-28 10:25:35.008446 test begin: paddle.maximum(Tensor([10, 1, 2],"float32"), Tensor([242991, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([10, 1, 2],"float32"), Tensor([242991, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 485982 (0.000206%)
Max absolute difference among violations: 0.02129539
Max relative difference among violations: 1.
ACTUAL: array([[ 0.408628,  0.868239],
[ 0.353722,  0.22065 ],
[-0.602614,  0.86071 ],...
DESIRED: array([[ 0.408628,  0.868239],
[ 0.353722,  0.22065 ],
[-0.602614,  0.86071 ],...
2025-04-28 10:25:36.916626 test begin: paddle.maximum(Tensor([10, 1, 2],"float32"), Tensor([253728, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([10, 1, 2],"float32"), Tensor([253728, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 507456 (0.000197%)
Max absolute difference among violations: 0.18582514
Max relative difference among violations: 0.63105303
ACTUAL: array([[ 0.029752,  0.727539],
[ 0.395448,  0.226587],
[ 0.413193, -0.7666  ],...
DESIRED: array([[ 0.029752,  0.727539],
[ 0.395448,  0.226587],
[ 0.413193, -0.7666  ],...
2025-04-28 10:25:42.950943 test begin: paddle.maximum(Tensor([10, 1, 2],"float32"), Tensor([285444, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([10, 1, 2],"float32"), Tensor([285444, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 570888 (0.000175%)
Max absolute difference among violations: 0.11029923
Max relative difference among violations: 0.06621064
ACTUAL: array([[ 0.      ,  0.445139],
[ 0.093718, -0.708434],
[ 0.799847, -0.106711],...
DESIRED: array([[ 0.      ,  0.445139],
[ 0.093718, -0.708434],
[ 0.799847, -0.106711],...
2025-04-28 10:25:44.083429 test begin: paddle.maximum(Tensor([10, 1, 2],"float32"), Tensor([291555, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([10, 1, 2],"float32"), Tensor([291555, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 583110 (0.000171%)
Max absolute difference among violations: 0.1646966
Max relative difference among violations: 0.41986614
ACTUAL: array([[ 0.461626, -0.405863],
[ 0.24506 , -0.790024],
[ 0.306813, -0.382319],...
DESIRED: array([[ 0.461626, -0.405863],
[ 0.24506 , -0.790024],
[ 0.306813, -0.382319],...
2025-04-28 10:25:46.343235 test begin: paddle.maximum(Tensor([10, 1, 2],"float32"), Tensor([300762, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([10, 1, 2],"float32"), Tensor([300762, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 601524 (0.000166%)
Max absolute difference among violations: 0.2219101
Max relative difference among violations: 1.8398563
ACTUAL: array([[ 0.486335,  0.399667],
[-0.755209,  0.009772],
[-1.904943,  0.125319],...
DESIRED: array([[ 0.486335,  0.399667],
[-0.755209,  0.009772],
[-1.904942,  0.125319],...
2025-04-28 10:25:52.333275 test begin: paddle.maximum(Tensor([10, 1, 2],"float32"), Tensor([320739, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([10, 1, 2],"float32"), Tensor([320739, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 641478 (0.000156%)
Max absolute difference among violations: 0.03059328
Max relative difference among violations: 3.9037688
ACTUAL: array([[-0.296469,  0.771648],
[ 0.641676,  1.111933],
[-0.288875,  0.276747],...
DESIRED: array([[-0.296468,  0.771648],
[ 0.641676,  1.111933],
[-0.288875,  0.276747],...
2025-04-28 10:25:52.950236 test begin: paddle.maximum(Tensor([10, 1, 2],"float32"), Tensor([321759, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([10, 1, 2],"float32"), Tensor([321759, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 643518 (0.000155%)
Max absolute difference among violations: 0.1748312
Max relative difference among violations: 9.087779
ACTUAL: array([[ 0.079444, -0.100933],
[ 1.450718, -0.096348],
[ 0.442723, -0.240695],...
DESIRED: array([[ 0.079444, -0.100933],
[ 1.450718, -0.096348],
[ 0.442723, -0.240695],...
2025-04-28 10:25:55.313307 test begin: paddle.maximum(Tensor([10, 1, 2],"float32"), Tensor([330429, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([10, 1, 2],"float32"), Tensor([330429, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 660858 (0.000151%)
Max absolute difference among violations: 0.09571733
Max relative difference among violations: 1.9177381
ACTUAL: array([[ 0.025202, -1.264923],
[-0.400312, -0.471157],
[ 0.631939, -0.975625],...
DESIRED: array([[ 0.025202, -1.264923],
[-0.400312, -0.471157],
[ 0.631938, -0.975624],...
2025-04-28 10:25:59.158750 test begin: paddle.maximum(Tensor([10, 1, 2],"float32"), Tensor([347820, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([10, 1, 2],"float32"), Tensor([347820, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 695640 (0.000144%)
Max absolute difference among violations: 0.19845378
Max relative difference among violations: 0.11393932
ACTUAL: array([[ 0.328573, -0.717568],
[ 0.851828,  0.273703],
[-0.057381, -0.022999],...
DESIRED: array([[ 0.328573, -0.717568],
[ 0.851828,  0.273703],
[-0.057381, -0.022999],...
2025-04-28 10:26:01.048497 test begin: paddle.maximum(Tensor([10, 1, 2],"float32"), Tensor([356541, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([10, 1, 2],"float32"), Tensor([356541, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 713082 (0.00014%)
Max absolute difference among violations: 0.18986809
Max relative difference among violations: 0.35870475
ACTUAL: array([[-0.191541, -0.310701],
[-0.46487 ,  0.470123],
[ 0.      ,  0.973317],...
DESIRED: array([[-0.191541, -0.310701],
[-0.46487 ,  0.470123],
[ 0.      ,  0.973317],...
2025-04-28 10:27:15.670295 test begin: paddle.maximum(Tensor([1024, 1, 2],"float32"), Tensor([1, 2577, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([1024, 1, 2],"float32"), Tensor([1, 2577, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 2048 (0.0488%)
Max absolute difference among violations: 0.24174118
Max relative difference among violations: 0.01544061
ACTUAL: array([[[-9.474775,  1.9021  ]],
[[-1.889926,  8.320056]],...
DESIRED: array([[[-9.474792,  1.9021  ]],
[[-1.889935,  8.320063]],...
2025-04-28 10:30:02.009686 test begin: paddle.maximum(Tensor([1088, 1, 2],"float32"), Tensor([1, 1360, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([1088, 1, 2],"float32"), Tensor([1, 1360, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 2720 (0.0368%)
Max absolute difference among violations: 0.06969547
Max relative difference among violations: 0.01191647
ACTUAL: array([[[15.22699 , -5.139237],
[ 5.394259, 13.27052 ],
[10.719065, -1.675898],...
DESIRED: array([[[15.226988, -5.139241],
[ 5.394256, 13.270524],
[10.719062, -1.675898],...
2025-04-28 10:30:44.222630 test begin: paddle.maximum(Tensor([11, 1, 2],"float32"), Tensor([220992, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([11, 1, 2],"float32"), Tensor([220992, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2 / 441984 (0.000453%)
Max absolute difference among violations: 0.22552729
Max relative difference among violations: 0.19563308
ACTUAL: array([[-0.896146,  0.      ],
[ 0.470971,  0.558031],
[ 0.003912,  0.038262],...
DESIRED: array([[-0.896146,  0.      ],
[ 0.470971,  0.558031],
[ 0.003912,  0.038262],...
2025-04-28 10:30:48.410289 test begin: paddle.maximum(Tensor([11, 1, 2],"float32"), Tensor([249405, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([11, 1, 2],"float32"), Tensor([249405, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 498810 (0.0002%)
Max absolute difference among violations: 0.20415202
Max relative difference among violations: 1.9057876
ACTUAL: array([[-0.01335 , -2.576087],
[ 0.      , -0.349002],
[ 0.      , -0.192138],...
DESIRED: array([[-0.01335 , -2.576087],
[ 0.      , -0.349002],
[ 0.      , -0.192138],...
2025-04-28 10:30:49.427809 test begin: paddle.maximum(Tensor([11, 1, 2],"float32"), Tensor([257796, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([11, 1, 2],"float32"), Tensor([257796, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 515592 (0.000194%)
Max absolute difference among violations: 0.07057929
Max relative difference among violations: 0.10951327
ACTUAL: array([[-1.228652,  1.20241 ],
[ 0.92946 ,  0.377409],
[ 0.170838,  0.      ],...
DESIRED: array([[-1.228652,  1.20241 ],
[ 0.92946 ,  0.377409],
[ 0.170838,  0.      ],...
2025-04-28 10:30:52.742360 test begin: paddle.maximum(Tensor([11, 1, 2],"float32"), Tensor([268560, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([11, 1, 2],"float32"), Tensor([268560, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 537120 (0.000186%)
Max absolute difference among violations: 0.10623574
Max relative difference among violations: 0.16620414
ACTUAL: array([[ 0.656766, -1.01833 ],
[-0.323887,  1.55268 ],
[-0.336918, -0.081188],...
DESIRED: array([[ 0.656766, -1.01833 ],
[-0.323887,  1.552681],
[-0.336918, -0.081188],...
2025-04-28 10:31:00.964216 test begin: paddle.maximum(Tensor([11, 1, 2],"float32"), Tensor([303858, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([11, 1, 2],"float32"), Tensor([303858, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 607716 (0.000165%)
Max absolute difference among violations: 0.17950478
Max relative difference among violations: 1.
ACTUAL: array([[ 0.072332, -0.895779],
[-1.340214,  0.458711],
[ 0.287911, -0.182227],...
DESIRED: array([[ 0.072332, -0.895779],
[-1.340214,  0.458711],
[ 0.287911, -0.182227],...
2025-04-28 10:31:01.577406 test begin: paddle.maximum(Tensor([11, 1, 2],"float32"), Tensor([304368, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([11, 1, 2],"float32"), Tensor([304368, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 608736 (0.000164%)
Max absolute difference among violations: 0.03380656
Max relative difference among violations: 0.02327297
ACTUAL: array([[ 1.489464, -0.739762],
[-1.632633,  1.249377],
[-1.054464,  0.134618],...
DESIRED: array([[ 1.489464, -0.739762],
[-1.632633,  1.249377],
[-1.054464,  0.134618],...
2025-04-28 10:31:08.718071 test begin: paddle.maximum(Tensor([11, 1, 2],"float32"), Tensor([331452, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([11, 1, 2],"float32"), Tensor([331452, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 662904 (0.000151%)
Max absolute difference among violations: 0.10940611
Max relative difference among violations: 0.09515854
ACTUAL: array([[ 1.491679,  1.08118 ],
[-0.335722,  0.218272],
[ 0.563742,  0.17607 ],...
DESIRED: array([[ 1.491679,  1.08118 ],
[-0.335722,  0.218272],
[ 0.563742,  0.17607 ],...
2025-04-28 10:31:10.074072 test begin: paddle.maximum(Tensor([11, 1, 2],"float32"), Tensor([340176, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([11, 1, 2],"float32"), Tensor([340176, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 680352 (0.000147%)
Max absolute difference among violations: 0.07428359
Max relative difference among violations: 3.5218365
ACTUAL: array([[-0.742592, -0.648567],
[ 0.006669, -0.111705],
[ 1.229019,  0.520813],...
DESIRED: array([[-0.742592, -0.648567],
[ 0.006669, -0.111705],
[ 1.229019,  0.520813],...
2025-04-28 10:32:01.659430 test begin: paddle.maximum(Tensor([1113, 1, 2],"float32"), Tensor([14, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([1113, 1, 2],"float32"), Tensor([14, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 2226 (0.0449%)
Max absolute difference among violations: 0.23554143
Max relative difference among violations: 0.6104424
ACTUAL: array([[[ 0.866936,  0.      ]],
[[ 0.823421, -0.030998]],...
DESIRED: array([[[ 0.866936,  0.      ]],
[[ 0.823421, -0.030998]],...
2025-04-28 10:32:19.940155 test begin: paddle.maximum(Tensor([112, 1, 2],"float32"), Tensor([1, 4116, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([112, 1, 2],"float32"), Tensor([1, 4116, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 224 (0.446%)
Max absolute difference among violations: 0.07465935
Max relative difference among violations: 0.01884508
ACTUAL: array([[[ 9.027826e+00,  2.015869e+01]],
[[ 5.437025e-01,  6.099329e+00]],...
DESIRED: array([[[ 9.027823e+00,  2.015869e+01]],
[[ 5.437002e-01,  6.099330e+00]],...
2025-04-28 10:33:48.015550 test begin: paddle.maximum(Tensor([1155, 1, 2],"float32"), Tensor([3, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([1155, 1, 2],"float32"), Tensor([3, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 2310 (0.0433%)
Max absolute difference among violations: 0.1139607
Max relative difference among violations: 1.
ACTUAL: array([[[-0.683334,  0.139259]],
[[ 0.      , -0.647293]],...
DESIRED: array([[[-0.683334,  0.139259]],
[[ 0.      , -0.647293]],...
2025-04-28 10:35:36.061312 test begin: paddle.maximum(Tensor([12, 1, 2],"float32"), Tensor([191301, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([12, 1, 2],"float32"), Tensor([191301, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 382602 (0.000261%)
Max absolute difference among violations: 0.21321231
Max relative difference among violations: 1.
ACTUAL: array([[ 0.594601, -1.619877],
[ 0.237044, -0.783878],
[ 0.248069, -0.049099],...
DESIRED: array([[ 0.594601, -1.619877],
[ 0.237044, -0.783878],
[ 0.248069, -0.049099],...
2025-04-28 10:35:52.942966 test begin: paddle.maximum(Tensor([12, 1, 2],"float32"), Tensor([276210, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([12, 1, 2],"float32"), Tensor([276210, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 552420 (0.000181%)
Max absolute difference among violations: 0.13105065
Max relative difference among violations: 0.93026656
ACTUAL: array([[-0.003186,  0.096762],
[ 0.49888 ,  0.724945],
[-0.683279, -0.922132],...
DESIRED: array([[-0.003186,  0.096762],
[ 0.49888 ,  0.724945],
[-0.683279, -0.922132],...
2025-04-28 10:35:57.964676 test begin: paddle.maximum(Tensor([12, 1, 2],"float32"), Tensor([300762, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([12, 1, 2],"float32"), Tensor([300762, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 601524 (0.000166%)
Max absolute difference among violations: 0.12985426
Max relative difference among violations: 0.11820491
ACTUAL: array([[ 0.397608, -0.5705  ],
[ 0.      ,  1.518404],
[ 0.50392 , -0.16833 ],...
DESIRED: array([[ 0.397608, -0.5705  ],
[ 0.      ,  1.518404],
[ 0.50392 , -0.16833 ],...
2025-04-28 10:36:07.461132 test begin: paddle.maximum(Tensor([12, 1, 2],"float32"), Tensor([339150, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([12, 1, 2],"float32"), Tensor([339150, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 678300 (0.000147%)
Max absolute difference among violations: 0.02636713
Max relative difference among violations: 0.05744073
ACTUAL: array([[ 0.579431, -0.700334],
[ 0.560948, -1.259352],
[-0.090976, -1.122696],...
DESIRED: array([[ 0.579431, -0.700334],
[ 0.560948, -1.259352],
[-0.090976, -1.122696],...
2025-04-28 10:36:08.175123 test begin: paddle.maximum(Tensor([12, 1, 2],"float32"), Tensor([340176, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([12, 1, 2],"float32"), Tensor([340176, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 680352 (0.000147%)
Max absolute difference among violations: 0.07967576
Max relative difference among violations: 0.14219353
ACTUAL: array([[-0.375238,  1.366852],
[-0.201207, -1.001821],
[-1.06191 , -1.417984],...
DESIRED: array([[-0.375238,  1.366852],
[-0.201207, -1.001821],
[-1.06191 , -1.417984],...
2025-04-28 10:36:11.883165 test begin: paddle.maximum(Tensor([12, 1, 2],"float32"), Tensor([349155, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([12, 1, 2],"float32"), Tensor([349155, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 698310 (0.000143%)
Max absolute difference among violations: 0.18870729
Max relative difference among violations: 0.8997184
ACTUAL: array([[-0.34754 , -0.792233],
[-0.136748,  0.172452],
[ 0.127443,  0.257139],...
DESIRED: array([[-0.34754 , -0.792233],
[-0.136748,  0.172452],
[ 0.127443,  0.257139],...
2025-04-28 10:36:12.629642 test begin: paddle.maximum(Tensor([12, 1, 2],"float32"), Tensor([349866, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([12, 1, 2],"float32"), Tensor([349866, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 699732 (0.000143%)
Max absolute difference among violations: 0.03472486
Max relative difference among violations: 0.17961805
ACTUAL: array([[ 0.641193, -0.407037],
[-0.098537,  0.250083],
[-0.897142,  0.024323],...
DESIRED: array([[ 0.641193, -0.407037],
[-0.098537,  0.250083],
[-0.897142,  0.024323],...
2025-04-28 10:36:16.486778 test begin: paddle.maximum(Tensor([12, 1, 2],"float32"), Tensor([379050, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([12, 1, 2],"float32"), Tensor([379050, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 758100 (0.000132%)
Max absolute difference among violations: 0.23223007
Max relative difference among violations: 0.3537769
ACTUAL: array([[ 0.889664,  0.893801],
[ 0.      , -0.563181],
[ 0.181353, -0.542966],...
DESIRED: array([[ 0.889664,  0.893801],
[ 0.      , -0.563181],
[ 0.181352, -0.542965],...
2025-04-28 10:36:18.639910 test begin: paddle.maximum(Tensor([12, 1, 2],"float32"), Tensor([408177, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([12, 1, 2],"float32"), Tensor([408177, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 816354 (0.000122%)
Max absolute difference among violations: 0.17261016
Max relative difference among violations: 0.11859217
ACTUAL: array([[ 1.440273,  0.102031],
[-1.178869,  0.328756],
[ 1.772438,  0.      ],...
DESIRED: array([[ 1.440273,  0.102031],
[-1.178868,  0.328756],
[ 1.772438,  0.      ],...
2025-04-28 10:36:21.559890 test begin: paddle.maximum(Tensor([12, 1, 2],"float32"), Tensor([50250, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([12, 1, 2],"float32"), Tensor([50250, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 100500 (0.000995%)
Max absolute difference among violations: 0.19181949
Max relative difference among violations: 0.24860996
ACTUAL: array([[-0.01987 , -0.045756],
[-0.538265,  0.308596],
[ 1.044568, -0.039789],...
DESIRED: array([[-0.01987 , -0.045756],
[-0.538265,  0.308596],
[ 1.044568, -0.039789],...
2025-04-28 10:36:23.321729 test begin: paddle.maximum(Tensor([12, 1, 2],"float32"), Tensor([60480, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([12, 1, 2],"float32"), Tensor([60480, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 24 (4.17%)
Max absolute difference among violations: 0.20822906
Max relative difference among violations: 0.01632194
ACTUAL: array([[[-33.906708,  -8.614966]],
[[ 14.882686,  -2.080068]],...
DESIRED: array([[[-33.906906,  -8.615032]],
[[ 14.882704,  -2.080058]],...
2025-04-28 10:36:26.220588 test begin: paddle.maximum(Tensor([12, 1, 2],"float32"), Tensor([75840, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([12, 1, 2],"float32"), Tensor([75840, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 24 (4.17%)
Max absolute difference among violations: 0.19479096
Max relative difference among violations: 0.16397405
ACTUAL: array([[[136.9285  ,  38.614017]],
[[ 38.318287,   9.194721]],...
DESIRED: array([[[136.92856 ,  38.61393 ]],
[[ 38.318188,   9.194607]],...
2025-04-28 10:40:09.871831 test begin: paddle.maximum(Tensor([1285, 1, 2],"float32"), Tensor([13, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([1285, 1, 2],"float32"), Tensor([13, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 2570 (0.0389%)
Max absolute difference among violations: 0.09888208
Max relative difference among violations: 0.09496693
ACTUAL: array([[[-0.46214 , -0.112772]],
[[-0.061257,  0.516083]],...
DESIRED: array([[[-0.46214 , -0.112772]],
[[-0.061257,  0.516083]],...
2025-04-28 10:40:50.748601 test begin: paddle.maximum(Tensor([13, 1, 2],"float32"), Tensor([214848, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([13, 1, 2],"float32"), Tensor([214848, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 429696 (0.000233%)
Max absolute difference among violations: 0.0197607
Max relative difference among violations: 0.0482778
ACTUAL: array([[ 0.85662 ,  0.926374],
[ 0.363665, -0.925851],
[-0.031069, -0.328829],...
DESIRED: array([[ 0.85662 ,  0.926374],
[ 0.363665, -0.925851],
[-0.031069, -0.328829],...
2025-04-28 10:40:52.980923 test begin: paddle.maximum(Tensor([13, 1, 2],"float32"), Tensor([223827, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([13, 1, 2],"float32"), Tensor([223827, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 447654 (0.000223%)
Max absolute difference among violations: 0.06424844
Max relative difference among violations: 0.18392953
ACTUAL: array([[ 0.148719,  0.049818],
[-0.356576, -0.289403],
[-0.654486,  0.164391],...
DESIRED: array([[ 0.148719,  0.049818],
[-0.356576, -0.289403],
[-0.654486,  0.164391],...
2025-04-28 10:41:02.812135 test begin: paddle.maximum(Tensor([13, 1, 2],"float32"), Tensor([270096, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([13, 1, 2],"float32"), Tensor([270096, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 540192 (0.000185%)
Max absolute difference among violations: 0.02678131
Max relative difference among violations: 1.
ACTUAL: array([[ 0.      ,  1.632161],
[ 0.709427, -0.149669],
[ 0.60483 , -0.370693],...
DESIRED: array([[ 0.      ,  1.632161],
[ 0.709427, -0.149669],
[ 0.60483 , -0.370693],...
2025-04-28 10:41:08.139461 test begin: paddle.maximum(Tensor([13, 1, 2],"float32"), Tensor([286977, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([13, 1, 2],"float32"), Tensor([286977, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 573954 (0.000174%)
Max absolute difference among violations: 0.23365939
Max relative difference among violations: 0.33116344
ACTUAL: array([[ 1.763081, -0.711085],
[ 1.131254,  0.695566],
[-0.087238,  0.220593],...
DESIRED: array([[ 1.763081, -0.711085],
[ 1.131254,  0.695566],
[-0.087238,  0.220593],...
2025-04-28 10:41:10.263472 test begin: paddle.maximum(Tensor([13, 1, 2],"float32"), Tensor([295443, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([13, 1, 2],"float32"), Tensor([295443, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 3 / 590886 (0.000508%)
Max absolute difference among violations: 0.20977354
Max relative difference among violations: 1.0073519
ACTUAL: array([[ 0.59844 ,  0.765057],
[ 0.      ,  0.537214],
[ 0.32302 , -0.254775],...
DESIRED: array([[ 0.59844 ,  0.765057],
[ 0.      ,  0.537214],
[ 0.32302 , -0.254775],...
2025-04-28 10:41:21.395754 test begin: paddle.maximum(Tensor([13, 1, 2],"float32"), Tensor([330429, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([13, 1, 2],"float32"), Tensor([330429, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 26 (3.85%)
Max absolute difference among violations: 0.2700957
Max relative difference among violations: 1.0533543
ACTUAL: array([[[-5.921947e+01,  1.358426e+00]],
[[-2.108143e+01,  1.833680e+02]],...
DESIRED: array([[[-5.921933e+01,  1.358407e+00]],
[[-2.108134e+01,  1.833688e+02]],...
2025-04-28 10:41:23.072416 test begin: paddle.maximum(Tensor([13, 1, 2],"float32"), Tensor([331452, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([13, 1, 2],"float32"), Tensor([331452, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 662904 (0.000151%)
Max absolute difference among violations: 0.2119872
Max relative difference among violations: 2.716738
ACTUAL: array([[ 0.573288,  1.134083],
[-0.465343, -0.088869],
[-0.300131, -0.167755],...
DESIRED: array([[ 0.573288,  1.134083],
[-0.465343, -0.088869],
[-0.300131, -0.167755],...
2025-04-28 10:41:26.470778 test begin: paddle.maximum(Tensor([13, 1, 2],"float32"), Tensor([343728, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([13, 1, 2],"float32"), Tensor([343728, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 687456 (0.000145%)
Max absolute difference among violations: 0.18051118
Max relative difference among violations: 0.21059534
ACTUAL: array([[ 0.660677,  0.029616],
[-0.196769, -0.236346],
[ 0.28156 ,  0.066305],...
DESIRED: array([[ 0.660677,  0.029616],
[-0.196769, -0.236346],
[ 0.28156 ,  0.066305],...
2025-04-28 10:41:28.139777 test begin: paddle.maximum(Tensor([13, 1, 2],"float32"), Tensor([349866, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([13, 1, 2],"float32"), Tensor([349866, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 699732 (0.000143%)
Max absolute difference among violations: 0.12950632
Max relative difference among violations: 0.2608926
ACTUAL: array([[-0.08281 ,  0.      ],
[ 0.89876 , -0.413041],
[ 0.221615, -1.486027],...
DESIRED: array([[-0.08281 ,  0.      ],
[ 0.89876 , -0.413041],
[ 0.221615, -1.486027],...
2025-04-28 10:41:32.411513 test begin: paddle.maximum(Tensor([13, 1, 2],"float32"), Tensor([368280, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([13, 1, 2],"float32"), Tensor([368280, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 736560 (0.000136%)
Max absolute difference among violations: 0.02944344
Max relative difference among violations: 1.
ACTUAL: array([[-2.057735,  0.531847],
[-0.551096,  0.618477],
[ 1.632965, -0.79642 ],...
DESIRED: array([[-2.057735,  0.531847],
[-0.551096,  0.618477],
[ 1.632965, -0.79642 ],...
2025-04-28 10:41:43.775575 test begin: paddle.maximum(Tensor([13, 1, 2],"float32"), Tensor([53760, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([13, 1, 2],"float32"), Tensor([53760, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 107520 (0.00093%)
Max absolute difference among violations: 0.09808329
Max relative difference among violations: 1.
ACTUAL: array([[ 0.011282, -0.333105],
[-0.320012, -0.148412],
[ 0.      ,  0.379354],...
DESIRED: array([[ 0.011282, -0.333105],
[-0.320012, -0.148412],
[ 0.      ,  0.379354],...
2025-04-28 10:41:48.247258 test begin: paddle.maximum(Tensor([13, 1, 2],"float32"), Tensor([75375, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([13, 1, 2],"float32"), Tensor([75375, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 150750 (0.000663%)
Max absolute difference among violations: 0.16537249
Max relative difference among violations: 0.10493745
ACTUAL: array([[ 0.      , -0.837272],
[-0.272579,  1.171559],
[-1.166917,  0.      ],...
DESIRED: array([[ 0.      , -0.837272],
[-0.272579,  1.171559],
[-1.166917,  0.      ],...
2025-04-28 10:41:48.535589 test begin: paddle.maximum(Tensor([13, 1, 2],"float32"), Tensor([75555, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([13, 1, 2],"float32"), Tensor([75555, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 151110 (0.000662%)
Max absolute difference among violations: 0.13313429
Max relative difference among violations: 4.7586255
ACTUAL: array([[-0.7318  , -1.131041],
[-0.156831,  0.170952],
[-0.413737, -1.39813 ],...
DESIRED: array([[-0.7318  , -1.131041],
[-0.156831,  0.170952],
[-0.413737, -1.39813 ],...
2025-04-28 10:43:06.162845 test begin: paddle.maximum(Tensor([1332, 1, 2],"float32"), Tensor([1, 5376, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([1332, 1, 2],"float32"), Tensor([1, 5376, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 10752 (0.0093%)
Max absolute difference among violations: 0.22587204
Max relative difference among violations: 0.0147964
ACTUAL: array([[[ -2.279058,  -3.514532],
[-22.693985,  -0.955069],
[ 13.164728,  -4.062507],...
DESIRED: array([[[ -2.279058,  -3.514532],
[-22.693985,  -0.955064],
[ 13.164732,  -4.062507],...
2025-04-28 10:45:19.213889 test begin: paddle.maximum(Tensor([1386, 1, 2],"float32"), Tensor([14, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([1386, 1, 2],"float32"), Tensor([14, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 2772 (0.0361%)
Max absolute difference among violations: 0.05754578
Max relative difference among violations: 0.04186525
ACTUAL: array([[[ 1.568776, -0.300747]],
[[-0.384015,  0.189016]],...
DESIRED: array([[[ 1.568777, -0.300747]],
[[-0.384015,  0.189016]],...
2025-04-28 10:45:55.023732 test begin: paddle.maximum(Tensor([14, 1, 2],"float32"), Tensor([214848, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([14, 1, 2],"float32"), Tensor([214848, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 429696 (0.000233%)
Max absolute difference among violations: 0.05189183
Max relative difference among violations: 0.12921405
ACTUAL: array([[-1.711428, -0.145778],
[ 0.2182  ,  0.846023],
[ 0.643843, -0.496831],...
DESIRED: array([[-1.711428, -0.145778],
[ 0.2182  ,  0.846023],
[ 0.643843, -0.496831],...
2025-04-28 10:46:01.535535 test begin: paddle.maximum(Tensor([14, 1, 2],"float32"), Tensor([245520, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([14, 1, 2],"float32"), Tensor([245520, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 28 (3.57%)
Max absolute difference among violations: 0.24007607
Max relative difference among violations: 0.01318395
ACTUAL: array([[[ -29.768253,  302.90366 ]],
[[ 135.72658 ,   18.08225 ]],...
DESIRED: array([[[ -29.768433,  302.90344 ]],
[[ 135.72552 ,   18.08194 ]],...
2025-04-28 10:46:05.535688 test begin: paddle.maximum(Tensor([14, 1, 2],"float32"), Tensor([261681, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([14, 1, 2],"float32"), Tensor([261681, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 523362 (0.000191%)
Max absolute difference among violations: 0.07321906
Max relative difference among violations: 0.11386869
ACTUAL: array([[-0.91796 , -0.379407],
[-0.734359, -0.237894],
[ 1.623924, -1.821062],...
DESIRED: array([[-0.91796 , -0.379407],
[-0.734359, -0.237894],
[ 1.623924, -1.821062],...
2025-04-28 10:46:08.341276 test begin: paddle.maximum(Tensor([14, 1, 2],"float32"), Tensor([269586, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([14, 1, 2],"float32"), Tensor([269586, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 539172 (0.000185%)
Max absolute difference among violations: 0.24578103
Max relative difference among violations: 0.5469241
ACTUAL: array([[-0.185123, -0.12583 ],
[-1.491471,  0.178491],
[ 0.761832, -0.025709],...
DESIRED: array([[-0.185123, -0.12583 ],
[-1.491471,  0.178491],
[ 0.761832, -0.025709],...
2025-04-28 10:46:19.364613 test begin: paddle.maximum(Tensor([14, 1, 2],"float32"), Tensor([303858, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([14, 1, 2],"float32"), Tensor([303858, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 607716 (0.000165%)
Max absolute difference among violations: 0.08364177
Max relative difference among violations: 0.36665976
ACTUAL: array([[ 1.067169,  0.299247],
[ 0.634835,  0.14126 ],
[-0.029841, -1.046092],...
DESIRED: array([[ 1.067169,  0.299247],
[ 0.634835,  0.14126 ],
[-0.029841, -1.046092],...
2025-04-28 10:46:21.037001 test begin: paddle.maximum(Tensor([14, 1, 2],"float32"), Tensor([310992, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([14, 1, 2],"float32"), Tensor([310992, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 621984 (0.000161%)
Max absolute difference among violations: 0.2066116
Max relative difference among violations: 632.4911
ACTUAL: array([[-0.675746,  0.260211],
[-0.121317, -1.770201],
[-0.192049,  1.282441],...
DESIRED: array([[-0.675746,  0.260211],
[-0.121317, -1.770202],
[-0.192049,  1.282441],...
2025-04-28 10:46:27.747770 test begin: paddle.maximum(Tensor([14, 1, 2],"float32"), Tensor([330429, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([14, 1, 2],"float32"), Tensor([330429, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 660858 (0.000151%)
Max absolute difference among violations: 0.10661849
Max relative difference among violations: 0.5471775
ACTUAL: array([[ 0.153029, -1.923063],
[ 0.078887,  0.374481],
[-0.323758, -0.365138],...
DESIRED: array([[ 0.153029, -1.923063],
[ 0.078887,  0.374481],
[-0.323758, -0.365138],...
2025-04-28 10:46:30.430027 test begin: paddle.maximum(Tensor([14, 1, 2],"float32"), Tensor([339150, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([14, 1, 2],"float32"), Tensor([339150, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 28 (3.57%)
Max absolute difference among violations: 0.1264098
Max relative difference among violations: 0.5974676
ACTUAL: array([[[  47.252316,   56.4403  ]],
[[  30.094408, -108.69811 ]],...
DESIRED: array([[[ 4.725272e+01,  5.644035e+01]],
[[ 3.009439e+01, -1.086980e+02]],...
2025-04-28 10:46:33.126266 test begin: paddle.maximum(Tensor([14, 1, 2],"float32"), Tensor([349155, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([14, 1, 2],"float32"), Tensor([349155, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 698310 (0.000143%)
Max absolute difference among violations: 0.13460553
Max relative difference among violations: 0.21393164
ACTUAL: array([[ 0.53699 , -0.669886],
[-0.430667,  1.248749],
[ 0.156224,  0.395232],...
DESIRED: array([[ 0.53699 , -0.669886],
[-0.430667,  1.248749],
[ 0.156224,  0.395232],...
2025-04-28 10:46:33.998978 test begin: paddle.maximum(Tensor([14, 1, 2],"float32"), Tensor([349866, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([14, 1, 2],"float32"), Tensor([349866, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 699732 (0.000143%)
Max absolute difference among violations: 0.17726919
Max relative difference among violations: 0.99357
ACTUAL: array([[-0.636238, -0.26861 ],
[-0.169501, -0.089431],
[-0.012543,  0.472684],...
DESIRED: array([[-0.636239, -0.26861 ],
[-0.169501, -0.089431],
[-0.012543,  0.472684],...
2025-04-28 10:46:35.892869 test begin: paddle.maximum(Tensor([14, 1, 2],"float32"), Tensor([356541, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([14, 1, 2],"float32"), Tensor([356541, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 28 (3.57%)
Max absolute difference among violations: 0.21649647
Max relative difference among violations: 0.02275031
ACTUAL: array([[[  37.929337, -147.95383 ]],
[[  17.34629 ,   -1.034094]],...
DESIRED: array([[[  37.92934 , -147.9549  ]],
[[  17.346296,   -1.034126]],...
2025-04-28 10:46:37.643893 test begin: paddle.maximum(Tensor([14, 1, 2],"float32"), Tensor([365211, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([14, 1, 2],"float32"), Tensor([365211, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 28 (3.57%)
Max absolute difference among violations: 0.15473211
Max relative difference among violations: 0.11218758
ACTUAL: array([[[  94.60613 ,   20.894766]],
[[ 184.41824 ,  -46.18803 ]],...
DESIRED: array([[[  94.60602 ,   20.895098]],
[[ 184.41643 ,  -46.188236]],...
2025-04-28 10:46:40.398379 test begin: paddle.maximum(Tensor([14, 1, 2],"float32"), Tensor([397467, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([14, 1, 2],"float32"), Tensor([397467, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 794934 (0.000126%)
Max absolute difference among violations: 0.17230245
Max relative difference among violations: 0.7863609
ACTUAL: array([[ 0.110921, -0.702859],
[-2.581807,  0.300324],
[-0.032292, -2.00558 ],...
DESIRED: array([[ 0.110921, -0.702859],
[-2.581807,  0.300324],
[-0.032292, -2.00558 ],...
2025-04-28 10:46:44.043981 test begin: paddle.maximum(Tensor([14, 1, 2],"float32"), Tensor([56280, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([14, 1, 2],"float32"), Tensor([56280, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 112560 (0.000888%)
Max absolute difference among violations: 0.16427779
Max relative difference among violations: 0.15526497
ACTUAL: array([[ 0.245024,  0.370797],
[ 0.      ,  0.      ],
[ 0.190532,  0.249527],...
DESIRED: array([[ 0.245024,  0.370797],
[ 0.      ,  0.      ],
[ 0.190532,  0.249527],...
2025-04-28 10:46:48.873802 test begin: paddle.maximum(Tensor([14, 1, 2],"float32"), Tensor([72960, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([14, 1, 2],"float32"), Tensor([72960, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 28 (3.57%)
Max absolute difference among violations: 0.23177147
Max relative difference among violations: 0.02970174
ACTUAL: array([[[-123.63983 , -156.33669 ]],
[[  59.223717,  -12.810782]],...
DESIRED: array([[[-123.64001 , -156.33743 ]],
[[  59.223995,  -12.810663]],...
2025-04-28 10:46:50.442601 test begin: paddle.maximum(Tensor([14, 1, 2],"float32"), Tensor([80640, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([14, 1, 2],"float32"), Tensor([80640, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 28 (3.57%)
Max absolute difference among violations: 0.21434069
Max relative difference among violations: 0.0344982
ACTUAL: array([[[ -62.3703  ,   41.914948]],
[[ -86.02393 ,   63.597565]],...
DESIRED: array([[[ -62.37069 ,   41.914818]],
[[ -86.02405 ,   63.59754 ]],...
2025-04-28 10:48:22.333435 test begin: paddle.maximum(Tensor([144, 1, 2],"float32"), Tensor([1, 10164, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([144, 1, 2],"float32"), Tensor([1, 10164, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 288 (0.347%)
Max absolute difference among violations: 0.22212982
Max relative difference among violations: 0.01056346
ACTUAL: array([[[-18.663603, -14.42176 ]],
[[ -4.818253, -16.520624]],...
DESIRED: array([[[-18.663586, -14.42178 ]],
[[ -4.818254, -16.520638]],...
2025-04-28 10:48:22.644028 test begin: paddle.maximum(Tensor([144, 1, 2],"float32"), Tensor([1, 11109, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([144, 1, 2],"float32"), Tensor([1, 11109, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 288 (0.347%)
Max absolute difference among violations: 0.02143031
Max relative difference among violations: 0.04791965
ACTUAL: array([[[ 2.557026e+01,  7.103090e+00]],
[[-2.293067e+00, -2.968233e+01]],...
DESIRED: array([[[ 2.557030e+01,  7.103097e+00]],
[[-2.293068e+00, -2.968233e+01]],...
2025-04-28 10:49:46.924296 test begin: paddle.maximum(Tensor([1472, 1, 2],"float32"), Tensor([1, 3060, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([1472, 1, 2],"float32"), Tensor([1, 3060, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 2944 (0.034%)
Max absolute difference among violations: 0.14676365
Max relative difference among violations: 0.3099535
ACTUAL: array([[[  2.156911,  -0.534701]],
[[  6.748852,   5.640225]],...
DESIRED: array([[[  2.156913,  -0.534699]],
[[  6.748857,   5.640232]],...
2025-04-28 10:50:56.307318 test begin: paddle.maximum(Tensor([15, 1, 2],"float32"), Tensor([230175, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([15, 1, 2],"float32"), Tensor([230175, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 460350 (0.000217%)
Max absolute difference among violations: 0.13914669
Max relative difference among violations: 0.99016494
ACTUAL: array([[-0.561697, -0.255409],
[-0.418909, -0.037925],
[ 0.951624,  0.255038],...
DESIRED: array([[-0.561697, -0.255409],
[-0.418909, -0.037925],
[ 0.951624,  0.255038],...
2025-04-28 10:50:57.627998 test begin: paddle.maximum(Tensor([15, 1, 2],"float32"), Tensor([234804, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([15, 1, 2],"float32"), Tensor([234804, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 469608 (0.000213%)
Max absolute difference among violations: 0.03743103
Max relative difference among violations: 0.07764809
ACTUAL: array([[-2.568208,  0.      ],
[-0.654381, -0.146812],
[ 0.      , -0.332491],...
DESIRED: array([[-2.568208,  0.      ],
[-0.654381, -0.146812],
[ 0.      , -0.332491],...
2025-04-28 10:50:58.959147 test begin: paddle.maximum(Tensor([15, 1, 2],"float32"), Tensor([241731, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([15, 1, 2],"float32"), Tensor([241731, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 483462 (0.000207%)
Max absolute difference among violations: 0.14610583
Max relative difference among violations: 0.15508105
ACTUAL: array([[ 1.148728,  0.992495],
[ 0.237867, -0.909104],
[-0.97744 , -0.107602],...
DESIRED: array([[ 1.148728,  0.992495],
[ 0.237867, -0.909104],
[-0.97744 , -0.107602],...
2025-04-28 10:51:00.951423 test begin: paddle.maximum(Tensor([15, 1, 2],"float32"), Tensor([249405, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([15, 1, 2],"float32"), Tensor([249405, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 498810 (0.0002%)
Max absolute difference among violations: 0.07259983
Max relative difference among violations: 0.12429037
ACTUAL: array([[-1.250232,  0.089315],
[-1.12883 , -0.670065],
[ 1.082347, -0.371863],...
DESIRED: array([[-1.250232,  0.089315],
[-1.12883 , -0.670065],
[ 1.082347, -0.371863],...
2025-04-28 10:51:03.022035 test begin: paddle.maximum(Tensor([15, 1, 2],"float32"), Tensor([257796, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([15, 1, 2],"float32"), Tensor([257796, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 515592 (0.000194%)
Max absolute difference among violations: 0.14135155
Max relative difference among violations: 3.6861112
ACTUAL: array([[ 0.536252, -0.572361],
[-0.168627,  0.325942],
[ 1.328186,  0.366491],...
DESIRED: array([[ 0.536252, -0.572361],
[-0.168627,  0.325942],
[ 1.328186,  0.366491],...
2025-04-28 10:51:17.532306 test begin: paddle.maximum(Tensor([15, 1, 2],"float32"), Tensor([301302, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([15, 1, 2],"float32"), Tensor([301302, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 30 (3.33%)
Max absolute difference among violations: 0.24354744
Max relative difference among violations: 0.02631683
ACTUAL: array([[[ 6.256673e+01, -6.955540e+01]],
[[-4.459276e+01,  2.043493e+02]],...
DESIRED: array([[[ 6.256650e+01, -6.955530e+01]],
[[-4.459306e+01,  2.043499e+02]],...
2025-04-28 10:51:19.990990 test begin: paddle.maximum(Tensor([15, 1, 2],"float32"), Tensor([310992, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([15, 1, 2],"float32"), Tensor([310992, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 621984 (0.000161%)
Max absolute difference among violations: 0.05701709
Max relative difference among violations: 0.0405192
ACTUAL: array([[ 0.4211  , -0.103889],
[-0.069339,  0.945596],
[ 0.556895,  0.575756],...
DESIRED: array([[ 0.4211  , -0.103889],
[-0.069339,  0.945596],
[ 0.556895,  0.575756],...
2025-04-28 10:51:20.832022 test begin: paddle.maximum(Tensor([15, 1, 2],"float32"), Tensor([311535, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([15, 1, 2],"float32"), Tensor([311535, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 623070 (0.00016%)
Max absolute difference among violations: 0.24915293
Max relative difference among violations: 1.
ACTUAL: array([[ 0.576759,  0.      ],
[-0.778204,  0.435471],
[-1.346682, -0.278879],...
DESIRED: array([[ 0.576759,  0.      ],
[-0.778203,  0.435471],
[-1.346682, -0.278879],...
2025-04-28 10:51:22.455855 test begin: paddle.maximum(Tensor([15, 1, 2],"float32"), Tensor([313038, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([15, 1, 2],"float32"), Tensor([313038, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 626076 (0.00016%)
Max absolute difference among violations: 0.22440064
Max relative difference among violations: 0.51789045
ACTUAL: array([[ 0.178457,  1.838579],
[-1.145029, -0.955336],
[-0.425495, -0.762937],...
DESIRED: array([[ 0.178457,  1.838579],
[-1.145029, -0.955336],
[-0.425495, -0.762937],...
2025-04-28 10:51:38.869076 test begin: paddle.maximum(Tensor([15, 1, 2],"float32"), Tensor([369105, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([15, 1, 2],"float32"), Tensor([369105, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 738210 (0.000135%)
Max absolute difference among violations: 0.08572614
Max relative difference among violations: 0.07840738
ACTUAL: array([[-0.438578, -2.19505 ],
[ 0.679022, -0.174822],
[ 0.12023 ,  0.319802],...
DESIRED: array([[-0.438578, -2.19505 ],
[ 0.679023, -0.174822],
[ 0.12023 ,  0.319802],...
2025-04-28 10:51:40.834418 test begin: paddle.maximum(Tensor([15, 1, 2],"float32"), Tensor([379050, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([15, 1, 2],"float32"), Tensor([379050, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 758100 (0.000132%)
Max absolute difference among violations: 0.22335345
Max relative difference among violations: 0.83557934
ACTUAL: array([[-1.593922,  0.      ],
[-0.112159,  0.060095],
[-0.874414, -0.628844],...
DESIRED: array([[-1.593922,  0.      ],
[-0.112159,  0.060095],
[-0.874414, -0.628844],...
2025-04-28 10:51:42.886875 test begin: paddle.maximum(Tensor([15, 1, 2],"float32"), Tensor([397467, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([15, 1, 2],"float32"), Tensor([397467, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 30 (3.33%)
Max absolute difference among violations: 0.18131447
Max relative difference among violations: 0.02387146
ACTUAL: array([[[ -35.00074 ,  -10.816531]],
[[ 143.39763 ,   68.8218  ]],...
DESIRED: array([[[ -35.001053,  -10.816427]],
[[ 143.39722 ,   68.67375 ]],...
2025-04-28 10:53:18.630310 test begin: paddle.maximum(Tensor([1536, 1, 2],"float32"), Tensor([1, 1726, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([1536, 1, 2],"float32"), Tensor([1, 1726, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 3072 (0.0326%)
Max absolute difference among violations: 0.08458871
Max relative difference among violations: 0.22385377
ACTUAL: array([[[ -2.415978,   8.419827]],
[[  8.219395,  -7.361713]],...
DESIRED: array([[[ -2.415978,   8.419838]],
[[  8.219396,  -7.361715]],...
2025-04-28 10:55:59.693993 test begin: paddle.maximum(Tensor([16, 1, 2],"float32"), Tensor([188256, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([16, 1, 2],"float32"), Tensor([188256, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 376512 (0.000266%)
Max absolute difference among violations: 0.17052966
Max relative difference among violations: 0.75045955
ACTUAL: array([[-0.438696, -0.948049],
[-0.484807,  0.965144],
[-1.017046, -0.067923],...
DESIRED: array([[-0.438696, -0.948049],
[-0.484807,  0.965144],
[-1.017046, -0.067923],...
2025-04-28 10:56:07.491306 test begin: paddle.maximum(Tensor([16, 1, 2],"float32"), Tensor([222012, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([16, 1, 2],"float32"), Tensor([222012, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 444024 (0.000225%)
Max absolute difference among violations: 0.03978235
Max relative difference among violations: 0.10793128
ACTUAL: array([[-0.488859, -0.274878],
[-0.083236,  0.051804],
[ 0.075117,  0.736522],...
DESIRED: array([[-0.488859, -0.274878],
[-0.083236,  0.051804],
[ 0.075117,  0.736522],...
2025-04-28 10:56:12.960659 test begin: paddle.maximum(Tensor([16, 1, 2],"float32"), Tensor([242991, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([16, 1, 2],"float32"), Tensor([242991, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 485982 (0.000206%)
Max absolute difference among violations: 0.18591452
Max relative difference among violations: 0.25869122
ACTUAL: array([[-0.085642, -0.219206],
[ 0.465114,  2.660982],
[-1.981828,  0.      ],...
DESIRED: array([[-0.085642, -0.219205],
[ 0.465115,  2.660982],
[-1.981828,  0.      ],...
2025-04-28 10:56:27.503173 test begin: paddle.maximum(Tensor([16, 1, 2],"float32"), Tensor([278562, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([16, 1, 2],"float32"), Tensor([278562, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 557124 (0.000179%)
Max absolute difference among violations: 0.01799545
Max relative difference among violations: 0.09663339
ACTUAL: array([[ 0.562358,  0.037654],
[-0.550086, -1.165927],
[ 0.727211, -0.165549],...
DESIRED: array([[ 0.562358,  0.037654],
[-0.550086, -1.165927],
[ 0.727211, -0.165549],...
2025-04-28 10:56:47.765701 test begin: paddle.maximum(Tensor([16, 1, 2],"float32"), Tensor([337620, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([16, 1, 2],"float32"), Tensor([337620, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 675240 (0.000148%)
Max absolute difference among violations: 0.0568431
Max relative difference among violations: 0.08898371
ACTUAL: array([[-0.617932, -1.01828 ],
[-0.079083, -0.493966],
[ 0.393854, -0.807389],...
DESIRED: array([[-0.617932, -1.01828 ],
[-0.079083, -0.493966],
[ 0.393854, -0.807389],...
2025-04-28 10:56:59.894384 test begin: paddle.maximum(Tensor([16, 1, 2],"float32"), Tensor([369303, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([16, 1, 2],"float32"), Tensor([369303, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 738606 (0.000135%)
Max absolute difference among violations: 0.21545976
Max relative difference among violations: 0.45987228
ACTUAL: array([[ 0.      ,  1.266493],
[ 0.696555, -0.91965 ],
[-0.236335, -0.942398],...
DESIRED: array([[ 0.      ,  1.266492],
[ 0.696555, -0.91965 ],
[-0.236335, -0.942399],...
2025-04-28 10:57:03.522189 test begin: paddle.maximum(Tensor([16, 1, 2],"float32"), Tensor([379050, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([16, 1, 2],"float32"), Tensor([379050, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 758100 (0.000132%)
Max absolute difference among violations: 0.22333243
Max relative difference among violations: 0.85616666
ACTUAL: array([[-1.086159,  0.      ],
[ 0.979215, -1.460791],
[-0.367517,  1.673921],...
DESIRED: array([[-1.086159,  0.      ],
[ 0.979214, -1.460791],
[-0.367517,  1.673921],...
2025-04-28 10:57:04.993813 test begin: paddle.maximum(Tensor([16, 1, 2],"float32"), Tensor([386694, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([16, 1, 2],"float32"), Tensor([386694, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 773388 (0.000129%)
Max absolute difference among violations: 0.19364226
Max relative difference among violations: 0.19715579
ACTUAL: array([[ 0.803086,  0.299815],
[ 0.021374, -0.268837],
[-0.087382,  1.245779],...
DESIRED: array([[ 0.803086,  0.299815],
[ 0.021374, -0.268837],
[-0.087382,  1.245779],...
2025-04-28 10:57:06.400589 test begin: paddle.maximum(Tensor([16, 1, 2],"float32"), Tensor([408177, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([16, 1, 2],"float32"), Tensor([408177, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 816354 (0.000122%)
Max absolute difference among violations: 0.22644687
Max relative difference among violations: 0.18630661
ACTUAL: array([[-1.700005, -0.471189],
[-0.989297, -0.227339],
[ 1.301838,  0.267595],...
DESIRED: array([[-1.700005, -0.471189],
[-0.989297, -0.227339],
[ 1.301838,  0.267595],...
2025-04-28 10:57:12.490414 test begin: paddle.maximum(Tensor([16, 1, 2],"float32"), Tensor([62730, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([16, 1, 2],"float32"), Tensor([62730, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 125460 (0.000797%)
Max absolute difference among violations: 0.04148471
Max relative difference among violations: 0.0764956
ACTUAL: array([[ 0.841743,  0.472996],
[-0.549492,  0.      ],
[ 0.214611, -0.649292],...
DESIRED: array([[ 0.841743,  0.472996],
[-0.549492,  0.      ],
[ 0.214611, -0.649292],...
2025-04-28 10:57:24.932198 test begin: paddle.maximum(Tensor([16, 11, 1, 2],"float32"), Tensor([16, 1, 8400, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([16, 11, 1, 2],"float32"), Tensor([16, 1, 8400, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 352 (0.284%)
Max absolute difference among violations: 0.06744432
Max relative difference among violations: 0.01275251
ACTUAL: array([[[[-1.716654e+01,  4.302750e-01]],
[[ 1.253794e+01, -4.847883e-01]],...
DESIRED: array([[[[-1.716655e+01,  4.302864e-01]],
[[ 1.253793e+01, -4.847813e-01]],...
2025-04-28 10:57:38.206687 test begin: paddle.maximum(Tensor([16, 14, 1, 2],"float32"), Tensor([16, 1, 2541, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([16, 14, 1, 2],"float32"), Tensor([16, 1, 2541, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 448 (0.223%)
Max absolute difference among violations: 0.1414566
Max relative difference among violations: 0.01581721
ACTUAL: array([[[[ 1.026860e+01, -6.589221e+00]],
[[-4.732755e+00,  8.412182e+00]],...
DESIRED: array([[[[ 1.026861e+01, -6.589217e+00]],
[[-4.732746e+00,  8.412187e+00]],...
2025-04-28 10:57:52.364496 test begin: paddle.maximum(Tensor([16, 16, 1, 2],"float32"), Tensor([16, 1, 8400, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([16, 16, 1, 2],"float32"), Tensor([16, 1, 8400, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 268800 (0.000372%)
Max absolute difference among violations: 0.10192847
Max relative difference among violations: 0.16753103
ACTUAL: array([[[[ 0.000000e+00, -6.765154e-01],
[-6.812481e-01, -4.328943e-01],
[ 1.590381e-03,  7.230878e-01],...
DESIRED: array([[[[ 0.000000e+00, -6.765154e-01],
[-6.812481e-01, -4.328942e-01],
[ 1.590381e-03,  7.230878e-01],...
2025-04-28 10:57:52.870343 test begin: paddle.maximum(Tensor([16, 16, 1, 2],"float32"), Tensor([16, 1, 9261, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([16, 16, 1, 2],"float32"), Tensor([16, 1, 9261, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 512 (0.195%)
Max absolute difference among violations: 0.18817902
Max relative difference among violations: 0.12414005
ACTUAL: array([[[[-4.113539e+01,  2.031314e+01]],
[[-2.467031e+01, -3.461413e+01]],...
DESIRED: array([[[[-4.113539e+01,  2.031314e+01]],
[[-2.467030e+01, -3.461412e+01]],...
2025-04-28 10:57:59.104573 test begin: paddle.maximum(Tensor([16, 17, 1, 2],"float32"), Tensor([16, 1, 7581, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([16, 17, 1, 2],"float32"), Tensor([16, 1, 7581, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 544 (0.184%)
Max absolute difference among violations: 0.22162724
Max relative difference among violations: 0.7736273
ACTUAL: array([[[[ 3.779716e+01,  1.445474e+01]],
[[ 2.286164e+01,  1.079527e+01]],...
DESIRED: array([[[[ 3.779718e+01,  1.445468e+01]],
[[ 2.286159e+01,  1.079529e+01]],...
2025-04-28 10:58:00.705838 test begin: paddle.maximum(Tensor([16, 18, 1, 2],"float32"), Tensor([16, 1, 10164, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([16, 18, 1, 2],"float32"), Tensor([16, 1, 10164, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 576 (0.174%)
Max absolute difference among violations: 0.23221016
Max relative difference among violations: 0.0208647
ACTUAL: array([[[[ 4.419114e+01,  6.296516e-01]],
[[-3.266496e+01,  7.230796e+01]],...
DESIRED: array([[[[ 4.419125e+01,  6.296306e-01]],
[[-3.266494e+01,  7.230795e+01]],...
2025-04-28 10:58:05.985175 test begin: paddle.maximum(Tensor([16, 18, 1, 2],"float32"), Tensor([16, 1, 6804, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([16, 18, 1, 2],"float32"), Tensor([16, 1, 6804, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 576 (0.174%)
Max absolute difference among violations: 0.24643898
Max relative difference among violations: 0.03576457
ACTUAL: array([[[[-1.466848e+01, -2.276670e+01]],
[[ 7.784938e+00, -1.468679e+00]],...
DESIRED: array([[[[-1.466849e+01, -2.276668e+01]],
[[ 7.784940e+00, -1.468675e+00]],...
2025-04-28 10:58:09.321266 test begin: paddle.maximum(Tensor([16, 19, 1, 2],"float32"), Tensor([16, 1, 11109, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([16, 19, 1, 2],"float32"), Tensor([16, 1, 11109, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 608 (0.164%)
Max absolute difference among violations: 0.12491894
Max relative difference among violations: 0.0283262
ACTUAL: array([[[[-1.466287e+01, -2.185196e+01]],
[[ 2.939579e+01,  3.404941e+01]],...
DESIRED: array([[[[-1.466285e+01, -2.185195e+01]],
[[ 2.939577e+01,  3.404941e+01]],...
2025-04-28 10:58:30.002301 test begin: paddle.maximum(Tensor([16, 21, 1, 2],"float32"), Tensor([16, 1, 7581, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([16, 21, 1, 2],"float32"), Tensor([16, 1, 7581, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 242592 (0.000412%)
Max absolute difference among violations: 0.02459639
Max relative difference among violations: 0.21852326
ACTUAL: array([[[[ 1.377672,  0.735109],
[-2.302338, -2.377727],
[ 0.293517,  0.712081],...
DESIRED: array([[[[ 1.377672,  0.735109],
[-2.302338, -2.377727],
[ 0.293517,  0.712081],...
2025-04-28 10:58:31.919304 test begin: paddle.maximum(Tensor([16, 21, 1, 2],"float32"), Tensor([16, 1, 9261, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([16, 21, 1, 2],"float32"), Tensor([16, 1, 9261, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 672 (0.149%)
Max absolute difference among violations: 0.17199612
Max relative difference among violations: 0.02992664
ACTUAL: array([[[[ 6.231192e+00, -1.770931e+01]],
[[-1.275818e+01, -4.346249e+01]],...
DESIRED: array([[[[ 6.231196e+00, -1.770931e+01]],
[[-1.275818e+01, -4.346251e+01]],...
2025-04-28 10:58:39.965902 test begin: paddle.maximum(Tensor([16, 22, 1, 2],"float32"), Tensor([16, 1, 8400, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([16, 22, 1, 2],"float32"), Tensor([16, 1, 8400, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 704 (0.142%)
Max absolute difference among violations: 0.15315425
Max relative difference among violations: 0.2177116
ACTUAL: array([[[[ 2.333872e+01,  3.432447e+01]],
[[ 1.882135e+00,  4.239051e+01]],...
DESIRED: array([[[[ 2.333871e+01,  3.432443e+01]],
[[ 1.882139e+00,  4.239053e+01]],...
2025-04-28 10:58:47.150976 test begin: paddle.maximum(Tensor([16, 23, 1, 2],"float32"), Tensor([16, 1, 6804, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([16, 23, 1, 2],"float32"), Tensor([16, 1, 6804, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 217728 (0.000459%)
Max absolute difference among violations: 0.12941054
Max relative difference among violations: 0.42607614
ACTUAL: array([[[[-0.186527,  0.093016],
[-1.026317,  0.404567],
[-0.987577,  1.174322],...
DESIRED: array([[[[-0.186527,  0.093016],
[-1.026317,  0.404567],
[-0.987577,  1.174322],...
2025-04-28 10:58:47.679084 test begin: paddle.maximum(Tensor([16, 23, 1, 2],"float32"), Tensor([16, 1, 7581, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([16, 23, 1, 2],"float32"), Tensor([16, 1, 7581, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 736 (0.136%)
Max absolute difference among violations: 0.14343548
Max relative difference among violations: 0.0135458
ACTUAL: array([[[[ 1.445747e+00, -3.032599e+00]],
[[-1.129501e+01, -1.702873e+01]],...
DESIRED: array([[[[ 1.445748e+00, -3.032598e+00]],
[[-1.129501e+01, -1.702873e+01]],...
2025-04-28 10:58:58.142495 test begin: paddle.maximum(Tensor([16, 24, 1, 2],"float32"), Tensor([16, 1, 9261, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([16, 24, 1, 2],"float32"), Tensor([16, 1, 9261, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 296352 (0.000337%)
Max absolute difference among violations: 0.1974504
Max relative difference among violations: 0.17063735
ACTUAL: array([[[[ 0.864764,  1.161169],
[-1.562185,  1.588701],
[-0.426325, -1.147151],...
DESIRED: array([[[[ 0.864764,  1.161169],
[-1.562185,  1.588701],
[-0.426325, -1.147151],...
2025-04-28 10:59:20.432893 test begin: paddle.maximum(Tensor([16, 28, 1, 2],"float32"), Tensor([16, 1, 11109, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([16, 28, 1, 2],"float32"), Tensor([16, 1, 11109, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 896 (0.112%)
Max absolute difference among violations: 0.21929932
Max relative difference among violations: 0.01195119
ACTUAL: array([[[[ 8.080816e+00, -8.191003e+00]],
[[ 1.076574e+01,  5.371603e+01]],...
DESIRED: array([[[[ 8.080814e+00, -8.191000e+00]],
[[ 1.076574e+01,  5.371611e+01]],...
2025-04-28 10:59:27.592760 test begin: paddle.maximum(Tensor([16, 29, 1, 2],"float32"), Tensor([16, 1, 10164, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([16, 29, 1, 2],"float32"), Tensor([16, 1, 10164, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 928 (0.108%)
Max absolute difference among violations: 0.20625877
Max relative difference among violations: 0.010806
ACTUAL: array([[[[-9.018084e+00,  9.117778e+00]],
[[-7.741953e+00, -3.081075e+00]],...
DESIRED: array([[[[-9.018062e+00,  9.117758e+00]],
[[-7.741960e+00, -3.081068e+00]],...
2025-04-28 10:59:36.516884 test begin: paddle.maximum(Tensor([16, 30, 1, 2],"float32"), Tensor([16, 1, 9261, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([16, 30, 1, 2],"float32"), Tensor([16, 1, 9261, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 960 (0.104%)
Max absolute difference among violations: 0.22979426
Max relative difference among violations: 0.05903849
ACTUAL: array([[[[ 4.999076e+00, -9.909312e+00]],
[[ 8.721600e+00, -8.803966e+00]],...
DESIRED: array([[[[ 4.999074e+00, -9.909308e+00]],
[[ 8.721598e+00, -8.803970e+00]],...
2025-04-28 10:59:51.198121 test begin: paddle.maximum(Tensor([16, 32, 1, 2],"float32"), Tensor([16, 1, 6804, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([16, 32, 1, 2],"float32"), Tensor([16, 1, 6804, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 217728 (0.000459%)
Max absolute difference among violations: 0.09672737
Max relative difference among violations: 0.02446643
ACTUAL: array([[[[-1.108983,  0.463325],
[ 0.652165,  0.026795],
[-0.082787, -0.382744],...
DESIRED: array([[[[-1.108983,  0.463325],
[ 0.652165,  0.026795],
[-0.082787, -0.382744],...
2025-04-28 10:59:51.928270 test begin: paddle.maximum(Tensor([16, 32, 1, 2],"float32"), Tensor([16, 1, 7581, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([16, 32, 1, 2],"float32"), Tensor([16, 1, 7581, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1024 (0.0977%)
Max absolute difference among violations: 0.20824146
Max relative difference among violations: 0.01292844
ACTUAL: array([[[[-10.752572, -28.620468]],
[[ -1.103694,  -6.566136]],...
DESIRED: array([[[[-10.752596, -28.620468]],
[[ -1.103694,  -6.566135]],...
2025-04-28 10:59:54.901732 test begin: paddle.maximum(Tensor([16, 33, 1, 2],"float32"), Tensor([16, 1, 8400, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([16, 33, 1, 2],"float32"), Tensor([16, 1, 8400, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 268800 (0.000372%)
Max absolute difference among violations: 0.0290854
Max relative difference among violations: 0.03078809
ACTUAL: array([[[[-0.119907, -0.006319],
[-0.695565, -0.151251],
[ 0.561287,  0.086732],...
DESIRED: array([[[[-0.119907, -0.006319],
[-0.695565, -0.151251],
[ 0.561287,  0.086732],...
2025-04-28 11:00:00.216949 test begin: paddle.maximum(Tensor([16, 35, 1, 2],"float32"), Tensor([16, 1, 11109, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([16, 35, 1, 2],"float32"), Tensor([16, 1, 11109, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1120 (0.0893%)
Max absolute difference among violations: 0.17286873
Max relative difference among violations: 0.01069868
ACTUAL: array([[[[ 14.588247,  13.672195]],
[[ 15.61381 , -18.388998]],...
DESIRED: array([[[[ 14.588266,  13.67218 ]],
[[ 15.61381 , -18.389011]],...
2025-04-28 11:00:11.808694 test begin: paddle.maximum(Tensor([16, 38, 1, 2],"float32"), Tensor([16, 1, 11109, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([16, 38, 1, 2],"float32"), Tensor([16, 1, 11109, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1216 (0.0822%)
Max absolute difference among violations: 0.2363801
Max relative difference among violations: 1.6697795
ACTUAL: array([[[[-19.622847,  -1.097951]],
[[ -0.180727,  -1.093699]],...
DESIRED: array([[[[-19.622856,  -1.097945]],
[[ -0.180727,  -1.093708]],...
2025-04-28 11:00:16.142189 test begin: paddle.maximum(Tensor([16, 39, 1, 2],"float32"), Tensor([16, 1, 3024, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([16, 39, 1, 2],"float32"), Tensor([16, 1, 3024, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1248 (0.0801%)
Max absolute difference among violations: 0.14323872
Max relative difference among violations: 0.48419932
ACTUAL: array([[[[-18.552036,   2.786171]],
[[ 11.365263,   8.624122]],...
DESIRED: array([[[[-18.552036,   2.78617 ]],
[[ 11.365271,   8.624119]],...
2025-04-28 11:00:19.558746 test begin: paddle.maximum(Tensor([16, 40, 1, 2],"float32"), Tensor([16, 1, 6804, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([16, 40, 1, 2],"float32"), Tensor([16, 1, 6804, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1280 (0.0781%)
Max absolute difference among violations: 0.12541658
Max relative difference among violations: 0.14590664
ACTUAL: array([[[[  1.960125,   3.763964]],
[[ -1.448508,  12.93127 ]],...
DESIRED: array([[[[  1.960127,   3.763963]],
[[ -1.448514,  12.931271]],...
2025-04-28 11:00:20.593704 test begin: paddle.maximum(Tensor([16, 40, 1, 2],"float32"), Tensor([16, 1, 8400, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([16, 40, 1, 2],"float32"), Tensor([16, 1, 8400, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1280 (0.0781%)
Max absolute difference among violations: 0.23918915
Max relative difference among violations: 0.01306527
ACTUAL: array([[[[-21.557184, -11.448289]],
[[  3.405615,  11.723973]],...
DESIRED: array([[[[-21.55717 , -11.448286]],
[[  3.405614,  11.724009]],...
2025-04-28 11:00:24.085989 test begin: paddle.maximum(Tensor([16, 43, 1, 2],"float32"), Tensor([16, 1, 10164, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([16, 43, 1, 2],"float32"), Tensor([16, 1, 10164, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2 / 1376 (0.145%)
Max absolute difference among violations: 0.1899054
Max relative difference among violations: 0.07634266
ACTUAL: array([[[[ 26.152067,  -1.388462]],
[[ 13.755628,   8.796206]],...
DESIRED: array([[[[ 26.152046,  -1.388465]],
[[ 13.755747,   8.796211]],...
2025-04-28 11:00:31.465764 test begin: paddle.maximum(Tensor([16, 48, 1, 2],"float32"), Tensor([16, 1, 3549, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([16, 48, 1, 2],"float32"), Tensor([16, 1, 3549, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 113568 (0.000881%)
Max absolute difference among violations: 0.22535521
Max relative difference among violations: 0.29052797
ACTUAL: array([[[[-1.663893e+00, -8.345983e-01],
[ 1.516844e-01,  2.522998e-01],
[ 9.752395e-01,  2.373682e+00],...
DESIRED: array([[[[-1.663893e+00, -8.345984e-01],
[ 1.516844e-01,  2.522998e-01],
[ 9.752395e-01,  2.373682e+00],...
2025-04-28 11:00:33.059758 test begin: paddle.maximum(Tensor([16, 49, 1, 2],"float32"), Tensor([16, 1, 11109, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([16, 49, 1, 2],"float32"), Tensor([16, 1, 11109, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1568 (0.0638%)
Max absolute difference among violations: 0.23458576
Max relative difference among violations: 0.02670076
ACTUAL: array([[[[ 2.450695e+01, -7.386289e+00]],
[[ 2.106119e+01, -4.499012e-02]],...
DESIRED: array([[[[ 2.450690e+01, -7.386317e+00]],
[[ 2.106119e+01, -4.498529e-02]],...
2025-04-28 11:00:39.775140 test begin: paddle.maximum(Tensor([16, 55, 1, 2],"float32"), Tensor([16, 1, 8400, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([16, 55, 1, 2],"float32"), Tensor([16, 1, 8400, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1760 (0.0568%)
Max absolute difference among violations: 0.0386824
Max relative difference among violations: 0.05207394
ACTUAL: array([[[[  1.666111,   2.333104]],
[[ -6.30314 , -13.327152]],...
DESIRED: array([[[[  1.66611 ,   2.333099]],
[[ -6.303134, -13.327144]],...
2025-04-28 11:00:41.545675 test begin: paddle.maximum(Tensor([16, 7, 1, 2],"float32"), Tensor([16, 1, 12096, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([16, 7, 1, 2],"float32"), Tensor([16, 1, 12096, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 387072 (0.000258%)
Max absolute difference among violations: 0.22100604
Max relative difference among violations: 0.17629355
ACTUAL: array([[[[-0.269935, -0.465645],
[-0.138365, -0.72282 ],
[-0.713141,  0.      ],...
DESIRED: array([[[[-0.269935, -0.465645],
[-0.138365, -0.72282 ],
[-0.713141,  0.      ],...
2025-04-28 11:01:46.196104 test begin: paddle.maximum(Tensor([16121, 811],"float32"), Tensor([1],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([16121, 811],"float32"), Tensor([1],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 13074131 (7.65e-06%)
Max absolute difference among violations: 0.08877811
Max relative difference among violations: 1.
ACTUAL: array([[ 0.      ,  0.      , -0.      , ..., -0.      ,  0.      ,
-0.      ],
[-0.      , -0.      ,  0.      , ..., -0.      , -0.      ,...
DESIRED: array([[0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],
[0.      , 0.      , 0.      , ..., 0.      , 0.      , 0.      ],
[0.133415, 0.      , 0.      , ..., 0.      , 0.      , 0.      ],...
2025-04-28 11:05:22.339468 test begin: paddle.maximum(Tensor([168, 1, 2],"float32"), Tensor([1, 4725, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([168, 1, 2],"float32"), Tensor([1, 4725, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 9450 (0.0106%)
Max absolute difference among violations: 0.01632592
Max relative difference among violations: 0.14541219
ACTUAL: array([[[-2.184929, -2.4991  ],
[-0.971095,  4.429152],
[-2.571654,  0.249932],...
DESIRED: array([[[-2.184929, -2.4991  ],
[-0.971095,  4.429152],
[-2.571654,  0.249932],...
2025-04-28 11:05:23.433247 test begin: paddle.maximum(Tensor([168, 1, 2],"float32"), Tensor([1, 7581, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([168, 1, 2],"float32"), Tensor([1, 7581, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 336 (0.298%)
Max absolute difference among violations: 0.12390774
Max relative difference among violations: 0.12285921
ACTUAL: array([[[ 8.474423e+00,  2.098634e+01]],
[[-1.375336e+00, -5.071968e+00]],...
DESIRED: array([[[ 8.474422e+00,  2.098630e+01]],
[[-1.375335e+00, -5.071966e+00]],...
2025-04-28 11:06:31.117950 test begin: paddle.maximum(Tensor([17, 1, 2],"float32"), Tensor([191835, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([17, 1, 2],"float32"), Tensor([191835, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 383670 (0.000261%)
Max absolute difference among violations: 0.23339152
Max relative difference among violations: 0.14562684
ACTUAL: array([[ 0.49744 , -1.233381],
[-0.027123, -1.390832],
[ 0.112717, -1.360759],...
DESIRED: array([[ 0.49744 , -1.233381],
[-0.027123, -1.390832],
[ 0.112717, -1.360759],...
2025-04-28 11:06:37.119424 test begin: paddle.maximum(Tensor([17, 1, 2],"float32"), Tensor([214848, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([17, 1, 2],"float32"), Tensor([214848, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 429696 (0.000233%)
Max absolute difference among violations: 0.0596391
Max relative difference among violations: 0.10524262
ACTUAL: array([[-1.816297e+00,  1.125939e+00],
[-8.971542e-03,  0.000000e+00],
[ 8.618398e-01,  1.196563e-04],...
DESIRED: array([[-1.816297e+00,  1.125939e+00],
[-8.971557e-03,  0.000000e+00],
[ 8.618398e-01,  1.196563e-04],...
2025-04-28 11:06:39.394295 test begin: paddle.maximum(Tensor([17, 1, 2],"float32"), Tensor([223554, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([17, 1, 2],"float32"), Tensor([223554, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 447108 (0.000224%)
Max absolute difference among violations: 0.11394815
Max relative difference among violations: 1.8789729
ACTUAL: array([[-0.061146,  1.569874],
[-0.298774,  0.340573],
[-0.887203,  0.402429],...
DESIRED: array([[-0.061146,  1.569873],
[-0.298774,  0.340573],
[-0.887203,  0.402428],...
2025-04-28 11:06:40.183967 test begin: paddle.maximum(Tensor([17, 1, 2],"float32"), Tensor([223827, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([17, 1, 2],"float32"), Tensor([223827, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 447654 (0.000223%)
Max absolute difference among violations: 0.05049556
Max relative difference among violations: 0.0639628
ACTUAL: array([[-0.773055,  0.962601],
[ 0.691534, -0.300301],
[-0.776385, -0.015603],...
DESIRED: array([[-0.773054,  0.962601],
[ 0.691534, -0.300301],
[-0.776385, -0.015603],...
2025-04-28 11:06:46.310843 test begin: paddle.maximum(Tensor([17, 1, 2],"float32"), Tensor([253728, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([17, 1, 2],"float32"), Tensor([253728, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 34 (2.94%)
Max absolute difference among violations: 0.24369717
Max relative difference among violations: 0.02050634
ACTUAL: array([[[ 341.58237 ,  -71.22092 ]],
[[  16.56632 ,  -57.926804]],...
DESIRED: array([[[ 341.58093 ,  -71.2213  ]],
[[  16.56604 ,  -57.926765]],...
2025-04-28 11:06:50.804853 test begin: paddle.maximum(Tensor([17, 1, 2],"float32"), Tensor([264978, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([17, 1, 2],"float32"), Tensor([264978, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 529956 (0.000189%)
Max absolute difference among violations: 0.08863705
Max relative difference among violations: 0.46149164
ACTUAL: array([[-1.134673, -1.209221],
[ 0.342461,  0.743889],
[ 0.07901 ,  0.697772],...
DESIRED: array([[-1.134673, -1.209221],
[ 0.342461,  0.743889],
[ 0.07901 ,  0.697772],...
2025-04-28 11:06:53.786984 test begin: paddle.maximum(Tensor([17, 1, 2],"float32"), Tensor([270096, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([17, 1, 2],"float32"), Tensor([270096, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 540192 (0.000185%)
Max absolute difference among violations: 0.11186543
Max relative difference among violations: 0.321095
ACTUAL: array([[-0.306317, -0.674562],
[-0.386489,  0.      ],
[ 0.817964, -1.010136],...
DESIRED: array([[-0.306317, -0.674562],
[-0.386489,  0.      ],
[ 0.817964, -1.010136],...
2025-04-28 11:07:07.514960 test begin: paddle.maximum(Tensor([17, 1, 2],"float32"), Tensor([321759, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([17, 1, 2],"float32"), Tensor([321759, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 643518 (0.000155%)
Max absolute difference among violations: 0.19434991
Max relative difference among violations: 0.76910245
ACTUAL: array([[-0.450684,  1.067971],
[ 0.      ,  0.035375],
[ 0.064549,  0.665132],...
DESIRED: array([[-0.450684,  1.067971],
[ 0.      ,  0.035375],
[ 0.064549,  0.665133],...
2025-04-28 11:07:11.185058 test begin: paddle.maximum(Tensor([17, 1, 2],"float32"), Tensor([330429, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([17, 1, 2],"float32"), Tensor([330429, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 660858 (0.000151%)
Max absolute difference among violations: 0.01709379
Max relative difference among violations: 1.
ACTUAL: array([[ 0.736406,  0.      ],
[-0.591003, -1.402786],
[-0.454304,  0.4563  ],...
DESIRED: array([[ 0.736406,  0.      ],
[-0.591003, -1.402786],
[-0.454304,  0.4563  ],...
2025-04-28 11:07:12.287970 test begin: paddle.maximum(Tensor([17, 1, 2],"float32"), Tensor([339150, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([17, 1, 2],"float32"), Tensor([339150, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 34 (2.94%)
Max absolute difference among violations: 0.12437534
Max relative difference among violations: 0.01150617
ACTUAL: array([[[-142.5209  ,    5.310373]],
[[  23.661232,   -5.740692]],...
DESIRED: array([[[-142.52014 ,    5.310368]],
[[  23.661896,   -5.739956]],...
2025-04-28 11:07:17.039415 test begin: paddle.maximum(Tensor([17, 1, 2],"float32"), Tensor([354501, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([17, 1, 2],"float32"), Tensor([354501, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 709002 (0.000141%)
Max absolute difference among violations: 0.17626595
Max relative difference among violations: 0.36155438
ACTUAL: array([[ 1.159141, -0.505742],
[-0.613195,  0.828004],
[-0.152625,  0.201932],...
DESIRED: array([[ 1.159141, -0.505742],
[-0.613195,  0.828004],
[-0.152625,  0.201932],...
2025-04-28 11:07:19.797701 test begin: paddle.maximum(Tensor([17, 1, 2],"float32"), Tensor([359613, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([17, 1, 2],"float32"), Tensor([359613, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 719226 (0.000139%)
Max absolute difference among violations: 0.07814753
Max relative difference among violations: 0.04220542
ACTUAL: array([[-0.072485,  1.3612  ],
[ 0.125994, -1.17187 ],
[-0.703567, -1.392512],...
DESIRED: array([[-0.072485,  1.3612  ],
[ 0.125994, -1.17187 ],
[-0.703567, -1.392512],...
2025-04-28 11:08:40.672337 test begin: paddle.maximum(Tensor([1728, 1, 2],"float32"), Tensor([1, 2577, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([1728, 1, 2],"float32"), Tensor([1, 2577, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 3456 (0.0289%)
Max absolute difference among violations: 0.09145522
Max relative difference among violations: 0.0940975
ACTUAL: array([[[ 0.955568,  4.052531]],
[[22.45644 , 26.523354]],...
DESIRED: array([[[ 0.955576,  4.052526]],
[[22.45648 , 26.523367]],...
2025-04-28 11:10:26.331590 test begin: paddle.maximum(Tensor([1770, 1, 2],"float32"), Tensor([25, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([1770, 1, 2],"float32"), Tensor([25, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 3540 (0.0282%)
Max absolute difference among violations: 0.04941857
Max relative difference among violations: 0.03809243
ACTUAL: array([[[-8.792784e-01, -8.911256e-01]],
[[ 8.106232e-04,  2.441717e-01]],...
DESIRED: array([[[-8.792784e-01, -8.911255e-01]],
[[ 8.106232e-04,  2.441717e-01]],...
2025-04-28 11:11:24.215729 test begin: paddle.maximum(Tensor([1792, 1, 2],"float32"), Tensor([1, 2125, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([1792, 1, 2],"float32"), Tensor([1, 2125, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2 / 3584 (0.0558%)
Max absolute difference among violations: 0.14787316
Max relative difference among violations: 0.06221239
ACTUAL: array([[[ -0.22353 ,  -4.03962 ]],
[[ -1.668663, -21.034634]],...
DESIRED: array([[[ -0.223525,  -4.039621]],
[[ -1.668654, -21.034685]],...
2025-04-28 11:11:45.974601 test begin: paddle.maximum(Tensor([18, 1, 2],"float32"), Tensor([166533, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([18, 1, 2],"float32"), Tensor([166533, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 333066 (0.0003%)
Max absolute difference among violations: 0.1767596
Max relative difference among violations: 0.11734387
ACTUAL: array([[ 1.4437  , -0.307586],
[ 0.252439, -0.210943],
[-0.727563, -0.334343],...
DESIRED: array([[ 1.4437  , -0.307586],
[ 0.252439, -0.210943],
[-0.727563, -0.334343],...
2025-04-28 11:11:52.267527 test begin: paddle.maximum(Tensor([18, 1, 2],"float32"), Tensor([214848, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([18, 1, 2],"float32"), Tensor([214848, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 429696 (0.000233%)
Max absolute difference among violations: 0.04721951
Max relative difference among violations: 0.0315279
ACTUAL: array([[-1.364623, -1.023962],
[ 0.301049,  0.286472],
[-1.029862, -0.100029],...
DESIRED: array([[-1.364623, -1.023962],
[ 0.301049,  0.286472],
[-1.029862, -0.100029],...
2025-04-28 11:11:55.645529 test begin: paddle.maximum(Tensor([18, 1, 2],"float32"), Tensor([229152, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([18, 1, 2],"float32"), Tensor([229152, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 36 (2.78%)
Max absolute difference among violations: 0.1109457
Max relative difference among violations: 0.01145772
ACTUAL: array([[[ -40.046307,   37.210094]],
[[  -7.613493,   39.462917]],...
DESIRED: array([[[ -40.046406,   37.210022]],
[[  -7.613527,   39.462807]],...
2025-04-28 11:11:57.251768 test begin: paddle.maximum(Tensor([18, 1, 2],"float32"), Tensor([236616, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([18, 1, 2],"float32"), Tensor([236616, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 473232 (0.000211%)
Max absolute difference among violations: 0.1662631
Max relative difference among violations: 0.13130513
ACTUAL: array([[ 0.328573, -0.583077],
[-0.214843, -0.239371],
[ 0.148755, -0.4272  ],...
DESIRED: array([[ 0.328573, -0.583077],
[-0.214843, -0.239371],
[ 0.148755, -0.4272  ],...
2025-04-28 11:12:05.802379 test begin: paddle.maximum(Tensor([18, 1, 2],"float32"), Tensor([260865, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([18, 1, 2],"float32"), Tensor([260865, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 521730 (0.000192%)
Max absolute difference among violations: 0.19210479
Max relative difference among violations: 1.
ACTUAL: array([[ 0.114026,  1.875632],
[ 0.660483, -0.142513],
[-0.295843, -0.180895],...
DESIRED: array([[ 0.114026,  1.875632],
[ 0.660483, -0.142513],
[-0.295843, -0.180895],...
2025-04-28 11:12:11.775078 test begin: paddle.maximum(Tensor([18, 1, 2],"float32"), Tensor([268569, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([18, 1, 2],"float32"), Tensor([268569, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 537138 (0.000186%)
Max absolute difference among violations: 0.12565923
Max relative difference among violations: 0.7111706
ACTUAL: array([[ 0.221188,  0.074111],
[ 0.111975,  0.      ],
[ 1.861494, -2.234427],...
DESIRED: array([[ 0.221188,  0.074111],
[ 0.111975,  0.      ],
[ 1.861494, -2.234427],...
2025-04-28 11:12:53.816986 test begin: paddle.maximum(Tensor([18, 1, 2],"float32"), Tensor([58800, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([18, 1, 2],"float32"), Tensor([58800, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 117600 (0.00085%)
Max absolute difference among violations: 0.0340158
Max relative difference among violations: 0.16589087
ACTUAL: array([[ 0.114306,  0.482032],
[ 0.      , -0.199936],
[-0.074832, -1.222262],...
DESIRED: array([[ 0.114305,  0.482032],
[ 0.      , -0.199936],
[-0.074832, -1.222262],...
2025-04-28 11:14:36.407741 test begin: paddle.maximum(Tensor([184, 1, 2],"float32"), Tensor([1, 10164, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([184, 1, 2],"float32"), Tensor([1, 10164, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 20328 (0.00492%)
Max absolute difference among violations: 0.1377058
Max relative difference among violations: 0.01685
ACTUAL: array([[[-3.517323, -0.375878],
[ 4.416337, -1.232798],
[-6.403769, -1.2148  ],...
DESIRED: array([[[-3.517321, -0.375878],
[ 4.416338, -1.232798],
[-6.40377 , -1.2148  ],...
2025-04-28 11:14:38.843642 test begin: paddle.maximum(Tensor([184, 1, 2],"float32"), Tensor([1, 5376, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([184, 1, 2],"float32"), Tensor([1, 5376, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 368 (0.272%)
Max absolute difference among violations: 0.17847824
Max relative difference among violations: 0.04186087
ACTUAL: array([[[-6.943695e+00, -2.583266e-01]],
[[-6.108129e+00,  5.550533e+00]],...
DESIRED: array([[[-6.943698e+00, -2.583251e-01]],
[[-6.108117e+00,  5.550529e+00]],...
2025-04-28 11:14:54.206443 test begin: paddle.maximum(Tensor([1846, 1, 2],"float32"), Tensor([20, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([1846, 1, 2],"float32"), Tensor([20, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 3692 (0.0271%)
Max absolute difference among violations: 0.15559483
Max relative difference among violations: 0.16365133
ACTUAL: array([[[-0.495509,  0.593992]],
[[ 1.372683,  0.651303]],...
DESIRED: array([[[-0.495509,  0.593992]],
[[ 1.372683,  0.651303]],...
2025-04-28 11:15:13.129275 test begin: paddle.maximum(Tensor([1856, 1, 2],"float32"), Tensor([1, 1360, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([1856, 1, 2],"float32"), Tensor([1, 1360, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 3712 (0.0269%)
Max absolute difference among violations: 0.14429855
Max relative difference among violations: 0.01418669
ACTUAL: array([[[ -5.678658,  10.714294]],
[[ -1.381605,  -5.367885]],...
DESIRED: array([[[ -5.678659,  10.7143  ]],
[[ -1.381605,  -5.367884]],...
2025-04-28 11:16:52.473474 test begin: paddle.maximum(Tensor([19, 1, 2],"float32"), Tensor([205923, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([19, 1, 2],"float32"), Tensor([205923, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2 / 411846 (0.000486%)
Max absolute difference among violations: 0.14652559
Max relative difference among violations: 0.5310244
ACTUAL: array([[-0.497913,  0.932947],
[-1.263219,  0.364712],
[ 0.663995, -0.516772],...
DESIRED: array([[-0.497913,  0.932947],
[-1.263219,  0.364712],
[ 0.663995, -0.516772],...
2025-04-28 11:16:56.275328 test begin: paddle.maximum(Tensor([19, 1, 2],"float32"), Tensor([230175, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([19, 1, 2],"float32"), Tensor([230175, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 460350 (0.000217%)
Max absolute difference among violations: 0.235809
Max relative difference among violations: 0.74699366
ACTUAL: array([[-0.265448,  0.161633],
[-2.037582, -0.382831],
[ 2.269315,  1.393482],...
DESIRED: array([[-0.265448,  0.161633],
[-2.037582, -0.382831],
[ 2.269314,  1.393482],...
2025-04-28 11:16:57.143866 test begin: paddle.maximum(Tensor([19, 1, 2],"float32"), Tensor([230202, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([19, 1, 2],"float32"), Tensor([230202, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 460404 (0.000217%)
Max absolute difference among violations: 0.17973834
Max relative difference among violations: 0.28278136
ACTUAL: array([[-0.959153, -0.559312],
[ 1.406599, -1.4171  ],
[ 1.648113, -0.080478],...
DESIRED: array([[-0.959153, -0.559312],
[ 1.406599, -1.4171  ],
[ 1.648113, -0.080478],...
2025-04-28 11:16:58.930625 test begin: paddle.maximum(Tensor([19, 1, 2],"float32"), Tensor([243474, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([19, 1, 2],"float32"), Tensor([243474, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 486948 (0.000205%)
Max absolute difference among violations: 0.18173738
Max relative difference among violations: 0.9900977
ACTUAL: array([[-0.34991 , -0.391059],
[ 1.370593,  0.476906],
[-0.453392,  0.027553],...
DESIRED: array([[-0.34991 , -0.391059],
[ 1.370593,  0.476906],
[-0.453392,  0.027553],...
2025-04-28 11:17:06.235874 test begin: paddle.maximum(Tensor([19, 1, 2],"float32"), Tensor([261681, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([19, 1, 2],"float32"), Tensor([261681, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 523362 (0.000191%)
Max absolute difference among violations: 0.10644788
Max relative difference among violations: 0.2678491
ACTUAL: array([[ 1.418848, -0.154958],
[ 1.40595 , -0.23918 ],
[-1.02947 , -0.494802],...
DESIRED: array([[ 1.418848, -0.154958],
[ 1.40595 , -0.23918 ],
[-1.02947 , -0.494802],...
2025-04-28 11:17:09.102326 test begin: paddle.maximum(Tensor([19, 1, 2],"float32"), Tensor([268569, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([19, 1, 2],"float32"), Tensor([268569, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 537138 (0.000186%)
Max absolute difference among violations: 0.06476676
Max relative difference among violations: 0.05043741
ACTUAL: array([[ 0.248585, -0.15121 ],
[-0.214666, -0.814779],
[-0.282651, -0.013813],...
DESIRED: array([[ 0.248585, -0.15121 ],
[-0.214666, -0.814779],
[-0.282651, -0.013813],...
2025-04-28 11:17:18.413367 test begin: paddle.maximum(Tensor([19, 1, 2],"float32"), Tensor([302832, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([19, 1, 2],"float32"), Tensor([302832, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 605664 (0.000165%)
Max absolute difference among violations: 0.23083204
Max relative difference among violations: 0.8610133
ACTUAL: array([[-0.266627,  0.992874],
[ 0.46024 ,  0.495797],
[-0.670981, -0.82317 ],...
DESIRED: array([[-0.266627,  0.992874],
[ 0.46024 ,  0.495797],
[-0.670981, -0.82317 ],...
2025-04-28 11:17:23.938740 test begin: paddle.maximum(Tensor([19, 1, 2],"float32"), Tensor([319200, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([19, 1, 2],"float32"), Tensor([319200, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 638400 (0.000157%)
Max absolute difference among violations: 0.03591132
Max relative difference among violations: 0.03256828
ACTUAL: array([[-1.243066,  0.63752 ],
[-1.1434  , -0.65218 ],
[-1.462086,  1.438468],...
DESIRED: array([[-1.243066,  0.63752 ],
[-1.1434  , -0.65218 ],
[-1.462086,  1.438468],...
2025-04-28 11:17:25.129676 test begin: paddle.maximum(Tensor([19, 1, 2],"float32"), Tensor([320739, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([19, 1, 2],"float32"), Tensor([320739, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2 / 641478 (0.000312%)
Max absolute difference among violations: 0.14315307
Max relative difference among violations: 1.
ACTUAL: array([[-0.180969,  0.662085],
[ 1.321472, -0.031951],
[-0.250617, -0.066081],...
DESIRED: array([[-0.180969,  0.662086],
[ 1.321472, -0.031951],
[-0.250617, -0.066081],...
2025-04-28 11:17:28.557703 test begin: paddle.maximum(Tensor([19, 1, 2],"float32"), Tensor([322272, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([19, 1, 2],"float32"), Tensor([322272, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 644544 (0.000155%)
Max absolute difference among violations: 0.10677814
Max relative difference among violations: 0.1917559
ACTUAL: array([[-1.064842, -0.291163],
[ 0.163491, -0.838063],
[ 0.350301,  0.872599],...
DESIRED: array([[-1.064842, -0.291163],
[ 0.163491, -0.838063],
[ 0.350301,  0.872599],...
2025-04-28 11:17:31.914254 test begin: paddle.maximum(Tensor([19, 1, 2],"float32"), Tensor([340176, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([19, 1, 2],"float32"), Tensor([340176, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 680352 (0.000147%)
Max absolute difference among violations: 0.18972702
Max relative difference among violations: 2.9779952
ACTUAL: array([[ 0.380172, -1.790808],
[-0.311527, -0.317104],
[-0.175141,  0.520507],...
DESIRED: array([[ 0.380172, -1.790808],
[-0.311527, -0.317104],
[-0.175141,  0.520507],...
2025-04-28 11:17:34.377211 test begin: paddle.maximum(Tensor([19, 1, 2],"float32"), Tensor([367059, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([19, 1, 2],"float32"), Tensor([367059, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 734118 (0.000136%)
Max absolute difference among violations: 0.02024138
Max relative difference among violations: 0.02341004
ACTUAL: array([[-0.866551, -0.964131],
[ 0.970143, -1.533397],
[-0.249743, -0.460748],...
DESIRED: array([[-0.866551, -0.964131],
[ 0.970143, -1.533397],
[-0.249743, -0.460748],...
2025-04-28 11:18:34.680494 test begin: paddle.maximum(Tensor([192, 1, 2],"float32"), Tensor([1, 9261, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([192, 1, 2],"float32"), Tensor([1, 9261, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 384 (0.26%)
Max absolute difference among violations: 0.2407608
Max relative difference among violations: 0.02505909
ACTUAL: array([[[-3.138685e+01, -4.734863e+00]],
[[-1.136459e+01,  1.168446e+00]],...
DESIRED: array([[[-3.138687e+01, -4.734844e+00]],
[[-1.136455e+01,  1.168440e+00]],...
2025-04-28 11:21:00.345636 test begin: paddle.maximum(Tensor([1984, 1, 2],"float32"), Tensor([1, 1726, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([1984, 1, 2],"float32"), Tensor([1, 1726, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 3968 (0.0252%)
Max absolute difference among violations: 0.18470752
Max relative difference among violations: 0.11912625
ACTUAL: array([[[-10.981369,  -1.416798]],
[[  2.614114,  -0.454495]],...
DESIRED: array([[[-10.98137 ,  -1.416799]],
[[  2.614116,  -0.4545  ]],...
2025-04-28 11:22:26.007350 test begin: paddle.maximum(Tensor([2, 1, 2],"float32"), Tensor([276210, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([2, 1, 2],"float32"), Tensor([276210, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 4 (25%)
Max absolute difference among violations: 0.10491776
Max relative difference among violations: 0.02740686
ACTUAL: array([[[-25.192677, 110.388336]],
[[ 14.161843,  -3.933075]]], dtype=float32)
DESIRED: array([[[-25.192553, 110.38847 ]],
[[ 14.161753,  -3.828157]]], dtype=float32)
2025-04-28 11:22:35.123017 test begin: paddle.maximum(Tensor([2, 1, 2],"float32"), Tensor([331251, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([2, 1, 2],"float32"), Tensor([331251, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 662502 (0.000151%)
Max absolute difference among violations: 0.0455851
Max relative difference among violations: 1.
ACTUAL: array([[-0.606607, -0.057134],
[ 0.170722,  0.      ],
[-0.43839 ,  0.467912],...
DESIRED: array([[-0.606607, -0.057134],
[ 0.170722,  0.      ],
[-0.43839 ,  0.467912],...
2025-04-28 11:22:36.158436 test begin: paddle.maximum(Tensor([2, 1, 2],"float32"), Tensor([337620, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([2, 1, 2],"float32"), Tensor([337620, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 675240 (0.000148%)
Max absolute difference among violations: 0.17093211
Max relative difference among violations: 4.416349
ACTUAL: array([[-0.430399,  0.      ],
[ 0.305822,  0.      ],
[ 0.496058, -0.807971],...
DESIRED: array([[-0.430399,  0.      ],
[ 0.305822,  0.      ],
[ 0.496058, -0.807971],...
2025-04-28 11:22:39.485545 test begin: paddle.maximum(Tensor([2, 1, 2],"float32"), Tensor([359613, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([2, 1, 2],"float32"), Tensor([359613, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 719226 (0.000139%)
Max absolute difference among violations: 0.063061
Max relative difference among violations: 0.14606069
ACTUAL: array([[0.      , 0.873995],
[0.442382, 0.363858],
[0.      , 0.56373 ],...
DESIRED: array([[0.      , 0.873995],
[0.442382, 0.363858],
[0.      , 0.56373 ],...
2025-04-28 11:23:07.894905 test begin: paddle.maximum(Tensor([2, 1, 2],"float32"), Tensor([73365, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([2, 1, 2],"float32"), Tensor([73365, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 146730 (0.000682%)
Max absolute difference among violations: 0.22074461
Max relative difference among violations: 1.
ACTUAL: array([[-0.362898,  0.      ],
[ 0.122997, -0.503014],
[ 0.      ,  0.723204],...
DESIRED: array([[-0.362898,  0.      ],
[ 0.122997, -0.503014],
[ 0.      ,  0.723204],...
2025-04-28 11:23:29.554756 test begin: paddle.maximum(Tensor([2, 100, 1, 2],"float32"), Tensor([2, 1, 3024, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([2, 100, 1, 2],"float32"), Tensor([2, 1, 3024, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 12096 (0.00827%)
Max absolute difference among violations: 0.1398282
Max relative difference among violations: 0.04354377
ACTUAL: array([[[[ 0.734545,  2.371526],
[-0.527244, -4.849611],
[ 1.089343, -0.208427],...
DESIRED: array([[[[ 0.734545,  2.371526],
[-0.527244, -4.849611],
[ 1.089344, -0.208427],...
2025-04-28 11:23:38.289747 test begin: paddle.maximum(Tensor([2, 108, 1, 2],"float32"), Tensor([2, 1, 6069, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([2, 108, 1, 2],"float32"), Tensor([2, 1, 6069, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 432 (0.231%)
Max absolute difference among violations: 0.23997927
Max relative difference among violations: 0.03507986
ACTUAL: array([[[[-4.137404e+00, -7.299741e+00]],
[[-1.194345e+01, -6.267732e+00]],...
DESIRED: array([[[[-4.137404e+00, -7.299737e+00]],
[[-1.194346e+01, -6.267746e+00]],...
2025-04-28 11:23:42.521325 test begin: paddle.maximum(Tensor([2, 11, 1, 2],"float32"), Tensor([2, 1, 5376, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([2, 11, 1, 2],"float32"), Tensor([2, 1, 5376, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 21504 (0.00465%)
Max absolute difference among violations: 0.1258148
Max relative difference among violations: 0.1827912
ACTUAL: array([[[[ 0.      ,  0.      ],
[ 0.      ,  1.46503 ],
[-0.162895,  0.223846],...
DESIRED: array([[[[ 0.      ,  0.      ],
[ 0.      ,  1.46503 ],
[-0.162895,  0.223846],...
2025-04-28 11:23:48.827552 test begin: paddle.maximum(Tensor([2, 114, 1, 2],"float32"), Tensor([2, 1, 6069, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([2, 114, 1, 2],"float32"), Tensor([2, 1, 6069, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 24276 (0.00412%)
Max absolute difference among violations: 0.05690037
Max relative difference among violations: 3.7112203
ACTUAL: array([[[[ 1.006815, -0.707647],
[ 0.770794, -0.618193],
[-0.35791 ,  0.499992],...
DESIRED: array([[[[ 1.006815, -0.707647],
[ 0.770795, -0.618194],
[-0.35791 ,  0.499992],...
2025-04-28 11:23:52.583550 test begin: paddle.maximum(Tensor([2, 117, 1, 2],"float32"), Tensor([2, 1, 12096, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([2, 117, 1, 2],"float32"), Tensor([2, 1, 12096, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 468 (0.214%)
Max absolute difference among violations: 0.24779797
Max relative difference among violations: 0.02150096
ACTUAL: array([[[[ 3.307639e+01,  3.861764e+01]],
[[-2.298671e+01, -2.631079e+01]],...
DESIRED: array([[[[ 3.307641e+01,  3.861780e+01]],
[[-2.298675e+01, -2.631075e+01]],...
2025-04-28 11:24:00.141854 test begin: paddle.maximum(Tensor([2, 120, 1, 2],"float32"), Tensor([2, 1, 6804, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([2, 120, 1, 2],"float32"), Tensor([2, 1, 6804, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 480 (0.208%)
Max absolute difference among violations: 0.06850803
Max relative difference among violations: 0.07246235
ACTUAL: array([[[[ 21.37548 , -27.335684]],
[[  4.366564,  20.608234]],...
DESIRED: array([[[[ 21.375515, -27.335686]],
[[  4.366564,  20.608255]],...
2025-04-28 11:24:13.863684 test begin: paddle.maximum(Tensor([2, 132, 1, 2],"float32"), Tensor([2, 1, 4116, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([2, 132, 1, 2],"float32"), Tensor([2, 1, 4116, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 528 (0.189%)
Max absolute difference among violations: 0.0973022
Max relative difference among violations: 0.05356089
ACTUAL: array([[[[ 2.157825e+01, -6.545026e+00]],
[[-3.250897e-01,  5.927647e+00]],...
DESIRED: array([[[[ 2.157826e+01, -6.545057e+00]],
[[-3.250900e-01,  5.927665e+00]],...
2025-04-28 11:24:18.444513 test begin: paddle.maximum(Tensor([2, 139, 1, 2],"float32"), Tensor([2, 1, 12096, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([2, 139, 1, 2],"float32"), Tensor([2, 1, 12096, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 556 (0.18%)
Max absolute difference among violations: 0.01622152
Max relative difference among violations: 0.07506755
ACTUAL: array([[[[-2.042873e+00,  5.203490e+01]],
[[-1.576489e+01, -1.245885e+01]],...
DESIRED: array([[[[-2.042855e+00,  5.203493e+01]],
[[-1.576488e+01, -1.245884e+01]],...
2025-04-28 11:24:23.506815 test begin: paddle.maximum(Tensor([2, 140, 1, 2],"float32"), Tensor([2, 1, 11109, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([2, 140, 1, 2],"float32"), Tensor([2, 1, 11109, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 560 (0.179%)
Max absolute difference among violations: 0.23200417
Max relative difference among violations: 0.02558037
ACTUAL: array([[[[-3.289026e+00, -2.364099e+01]],
[[ 2.892966e+00,  1.450731e+01]],...
DESIRED: array([[[[-3.289046e+00, -2.364106e+01]],
[[ 2.892967e+00,  1.450733e+01]],...
2025-04-28 11:24:26.047916 test begin: paddle.maximum(Tensor([2, 145, 1, 2],"float32"), Tensor([2, 1, 7581, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([2, 145, 1, 2],"float32"), Tensor([2, 1, 7581, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 30324 (0.0033%)
Max absolute difference among violations: 0.1523099
Max relative difference among violations: 0.04267677
ACTUAL: array([[[[-9.242441, -0.306972],
[-0.479578,  1.529023],
[ 6.107535,  0.680397],...
DESIRED: array([[[[-9.242441, -0.306972],
[-0.479578,  1.529023],
[ 6.107535,  0.680398],...
2025-04-28 11:24:33.662029 test begin: paddle.maximum(Tensor([2, 152, 1, 2],"float32"), Tensor([2, 1, 12096, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([2, 152, 1, 2],"float32"), Tensor([2, 1, 12096, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 48384 (0.00207%)
Max absolute difference among violations: 0.05650106
Max relative difference among violations: 0.2663674
ACTUAL: array([[[[ 1.106024,  0.845121],
[ 1.331347,  0.298225],
[-1.549646,  0.404287],...
DESIRED: array([[[[ 1.106024,  0.845121],
[ 1.331347,  0.298224],
[-1.549646,  0.404287],...
2025-04-28 11:24:37.129438 test begin: paddle.maximum(Tensor([2, 156, 1, 2],"float32"), Tensor([2, 1, 6069, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([2, 156, 1, 2],"float32"), Tensor([2, 1, 6069, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 24276 (0.00412%)
Max absolute difference among violations: 0.05709207
Max relative difference among violations: 0.02896168
ACTUAL: array([[[[ 2.489673,  4.553505],
[-1.010749,  3.171892],
[-0.74527 ,  0.888291],...
DESIRED: array([[[[ 2.489673,  4.553505],
[-1.010749,  3.171891],
[-0.74527 ,  0.888291],...
2025-04-28 11:24:38.942623 test begin: paddle.maximum(Tensor([2, 159, 1, 2],"float32"), Tensor([2, 1, 12096, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([2, 159, 1, 2],"float32"), Tensor([2, 1, 12096, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 48384 (0.00207%)
Max absolute difference among violations: 0.20116389
Max relative difference among violations: 0.11607131
ACTUAL: array([[[[-5.965409,  6.531394],
[ 0.823547,  1.723674],
[-1.237646, -8.514865],...
DESIRED: array([[[[-5.965409,  6.531394],
[ 0.823547,  1.723674],
[-1.237645, -8.514866],...
2025-04-28 11:24:44.378669 test begin: paddle.maximum(Tensor([2, 163, 1, 2],"float32"), Tensor([2, 1, 11109, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([2, 163, 1, 2],"float32"), Tensor([2, 1, 11109, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 44436 (0.00225%)
Max absolute difference among violations: 0.14237112
Max relative difference among violations: 0.17908007
ACTUAL: array([[[[ 1.443798, -1.231827],
[-8.36114 ,  0.975816],
[-6.528629,  0.050839],...
DESIRED: array([[[[ 1.443798, -1.231828],
[-8.361141,  0.975815],
[-6.528628,  0.050839],...
2025-04-28 11:25:14.301344 test begin: paddle.maximum(Tensor([2, 209, 1, 2],"float32"), Tensor([2, 1, 2100, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([2, 209, 1, 2],"float32"), Tensor([2, 1, 2100, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 836 (0.12%)
Max absolute difference among violations: 0.22283101
Max relative difference among violations: 0.97987354
ACTUAL: array([[[[-1.906116e+01,  4.816793e+00]],
[[-9.316653e+00, -1.951592e+00]],...
DESIRED: array([[[[-1.906117e+01,  4.816795e+00]],
[[-9.316656e+00, -1.951590e+00]],...
2025-04-28 11:25:36.005217 test begin: paddle.maximum(Tensor([2, 255, 1, 2],"float32"), Tensor([2, 1, 12096, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([2, 255, 1, 2],"float32"), Tensor([2, 1, 12096, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1020 (0.098%)
Max absolute difference among violations: 0.22996998
Max relative difference among violations: 0.02089266
ACTUAL: array([[[[ 11.979481, -31.594067]],
[[-19.98523 ,   5.478392]],...
DESIRED: array([[[[ 11.979465, -31.594095]],
[[-19.985313,   5.478403]],...
2025-04-28 11:25:49.493020 test begin: paddle.maximum(Tensor([2, 284, 1, 2],"float32"), Tensor([2, 1, 8400, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([2, 284, 1, 2],"float32"), Tensor([2, 1, 8400, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1136 (0.088%)
Max absolute difference among violations: 0.22344577
Max relative difference among violations: 0.13834523
ACTUAL: array([[[[ -2.911436, -10.902595]],
[[ -7.777027,  -0.362968]],...
DESIRED: array([[[[ -2.911443, -10.90258 ]],
[[ -7.777029,  -0.362966]],...
2025-04-28 11:25:54.484953 test begin: paddle.maximum(Tensor([2, 293, 1, 2],"float32"), Tensor([2, 1, 10164, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([2, 293, 1, 2],"float32"), Tensor([2, 1, 10164, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 40656 (0.00246%)
Max absolute difference among violations: 0.10621977
Max relative difference among violations: 0.02022614
ACTUAL: array([[[[-3.956866,  2.339679],
[-4.13992 ,  1.616349],
[-6.297495, -0.524617],...
DESIRED: array([[[[-3.956863,  2.339679],
[-4.13992 ,  1.61635 ],
[-6.297494, -0.524617],...
2025-04-28 11:26:14.852891 test begin: paddle.maximum(Tensor([2, 33, 1, 2],"float32"), Tensor([2, 1, 9261, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([2, 33, 1, 2],"float32"), Tensor([2, 1, 9261, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2 / 37044 (0.0054%)
Max absolute difference among violations: 0.10259196
Max relative difference among violations: 0.35996678
ACTUAL: array([[[[-1.280974,  1.211276],
[ 0.44734 ,  0.361317],
[ 1.972906, -0.211661],...
DESIRED: array([[[[-1.280974,  1.211276],
[ 0.44734 ,  0.361317],
[ 1.972906, -0.211661],...
2025-04-28 11:26:26.771619 test begin: paddle.maximum(Tensor([2, 37, 1, 2],"float32"), Tensor([2, 1, 2541, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([2, 37, 1, 2],"float32"), Tensor([2, 1, 2541, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 10164 (0.00984%)
Max absolute difference among violations: 0.041399
Max relative difference among violations: 0.03446626
ACTUAL: array([[[[ 0.729637,  2.278414],
[ 0.604338,  1.618329],
[ 0.18264 ,  3.148871],...
DESIRED: array([[[[ 0.729637,  2.278414],
[ 0.604337,  1.618329],
[ 0.18264 ,  3.148871],...
2025-04-28 11:26:40.924672 test begin: paddle.maximum(Tensor([2, 400, 1, 2],"float32"), Tensor([2, 1, 11109, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([2, 400, 1, 2],"float32"), Tensor([2, 1, 11109, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 44436 (0.00225%)
Max absolute difference among violations: 0.0461061
Max relative difference among violations: 0.01727599
ACTUAL: array([[[[  6.662746,  -2.997232],
[ -6.90265 ,   0.139724],
[ -0.227315, -10.448211],...
DESIRED: array([[[[  6.662745,  -2.997231],
[ -6.902651,   0.139723],
[ -0.227316, -10.448215],...
2025-04-28 11:27:17.211273 test begin: paddle.maximum(Tensor([2, 51, 1, 2],"float32"), Tensor([2, 1, 2100, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([2, 51, 1, 2],"float32"), Tensor([2, 1, 2100, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 204 (0.49%)
Max absolute difference among violations: 0.18494129
Max relative difference among violations: 0.03984398
ACTUAL: array([[[[  8.691013,  -3.455445]],
[[  3.78301 ,   0.546151]],...
DESIRED: array([[[[  8.691009,  -3.455448]],
[[  3.783013,   0.546152]],...
2025-04-28 11:27:23.901956 test begin: paddle.maximum(Tensor([2, 54, 1, 2],"float32"), Tensor([2, 1, 12096, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([2, 54, 1, 2],"float32"), Tensor([2, 1, 12096, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 48384 (0.00207%)
Max absolute difference among violations: 0.0252651
Max relative difference among violations: 0.03707498
ACTUAL: array([[[[ 4.067512, -1.646808],
[ 0.850212, -0.367638],
[ 1.681363, -0.045367],...
DESIRED: array([[[[ 4.067512, -1.646807],
[ 0.850212, -0.367638],
[ 1.681363, -0.045367],...
2025-04-28 11:27:25.569560 test begin: paddle.maximum(Tensor([2, 54, 1, 2],"float32"), Tensor([2, 1, 7581, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([2, 54, 1, 2],"float32"), Tensor([2, 1, 7581, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 30324 (0.0033%)
Max absolute difference among violations: 0.05492163
Max relative difference among violations: 0.02406577
ACTUAL: array([[[[-0.305865, -0.082345],
[ 0.188728, -0.362108],
[ 1.026426,  1.380241],...
DESIRED: array([[[[-0.305865, -0.082345],
[ 0.188728, -0.362108],
[ 1.026426,  1.380241],...
2025-04-28 11:27:31.361508 test begin: paddle.maximum(Tensor([2, 56, 1, 2],"float32"), Tensor([2, 1, 9261, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([2, 56, 1, 2],"float32"), Tensor([2, 1, 9261, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 224 (0.446%)
Max absolute difference among violations: 0.16201925
Max relative difference among violations: 0.02898869
ACTUAL: array([[[[ 2.182784e+01, -4.061572e+00]],
[[ 9.486119e+00, -1.763081e-01]],...
DESIRED: array([[[[ 2.182785e+01, -4.061563e+00]],
[[ 9.486120e+00, -1.762896e-01]],...
2025-04-28 11:27:57.456977 test begin: paddle.maximum(Tensor([2, 65, 1, 2],"float32"), Tensor([2, 1, 9261, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([2, 65, 1, 2],"float32"), Tensor([2, 1, 9261, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 37044 (0.0027%)
Max absolute difference among violations: 0.08839434
Max relative difference among violations: 0.12285183
ACTUAL: array([[[[-1.178665, -1.911665],
[ 0.777867, -1.407296],
[-1.083029, -2.017441],...
DESIRED: array([[[[-1.178665, -1.911665],
[ 0.777867, -1.407296],
[-1.08303 , -2.017441],...
2025-04-28 11:28:22.685751 test begin: paddle.maximum(Tensor([2, 76, 1, 2],"float32"), Tensor([2, 1, 7581, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([2, 76, 1, 2],"float32"), Tensor([2, 1, 7581, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 304 (0.329%)
Max absolute difference among violations: 0.12869549
Max relative difference among violations: 0.01143533
ACTUAL: array([[[[  7.820772, -35.518837]],
[[-29.42806 , -22.068138]],...
DESIRED: array([[[[  7.820776, -35.518837]],
[[-29.42806 , -22.06813 ]],...
2025-04-28 11:28:26.567112 test begin: paddle.maximum(Tensor([2, 79, 1, 2],"float32"), Tensor([2, 1, 10164, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([2, 79, 1, 2],"float32"), Tensor([2, 1, 10164, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 316 (0.316%)
Max absolute difference among violations: 0.22288132
Max relative difference among violations: 0.02182799
ACTUAL: array([[[[  0.094763, -14.170448]],
[[-31.41009 ,  16.29219 ]],...
DESIRED: array([[[[  0.094774, -14.170473]],
[[-31.410103,  16.2922  ]],...
2025-04-28 11:28:46.940453 test begin: paddle.maximum(Tensor([2, 88, 1, 2],"float32"), Tensor([2, 1, 5376, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([2, 88, 1, 2],"float32"), Tensor([2, 1, 5376, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 21504 (0.00465%)
Max absolute difference among violations: 0.21757269
Max relative difference among violations: 0.0532086
ACTUAL: array([[[[ 1.726070e+00, -6.057338e-01],
[-1.961260e-01,  8.542678e-02],
[ 2.309539e+00, -1.377109e+00],...
DESIRED: array([[[[ 1.726069e+00, -6.057336e-01],
[-1.961257e-01,  8.542657e-02],
[ 2.309539e+00, -1.377109e+00],...
2025-04-28 11:28:47.575396 test begin: paddle.maximum(Tensor([2, 89, 1, 2],"float32"), Tensor([2, 1, 2100, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([2, 89, 1, 2],"float32"), Tensor([2, 1, 2100, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 356 (0.281%)
Max absolute difference among violations: 0.11239028
Max relative difference among violations: 0.03038827
ACTUAL: array([[[[ 1.320209e+00, -2.247615e+01]],
[[ 1.726716e+00, -1.107259e+01]],...
DESIRED: array([[[[ 1.320207e+00, -2.247615e+01]],
[[ 1.726715e+00, -1.107259e+01]],...
2025-04-28 11:28:55.754354 test begin: paddle.maximum(Tensor([2, 93, 1, 2],"float32"), Tensor([2, 1, 6804, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([2, 93, 1, 2],"float32"), Tensor([2, 1, 6804, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 27216 (0.00367%)
Max absolute difference among violations: 0.18059039
Max relative difference among violations: 0.1105231
ACTUAL: array([[[[-3.763833, -0.396402],
[ 5.614945,  0.089215],
[ 0.179172,  0.793676],...
DESIRED: array([[[[-3.763833, -0.396402],
[ 5.614943,  0.089214],
[ 0.179172,  0.793677],...
2025-04-28 11:29:13.881020 test begin: paddle.maximum(Tensor([20, 1, 2],"float32"), Tensor([260865, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([20, 1, 2],"float32"), Tensor([260865, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 521730 (0.000192%)
Max absolute difference among violations: 0.21265149
Max relative difference among violations: 0.09103778
ACTUAL: array([[ 0.179446,  1.219366],
[-1.446572, -0.03102 ],
[-0.930684, -0.619145],...
DESIRED: array([[ 0.179446,  1.219366],
[-1.446572, -0.03102 ],
[-0.930684, -0.619145],...
2025-04-28 11:29:23.144983 test begin: paddle.maximum(Tensor([20, 1, 2],"float32"), Tensor([301302, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([20, 1, 2],"float32"), Tensor([301302, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 602604 (0.000166%)
Max absolute difference among violations: 0.24789202
Max relative difference among violations: 1.298341
ACTUAL: array([[ 0.501954, -1.177156],
[ 1.745213,  0.470851],
[ 0.03684 ,  0.342766],...
DESIRED: array([[ 0.501954, -1.177156],
[ 1.745213,  0.470851],
[ 0.03684 ,  0.342766],...
2025-04-28 11:29:29.836841 test begin: paddle.maximum(Tensor([20, 1, 2],"float32"), Tensor([322272, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([20, 1, 2],"float32"), Tensor([322272, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 3 / 644544 (0.000465%)
Max absolute difference among violations: 0.11596227
Max relative difference among violations: 2.1430128
ACTUAL: array([[ 0.844536, -0.14324 ],
[-0.305035, -0.162879],
[ 0.514049, -0.37851 ],...
DESIRED: array([[ 0.844536, -0.14324 ],
[-0.305035, -0.162879],
[ 0.514049, -0.37851 ],...
2025-04-28 11:29:46.080310 test begin: paddle.maximum(Tensor([20, 1, 2],"float32"), Tensor([397467, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([20, 1, 2],"float32"), Tensor([397467, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 794934 (0.000126%)
Max absolute difference among violations: 0.24795985
Max relative difference among violations: 0.09689773
ACTUAL: array([[-0.084714, -1.314848],
[ 0.974471, -1.809003],
[-1.344455, -0.304462],...
DESIRED: array([[-0.084714, -1.314847],
[ 0.974471, -1.809004],
[-1.344455, -0.304462],...
2025-04-28 11:29:52.209804 test begin: paddle.maximum(Tensor([200, 1, 2],"float32"), Tensor([1, 11109, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([200, 1, 2],"float32"), Tensor([1, 11109, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 400 (0.25%)
Max absolute difference among violations: 0.16510391
Max relative difference among violations: 0.01338893
ACTUAL: array([[[ 3.070880e+01,  5.048272e+01]],
[[ 3.097331e+00,  1.764342e+00]],...
DESIRED: array([[[ 3.070882e+01,  5.048264e+01]],
[[ 3.097406e+00,  1.764341e+00]],...
2025-04-28 11:31:40.737225 test begin: paddle.maximum(Tensor([2048, 1, 2],"float32"), Tensor([1, 2577, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([2048, 1, 2],"float32"), Tensor([1, 2577, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 4096 (0.0244%)
Max absolute difference among violations: 0.17923856
Max relative difference among violations: 0.06212841
ACTUAL: array([[[  3.017763,   4.757013]],
[[  0.514956,  11.043563]],...
DESIRED: array([[[  3.017762,   4.757013]],
[[  0.514955,  11.04356 ]],...
2025-04-28 11:32:40.578085 test begin: paddle.maximum(Tensor([2073, 1, 2],"float32"), Tensor([17, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([2073, 1, 2],"float32"), Tensor([17, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 4146 (0.0241%)
Max absolute difference among violations: 0.05625318
Max relative difference among violations: 0.4871845
ACTUAL: array([[[ 0.488688, -1.208823]],
[[ 1.228922,  1.748645]],...
DESIRED: array([[[ 0.488688, -1.208823]],
[[ 1.228922,  1.748645]],...
2025-04-28 11:32:55.291941 test begin: paddle.maximum(Tensor([208, 1, 2],"float32"), Tensor([1, 2541, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([208, 1, 2],"float32"), Tensor([1, 2541, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 416 (0.24%)
Max absolute difference among violations: 0.04846695
Max relative difference among violations: 0.22518146
ACTUAL: array([[[-27.0295  ,  23.231651]],
[[ 27.641348,  -3.81844 ]],...
DESIRED: array([[[-27.029488,  23.23164 ]],
[[ 27.641346,  -3.818442]],...
2025-04-28 11:32:56.972468 test begin: paddle.maximum(Tensor([208, 1, 2],"float32"), Tensor([1, 6069, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([208, 1, 2],"float32"), Tensor([1, 6069, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 12138 (0.00824%)
Max absolute difference among violations: 0.09888649
Max relative difference among violations: 0.01149681
ACTUAL: array([[[-0.973727, -6.375367],
[ 1.996629, -2.579269],
[-0.865127,  4.979074],...
DESIRED: array([[[-0.973727, -6.375368],
[ 1.99663 , -2.579269],
[-0.865126,  4.979073],...
2025-04-28 11:32:57.978948 test begin: paddle.maximum(Tensor([208, 1, 2],"float32"), Tensor([1, 8400, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([208, 1, 2],"float32"), Tensor([1, 8400, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 416 (0.24%)
Max absolute difference among violations: 0.23374653
Max relative difference among violations: 0.0160495
ACTUAL: array([[[-2.525736e-01, -2.129567e-01]],
[[-2.970395e+00, -1.107298e+01]],...
DESIRED: array([[[-2.525706e-01, -2.129574e-01]],
[[-2.970387e+00, -1.107298e+01]],...
2025-04-28 11:34:06.025107 test begin: paddle.maximum(Tensor([21, 1, 2],"float32"), Tensor([330429, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([21, 1, 2],"float32"), Tensor([330429, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 660858 (0.000151%)
Max absolute difference among violations: 0.16756618
Max relative difference among violations: 1.7245731
ACTUAL: array([[ 0.683789,  0.905004],
[ 0.      ,  1.885583],
[ 0.828345,  1.700756],...
DESIRED: array([[ 0.683788,  0.905004],
[ 0.      ,  1.885582],
[ 0.828345,  1.700756],...
2025-04-28 11:34:22.087960 test begin: paddle.maximum(Tensor([21, 1, 2],"float32"), Tensor([94500, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([21, 1, 2],"float32"), Tensor([94500, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 189000 (0.000529%)
Max absolute difference among violations: 0.11949515
Max relative difference among violations: 0.18004131
ACTUAL: array([[ 0.474343, -0.09327 ],
[ 0.474221, -0.431905],
[-0.091026, -0.297153],...
DESIRED: array([[ 0.474343, -0.09327 ],
[ 0.474221, -0.431905],
[-0.091026, -0.297153],...
2025-04-28 11:34:24.508711 test begin: paddle.maximum(Tensor([2100, 1, 2],"float32"), Tensor([1, 12096, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([2100, 1, 2],"float32"), Tensor([1, 12096, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 4200 (0.0238%)
Max absolute difference among violations: 0.21486881
Max relative difference among violations: 0.6753302
ACTUAL: array([[[ 34.560677, -35.51103 ]],
[[ 12.61533 ,  -5.088798]],...
DESIRED: array([[[ 34.560673, -35.5111  ]],
[[ 12.61528 ,  -5.088799]],...
2025-04-28 11:36:38.349138 test begin: paddle.maximum(Tensor([216, 1, 2],"float32"), Tensor([1, 11109, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([216, 1, 2],"float32"), Tensor([1, 11109, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 432 (0.231%)
Max absolute difference among violations: 0.22312355
Max relative difference among violations: 0.02240521
ACTUAL: array([[[ 8.521335e+00, -2.938051e+01]],
[[-6.037406e+00,  3.293203e+01]],...
DESIRED: array([[[ 8.521302e+00, -2.938049e+01]],
[[-6.037376e+00,  3.293208e+01]],...
2025-04-28 11:37:27.954807 test begin: paddle.maximum(Tensor([2179, 19],"float32"), Tensor([1],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([2179, 19],"float32"), Tensor([1],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 41401 (0.00242%)
Max absolute difference among violations: 0.10843237
Max relative difference among violations: 1.
ACTUAL: array([[ 0.088916,  0.400573,  0.      , ...,  0.      , -0.      ,
-0.379055],
[-0.      , -0.      , -0.005393, ..., -0.330376,  0.      ,...
DESIRED: array([[ 0.088916,  0.400573,  0.      , ...,  0.      ,  0.      ,
-0.379055],
[ 0.      ,  0.      , -0.005393, ..., -0.330376,  0.      ,...
2025-04-28 11:38:19.719289 test begin: paddle.maximum(Tensor([22, 1, 2],"float32"), Tensor([252195, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([22, 1, 2],"float32"), Tensor([252195, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 44 (2.27%)
Max absolute difference among violations: 0.1323396
Max relative difference among violations: 0.16996858
ACTUAL: array([[[ 101.79459 ,  218.77501 ]],
[[  -0.910952,   -5.074874]],...
DESIRED: array([[[ 101.795   ,  218.77563 ]],
[[  -0.778612,   -5.075077]],...
2025-04-28 11:38:20.733133 test begin: paddle.maximum(Tensor([22, 1, 2],"float32"), Tensor([260865, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([22, 1, 2],"float32"), Tensor([260865, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 521730 (0.000192%)
Max absolute difference among violations: 0.18088013
Max relative difference among violations: 0.53115463
ACTUAL: array([[ 0.022006,  0.02955 ],
[-1.61719 , -0.460742],
[ 0.      ,  0.765017],...
DESIRED: array([[ 0.022006,  0.02955 ],
[-1.61719 , -0.460742],
[ 0.      ,  0.765017],...
2025-04-28 11:38:22.909161 test begin: paddle.maximum(Tensor([22, 1, 2],"float32"), Tensor([268569, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([22, 1, 2],"float32"), Tensor([268569, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 537138 (0.000186%)
Max absolute difference among violations: 0.22612661
Max relative difference among violations: 0.30698156
ACTUAL: array([[-0.042001, -0.12691 ],
[-0.301281,  1.291145],
[ 0.200604,  1.672178],...
DESIRED: array([[-0.042001, -0.12691 ],
[-0.301281,  1.291145],
[ 0.200604,  1.672178],...
2025-04-28 11:38:25.171036 test begin: paddle.maximum(Tensor([22, 1, 2],"float32"), Tensor([278256, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([22, 1, 2],"float32"), Tensor([278256, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 44 (2.27%)
Max absolute difference among violations: 0.19803429
Max relative difference among violations: 0.01177681
ACTUAL: array([[[ -42.629856,   85.49151 ]],
[[  54.862232,  -16.045197]],...
DESIRED: array([[[ -42.6297  ,   85.49335 ]],
[[  54.861973,  -16.045162]],...
2025-04-28 11:38:27.503695 test begin: paddle.maximum(Tensor([22, 1, 2],"float32"), Tensor([286977, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([22, 1, 2],"float32"), Tensor([286977, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 573954 (0.000174%)
Max absolute difference among violations: 0.24626118
Max relative difference among violations: 0.36327368
ACTUAL: array([[-0.940234, -0.554201],
[-1.505861, -0.054754],
[ 0.      , -0.161621],...
DESIRED: array([[-0.940234, -0.554201],
[-1.505861, -0.054754],
[ 0.      , -0.16162 ],...
2025-04-28 11:38:29.945561 test begin: paddle.maximum(Tensor([22, 1, 2],"float32"), Tensor([304368, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([22, 1, 2],"float32"), Tensor([304368, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 608736 (0.000164%)
Max absolute difference among violations: 0.24221575
Max relative difference among violations: 0.50531644
ACTUAL: array([[ 0.578108,  1.366574],
[ 0.084049,  0.024989],
[ 0.291993,  0.792236],...
DESIRED: array([[ 0.578108,  1.366574],
[ 0.084049,  0.024989],
[ 0.291993,  0.792236],...
2025-04-28 11:38:31.167100 test begin: paddle.maximum(Tensor([22, 1, 2],"float32"), Tensor([310992, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([22, 1, 2],"float32"), Tensor([310992, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 621984 (0.000161%)
Max absolute difference among violations: 0.04974307
Max relative difference among violations: 0.1892947
ACTUAL: array([[ 0.143245,  0.      ],
[ 0.      ,  2.565759],
[-0.714349,  0.114158],...
DESIRED: array([[ 0.143245,  0.      ],
[ 0.      ,  2.565759],
[-0.714349,  0.114158],...
2025-04-28 11:38:58.500183 test begin: paddle.maximum(Tensor([2203, 1, 2],"float32"), Tensor([8, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([2203, 1, 2],"float32"), Tensor([8, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 4406 (0.0227%)
Max absolute difference among violations: 0.19087383
Max relative difference among violations: 1.
ACTUAL: array([[[ 0.      , -0.87067 ]],
[[ 0.      ,  0.136635]],...
DESIRED: array([[[ 0.      , -0.87067 ]],
[[ 0.      ,  0.136635]],...
2025-04-28 11:40:16.746421 test begin: paddle.maximum(Tensor([224, 1, 2],"float32"), Tensor([1, 12096, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([224, 1, 2],"float32"), Tensor([1, 12096, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 448 (0.223%)
Max absolute difference among violations: 0.03783154
Max relative difference among violations: 0.05176456
ACTUAL: array([[[ 1.136078e+01,  3.223479e+01]],
[[ 5.583210e+00, -3.462804e+01]],...
DESIRED: array([[[ 1.136078e+01,  3.223482e+01]],
[[ 5.583210e+00, -3.462803e+01]],...
2025-04-28 11:40:23.015659 test begin: paddle.maximum(Tensor([2240, 1, 2],"float32"), Tensor([1, 1726, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([2240, 1, 2],"float32"), Tensor([1, 1726, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 4480 (0.0223%)
Max absolute difference among violations: 0.1393032
Max relative difference among violations: 0.01643082
ACTUAL: array([[[ 27.813335,   2.7767  ]],
[[ -5.039302,  -2.198257]],...
DESIRED: array([[[ 27.813354,   2.776701]],
[[ -5.039302,  -2.198257]],...
2025-04-28 11:42:16.635393 test begin: paddle.maximum(Tensor([23, 1, 2],"float32"), Tensor([214848, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([23, 1, 2],"float32"), Tensor([214848, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 429696 (0.000233%)
Max absolute difference among violations: 0.04351157
Max relative difference among violations: 0.37890357
ACTUAL: array([[-0.973994,  2.774094],
[-0.241537, -1.942367],
[-0.340042,  1.667897],...
DESIRED: array([[-0.973994,  2.774094],
[-0.241537, -1.942367],
[-0.340042,  1.667897],...
2025-04-28 11:42:25.968932 test begin: paddle.maximum(Tensor([23, 1, 2],"float32"), Tensor([270096, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([23, 1, 2],"float32"), Tensor([270096, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 46 (2.17%)
Max absolute difference among violations: 0.16614294
Max relative difference among violations: 0.03701001
ACTUAL: array([[[  52.067574,  175.43257 ]],
[[   3.845621,  -22.540012]],...
DESIRED: array([[[  52.067505,  175.43169 ]],
[[   3.845844,  -22.540201]],...
2025-04-28 11:42:35.642887 test begin: paddle.maximum(Tensor([23, 1, 2],"float32"), Tensor([319200, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([23, 1, 2],"float32"), Tensor([319200, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 638400 (0.000157%)
Max absolute difference among violations: 0.19281045
Max relative difference among violations: 2.7483857
ACTUAL: array([[-0.23906 ,  0.922029],
[-0.357005,  0.038435],
[-0.353445, -0.406644],...
DESIRED: array([[-0.23906 ,  0.922029],
[-0.357005,  0.038435],
[-0.353445, -0.406645],...
2025-04-28 11:45:13.094779 test begin: paddle.maximum(Tensor([2368, 1, 2],"float32"), Tensor([1, 1360, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([2368, 1, 2],"float32"), Tensor([1, 1360, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 4736 (0.0211%)
Max absolute difference among violations: 0.22210026
Max relative difference among violations: 0.04964164
ACTUAL: array([[[ -4.395959,   1.509856]],
[[ -1.449762,   5.534428]],...
DESIRED: array([[[ -4.395958,   1.509855]],
[[ -1.449762,   5.534435]],...
2025-04-28 11:45:14.480488 test begin: paddle.maximum(Tensor([2368, 1, 2],"float32"), Tensor([1, 2125, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([2368, 1, 2],"float32"), Tensor([1, 2125, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 4736 (0.0211%)
Max absolute difference among violations: 0.24519062
Max relative difference among violations: 0.03005159
ACTUAL: array([[[ 3.199082, -0.964554]],
[[-2.72891 ,  8.344443]],...
DESIRED: array([[[ 3.199086, -0.964557]],
[[-2.728912,  8.344446]],...
2025-04-28 11:46:31.416967 test begin: paddle.maximum(Tensor([24, 1, 2],"float32"), Tensor([286440, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([24, 1, 2],"float32"), Tensor([286440, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2 / 572880 (0.000349%)
Max absolute difference among violations: 0.09990598
Max relative difference among violations: 1.
ACTUAL: array([[-0.425671,  0.0477  ],
[-0.283406,  2.363603],
[ 0.424838, -1.523992],...
DESIRED: array([[-0.425671,  0.0477  ],
[-0.283406,  2.363603],
[ 0.424838, -1.523992],...
2025-04-28 11:46:33.950563 test begin: paddle.maximum(Tensor([24, 1, 2],"float32"), Tensor([310992, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([24, 1, 2],"float32"), Tensor([310992, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 621984 (0.000161%)
Max absolute difference among violations: 0.14520192
Max relative difference among violations: 0.14883004
ACTUAL: array([[ 1.26079 , -0.572553],
[-2.244746,  0.321694],
[ 1.815585, -1.896549],...
DESIRED: array([[ 1.26079 , -0.572553],
[-2.244745,  0.321694],
[ 1.815585, -1.896549],...
2025-04-28 11:46:41.033697 test begin: paddle.maximum(Tensor([24, 1, 2],"float32"), Tensor([349866, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([24, 1, 2],"float32"), Tensor([349866, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2 / 699732 (0.000286%)
Max absolute difference among violations: 0.12111342
Max relative difference among violations: 2.0391264
ACTUAL: array([[ 0.686541,  0.252542],
[-0.289273,  0.252015],
[-0.44854 ,  0.035064],...
DESIRED: array([[ 0.686541,  0.252542],
[-0.289273,  0.252015],
[-0.44854 ,  0.035064],...
2025-04-28 11:48:32.388012 test begin: paddle.maximum(Tensor([2449, 16],"float32"), Tensor([1],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([2449, 16],"float32"), Tensor([1],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 39184 (0.00255%)
Max absolute difference among violations: 0.05475738
Max relative difference among violations: 1.
ACTUAL: array([[ 0.215445, -0.300558,  0.426547, ...,  0.151112,  0.351736,
0.035405],
[ 0.311853,  0.      , -0.46995 , ..., -0.128371, -0.081761,...
DESIRED: array([[ 0.215445, -0.300558,  0.426547, ...,  0.151112,  0.351736,
0.035405],
[ 0.311853,  0.      , -0.46995 , ..., -0.128371, -0.081761,...
2025-04-28 11:50:53.698826 test begin: paddle.maximum(Tensor([25, 1, 2],"float32"), Tensor([217413, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([25, 1, 2],"float32"), Tensor([217413, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 434826 (0.00023%)
Max absolute difference among violations: 0.20337762
Max relative difference among violations: 1.
ACTUAL: array([[-0.308305,  0.12676 ],
[-0.976757, -0.275742],
[-0.740785,  0.947736],...
DESIRED: array([[-0.308305,  0.12676 ],
[-0.976757, -0.275742],
[-0.740785,  0.947736],...
2025-04-28 11:50:54.713379 test begin: paddle.maximum(Tensor([25, 1, 2],"float32"), Tensor([242991, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([25, 1, 2],"float32"), Tensor([242991, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 485982 (0.000206%)
Max absolute difference among violations: 0.05288219
Max relative difference among violations: 0.04655614
ACTUAL: array([[-0.131558,  0.      ],
[ 0.506545, -1.989446],
[-0.210127,  0.162936],...
DESIRED: array([[-0.131558,  0.      ],
[ 0.506545, -1.989446],
[-0.210127,  0.162936],...
2025-04-28 11:51:09.151381 test begin: paddle.maximum(Tensor([25, 1, 2],"float32"), Tensor([369303, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([25, 1, 2],"float32"), Tensor([369303, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 738606 (0.000135%)
Max absolute difference among violations: 0.11157182
Max relative difference among violations: 0.5446307
ACTUAL: array([[ 2.406513, -0.127004],
[ 0.073055, -0.345764],
[-0.944388, -0.006546],...
DESIRED: array([[ 2.406514, -0.127004],
[ 0.073055, -0.345764],
[-0.944388, -0.006546],...
2025-04-28 11:51:12.831432 test begin: paddle.maximum(Tensor([25, 1, 2],"float32"), Tensor([408177, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([25, 1, 2],"float32"), Tensor([408177, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2 / 816354 (0.000245%)
Max absolute difference among violations: 0.08631551
Max relative difference among violations: 0.08735345
ACTUAL: array([[-1.220778e+00,  6.390294e-01],
[ 3.979762e-01,  4.954375e-01],
[-9.401745e-01,  8.517062e-01],...
DESIRED: array([[-1.220778e+00,  6.390293e-01],
[ 3.979762e-01,  4.954375e-01],
[-9.401746e-01,  8.517062e-01],...
2025-04-28 11:55:53.954535 test begin: paddle.maximum(Tensor([26, 1, 2],"float32"), Tensor([182391, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([26, 1, 2],"float32"), Tensor([182391, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 52 (1.92%)
Max absolute difference among violations: 0.20275477
Max relative difference among violations: 0.51781833
ACTUAL: array([[[-7.234592e+01, -2.384278e+01]],
[[-7.466677e+01, -1.715008e+01]],...
DESIRED: array([[[ -72.346664,  -23.842113]],
[[ -74.66688 ,  -17.15055 ]],...
2025-04-28 11:55:56.391341 test begin: paddle.maximum(Tensor([26, 1, 2],"float32"), Tensor([234804, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([26, 1, 2],"float32"), Tensor([234804, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 469608 (0.000213%)
Max absolute difference among violations: 0.10239512
Max relative difference among violations: 0.20234057
ACTUAL: array([[-0.088331,  1.100996],
[ 0.730042,  0.054051],
[-0.950516,  0.      ],...
DESIRED: array([[-0.088331,  1.100996],
[ 0.730042,  0.054051],
[-0.950516,  0.      ],...
2025-04-28 11:55:57.514614 test begin: paddle.maximum(Tensor([26, 1, 2],"float32"), Tensor([235320, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([26, 1, 2],"float32"), Tensor([235320, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 470640 (0.000212%)
Max absolute difference among violations: 0.10091567
Max relative difference among violations: 0.10890955
ACTUAL: array([[ 1.776452,  0.644899],
[ 0.295602,  0.240705],
[-0.444851, -0.294147],...
DESIRED: array([[ 1.776452,  0.644899],
[ 0.295602,  0.240704],
[-0.444851, -0.294147],...
2025-04-28 11:56:01.300991 test begin: paddle.maximum(Tensor([26, 1, 2],"float32"), Tensor([262194, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([26, 1, 2],"float32"), Tensor([262194, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 524388 (0.000191%)
Max absolute difference among violations: 0.02761734
Max relative difference among violations: 0.02753612
ACTUAL: array([[ 0.165169,  1.96079 ],
[ 0.573752,  1.456441],
[-1.743093, -1.040872],...
DESIRED: array([[ 0.165169,  1.96079 ],
[ 0.573752,  1.456441],
[-1.743093, -1.040872],...
2025-04-28 11:56:07.993896 test begin: paddle.maximum(Tensor([26, 1, 2],"float32"), Tensor([293397, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([26, 1, 2],"float32"), Tensor([293397, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 586794 (0.00017%)
Max absolute difference among violations: 0.16711235
Max relative difference among violations: 0.18644598
ACTUAL: array([[-0.828953,  0.367359],
[ 1.744597,  0.41912 ],
[-0.106165, -1.145666],...
DESIRED: array([[-0.828953,  0.367359],
[ 1.744597,  0.41912 ],
[-0.106165, -1.145666],...
2025-04-28 11:56:12.605842 test begin: paddle.maximum(Tensor([26, 1, 2],"float32"), Tensor([313347, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([26, 1, 2],"float32"), Tensor([313347, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2 / 626694 (0.000319%)
Max absolute difference among violations: 0.20947626
Max relative difference among violations: 6.969401
ACTUAL: array([[ 0.432113,  2.001734],
[-0.196706, -0.3126  ],
[ 0.318037, -0.645947],...
DESIRED: array([[ 0.432113,  2.001734],
[-0.196706, -0.3126  ],
[ 0.318037, -0.645947],...
2025-04-28 11:56:14.070315 test begin: paddle.maximum(Tensor([26, 1, 2],"float32"), Tensor([340176, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([26, 1, 2],"float32"), Tensor([340176, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 3 / 680352 (0.000441%)
Max absolute difference among violations: 0.19293116
Max relative difference among violations: 2.2683113
ACTUAL: array([[ 0.      , -1.627095],
[-0.996606,  0.010093],
[ 0.      , -0.422692],...
DESIRED: array([[ 0.      , -1.627095],
[-0.996606,  0.010093],
[ 0.      , -0.422692],...
2025-04-28 11:56:15.604498 test begin: paddle.maximum(Tensor([26, 1, 2],"float32"), Tensor([375984, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([26, 1, 2],"float32"), Tensor([375984, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 4 / 751968 (0.000532%)
Max absolute difference among violations: 0.19408573
Max relative difference among violations: 8.908808
ACTUAL: array([[-0.281552, -0.187041],
[-0.301194, -1.01718 ],
[ 0.458115, -0.445033],...
DESIRED: array([[-0.281552, -0.187041],
[-0.301194, -1.01718 ],
[ 0.458115, -0.445033],...
2025-04-28 11:57:47.852443 test begin: paddle.maximum(Tensor([264, 1, 2],"float32"), Tensor([1, 10164, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([264, 1, 2],"float32"), Tensor([1, 10164, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 20328 (0.00492%)
Max absolute difference among violations: 0.0140056
Max relative difference among violations: 0.03540434
ACTUAL: array([[[-0.210886,  0.537296],
[ 1.790811,  2.35952 ],
[ 1.614606, -0.063838],...
DESIRED: array([[[-0.210886,  0.537296],
[ 1.790811,  2.359521],
[ 1.614606, -0.063838],...
2025-04-28 11:59:29.800924 test begin: paddle.maximum(Tensor([2688, 1, 2],"float32"), Tensor([1, 3060, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([2688, 1, 2],"float32"), Tensor([1, 3060, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 5376 (0.0186%)
Max absolute difference among violations: 0.24433613
Max relative difference among violations: 0.01923952
ACTUAL: array([[[20.240385, -2.112659]],
[[18.943413, 11.74332 ]],...
DESIRED: array([[[20.24038 , -2.112656]],
[[18.943438, 11.74332 ]],...
2025-04-28 12:00:17.256109 test begin: paddle.maximum(Tensor([27, 1, 2],"float32"), Tensor([349155, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([27, 1, 2],"float32"), Tensor([349155, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 698310 (0.000143%)
Max absolute difference among violations: 0.11260638
Max relative difference among violations: 0.336042
ACTUAL: array([[-0.69008 , -0.35908 ],
[-0.467508,  0.901072],
[-0.337472,  0.247824],...
DESIRED: array([[-0.69008 , -0.35908 ],
[-0.467508,  0.901072],
[-0.337472,  0.247824],...
2025-04-28 12:01:08.820474 test begin: paddle.maximum(Tensor([272, 1, 2],"float32"), Tensor([1, 11109, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([272, 1, 2],"float32"), Tensor([1, 11109, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 22218 (0.0045%)
Max absolute difference among violations: 0.13635448
Max relative difference among violations: 0.641119
ACTUAL: array([[[-1.547334,  3.60059 ],
[ 1.347199, -0.698414],
[ 2.28021 ,  8.802389],...
DESIRED: array([[[-1.547333,  3.60059 ],
[ 1.347199, -0.698414],
[ 2.28021 ,  8.802389],...
2025-04-28 12:01:09.791254 test begin: paddle.maximum(Tensor([272, 1, 2],"float32"), Tensor([1, 12096, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([272, 1, 2],"float32"), Tensor([1, 12096, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 24192 (0.00413%)
Max absolute difference among violations: 0.05714452
Max relative difference among violations: 0.05479297
ACTUAL: array([[[-3.545272, -4.449193],
[-4.532226, -2.096573],
[ 2.993643,  5.185732],...
DESIRED: array([[[-3.545271, -4.449193],
[-4.532229, -2.096573],
[ 2.993641,  5.185733],...
2025-04-28 12:02:36.487455 test begin: paddle.maximum(Tensor([2758, 1, 2],"float32"), Tensor([80, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([2758, 1, 2],"float32"), Tensor([80, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 5516 (0.0181%)
Max absolute difference among violations: 0.03947696
Max relative difference among violations: 0.7359889
ACTUAL: array([[[ 3.021646, -1.160207]],
[[ 0.945511,  0.188084]],...
DESIRED: array([[[ 3.021646, -1.160207]],
[[ 0.945511,  0.188084]],...
2025-04-28 12:04:01.296480 test begin: paddle.maximum(Tensor([28, 1, 2],"float32"), Tensor([188256, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([28, 1, 2],"float32"), Tensor([188256, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 376512 (0.000266%)
Max absolute difference among violations: 0.10641289
Max relative difference among violations: 0.05865195
ACTUAL: array([[ 1.076543, -1.528495],
[-1.445415, -0.190274],
[-1.291946, -1.762015],...
DESIRED: array([[ 1.076543, -1.528495],
[-1.445415, -0.190274],
[-1.291946, -1.762015],...
2025-04-28 12:04:04.934157 test begin: paddle.maximum(Tensor([28, 1, 2],"float32"), Tensor([242991, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([28, 1, 2],"float32"), Tensor([242991, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 485982 (0.000206%)
Max absolute difference among violations: 0.05348867
Max relative difference among violations: 0.08643685
ACTUAL: array([[-1.544515, -1.108825],
[ 0.135958,  0.495779],
[ 0.678105,  0.705412],...
DESIRED: array([[-1.544515, -1.108825],
[ 0.135958,  0.495779],
[ 0.678105,  0.705412],...
2025-04-28 12:04:06.312740 test begin: paddle.maximum(Tensor([28, 1, 2],"float32"), Tensor([257796, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([28, 1, 2],"float32"), Tensor([257796, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 515592 (0.000194%)
Max absolute difference among violations: 0.14018226
Max relative difference among violations: 0.0778756
ACTUAL: array([[ 0.333899,  0.388988],
[ 1.112872, -0.104204],
[-1.147468,  0.35131 ],...
DESIRED: array([[ 0.333899,  0.388988],
[ 1.112873, -0.104204],
[-1.147468,  0.35131 ],...
2025-04-28 12:04:13.174962 test begin: paddle.maximum(Tensor([28, 1, 2],"float32"), Tensor([291555, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([28, 1, 2],"float32"), Tensor([291555, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 56 (1.79%)
Max absolute difference among violations: 0.21480513
Max relative difference among violations: 0.03522989
ACTUAL: array([[[ -57.05667 ,  -31.88393 ]],
[[-161.01256 ,  -77.19112 ]],...
DESIRED: array([[[ -57.0577  ,  -31.883846]],
[[-161.01175 ,  -77.19091 ]],...
2025-04-28 12:04:19.370049 test begin: paddle.maximum(Tensor([28, 1, 2],"float32"), Tensor([306900, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([28, 1, 2],"float32"), Tensor([306900, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 613800 (0.000163%)
Max absolute difference among violations: 0.17563397
Max relative difference among violations: 0.30890864
ACTUAL: array([[-1.730565,  0.      ],
[ 1.889426,  1.351063],
[-0.074661, -0.738571],...
DESIRED: array([[-1.730565,  0.      ],
[ 1.889426,  1.351062],
[-0.074661, -0.738571],...
2025-04-28 12:04:29.353890 test begin: paddle.maximum(Tensor([28, 1, 2],"float32"), Tensor([343728, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([28, 1, 2],"float32"), Tensor([343728, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 687456 (0.000145%)
Max absolute difference among violations: 0.14180923
Max relative difference among violations: 0.06501562
ACTUAL: array([[-1.037391,  2.059564],
[ 0.068244, -0.067882],
[-0.029353, -2.2521  ],...
DESIRED: array([[-1.037391,  2.059564],
[ 0.068244, -0.067882],
[-0.029353, -2.2521  ],...
2025-04-28 12:04:31.058756 test begin: paddle.maximum(Tensor([28, 1, 2],"float32"), Tensor([349866, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([28, 1, 2],"float32"), Tensor([349866, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 699732 (0.000143%)
Max absolute difference among violations: 0.24346
Max relative difference among violations: 0.391057
ACTUAL: array([[ 0.145557, -0.680025],
[ 0.925756,  0.564656],
[-0.611036, -1.196449],...
DESIRED: array([[ 0.145558, -0.680025],
[ 0.925756,  0.564656],
[-0.611036, -1.19645 ],...
2025-04-28 12:04:39.291172 test begin: paddle.maximum(Tensor([28, 1, 2],"float32"), Tensor([66240, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([28, 1, 2],"float32"), Tensor([66240, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 56 (1.79%)
Max absolute difference among violations: 0.17559242
Max relative difference among violations: 0.02279655
ACTUAL: array([[[ 2.035990e+01, -8.917522e+00]],
[[ 9.853395e+00, -5.931887e+00]],...
DESIRED: array([[[ 2.035989e+01, -8.917522e+00]],
[[ 9.853382e+00, -5.931935e+00]],...
2025-04-28 12:07:30.387256 test begin: paddle.maximum(Tensor([288, 1, 2],"float32"), Tensor([1, 3024, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([288, 1, 2],"float32"), Tensor([1, 3024, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 6048 (0.0165%)
Max absolute difference among violations: 0.04839957
Max relative difference among violations: 0.03929852
ACTUAL: array([[[ 3.014825, -2.58163 ],
[ 0.507675, -1.129562],
[-3.736851,  1.474316],...
DESIRED: array([[[ 3.014825, -2.581629],
[ 0.507675, -1.129562],
[-3.736851,  1.474316],...
2025-04-28 12:08:16.391770 test begin: paddle.maximum(Tensor([29, 1, 2],"float32"), Tensor([236616, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([29, 1, 2],"float32"), Tensor([236616, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 473232 (0.000211%)
Max absolute difference among violations: 0.2369999
Max relative difference among violations: 2.7490501
ACTUAL: array([[ 0.297274, -1.034275],
[ 0.351906,  2.357799],
[ 0.107819, -0.107627],...
DESIRED: array([[ 0.297274, -1.034275],
[ 0.351906,  2.357799],
[ 0.107819, -0.107627],...
2025-04-28 12:08:20.498785 test begin: paddle.maximum(Tensor([29, 1, 2],"float32"), Tensor([277539, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([29, 1, 2],"float32"), Tensor([277539, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 555078 (0.00018%)
Max absolute difference among violations: 0.19997531
Max relative difference among violations: 0.19429778
ACTUAL: array([[-0.889276,  0.460607],
[-0.469959, -1.016269],
[-0.201653,  0.115045],...
DESIRED: array([[-0.889276,  0.460607],
[-0.46996 , -1.016269],
[-0.201653,  0.115045],...
2025-04-28 12:08:25.782213 test begin: paddle.maximum(Tensor([29, 1, 2],"float32"), Tensor([331452, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([29, 1, 2],"float32"), Tensor([331452, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 662904 (0.000151%)
Max absolute difference among violations: 0.13517517
Max relative difference among violations: 0.8217431
ACTUAL: array([[ 0.074981, -0.400733],
[ 0.631759, -0.82663 ],
[-0.109938,  0.70621 ],...
DESIRED: array([[ 0.074981, -0.400733],
[ 0.631759, -0.82663 ],
[-0.109938,  0.70621 ],...
2025-04-28 12:08:27.664508 test begin: paddle.maximum(Tensor([29, 1, 2],"float32"), Tensor([349866, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([29, 1, 2],"float32"), Tensor([349866, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 699732 (0.000143%)
Max absolute difference among violations: 0.13152677
Max relative difference among violations: 0.1837572
ACTUAL: array([[ 0.27357 , -0.117284],
[-1.514933,  0.113942],
[ 0.560541,  0.012403],...
DESIRED: array([[ 0.27357 , -0.117284],
[-1.514933,  0.113942],
[ 0.560541,  0.012403],...
2025-04-28 12:08:31.460260 test begin: paddle.maximum(Tensor([29, 1, 2],"float32"), Tensor([375984, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([29, 1, 2],"float32"), Tensor([375984, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 751968 (0.000133%)
Max absolute difference among violations: 0.20124894
Max relative difference among violations: 1.
ACTUAL: array([[ 2.162097, -0.1532  ],
[ 1.220786, -0.318204],
[ 1.384561,  1.139725],...
DESIRED: array([[ 2.162097, -0.1532  ],
[ 1.220786, -0.318204],
[ 1.384561,  1.139725],...
2025-04-28 12:12:48.433649 test begin: paddle.maximum(Tensor([3, 1, 2],"float32"), Tensor([227124, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([3, 1, 2],"float32"), Tensor([227124, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 6 (16.7%)
Max absolute difference among violations: 0.22683239
Max relative difference among violations: 0.03367439
ACTUAL: array([[[-130.14836 ,   68.00077 ]],
[[-139.70418 ,   -6.962882]],...
DESIRED: array([[[-130.14813 ,   68.000114]],
[[-139.70499 ,   -6.73605 ]],...
2025-04-28 12:12:55.878661 test begin: paddle.maximum(Tensor([3, 1, 2],"float32"), Tensor([253728, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([3, 1, 2],"float32"), Tensor([253728, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 507456 (0.000197%)
Max absolute difference among violations: 0.01890524
Max relative difference among violations: 1.
ACTUAL: array([[ 0.      ,  0.128376],
[-0.458362,  0.668192],
[ 0.      ,  0.586619],...
DESIRED: array([[ 0.      ,  0.128376],
[-0.458362,  0.668192],
[ 0.      ,  0.586619],...
2025-04-28 12:12:57.584530 test begin: paddle.maximum(Tensor([3, 1, 2],"float32"), Tensor([261888, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([3, 1, 2],"float32"), Tensor([261888, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 523776 (0.000191%)
Max absolute difference among violations: 0.01475352
Max relative difference among violations: 0.03232931
ACTUAL: array([[-0.595591, -0.013439],
[-0.273326, -0.172245],
[ 0.228151,  0.372818],...
DESIRED: array([[-0.595591, -0.013439],
[-0.273326, -0.172245],
[ 0.228151,  0.372818],...
2025-04-28 12:13:14.113841 test begin: paddle.maximum(Tensor([3, 1, 2],"float32"), Tensor([325113, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([3, 1, 2],"float32"), Tensor([325113, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 6 (16.7%)
Max absolute difference among violations: 0.23326874
Max relative difference among violations: 0.06444219
ACTUAL: array([[[ 53.47468 ,  56.15493 ]],
[[ 87.462006,   3.386545]],...
DESIRED: array([[[ 53.47442 ,  56.15502 ]],
[[ 87.46352 ,   3.619814]],...
2025-04-28 12:13:19.771247 test begin: paddle.maximum(Tensor([3, 1, 2],"float32"), Tensor([349866, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([3, 1, 2],"float32"), Tensor([349866, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 699732 (0.000143%)
Max absolute difference among violations: 0.08070578
Max relative difference among violations: 0.38092604
ACTUAL: array([[-0.468184,  0.667769],
[ 0.      , -0.309021],
[ 0.801438,  0.      ],...
DESIRED: array([[-0.468184,  0.667769],
[ 0.      , -0.309021],
[ 0.801438,  0.      ],...
2025-04-28 12:14:21.454075 test begin: paddle.maximum(Tensor([30, 1, 2],"float32"), Tensor([257796, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([30, 1, 2],"float32"), Tensor([257796, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 515592 (0.000194%)
Max absolute difference among violations: 0.22439456
Max relative difference among violations: 0.09103741
ACTUAL: array([[ 0.32386 ,  0.      ],
[-0.791567,  0.      ],
[-1.520918,  1.851331],...
DESIRED: array([[ 0.32386 ,  0.      ],
[-0.791567,  0.      ],
[-1.520918,  1.851331],...
2025-04-28 12:14:24.557766 test begin: paddle.maximum(Tensor([30, 1, 2],"float32"), Tensor([343728, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([30, 1, 2],"float32"), Tensor([343728, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 60 (1.67%)
Max absolute difference among violations: 0.18252945
Max relative difference among violations: 0.01480579
ACTUAL: array([[[  17.55274 ,   90.78374 ]],
[[  59.016544,   35.669586]],...
DESIRED: array([[[  17.552916,   90.78499 ]],
[[  59.016907,   35.670715]],...
2025-04-28 12:14:28.403170 test begin: paddle.maximum(Tensor([30, 1, 2],"float32"), Tensor([375984, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([30, 1, 2],"float32"), Tensor([375984, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 751968 (0.000133%)
Max absolute difference among violations: 0.05107677
Max relative difference among violations: 0.03122591
ACTUAL: array([[ 0.103591,  0.113325],
[-0.294678,  0.359854],
[ 0.17728 ,  1.81374 ],...
DESIRED: array([[ 0.103591,  0.113325],
[-0.294678,  0.359854],
[ 0.17728 ,  1.81374 ],...
2025-04-28 12:14:54.478017 test begin: paddle.maximum(Tensor([3008, 1, 2],"float32"), Tensor([1, 3060, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([3008, 1, 2],"float32"), Tensor([1, 3060, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 6016 (0.0166%)
Max absolute difference among violations: 0.23773313
Max relative difference among violations: 0.08522197
ACTUAL: array([[[-1.537603e+01,  4.754170e+00]],
[[-1.517728e-02,  3.525286e+00]],...
DESIRED: array([[[-1.537603e+01,  4.754172e+00]],
[[-1.516771e-02,  3.525289e+00]],...
2025-04-28 12:16:14.236905 test begin: paddle.maximum(Tensor([304, 1, 2],"float32"), Tensor([1, 11109, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([304, 1, 2],"float32"), Tensor([1, 11109, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 22218 (0.0045%)
Max absolute difference among violations: 0.10543656
Max relative difference among violations: 0.02997575
ACTUAL: array([[[ 3.09561 , -1.030599],
[ 2.370042,  0.817077],
[-0.427937,  2.832558],...
DESIRED: array([[[ 3.095611, -1.030598],
[ 2.370043,  0.817078],
[-0.427937,  2.832556],...
2025-04-28 12:17:30.345733 test begin: paddle.maximum(Tensor([3072, 1, 2],"float32"), Tensor([1, 2125, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([3072, 1, 2],"float32"), Tensor([1, 2125, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 4250 (0.0235%)
Max absolute difference among violations: 0.0951035
Max relative difference among violations: 0.05032768
ACTUAL: array([[[ -3.588138,   0.863391],
[  0.289533,   5.739707],
[ -5.901899,  24.313206],...
DESIRED: array([[[ -3.588138,   0.863388],
[  0.28953 ,   5.739708],
[ -5.901903,  24.3132  ],...
2025-04-28 12:17:31.520412 test begin: paddle.maximum(Tensor([3072, 1, 2],"float32"), Tensor([1, 2577, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([3072, 1, 2],"float32"), Tensor([1, 2577, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 6144 (0.0163%)
Max absolute difference among violations: 0.0469749
Max relative difference among violations: 0.02156544
ACTUAL: array([[[ 23.25181 ,  16.732533]],
[[  3.683887,   9.913434]],...
DESIRED: array([[[ 23.251822,  16.732533]],
[[  3.683887,   9.913427]],...
2025-04-28 12:18:12.049109 test begin: paddle.maximum(Tensor([31, 1, 2],"float32"), Tensor([236616, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([31, 1, 2],"float32"), Tensor([236616, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 473232 (0.000211%)
Max absolute difference among violations: 0.13719821
Max relative difference among violations: 0.21432422
ACTUAL: array([[-0.969295, -1.656004],
[ 0.192058,  1.962316],
[-0.296847, -0.207909],...
DESIRED: array([[-0.969295, -1.656004],
[ 0.192058,  1.962315],
[-0.296847, -0.207909],...
2025-04-28 12:18:16.340412 test begin: paddle.maximum(Tensor([31, 1, 2],"float32"), Tensor([257796, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([31, 1, 2],"float32"), Tensor([257796, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 515592 (0.000194%)
Max absolute difference among violations: 0.2254714
Max relative difference among violations: 0.9202864
ACTUAL: array([[-1.064345,  2.681423],
[-1.763819,  0.387973],
[ 1.091959,  0.29108 ],...
DESIRED: array([[-1.064345,  2.681423],
[-1.763819,  0.387973],
[ 1.091959,  0.29108 ],...
2025-04-28 12:18:17.798920 test begin: paddle.maximum(Tensor([31, 1, 2],"float32"), Tensor([268560, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([31, 1, 2],"float32"), Tensor([268560, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 537120 (0.000186%)
Max absolute difference among violations: 0.03390962
Max relative difference among violations: 1.
ACTUAL: array([[ 0.053452, -0.758027],
[ 0.674248, -0.831685],
[ 0.506441, -1.342316],...
DESIRED: array([[ 0.053452, -0.758027],
[ 0.674248, -0.831685],
[ 0.506441, -1.342316],...
2025-04-28 12:18:27.119938 test begin: paddle.maximum(Tensor([31, 1, 2],"float32"), Tensor([291555, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([31, 1, 2],"float32"), Tensor([291555, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 583110 (0.000171%)
Max absolute difference among violations: 0.14323214
Max relative difference among violations: 1.9926349
ACTUAL: array([[-0.62198 ,  1.34718 ],
[-0.871039, -0.248357],
[-0.155379,  1.12382 ],...
DESIRED: array([[-0.62198 ,  1.34718 ],
[-0.871039, -0.248357],
[-0.155379,  1.12382 ],...
2025-04-28 12:18:28.854851 test begin: paddle.maximum(Tensor([31, 1, 2],"float32"), Tensor([301302, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([31, 1, 2],"float32"), Tensor([301302, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 62 (1.61%)
Max absolute difference among violations: 0.12816906
Max relative difference among violations: 0.01116033
ACTUAL: array([[[  -5.248044,  -56.501816]],
[[-224.9872  ,  -78.7714  ]],...
DESIRED: array([[[  -5.248188,  -56.50115 ]],
[[-224.99048 ,  -78.77127 ]],...
2025-04-28 12:18:44.290805 test begin: paddle.maximum(Tensor([31, 1, 2],"float32"), Tensor([60480, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([31, 1, 2],"float32"), Tensor([60480, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 62 (1.61%)
Max absolute difference among violations: 0.13858032
Max relative difference among violations: 0.01797638
ACTUAL: array([[[   3.297563,   37.668114]],
[[ -32.41781 ,    7.570441]],...
DESIRED: array([[[   3.297553,   37.66813 ]],
[[ -32.417797,    7.709022]],...
2025-04-28 12:19:16.424159 test begin: paddle.maximum(Tensor([312, 1, 2],"float32"), Tensor([1, 10164, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([312, 1, 2],"float32"), Tensor([1, 10164, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 20328 (0.00492%)
Max absolute difference among violations: 0.05561876
Max relative difference among violations: 0.01672869
ACTUAL: array([[[ 0.525379, -0.383198],
[-1.345686,  0.      ],
[-3.091574, -1.396014],...
DESIRED: array([[[ 0.525378, -0.383196],
[-1.345686,  0.      ],
[-3.091574, -1.396013],...
2025-04-28 12:19:58.722800 test begin: paddle.maximum(Tensor([3140, 1, 2],"float32"), Tensor([9, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([3140, 1, 2],"float32"), Tensor([9, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 6280 (0.0159%)
Max absolute difference among violations: 0.20145795
Max relative difference among violations: 1.4224815
ACTUAL: array([[[ 0.      , -0.478887]],
[[ 0.124353,  0.173302]],...
DESIRED: array([[[ 0.      , -0.478887]],
[[ 0.124353,  0.173302]],...
2025-04-28 12:21:39.150482 test begin: paddle.maximum(Tensor([32, 1, 2],"float32"), Tensor([343728, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([32, 1, 2],"float32"), Tensor([343728, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 64 (1.56%)
Max absolute difference among violations: 0.16445112
Max relative difference among violations: 0.07854497
ACTUAL: array([[[  30.180962,   94.469315]],
[[ -36.756897,   12.79354 ]],...
DESIRED: array([[[  30.181496,   94.46945 ]],
[[ -36.75669 ,   12.793409]],...
2025-04-28 12:24:26.825024 test begin: paddle.maximum(Tensor([33, 1, 2],"float32"), Tensor([217413, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([33, 1, 2],"float32"), Tensor([217413, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 66 (1.52%)
Max absolute difference among violations: 0.08704185
Max relative difference among violations: 0.04214166
ACTUAL: array([[[  20.321625,  -31.205046]],
[[  98.202736,   17.289791]],...
DESIRED: array([[[  20.321732,  -31.205112]],
[[  98.20284 ,   17.28995 ]],...
2025-04-28 12:24:29.902135 test begin: paddle.maximum(Tensor([33, 1, 2],"float32"), Tensor([330429, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([33, 1, 2],"float32"), Tensor([330429, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 660858 (0.000151%)
Max absolute difference among violations: 0.07984495
Max relative difference among violations: 0.06701509
ACTUAL: array([[-1.015765,  0.985151],
[ 1.840944,  1.28004 ],
[-2.489574, -0.824296],...
DESIRED: array([[-1.015765,  0.985151],
[ 1.840944,  1.280041],
[-2.489574, -0.824296],...
2025-04-28 12:26:11.262753 test begin: paddle.maximum(Tensor([336, 1, 2],"float32"), Tensor([1, 4725, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([336, 1, 2],"float32"), Tensor([1, 4725, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 9450 (0.0106%)
Max absolute difference among violations: 0.13219571
Max relative difference among violations: 0.06888894
ACTUAL: array([[[-1.735128, -0.841131],
[-1.654599, -4.300352],
[ 0.786216, -2.176355],...
DESIRED: array([[[-1.735128, -0.841131],
[-1.654599, -4.300352],
[ 0.786216, -2.176355],...
2025-04-28 12:27:06.332210 test begin: paddle.maximum(Tensor([3392, 1, 2],"float32"), Tensor([1, 1726, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([3392, 1, 2],"float32"), Tensor([1, 1726, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 6784 (0.0147%)
Max absolute difference among violations: 0.2098664
Max relative difference among violations: 0.21207541
ACTUAL: array([[[-17.976513,  -3.704147]],
[[ 10.293255,  -5.362875]],...
DESIRED: array([[[-17.976505,  -3.70415 ]],
[[ 10.293262,  -5.362875]],...
2025-04-28 12:30:48.856810 test begin: paddle.maximum(Tensor([352, 1, 2],"float32"), Tensor([1, 10164, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([352, 1, 2],"float32"), Tensor([1, 10164, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 704 (0.142%)
Max absolute difference among violations: 0.09560442
Max relative difference among violations: 0.0304038
ACTUAL: array([[[-1.084214e+01, -3.955647e+01]],
[[ 2.404773e+00,  3.375795e+01]],...
DESIRED: array([[[-1.084215e+01, -3.955650e+01]],
[[ 2.404773e+00,  3.375781e+01]],...
2025-04-28 12:33:43.694563 test begin: paddle.maximum(Tensor([36, 1, 2],"float32"), Tensor([294624, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([36, 1, 2],"float32"), Tensor([294624, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2 / 589248 (0.000339%)
Max absolute difference among violations: 0.21874945
Max relative difference among violations: 18.622498
ACTUAL: array([[ 1.28392 , -1.028919],
[-0.290142,  0.943758],
[-0.708118, -0.53393 ],...
DESIRED: array([[ 1.28392 , -1.028919],
[-0.290142,  0.943758],
[-0.708117, -0.53393 ],...
2025-04-28 12:33:45.814236 test begin: paddle.maximum(Tensor([36, 1, 2],"float32"), Tensor([321759, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([36, 1, 2],"float32"), Tensor([321759, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 643518 (0.000155%)
Max absolute difference among violations: 0.16353583
Max relative difference among violations: 0.13255006
ACTUAL: array([[ 2.244466, -3.398668],
[-1.11548 ,  2.044865],
[-0.893651,  0.247713],...
DESIRED: array([[ 2.244466, -3.398668],
[-1.11548 ,  2.044865],
[-0.893651,  0.247713],...
2025-04-28 12:33:50.184881 test begin: paddle.maximum(Tensor([36, 1, 2],"float32"), Tensor([368280, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([36, 1, 2],"float32"), Tensor([368280, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 736560 (0.000136%)
Max absolute difference among violations: 0.12934169
Max relative difference among violations: 0.37743416
ACTUAL: array([[-2.189371e-02,  0.000000e+00],
[-7.690092e-01, -1.019608e+00],
[-1.000094e+00, -9.028614e-04],...
DESIRED: array([[-2.189374e-02,  0.000000e+00],
[-7.690092e-01, -1.019608e+00],
[-1.000094e+00, -9.029806e-04],...
2025-04-28 12:35:46.587749 test begin: paddle.maximum(Tensor([37, 1, 2],"float32"), Tensor([217413, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([37, 1, 2],"float32"), Tensor([217413, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 74 (1.35%)
Max absolute difference among violations: 0.19720745
Max relative difference among violations: 0.01684741
ACTUAL: array([[[  37.32416 ,  203.62262 ]],
[[ -14.883899, -157.48116 ]],...
DESIRED: array([[[  37.32402 ,  203.62299 ]],
[[ -14.883781, -157.48119 ]],...
2025-04-28 12:35:49.684247 test begin: paddle.maximum(Tensor([37, 1, 2],"float32"), Tensor([349866, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([37, 1, 2],"float32"), Tensor([349866, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2 / 699732 (0.000286%)
Max absolute difference among violations: 0.16856396
Max relative difference among violations: 0.25957483
ACTUAL: array([[-0.860432, -0.172274],
[ 0.011575, -2.396409],
[-0.414143, -1.276733],...
DESIRED: array([[-0.860432, -0.172274],
[ 0.011575, -2.396409],
[-0.414143, -1.276733],...
2025-04-28 12:38:50.972942 test begin: paddle.maximum(Tensor([384, 1, 2],"float32"), Tensor([1, 12096, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([384, 1, 2],"float32"), Tensor([1, 12096, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 24192 (0.00413%)
Max absolute difference among violations: 0.22050428
Max relative difference among violations: 0.09299432
ACTUAL: array([[[ 1.748708,  0.881009],
[-0.237488, -0.884278],
[ 9.659034,  0.410127],...
DESIRED: array([[[ 1.748709,  0.881008],
[-0.237489, -0.884278],
[ 9.659037,  0.410127],...
2025-04-28 12:38:52.362883 test begin: paddle.maximum(Tensor([384, 1, 2],"float32"), Tensor([1, 2541, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([384, 1, 2],"float32"), Tensor([1, 2541, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 768 (0.13%)
Max absolute difference among violations: 0.07871485
Max relative difference among violations: 0.02094372
ACTUAL: array([[[-1.764594e+00, -1.351545e+01]],
[[ 3.073095e+00, -2.257939e+01]],...
DESIRED: array([[[-1.764595e+00, -1.351545e+01]],
[[ 3.073105e+00, -2.257940e+01]],...
2025-04-28 12:38:53.649094 test begin: paddle.maximum(Tensor([384, 1, 2],"float32"), Tensor([1, 4116, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([384, 1, 2],"float32"), Tensor([1, 4116, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 768 (0.13%)
Max absolute difference among violations: 0.12361622
Max relative difference among violations: 0.04080347
ACTUAL: array([[[ 2.183601e+00, -1.501528e+01]],
[[-1.914472e+00,  1.104349e+01]],...
DESIRED: array([[[ 2.183603e+00, -1.501526e+01]],
[[-1.914476e+00,  1.104349e+01]],...
2025-04-28 12:38:55.028059 test begin: paddle.maximum(Tensor([384, 1, 2],"float32"), Tensor([1, 6069, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([384, 1, 2],"float32"), Tensor([1, 6069, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 768 (0.13%)
Max absolute difference among violations: 0.16717243
Max relative difference among violations: 0.02085913
ACTUAL: array([[[-4.304983e+00,  7.194759e+00]],
[[-1.004919e+01,  4.775988e+00]],...
DESIRED: array([[[-4.304996e+00,  7.194769e+00]],
[[-1.004918e+01,  4.775988e+00]],...
2025-04-28 12:39:18.669704 test begin: paddle.maximum(Tensor([3856, 1, 2],"float32"), Tensor([39, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([3856, 1, 2],"float32"), Tensor([39, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 7712 (0.013%)
Max absolute difference among violations: 0.13027197
Max relative difference among violations: 0.31355703
ACTUAL: array([[[-2.671704, -0.550803]],
[[ 1.896987, -0.826505]],...
DESIRED: array([[[-2.671704, -0.550803]],
[[ 1.896986, -0.826505]],...
2025-04-28 12:40:14.518756 test begin: paddle.maximum(Tensor([39, 1, 2],"float32"), Tensor([217413, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([39, 1, 2],"float32"), Tensor([217413, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 434826 (0.00023%)
Max absolute difference among violations: 0.0585711
Max relative difference among violations: 0.01823116
ACTUAL: array([[-0.030863,  1.052174],
[ 0.683439, -1.375848],
[ 0.049834,  1.768594],...
DESIRED: array([[-0.030863,  1.052175],
[ 0.683439, -1.375848],
[ 0.049834,  1.768594],...
2025-04-28 12:40:16.231219 test begin: paddle.maximum(Tensor([39, 1, 2],"float32"), Tensor([242991, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([39, 1, 2],"float32"), Tensor([242991, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 485982 (0.000206%)
Max absolute difference among violations: 0.09314513
Max relative difference among violations: 0.07327503
ACTUAL: array([[-0.271509, -2.404936],
[ 0.007669,  1.693597],
[ 0.129992,  0.019572],...
DESIRED: array([[-0.271509, -2.404937],
[ 0.007669,  1.693597],
[ 0.129992,  0.019572],...
2025-04-28 12:40:22.011082 test begin: paddle.maximum(Tensor([39, 1, 2],"float32"), Tensor([322272, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([39, 1, 2],"float32"), Tensor([322272, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 644544 (0.000155%)
Max absolute difference among violations: 0.04041523
Max relative difference among violations: 0.06600357
ACTUAL: array([[-1.894934, -0.826955],
[-1.020194, -0.545013],
[ 2.054053, -0.014053],...
DESIRED: array([[-1.894935, -0.826955],
[-1.020194, -0.545013],
[ 2.054053, -0.014053],...
2025-04-28 12:42:45.986460 test begin: paddle.maximum(Tensor([4, 1, 2],"float32"), Tensor([182391, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([4, 1, 2],"float32"), Tensor([182391, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 8 (12.5%)
Max absolute difference among violations: 0.14084387
Max relative difference among violations: 0.04660507
ACTUAL: array([[[  18.755249, -261.96213 ]],
[[ -32.18208 ,  133.0837  ]],...
DESIRED: array([[[  18.755302, -261.9626  ]],
[[ -32.181774,  133.0835  ]],...
2025-04-28 12:43:11.436409 test begin: paddle.maximum(Tensor([4, 1, 2],"float32"), Tensor([302832, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([4, 1, 2],"float32"), Tensor([302832, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 605664 (0.000165%)
Max absolute difference among violations: 0.1631841
Max relative difference among violations: 0.2668356
ACTUAL: array([[-0.345921,  0.      ],
[ 0.      ,  0.389319],
[ 0.      ,  0.      ],...
DESIRED: array([[-0.345921,  0.      ],
[ 0.      ,  0.389319],
[ 0.      ,  0.      ],...
2025-04-28 12:43:12.620302 test begin: paddle.maximum(Tensor([4, 1, 2],"float32"), Tensor([306900, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([4, 1, 2],"float32"), Tensor([306900, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 8 (12.5%)
Max absolute difference among violations: 0.15631294
Max relative difference among violations: 0.03211405
ACTUAL: array([[[ 255.53177 ,   98.88806 ]],
[[-135.95854 ,   96.13355 ]],...
DESIRED: array([[[ 255.53091 ,   98.887856]],
[[-135.95914 ,   96.13331 ]],...
2025-04-28 12:43:15.245521 test begin: paddle.maximum(Tensor([4, 1, 2],"float32"), Tensor([319200, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([4, 1, 2],"float32"), Tensor([319200, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 638400 (0.000157%)
Max absolute difference among violations: 0.09855197
Max relative difference among violations: 0.7520736
ACTUAL: array([[-0.291687, -0.558528],
[ 0.      ,  0.      ],
[ 0.109316,  0.      ],...
DESIRED: array([[-0.291687, -0.558528],
[ 0.      ,  0.      ],
[ 0.109316,  0.      ],...
2025-04-28 12:44:08.077707 test begin: paddle.maximum(Tensor([4, 130, 1, 2],"float32"), Tensor([4, 1, 4725, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([4, 130, 1, 2],"float32"), Tensor([4, 1, 4725, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1040 (0.0962%)
Max absolute difference among violations: 0.05173612
Max relative difference among violations: 0.09570424
ACTUAL: array([[[[ 3.235231e-01, -1.235698e+01]],
[[ 6.994538e+00,  5.246322e+00]],...
DESIRED: array([[[[ 3.235145e-01, -1.235697e+01]],
[[ 6.994537e+00,  5.246324e+00]],...
2025-04-28 12:44:33.683385 test begin: paddle.maximum(Tensor([4, 28, 1, 2],"float32"), Tensor([4, 1, 5376, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([4, 28, 1, 2],"float32"), Tensor([4, 1, 5376, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 43008 (0.00233%)
Max absolute difference among violations: 0.04294169
Max relative difference among violations: 1.4134642
ACTUAL: array([[[[ 0.136319, -2.876835],
[-0.419428, -0.603079],
[-1.510502,  0.161494],...
DESIRED: array([[[[ 0.136319, -2.876834],
[-0.419428, -0.603079],
[-1.510502,  0.161494],...
2025-04-28 12:44:43.722110 test begin: paddle.maximum(Tensor([4, 37, 1, 2],"float32"), Tensor([4, 1, 10164, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([4, 37, 1, 2],"float32"), Tensor([4, 1, 10164, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 81312 (0.00123%)
Max absolute difference among violations: 0.23182034
Max relative difference among violations: 0.13044475
ACTUAL: array([[[[-0.838336,  0.257518],
[ 1.270133,  0.347127],
[ 0.      ,  0.232624],...
DESIRED: array([[[[-0.838336,  0.257518],
[ 1.270133,  0.347127],
[ 0.      ,  0.232624],...
2025-04-28 12:44:45.817228 test begin: paddle.maximum(Tensor([4, 394, 1, 2],"float32"), Tensor([4, 1, 4116, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([4, 394, 1, 2],"float32"), Tensor([4, 1, 4116, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2 / 3152 (0.0635%)
Max absolute difference among violations: 0.17911363
Max relative difference among violations: 0.25191247
ACTUAL: array([[[[ 14.792847,  16.199312]],
[[-19.622486,  -2.901553]],...
DESIRED: array([[[[ 14.792857,  16.199316]],
[[-19.622513,  -2.901553]],...
2025-04-28 12:44:51.436160 test begin: paddle.maximum(Tensor([4, 465, 1, 2],"float32"), Tensor([4, 1, 6069, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([4, 465, 1, 2],"float32"), Tensor([4, 1, 6069, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 3720 (0.0269%)
Max absolute difference among violations: 0.18166542
Max relative difference among violations: 0.0489193
ACTUAL: array([[[[ -8.600539,  12.409912]],
[[ -6.502699,  20.458384]],...
DESIRED: array([[[[ -8.600541,  12.40991 ]],
[[ -6.502701,  20.458372]],...
2025-04-28 12:44:57.324606 test begin: paddle.maximum(Tensor([4, 525, 1, 2],"float32"), Tensor([4, 1, 12096, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([4, 525, 1, 2],"float32"), Tensor([4, 1, 12096, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 96768 (0.00103%)
Max absolute difference among violations: 0.17078066
Max relative difference among violations: 0.07534774
ACTUAL: array([[[[ -2.163686,   0.80456 ],
[  4.190701,  -2.230323],
[ -0.168075,  -3.388975],...
DESIRED: array([[[[ -2.163685,   0.80456 ],
[  4.190705,  -2.230325],
[ -0.168075,  -3.388976],...
2025-04-28 12:45:20.701007 test begin: paddle.maximum(Tensor([40, 1, 2],"float32"), Tensor([245520, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([40, 1, 2],"float32"), Tensor([245520, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 491040 (0.000204%)
Max absolute difference among violations: 0.22038126
Max relative difference among violations: 0.16938458
ACTUAL: array([[-1.293336, -1.003867],
[ 0.315386,  2.209825],
[ 1.214811, -1.361398],...
DESIRED: array([[-1.293336, -1.003867],
[ 0.315386,  2.209825],
[ 1.214811, -1.361398],...
2025-04-28 12:47:50.223413 test begin: paddle.maximum(Tensor([4121, 1, 2],"float32"), Tensor([11, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([4121, 1, 2],"float32"), Tensor([11, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 8242 (0.0121%)
Max absolute difference among violations: 0.01199655
Max relative difference among violations: 0.12650959
ACTUAL: array([[[ 0.415405,  0.647176]],
[[ 0.159761, -0.297274]],...
DESIRED: array([[[ 0.415405,  0.647176]],
[[ 0.159761, -0.297274]],...
2025-04-28 12:48:34.259039 test begin: paddle.maximum(Tensor([416, 1, 2],"float32"), Tensor([1, 10164, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([416, 1, 2],"float32"), Tensor([1, 10164, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 20328 (0.00492%)
Max absolute difference among violations: 0.16035539
Max relative difference among violations: 0.6614575
ACTUAL: array([[[ 0.151504,  2.887169],
[ 3.031311,  6.180693],
[-0.618218,  0.      ],...
DESIRED: array([[[ 0.151503,  2.887169],
[ 3.031311,  6.180693],
[-0.618218,  0.      ],...
2025-04-28 12:48:46.455798 test begin: paddle.maximum(Tensor([4164, 11],"float32"), Tensor([1],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([4164, 11],"float32"), Tensor([1],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 45804 (0.00218%)
Max absolute difference among violations: 0.20932144
Max relative difference among violations: 1.
ACTUAL: array([[ 0.40964 , -0.      , -0.161973, ..., -0.319573, -0.47892 ,
0.115776],
[ 0.342481,  0.199191, -0.447974, ..., -0.      , -0.06182 ,...
DESIRED: array([[ 0.40964 ,  0.      , -0.161973, ..., -0.319573, -0.47892 ,
0.115776],
[ 0.342481,  0.199191, -0.447974, ...,  0.      , -0.06182 ,...
2025-04-28 12:49:38.289224 test begin: paddle.maximum(Tensor([4221, 11],"float32"), Tensor([1],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([4221, 11],"float32"), Tensor([1],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 46431 (0.00215%)
Max absolute difference among violations: 0.13638557
Max relative difference among violations: 1.
ACTUAL: array([[ 0.222707, -0.048985, -0.278525, ...,  0.373196, -0.34917 ,
0.428015],
[-0.468704,  0.096547, -0.184195, ..., -0.463846,  0.366717,...
DESIRED: array([[ 0.222707, -0.048985, -0.278525, ...,  0.373196, -0.34917 ,
0.428015],
[-0.468704,  0.096547, -0.184195, ..., -0.463846,  0.366717,...
2025-04-28 12:50:25.304688 test begin: paddle.maximum(Tensor([4276, 19],"float32"), Tensor([1],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([4276, 19],"float32"), Tensor([1],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 81244 (0.00123%)
Max absolute difference among violations: 0.06813216
Max relative difference among violations: 1.
ACTUAL: array([[ 0.472601,  0.131527,  0.063332, ..., -0.      ,  0.      ,
0.      ],
[-0.      , -0.      ,  0.230601, ...,  0.348341,  0.      ,...
DESIRED: array([[ 0.472601,  0.131527,  0.063332, ...,  0.      ,  0.      ,
0.      ],
[ 0.      ,  0.      ,  0.230601, ...,  0.348341,  0.      ,...
2025-04-28 12:50:58.934505 test begin: paddle.maximum(Tensor([432, 1, 2],"float32"), Tensor([1, 10164, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([432, 1, 2],"float32"), Tensor([1, 10164, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 864 (0.116%)
Max absolute difference among violations: 0.19879961
Max relative difference among violations: 0.0739727
ACTUAL: array([[[ 9.035501e+00, -1.181136e+01]],
[[ 1.054022e+01, -1.700520e+01]],...
DESIRED: array([[[ 9.035536e+00, -1.181138e+01]],
[[ 1.054022e+01, -1.700520e+01]],...
2025-04-28 12:51:05.299594 test begin: paddle.maximum(Tensor([432, 1, 2],"float32"), Tensor([1, 7581, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([432, 1, 2],"float32"), Tensor([1, 7581, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 15162 (0.0066%)
Max absolute difference among violations: 0.11630249
Max relative difference among violations: 0.01263905
ACTUAL: array([[[10.854678, -2.979967],
[ 1.815791,  2.711662],
[ 2.052418, -3.360387],...
DESIRED: array([[[10.854676, -2.979967],
[ 1.815791,  2.711664],
[ 2.052418, -3.360388],...
2025-04-28 12:53:27.153724 test begin: paddle.maximum(Tensor([45, 1, 2],"float32"), Tensor([331452, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([45, 1, 2],"float32"), Tensor([331452, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 662904 (0.000151%)
Max absolute difference among violations: 0.15127718
Max relative difference among violations: 0.23275317
ACTUAL: array([[-0.853308, -0.74573 ],
[ 1.405748,  0.562828],
[-0.163986, -1.093203],...
DESIRED: array([[-0.853308, -0.74573 ],
[ 1.405748,  0.562828],
[-0.163986, -1.093203],...
2025-04-28 12:53:53.517841 test begin: paddle.maximum(Tensor([4529, 1, 2],"float32"), Tensor([2, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([4529, 1, 2],"float32"), Tensor([2, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 9058 (0.011%)
Max absolute difference among violations: 0.04590522
Max relative difference among violations: 0.4292306
ACTUAL: array([[[-0.650692, -0.400062]],
[[-0.039596,  0.237815]],...
DESIRED: array([[[-0.650692, -0.400062]],
[[-0.039596,  0.237815]],...
2025-04-28 12:55:20.327290 test begin: paddle.maximum(Tensor([464, 1, 2],"float32"), Tensor([1, 7581, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([464, 1, 2],"float32"), Tensor([1, 7581, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 15162 (0.0066%)
Max absolute difference among violations: 0.05917263
Max relative difference among violations: 0.04551524
ACTUAL: array([[[ 4.128439,  0.360214],
[ 2.263031, -0.726206],
[-2.918081, -0.39913 ],...
DESIRED: array([[[ 4.128439,  0.360216],
[ 2.263029, -0.726206],
[-2.918081, -0.399129],...
2025-04-28 12:58:15.604331 test begin: paddle.maximum(Tensor([480, 1, 2],"float32"), Tensor([1, 2541, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([480, 1, 2],"float32"), Tensor([1, 2541, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 960 (0.104%)
Max absolute difference among violations: 0.05211759
Max relative difference among violations: 0.01461011
ACTUAL: array([[[-1.573363e+01, -1.310071e+00]],
[[ 3.206811e+00,  1.628693e+01]],...
DESIRED: array([[[-1.573363e+01, -1.310070e+00]],
[[ 3.206810e+00,  1.628693e+01]],...
2025-04-28 12:59:05.433957 test begin: paddle.maximum(Tensor([49, 1, 2],"float32"), Tensor([369303, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([49, 1, 2],"float32"), Tensor([369303, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 738606 (0.000135%)
Max absolute difference among violations: 0.23837632
Max relative difference among violations: 0.24936847
ACTUAL: array([[ 1.504863, -0.826713],
[ 0.323081, -0.930837],
[-0.191186, -0.380875],...
DESIRED: array([[ 1.504863, -0.826713],
[ 0.323082, -0.930837],
[-0.191187, -0.380875],...
2025-04-28 13:00:17.687843 test begin: paddle.maximum(Tensor([5, 1, 2],"float32"), Tensor([230202, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([5, 1, 2],"float32"), Tensor([230202, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 460404 (0.000217%)
Max absolute difference among violations: 0.23883039
Max relative difference among violations: 0.31917292
ACTUAL: array([[-0.004595,  0.      ],
[-0.56317 ,  0.      ],
[ 0.      ,  0.412072],...
DESIRED: array([[-0.004595,  0.      ],
[-0.56317 ,  0.      ],
[ 0.      ,  0.412072],...
2025-04-28 13:00:26.236661 test begin: paddle.maximum(Tensor([5, 1, 2],"float32"), Tensor([261681, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([5, 1, 2],"float32"), Tensor([261681, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 523362 (0.000191%)
Max absolute difference among violations: 0.17079702
Max relative difference among violations: 3.1059537
ACTUAL: array([[ 0.47914 ,  0.440592],
[-0.828446, -0.194309],
[-0.201088,  1.052463],...
DESIRED: array([[ 0.47914 ,  0.440592],
[-0.828446, -0.194309],
[-0.201088,  1.052463],...
2025-04-28 13:00:52.218654 test begin: paddle.maximum(Tensor([5, 1, 2],"float32"), Tensor([368280, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([5, 1, 2],"float32"), Tensor([368280, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 736560 (0.000136%)
Max absolute difference among violations: 0.16079557
Max relative difference among violations: 0.38964093
ACTUAL: array([[-0.534776, -0.123997],
[ 0.02588 ,  0.656768],
[-0.582167,  0.2682  ],...
DESIRED: array([[-0.534776, -0.123997],
[ 0.02588 ,  0.656768],
[-0.582167,  0.2682  ],...
2025-04-28 13:00:58.156602 test begin: paddle.maximum(Tensor([5, 1, 2],"float32"), Tensor([440433, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([5, 1, 2],"float32"), Tensor([440433, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 880866 (0.000114%)
Max absolute difference among violations: 0.1494958
Max relative difference among violations: 1.
ACTUAL: array([[ 0.190174, -0.028117],
[ 0.58888 ,  0.214881],
[-0.035583,  0.652188],...
DESIRED: array([[ 0.190174, -0.028117],
[ 0.58888 ,  0.214881],
[-0.035583,  0.652188],...
2025-04-28 13:01:12.922245 test begin: paddle.maximum(Tensor([5, 1, 2],"float32"), Tensor([81000, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([5, 1, 2],"float32"), Tensor([81000, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 162000 (0.000617%)
Max absolute difference among violations: 0.12113319
Max relative difference among violations: 2.0108085
ACTUAL: array([[ 0.      , -0.369818],
[ 0.      ,  0.953078],
[-0.065306,  0.690217],...
DESIRED: array([[ 0.      , -0.369818],
[ 0.      ,  0.953078],
[-0.065306,  0.690217],...
2025-04-28 13:01:19.958099 test begin: paddle.maximum(Tensor([50, 1, 2],"float32"), Tensor([321759, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([50, 1, 2],"float32"), Tensor([321759, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2 / 643518 (0.000311%)
Max absolute difference among violations: 0.15176308
Max relative difference among violations: 0.08415566
ACTUAL: array([[-1.349187, -1.955939],
[-3.149601,  1.722483],
[ 0.893225,  2.190713],...
DESIRED: array([[-1.349187, -1.955939],
[-3.149601,  1.722483],
[ 0.893225,  2.190713],...
2025-04-28 13:02:03.659001 test begin: paddle.maximum(Tensor([51, 1, 2],"float32"), Tensor([242991, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([51, 1, 2],"float32"), Tensor([242991, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 485982 (0.000206%)
Max absolute difference among violations: 0.12622058
Max relative difference among violations: 0.07882484
ACTUAL: array([[ 2.425198e+00,  1.324100e+00],
[-2.330700e-01, -3.630138e-01],
[-1.670447e+00,  3.949468e-01],...
DESIRED: array([[ 2.425198e+00,  1.324100e+00],
[-2.330700e-01, -3.630138e-01],
[-1.670447e+00,  3.949468e-01],...
2025-04-28 13:02:05.677601 test begin: paddle.maximum(Tensor([51, 1, 2],"float32"), Tensor([310992, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([51, 1, 2],"float32"), Tensor([310992, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 3 / 621984 (0.000482%)
Max absolute difference among violations: 0.17476144
Max relative difference among violations: 0.54926395
ACTUAL: array([[-0.754399, -0.680406],
[-0.327694, -1.737655],
[-1.383679,  0.57059 ],...
DESIRED: array([[-0.754399, -0.680406],
[-0.327694, -1.737654],
[-1.383679,  0.57059 ],...
2025-04-28 13:04:34.094930 test begin: paddle.maximum(Tensor([542, 1, 2],"float32"), Tensor([2, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([542, 1, 2],"float32"), Tensor([2, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1084 (0.0923%)
Max absolute difference among violations: 0.12113169
Max relative difference among violations: 1.
ACTUAL: array([[[ 0.062563,  0.      ]],
[[-0.38766 ,  0.      ]],...
DESIRED: array([[[ 0.062563,  0.      ]],
[[-0.38766 ,  0.      ]],...
2025-04-28 13:07:08.333561 test begin: paddle.maximum(Tensor([576, 1, 2],"float32"), Tensor([1, 3549, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([576, 1, 2],"float32"), Tensor([1, 3549, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 7098 (0.0141%)
Max absolute difference among violations: 0.09794044
Max relative difference among violations: 0.03366673
ACTUAL: array([[[-2.124897, 11.115927],
[-2.744285, -7.380044],
[ 2.132318, -1.412439],...
DESIRED: array([[[-2.124899, 11.115923],
[-2.744284, -7.380041],
[ 2.132318, -1.41244 ],...
2025-04-28 13:09:14.866649 test begin: paddle.maximum(Tensor([6, 1, 2],"float32"), Tensor([191301, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([6, 1, 2],"float32"), Tensor([191301, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 382602 (0.000261%)
Max absolute difference among violations: 0.09117633
Max relative difference among violations: 0.23045115
ACTUAL: array([[ 1.162735,  0.      ],
[ 0.468645,  0.294744],
[ 0.      , -0.449136],...
DESIRED: array([[ 1.162735,  0.      ],
[ 0.468645,  0.294744],
[ 0.      , -0.449136],...
2025-04-28 13:09:26.044725 test begin: paddle.maximum(Tensor([6, 1, 2],"float32"), Tensor([236334, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([6, 1, 2],"float32"), Tensor([236334, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 472668 (0.000212%)
Max absolute difference among violations: 0.12833357
Max relative difference among violations: 1.9022998
ACTUAL: array([[ 0.891353,  0.320407],
[ 0.2161  ,  0.106508],
[-0.462466, -0.276303],...
DESIRED: array([[ 0.891353,  0.320407],
[ 0.2161  ,  0.106508],
[-0.462466, -0.276303],...
2025-04-28 13:09:33.703092 test begin: paddle.maximum(Tensor([6, 1, 2],"float32"), Tensor([261681, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([6, 1, 2],"float32"), Tensor([261681, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 12 (8.33%)
Max absolute difference among violations: 0.23059654
Max relative difference among violations: 0.02876242
ACTUAL: array([[[  18.265696, -165.55898 ]],
[[ -19.002771,   56.84189 ]],...
DESIRED: array([[[  18.26546 , -165.5593  ]],
[[ -19.002703,   56.841675]],...
2025-04-28 13:09:45.598178 test begin: paddle.maximum(Tensor([6, 1, 2],"float32"), Tensor([291555, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([6, 1, 2],"float32"), Tensor([291555, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 583110 (0.000171%)
Max absolute difference among violations: 0.11370987
Max relative difference among violations: 0.19775158
ACTUAL: array([[ 0.488395,  0.      ],
[-0.705702,  0.4691  ],
[-0.78413 ,  0.20784 ],...
DESIRED: array([[ 0.488395,  0.      ],
[-0.705702,  0.4691  ],
[-0.78413 ,  0.20784 ],...
2025-04-28 13:09:48.785964 test begin: paddle.maximum(Tensor([6, 1, 2],"float32"), Tensor([301302, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([6, 1, 2],"float32"), Tensor([301302, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 602604 (0.000166%)
Max absolute difference among violations: 0.07335535
Max relative difference among violations: 0.29752237
ACTUAL: array([[-0.705464,  0.092106],
[ 0.193379, -0.527601],
[ 0.560367,  0.346336],...
DESIRED: array([[-0.705464,  0.092106],
[ 0.193379, -0.527601],
[ 0.560367,  0.346336],...
2025-04-28 13:09:55.889039 test begin: paddle.maximum(Tensor([6, 1, 2],"float32"), Tensor([320739, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([6, 1, 2],"float32"), Tensor([320739, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 641478 (0.000156%)
Max absolute difference among violations: 0.22842848
Max relative difference among violations: 0.59169644
ACTUAL: array([[-0.005391, -0.304148],
[-0.083624,  0.250513],
[-0.866497, -0.335204],...
DESIRED: array([[-0.005391, -0.304148],
[-0.083624,  0.250513],
[-0.866497, -0.335204],...
2025-04-28 13:10:04.006478 test begin: paddle.maximum(Tensor([6, 1, 2],"float32"), Tensor([343728, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([6, 1, 2],"float32"), Tensor([343728, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 687456 (0.000145%)
Max absolute difference among violations: 0.08682248
Max relative difference among violations: 0.18400088
ACTUAL: array([[ 0.847603,  0.288893],
[ 0.      , -0.154666],
[-0.121243, -0.103302],...
DESIRED: array([[ 0.847603,  0.288893],
[ 0.      , -0.154666],
[-0.121243, -0.103302],...
2025-04-28 13:10:15.528058 test begin: paddle.maximum(Tensor([6, 1, 2],"float32"), Tensor([388740, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([6, 1, 2],"float32"), Tensor([388740, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2 / 777480 (0.000257%)
Max absolute difference among violations: 0.18036729
Max relative difference among violations: 1.
ACTUAL: array([[-1.005852,  0.725176],
[ 0.408207,  0.886838],
[ 0.324561, -0.607778],...
DESIRED: array([[-1.005852,  0.725176],
[ 0.408207,  0.886838],
[ 0.324561, -0.607778],...
2025-04-28 13:10:24.391921 test begin: paddle.maximum(Tensor([6, 1, 2],"float32"), Tensor([58320, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([6, 1, 2],"float32"), Tensor([58320, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 12 (8.33%)
Max absolute difference among violations: 0.24717522
Max relative difference among violations: 0.01253069
ACTUAL: array([[[-14.619217,  68.1313  ]],
[[ 60.434563, -76.0223  ]],...
DESIRED: array([[[-14.619217,  68.13122 ]],
[[ 60.43461 , -76.02205 ]],...
2025-04-28 13:10:28.873076 test begin: paddle.maximum(Tensor([6, 1, 2],"float32"), Tensor([68400, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([6, 1, 2],"float32"), Tensor([68400, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 136800 (0.000731%)
Max absolute difference among violations: 0.08608639
Max relative difference among violations: 0.14000212
ACTUAL: array([[ 0.425095, -0.969147],
[ 0.233396,  0.232073],
[ 0.074694,  0.039505],...
DESIRED: array([[ 0.425095, -0.969147],
[ 0.233396,  0.232073],
[ 0.074694,  0.039505],...
2025-04-28 13:11:17.347227 test begin: paddle.maximum(Tensor([608, 1, 2],"float32"), Tensor([1, 7581, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([608, 1, 2],"float32"), Tensor([1, 7581, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 15162 (0.0066%)
Max absolute difference among violations: 0.1176343
Max relative difference among violations: 0.01612361
ACTUAL: array([[[ 4.852191, -0.6971  ],
[-2.041139, -3.722899],
[ 0.148721, -0.418936],...
DESIRED: array([[[ 4.85219 , -0.697103],
[-2.041138, -3.722899],
[ 0.14872 , -0.418936],...
2025-04-28 13:13:40.133754 test begin: paddle.maximum(Tensor([64, 15, 1, 2],"float32"), Tensor([64, 1, 1726, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([64, 15, 1, 2],"float32"), Tensor([64, 1, 1726, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 220928 (0.000453%)
Max absolute difference among violations: 0.05215979
Max relative difference among violations: 0.10901611
ACTUAL: array([[[[ 0.714231, -0.450122],
[-0.469844,  0.015076],
[-0.281839,  0.548669],...
DESIRED: array([[[[ 0.714231, -0.450122],
[-0.469844,  0.015076],
[-0.281839,  0.548669],...
2025-04-28 13:13:53.799567 test begin: paddle.maximum(Tensor([64, 20, 1, 2],"float32"), Tensor([64, 1, 3060, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([64, 20, 1, 2],"float32"), Tensor([64, 1, 3060, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 391680 (0.000255%)
Max absolute difference among violations: 0.017277
Max relative difference among violations: 0.08504433
ACTUAL: array([[[[ 0.421799, -2.145278],
[-0.633926, -0.314217],
[-0.467784, -1.420608],...
DESIRED: array([[[[ 0.421799, -2.145278],
[-0.633926, -0.314217],
[-0.467784, -1.420608],...
2025-04-28 13:14:04.587763 test begin: paddle.maximum(Tensor([64, 23, 1, 2],"float32"), Tensor([64, 1, 3060, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([64, 23, 1, 2],"float32"), Tensor([64, 1, 3060, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 2944 (0.034%)
Max absolute difference among violations: 0.24390507
Max relative difference among violations: 0.03317043
ACTUAL: array([[[[ -6.859193, -16.036867]],
[[-18.735132,  -3.357033]],...
DESIRED: array([[[[ -6.8592  , -16.036875]],
[[-18.735138,  -3.357032]],...
2025-04-28 13:14:10.270600 test begin: paddle.maximum(Tensor([64, 25, 1, 2],"float32"), Tensor([64, 1, 2125, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([64, 25, 1, 2],"float32"), Tensor([64, 1, 2125, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 3200 (0.0312%)
Max absolute difference among violations: 0.06614375
Max relative difference among violations: 0.02043539
ACTUAL: array([[[[ 2.745265e+00, -1.506958e+01]],
[[ 3.344807e+00, -3.725455e+00]],...
DESIRED: array([[[[ 2.745256e+00, -1.506957e+01]],
[[ 3.344808e+00, -3.725455e+00]],...
2025-04-28 13:14:13.945180 test begin: paddle.maximum(Tensor([64, 26, 1, 2],"float32"), Tensor([64, 1, 2125, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([64, 26, 1, 2],"float32"), Tensor([64, 1, 2125, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 3328 (0.03%)
Max absolute difference among violations: 0.24135876
Max relative difference among violations: 0.04969266
ACTUAL: array([[[[-2.185737e-01, -2.683083e+00]],
[[-2.970182e+00,  4.475173e+00]],...
DESIRED: array([[[[-2.185745e-01, -2.683081e+00]],
[[-2.970184e+00,  4.475171e+00]],...
2025-04-28 13:14:23.080205 test begin: paddle.maximum(Tensor([64, 28, 1, 2],"float32"), Tensor([64, 1, 2577, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([64, 28, 1, 2],"float32"), Tensor([64, 1, 2577, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 3584 (0.0279%)
Max absolute difference among violations: 0.14412165
Max relative difference among violations: 0.0212041
ACTUAL: array([[[[ -7.570279, -11.81709 ]],
[[ -9.976895,   2.995941]],...
DESIRED: array([[[[ -7.570279, -11.817096]],
[[ -9.976889,   2.995941]],...
2025-04-28 13:14:27.455345 test begin: paddle.maximum(Tensor([64, 29, 1, 2],"float32"), Tensor([64, 1, 2577, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([64, 29, 1, 2],"float32"), Tensor([64, 1, 2577, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 3712 (0.0269%)
Max absolute difference among violations: 0.17986012
Max relative difference among violations: 0.05818783
ACTUAL: array([[[[ 2.365486e+01, -1.623373e+01]],
[[ 2.079608e+00, -4.666730e+00]],...
DESIRED: array([[[[ 2.365487e+01, -1.623372e+01]],
[[ 2.079609e+00, -4.666730e+00]],...
2025-04-28 13:14:28.512889 test begin: paddle.maximum(Tensor([64, 29, 1, 2],"float32"), Tensor([64, 1, 3060, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([64, 29, 1, 2],"float32"), Tensor([64, 1, 3060, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 391680 (0.000255%)
Max absolute difference among violations: 0.11978912
Max relative difference among violations: 0.12240354
ACTUAL: array([[[[ 2.213738, -0.414397],
[ 1.5624  , -1.267582],
[ 0.883418, -1.133882],...
DESIRED: array([[[[ 2.213738, -0.414397],
[ 1.5624  , -1.267582],
[ 0.883417, -1.133882],...
2025-04-28 13:14:37.942322 test begin: paddle.maximum(Tensor([64, 31, 1, 2],"float32"), Tensor([64, 1, 3060, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([64, 31, 1, 2],"float32"), Tensor([64, 1, 3060, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 391680 (0.000255%)
Max absolute difference among violations: 0.04190587
Max relative difference among violations: 0.4745195
ACTUAL: array([[[[-1.030570e+00, -7.532063e-01],
[ 1.160611e+00, -3.396955e-01],
[ 1.739259e-01,  7.338739e-01],...
DESIRED: array([[[[-1.030570e+00, -7.532063e-01],
[ 1.160610e+00, -3.396954e-01],
[ 1.739258e-01,  7.338738e-01],...
2025-04-28 13:14:43.647665 test begin: paddle.maximum(Tensor([64, 33, 1, 2],"float32"), Tensor([64, 1, 2577, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([64, 33, 1, 2],"float32"), Tensor([64, 1, 2577, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 4224 (0.0237%)
Max absolute difference among violations: 0.24893093
Max relative difference among violations: 0.07827811
ACTUAL: array([[[[ -8.162251,  13.316634]],
[[ -4.099075,  -9.358256]],...
DESIRED: array([[[[ -8.162249,  13.316634]],
[[ -4.099075,  -9.358255]],...
2025-04-28 13:14:44.808380 test begin: paddle.maximum(Tensor([64, 33, 1, 2],"float32"), Tensor([64, 1, 3060, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([64, 33, 1, 2],"float32"), Tensor([64, 1, 3060, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 4224 (0.0237%)
Max absolute difference among violations: 0.13988018
Max relative difference among violations: 0.01577528
ACTUAL: array([[[[ -5.623277, -13.339985]],
[[  8.705842,   5.680048]],...
DESIRED: array([[[[ -5.623268, -13.33999 ]],
[[  8.705841,   5.680038]],...
2025-04-28 13:14:46.893107 test begin: paddle.maximum(Tensor([64, 34, 1, 2],"float32"), Tensor([64, 1, 2125, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([64, 34, 1, 2],"float32"), Tensor([64, 1, 2125, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 4352 (0.023%)
Max absolute difference among violations: 0.18337435
Max relative difference among violations: 0.44966373
ACTUAL: array([[[[ -5.119417, -11.673374]],
[[ 12.378228,   6.598114]],...
DESIRED: array([[[[ -5.119416, -11.673384]],
[[ 12.378239,   6.598118]],...
2025-04-28 13:14:50.223092 test begin: paddle.maximum(Tensor([64, 34, 1, 2],"float32"), Tensor([64, 1, 3060, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([64, 34, 1, 2],"float32"), Tensor([64, 1, 3060, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 4352 (0.023%)
Max absolute difference among violations: 0.11475062
Max relative difference among violations: 0.1239974
ACTUAL: array([[[[  7.621019,  12.875499]],
[[-11.581433,  -2.588228]],...
DESIRED: array([[[[  7.621016,  12.875503]],
[[-11.581429,  -2.588228]],...
2025-04-28 13:14:56.703403 test begin: paddle.maximum(Tensor([64, 36, 1, 2],"float32"), Tensor([64, 1, 1360, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([64, 36, 1, 2],"float32"), Tensor([64, 1, 1360, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2 / 4608 (0.0434%)
Max absolute difference among violations: 0.20536327
Max relative difference among violations: 0.03898571
ACTUAL: array([[[[  3.374035,  -7.182677]],
[[ -3.986331,  10.0519  ]],...
DESIRED: array([[[[  3.374034,  -7.182677]],
[[ -3.986331,  10.051892]],...
2025-04-28 13:14:58.446400 test begin: paddle.maximum(Tensor([64, 36, 1, 2],"float32"), Tensor([64, 1, 2577, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([64, 36, 1, 2],"float32"), Tensor([64, 1, 2577, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 4608 (0.0217%)
Max absolute difference among violations: 0.1620884
Max relative difference among violations: 0.01919391
ACTUAL: array([[[[ -1.685838,   8.466357]],
[[ -7.4416  ,   4.375506]],...
DESIRED: array([[[[ -1.685837,   8.466352]],
[[ -7.441599,   4.375504]],...
2025-04-28 13:15:10.447886 test begin: paddle.maximum(Tensor([64, 39, 1, 2],"float32"), Tensor([64, 1, 2125, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([64, 39, 1, 2],"float32"), Tensor([64, 1, 2125, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 4992 (0.02%)
Max absolute difference among violations: 0.15172124
Max relative difference among violations: 0.04199539
ACTUAL: array([[[[  8.29075 ,  -7.023387]],
[[ -0.436931,  -4.67861 ]],...
DESIRED: array([[[[  8.290751,  -7.023382]],
[[ -0.436931,  -4.678611]],...
2025-04-28 13:15:11.434688 test begin: paddle.maximum(Tensor([64, 39, 1, 2],"float32"), Tensor([64, 1, 2577, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([64, 39, 1, 2],"float32"), Tensor([64, 1, 2577, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 4992 (0.02%)
Max absolute difference among violations: 0.11632872
Max relative difference among violations: 0.02073788
ACTUAL: array([[[[ -0.599465, -10.860888]],
[[ -1.290911,  10.160845]],...
DESIRED: array([[[[ -0.599472, -10.860886]],
[[ -1.29091 ,  10.160822]],...
2025-04-28 13:15:14.258317 test begin: paddle.maximum(Tensor([64, 40, 1, 2],"float32"), Tensor([64, 1, 1360, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([64, 40, 1, 2],"float32"), Tensor([64, 1, 1360, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 5120 (0.0195%)
Max absolute difference among violations: 0.06096125
Max relative difference among violations: 0.0221824
ACTUAL: array([[[[ 1.077203e+01,  5.040576e+00]],
[[ 8.328145e+00,  8.261406e+00]],...
DESIRED: array([[[[ 1.077204e+01,  5.040576e+00]],
[[ 8.328143e+00,  8.261407e+00]],...
2025-04-28 13:15:22.487808 test begin: paddle.maximum(Tensor([64, 42, 1, 2],"float32"), Tensor([64, 1, 3060, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([64, 42, 1, 2],"float32"), Tensor([64, 1, 3060, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 5376 (0.0186%)
Max absolute difference among violations: 0.2365942
Max relative difference among violations: 0.03272577
ACTUAL: array([[[[ -2.511133,   3.252855]],
[[-23.533129,   7.427383]],...
DESIRED: array([[[[ -2.511145,   3.252853]],
[[-23.533138,   7.427386]],...
2025-04-28 13:15:37.444127 test begin: paddle.maximum(Tensor([64, 50, 1, 2],"float32"), Tensor([64, 1, 3060, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([64, 50, 1, 2],"float32"), Tensor([64, 1, 3060, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 391680 (0.000255%)
Max absolute difference among violations: 0.03801697
Max relative difference among violations: 0.04020344
ACTUAL: array([[[[ 0.253696, -1.192196],
[ 3.408158,  0.639364],
[ 0.306595, -2.710202],...
DESIRED: array([[[[ 0.253696, -1.192196],
[ 3.408159,  0.639364],
[ 0.306595, -2.710202],...
2025-04-28 13:15:42.797122 test begin: paddle.maximum(Tensor([64, 53, 1, 2],"float32"), Tensor([64, 1, 1360, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([64, 53, 1, 2],"float32"), Tensor([64, 1, 1360, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 6784 (0.0147%)
Max absolute difference among violations: 0.08578873
Max relative difference among violations: 0.02113003
ACTUAL: array([[[[ -0.333308,   3.321628]],
[[ 12.304435,  -9.143109]],...
DESIRED: array([[[[ -0.333308,   3.32163 ]],
[[ 12.30444 ,  -9.143105]],...
2025-04-28 13:20:47.650273 test begin: paddle.maximum(Tensor([7, 1, 2],"float32"), Tensor([294624, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([7, 1, 2],"float32"), Tensor([294624, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 14 (7.14%)
Max absolute difference among violations: 0.0607686
Max relative difference among violations: 0.01416531
ACTUAL: array([[[ -65.95321 ,  246.82729 ]],
[[ -68.50741 ,   85.86617 ]],...
DESIRED: array([[[ -65.95325 ,  246.82562 ]],
[[ -68.5085  ,   85.86583 ]],...
2025-04-28 13:20:48.106904 test begin: paddle.maximum(Tensor([7, 1, 2],"float32"), Tensor([295443, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([7, 1, 2],"float32"), Tensor([295443, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2 / 590886 (0.000338%)
Max absolute difference among violations: 0.18174273
Max relative difference among violations: 1.9343705
ACTUAL: array([[-0.420697,  0.021821],
[-0.173135, -0.348189],
[-0.50094 ,  0.386009],...
DESIRED: array([[-0.420697,  0.021821],
[-0.173135, -0.348189],
[-0.50094 ,  0.386009],...
2025-04-28 13:20:53.702043 test begin: paddle.maximum(Tensor([7, 1, 2],"float32"), Tensor([320739, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([7, 1, 2],"float32"), Tensor([320739, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 641478 (0.000156%)
Max absolute difference among violations: 0.13558984
Max relative difference among violations: 0.40474615
ACTUAL: array([[ 0.786471, -1.000994],
[-0.379015, -0.140258],
[-0.369787,  0.810886],...
DESIRED: array([[ 0.786471, -1.000994],
[-0.379015, -0.140258],
[-0.369787,  0.810886],...
2025-04-28 13:21:06.684653 test begin: paddle.maximum(Tensor([7, 1, 2],"float32"), Tensor([378540, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([7, 1, 2],"float32"), Tensor([378540, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 757080 (0.000132%)
Max absolute difference among violations: 0.18074171
Max relative difference among violations: 1.
ACTUAL: array([[-0.23233 ,  0.712805],
[ 0.      ,  1.50939 ],
[-0.588079,  0.405047],...
DESIRED: array([[-0.23233 ,  0.712805],
[ 0.      ,  1.509389],
[-0.588079,  0.405047],...
2025-04-28 13:21:18.003919 test begin: paddle.maximum(Tensor([7, 1, 2],"float32"), Tensor([62730, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([7, 1, 2],"float32"), Tensor([62730, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 14 (7.14%)
Max absolute difference among violations: 0.22783184
Max relative difference among violations: 0.0177184
ACTUAL: array([[[  1.231021,  28.013308]],
[[  2.98806 , -46.04204 ]],...
DESIRED: array([[[  1.231024,  28.01331 ]],
[[  2.987892, -46.042114]],...
2025-04-28 13:27:00.474177 test begin: paddle.maximum(Tensor([784, 1, 2],"float32"), Tensor([1, 11109, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([784, 1, 2],"float32"), Tensor([1, 11109, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 22218 (0.0045%)
Max absolute difference among violations: 0.22940254
Max relative difference among violations: 0.03051089
ACTUAL: array([[[-2.589898,  3.389749],
[ 8.315708,  3.869097],
[ 4.801866,  5.112491],...
DESIRED: array([[[-2.589897,  3.389749],
[ 8.315707,  3.869096],
[ 4.801867,  5.112491],...
2025-04-28 13:28:20.893867 test begin: paddle.maximum(Tensor([8, 1, 2],"float32"), Tensor([229152, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([8, 1, 2],"float32"), Tensor([229152, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 458304 (0.000218%)
Max absolute difference among violations: 0.19366589
Max relative difference among violations: 2.1908407
ACTUAL: array([[-0.070616,  0.76008 ],
[-0.835695,  0.      ],
[-0.371908, -0.388874],...
DESIRED: array([[-0.070616,  0.76008 ],
[-0.835695,  0.      ],
[-0.371908, -0.388874],...
2025-04-28 13:28:22.299613 test begin: paddle.maximum(Tensor([8, 1, 2],"float32"), Tensor([236334, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([8, 1, 2],"float32"), Tensor([236334, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 472668 (0.000212%)
Max absolute difference among violations: 0.05807934
Max relative difference among violations: 1.
ACTUAL: array([[ 0.945159,  0.542069],
[-0.148852, -0.523697],
[-0.642435,  0.75779 ],...
DESIRED: array([[ 0.945159,  0.542069],
[-0.148852, -0.523697],
[-0.642435,  0.75779 ],...
2025-04-28 13:28:28.401819 test begin: paddle.maximum(Tensor([8, 1, 2],"float32"), Tensor([261681, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([8, 1, 2],"float32"), Tensor([261681, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2 / 523362 (0.000382%)
Max absolute difference among violations: 0.16427459
Max relative difference among violations: 2.957652
ACTUAL: array([[-0.212271, -1.091768],
[ 0.573967,  0.44157 ],
[-0.174939,  1.171805],...
DESIRED: array([[-0.212271, -1.091768],
[ 0.573967,  0.44157 ],
[-0.174939,  1.171805],...
2025-04-28 13:28:30.430622 test begin: paddle.maximum(Tensor([8, 1, 2],"float32"), Tensor([268560, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([8, 1, 2],"float32"), Tensor([268560, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 16 (6.25%)
Max absolute difference among violations: 0.23999166
Max relative difference among violations: 0.11497733
ACTUAL: array([[[-117.6426  ,    1.847304]],
[[  32.90139 , -127.88259 ]],...
DESIRED: array([[[-117.64172 ,    2.087296]],
[[  32.901817, -127.882324]],...
2025-04-28 13:28:44.961162 test begin: paddle.maximum(Tensor([8, 1, 2],"float32"), Tensor([320739, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([8, 1, 2],"float32"), Tensor([320739, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 641478 (0.000156%)
Max absolute difference among violations: 0.04266784
Max relative difference among violations: 0.22092669
ACTUAL: array([[-1.26394 ,  0.809627],
[-1.119866, -0.013166],
[ 0.187925,  0.048116],...
DESIRED: array([[-1.26394 ,  0.809627],
[-1.119866, -0.013166],
[ 0.187925,  0.048116],...
2025-04-28 13:28:56.658205 test begin: paddle.maximum(Tensor([8, 1, 2],"float32"), Tensor([377514, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([8, 1, 2],"float32"), Tensor([377514, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 16 (6.25%)
Max absolute difference among violations: 0.23767376
Max relative difference among violations: 0.01987815
ACTUAL: array([[[ 160.75584 ,  -65.28602 ]],
[[ -36.094135,  129.12846 ]],...
DESIRED: array([[[ 160.75505 ,  -65.28599 ]],
[[ -36.094215,  129.1288  ]],...
2025-04-28 13:29:06.709614 test begin: paddle.maximum(Tensor([8, 1, 2],"float32"), Tensor([61500, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([8, 1, 2],"float32"), Tensor([61500, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 16 (6.25%)
Max absolute difference among violations: 0.2278657
Max relative difference among violations: 0.03512791
ACTUAL: array([[[ 74.30767 ,  80.461914]],
[[ -6.714607,  21.72943 ]],...
DESIRED: array([[[ 74.30812 ,  80.46137 ]],
[[ -6.486742,  21.729609]],...
2025-04-28 13:29:09.452615 test begin: paddle.maximum(Tensor([8, 1, 2],"float32"), Tensor([70350, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([8, 1, 2],"float32"), Tensor([70350, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 140700 (0.000711%)
Max absolute difference among violations: 0.24849014
Max relative difference among violations: 2.8329759
ACTUAL: array([[-0.224408, -0.344709],
[-0.070142, -1.104686],
[ 0.      ,  0.      ],...
DESIRED: array([[-0.224408, -0.344709],
[-0.070142, -1.104686],
[ 0.      ,  0.      ],...
2025-04-28 13:29:11.523622 test begin: paddle.maximum(Tensor([8, 1, 2],"float32"), Tensor([75375, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([8, 1, 2],"float32"), Tensor([75375, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 150750 (0.000663%)
Max absolute difference among violations: 0.1830588
Max relative difference among violations: 0.20681852
ACTUAL: array([[-1.544727, -0.566908],
[ 0.      ,  0.303863],
[ 0.416576,  0.440898],...
DESIRED: array([[-1.544727, -0.566908],
[ 0.      ,  0.303863],
[ 0.416576,  0.440898],...
2025-04-28 13:30:01.560830 test begin: paddle.maximum(Tensor([8, 17, 1, 2],"float32"), Tensor([8, 1, 12096, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([8, 17, 1, 2],"float32"), Tensor([8, 1, 12096, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 272 (0.368%)
Max absolute difference among violations: 0.15482903
Max relative difference among violations: 0.01837822
ACTUAL: array([[[[-1.103670e+01, -1.106182e+01]],
[[ 6.861108e+00,  9.554489e+00]],...
DESIRED: array([[[[-1.103667e+01, -1.106182e+01]],
[[ 6.861104e+00,  9.554426e+00]],...
2025-04-28 13:30:41.000737 test begin: paddle.maximum(Tensor([8, 23, 1, 2],"float32"), Tensor([8, 1, 11109, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([8, 23, 1, 2],"float32"), Tensor([8, 1, 11109, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 368 (0.272%)
Max absolute difference among violations: 0.08546662
Max relative difference among violations: 0.34307313
ACTUAL: array([[[[ 27.83887 , -39.220924]],
[[-11.116261,  23.272533]],...
DESIRED: array([[[[ 27.838902, -39.220936]],
[[-11.116259,  23.272543]],...
2025-04-28 13:30:45.220645 test begin: paddle.maximum(Tensor([8, 23, 1, 2],"float32"), Tensor([8, 1, 9261, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([8, 23, 1, 2],"float32"), Tensor([8, 1, 9261, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 148176 (0.000675%)
Max absolute difference among violations: 0.1202749
Max relative difference among violations: 0.4742922
ACTUAL: array([[[[ 0.383704, -1.237852],
[-0.599224,  0.      ],
[-1.33309 , -0.146745],...
DESIRED: array([[[[ 0.383704, -1.237852],
[-0.599224,  0.      ],
[-1.33309 , -0.146745],...
2025-04-28 13:31:12.293669 test begin: paddle.maximum(Tensor([8, 28, 1, 2],"float32"), Tensor([8, 1, 9261, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([8, 28, 1, 2],"float32"), Tensor([8, 1, 9261, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 448 (0.223%)
Max absolute difference among violations: 0.19181812
Max relative difference among violations: 0.5981623
ACTUAL: array([[[[-7.878794e+00, -2.743115e+01]],
[[-4.646282e+00, -1.380514e+01]],...
DESIRED: array([[[[-7.878796e+00, -2.743110e+01]],
[[-4.646261e+00, -1.380511e+01]],...
2025-04-28 13:31:32.875152 test begin: paddle.maximum(Tensor([8, 33, 1, 2],"float32"), Tensor([8, 1, 10164, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([8, 33, 1, 2],"float32"), Tensor([8, 1, 10164, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 528 (0.189%)
Max absolute difference among violations: 0.17360163
Max relative difference among violations: 0.17578237
ACTUAL: array([[[[-3.040613e+01, -1.121190e+01]],
[[-4.199220e+00, -4.147674e+00]],...
DESIRED: array([[[[-3.040614e+01, -1.121193e+01]],
[[-4.199211e+00, -4.147667e+00]],...
2025-04-28 13:31:33.579094 test begin: paddle.maximum(Tensor([8, 33, 1, 2],"float32"), Tensor([8, 1, 3549, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([8, 33, 1, 2],"float32"), Tensor([8, 1, 3549, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 528 (0.189%)
Max absolute difference among violations: 0.21466255
Max relative difference among violations: 0.07915927
ACTUAL: array([[[[ 4.357531e+00, -3.313278e+00]],
[[ 2.291011e+00, -8.821885e+00]],...
DESIRED: array([[[[ 4.357530e+00, -3.313279e+00]],
[[ 2.290984e+00, -8.821883e+00]],...
2025-04-28 13:31:45.633295 test begin: paddle.maximum(Tensor([8, 37, 1, 2],"float32"), Tensor([8, 1, 11109, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([8, 37, 1, 2],"float32"), Tensor([8, 1, 11109, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 177744 (0.000563%)
Max absolute difference among violations: 0.12288499
Max relative difference among violations: 0.06004828
ACTUAL: array([[[[ 0.098465, -1.583819],
[ 1.468536,  0.867476],
[-0.213049, -0.023693],...
DESIRED: array([[[[ 0.098465, -1.583819],
[ 1.468537,  0.867476],
[-0.213049, -0.023693],...
2025-04-28 13:31:50.423928 test begin: paddle.maximum(Tensor([8, 38, 1, 2],"float32"), Tensor([8, 1, 3549, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([8, 38, 1, 2],"float32"), Tensor([8, 1, 3549, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 608 (0.164%)
Max absolute difference among violations: 0.24313307
Max relative difference among violations: 0.05701445
ACTUAL: array([[[[-4.223090e-01, -2.803581e+00]],
[[-2.379339e+00,  6.315132e+00]],...
DESIRED: array([[[[-4.223089e-01, -2.803582e+00]],
[[-2.379339e+00,  6.315136e+00]],...
2025-04-28 13:32:02.313174 test begin: paddle.maximum(Tensor([8, 44, 1, 2],"float32"), Tensor([8, 1, 8400, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([8, 44, 1, 2],"float32"), Tensor([8, 1, 8400, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 704 (0.142%)
Max absolute difference among violations: 0.15284824
Max relative difference among violations: 0.01212579
ACTUAL: array([[[[ 6.680459e+00, -1.597439e+01]],
[[-1.037570e+01, -9.000063e-01]],...
DESIRED: array([[[[ 6.680457e+00, -1.597440e+01]],
[[-1.037571e+01, -8.999481e-01]],...
2025-04-28 13:32:05.311084 test begin: paddle.maximum(Tensor([8, 46, 1, 2],"float32"), Tensor([8, 1, 8400, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([8, 46, 1, 2],"float32"), Tensor([8, 1, 8400, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 134400 (0.000744%)
Max absolute difference among violations: 0.14002073
Max relative difference among violations: 0.09920718
ACTUAL: array([[[[-6.642605e-01,  6.613948e-02],
[-5.911789e-01,  2.106541e-01],
[-7.857770e-03,  2.297892e+00],...
DESIRED: array([[[[-6.642606e-01,  6.613948e-02],
[-5.911790e-01,  2.106541e-01],
[-7.857978e-03,  2.297892e+00],...
2025-04-28 13:37:30.845802 test begin: paddle.maximum(Tensor([872, 16],"float32"), Tensor([1],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([872, 16],"float32"), Tensor([1],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 13952 (0.00717%)
Max absolute difference among violations: 0.20885369
Max relative difference among violations: 1.
ACTUAL: array([[ 0.,  0., -0., ..., -0.,  0.,  0.],
[ 0.,  0., -0., ..., -0.,  0.,  0.],
[ 0., -0., -0., ..., -0., -0., -0.],...
DESIRED: array([[0., 0., 0., ..., 0., 0., 0.],
[0., 0., 0., ..., 0., 0., 0.],
[0., 0., 0., ..., 0., 0., 0.],...
2025-04-28 13:38:00.352326 test begin: paddle.maximum(Tensor([88, 1, 2],"float32"), Tensor([1, 3024, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([88, 1, 2],"float32"), Tensor([1, 3024, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 176 (0.568%)
Max absolute difference among violations: 0.2275629
Max relative difference among violations: 0.05372842
ACTUAL: array([[[-2.846399e+00,  1.609109e+00]],
[[ 2.678886e+00, -1.279819e+01]],...
DESIRED: array([[[-2.846395e+00,  1.609109e+00]],
[[ 2.678880e+00, -1.279818e+01]],...
2025-04-28 13:39:32.172192 test begin: paddle.maximum(Tensor([9, 1, 2],"float32"), Tensor([204624, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([9, 1, 2],"float32"), Tensor([204624, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 409248 (0.000244%)
Max absolute difference among violations: 0.05427003
Max relative difference among violations: 0.12068692
ACTUAL: array([[-0.432962, -0.460292],
[-1.255522,  0.347688],
[ 0.066378,  1.05538 ],...
DESIRED: array([[-0.432962, -0.460292],
[-1.255522,  0.347688],
[ 0.066378,  1.05538 ],...
2025-04-28 13:39:37.419199 test begin: paddle.maximum(Tensor([9, 1, 2],"float32"), Tensor([236616, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([9, 1, 2],"float32"), Tensor([236616, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 18 (5.56%)
Max absolute difference among violations: 0.20570374
Max relative difference among violations: 0.02485734
ACTUAL: array([[[  28.79    ,    0.802691]],
[[-143.8205  ,   41.536694]],...
DESIRED: array([[[  28.79002 ,    0.802734]],
[[-143.82135 ,   41.537403]],...
2025-04-28 13:39:43.818268 test begin: paddle.maximum(Tensor([9, 1, 2],"float32"), Tensor([247086, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([9, 1, 2],"float32"), Tensor([247086, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 494172 (0.000202%)
Max absolute difference among violations: 0.09906365
Max relative difference among violations: 0.30962858
ACTUAL: array([[ 0.268351, -1.800377],
[-0.118618,  0.465806],
[ 0.010457,  0.026999],...
DESIRED: array([[ 0.268351, -1.800377],
[-0.118618,  0.465806],
[ 0.010457,  0.026999],...
2025-04-28 13:39:58.511961 test begin: paddle.maximum(Tensor([9, 1, 2],"float32"), Tensor([304368, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([9, 1, 2],"float32"), Tensor([304368, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 608736 (0.000164%)
Max absolute difference among violations: 0.22699708
Max relative difference among violations: 0.34470487
ACTUAL: array([[ 0.159724, -0.622367],
[ 0.196774,  0.314162],
[ 0.      ,  0.714967],...
DESIRED: array([[ 0.159724, -0.622367],
[ 0.196774,  0.314162],
[ 0.      ,  0.714967],...
2025-04-28 13:40:02.199741 test begin: paddle.maximum(Tensor([9, 1, 2],"float32"), Tensor([321759, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([9, 1, 2],"float32"), Tensor([321759, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 643518 (0.000155%)
Max absolute difference among violations: 0.17955571
Max relative difference among violations: 0.5717313
ACTUAL: array([[ 0.7237  , -0.106825],
[ 0.298709,  0.19899 ],
[ 0.555861, -0.571218],...
DESIRED: array([[ 0.7237  , -0.106825],
[ 0.298709,  0.19899 ],
[ 0.555861, -0.571218],...
2025-04-28 13:40:06.291244 test begin: paddle.maximum(Tensor([9, 1, 2],"float32"), Tensor([333018, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([9, 1, 2],"float32"), Tensor([333018, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 666036 (0.00015%)
Max absolute difference among violations: 0.17849702
Max relative difference among violations: 1.
ACTUAL: array([[-0.75523 ,  0.043456],
[-0.28249 ,  0.884857],
[ 0.43873 ,  0.92468 ],...
DESIRED: array([[-0.75523 ,  0.043456],
[-0.28249 ,  0.884857],
[ 0.43873 ,  0.92468 ],...
2025-04-28 13:40:07.952951 test begin: paddle.maximum(Tensor([9, 1, 2],"float32"), Tensor([340176, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([9, 1, 2],"float32"), Tensor([340176, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 680352 (0.000147%)
Max absolute difference among violations: 0.23645785
Max relative difference among violations: 1.9192158
ACTUAL: array([[ 0.458048,  0.768965],
[-0.058923, -0.144418],
[-0.357831,  0.078232],...
DESIRED: array([[ 0.458048,  0.768965],
[-0.058923, -0.144418],
[-0.357831,  0.078232],...
2025-04-28 13:40:13.438097 test begin: paddle.maximum(Tensor([9, 1, 2],"float32"), Tensor([365211, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([9, 1, 2],"float32"), Tensor([365211, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 730422 (0.000137%)
Max absolute difference among violations: 0.12528643
Max relative difference among violations: 0.65575117
ACTUAL: array([[-0.357945, -0.107256],
[-0.186345, -0.551308],
[ 0.      ,  0.210886],...
DESIRED: array([[-0.357945, -0.107256],
[-0.186345, -0.551308],
[ 0.      ,  0.210886],...
2025-04-28 13:40:28.315832 test begin: paddle.maximum(Tensor([9, 1, 2],"float32"), Tensor([66330, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([9, 1, 2],"float32"), Tensor([66330, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 132660 (0.000754%)
Max absolute difference among violations: 0.1244718
Max relative difference among violations: 0.54009926
ACTUAL: array([[-0.404938,  0.      ],
[ 0.729062, -0.38358 ],
[ 0.      , -0.119866],...
DESIRED: array([[-0.404938,  0.      ],
[ 0.729062, -0.38358 ],
[ 0.      , -0.119866],...
2025-04-28 13:40:28.756728 test begin: paddle.maximum(Tensor([9, 1, 2],"float32"), Tensor([69345, 2],"float32"), )
[accuracy error] backward  paddle.maximum(Tensor([9, 1, 2],"float32"), Tensor([69345, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 18 (5.56%)
Max absolute difference among violations: 0.09587288
Max relative difference among violations: 0.01189366
ACTUAL: array([[[ -28.862099,   97.963036]],
[[ -84.61287 ,  -25.564804]],...
DESIRED: array([[[ -28.861938,   97.96307 ]],
[[ -84.61331 ,  -25.564957]],...
2025-04-26 23:49:10.738400 test begin: paddle.minimum(Tensor([1, 1, 2],"float32"), Tensor([322245, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([1, 1, 2],"float32"), Tensor([322245, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 644490 (0.000155%)
Max absolute difference among violations: 0.18105417
Max relative difference among violations: 1.
ACTUAL: array([[ 0.10219 ,  0.449405],
[ 0.405681, -0.18599 ],
[ 0.10892 ,  0.365475],...
DESIRED: array([[ 0.10219 ,  0.449405],
[ 0.405681, -0.18599 ],
[ 0.10892 ,  0.365475],...
2025-04-26 23:49:24.390793 test begin: paddle.minimum(Tensor([1, 1, 2],"float32"), Tensor([50220, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([1, 1, 2],"float32"), Tensor([50220, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 100440 (0.000996%)
Max absolute difference among violations: 0.18145181
Max relative difference among violations: 1.
ACTUAL: array([[ 0.      ,  0.      ],
[ 0.187286,  0.      ],
[ 0.057306,  0.      ],...
DESIRED: array([[ 0.      ,  0.      ],
[ 0.187286,  0.      ],
[ 0.057306,  0.      ],...
2025-04-26 23:50:00.705367 test begin: paddle.minimum(Tensor([1, 101, 1, 2],"float32"), Tensor([1, 1, 40656, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([1, 101, 1, 2],"float32"), Tensor([1, 1, 40656, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 202 (0.495%)
Max absolute difference among violations: 0.15760708
Max relative difference among violations: 0.03145795
ACTUAL: array([[[[ -16.832455,   22.996405]],
[[-125.39095 ,   44.224506]],...
DESIRED: array([[[[ -16.83243 ,   22.996437]],
[[-125.39147 ,   44.224304]],...
2025-04-26 23:50:02.279408 test begin: paddle.minimum(Tensor([1, 102, 1, 2],"float32"), Tensor([1, 1, 65856, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([1, 102, 1, 2],"float32"), Tensor([1, 1, 65856, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 131712 (0.000759%)
Max absolute difference among violations: 0.13715243
Max relative difference among violations: 0.09451308
ACTUAL: array([[[[ 2.438662, -0.071506],
[ 1.331243, -0.102401],
[-0.704812,  0.138765],...
DESIRED: array([[[[ 2.438663, -0.071506],
[ 1.331243, -0.102401],
[-0.704812,  0.138765],...
2025-04-26 23:50:05.075192 test begin: paddle.minimum(Tensor([1, 105, 1, 2],"float32"), Tensor([1, 1, 61236, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([1, 105, 1, 2],"float32"), Tensor([1, 1, 61236, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 122472 (0.000817%)
Max absolute difference among violations: 0.05887663
Max relative difference among violations: 0.0453243
ACTUAL: array([[[[-1.99204 , -3.197657],
[-0.565941, -4.65987 ],
[ 0.109144,  0.196974],...
DESIRED: array([[[[-1.99204 , -3.197657],
[-0.565941, -4.659869],
[ 0.109144,  0.196974],...
2025-04-26 23:50:13.564755 test begin: paddle.minimum(Tensor([1, 112, 1, 2],"float32"), Tensor([1, 1, 30324, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([1, 112, 1, 2],"float32"), Tensor([1, 1, 30324, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 60648 (0.00165%)
Max absolute difference among violations: 0.06778097
Max relative difference among violations: 0.0254155
ACTUAL: array([[[[-1.118905,  0.438199],
[ 2.767512,  2.039522],
[-0.751231,  0.126225],...
DESIRED: array([[[[-1.118905,  0.438199],
[ 2.767512,  2.039522],
[-0.751231,  0.126225],...
2025-04-26 23:50:25.273081 test begin: paddle.minimum(Tensor([1, 124, 1, 2],"float32"), Tensor([1, 1, 48384, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([1, 124, 1, 2],"float32"), Tensor([1, 1, 48384, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 96768 (0.00103%)
Max absolute difference among violations: 0.04013854
Max relative difference among violations: 0.05278105
ACTUAL: array([[[[-0.657354, -3.835933],
[-1.894909,  2.492578],
[ 4.736845, -7.829768],...
DESIRED: array([[[[-0.657354, -3.835934],
[-1.894909,  2.492577],
[ 4.736846, -7.829767],...
2025-04-26 23:50:28.426713 test begin: paddle.minimum(Tensor([1, 127, 1, 2],"float32"), Tensor([1, 1, 70644, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([1, 127, 1, 2],"float32"), Tensor([1, 1, 70644, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2 / 141288 (0.00142%)
Max absolute difference among violations: 0.1825409
Max relative difference among violations: 1.001216
ACTUAL: array([[[[-1.417812, -0.648893],
[-0.964244,  0.350109],
[ 0.097059, -1.864177],...
DESIRED: array([[[[-1.417812, -0.648893],
[-0.964244,  0.350109],
[ 0.097059, -1.864177],...
2025-04-26 23:50:34.714313 test begin: paddle.minimum(Tensor([1, 13, 1, 2],"float32"), Tensor([1, 1, 75600, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([1, 13, 1, 2],"float32"), Tensor([1, 1, 75600, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 151200 (0.000661%)
Max absolute difference among violations: 0.03571683
Max relative difference among violations: 0.04358525
ACTUAL: array([[[[-0.885814,  0.399436],
[-0.161052, -0.147129],
[ 0.186042, -1.630584],...
DESIRED: array([[[[-0.885814,  0.399436],
[-0.161052, -0.147129],
[ 0.186042, -1.630584],...
2025-04-26 23:50:35.770785 test begin: paddle.minimum(Tensor([1, 132, 1, 2],"float32"), Tensor([1, 1, 27216, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([1, 132, 1, 2],"float32"), Tensor([1, 1, 27216, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 264 (0.379%)
Max absolute difference among violations: 0.10246277
Max relative difference among violations: 0.01508081
ACTUAL: array([[[[  13.857143,  -32.10436 ]],
[[ -25.477245,    3.439966]],...
DESIRED: array([[[[  13.857146,  -32.1044  ]],
[[ -25.477234,    3.439999]],...
2025-04-26 23:50:36.500870 test begin: paddle.minimum(Tensor([1, 138, 1, 2],"float32"), Tensor([1, 1, 56784, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([1, 138, 1, 2],"float32"), Tensor([1, 1, 56784, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 276 (0.362%)
Max absolute difference among violations: 0.18005371
Max relative difference among violations: 0.01227953
ACTUAL: array([[[[  60.831047,   -6.946091]],
[[  91.52845 ,   27.569204]],...
DESIRED: array([[[[  60.83106 ,   -6.946119]],
[[  91.528336,   27.569162]],...
2025-04-26 23:50:39.207424 test begin: paddle.minimum(Tensor([1, 139, 1, 2],"float32"), Tensor([1, 1, 61236, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([1, 139, 1, 2],"float32"), Tensor([1, 1, 61236, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 122472 (0.000817%)
Max absolute difference among violations: 0.05196109
Max relative difference among violations: 0.13783863
ACTUAL: array([[[[ 0.477132, -0.263122],
[ 2.177647, -0.852062],
[-8.105273,  4.539279],...
DESIRED: array([[[[ 0.477131, -0.263122],
[ 2.177647, -0.852062],
[-8.105274,  4.539281],...
2025-04-26 23:50:41.547882 test begin: paddle.minimum(Tensor([1, 14, 1, 2],"float32"), Tensor([1, 1, 27216, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([1, 14, 1, 2],"float32"), Tensor([1, 1, 27216, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 54432 (0.00184%)
Max absolute difference among violations: 0.1955128
Max relative difference among violations: 0.718411
ACTUAL: array([[[[-0.845216,  0.385593],
[ 0.511003, -0.432704],
[ 0.673615,  0.86863 ],...
DESIRED: array([[[[-0.845216,  0.385593],
[ 0.511003, -0.432704],
[ 0.673615,  0.86863 ],...
2025-04-26 23:50:46.871189 test begin: paddle.minimum(Tensor([1, 145, 1, 2],"float32"), Tensor([1, 1, 21504, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([1, 145, 1, 2],"float32"), Tensor([1, 1, 21504, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 43008 (0.00233%)
Max absolute difference among violations: 0.09912705
Max relative difference among violations: 0.07245137
ACTUAL: array([[[[ 0.      , -1.374967],
[ 0.397663, -1.608039],
[-0.627863,  0.375812],...
DESIRED: array([[[[ 0.      , -1.374967],
[ 0.397663, -1.608039],
[-0.627862,  0.375812],...
2025-04-26 23:50:51.635957 test begin: paddle.minimum(Tensor([1, 15, 1, 2],"float32"), Tensor([1, 1, 70644, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([1, 15, 1, 2],"float32"), Tensor([1, 1, 70644, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 30 (3.33%)
Max absolute difference among violations: 0.22659135
Max relative difference among violations: 0.06184988
ACTUAL: array([[[[ 13.675009,  -1.847409]],
[[ 48.23228 , -16.337318]],...
DESIRED: array([[[[ 13.675064,  -1.847282]],
[[ 48.23234 , -16.33737 ]],...
2025-04-26 23:51:00.438574 test begin: paddle.minimum(Tensor([1, 169, 1, 2],"float32"), Tensor([1, 1, 40656, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([1, 169, 1, 2],"float32"), Tensor([1, 1, 40656, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 81312 (0.00123%)
Max absolute difference among violations: 0.16985357
Max relative difference among violations: 0.12299408
ACTUAL: array([[[[-6.906114,  3.365611],
[-0.606549, -3.236215],
[ 3.961497,  5.061245],...
DESIRED: array([[[[-6.906114,  3.365611],
[-0.60655 , -3.236215],
[ 3.961496,  5.061244],...
2025-04-26 23:51:12.361637 test begin: paddle.minimum(Tensor([1, 19, 1, 2],"float32"), Tensor([1, 1, 48384, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([1, 19, 1, 2],"float32"), Tensor([1, 1, 48384, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 96768 (0.00103%)
Max absolute difference among violations: 0.21850291
Max relative difference among violations: 1.9208037
ACTUAL: array([[[[-0.517932,  0.030948],
[-0.49213 ,  0.111969],
[-0.121942,  0.295853],...
DESIRED: array([[[[-0.517932,  0.030948],
[-0.49213 ,  0.111969],
[-0.121942,  0.295853],...
2025-04-26 23:51:14.173237 test begin: paddle.minimum(Tensor([1, 19, 1, 2],"float32"), Tensor([1, 1, 70644, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([1, 19, 1, 2],"float32"), Tensor([1, 1, 70644, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 141288 (0.000708%)
Max absolute difference among violations: 0.22939289
Max relative difference among violations: 0.36200368
ACTUAL: array([[[[-0.244437,  0.83111 ],
[-0.243382, -0.199479],
[ 1.606144, -0.588344],...
DESIRED: array([[[[-0.244437,  0.83111 ],
[-0.243382, -0.199479],
[ 1.606144, -0.588344],...
2025-04-26 23:51:30.764591 test begin: paddle.minimum(Tensor([1, 21, 1, 2],"float32"), Tensor([1, 1, 70644, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([1, 21, 1, 2],"float32"), Tensor([1, 1, 70644, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 141288 (0.000708%)
Max absolute difference among violations: 0.1077382
Max relative difference among violations: 0.36712357
ACTUAL: array([[[[ 0.131516, -0.29947 ],
[ 0.903051,  0.617316],
[-0.05477 ,  0.348866],...
DESIRED: array([[[[ 0.131516, -0.29947 ],
[ 0.90305 ,  0.617316],
[-0.05477 ,  0.348867],...
2025-04-26 23:51:31.582663 test begin: paddle.minimum(Tensor([1, 210, 1, 2],"float32"), Tensor([1, 1, 75600, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([1, 210, 1, 2],"float32"), Tensor([1, 1, 75600, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 151200 (0.000661%)
Max absolute difference among violations: 0.08830881
Max relative difference among violations: 0.07852248
ACTUAL: array([[[[ 4.363014,  4.34484 ],
[ 2.964841, -2.294607],
[-0.212452, -3.486162],...
DESIRED: array([[[[ 4.363015,  4.34484 ],
[ 2.964841, -2.294607],
[-0.212452, -3.486162],...
2025-04-26 23:51:37.024101 test begin: paddle.minimum(Tensor([1, 218, 1, 2],"float32"), Tensor([1, 1, 70644, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([1, 218, 1, 2],"float32"), Tensor([1, 1, 70644, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 141288 (0.000708%)
Max absolute difference among violations: 0.14172369
Max relative difference among violations: 0.20110565
ACTUAL: array([[[[-2.289567, -3.723392],
[ 5.975235, -0.926912],
[-6.252593, -0.25017 ],...
DESIRED: array([[[[-2.289567, -3.723392],
[ 5.975235, -0.926912],
[-6.252593, -0.25017 ],...
2025-04-26 23:51:59.935595 test begin: paddle.minimum(Tensor([1, 252, 1, 2],"float32"), Tensor([1, 1, 30324, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([1, 252, 1, 2],"float32"), Tensor([1, 1, 30324, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 60648 (0.00165%)
Max absolute difference among violations: 0.08678314
Max relative difference among violations: 0.32761016
ACTUAL: array([[[[ 1.911878, -1.820187],
[ 4.611035,  1.576879],
[10.362072, -2.141919],...
DESIRED: array([[[[ 1.911878, -1.820187],
[ 4.611035,  1.576879],
[10.362074, -2.141919],...
2025-04-26 23:52:16.249583 test begin: paddle.minimum(Tensor([1, 296, 1, 2],"float32"), Tensor([1, 1, 24276, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([1, 296, 1, 2],"float32"), Tensor([1, 1, 24276, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 592 (0.169%)
Max absolute difference among violations: 0.2482748
Max relative difference among violations: 0.02529094
ACTUAL: array([[[[ 2.303236e+01,  2.458310e+01]],
[[ 1.403626e+01, -3.043292e+01]],...
DESIRED: array([[[[ 2.303241e+01,  2.458297e+01]],
[[ 1.403627e+01, -3.043286e+01]],...
2025-04-26 23:52:31.398362 test begin: paddle.minimum(Tensor([1, 32, 1, 2],"float32"), Tensor([1, 1, 37044, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([1, 32, 1, 2],"float32"), Tensor([1, 1, 37044, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 64 (1.56%)
Max absolute difference among violations: 0.071661
Max relative difference among violations: 0.1938138
ACTUAL: array([[[[-86.97667 ,  19.886345]],
[[ 24.90606 , -57.14596 ]],...
DESIRED: array([[[[-86.97685 ,  19.88632 ]],
[[ 24.906105, -57.14618 ]],...
2025-04-26 23:52:32.608775 test begin: paddle.minimum(Tensor([1, 32, 1, 2],"float32"), Tensor([1, 1, 75600, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([1, 32, 1, 2],"float32"), Tensor([1, 1, 75600, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 151200 (0.000661%)
Max absolute difference among violations: 0.03628454
Max relative difference among violations: 0.1212143
ACTUAL: array([[[[ 0.030565,  0.186743],
[ 0.      , -0.381916],
[-4.053374,  0.166498],...
DESIRED: array([[[[ 0.030565,  0.186743],
[ 0.      , -0.381916],
[-4.053374,  0.166498],...
2025-04-26 23:52:39.762576 test begin: paddle.minimum(Tensor([1, 333, 1, 2],"float32"), Tensor([1, 1, 40656, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([1, 333, 1, 2],"float32"), Tensor([1, 1, 40656, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 666 (0.15%)
Max absolute difference among violations: 0.20859355
Max relative difference among violations: 0.60506344
ACTUAL: array([[[[ 1.032345e+01,  2.756867e+00]],
[[-2.259199e+01,  1.838757e+01]],...
DESIRED: array([[[[ 1.032351e+01,  2.756929e+00]],
[[-2.259198e+01,  1.838745e+01]],...
2025-04-26 23:52:48.569626 test begin: paddle.minimum(Tensor([1, 36, 1, 2],"float32"), Tensor([1, 1, 33600, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([1, 36, 1, 2],"float32"), Tensor([1, 1, 33600, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 72 (1.39%)
Max absolute difference among violations: 0.05761218
Max relative difference among violations: 0.02830733
ACTUAL: array([[[[  -3.55982 ,  -38.214214]],
[[ -19.392033,   -1.457003]],...
DESIRED: array([[[[  -3.559824,  -38.214123]],
[[ -19.39204 ,   -1.456998]],...
2025-04-26 23:52:49.722949 test begin: paddle.minimum(Tensor([1, 36, 1, 2],"float32"), Tensor([1, 1, 65856, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([1, 36, 1, 2],"float32"), Tensor([1, 1, 65856, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 131712 (0.000759%)
Max absolute difference among violations: 0.21555287
Max relative difference among violations: 0.503404
ACTUAL: array([[[[-0.006254,  1.259416],
[ 0.516935, -2.243501],
[ 0.888919, -0.554854],...
DESIRED: array([[[[-0.006254,  1.259416],
[ 0.516935, -2.243501],
[ 0.888919, -0.554854],...
2025-04-26 23:52:53.901366 test begin: paddle.minimum(Tensor([1, 37, 1, 2],"float32"), Tensor([1, 1, 65856, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([1, 37, 1, 2],"float32"), Tensor([1, 1, 65856, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 74 (1.35%)
Max absolute difference among violations: 0.2151463
Max relative difference among violations: 0.09068569
ACTUAL: array([[[[ -12.657229,   37.06965 ]],
[[   3.69383 ,   36.7104  ]],...
DESIRED: array([[[[ -12.65724 ,   37.069927]],
[[   3.693842,   36.710518]],...
2025-04-26 23:53:00.324169 test begin: paddle.minimum(Tensor([1, 39, 1, 2],"float32"), Tensor([1, 1, 61236, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([1, 39, 1, 2],"float32"), Tensor([1, 1, 61236, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 122472 (0.000817%)
Max absolute difference among violations: 0.05172837
Max relative difference among violations: 0.08574826
ACTUAL: array([[[[ 3.95395 ,  1.136545],
[ 1.023279,  1.731252],
[ 3.357365, -0.456264],...
DESIRED: array([[[[ 3.953951,  1.136545],
[ 1.023279,  1.731252],
[ 3.357365, -0.456264],...
2025-04-26 23:53:09.440120 test begin: paddle.minimum(Tensor([1, 400, 1, 2],"float32"), Tensor([1, 1, 65856, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([1, 400, 1, 2],"float32"), Tensor([1, 1, 65856, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2 / 131712 (0.00152%)
Max absolute difference among violations: 0.17656118
Max relative difference among violations: 0.21818216
ACTUAL: array([[[[ -4.753734,  -1.121566],
[ -1.047884,   2.263756],
[  4.759405,   3.148709],...
DESIRED: array([[[[ -4.753732,  -1.121566],
[ -1.047883,   2.263755],
[  4.759404,   3.148709],...
2025-04-26 23:53:27.963927 test begin: paddle.minimum(Tensor([1, 45, 1, 2],"float32"), Tensor([1, 1, 40656, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([1, 45, 1, 2],"float32"), Tensor([1, 1, 40656, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 81312 (0.00123%)
Max absolute difference among violations: 0.21208024
Max relative difference among violations: 0.1302911
ACTUAL: array([[[[-1.178921,  2.237202],
[ 0.37554 ,  1.522058],
[-1.579191,  0.679758],...
DESIRED: array([[[[-1.178921,  2.237203],
[ 0.37554 ,  1.522058],
[-1.579191,  0.679758],...
2025-04-26 23:53:31.998665 test begin: paddle.minimum(Tensor([1, 46, 1, 2],"float32"), Tensor([1, 1, 48384, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([1, 46, 1, 2],"float32"), Tensor([1, 1, 48384, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 92 (1.09%)
Max absolute difference among violations: 0.23947144
Max relative difference among violations: 0.01418295
ACTUAL: array([[[[  -9.703207,   24.385315]],
[[ -15.603593,  -18.194553]],...
DESIRED: array([[[[  -9.703072,   24.385406]],
[[ -15.60364 ,  -18.194557]],...
2025-04-26 23:53:32.483061 test begin: paddle.minimum(Tensor([1, 46, 1, 2],"float32"), Tensor([1, 1, 61236, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([1, 46, 1, 2],"float32"), Tensor([1, 1, 61236, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 122472 (0.000817%)
Max absolute difference among violations: 0.06482044
Max relative difference among violations: 0.15960653
ACTUAL: array([[[[ 0.050481,  3.181122],
[ 0.811482,  0.38992 ],
[ 3.008203,  2.715414],...
DESIRED: array([[[[ 0.050481,  3.181121],
[ 0.811482,  0.38992 ],
[ 3.008203,  2.715414],...
2025-04-26 23:53:37.607648 test begin: paddle.minimum(Tensor([1, 47, 1, 2],"float32"), Tensor([1, 1, 61236, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([1, 47, 1, 2],"float32"), Tensor([1, 1, 61236, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 94 (1.06%)
Max absolute difference among violations: 0.19028187
Max relative difference among violations: 0.02336591
ACTUAL: array([[[[ -40.752934,  -61.329266]],
[[  -4.637937,    7.953287]],...
DESIRED: array([[[[ -40.75276 ,  -61.32919 ]],
[[  -4.638008,    8.143569]],...
2025-04-26 23:53:43.003148 test begin: paddle.minimum(Tensor([1, 49, 1, 2],"float32"), Tensor([1, 1, 40656, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([1, 49, 1, 2],"float32"), Tensor([1, 1, 40656, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 81312 (0.00123%)
Max absolute difference among violations: 0.13907695
Max relative difference among violations: 0.20150083
ACTUAL: array([[[[-2.248825, -1.577661],
[ 0.496463, -1.386681],
[-0.310844,  1.540506],...
DESIRED: array([[[[-2.248825, -1.577661],
[ 0.496463, -1.386681],
[-0.310844,  1.540506],...
2025-04-26 23:53:48.835684 test begin: paddle.minimum(Tensor([1, 50, 1, 2],"float32"), Tensor([1, 1, 70644, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([1, 50, 1, 2],"float32"), Tensor([1, 1, 70644, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 100 (1%)
Max absolute difference among violations: 0.15792227
Max relative difference among violations: 0.03901459
ACTUAL: array([[[[-107.6956  , -113.45258 ]],
[[  43.97179 ,   59.678654]],...
DESIRED: array([[[[-107.695145, -113.45274 ]],
[[  43.97194 ,   59.67875 ]],...
2025-04-26 23:54:10.703461 test begin: paddle.minimum(Tensor([1, 57, 1, 2],"float32"), Tensor([1, 1, 27216, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([1, 57, 1, 2],"float32"), Tensor([1, 1, 27216, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 114 (0.877%)
Max absolute difference among violations: 0.22987777
Max relative difference among violations: 15.597031
ACTUAL: array([[[[ 2.264187e+01,  6.245448e+00]],
[[-3.778643e+00,  1.202358e+01]],...
DESIRED: array([[[[ 2.264185e+01,  6.245474e+00]],
[[-3.778598e+00,  1.202359e+01]],...
2025-04-26 23:54:12.490677 test begin: paddle.minimum(Tensor([1, 57, 1, 2],"float32"), Tensor([1, 1, 40656, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([1, 57, 1, 2],"float32"), Tensor([1, 1, 40656, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 114 (0.877%)
Max absolute difference among violations: 0.1453175
Max relative difference among violations: 0.27862713
ACTUAL: array([[[[ 9.323653e-01, -8.086785e+00]],
[[-4.864863e+00,  1.933384e+01]],...
DESIRED: array([[[[ 9.323215e-01, -8.086790e+00]],
[[-4.864895e+00,  1.933390e+01]],...
2025-04-26 23:54:15.424517 test begin: paddle.minimum(Tensor([1, 58, 1, 2],"float32"), Tensor([1, 1, 61236, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([1, 58, 1, 2],"float32"), Tensor([1, 1, 61236, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 122472 (0.000817%)
Max absolute difference among violations: 0.18842506
Max relative difference among violations: 0.16555373
ACTUAL: array([[[[ 0.175163,  2.83195 ],
[-0.795342,  1.197588],
[ 0.118052, -0.23065 ],...
DESIRED: array([[[[ 0.175163,  2.831951],
[-0.795342,  1.197588],
[ 0.118052, -0.23065 ],...
2025-04-26 23:54:17.802469 test begin: paddle.minimum(Tensor([1, 59, 1, 2],"float32"), Tensor([1, 1, 37044, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([1, 59, 1, 2],"float32"), Tensor([1, 1, 37044, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 118 (0.847%)
Max absolute difference among violations: 0.14926243
Max relative difference among violations: 0.0134023
ACTUAL: array([[[[-25.738333,   6.406565]],
[[ 27.8097  ,  79.42112 ]],...
DESIRED: array([[[[-25.738285,   6.406559]],
[[ 27.809559,  79.42133 ]],...
2025-04-26 23:54:21.713801 test begin: paddle.minimum(Tensor([1, 6, 1, 2],"float32"), Tensor([1, 1, 75600, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([1, 6, 1, 2],"float32"), Tensor([1, 1, 75600, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 151200 (0.000661%)
Max absolute difference among violations: 0.11614276
Max relative difference among violations: 1.8582962
ACTUAL: array([[[[-0.486493,  0.220026],
[ 0.      ,  0.31859 ],
[ 0.161829, -0.382562],...
DESIRED: array([[[[-0.486493,  0.220026],
[ 0.      ,  0.31859 ],
[ 0.161829, -0.382562],...
2025-04-26 23:54:39.108208 test begin: paddle.minimum(Tensor([1, 65, 1, 2],"float32"), Tensor([1, 1, 61236, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([1, 65, 1, 2],"float32"), Tensor([1, 1, 61236, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 122472 (0.000817%)
Max absolute difference among violations: 0.19272184
Max relative difference among violations: 0.08667313
ACTUAL: array([[[[-2.900952,  0.960504],
[ 3.218572,  1.969711],
[ 0.468705,  0.926438],...
DESIRED: array([[[[-2.900952,  0.960504],
[ 3.218572,  1.969711],
[ 0.468705,  0.926438],...
2025-04-26 23:54:41.614250 test begin: paddle.minimum(Tensor([1, 65, 1, 2],"float32"), Tensor([1, 1, 75600, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([1, 65, 1, 2],"float32"), Tensor([1, 1, 75600, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 151200 (0.000661%)
Max absolute difference among violations: 0.02724856
Max relative difference among violations: 0.02903679
ACTUAL: array([[[[-1.877866,  0.0973  ],
[-0.51283 ,  1.531625],
[ 0.146066, -1.131855],...
DESIRED: array([[[[-1.877866,  0.0973  ],
[-0.51283 ,  1.531624],
[ 0.146065, -1.131855],...
2025-04-26 23:54:46.503097 test begin: paddle.minimum(Tensor([1, 68, 1, 2],"float32"), Tensor([1, 1, 56784, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([1, 68, 1, 2],"float32"), Tensor([1, 1, 56784, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 113568 (0.000881%)
Max absolute difference among violations: 0.12234414
Max relative difference among violations: 0.33197075
ACTUAL: array([[[[ 1.071734, -0.370196],
[-0.683097,  1.109224],
[ 1.752599,  1.884844],...
DESIRED: array([[[[ 1.071734, -0.370196],
[-0.683097,  1.109224],
[ 1.752599,  1.884844],...
2025-04-26 23:54:47.876312 test begin: paddle.minimum(Tensor([1, 69, 1, 2],"float32"), Tensor([1, 1, 52500, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([1, 69, 1, 2],"float32"), Tensor([1, 1, 52500, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 105000 (0.000952%)
Max absolute difference among violations: 0.11229789
Max relative difference among violations: 0.70242035
ACTUAL: array([[[[-3.322528,  2.578344],
[ 2.036263, -0.573302],
[-1.088435, -0.403512],...
DESIRED: array([[[[-3.322527,  2.578343],
[ 2.036263, -0.573302],
[-1.088435, -0.403512],...
2025-04-26 23:54:57.491100 test begin: paddle.minimum(Tensor([1, 72, 1, 2],"float32"), Tensor([1, 1, 37044, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([1, 72, 1, 2],"float32"), Tensor([1, 1, 37044, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 74088 (0.00135%)
Max absolute difference among violations: 0.09121478
Max relative difference among violations: 0.07422239
ACTUAL: array([[[[ 1.477748, -2.01355 ],
[-1.850741, -0.747287],
[-3.445241, -0.337706],...
DESIRED: array([[[[ 1.477748, -2.013549],
[-1.850741, -0.747287],
[-3.445242, -0.337706],...
2025-04-26 23:54:57.999964 test begin: paddle.minimum(Tensor([1, 72, 1, 2],"float32"), Tensor([1, 1, 48384, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([1, 72, 1, 2],"float32"), Tensor([1, 1, 48384, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 96768 (0.00103%)
Max absolute difference among violations: 0.20326924
Max relative difference among violations: 0.05984405
ACTUAL: array([[[[-4.112772, -1.086067],
[-0.583624, -1.127425],
[ 0.290192,  0.46047 ],...
DESIRED: array([[[[-4.112772, -1.086067],
[-0.583624, -1.127425],
[ 0.290192,  0.46047 ],...
2025-04-26 23:55:02.736983 test begin: paddle.minimum(Tensor([1, 73, 1, 2],"float32"), Tensor([1, 1, 70644, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([1, 73, 1, 2],"float32"), Tensor([1, 1, 70644, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 141288 (0.000708%)
Max absolute difference among violations: 0.16626334
Max relative difference among violations: 0.12899269
ACTUAL: array([[[[ 0.638009,  0.512357],
[-0.694549, -2.71823 ],
[-1.886895, -2.578342],...
DESIRED: array([[[[ 0.638009,  0.512357],
[-0.694549, -2.71823 ],
[-1.886895, -2.578343],...
2025-04-26 23:55:03.820547 test begin: paddle.minimum(Tensor([1, 73, 1, 2],"float32"), Tensor([1, 1, 75600, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([1, 73, 1, 2],"float32"), Tensor([1, 1, 75600, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 146 (0.685%)
Max absolute difference among violations: 0.13880718
Max relative difference among violations: 0.08787036
ACTUAL: array([[[[  -8.9658  ,   -7.673047]],
[[  18.909681,    7.508617]],...
DESIRED: array([[[[  -8.96603 ,   -7.67305 ]],
[[  18.909584,    7.50851 ]],...
2025-04-26 23:55:07.358420 test begin: paddle.minimum(Tensor([1, 76, 1, 2],"float32"), Tensor([1, 1, 70644, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([1, 76, 1, 2],"float32"), Tensor([1, 1, 70644, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 141288 (0.000708%)
Max absolute difference among violations: 0.10249639
Max relative difference among violations: 0.03541695
ACTUAL: array([[[[-0.283057, -1.178352],
[-0.733743,  2.60749 ],
[-0.518325, -2.730781],...
DESIRED: array([[[[-0.283057, -1.178352],
[-0.733743,  2.607491],
[-0.518324, -2.730781],...
2025-04-26 23:55:12.974258 test begin: paddle.minimum(Tensor([1, 79, 1, 2],"float32"), Tensor([1, 1, 75600, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([1, 79, 1, 2],"float32"), Tensor([1, 1, 75600, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2 / 151200 (0.00132%)
Max absolute difference among violations: 0.09738052
Max relative difference among violations: 0.2268352
ACTUAL: array([[[[-2.858255,  0.      ],
[ 0.566608,  0.165211],
[ 0.582884,  2.082237],...
DESIRED: array([[[[-2.858254,  0.      ],
[ 0.566607,  0.16521 ],
[ 0.582884,  2.082237],...
2025-04-26 23:55:17.226061 test begin: paddle.minimum(Tensor([1, 80, 1, 2],"float32"), Tensor([1, 1, 21504, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([1, 80, 1, 2],"float32"), Tensor([1, 1, 21504, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 43008 (0.00233%)
Max absolute difference among violations: 0.14136371
Max relative difference among violations: 0.8104339
ACTUAL: array([[[[ 0.794045, -0.836662],
[ 0.051565,  0.824795],
[-1.509765,  2.883981],...
DESIRED: array([[[[ 0.794045, -0.836662],
[ 0.051565,  0.824795],
[-1.509764,  2.883981],...
2025-04-26 23:55:25.987607 test begin: paddle.minimum(Tensor([1, 86, 1, 2],"float32"), Tensor([1, 1, 56784, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([1, 86, 1, 2],"float32"), Tensor([1, 1, 56784, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 172 (0.581%)
Max absolute difference among violations: 0.12288666
Max relative difference among violations: 0.01113018
ACTUAL: array([[[[-5.170615e+01, -3.497267e+01]],
[[ 7.612100e+01,  8.782376e-01]],...
DESIRED: array([[[[-5.170607e+01, -3.497260e+01]],
[[ 7.612090e+01,  8.782539e-01]],...
2025-04-26 23:55:28.540454 test begin: paddle.minimum(Tensor([1, 88, 1, 2],"float32"), Tensor([1, 1, 75600, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([1, 88, 1, 2],"float32"), Tensor([1, 1, 75600, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 176 (0.568%)
Max absolute difference among violations: 0.233037
Max relative difference among violations: 0.0212139
ACTUAL: array([[[[-1.169583e+02,  3.448645e+01]],
[[-2.263319e+01,  1.452501e+01]],...
DESIRED: array([[[[-1.169589e+02,  3.448626e+01]],
[[-2.263332e+01,  1.452506e+01]],...
2025-04-26 23:55:49.035044 test begin: paddle.minimum(Tensor([10, 1, 2],"float32"), Tensor([168795, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([10, 1, 2],"float32"), Tensor([168795, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 20 (5%)
Max absolute difference among violations: 0.20129299
Max relative difference among violations: 0.01352614
ACTUAL: array([[[-148.89369 ,  161.1416  ]],
[[ -62.49425 ,   98.13189 ]],...
DESIRED: array([[[-148.89377 ,  161.14256 ]],
[[ -62.494343,   98.13178 ]],...
2025-04-26 23:56:11.135504 test begin: paddle.minimum(Tensor([10, 1, 2],"float32"), Tensor([295647, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([10, 1, 2],"float32"), Tensor([295647, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 591294 (0.000169%)
Max absolute difference among violations: 0.0452978
Max relative difference among violations: 0.06183144
ACTUAL: array([[-0.756162,  0.516704],
[ 0.854322, -0.476984],
[-0.191215, -0.573661],...
DESIRED: array([[-0.756162,  0.516704],
[ 0.854322, -0.476984],
[-0.191215, -0.573661],...
2025-04-26 23:56:11.748113 test begin: paddle.minimum(Tensor([10, 1, 2],"float32"), Tensor([300762, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([10, 1, 2],"float32"), Tensor([300762, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 601524 (0.000166%)
Max absolute difference among violations: 0.0158517
Max relative difference among violations: 1.
ACTUAL: array([[ 0.454124,  2.428218],
[ 0.994792, -0.691741],
[-0.461769,  1.217848],...
DESIRED: array([[ 0.454124,  2.428217],
[ 0.994792, -0.691741],
[-0.461769,  1.217848],...
2025-04-26 23:56:12.313300 test begin: paddle.minimum(Tensor([10, 1, 2],"float32"), Tensor([301302, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([10, 1, 2],"float32"), Tensor([301302, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 602604 (0.000166%)
Max absolute difference among violations: 0.09981212
Max relative difference among violations: 0.30865607
ACTUAL: array([[-0.019041, -1.02755 ],
[-0.806095, -0.432701],
[-0.662794,  0.635502],...
DESIRED: array([[-0.019041, -1.02755 ],
[-0.806095, -0.432701],
[-0.662794,  0.635502],...
2025-04-26 23:56:13.582685 test begin: paddle.minimum(Tensor([10, 1, 2],"float32"), Tensor([303858, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([10, 1, 2],"float32"), Tensor([303858, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 607716 (0.000165%)
Max absolute difference among violations: 0.0558883
Max relative difference among violations: 0.1056997
ACTUAL: array([[-0.274009,  1.501667],
[ 0.310578,  0.      ],
[-0.556625, -0.325603],...
DESIRED: array([[-0.274009,  1.501667],
[ 0.310578,  0.      ],
[-0.556625, -0.325603],...
2025-04-26 23:56:23.888743 test begin: paddle.minimum(Tensor([10, 1, 2],"float32"), Tensor([346086, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([10, 1, 2],"float32"), Tensor([346086, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 692172 (0.000144%)
Max absolute difference among violations: 0.11697987
Max relative difference among violations: 0.28187966
ACTUAL: array([[ 0.045502, -0.536576],
[-0.978914,  2.654798],
[ 1.200243, -0.340358],...
DESIRED: array([[ 0.045502, -0.536576],
[-0.978914,  2.654798],
[ 1.200243, -0.340358],...
2025-04-26 23:56:37.348468 test begin: paddle.minimum(Tensor([10, 1, 2],"float32"), Tensor([68340, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([10, 1, 2],"float32"), Tensor([68340, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 136680 (0.000732%)
Max absolute difference among violations: 0.14496127
Max relative difference among violations: 0.4135492
ACTUAL: array([[-0.857867, -0.303968],
[ 0.025517, -0.360756],
[ 0.15312 ,  0.655754],...
DESIRED: array([[-0.857867, -0.303968],
[ 0.025517, -0.360756],
[ 0.15312 ,  0.655754],...
2025-04-26 23:59:08.395216 test begin: paddle.minimum(Tensor([1088, 1, 2],"float32"), Tensor([1, 1360, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([1088, 1, 2],"float32"), Tensor([1, 1360, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 2176 (0.046%)
Max absolute difference among violations: 0.19342709
Max relative difference among violations: 0.01921589
ACTUAL: array([[[ 1.113558,  5.376739]],
[[ 6.417516,  2.396708]],...
DESIRED: array([[[ 1.113558,  5.376738]],
[[ 6.41752 ,  2.396704]],...
2025-04-26 23:59:09.162873 test begin: paddle.minimum(Tensor([1088, 1, 2],"float32"), Tensor([1, 2125, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([1088, 1, 2],"float32"), Tensor([1, 2125, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 2176 (0.046%)
Max absolute difference among violations: 0.15332574
Max relative difference among violations: 0.42912304
ACTUAL: array([[[ 7.830986e-01, -8.644239e+00]],
[[ 3.105069e+00,  1.580305e+01]],...
DESIRED: array([[[ 7.830983e-01, -8.644239e+00]],
[[ 3.105065e+00,  1.580305e+01]],...
2025-04-26 23:59:46.948881 test begin: paddle.minimum(Tensor([11, 1, 2],"float32"), Tensor([236313, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([11, 1, 2],"float32"), Tensor([236313, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 472626 (0.000212%)
Max absolute difference among violations: 0.21080536
Max relative difference among violations: 8.930452
ACTUAL: array([[-0.061451,  0.425741],
[-0.444809, -0.122285],
[ 0.      , -0.677744],...
DESIRED: array([[-0.061451,  0.425742],
[-0.444809, -0.122285],
[ 0.      , -0.677744],...
2025-04-26 23:59:51.683990 test begin: paddle.minimum(Tensor([11, 1, 2],"float32"), Tensor([260865, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([11, 1, 2],"float32"), Tensor([260865, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 521730 (0.000192%)
Max absolute difference among violations: 0.21750832
Max relative difference among violations: 0.2421476
ACTUAL: array([[-1.147255,  0.016481],
[ 0.330699,  0.190411],
[ 0.8947  , -0.44809 ],...
DESIRED: array([[-1.147255,  0.016481],
[ 0.330699,  0.190411],
[ 0.8947  , -0.44809 ],...
2025-04-26 23:59:55.392214 test begin: paddle.minimum(Tensor([11, 1, 2],"float32"), Tensor([268569, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([11, 1, 2],"float32"), Tensor([268569, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 537138 (0.000186%)
Max absolute difference among violations: 0.06766973
Max relative difference among violations: 1.
ACTUAL: array([[ 0.347852, -0.839634],
[ 0.278343,  1.381846],
[ 0.118102,  1.1416  ],...
DESIRED: array([[ 0.347852, -0.839634],
[ 0.278343,  1.381846],
[ 0.118102,  1.141599],...
2025-04-26 23:59:57.352844 test begin: paddle.minimum(Tensor([11, 1, 2],"float32"), Tensor([272118, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([11, 1, 2],"float32"), Tensor([272118, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 22 (4.55%)
Max absolute difference among violations: 0.13681793
Max relative difference among violations: 0.01290632
ACTUAL: array([[[ -78.54431 ,   89.50657 ]],
[[ -36.364002,  124.96852 ]],...
DESIRED: array([[[ -78.54525 ,   89.50637 ]],
[[ -36.363926,  124.96838 ]],...
2025-04-27 00:00:00.003128 test begin: paddle.minimum(Tensor([11, 1, 2],"float32"), Tensor([283905, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([11, 1, 2],"float32"), Tensor([283905, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 567810 (0.000176%)
Max absolute difference among violations: 0.09333932
Max relative difference among violations: 0.08551362
ACTUAL: array([[ 0.282257, -0.452215],
[ 0.720439, -0.296413],
[-0.229892,  0.      ],...
DESIRED: array([[ 0.282257, -0.452215],
[ 0.720438, -0.296413],
[-0.229892,  0.      ],...
2025-04-27 00:00:00.605368 test begin: paddle.minimum(Tensor([11, 1, 2],"float32"), Tensor([291555, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([11, 1, 2],"float32"), Tensor([291555, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 583110 (0.000171%)
Max absolute difference among violations: 0.10712022
Max relative difference among violations: 0.3730169
ACTUAL: array([[ 0.602428,  0.994363],
[-0.749164,  0.246014],
[-0.009239,  0.47485 ],...
DESIRED: array([[ 0.602428,  0.994363],
[-0.749164,  0.246014],
[-0.009239,  0.47485 ],...
2025-04-27 00:00:01.833335 test begin: paddle.minimum(Tensor([11, 1, 2],"float32"), Tensor([295443, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([11, 1, 2],"float32"), Tensor([295443, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 590886 (0.000169%)
Max absolute difference among violations: 0.10242934
Max relative difference among violations: 1.
ACTUAL: array([[ 0.      ,  0.497608],
[-1.430004, -0.092401],
[ 0.475547,  0.214467],...
DESIRED: array([[ 0.      ,  0.497608],
[-1.430004, -0.092401],
[ 0.475547,  0.214467],...
2025-04-27 00:00:02.599460 test begin: paddle.minimum(Tensor([11, 1, 2],"float32"), Tensor([301302, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([11, 1, 2],"float32"), Tensor([301302, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 602604 (0.000166%)
Max absolute difference among violations: 0.05856752
Max relative difference among violations: 0.0608581
ACTUAL: array([[-0.920281, -0.85597 ],
[ 0.276871,  0.690062],
[ 0.059457, -0.379687],...
DESIRED: array([[-0.920281, -0.85597 ],
[ 0.276871,  0.690062],
[ 0.059457, -0.379687],...
2025-04-27 00:00:05.486566 test begin: paddle.minimum(Tensor([11, 1, 2],"float32"), Tensor([310992, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([11, 1, 2],"float32"), Tensor([310992, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 621984 (0.000161%)
Max absolute difference among violations: 0.1463412
Max relative difference among violations: 0.14193042
ACTUAL: array([[ 0.606314, -0.415905],
[-1.566881, -0.045241],
[ 0.36854 , -0.36913 ],...
DESIRED: array([[ 0.606314, -0.415905],
[-1.566881, -0.045241],
[ 0.36854 , -0.36913 ],...
2025-04-27 00:00:12.937816 test begin: paddle.minimum(Tensor([11, 1, 2],"float32"), Tensor([340176, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([11, 1, 2],"float32"), Tensor([340176, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 680352 (0.000147%)
Max absolute difference among violations: 0.10591143
Max relative difference among violations: 1.
ACTUAL: array([[-0.158672, -0.719705],
[-0.175922, -0.799901],
[-0.705794,  0.447136],...
DESIRED: array([[-0.158672, -0.719705],
[-0.175922, -0.799901],
[-0.705794,  0.447136],...
2025-04-27 00:00:18.331637 test begin: paddle.minimum(Tensor([11, 1, 2],"float32"), Tensor([369105, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([11, 1, 2],"float32"), Tensor([369105, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 22 (4.55%)
Max absolute difference among violations: 0.08933306
Max relative difference among violations: 0.01179067
ACTUAL: array([[[  51.667915,   60.362198]],
[[-163.12129 ,   12.328314]],...
DESIRED: array([[[  51.66806 ,   60.36233 ]],
[[-163.12    ,   12.328372]],...
2025-04-27 00:03:20.144638 test begin: paddle.minimum(Tensor([12, 1, 2],"float32"), Tensor([168795, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([12, 1, 2],"float32"), Tensor([168795, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 337590 (0.000296%)
Max absolute difference among violations: 0.1726822
Max relative difference among violations: 0.95246136
ACTUAL: array([[-0.78368 , -0.371984],
[ 0.409899, -0.605588],
[-0.622249,  1.864809],...
DESIRED: array([[-0.78368 , -0.371984],
[ 0.409899, -0.605588],
[-0.622249,  1.864809],...
2025-04-27 00:03:26.148677 test begin: paddle.minimum(Tensor([12, 1, 2],"float32"), Tensor([214848, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([12, 1, 2],"float32"), Tensor([214848, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 429696 (0.000233%)
Max absolute difference among violations: 0.13708265
Max relative difference among violations: 1.3745289
ACTUAL: array([[-0.106404, -0.510367],
[-0.729069,  0.813151],
[-0.714702,  0.      ],...
DESIRED: array([[-0.106404, -0.510367],
[-0.729069,  0.813151],
[-0.714702,  0.      ],...
2025-04-27 00:03:27.892254 test begin: paddle.minimum(Tensor([12, 1, 2],"float32"), Tensor([222012, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([12, 1, 2],"float32"), Tensor([222012, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 444024 (0.000225%)
Max absolute difference among violations: 0.2265558
Max relative difference among violations: 1.1462014
ACTUAL: array([[ 0.087606,  0.250301],
[ 0.355915,  0.060197],
[ 0.491355,  0.      ],...
DESIRED: array([[ 0.087606,  0.2503  ],
[ 0.355915,  0.060197],
[ 0.491355,  0.      ],...
2025-04-27 00:03:28.484619 test begin: paddle.minimum(Tensor([12, 1, 2],"float32"), Tensor([223827, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([12, 1, 2],"float32"), Tensor([223827, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 447654 (0.000223%)
Max absolute difference among violations: 0.09663197
Max relative difference among violations: 4.128792
ACTUAL: array([[ 0.699317,  0.028318],
[-0.190896, -0.066329],
[-0.796118,  0.676445],...
DESIRED: array([[ 0.699317,  0.028318],
[-0.190896, -0.066329],
[-0.796118,  0.676445],...
2025-04-27 00:03:30.948805 test begin: paddle.minimum(Tensor([12, 1, 2],"float32"), Tensor([236313, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([12, 1, 2],"float32"), Tensor([236313, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 472626 (0.000212%)
Max absolute difference among violations: 0.10732678
Max relative difference among violations: 1.1612147
ACTUAL: array([[-0.118895,  1.104377],
[-1.024443, -0.01123 ],
[ 0.314627,  1.202508],...
DESIRED: array([[-0.118895,  1.104377],
[-1.024443, -0.01123 ],
[ 0.314627,  1.202508],...
2025-04-27 00:03:34.127678 test begin: paddle.minimum(Tensor([12, 1, 2],"float32"), Tensor([248616, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([12, 1, 2],"float32"), Tensor([248616, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 24 (4.17%)
Max absolute difference among violations: 0.14230824
Max relative difference among violations: 0.01559146
ACTUAL: array([[[  20.767784,    1.93047 ]],
[[  -9.269628,  157.08484 ]],...
DESIRED: array([[[  20.76751 ,    1.930641]],
[[  -9.127319,  157.08443 ]],...
2025-04-27 00:03:40.046797 test begin: paddle.minimum(Tensor([12, 1, 2],"float32"), Tensor([262428, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([12, 1, 2],"float32"), Tensor([262428, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 524856 (0.000191%)
Max absolute difference among violations: 0.15231594
Max relative difference among violations: 0.281055
ACTUAL: array([[-0.434823, -0.187433],
[ 0.      ,  1.162858],
[-0.468673,  0.957991],...
DESIRED: array([[-0.434823, -0.187433],
[ 0.      ,  1.162858],
[-0.468673,  0.957991],...
2025-04-27 00:03:52.941598 test begin: paddle.minimum(Tensor([12, 1, 2],"float32"), Tensor([314595, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([12, 1, 2],"float32"), Tensor([314595, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 629190 (0.000159%)
Max absolute difference among violations: 0.03021109
Max relative difference among violations: 0.02225893
ACTUAL: array([[ 0.22257 ,  1.122276],
[-0.868997,  0.341473],
[ 0.993518,  1.717367],...
DESIRED: array([[ 0.22257 ,  1.122276],
[-0.868996,  0.341473],
[ 0.993518,  1.717367],...
2025-04-27 00:04:01.577816 test begin: paddle.minimum(Tensor([12, 1, 2],"float32"), Tensor([347820, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([12, 1, 2],"float32"), Tensor([347820, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 695640 (0.000144%)
Max absolute difference among violations: 0.09825006
Max relative difference among violations: 0.44981608
ACTUAL: array([[ 0.      ,  0.395299],
[ 0.80775 ,  0.      ],
[ 0.066087,  0.366181],...
DESIRED: array([[ 0.      ,  0.395299],
[ 0.80775 ,  0.      ],
[ 0.066087,  0.366181],...
2025-04-27 00:04:08.323155 test begin: paddle.minimum(Tensor([12, 1, 2],"float32"), Tensor([388740, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([12, 1, 2],"float32"), Tensor([388740, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 777480 (0.000129%)
Max absolute difference among violations: 0.1630826
Max relative difference among violations: 0.12953374
ACTUAL: array([[-1.398336, -1.301711],
[ 0.414191, -2.066986],
[ 0.473714, -1.12397 ],...
DESIRED: array([[-1.398336, -1.301711],
[ 0.414191, -2.066986],
[ 0.473714, -1.12397 ],...
2025-04-27 00:04:15.232887 test begin: paddle.minimum(Tensor([12, 1, 2],"float32"), Tensor([60750, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([12, 1, 2],"float32"), Tensor([60750, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 24 (4.17%)
Max absolute difference among violations: 0.12773514
Max relative difference among violations: 0.01278321
ACTUAL: array([[[ -54.271652,   17.102379]],
[[ -49.454155,  -36.187828]],...
DESIRED: array([[[ -54.271698,   17.102354]],
[[ -49.454144,  -36.18808 ]],...
2025-04-27 00:04:19.516047 test begin: paddle.minimum(Tensor([12, 1, 2],"float32"), Tensor([90060, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([12, 1, 2],"float32"), Tensor([90060, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 180120 (0.000555%)
Max absolute difference among violations: 0.07391649
Max relative difference among violations: 1.1281357
ACTUAL: array([[-0.968966, -0.166835],
[-0.071618, -2.640036],
[-0.940721,  0.210784],...
DESIRED: array([[-0.968966, -0.166835],
[-0.071618, -2.640037],
[-0.940721,  0.210784],...
2025-04-27 00:04:25.185341 test begin: paddle.minimum(Tensor([120, 1, 2],"float32"), Tensor([1, 6804, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([120, 1, 2],"float32"), Tensor([1, 6804, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 13608 (0.00735%)
Max absolute difference among violations: 0.03789842
Max relative difference among violations: 0.02632738
ACTUAL: array([[[-1.902175e-01,  2.827264e-01],
[ 7.052789e-01, -9.039004e-01],
[ 8.683712e-01,  1.130819e+00],...
DESIRED: array([[[-1.902176e-01,  2.827264e-01],
[ 7.052785e-01, -9.039004e-01],
[ 8.683714e-01,  1.130819e+00],...
2025-04-27 00:04:26.080771 test begin: paddle.minimum(Tensor([120, 1, 2],"float32"), Tensor([1, 9261, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([120, 1, 2],"float32"), Tensor([1, 9261, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 240 (0.417%)
Max absolute difference among violations: 0.08693409
Max relative difference among violations: 0.01591294
ACTUAL: array([[[ -4.196702,  22.697557]],
[[-16.894753, -19.906137]],...
DESIRED: array([[[ -4.196705,  22.697538]],
[[-16.894743, -19.906105]],...
2025-04-27 00:06:28.067860 test begin: paddle.minimum(Tensor([128, 1, 2],"float32"), Tensor([1, 4116, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([128, 1, 2],"float32"), Tensor([1, 4116, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 256 (0.391%)
Max absolute difference among violations: 0.21477664
Max relative difference among violations: 0.14338776
ACTUAL: array([[[-26.81126 ,   0.474138]],
[[ 26.412598,   0.355123]],...
DESIRED: array([[[-26.81127 ,   0.474138]],
[[ 26.412596,   0.355122]],...
2025-04-27 00:07:09.201802 test begin: paddle.minimum(Tensor([13, 1, 2],"float32"), Tensor([214107, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([13, 1, 2],"float32"), Tensor([214107, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 428214 (0.000234%)
Max absolute difference among violations: 0.21970916
Max relative difference among violations: 2.788475
ACTUAL: array([[ 0.233893, -0.681926],
[-1.755663,  0.      ],
[-0.599583, -0.255413],...
DESIRED: array([[ 0.233893, -0.681926],
[-1.755663,  0.      ],
[-0.599583, -0.255413],...
2025-04-27 00:07:10.378991 test begin: paddle.minimum(Tensor([13, 1, 2],"float32"), Tensor([217413, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([13, 1, 2],"float32"), Tensor([217413, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 434826 (0.00023%)
Max absolute difference among violations: 0.09428614
Max relative difference among violations: 0.21338205
ACTUAL: array([[-0.126003,  0.053758],
[ 0.177359, -0.199762],
[-0.623312,  1.663565],...
DESIRED: array([[-0.126003,  0.053758],
[ 0.177359, -0.199762],
[-0.623312,  1.663565],...
2025-04-27 00:07:10.925181 test begin: paddle.minimum(Tensor([13, 1, 2],"float32"), Tensor([220992, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([13, 1, 2],"float32"), Tensor([220992, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 441984 (0.000226%)
Max absolute difference among violations: 0.10807618
Max relative difference among violations: 1.
ACTUAL: array([[ 1.329891,  0.574312],
[ 0.856043,  0.765614],
[ 0.452569,  0.275237],...
DESIRED: array([[ 1.329891,  0.574312],
[ 0.856043,  0.765614],
[ 0.452569,  0.275237],...
2025-04-27 00:07:13.417568 test begin: paddle.minimum(Tensor([13, 1, 2],"float32"), Tensor([230202, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([13, 1, 2],"float32"), Tensor([230202, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2 / 460404 (0.000434%)
Max absolute difference among violations: 0.21319559
Max relative difference among violations: 0.6712993
ACTUAL: array([[-0.0177  ,  0.513909],
[-1.039182,  0.38426 ],
[-0.720418, -0.380525],...
DESIRED: array([[-0.0177  ,  0.513909],
[-1.039182,  0.38426 ],
[-0.720418, -0.380525],...
2025-04-27 00:07:13.894198 test begin: paddle.minimum(Tensor([13, 1, 2],"float32"), Tensor([236616, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([13, 1, 2],"float32"), Tensor([236616, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 473232 (0.000211%)
Max absolute difference among violations: 0.23224247
Max relative difference among violations: 0.13210711
ACTUAL: array([[-0.142101, -1.164451],
[ 0.241773, -0.019011],
[-0.359253,  0.241334],...
DESIRED: array([[-0.142101, -1.164451],
[ 0.241773, -0.019011],
[-0.359253,  0.241334],...
2025-04-27 00:07:20.665826 test begin: paddle.minimum(Tensor([13, 1, 2],"float32"), Tensor([262428, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([13, 1, 2],"float32"), Tensor([262428, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 524856 (0.000191%)
Max absolute difference among violations: 0.19066918
Max relative difference among violations: 0.20871943
ACTUAL: array([[-0.223889,  0.455381],
[ 0.375928,  0.53136 ],
[ 0.253186, -0.111401],...
DESIRED: array([[-0.223889,  0.455381],
[ 0.375928,  0.53136 ],
[ 0.253186, -0.111401],...
2025-04-27 00:07:27.622851 test begin: paddle.minimum(Tensor([13, 1, 2],"float32"), Tensor([286977, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([13, 1, 2],"float32"), Tensor([286977, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 573954 (0.000174%)
Max absolute difference among violations: 0.15821993
Max relative difference among violations: 0.1828282
ACTUAL: array([[-0.624111, -1.589133],
[ 0.      ,  0.169676],
[ 0.528696,  0.139066],...
DESIRED: array([[-0.624111, -1.589133],
[ 0.      ,  0.169676],
[ 0.528696,  0.139066],...
2025-04-27 00:07:28.374971 test begin: paddle.minimum(Tensor([13, 1, 2],"float32"), Tensor([291555, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([13, 1, 2],"float32"), Tensor([291555, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 583110 (0.000171%)
Max absolute difference among violations: 0.08787504
Max relative difference among violations: 0.28291348
ACTUAL: array([[ 1.35204 , -1.341168],
[ 0.      , -0.396165],
[-0.497524, -0.130508],...
DESIRED: array([[ 1.35204 , -1.341168],
[ 0.      , -0.396165],
[-0.497524, -0.130508],...
2025-04-27 00:07:30.612423 test begin: paddle.minimum(Tensor([13, 1, 2],"float32"), Tensor([299250, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([13, 1, 2],"float32"), Tensor([299250, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 598500 (0.000167%)
Max absolute difference among violations: 0.1249699
Max relative difference among violations: 0.16101317
ACTUAL: array([[ 1.45394 ,  0.      ],
[ 0.353811,  0.      ],
[-0.167591,  0.733662],...
DESIRED: array([[ 1.453939,  0.      ],
[ 0.353811,  0.      ],
[-0.167591,  0.733662],...
2025-04-27 00:07:32.816130 test begin: paddle.minimum(Tensor([13, 1, 2],"float32"), Tensor([303858, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([13, 1, 2],"float32"), Tensor([303858, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 607716 (0.000165%)
Max absolute difference among violations: 0.23346901
Max relative difference among violations: 0.13201007
ACTUAL: array([[ 1.004277, -0.24565 ],
[-0.449214,  1.472704],
[-0.233391,  1.228402],...
DESIRED: array([[ 1.004277, -0.24565 ],
[-0.449214,  1.472704],
[-0.233391,  1.228402],...
2025-04-27 00:07:33.591085 test begin: paddle.minimum(Tensor([13, 1, 2],"float32"), Tensor([304368, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([13, 1, 2],"float32"), Tensor([304368, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 608736 (0.000164%)
Max absolute difference among violations: 0.14763245
Max relative difference among violations: 1.0562521
ACTUAL: array([[-0.039878,  0.      ],
[-0.679663,  0.408606],
[ 0.658957, -0.480562],...
DESIRED: array([[-0.039878,  0.      ],
[-0.679663,  0.408606],
[ 0.658957, -0.480562],...
2025-04-27 00:07:37.552997 test begin: paddle.minimum(Tensor([13, 1, 2],"float32"), Tensor([321759, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([13, 1, 2],"float32"), Tensor([321759, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 643518 (0.000155%)
Max absolute difference among violations: 0.19267386
Max relative difference among violations: 0.19617388
ACTUAL: array([[ 1.04124 , -0.295503],
[-0.220654,  0.576751],
[ 0.150291,  0.534732],...
DESIRED: array([[ 1.04124 , -0.295503],
[-0.220654,  0.576751],
[ 0.150291,  0.534732],...
2025-04-27 00:07:43.525754 test begin: paddle.minimum(Tensor([13, 1, 2],"float32"), Tensor([331452, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([13, 1, 2],"float32"), Tensor([331452, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2 / 662904 (0.000302%)
Max absolute difference among violations: 0.16933717
Max relative difference among violations: 5.5724688
ACTUAL: array([[ 0.238293,  0.103519],
[ 0.482782, -0.552281],
[ 0.901082, -0.75984 ],...
DESIRED: array([[ 0.238293,  0.103519],
[ 0.482782, -0.552281],
[ 0.901082, -0.75984 ],...
2025-04-27 00:07:48.644474 test begin: paddle.minimum(Tensor([13, 1, 2],"float32"), Tensor([349866, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([13, 1, 2],"float32"), Tensor([349866, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 699732 (0.000143%)
Max absolute difference among violations: 0.03265893
Max relative difference among violations: 0.02942612
ACTUAL: array([[-0.502647, -2.742625],
[ 0.293737,  0.179229],
[ 0.109398, -0.388685],...
DESIRED: array([[-0.502647, -2.742625],
[ 0.293737,  0.179229],
[ 0.109398, -0.388685],...
2025-04-27 00:09:22.383718 test begin: paddle.minimum(Tensor([1344, 1, 2],"float32"), Tensor([1, 2577, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([1344, 1, 2],"float32"), Tensor([1, 2577, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 2688 (0.0372%)
Max absolute difference among violations: 0.24175468
Max relative difference among violations: 0.7873448
ACTUAL: array([[[-1.762184e+00, -9.580768e-01]],
[[-8.057769e+00,  2.140617e+01]],...
DESIRED: array([[[-1.762185e+00, -9.580770e-01]],
[[-8.057765e+00,  2.140616e+01]],...
2025-04-27 00:09:51.155600 test begin: paddle.minimum(Tensor([136, 1, 2],"float32"), Tensor([1, 7581, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([136, 1, 2],"float32"), Tensor([1, 7581, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 272 (0.368%)
Max absolute difference among violations: 0.23129272
Max relative difference among violations: 0.02742878
ACTUAL: array([[[-1.607000e+00,  3.082484e+01]],
[[ 1.821674e+00, -1.022702e+01]],...
DESIRED: array([[[-1.606996e+00,  3.082484e+01]],
[[ 1.821670e+00, -1.022700e+01]],...
2025-04-27 00:10:54.212109 test begin: paddle.minimum(Tensor([14, 1, 2],"float32"), Tensor([214848, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([14, 1, 2],"float32"), Tensor([214848, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 429696 (0.000233%)
Max absolute difference among violations: 0.13771386
Max relative difference among violations: 1.4916357
ACTUAL: array([[-0.245791, -0.418146],
[-0.011453, -0.47631 ],
[ 0.1469  , -1.053128],...
DESIRED: array([[-0.245791, -0.418146],
[-0.011453, -0.47631 ],
[ 0.1469  , -1.053128],...
2025-04-27 00:10:58.074451 test begin: paddle.minimum(Tensor([14, 1, 2],"float32"), Tensor([236313, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([14, 1, 2],"float32"), Tensor([236313, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 472626 (0.000212%)
Max absolute difference among violations: 0.10799551
Max relative difference among violations: 0.2900116
ACTUAL: array([[-0.377502,  1.068934],
[ 0.40837 ,  0.418847],
[-0.402968, -0.485804],...
DESIRED: array([[-0.377502,  1.068934],
[ 0.40837 ,  0.418847],
[-0.402968, -0.485804],...
2025-04-27 00:10:58.640317 test begin: paddle.minimum(Tensor([14, 1, 2],"float32"), Tensor([236616, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([14, 1, 2],"float32"), Tensor([236616, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 473232 (0.000211%)
Max absolute difference among violations: 0.02160084
Max relative difference among violations: 0.03495384
ACTUAL: array([[-1.043863,  0.384942],
[ 0.176766,  0.115904],
[ 1.2871  , -0.060518],...
DESIRED: array([[-1.043863,  0.384942],
[ 0.176766,  0.115904],
[ 1.2871  , -0.060518],...
2025-04-27 00:11:04.018496 test begin: paddle.minimum(Tensor([14, 1, 2],"float32"), Tensor([261681, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([14, 1, 2],"float32"), Tensor([261681, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 523362 (0.000191%)
Max absolute difference among violations: 0.12634906
Max relative difference among violations: 0.68808925
ACTUAL: array([[ 0.14971 , -0.531636],
[-0.979234,  1.049681],
[-0.459921,  0.      ],...
DESIRED: array([[ 0.14971 , -0.531636],
[-0.979234,  1.049681],
[-0.459921,  0.      ],...
2025-04-27 00:11:05.981997 test begin: paddle.minimum(Tensor([14, 1, 2],"float32"), Tensor([268560, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([14, 1, 2],"float32"), Tensor([268560, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 537120 (0.000186%)
Max absolute difference among violations: 0.23139876
Max relative difference among violations: 0.717433
ACTUAL: array([[-0.20695 ,  0.496929],
[ 1.414872,  0.048771],
[-0.895798,  0.670162],...
DESIRED: array([[-0.20695 ,  0.496929],
[ 1.414872,  0.048771],
[-0.895798,  0.670162],...
2025-04-27 00:11:32.294866 test begin: paddle.minimum(Tensor([14, 1, 2],"float32"), Tensor([349866, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([14, 1, 2],"float32"), Tensor([349866, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 699732 (0.000143%)
Max absolute difference among violations: 0.1556932
Max relative difference among violations: 1.
ACTUAL: array([[ 0.443003, -1.231173],
[-0.210899,  0.22214 ],
[-0.499571,  0.22721 ],...
DESIRED: array([[ 0.443004, -1.231173],
[-0.210899,  0.22214 ],
[-0.499571,  0.22721 ],...
2025-04-27 00:11:33.104877 test begin: paddle.minimum(Tensor([14, 1, 2],"float32"), Tensor([354501, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([14, 1, 2],"float32"), Tensor([354501, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 709002 (0.000141%)
Max absolute difference among violations: 0.04100463
Max relative difference among violations: 0.20261371
ACTUAL: array([[ 0.50959 ,  0.379981],
[ 0.53934 ,  1.327759],
[ 0.246225, -0.895973],...
DESIRED: array([[ 0.50959 ,  0.379981],
[ 0.53934 ,  1.327759],
[ 0.246225, -0.895973],...
2025-04-27 00:11:33.976690 test begin: paddle.minimum(Tensor([14, 1, 2],"float32"), Tensor([356541, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([14, 1, 2],"float32"), Tensor([356541, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 28 (3.57%)
Max absolute difference among violations: 0.245327
Max relative difference among violations: 0.01637119
ACTUAL: array([[[ -48.74751 ,  -64.56822 ]],
[[ -13.08515 ,  -15.695406]],...
DESIRED: array([[[ -48.747456,  -64.56784 ]],
[[ -13.084389,  -15.696209]],...
2025-04-27 00:11:39.697479 test begin: paddle.minimum(Tensor([14, 1, 2],"float32"), Tensor([408177, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([14, 1, 2],"float32"), Tensor([408177, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 816354 (0.000122%)
Max absolute difference among violations: 0.11140072
Max relative difference among violations: 0.18584181
ACTUAL: array([[-0.643526, -1.269989],
[-0.614556, -0.681567],
[-0.088596, -1.09012 ],...
DESIRED: array([[-0.643526, -1.269989],
[-0.614556, -0.681567],
[-0.088596, -1.09012 ],...
2025-04-27 00:11:43.555136 test begin: paddle.minimum(Tensor([14, 1, 2],"float32"), Tensor([59220, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([14, 1, 2],"float32"), Tensor([59220, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 28 (3.57%)
Max absolute difference among violations: 0.19396782
Max relative difference among violations: 0.02137921
ACTUAL: array([[[-16.004932, -88.768364]],
[[-28.598818, -14.012562]],...
DESIRED: array([[[-16.004902, -88.768036]],
[[-28.598795, -14.0126  ]],...
2025-04-27 00:11:47.695093 test begin: paddle.minimum(Tensor([14, 1, 2],"float32"), Tensor([71415, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([14, 1, 2],"float32"), Tensor([71415, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 142830 (0.0007%)
Max absolute difference among violations: 0.01417735
Max relative difference among violations: 0.04070753
ACTUAL: array([[ 0.473064,  0.      ],
[-0.065657, -0.460043],
[-0.758698,  0.598183],...
DESIRED: array([[ 0.473064,  0.      ],
[-0.065657, -0.460043],
[-0.758698,  0.598183],...
2025-04-27 00:12:03.994355 test begin: paddle.minimum(Tensor([1408, 1, 2],"float32"), Tensor([1, 1726, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([1408, 1, 2],"float32"), Tensor([1, 1726, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 2816 (0.0355%)
Max absolute difference among violations: 0.05683589
Max relative difference among violations: 0.02177871
ACTUAL: array([[[-0.215663,  0.825908]],
[[-0.704518,  1.445791]],...
DESIRED: array([[[-0.21566 ,  0.825905]],
[[-0.70452 ,  1.445796]],...
2025-04-27 00:13:45.159746 test begin: paddle.minimum(Tensor([1472, 1, 2],"float32"), Tensor([1, 2577, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([1472, 1, 2],"float32"), Tensor([1, 2577, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 2944 (0.034%)
Max absolute difference among violations: 0.03702521
Max relative difference among violations: 0.03536125
ACTUAL: array([[[  1.119322,  -6.498302]],
[[ -8.511442,   3.980411]],...
DESIRED: array([[[  1.119325,  -6.498305]],
[[ -8.511439,   3.980412]],...
2025-04-27 00:14:29.560882 test begin: paddle.minimum(Tensor([15, 1, 2],"float32"), Tensor([202572, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([15, 1, 2],"float32"), Tensor([202572, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 405144 (0.000247%)
Max absolute difference among violations: 0.10979199
Max relative difference among violations: 0.1488905
ACTUAL: array([[ 1.586942, -0.616128],
[-0.424457, -0.038838],
[ 0.      ,  0.641072],...
DESIRED: array([[ 1.586942, -0.616128],
[-0.424457, -0.038838],
[ 0.      ,  0.641072],...
2025-04-27 00:14:30.149613 test begin: paddle.minimum(Tensor([15, 1, 2],"float32"), Tensor([217413, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([15, 1, 2],"float32"), Tensor([217413, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 434826 (0.00023%)
Max absolute difference among violations: 0.06674078
Max relative difference among violations: 0.26995847
ACTUAL: array([[ 0.36883 , -0.699735],
[ 1.02537 , -0.20038 ],
[-0.791705,  0.002311],...
DESIRED: array([[ 0.36883 , -0.699735],
[ 1.02537 , -0.20038 ],
[-0.791705,  0.002311],...
2025-04-27 00:14:36.887940 test begin: paddle.minimum(Tensor([15, 1, 2],"float32"), Tensor([241731, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([15, 1, 2],"float32"), Tensor([241731, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 30 (3.33%)
Max absolute difference among violations: 0.24258566
Max relative difference among violations: 0.2267795
ACTUAL: array([[[-157.3708  ,   41.191216]],
[[  25.154854,   85.419876]],...
DESIRED: array([[[-157.37115 ,   41.19113 ]],
[[  25.154896,   85.419426]],...
2025-04-27 00:14:41.114470 test begin: paddle.minimum(Tensor([15, 1, 2],"float32"), Tensor([257796, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([15, 1, 2],"float32"), Tensor([257796, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 515592 (0.000194%)
Max absolute difference among violations: 0.12749046
Max relative difference among violations: 0.18874276
ACTUAL: array([[-1.202153, -0.276237],
[ 1.051349, -0.698343],
[-1.469174, -0.086538],...
DESIRED: array([[-1.202153, -0.276237],
[ 1.051349, -0.698343],
[-1.469174, -0.086538],...
2025-04-27 00:14:41.896481 test begin: paddle.minimum(Tensor([15, 1, 2],"float32"), Tensor([261681, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([15, 1, 2],"float32"), Tensor([261681, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 523362 (0.000191%)
Max absolute difference among violations: 0.22861776
Max relative difference among violations: 1.9364287
ACTUAL: array([[ 0.      , -0.440981],
[-0.495613, -0.602493],
[-0.204236, -0.551375],...
DESIRED: array([[ 0.      , -0.440981],
[-0.495613, -0.602494],
[-0.204236, -0.551375],...
2025-04-27 00:14:48.249097 test begin: paddle.minimum(Tensor([15, 1, 2],"float32"), Tensor([278256, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([15, 1, 2],"float32"), Tensor([278256, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 556512 (0.00018%)
Max absolute difference among violations: 0.1356417
Max relative difference among violations: 0.11221701
ACTUAL: array([[ 0.765485, -0.594489],
[ 0.342473, -0.450695],
[ 0.080671, -0.589911],...
DESIRED: array([[ 0.765485, -0.594489],
[ 0.342473, -0.450695],
[ 0.080671, -0.589911],...
2025-04-27 00:14:49.892388 test begin: paddle.minimum(Tensor([15, 1, 2],"float32"), Tensor([283167, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([15, 1, 2],"float32"), Tensor([283167, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 566334 (0.000177%)
Max absolute difference among violations: 0.05140311
Max relative difference among violations: 0.09059125
ACTUAL: array([[ 0.122754, -0.239019],
[-0.714011, -1.655325],
[ 0.      ,  0.397587],...
DESIRED: array([[ 0.122754, -0.239019],
[-0.714011, -1.655325],
[ 0.      ,  0.397587],...
2025-04-27 00:14:55.249696 test begin: paddle.minimum(Tensor([15, 1, 2],"float32"), Tensor([299250, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([15, 1, 2],"float32"), Tensor([299250, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 598500 (0.000167%)
Max absolute difference among violations: 0.08796084
Max relative difference among violations: 0.2842211
ACTUAL: array([[ 0.191144, -0.437731],
[-1.269774,  1.589755],
[ 0.856118,  0.254718],...
DESIRED: array([[ 0.191144, -0.437731],
[-1.269774,  1.589755],
[ 0.856118,  0.254718],...
2025-04-27 00:15:04.568498 test begin: paddle.minimum(Tensor([15, 1, 2],"float32"), Tensor([317160, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([15, 1, 2],"float32"), Tensor([317160, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 634320 (0.000158%)
Max absolute difference among violations: 0.066045
Max relative difference among violations: 1.
ACTUAL: array([[ 0.274226, -0.632778],
[ 0.59126 , -0.128239],
[ 1.034234,  0.467128],...
DESIRED: array([[ 0.274226, -0.632778],
[ 0.59126 , -0.128239],
[ 1.034234,  0.467128],...
2025-04-27 00:15:07.535313 test begin: paddle.minimum(Tensor([15, 1, 2],"float32"), Tensor([322272, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([15, 1, 2],"float32"), Tensor([322272, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 644544 (0.000155%)
Max absolute difference among violations: 0.13448912
Max relative difference among violations: 0.42175636
ACTUAL: array([[ 0.380992,  1.354285],
[-0.778944, -1.534906],
[-0.849376, -1.155902],...
DESIRED: array([[ 0.380992,  1.354285],
[-0.778944, -1.534906],
[-0.849376, -1.155902],...
2025-04-27 00:15:18.817674 test begin: paddle.minimum(Tensor([15, 1, 2],"float32"), Tensor([359613, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([15, 1, 2],"float32"), Tensor([359613, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 719226 (0.000139%)
Max absolute difference among violations: 0.01862198
Max relative difference among violations: 0.06207286
ACTUAL: array([[ 0.161367,  0.098198],
[-0.877133, -1.541911],
[-0.080444, -0.349558],...
DESIRED: array([[ 0.161367,  0.098198],
[-0.877133, -1.541911],
[-0.080444, -0.349558],...
2025-04-27 00:15:33.348324 test begin: paddle.minimum(Tensor([15, 1, 2],"float32"), Tensor([82080, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([15, 1, 2],"float32"), Tensor([82080, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 164160 (0.000609%)
Max absolute difference among violations: 0.06081897
Max relative difference among violations: 0.08214042
ACTUAL: array([[ 0.149853, -2.606569],
[-0.295986, -1.091126],
[ 0.135122,  0.108308],...
DESIRED: array([[ 0.149853, -2.606569],
[-0.295986, -1.091126],
[ 0.135122,  0.108308],...
2025-04-27 00:16:05.615040 test begin: paddle.minimum(Tensor([152, 1, 2],"float32"), Tensor([1, 7581, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([152, 1, 2],"float32"), Tensor([1, 7581, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 15162 (0.0066%)
Max absolute difference among violations: 0.08369923
Max relative difference among violations: 0.03004948
ACTUAL: array([[[-2.251261,  2.479349],
[ 1.986772, -1.231783],
[ 0.985868,  0.813767],...
DESIRED: array([[[-2.251261,  2.479349],
[ 1.986773, -1.231784],
[ 0.985868,  0.813767],...
2025-04-27 00:17:36.112131 test begin: paddle.minimum(Tensor([1579, 1, 2],"float32"), Tensor([21, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([1579, 1, 2],"float32"), Tensor([21, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 3158 (0.0317%)
Max absolute difference among violations: 0.16967797
Max relative difference among violations: 0.14129345
ACTUAL: array([[[-1.018045,  0.261354]],
[[ 0.149513,  0.074646]],...
DESIRED: array([[[-1.018045,  0.261354]],
[[ 0.149513,  0.074646]],...
2025-04-27 00:18:26.738676 test begin: paddle.minimum(Tensor([16, 1, 2],"float32"), Tensor([250656, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([16, 1, 2],"float32"), Tensor([250656, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 501312 (0.000199%)
Max absolute difference among violations: 0.03474082
Max relative difference among violations: 1.
ACTUAL: array([[ 0.      , -1.033904],
[-0.900605, -0.802524],
[ 0.487065, -0.674087],...
DESIRED: array([[ 0.      , -1.033904],
[-0.900605, -0.802524],
[ 0.487065, -0.674087],...
2025-04-27 00:18:27.581701 test begin: paddle.minimum(Tensor([16, 1, 2],"float32"), Tensor([252195, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([16, 1, 2],"float32"), Tensor([252195, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 504390 (0.000198%)
Max absolute difference among violations: 0.11351261
Max relative difference among violations: 0.44254667
ACTUAL: array([[ 1.612528,  0.634923],
[ 0.151552,  0.666551],
[ 1.283731, -0.364243],...
DESIRED: array([[ 1.612528,  0.634923],
[ 0.151552,  0.666551],
[ 1.283731, -0.364243],...
2025-04-27 00:18:32.599261 test begin: paddle.minimum(Tensor([16, 1, 2],"float32"), Tensor([264978, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([16, 1, 2],"float32"), Tensor([264978, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 529956 (0.000189%)
Max absolute difference among violations: 0.19894126
Max relative difference among violations: 0.68654275
ACTUAL: array([[-0.276312,  0.      ],
[-1.143657,  0.      ],
[-0.640853, -0.345982],...
DESIRED: array([[-0.276312,  0.      ],
[-1.143657,  0.      ],
[-0.640852, -0.345982],...
2025-04-27 00:18:35.163312 test begin: paddle.minimum(Tensor([16, 1, 2],"float32"), Tensor([270096, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([16, 1, 2],"float32"), Tensor([270096, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 540192 (0.000185%)
Max absolute difference among violations: 0.17450249
Max relative difference among violations: 0.38417244
ACTUAL: array([[ 0.250878,  1.273883],
[ 0.766176, -0.108479],
[-0.257405,  0.54554 ],...
DESIRED: array([[ 0.250878,  1.273883],
[ 0.766176, -0.108479],
[-0.257405,  0.54554 ],...
2025-04-27 00:18:41.432855 test begin: paddle.minimum(Tensor([16, 1, 2],"float32"), Tensor([299250, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([16, 1, 2],"float32"), Tensor([299250, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 598500 (0.000167%)
Max absolute difference among violations: 0.17659295
Max relative difference among violations: 0.16609555
ACTUAL: array([[ 0.045874, -0.341683],
[-0.31876 ,  0.021531],
[ 0.046531, -0.06437 ],...
DESIRED: array([[ 0.045874, -0.341684],
[-0.31876 ,  0.021531],
[ 0.046531, -0.06437 ],...
2025-04-27 00:18:44.504230 test begin: paddle.minimum(Tensor([16, 1, 2],"float32"), Tensor([304368, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([16, 1, 2],"float32"), Tensor([304368, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 608736 (0.000164%)
Max absolute difference among violations: 0.16918981
Max relative difference among violations: 0.36384916
ACTUAL: array([[-0.335276, -1.02048 ],
[-0.209019,  1.763479],
[-0.425974, -0.641186],...
DESIRED: array([[-0.335276, -1.02048 ],
[-0.209019,  1.76348 ],
[-0.425974, -0.641186],...
2025-04-27 00:18:45.571268 test begin: paddle.minimum(Tensor([16, 1, 2],"float32"), Tensor([306900, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([16, 1, 2],"float32"), Tensor([306900, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2 / 613800 (0.000326%)
Max absolute difference among violations: 0.09613329
Max relative difference among violations: 0.14535333
ACTUAL: array([[ 0.742052,  0.734696],
[-0.271718,  0.      ],
[-0.230624,  1.156607],...
DESIRED: array([[ 0.742052,  0.734696],
[-0.271718,  0.      ],
[-0.230624,  1.156607],...
2025-04-27 00:18:47.611338 test begin: paddle.minimum(Tensor([16, 1, 2],"float32"), Tensor([310992, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([16, 1, 2],"float32"), Tensor([310992, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 621984 (0.000161%)
Max absolute difference among violations: 0.11260056
Max relative difference among violations: 0.9553858
ACTUAL: array([[-0.269539,  0.084868],
[ 1.458126,  0.      ],
[ 0.104607,  0.      ],...
DESIRED: array([[-0.269539,  0.084868],
[ 1.458126,  0.      ],
[ 0.104607,  0.      ],...
2025-04-27 00:18:50.590330 test begin: paddle.minimum(Tensor([16, 1, 2],"float32"), Tensor([317160, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([16, 1, 2],"float32"), Tensor([317160, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 634320 (0.000158%)
Max absolute difference among violations: 0.06662875
Max relative difference among violations: 0.08187328
ACTUAL: array([[ 0.215148, -0.528159],
[-1.129871,  2.403357],
[-0.27738 ,  0.188409],...
DESIRED: array([[ 0.215148, -0.528159],
[-1.129871,  2.403357],
[-0.27738 ,  0.188409],...
2025-04-27 00:19:01.943130 test begin: paddle.minimum(Tensor([16, 1, 2],"float32"), Tensor([349155, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([16, 1, 2],"float32"), Tensor([349155, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 698310 (0.000143%)
Max absolute difference among violations: 0.17163444
Max relative difference among violations: 0.26857466
ACTUAL: array([[ 1.286356,  0.504457],
[-0.310775, -0.266719],
[ 1.606404, -0.097281],...
DESIRED: array([[ 1.286356,  0.504457],
[-0.310775, -0.266719],
[ 1.606404, -0.097281],...
2025-04-27 00:19:08.528146 test begin: paddle.minimum(Tensor([16, 1, 2],"float32"), Tensor([375984, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([16, 1, 2],"float32"), Tensor([375984, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 751968 (0.000133%)
Max absolute difference among violations: 0.13652897
Max relative difference among violations: 0.09855255
ACTUAL: array([[ 0.140439, -0.547589],
[ 0.      ,  0.      ],
[ 0.139272,  2.430397],...
DESIRED: array([[ 0.140439, -0.547589],
[ 0.      ,  0.      ],
[ 0.139272,  2.430397],...
2025-04-27 00:19:19.543719 test begin: paddle.minimum(Tensor([16, 1, 2],"float32"), Tensor([63135, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([16, 1, 2],"float32"), Tensor([63135, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 32 (3.12%)
Max absolute difference among violations: 0.08695534
Max relative difference among violations: 0.21271677
ACTUAL: array([[[ 54.92799 , 112.04497 ]],
[[ -9.589996, -59.315525]],...
DESIRED: array([[[ 54.927746, 112.04506 ]],
[[ -9.5899  , -59.315308]],...
2025-04-27 00:19:35.517188 test begin: paddle.minimum(Tensor([16, 13, 1, 2],"float32"), Tensor([16, 1, 12096, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([16, 13, 1, 2],"float32"), Tensor([16, 1, 12096, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 416 (0.24%)
Max absolute difference among violations: 0.22328949
Max relative difference among violations: 0.02935984
ACTUAL: array([[[[-2.165948e+01,  1.577954e+01]],
[[ 1.909510e+01,  7.174796e+00]],...
DESIRED: array([[[[-2.165939e+01,  1.577952e+01]],
[[ 1.909509e+01,  7.174797e+00]],...
2025-04-27 00:19:39.061494 test begin: paddle.minimum(Tensor([16, 13, 1, 2],"float32"), Tensor([16, 1, 8400, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([16, 13, 1, 2],"float32"), Tensor([16, 1, 8400, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 268800 (0.000372%)
Max absolute difference among violations: 0.16867673
Max relative difference among violations: 0.27007473
ACTUAL: array([[[[-0.456288,  0.317436],
[ 0.      , -1.565652],
[-0.276688, -0.217251],...
DESIRED: array([[[[-0.456288,  0.317436],
[ 0.      , -1.565652],
[-0.276688, -0.217251],...
2025-04-27 00:19:45.848379 test begin: paddle.minimum(Tensor([16, 14, 1, 2],"float32"), Tensor([16, 1, 8400, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([16, 14, 1, 2],"float32"), Tensor([16, 1, 8400, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 268800 (0.000372%)
Max absolute difference among violations: 0.03593907
Max relative difference among violations: 0.08307791
ACTUAL: array([[[[ 1.064515e+00,  2.786907e-01],
[-5.452210e-01,  3.694470e-01],
[-1.220746e+00, -9.832609e-01],...
DESIRED: array([[[[ 1.064515e+00,  2.786907e-01],
[-5.452210e-01,  3.694470e-01],
[-1.220746e+00, -9.832608e-01],...
2025-04-27 00:19:51.925620 test begin: paddle.minimum(Tensor([16, 16, 1, 2],"float32"), Tensor([16, 1, 11109, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([16, 16, 1, 2],"float32"), Tensor([16, 1, 11109, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 512 (0.195%)
Max absolute difference among violations: 0.11016083
Max relative difference among violations: 0.02720607
ACTUAL: array([[[[  3.844347,  -2.014233]],
[[-22.374983, -12.489363]],...
DESIRED: array([[[[  3.844341,  -2.014223]],
[[-22.375004, -12.489292]],...
2025-04-27 00:19:52.592424 test begin: paddle.minimum(Tensor([16, 16, 1, 2],"float32"), Tensor([16, 1, 12096, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([16, 16, 1, 2],"float32"), Tensor([16, 1, 12096, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 387072 (0.000258%)
Max absolute difference among violations: 0.09893399
Max relative difference among violations: 0.10252369
ACTUAL: array([[[[-0.464559,  0.332649],
[-0.014772, -0.414542],
[-0.744996,  0.642688],...
DESIRED: array([[[[-0.464559,  0.332649],
[-0.014772, -0.414542],
[-0.744996,  0.642688],...
2025-04-27 00:20:06.034765 test begin: paddle.minimum(Tensor([16, 18, 1, 2],"float32"), Tensor([16, 1, 2541, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([16, 18, 1, 2],"float32"), Tensor([16, 1, 2541, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 81312 (0.00123%)
Max absolute difference among violations: 0.04717143
Max relative difference among violations: 0.2334515
ACTUAL: array([[[[ 0.055346, -0.32176 ],
[-0.628605,  0.357152],
[ 0.200729, -0.328516],...
DESIRED: array([[[[ 0.055346, -0.32176 ],
[-0.628605,  0.357152],
[ 0.200729, -0.328516],...
2025-04-27 00:20:11.874287 test begin: paddle.minimum(Tensor([16, 19, 1, 2],"float32"), Tensor([16, 1, 12096, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([16, 19, 1, 2],"float32"), Tensor([16, 1, 12096, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 608 (0.164%)
Max absolute difference among violations: 0.2284956
Max relative difference among violations: 0.02029916
ACTUAL: array([[[[-11.650031,  20.422485]],
[[-25.753477,  25.384401]],...
DESIRED: array([[[[-11.649997,  20.422516]],
[[-25.75348 ,  25.384373]],...
2025-04-27 00:20:14.221460 test begin: paddle.minimum(Tensor([16, 19, 1, 2],"float32"), Tensor([16, 1, 5376, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([16, 19, 1, 2],"float32"), Tensor([16, 1, 5376, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 172032 (0.000581%)
Max absolute difference among violations: 0.03693908
Max relative difference among violations: 0.05002882
ACTUAL: array([[[[-1.291201e+00,  1.679223e+00],
[ 0.000000e+00, -1.342417e+00],
[ 9.232833e-01, -1.434626e-01],...
DESIRED: array([[[[-1.291201e+00,  1.679223e+00],
[ 0.000000e+00, -1.342417e+00],
[ 9.232833e-01, -1.434626e-01],...
2025-04-27 00:20:14.598678 test begin: paddle.minimum(Tensor([16, 19, 1, 2],"float32"), Tensor([16, 1, 6069, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([16, 19, 1, 2],"float32"), Tensor([16, 1, 6069, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 608 (0.164%)
Max absolute difference among violations: 0.16286445
Max relative difference among violations: 0.05252858
ACTUAL: array([[[[ 4.166606e+00, -1.197619e+01]],
[[-1.192352e+01,  6.816154e+00]],...
DESIRED: array([[[[ 4.166607e+00, -1.197618e+01]],
[[-1.192351e+01,  6.816149e+00]],...
2025-04-27 00:20:17.824424 test begin: paddle.minimum(Tensor([16, 20, 1, 2],"float32"), Tensor([16, 1, 12096, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([16, 20, 1, 2],"float32"), Tensor([16, 1, 12096, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 640 (0.156%)
Max absolute difference among violations: 0.18927574
Max relative difference among violations: 0.0354314
ACTUAL: array([[[[ 2.499332e+01,  1.117487e-01]],
[[-1.071857e+01, -3.693779e+01]],...
DESIRED: array([[[[ 2.499338e+01,  1.117616e-01]],
[[-1.071862e+01, -3.693769e+01]],...
2025-04-27 00:20:28.043597 test begin: paddle.minimum(Tensor([16, 21, 1, 2],"float32"), Tensor([16, 1, 7581, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([16, 21, 1, 2],"float32"), Tensor([16, 1, 7581, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 672 (0.149%)
Max absolute difference among violations: 0.18575096
Max relative difference among violations: 0.01792082
ACTUAL: array([[[[ 1.018876e+01, -3.227870e+00]],
[[ 3.459888e+00,  2.772117e+01]],...
DESIRED: array([[[[ 1.018876e+01, -3.227875e+00]],
[[ 3.459891e+00,  2.772118e+01]],...
2025-04-27 00:20:28.579307 test begin: paddle.minimum(Tensor([16, 21, 1, 2],"float32"), Tensor([16, 1, 8400, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([16, 21, 1, 2],"float32"), Tensor([16, 1, 8400, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 268800 (0.000372%)
Max absolute difference among violations: 0.06874366
Max relative difference among violations: 0.39767134
ACTUAL: array([[[[ 0.597049,  0.209141],
[-0.307403, -0.593499],
[ 0.029532,  0.367369],...
DESIRED: array([[[[ 0.597049,  0.209141],
[-0.307403, -0.593499],
[ 0.029532,  0.367369],...
2025-04-27 00:20:36.588898 test begin: paddle.minimum(Tensor([16, 22, 1, 2],"float32"), Tensor([16, 1, 9261, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([16, 22, 1, 2],"float32"), Tensor([16, 1, 9261, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 704 (0.142%)
Max absolute difference among violations: 0.16853857
Max relative difference among violations: 0.03900006
ACTUAL: array([[[[ 1.166416e+01, -9.363537e+00]],
[[-2.756239e+01,  2.707529e+00]],...
DESIRED: array([[[[ 1.166418e+01, -9.363537e+00]],
[[-2.756237e+01,  2.707527e+00]],...
2025-04-27 00:20:37.238451 test begin: paddle.minimum(Tensor([16, 23, 1, 2],"float32"), Tensor([16, 1, 10164, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([16, 23, 1, 2],"float32"), Tensor([16, 1, 10164, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 325248 (0.000307%)
Max absolute difference among violations: 0.14527133
Max relative difference among violations: 7.2374988
ACTUAL: array([[[[-1.270435, -1.133467],
[ 1.336998, -1.44507 ],
[ 0.348011, -1.764354],...
DESIRED: array([[[[-1.270435, -1.133467],
[ 1.336998, -1.445069],
[ 0.34801 , -1.764354],...
2025-04-27 00:20:42.373098 test begin: paddle.minimum(Tensor([16, 23, 1, 2],"float32"), Tensor([16, 1, 8400, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([16, 23, 1, 2],"float32"), Tensor([16, 1, 8400, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 736 (0.136%)
Max absolute difference among violations: 0.09638023
Max relative difference among violations: 0.02151387
ACTUAL: array([[[[-2.027843e+01,  3.075961e-01]],
[[-1.662099e+01, -1.553082e+01]],...
DESIRED: array([[[[-2.027842e+01,  3.075976e-01]],
[[-1.662101e+01, -1.553082e+01]],...
2025-04-27 00:20:43.061753 test begin: paddle.minimum(Tensor([16, 23, 1, 2],"float32"), Tensor([16, 1, 9261, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([16, 23, 1, 2],"float32"), Tensor([16, 1, 9261, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 736 (0.136%)
Max absolute difference among violations: 0.16379952
Max relative difference among violations: 0.04845114
ACTUAL: array([[[[-6.055868e-01, -3.204917e+00]],
[[ 6.206382e+00, -8.087382e+00]],...
DESIRED: array([[[[-6.055814e-01, -3.204912e+00]],
[[ 6.206380e+00, -8.087414e+00]],...
2025-04-27 00:20:56.624432 test begin: paddle.minimum(Tensor([16, 25, 1, 2],"float32"), Tensor([16, 1, 9261, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([16, 25, 1, 2],"float32"), Tensor([16, 1, 9261, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 296352 (0.000337%)
Max absolute difference among violations: 0.11385025
Max relative difference among violations: 0.37859127
ACTUAL: array([[[[ 6.699878e-02,  9.263788e-01],
[ 6.289285e-01, -3.630551e-01],
[ 1.040995e-03, -2.269623e-02],...
DESIRED: array([[[[ 6.699875e-02,  9.263788e-01],
[ 6.289285e-01, -3.630552e-01],
[ 1.040965e-03, -2.269623e-02],...
2025-04-27 00:21:08.710226 test begin: paddle.minimum(Tensor([16, 27, 1, 2],"float32"), Tensor([16, 1, 7581, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([16, 27, 1, 2],"float32"), Tensor([16, 1, 7581, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 864 (0.116%)
Max absolute difference among violations: 0.07252359
Max relative difference among violations: 0.04224516
ACTUAL: array([[[[-1.892062e+00,  7.550905e+00]],
[[-4.104855e+01, -2.438482e+01]],...
DESIRED: array([[[[-1.892062e+00,  7.550905e+00]],
[[-4.104857e+01, -2.438483e+01]],...
2025-04-27 00:21:16.204974 test begin: paddle.minimum(Tensor([16, 28, 1, 2],"float32"), Tensor([16, 1, 7581, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([16, 28, 1, 2],"float32"), Tensor([16, 1, 7581, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 242592 (0.000412%)
Max absolute difference among violations: 0.22164428
Max relative difference among violations: 0.20915851
ACTUAL: array([[[[-1.398066e-01, -1.238109e+00],
[ 3.091825e-01, -1.377482e-01],
[ 1.568460e-01,  1.492745e+00],...
DESIRED: array([[[[-1.398066e-01, -1.238109e+00],
[ 3.091825e-01, -1.377483e-01],
[ 1.568460e-01,  1.492745e+00],...
2025-04-27 00:21:25.378196 test begin: paddle.minimum(Tensor([16, 30, 1, 2],"float32"), Tensor([16, 1, 9261, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([16, 30, 1, 2],"float32"), Tensor([16, 1, 9261, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 960 (0.104%)
Max absolute difference among violations: 0.13126945
Max relative difference among violations: 0.0274382
ACTUAL: array([[[[-7.816427e+00,  1.820748e+01]],
[[ 4.883624e-01,  1.947030e+01]],...
DESIRED: array([[[[-7.816414e+00,  1.820749e+01]],
[[ 4.883480e-01,  1.947033e+01]],...
2025-04-27 00:21:29.003031 test begin: paddle.minimum(Tensor([16, 31, 1, 2],"float32"), Tensor([16, 1, 3549, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([16, 31, 1, 2],"float32"), Tensor([16, 1, 3549, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 113568 (0.000881%)
Max absolute difference among violations: 0.07617593
Max relative difference among violations: 0.11196774
ACTUAL: array([[[[-1.116295, -0.791831],
[ 0.351475,  0.895364],
[ 1.296682, -2.043481],...
DESIRED: array([[[[-1.116295, -0.791831],
[ 0.351475,  0.895364],
[ 1.296682, -2.043481],...
2025-04-27 00:21:34.465190 test begin: paddle.minimum(Tensor([16, 32, 1, 2],"float32"), Tensor([16, 1, 6804, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([16, 32, 1, 2],"float32"), Tensor([16, 1, 6804, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1024 (0.0977%)
Max absolute difference among violations: 0.07287645
Max relative difference among violations: 0.0138425
ACTUAL: array([[[[ 1.213861e+01, -4.046296e-01]],
[[ 2.096876e+00, -2.923117e+00]],...
DESIRED: array([[[[ 1.213868e+01, -4.046296e-01]],
[[ 2.096874e+00, -2.923128e+00]],...
2025-04-27 00:21:35.141900 test begin: paddle.minimum(Tensor([16, 32, 1, 2],"float32"), Tensor([16, 1, 7581, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([16, 32, 1, 2],"float32"), Tensor([16, 1, 7581, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 242592 (0.000412%)
Max absolute difference among violations: 0.05787253
Max relative difference among violations: 16.171013
ACTUAL: array([[[[ 0.808652, -0.091725],
[-0.445128,  1.149911],
[-0.388787, -0.960524],...
DESIRED: array([[[[ 0.808652, -0.091725],
[-0.445128,  1.149911],
[-0.388787, -0.960524],...
2025-04-27 00:21:38.439090 test begin: paddle.minimum(Tensor([16, 34, 1, 2],"float32"), Tensor([16, 1, 10164, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([16, 34, 1, 2],"float32"), Tensor([16, 1, 10164, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 325248 (0.000307%)
Max absolute difference among violations: 0.0126176
Max relative difference among violations: 1.
ACTUAL: array([[[[-0.517085,  0.45645 ],
[ 0.      , -0.054395],
[ 0.226628, -0.27379 ],...
DESIRED: array([[[[-0.517084,  0.45645 ],
[ 0.      , -0.054395],
[ 0.226628, -0.27379 ],...
2025-04-27 00:21:41.472600 test begin: paddle.minimum(Tensor([16, 35, 1, 2],"float32"), Tensor([16, 1, 10164, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([16, 35, 1, 2],"float32"), Tensor([16, 1, 10164, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 325248 (0.000307%)
Max absolute difference among violations: 0.16505885
Max relative difference among violations: 0.52924347
ACTUAL: array([[[[ 1.468307,  0.646069],
[ 0.323188, -2.33472 ],
[-0.678929, -0.771196],...
DESIRED: array([[[[ 1.468307,  0.646068],
[ 0.323188, -2.33472 ],
[-0.678929, -0.771196],...
2025-04-27 00:21:46.927647 test begin: paddle.minimum(Tensor([16, 36, 1, 2],"float32"), Tensor([16, 1, 6804, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([16, 36, 1, 2],"float32"), Tensor([16, 1, 6804, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1152 (0.0868%)
Max absolute difference among violations: 0.13144588
Max relative difference among violations: 0.01303947
ACTUAL: array([[[[  1.53126 ,   3.489493]],
[[ 31.523855,   5.09211 ]],...
DESIRED: array([[[[  1.531272,   3.489493]],
[[ 31.523853,   5.092113]],...
2025-04-27 00:22:01.235947 test begin: paddle.minimum(Tensor([16, 40, 1, 2],"float32"), Tensor([16, 1, 9261, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([16, 40, 1, 2],"float32"), Tensor([16, 1, 9261, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1280 (0.0781%)
Max absolute difference among violations: 0.19189453
Max relative difference among violations: 0.01626826
ACTUAL: array([[[[ 15.301326,   3.191942]],
[[  8.616066,  16.942728]],...
DESIRED: array([[[[ 15.301337,   3.191918]],
[[  8.616067,  16.942732]],...
2025-04-27 00:22:08.387389 test begin: paddle.minimum(Tensor([16, 45, 1, 2],"float32"), Tensor([16, 1, 10164, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([16, 45, 1, 2],"float32"), Tensor([16, 1, 10164, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1440 (0.0694%)
Max absolute difference among violations: 0.02727556
Max relative difference among violations: 0.01606023
ACTUAL: array([[[[ 8.868159e+00,  1.045036e+01]],
[[-1.042278e+01, -6.100043e+00]],...
DESIRED: array([[[[ 8.868156e+00,  1.045036e+01]],
[[-1.042280e+01, -6.100053e+00]],...
2025-04-27 00:22:14.418525 test begin: paddle.minimum(Tensor([16, 50, 1, 2],"float32"), Tensor([16, 1, 7581, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([16, 50, 1, 2],"float32"), Tensor([16, 1, 7581, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1600 (0.0625%)
Max absolute difference among violations: 0.07572785
Max relative difference among violations: 0.24889365
ACTUAL: array([[[[ -4.371161,   3.840454]],
[[ -1.840229,   0.174993]],...
DESIRED: array([[[[ -4.371153,   3.84046 ]],
[[ -1.840227,   0.174992]],...
2025-04-27 00:22:16.910082 test begin: paddle.minimum(Tensor([16, 54, 1, 2],"float32"), Tensor([16, 1, 6069, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([16, 54, 1, 2],"float32"), Tensor([16, 1, 6069, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 194208 (0.000515%)
Max absolute difference among violations: 0.11424309
Max relative difference among violations: 0.28867835
ACTUAL: array([[[[-0.799736,  0.224704],
[-0.962157,  2.321551],
[-1.529852,  0.202536],...
DESIRED: array([[[[-0.799737,  0.224704],
[-0.962157,  2.321551],
[-1.529851,  0.202537],...
2025-04-27 00:24:13.239070 test begin: paddle.minimum(Tensor([1664, 1, 2],"float32"), Tensor([1, 2577, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([1664, 1, 2],"float32"), Tensor([1, 2577, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 3328 (0.03%)
Max absolute difference among violations: 0.16745758
Max relative difference among violations: 0.01612194
ACTUAL: array([[[ 22.300922,   3.285265]],
[[-16.567451,   0.599222]],...
DESIRED: array([[[ 22.3009  ,   3.285264]],
[[-16.567436,   0.599222]],...
2025-04-27 00:24:27.109286 test begin: paddle.minimum(Tensor([1672, 1, 2],"float32"), Tensor([1, 4725, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([1672, 1, 2],"float32"), Tensor([1, 4725, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2 / 3344 (0.0598%)
Max absolute difference among violations: 0.19221663
Max relative difference among violations: 0.19757153
ACTUAL: array([[[ -9.930202,  14.846316]],
[[ -2.173663,  13.177094]],...
DESIRED: array([[[ -9.930207,  14.846326]],
[[ -2.173663,  13.177114]],...
2025-04-27 00:25:13.752712 test begin: paddle.minimum(Tensor([17, 1, 2],"float32"), Tensor([171888, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([17, 1, 2],"float32"), Tensor([171888, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 343776 (0.000291%)
Max absolute difference among violations: 0.05976534
Max relative difference among violations: 0.06333439
ACTUAL: array([[ 1.431544, -0.535388],
[ 0.088816, -0.332796],
[-0.167784, -0.512894],...
DESIRED: array([[ 1.431544, -0.535388],
[ 0.088816, -0.332796],
[-0.167784, -0.512894],...
2025-04-27 00:25:17.585359 test begin: paddle.minimum(Tensor([17, 1, 2],"float32"), Tensor([202572, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([17, 1, 2],"float32"), Tensor([202572, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 405144 (0.000247%)
Max absolute difference among violations: 0.04113629
Max relative difference among violations: 0.19596548
ACTUAL: array([[-0.681664,  1.597459],
[-3.02808 ,  1.923249],
[-1.076484,  0.77492 ],...
DESIRED: array([[-0.681664,  1.597459],
[-3.02808 ,  1.923249],
[-1.076484,  0.77492 ],...
2025-04-27 00:25:18.313705 test begin: paddle.minimum(Tensor([17, 1, 2],"float32"), Tensor([204624, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([17, 1, 2],"float32"), Tensor([204624, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 409248 (0.000244%)
Max absolute difference among violations: 0.03626695
Max relative difference among violations: 1.385666
ACTUAL: array([[-0.071895,  1.021685],
[ 0.155971,  0.100064],
[-0.509674, -1.917837],...
DESIRED: array([[-0.071895,  1.021685],
[ 0.155971,  0.100064],
[-0.509674, -1.917837],...
2025-04-27 00:25:25.778403 test begin: paddle.minimum(Tensor([17, 1, 2],"float32"), Tensor([234804, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([17, 1, 2],"float32"), Tensor([234804, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 469608 (0.000213%)
Max absolute difference among violations: 0.08481973
Max relative difference among violations: 2.5682476
ACTUAL: array([[ 0.374029,  1.275338],
[-0.741998, -0.113977],
[ 0.557123, -0.495471],...
DESIRED: array([[ 0.374029,  1.275338],
[-0.741998, -0.113977],
[ 0.557123, -0.495471],...
2025-04-27 00:25:32.430802 test begin: paddle.minimum(Tensor([17, 1, 2],"float32"), Tensor([262194, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([17, 1, 2],"float32"), Tensor([262194, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 524388 (0.000191%)
Max absolute difference among violations: 0.1177478
Max relative difference among violations: 0.57919496
ACTUAL: array([[-0.315628, -1.260971],
[-1.535545,  1.641922],
[-0.177739, -0.730889],...
DESIRED: array([[-0.315628, -1.260971],
[-1.535545,  1.641922],
[-0.177739, -0.730889],...
2025-04-27 00:25:38.796128 test begin: paddle.minimum(Tensor([17, 1, 2],"float32"), Tensor([286464, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([17, 1, 2],"float32"), Tensor([286464, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 572928 (0.000175%)
Max absolute difference among violations: 0.15183169
Max relative difference among violations: 0.19689502
ACTUAL: array([[-0.809621,  0.86317 ],
[ 0.532534, -0.310834],
[-0.201331,  0.      ],...
DESIRED: array([[-0.809621,  0.86317 ],
[ 0.532534, -0.310834],
[-0.201331,  0.      ],...
2025-04-27 00:25:43.565765 test begin: paddle.minimum(Tensor([17, 1, 2],"float32"), Tensor([301302, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([17, 1, 2],"float32"), Tensor([301302, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 602604 (0.000166%)
Max absolute difference among violations: 0.11635566
Max relative difference among violations: 0.36558744
ACTUAL: array([[-0.254821, -0.949986],
[ 0.060595, -1.844976],
[-0.959209, -0.826466],...
DESIRED: array([[-0.254821, -0.949986],
[ 0.060594, -1.844977],
[-0.959209, -0.826466],...
2025-04-27 00:25:45.660275 test begin: paddle.minimum(Tensor([17, 1, 2],"float32"), Tensor([304368, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([17, 1, 2],"float32"), Tensor([304368, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 34 (2.94%)
Max absolute difference among violations: 0.1685915
Max relative difference among violations: 0.0138048
ACTUAL: array([[[-364.91653 , -146.84987 ]],
[[  65.16688 ,  -22.139833]],...
DESIRED: array([[[-364.91492 , -146.85023 ]],
[[  65.16681 ,  -22.14117 ]],...
2025-04-27 00:25:49.635454 test begin: paddle.minimum(Tensor([17, 1, 2],"float32"), Tensor([322272, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([17, 1, 2],"float32"), Tensor([322272, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 644544 (0.000155%)
Max absolute difference among violations: 0.19564712
Max relative difference among violations: 1.2555635
ACTUAL: array([[ 0.48825 , -0.153962],
[-0.266635, -0.309093],
[-0.987098, -0.316934],...
DESIRED: array([[ 0.48825 , -0.153962],
[-0.266635, -0.309093],
[-0.987098, -0.316934],...
2025-04-27 00:25:55.326424 test begin: paddle.minimum(Tensor([17, 1, 2],"float32"), Tensor([349155, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([17, 1, 2],"float32"), Tensor([349155, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 34 (2.94%)
Max absolute difference among violations: 0.14500523
Max relative difference among violations: 0.01197346
ACTUAL: array([[[  78.210754,  -62.71642 ]],
[[ -33.07923 , -143.0534  ]],...
DESIRED: array([[[  78.21087 ,  -62.716553]],
[[ -33.078144, -143.05463 ]],...
2025-04-27 00:28:51.611778 test begin: paddle.minimum(Tensor([18, 1, 2],"float32"), Tensor([211038, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([18, 1, 2],"float32"), Tensor([211038, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 422076 (0.000237%)
Max absolute difference among violations: 0.11306632
Max relative difference among violations: 0.12145521
ACTUAL: array([[-0.436582,  0.      ],
[-1.083783,  0.      ],
[ 0.249568, -0.412982],...
DESIRED: array([[-0.436582,  0.      ],
[-1.083783,  0.      ],
[ 0.249568, -0.412982],...
2025-04-27 00:28:53.939582 test begin: paddle.minimum(Tensor([18, 1, 2],"float32"), Tensor([223827, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([18, 1, 2],"float32"), Tensor([223827, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 447654 (0.000223%)
Max absolute difference among violations: 0.15454221
Max relative difference among violations: 0.25037885
ACTUAL: array([[ 0.751759,  0.469683],
[ 0.587558,  0.      ],
[-1.336682,  0.      ],...
DESIRED: array([[ 0.751759,  0.469683],
[ 0.587558,  0.      ],
[-1.336682,  0.      ],...
2025-04-27 00:28:55.504024 test begin: paddle.minimum(Tensor([18, 1, 2],"float32"), Tensor([229152, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([18, 1, 2],"float32"), Tensor([229152, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 458304 (0.000218%)
Max absolute difference among violations: 0.14643657
Max relative difference among violations: 0.08165079
ACTUAL: array([[-0.303938,  0.76519 ],
[ 0.      , -0.350057],
[-2.137874, -0.830365],...
DESIRED: array([[-0.303938,  0.76519 ],
[ 0.      , -0.350057],
[-2.137874, -0.830365],...
2025-04-27 00:29:03.320247 test begin: paddle.minimum(Tensor([18, 1, 2],"float32"), Tensor([255780, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([18, 1, 2],"float32"), Tensor([255780, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 511560 (0.000195%)
Max absolute difference among violations: 0.04817027
Max relative difference among violations: 0.05973807
ACTUAL: array([[ 0.549449,  0.345496],
[-0.808121, -0.164357],
[ 0.639446, -0.519046],...
DESIRED: array([[ 0.549449,  0.345496],
[-0.808121, -0.164357],
[ 0.639446, -0.519046],...
2025-04-27 00:29:07.994252 test begin: paddle.minimum(Tensor([18, 1, 2],"float32"), Tensor([262194, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([18, 1, 2],"float32"), Tensor([262194, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 524388 (0.000191%)
Max absolute difference among violations: 0.0343976
Max relative difference among violations: 0.07613827
ACTUAL: array([[-0.475147,  0.333863],
[-0.514682,  0.083129],
[-1.442751,  0.751269],...
DESIRED: array([[-0.475147,  0.333862],
[-0.514682,  0.08313 ],
[-1.442751,  0.751269],...
2025-04-27 00:29:18.691162 test begin: paddle.minimum(Tensor([18, 1, 2],"float32"), Tensor([290052, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([18, 1, 2],"float32"), Tensor([290052, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 580104 (0.000172%)
Max absolute difference among violations: 0.0718683
Max relative difference among violations: 0.6804866
ACTUAL: array([[-0.031864, -0.153691],
[ 0.988928,  0.060995],
[-1.332737,  0.452041],...
DESIRED: array([[-0.031864, -0.153691],
[ 0.988928,  0.060995],
[-1.332737,  0.452041],...
2025-04-27 00:29:20.760879 test begin: paddle.minimum(Tensor([18, 1, 2],"float32"), Tensor([294624, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([18, 1, 2],"float32"), Tensor([294624, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 589248 (0.00017%)
Max absolute difference among violations: 0.2319789
Max relative difference among violations: 0.25537762
ACTUAL: array([[ 0.082372,  0.394516],
[-0.374987, -0.875794],
[ 0.32631 , -0.849557],...
DESIRED: array([[ 0.082372,  0.394516],
[-0.374987, -0.875794],
[ 0.32631 , -0.849557],...
2025-04-27 00:29:29.541146 test begin: paddle.minimum(Tensor([18, 1, 2],"float32"), Tensor([325113, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([18, 1, 2],"float32"), Tensor([325113, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 650226 (0.000154%)
Max absolute difference among violations: 0.09738882
Max relative difference among violations: 4.0461974
ACTUAL: array([[ 0.268326,  1.652018],
[ 0.      , -0.049422],
[ 0.735288, -0.9252  ],...
DESIRED: array([[ 0.268326,  1.652018],
[ 0.      , -0.049422],
[ 0.735288, -0.9252  ],...
2025-04-27 00:29:31.938986 test begin: paddle.minimum(Tensor([18, 1, 2],"float32"), Tensor([331251, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([18, 1, 2],"float32"), Tensor([331251, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 662502 (0.000151%)
Max absolute difference among violations: 0.15415525
Max relative difference among violations: 0.09147365
ACTUAL: array([[ 0.331121, -1.139037],
[-1.453585,  0.      ],
[ 1.238413,  0.200322],...
DESIRED: array([[ 0.331121, -1.139037],
[-1.453585,  0.      ],
[ 1.238413,  0.200322],...
2025-04-27 00:29:33.066291 test begin: paddle.minimum(Tensor([18, 1, 2],"float32"), Tensor([333018, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([18, 1, 2],"float32"), Tensor([333018, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2 / 666036 (0.0003%)
Max absolute difference among violations: 0.18998559
Max relative difference among violations: 0.6956434
ACTUAL: array([[ 1.050219,  0.923347],
[-0.42889 ,  1.496396],
[-1.27554 ,  1.077711],...
DESIRED: array([[ 1.050219,  0.923347],
[-0.428889,  1.496396],
[-1.27554 ,  1.077712],...
2025-04-27 00:29:34.333934 test begin: paddle.minimum(Tensor([18, 1, 2],"float32"), Tensor([340176, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([18, 1, 2],"float32"), Tensor([340176, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 680352 (0.000147%)
Max absolute difference among violations: 0.20198822
Max relative difference among violations: 0.13868721
ACTUAL: array([[ 0.730241,  0.102755],
[-0.959806,  0.169009],
[ 0.486301, -0.457407],...
DESIRED: array([[ 0.730241,  0.102755],
[-0.959806,  0.169009],
[ 0.486301, -0.457407],...
2025-04-27 00:29:36.746972 test begin: paddle.minimum(Tensor([18, 1, 2],"float32"), Tensor([359613, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([18, 1, 2],"float32"), Tensor([359613, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 36 (2.78%)
Max absolute difference among violations: 0.19745398
Max relative difference among violations: 0.04250858
ACTUAL: array([[[ 1.978280e+01,  1.761134e+02]],
[[ 8.751782e+01, -2.137403e+02]],...
DESIRED: array([[[ 1.978407e+01,  1.761099e+02]],
[[ 8.751837e+01, -2.137387e+02]],...
2025-04-27 00:29:39.557440 test begin: paddle.minimum(Tensor([18, 1, 2],"float32"), Tensor([369303, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([18, 1, 2],"float32"), Tensor([369303, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 738606 (0.000135%)
Max absolute difference among violations: 0.12076434
Max relative difference among violations: 0.36351648
ACTUAL: array([[ 0.497364, -1.416757],
[ 0.      , -1.147152],
[-0.226523, -2.001974],...
DESIRED: array([[ 0.497364, -1.416757],
[ 0.      , -1.147152],
[-0.226523, -2.001974],...
2025-04-27 00:29:50.221662 test begin: paddle.minimum(Tensor([18, 1, 2],"float32"), Tensor([59250, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([18, 1, 2],"float32"), Tensor([59250, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 118500 (0.000844%)
Max absolute difference among violations: 0.15880537
Max relative difference among violations: 8.223537
ACTUAL: array([[ 0.702007,  0.17835 ],
[ 1.984889, -0.059614],
[ 0.608775, -1.45843 ],...
DESIRED: array([[ 0.702007,  0.17835 ],
[ 1.984889, -0.059614],
[ 0.608775, -1.45843 ],...
2025-04-27 00:29:52.609352 test begin: paddle.minimum(Tensor([18, 1, 2],"float32"), Tensor([74100, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([18, 1, 2],"float32"), Tensor([74100, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 148200 (0.000675%)
Max absolute difference among violations: 0.03018844
Max relative difference among violations: 0.02307872
ACTUAL: array([[ 0.471186,  0.685314],
[-0.588473,  1.03726 ],
[ 0.985561, -0.233938],...
DESIRED: array([[ 0.471186,  0.685314],
[-0.588473,  1.03726 ],
[ 0.985561, -0.233938],...
2025-04-27 00:32:19.110162 test begin: paddle.minimum(Tensor([19, 1, 2],"float32"), Tensor([227124, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([19, 1, 2],"float32"), Tensor([227124, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 38 (2.63%)
Max absolute difference among violations: 0.24859619
Max relative difference among violations: 0.01200922
ACTUAL: array([[[  22.257282, -120.41275 ]],
[[  -0.385725,   63.683098]],...
DESIRED: array([[[  22.257343, -120.41345 ]],
[[  -0.385647,   63.683033]],...
2025-04-27 00:32:22.636636 test begin: paddle.minimum(Tensor([19, 1, 2],"float32"), Tensor([243474, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([19, 1, 2],"float32"), Tensor([243474, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 486948 (0.000205%)
Max absolute difference among violations: 0.08502376
Max relative difference among violations: 0.11648827
ACTUAL: array([[-1.317842,  1.084513],
[ 0.675946, -1.360218],
[-0.075509, -0.780696],...
DESIRED: array([[-1.317842,  1.084513],
[ 0.675946, -1.360218],
[-0.075509, -0.780696],...
2025-04-27 00:32:25.472674 test begin: paddle.minimum(Tensor([19, 1, 2],"float32"), Tensor([250656, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([19, 1, 2],"float32"), Tensor([250656, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 501312 (0.000199%)
Max absolute difference among violations: 0.09799743
Max relative difference among violations: 0.06942316
ACTUAL: array([[ 0.271554,  0.0377  ],
[ 0.826797,  0.      ],
[ 1.65393 ,  1.314521],...
DESIRED: array([[ 0.271554,  0.0377  ],
[ 0.826797,  0.      ],
[ 1.65393 ,  1.314521],...
2025-04-27 00:32:36.411367 test begin: paddle.minimum(Tensor([19, 1, 2],"float32"), Tensor([279279, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([19, 1, 2],"float32"), Tensor([279279, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 38 (2.63%)
Max absolute difference among violations: 0.22268152
Max relative difference among violations: 0.05361232
ACTUAL: array([[[ -17.34832 ,  -44.376404]],
[[-218.08273 , -130.49907 ]],...
DESIRED: array([[[ -17.348288,  -44.37658 ]],
[[-218.0824  , -130.49872 ]],...
2025-04-27 00:32:41.605250 test begin: paddle.minimum(Tensor([19, 1, 2],"float32"), Tensor([301302, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([19, 1, 2],"float32"), Tensor([301302, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 602604 (0.000166%)
Max absolute difference among violations: 0.11865991
Max relative difference among violations: 0.16514741
ACTUAL: array([[-1.480541, -0.837616],
[-0.322972, -2.454591],
[-0.428874,  0.470295],...
DESIRED: array([[-1.480541, -0.837616],
[-0.322972, -2.454591],
[-0.428874,  0.470295],...
2025-04-27 00:32:43.775974 test begin: paddle.minimum(Tensor([19, 1, 2],"float32"), Tensor([304368, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([19, 1, 2],"float32"), Tensor([304368, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 608736 (0.000164%)
Max absolute difference among violations: 0.10422599
Max relative difference among violations: 0.46788302
ACTUAL: array([[-0.170541, -0.167067],
[ 0.169925,  0.814795],
[-1.839541, -0.764965],...
DESIRED: array([[-0.170541, -0.167067],
[ 0.169925,  0.814795],
[-1.839541, -0.764965],...
2025-04-27 00:32:52.755349 test begin: paddle.minimum(Tensor([19, 1, 2],"float32"), Tensor([322272, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([19, 1, 2],"float32"), Tensor([322272, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2 / 644544 (0.00031%)
Max absolute difference among violations: 0.20673311
Max relative difference among violations: 1.
ACTUAL: array([[-0.343452, -0.347947],
[-1.756082,  1.758248],
[ 0.29785 , -1.359684],...
DESIRED: array([[-0.343451, -0.347947],
[-1.756082,  1.758248],
[ 0.29785 , -1.359684],...
2025-04-27 00:32:59.121027 test begin: paddle.minimum(Tensor([19, 1, 2],"float32"), Tensor([367059, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([19, 1, 2],"float32"), Tensor([367059, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 734118 (0.000136%)
Max absolute difference among violations: 0.0143449
Max relative difference among violations: 0.0358179
ACTUAL: array([[ 0.424263, -0.263761],
[ 0.33624 ,  0.44247 ],
[-1.725169,  0.004977],...
DESIRED: array([[ 0.424263, -0.263761],
[ 0.33624 ,  0.44247 ],
[-1.72517 ,  0.004977],...
2025-04-27 00:33:00.484269 test begin: paddle.minimum(Tensor([19, 1, 2],"float32"), Tensor([368280, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([19, 1, 2],"float32"), Tensor([368280, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 736560 (0.000136%)
Max absolute difference among violations: 0.07887032
Max relative difference among violations: 1.4688268
ACTUAL: array([[-0.282198,  0.861515],
[-0.28846 ,  1.066633],
[-0.209212,  0.305647],...
DESIRED: array([[-0.282198,  0.861515],
[-0.28846 ,  1.066633],
[-0.209212,  0.305647],...
2025-04-27 00:33:08.008799 test begin: paddle.minimum(Tensor([19, 1, 2],"float32"), Tensor([56250, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([19, 1, 2],"float32"), Tensor([56250, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 38 (2.63%)
Max absolute difference among violations: 0.17042398
Max relative difference among violations: 0.02246471
ACTUAL: array([[[  25.27037 ,   -0.298598]],
[[ -69.57948 , -204.14864 ]],...
DESIRED: array([[[  25.270302,   -0.2986  ]],
[[ -69.57979 , -204.14865 ]],...
2025-04-27 00:33:37.310768 test begin: paddle.minimum(Tensor([192, 1, 2],"float32"), Tensor([1, 12096, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([192, 1, 2],"float32"), Tensor([1, 12096, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 384 (0.26%)
Max absolute difference among violations: 0.10756063
Max relative difference among violations: 0.02067733
ACTUAL: array([[[ 3.356513e+00,  8.821521e-01]],
[[-2.521012e+00, -8.762389e+00]],...
DESIRED: array([[[ 3.356515e+00,  8.821521e-01]],
[[-2.521007e+00, -8.762386e+00]],...
2025-04-27 00:35:11.461459 test begin: paddle.minimum(Tensor([1984, 1, 2],"float32"), Tensor([1, 3060, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([1984, 1, 2],"float32"), Tensor([1, 3060, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 3968 (0.0252%)
Max absolute difference among violations: 0.1875019
Max relative difference among violations: 0.09150686
ACTUAL: array([[[-24.699108,   9.153049]],
[[  1.367753,   2.138543]],...
DESIRED: array([[[-24.699102,   9.153046]],
[[  1.367753,   2.138543]],...
2025-04-27 00:35:52.848805 test begin: paddle.minimum(Tensor([2, 1, 2],"float32"), Tensor([150402, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([2, 1, 2],"float32"), Tensor([150402, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 300804 (0.000332%)
Max absolute difference among violations: 0.10892341
Max relative difference among violations: 1.
ACTUAL: array([[ 0.373226,  0.      ],
[ 0.190822,  0.      ],
[ 0.088813,  0.      ],...
DESIRED: array([[ 0.373226,  0.      ],
[ 0.190822,  0.      ],
[ 0.088813,  0.      ],...
2025-04-27 00:36:12.308499 test begin: paddle.minimum(Tensor([2, 1, 2],"float32"), Tensor([217413, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([2, 1, 2],"float32"), Tensor([217413, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 4 (25%)
Max absolute difference among violations: 0.03070664
Max relative difference among violations: 0.0167773
ACTUAL: array([[[ -2.553345,  -1.860956]],
[[  5.193442, -51.260887]]], dtype=float32)
DESIRED: array([[[ -2.553185,  -1.83025 ]],
[[  5.193653, -51.260876]]], dtype=float32)
2025-04-27 00:36:14.623573 test begin: paddle.minimum(Tensor([2, 1, 2],"float32"), Tensor([229152, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([2, 1, 2],"float32"), Tensor([229152, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 458304 (0.000218%)
Max absolute difference among violations: 0.17935517
Max relative difference among violations: 2.318059
ACTUAL: array([[ 0.      ,  0.      ],
[ 0.375616,  0.      ],
[ 0.457417,  0.      ],...
DESIRED: array([[ 0.      ,  0.      ],
[ 0.375616,  0.      ],
[ 0.457417,  0.      ],...
2025-04-27 00:36:20.363858 test begin: paddle.minimum(Tensor([2, 1, 2],"float32"), Tensor([250656, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([2, 1, 2],"float32"), Tensor([250656, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 4 (25%)
Max absolute difference among violations: 0.02997768
Max relative difference among violations: 0.04432951
ACTUAL: array([[[103.853546,   0.706224]],
[[ 15.683536, -20.588892]]], dtype=float32)
DESIRED: array([[[103.85394 ,   0.676247]],
[[ 15.68343 , -20.588802]]], dtype=float32)
2025-04-27 00:36:41.240915 test begin: paddle.minimum(Tensor([2, 1, 2],"float32"), Tensor([369303, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([2, 1, 2],"float32"), Tensor([369303, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 738606 (0.000135%)
Max absolute difference among violations: 0.14955291
Max relative difference among violations: 0.35993326
ACTUAL: array([[ 0.47259 ,  0.      ],
[ 0.008224, -0.326118],
[ 0.091133, -0.75357 ],...
DESIRED: array([[ 0.47259 ,  0.      ],
[ 0.008224, -0.326118],
[ 0.091133, -0.75357 ],...
2025-04-27 00:36:43.117408 test begin: paddle.minimum(Tensor([2, 1, 2],"float32"), Tensor([388740, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([2, 1, 2],"float32"), Tensor([388740, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 777480 (0.000129%)
Max absolute difference among violations: 0.06094633
Max relative difference among violations: 1.
ACTUAL: array([[ 0.      , -0.865221],
[-0.216551,  0.      ],
[ 0.      ,  0.      ],...
DESIRED: array([[ 0.      , -0.865221],
[-0.216551,  0.      ],
[ 0.      ,  0.      ],...
2025-04-27 00:37:09.231047 test begin: paddle.minimum(Tensor([2, 1, 2],"float32"), Tensor([71100, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([2, 1, 2],"float32"), Tensor([71100, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 142200 (0.000703%)
Max absolute difference among violations: 0.10913067
Max relative difference among violations: 0.6200708
ACTUAL: array([[-0.190365,  0.740337],
[ 0.      , -0.155258],
[-0.307861,  0.521436],...
DESIRED: array([[-0.190365,  0.740337],
[ 0.      , -0.155258],
[-0.307861,  0.521436],...
2025-04-27 00:37:42.178554 test begin: paddle.minimum(Tensor([2, 105, 1, 2],"float32"), Tensor([2, 1, 6804, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([2, 105, 1, 2],"float32"), Tensor([2, 1, 6804, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 27216 (0.00367%)
Max absolute difference among violations: 0.03302515
Max relative difference among violations: 0.0177716
ACTUAL: array([[[[ 2.552284,  0.601489],
[ 1.250322,  1.113512],
[-0.407867,  0.28848 ],...
DESIRED: array([[[[ 2.552284,  0.601489],
[ 1.250323,  1.113513],
[-0.407867,  0.28848 ],...
2025-04-27 00:37:52.671025 test begin: paddle.minimum(Tensor([2, 111, 1, 2],"float32"), Tensor([2, 1, 5376, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([2, 111, 1, 2],"float32"), Tensor([2, 1, 5376, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 444 (0.225%)
Max absolute difference among violations: 0.23441076
Max relative difference among violations: 0.04560176
ACTUAL: array([[[[ 2.585051e+01, -3.411943e+01]],
[[ 9.675989e-01, -2.073096e+01]],...
DESIRED: array([[[[ 2.585056e+01, -3.411940e+01]],
[[ 9.675996e-01, -2.073094e+01]],...
2025-04-27 00:37:55.488587 test begin: paddle.minimum(Tensor([2, 114, 1, 2],"float32"), Tensor([2, 1, 2100, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([2, 114, 1, 2],"float32"), Tensor([2, 1, 2100, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 8400 (0.0119%)
Max absolute difference among violations: 0.05343133
Max relative difference among violations: 0.06625381
ACTUAL: array([[[[-1.445074, -1.401872],
[-0.39331 ,  4.422403],
[-0.102311,  1.863596],...
DESIRED: array([[[[-1.445075, -1.401872],
[-0.39331 ,  4.422403],
[-0.102311,  1.863597],...
2025-04-27 00:38:02.794349 test begin: paddle.minimum(Tensor([2, 119, 1, 2],"float32"), Tensor([2, 1, 10164, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([2, 119, 1, 2],"float32"), Tensor([2, 1, 10164, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 40656 (0.00246%)
Max absolute difference among violations: 0.13112384
Max relative difference among violations: 25.667301
ACTUAL: array([[[[ 1.840368,  2.356949],
[ 1.621655, -4.551645],
[ 1.709937,  0.848992],...
DESIRED: array([[[[ 1.840368,  2.356949],
[ 1.621656, -4.551645],
[ 1.709937,  0.848992],...
2025-04-27 00:38:10.634931 test begin: paddle.minimum(Tensor([2, 123, 1, 2],"float32"), Tensor([2, 1, 10164, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([2, 123, 1, 2],"float32"), Tensor([2, 1, 10164, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 492 (0.203%)
Max absolute difference among violations: 0.06760609
Max relative difference among violations: 0.04036691
ACTUAL: array([[[[ 1.277080e+00,  1.484605e+01]],
[[-6.251989e+01,  5.336801e+00]],...
DESIRED: array([[[[ 1.277074e+00,  1.484607e+01]],
[[-6.251989e+01,  5.336816e+00]],...
2025-04-27 00:38:29.005405 test begin: paddle.minimum(Tensor([2, 139, 1, 2],"float32"), Tensor([2, 1, 2541, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([2, 139, 1, 2],"float32"), Tensor([2, 1, 2541, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 556 (0.18%)
Max absolute difference among violations: 0.10432982
Max relative difference among violations: 0.0819832
ACTUAL: array([[[[ -0.037448,  -4.41964 ]],
[[ -0.509835,  -8.310223]],...
DESIRED: array([[[[ -0.037447,  -4.419644]],
[[ -0.509836,  -8.310225]],...
2025-04-27 00:38:40.812726 test begin: paddle.minimum(Tensor([2, 15, 1, 2],"float32"), Tensor([2, 1, 2541, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([2, 15, 1, 2],"float32"), Tensor([2, 1, 2541, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 10164 (0.00984%)
Max absolute difference among violations: 0.05236211
Max relative difference among violations: 0.11472601
ACTUAL: array([[[[ 0.174529,  0.500084],
[-0.216982, -0.546706],
[ 0.655608, -0.825037],...
DESIRED: array([[[[ 0.174529,  0.500084],
[-0.216982, -0.546706],
[ 0.655608, -0.825037],...
2025-04-27 00:38:55.831853 test begin: paddle.minimum(Tensor([2, 160, 1, 2],"float32"), Tensor([2, 1, 6804, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([2, 160, 1, 2],"float32"), Tensor([2, 1, 6804, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 27216 (0.00367%)
Max absolute difference among violations: 0.21266562
Max relative difference among violations: 0.5337052
ACTUAL: array([[[[-0.534056,  0.290225],
[-0.677901, -0.440731],
[ 2.430619,  2.245182],...
DESIRED: array([[[[-0.534056,  0.290225],
[-0.677902, -0.440731],
[ 2.430619,  2.245182],...
2025-04-27 00:39:05.784838 test begin: paddle.minimum(Tensor([2, 177, 1, 2],"float32"), Tensor([2, 1, 4725, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([2, 177, 1, 2],"float32"), Tensor([2, 1, 4725, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 708 (0.141%)
Max absolute difference among violations: 0.12133884
Max relative difference among violations: 0.01335485
ACTUAL: array([[[[-6.953231e+00,  1.678172e-02]],
[[-1.283873e+00, -1.096702e+01]],...
DESIRED: array([[[[-6.953213e+00,  1.676297e-02]],
[[-1.283874e+00, -1.096701e+01]],...
2025-04-27 00:39:06.240614 test begin: paddle.minimum(Tensor([2, 179, 1, 2],"float32"), Tensor([2, 1, 6069, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([2, 179, 1, 2],"float32"), Tensor([2, 1, 6069, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 716 (0.14%)
Max absolute difference among violations: 0.10093665
Max relative difference among violations: 0.07450303
ACTUAL: array([[[[-1.575058e+01, -1.335967e+01]],
[[ 6.536544e+00,  7.367162e+00]],...
DESIRED: array([[[[-1.575056e+01, -1.335966e+01]],
[[ 6.536528e+00,  7.367160e+00]],...
2025-04-27 00:39:08.901180 test begin: paddle.minimum(Tensor([2, 18, 1, 2],"float32"), Tensor([2, 1, 6069, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([2, 18, 1, 2],"float32"), Tensor([2, 1, 6069, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 72 (1.39%)
Max absolute difference among violations: 0.20843887
Max relative difference among violations: 0.0123074
ACTUAL: array([[[[-13.514853,  18.819626]],
[[-31.21673 , -12.469116]],...
DESIRED: array([[[[-13.514854,  18.819622]],
[[-31.216715, -12.469128]],...
2025-04-27 00:39:33.105300 test begin: paddle.minimum(Tensor([2, 210, 1, 2],"float32"), Tensor([2, 1, 9261, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([2, 210, 1, 2],"float32"), Tensor([2, 1, 9261, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 840 (0.119%)
Max absolute difference among violations: 0.16159391
Max relative difference among violations: 0.04997924
ACTUAL: array([[[[-1.758271e+01,  1.570550e+00]],
[[ 6.448200e+00,  4.780706e+00]],...
DESIRED: array([[[[-1.758271e+01,  1.570556e+00]],
[[ 6.448202e+00,  4.780712e+00]],...
2025-04-27 00:39:44.316054 test begin: paddle.minimum(Tensor([2, 23, 1, 2],"float32"), Tensor([2, 1, 4116, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([2, 23, 1, 2],"float32"), Tensor([2, 1, 4116, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 92 (1.09%)
Max absolute difference among violations: 0.2477727
Max relative difference among violations: 0.13181464
ACTUAL: array([[[[-14.010244,  -3.93498 ]],
[[-12.235734,   2.044108]],...
DESIRED: array([[[[-14.010248,  -3.93498 ]],
[[-12.235734,   2.044115]],...
2025-04-27 00:39:46.363780 test begin: paddle.minimum(Tensor([2, 239, 1, 2],"float32"), Tensor([2, 1, 6069, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([2, 239, 1, 2],"float32"), Tensor([2, 1, 6069, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 956 (0.105%)
Max absolute difference among violations: 0.14592028
Max relative difference among violations: 0.03973725
ACTUAL: array([[[[-8.919483e+00, -1.872856e+01]],
[[ 3.092899e+00, -3.693525e+01]],...
DESIRED: array([[[[-8.919484e+00, -1.872854e+01]],
[[ 3.092899e+00, -3.693523e+01]],...
2025-04-27 00:39:50.812647 test begin: paddle.minimum(Tensor([2, 249, 1, 2],"float32"), Tensor([2, 1, 12096, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([2, 249, 1, 2],"float32"), Tensor([2, 1, 12096, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 996 (0.1%)
Max absolute difference among violations: 0.15052283
Max relative difference among violations: 0.3166763
ACTUAL: array([[[[ 1.231844e+01, -5.250010e+01]],
[[ 4.511278e+00,  5.656312e+00]],...
DESIRED: array([[[[ 1.231849e+01, -5.250016e+01]],
[[ 4.511279e+00,  5.656311e+00]],...
2025-04-27 00:39:56.240852 test begin: paddle.minimum(Tensor([2, 25, 1, 2],"float32"), Tensor([2, 1, 8500, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([2, 25, 1, 2],"float32"), Tensor([2, 1, 8500, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 100 (1%)
Max absolute difference among violations: 0.1796155
Max relative difference among violations: 0.03447942
ACTUAL: array([[[[-1.341313e+01,  7.509170e+00]],
[[ 4.467614e+01,  1.947876e+01]],...
DESIRED: array([[[[-1.341313e+01,  7.509177e+00]],
[[ 4.467616e+01,  1.947873e+01]],...
2025-04-27 00:40:28.309969 test begin: paddle.minimum(Tensor([2, 31, 1, 2],"float32"), Tensor([2, 1, 12096, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([2, 31, 1, 2],"float32"), Tensor([2, 1, 12096, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 124 (0.806%)
Max absolute difference among violations: 0.1984806
Max relative difference among violations: 0.01829465
ACTUAL: array([[[[-12.661139,  17.531363]],
[[ 71.07982 ,  18.861336]],...
DESIRED: array([[[[-12.661127,  17.53138 ]],
[[ 71.07973 ,  18.861336]],...
2025-04-27 00:40:46.946839 test begin: paddle.minimum(Tensor([2, 35, 1, 2],"float32"), Tensor([2, 1, 7581, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([2, 35, 1, 2],"float32"), Tensor([2, 1, 7581, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 140 (0.714%)
Max absolute difference among violations: 0.24738598
Max relative difference among violations: 0.02274585
ACTUAL: array([[[[ 25.036324, -11.870634]],
[[ 17.844706,  40.652485]],...
DESIRED: array([[[[ 25.036345, -11.870637]],
[[ 17.844692,  40.652348]],...
2025-04-27 00:40:52.289707 test begin: paddle.minimum(Tensor([2, 37, 1, 2],"float32"), Tensor([2, 1, 10164, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([2, 37, 1, 2],"float32"), Tensor([2, 1, 10164, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 148 (0.676%)
Max absolute difference among violations: 0.21892357
Max relative difference among violations: 0.02497995
ACTUAL: array([[[[  2.596269,  -3.448208]],
[[-23.435093,  -8.890977]],...
DESIRED: array([[[[  2.596271,  -3.448161]],
[[-23.435009,  -8.890974]],...
2025-04-27 00:40:59.206591 test begin: paddle.minimum(Tensor([2, 3888, 1, 2],"float32"), Tensor([2, 1, 50, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([2, 3888, 1, 2],"float32"), Tensor([2, 1, 50, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 15552 (0.00643%)
Max absolute difference among violations: 0.17392683
Max relative difference among violations: 0.04339454
ACTUAL: array([[[[-0.008042,  0.216142]],
[[ 1.597912, -1.055927]],...
DESIRED: array([[[[-0.008042,  0.216142]],
[[ 1.597912, -1.055927]],...
2025-04-27 00:41:26.469141 test begin: paddle.minimum(Tensor([2, 45, 1, 2],"float32"), Tensor([2, 1, 6804, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([2, 45, 1, 2],"float32"), Tensor([2, 1, 6804, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 27216 (0.00367%)
Max absolute difference among violations: 0.01336223
Max relative difference among violations: 1.
ACTUAL: array([[[[ 0.091634,  2.112373],
[ 0.362936, -1.411981],
[ 0.87999 ,  1.000986],...
DESIRED: array([[[[ 0.091634,  2.112373],
[ 0.362936, -1.411981],
[ 0.87999 ,  1.000986],...
2025-04-27 00:41:29.513993 test begin: paddle.minimum(Tensor([2, 46, 1, 2],"float32"), Tensor([2, 1, 8400, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([2, 46, 1, 2],"float32"), Tensor([2, 1, 8400, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 184 (0.543%)
Max absolute difference among violations: 0.05643713
Max relative difference among violations: 0.0357522
ACTUAL: array([[[[-11.01739 ,  -1.927388]],
[[ -0.338866, -20.305075]],...
DESIRED: array([[[[-11.017372,  -1.92739 ]],
[[ -0.338865, -20.305058]],...
2025-04-27 00:41:48.979611 test begin: paddle.minimum(Tensor([2, 51, 1, 2],"float32"), Tensor([2, 1, 3549, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([2, 51, 1, 2],"float32"), Tensor([2, 1, 3549, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 204 (0.49%)
Max absolute difference among violations: 0.10122013
Max relative difference among violations: 0.01435251
ACTUAL: array([[[[ 4.372485e-01,  5.578501e-01]],
[[ 9.055392e-01,  5.016507e+00]],...
DESIRED: array([[[[ 4.372511e-01,  5.578479e-01]],
[[ 9.055405e-01,  5.016509e+00]],...
2025-04-27 00:42:08.534354 test begin: paddle.minimum(Tensor([2, 58, 1, 2],"float32"), Tensor([2, 1, 2100, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([2, 58, 1, 2],"float32"), Tensor([2, 1, 2100, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 232 (0.431%)
Max absolute difference among violations: 0.22306108
Max relative difference among violations: 0.04386478
ACTUAL: array([[[[ 1.488793e+01, -1.278322e-01]],
[[-9.827005e-01, -9.361302e-01]],...
DESIRED: array([[[[ 1.488793e+01, -1.278310e-01]],
[[-9.827001e-01, -9.361300e-01]],...
2025-04-27 00:42:18.364730 test begin: paddle.minimum(Tensor([2, 60, 1, 2],"float32"), Tensor([2, 1, 4116, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([2, 60, 1, 2],"float32"), Tensor([2, 1, 4116, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 16464 (0.00607%)
Max absolute difference among violations: 0.10236049
Max relative difference among violations: 0.06279517
ACTUAL: array([[[[-2.405346,  0.378858],
[ 0.278191, -0.240117],
[ 3.649371, -0.46394 ],...
DESIRED: array([[[[-2.405346,  0.378858],
[ 0.278191, -0.240116],
[ 3.649371, -0.463939],...
2025-04-27 00:42:26.512970 test begin: paddle.minimum(Tensor([2, 63, 1, 2],"float32"), Tensor([2, 1, 4725, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([2, 63, 1, 2],"float32"), Tensor([2, 1, 4725, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 252 (0.397%)
Max absolute difference among violations: 0.17585754
Max relative difference among violations: 0.0209181
ACTUAL: array([[[[-1.388840e+00,  1.008115e+01]],
[[-3.833759e+00, -2.597985e+00]],...
DESIRED: array([[[[-1.388841e+00,  1.008115e+01]],
[[-3.833759e+00, -2.597984e+00]],...
2025-04-27 00:42:33.591620 test begin: paddle.minimum(Tensor([2, 66, 1, 2],"float32"), Tensor([2, 1, 10164, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([2, 66, 1, 2],"float32"), Tensor([2, 1, 10164, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 40656 (0.00246%)
Max absolute difference among violations: 0.11865306
Max relative difference among violations: 0.06590331
ACTUAL: array([[[[ 0.638523, -0.248816],
[-4.690943, -1.732388],
[-0.416848,  1.288767],...
DESIRED: array([[[[ 0.638523, -0.248816],
[-4.690945, -1.732388],
[-0.416848,  1.288766],...
2025-04-27 00:42:34.576938 test begin: paddle.minimum(Tensor([2, 66, 1, 2],"float32"), Tensor([2, 1, 2541, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([2, 66, 1, 2],"float32"), Tensor([2, 1, 2541, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 10164 (0.00984%)
Max absolute difference among violations: 0.06710672
Max relative difference among violations: 0.02263604
ACTUAL: array([[[[-3.010889,  5.60068 ],
[-0.107606,  1.103229],
[ 1.377495,  2.151789],...
DESIRED: array([[[[-3.01089 ,  5.60068 ],
[-0.107607,  1.103229],
[ 1.377495,  2.151789],...
2025-04-27 00:42:36.197265 test begin: paddle.minimum(Tensor([2, 66, 1, 2],"float32"), Tensor([2, 1, 8400, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([2, 66, 1, 2],"float32"), Tensor([2, 1, 8400, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 264 (0.379%)
Max absolute difference among violations: 0.24575233
Max relative difference among violations: 0.02098737
ACTUAL: array([[[[-1.929833e+00,  2.102714e+01]],
[[ 4.986528e+00,  5.689425e+00]],...
DESIRED: array([[[[-1.929838e+00,  2.102716e+01]],
[[ 4.986529e+00,  5.689435e+00]],...
2025-04-27 00:42:46.239887 test begin: paddle.minimum(Tensor([2, 70, 1, 2],"float32"), Tensor([2, 1, 12096, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([2, 70, 1, 2],"float32"), Tensor([2, 1, 12096, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 280 (0.357%)
Max absolute difference among violations: 0.04571271
Max relative difference among violations: 0.01872115
ACTUAL: array([[[[-11.404572,  30.458128]],
[[ 29.304792,  42.30552 ]],...
DESIRED: array([[[[-11.404579,  30.458145]],
[[ 29.304821,  42.30555 ]],...
2025-04-27 00:43:03.383531 test begin: paddle.minimum(Tensor([2, 78, 1, 2],"float32"), Tensor([2, 1, 11109, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([2, 78, 1, 2],"float32"), Tensor([2, 1, 11109, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 44436 (0.00225%)
Max absolute difference among violations: 0.06553698
Max relative difference among violations: 0.05732955
ACTUAL: array([[[[ 0.0792  ,  3.984278],
[ 0.833293,  0.687873],
[ 0.      , -4.511625],...
DESIRED: array([[[[ 0.0792  ,  3.984278],
[ 0.833293,  0.687873],
[ 0.      , -4.511625],...
2025-04-27 00:43:06.527652 test begin: paddle.minimum(Tensor([2, 79, 1, 2],"float32"), Tensor([2, 1, 3549, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([2, 79, 1, 2],"float32"), Tensor([2, 1, 3549, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 316 (0.316%)
Max absolute difference among violations: 0.12146211
Max relative difference among violations: 0.24545477
ACTUAL: array([[[[  1.94863 ,  11.499931]],
[[-23.659767,   4.588399]],...
DESIRED: array([[[[  1.948633,  11.499943]],
[[-23.659752,   4.588398]],...
2025-04-27 00:43:46.984198 test begin: paddle.minimum(Tensor([2, 99, 1, 2],"float32"), Tensor([2, 1, 2100, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([2, 99, 1, 2],"float32"), Tensor([2, 1, 2100, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 8400 (0.0119%)
Max absolute difference among violations: 0.11268234
Max relative difference among violations: 0.05524436
ACTUAL: array([[[[-1.203787, -0.97458 ],
[ 0.772884,  0.      ],
[-0.107345, -5.81731 ],...
DESIRED: array([[[[-1.203788, -0.97458 ],
[ 0.772884,  0.      ],
[-0.107345, -5.81731 ],...
2025-04-27 00:43:55.934925 test begin: paddle.minimum(Tensor([20, 1, 2],"float32"), Tensor([242991, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([20, 1, 2],"float32"), Tensor([242991, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 485982 (0.000206%)
Max absolute difference among violations: 0.05017966
Max relative difference among violations: 0.0595809
ACTUAL: array([[ 1.439756, -0.051252],
[-0.095152,  0.135273],
[-0.099051,  0.735162],...
DESIRED: array([[ 1.439756, -0.051252],
[-0.095152,  0.135273],
[-0.099052,  0.735162],...
2025-04-27 00:44:00.834192 test begin: paddle.minimum(Tensor([20, 1, 2],"float32"), Tensor([269586, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([20, 1, 2],"float32"), Tensor([269586, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 539172 (0.000185%)
Max absolute difference among violations: 0.18676692
Max relative difference among violations: 0.18807372
ACTUAL: array([[-1.666214, -0.802914],
[ 0.112133,  0.41109 ],
[-1.07053 ,  0.      ],...
DESIRED: array([[-1.666214, -0.802914],
[ 0.112133,  0.41109 ],
[-1.07053 ,  0.      ],...
2025-04-27 00:44:01.866024 test begin: paddle.minimum(Tensor([20, 1, 2],"float32"), Tensor([277539, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([20, 1, 2],"float32"), Tensor([277539, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 555078 (0.00018%)
Max absolute difference among violations: 0.12637404
Max relative difference among violations: 0.448913
ACTUAL: array([[-0.32607 , -0.214025],
[ 0.      ,  0.655116],
[ 0.466429, -0.930478],...
DESIRED: array([[-0.32607 , -0.214025],
[ 0.      ,  0.655116],
[ 0.466429, -0.930478],...
2025-04-27 00:44:16.227787 test begin: paddle.minimum(Tensor([20, 1, 2],"float32"), Tensor([331251, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([20, 1, 2],"float32"), Tensor([331251, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2 / 662502 (0.000302%)
Max absolute difference among violations: 0.20587814
Max relative difference among violations: 8.180848
ACTUAL: array([[ 0.      , -0.403617],
[ 0.029432,  0.215346],
[ 0.422552, -0.948467],...
DESIRED: array([[ 0.      , -0.403617],
[ 0.029432,  0.215346],
[ 0.422552, -0.948466],...
2025-04-27 00:44:22.283392 test begin: paddle.minimum(Tensor([20, 1, 2],"float32"), Tensor([349866, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([20, 1, 2],"float32"), Tensor([349866, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 699732 (0.000143%)
Max absolute difference among violations: 0.23917118
Max relative difference among violations: 0.39879608
ACTUAL: array([[ 1.28476 ,  0.250375],
[ 1.152059, -0.598926],
[-0.538833, -0.383823],...
DESIRED: array([[ 1.28476 ,  0.250376],
[ 1.152059, -0.598926],
[-0.538833, -0.383823],...
2025-04-27 00:45:41.521129 test begin: paddle.minimum(Tensor([2048, 1, 2],"float32"), Tensor([1, 1360, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([2048, 1, 2],"float32"), Tensor([1, 1360, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 4096 (0.0244%)
Max absolute difference among violations: 0.21402347
Max relative difference among violations: 0.14021851
ACTUAL: array([[[  1.045293,  -3.950006]],
[[ -3.405939, -18.157053]],...
DESIRED: array([[[  1.045293,  -3.950006]],
[[ -3.405934, -18.157055]],...
2025-04-27 00:47:04.817400 test begin: paddle.minimum(Tensor([21, 1, 2],"float32"), Tensor([235320, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([21, 1, 2],"float32"), Tensor([235320, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 470640 (0.000212%)
Max absolute difference among violations: 0.22071874
Max relative difference among violations: 0.38056016
ACTUAL: array([[ 0.316805,  0.083358],
[-0.235013,  0.796736],
[ 0.459959,  0.411221],...
DESIRED: array([[ 0.316805,  0.083358],
[-0.235013,  0.796736],
[ 0.459959,  0.411221],...
2025-04-27 00:47:06.684116 test begin: paddle.minimum(Tensor([21, 1, 2],"float32"), Tensor([244800, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([21, 1, 2],"float32"), Tensor([244800, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 489600 (0.000204%)
Max absolute difference among violations: 0.06807935
Max relative difference among violations: 0.04008559
ACTUAL: array([[ 0.      ,  0.394517],
[-0.190477,  0.983723],
[-0.923131, -0.838   ],...
DESIRED: array([[ 0.      ,  0.394517],
[-0.190477,  0.983723],
[-0.923131, -0.838   ],...
2025-04-27 00:47:09.829522 test begin: paddle.minimum(Tensor([21, 1, 2],"float32"), Tensor([262428, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([21, 1, 2],"float32"), Tensor([262428, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 524856 (0.000191%)
Max absolute difference among violations: 0.19475871
Max relative difference among violations: 1.0402864
ACTUAL: array([[ 1.391193,  0.627143],
[ 0.027846,  0.047383],
[ 0.682042, -0.598807],...
DESIRED: array([[ 1.391193,  0.627143],
[ 0.027846,  0.047383],
[ 0.682042, -0.598807],...
2025-04-27 00:47:12.149224 test begin: paddle.minimum(Tensor([21, 1, 2],"float32"), Tensor([269586, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([21, 1, 2],"float32"), Tensor([269586, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 539172 (0.000185%)
Max absolute difference among violations: 0.20046616
Max relative difference among violations: 0.17607488
ACTUAL: array([[-0.271649,  0.162921],
[-1.099722, -0.494291],
[-0.555269, -0.240214],...
DESIRED: array([[-0.271649,  0.162921],
[-1.099722, -0.494291],
[-0.555269, -0.240214],...
2025-04-27 00:47:14.267763 test begin: paddle.minimum(Tensor([21, 1, 2],"float32"), Tensor([295443, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([21, 1, 2],"float32"), Tensor([295443, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 590886 (0.000169%)
Max absolute difference among violations: 0.10167778
Max relative difference among violations: 0.23365463
ACTUAL: array([[-0.880546,  0.585607],
[ 0.128919, -0.008398],
[ 0.218729, -0.933839],...
DESIRED: array([[-0.880546,  0.585607],
[ 0.128919, -0.008398],
[ 0.218729, -0.933839],...
2025-04-27 00:47:20.274123 test begin: paddle.minimum(Tensor([21, 1, 2],"float32"), Tensor([321759, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([21, 1, 2],"float32"), Tensor([321759, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 42 (2.38%)
Max absolute difference among violations: 0.16924906
Max relative difference among violations: 0.04003175
ACTUAL: array([[[-129.38571 ,    1.724409]],
[[ -24.876701,   27.76681 ]],...
DESIRED: array([[[-129.38426 ,    1.722954]],
[[ -24.876709,   27.767712]],...
2025-04-27 00:47:40.192902 test begin: paddle.minimum(Tensor([2100, 1, 2],"float32"), Tensor([1, 12096, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([2100, 1, 2],"float32"), Tensor([1, 12096, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 4200 (0.0238%)
Max absolute difference among violations: 0.03017294
Max relative difference among violations: 0.02459683
ACTUAL: array([[[ 56.259716, -23.44713 ]],
[[ -6.003964,  20.277576]],...
DESIRED: array([[[ 56.259727, -23.447075]],
[[ -6.003957,  20.277565]],...
2025-04-27 00:48:02.346749 test begin: paddle.minimum(Tensor([2112, 1, 2],"float32"), Tensor([1, 3060, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([2112, 1, 2],"float32"), Tensor([1, 3060, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 4224 (0.0237%)
Max absolute difference among violations: 0.05038548
Max relative difference among violations: 0.01430983
ACTUAL: array([[[ -1.220956, -14.976734]],
[[  2.663523, -28.870342]],...
DESIRED: array([[[ -1.220968, -14.976745]],
[[  2.663524, -28.870335]],...
2025-04-27 00:48:51.793104 test begin: paddle.minimum(Tensor([2148, 1, 2],"float32"), Tensor([6, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([2148, 1, 2],"float32"), Tensor([6, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 4296 (0.0233%)
Max absolute difference among violations: 0.17027013
Max relative difference among violations: 1.2242535
ACTUAL: array([[[ 0.103368, -0.309188]],
[[ 0.454923, -0.403443]],...
DESIRED: array([[[ 0.103368, -0.309188]],
[[ 0.454923, -0.403443]],...
2025-04-27 00:50:05.413857 test begin: paddle.minimum(Tensor([22, 1, 2],"float32"), Tensor([222012, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([22, 1, 2],"float32"), Tensor([222012, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 444024 (0.000225%)
Max absolute difference among violations: 0.07771537
Max relative difference among violations: 0.15671226
ACTUAL: array([[ 0.328142, -0.377903],
[ 0.463536,  0.378959],
[ 2.056835, -0.762623],...
DESIRED: array([[ 0.328142, -0.377903],
[ 0.463536,  0.378959],
[ 2.056835, -0.762623],...
2025-04-27 00:50:07.325969 test begin: paddle.minimum(Tensor([22, 1, 2],"float32"), Tensor([230202, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([22, 1, 2],"float32"), Tensor([230202, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 460404 (0.000217%)
Max absolute difference among violations: 0.18278432
Max relative difference among violations: 0.16547643
ACTUAL: array([[ 0.      , -2.488941],
[ 0.28425 ,  0.787749],
[ 0.      ,  1.175715],...
DESIRED: array([[ 0.      , -2.488942],
[ 0.28425 ,  0.787749],
[ 0.      ,  1.175715],...
2025-04-27 00:50:09.916743 test begin: paddle.minimum(Tensor([22, 1, 2],"float32"), Tensor([243474, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([22, 1, 2],"float32"), Tensor([243474, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 486948 (0.000205%)
Max absolute difference among violations: 0.12692654
Max relative difference among violations: 0.17970546
ACTUAL: array([[ 0.495124, -0.630109],
[ 1.566044,  1.269121],
[ 0.0144  ,  0.501221],...
DESIRED: array([[ 0.495124, -0.630109],
[ 1.566044,  1.269121],
[ 0.0144  ,  0.501221],...
2025-04-27 00:50:32.932080 test begin: paddle.minimum(Tensor([22, 1, 2],"float32"), Tensor([356541, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([22, 1, 2],"float32"), Tensor([356541, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 44 (2.27%)
Max absolute difference among violations: 0.21438742
Max relative difference among violations: 0.02916456
ACTUAL: array([[[-120.092155,   -7.565343]],
[[   2.900267, -185.39064 ]],...
DESIRED: array([[[-120.09156 ,   -7.350956]],
[[   2.899483, -185.39078 ]],...
2025-04-27 00:50:40.279646 test begin: paddle.minimum(Tensor([22, 1, 2],"float32"), Tensor([57000, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([22, 1, 2],"float32"), Tensor([57000, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 114000 (0.000877%)
Max absolute difference among violations: 0.20568794
Max relative difference among violations: 0.9937723
ACTUAL: array([[ 2.153023,  1.812592],
[-0.218546,  0.479541],
[ 0.186445,  0.055914],...
DESIRED: array([[ 2.153023,  1.812592],
[-0.218546,  0.479541],
[ 0.186445,  0.055914],...
2025-04-27 00:51:39.672250 test begin: paddle.minimum(Tensor([2240, 1, 2],"float32"), Tensor([1, 2577, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([2240, 1, 2],"float32"), Tensor([1, 2577, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 4480 (0.0223%)
Max absolute difference among violations: 0.06575775
Max relative difference among violations: 0.02221809
ACTUAL: array([[[-14.041644,  -0.876894]],
[[ -7.681443,  -0.25487 ]],...
DESIRED: array([[[-14.041648,  -0.876898]],
[[ -7.68144 ,  -0.254871]],...
2025-04-27 00:51:40.955002 test begin: paddle.minimum(Tensor([2240, 1, 2],"float32"), Tensor([1, 3060, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([2240, 1, 2],"float32"), Tensor([1, 3060, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 4480 (0.0223%)
Max absolute difference among violations: 0.09442234
Max relative difference among violations: 0.01481809
ACTUAL: array([[[ -1.189541,  16.29132 ]],
[[ 12.52112 ,  -4.655498]],...
DESIRED: array([[[ -1.18954 ,  16.291359]],
[[ 12.521115,  -4.655502]],...
2025-04-27 00:52:53.091944 test begin: paddle.minimum(Tensor([23, 1, 2],"float32"), Tensor([243474, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([23, 1, 2],"float32"), Tensor([243474, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2 / 486948 (0.000411%)
Max absolute difference among violations: 0.0330719
Max relative difference among violations: 0.3598212
ACTUAL: array([[ 0.52728 ,  1.318761],
[ 0.600825,  0.085245],
[-0.236101,  0.      ],...
DESIRED: array([[ 0.52728 ,  1.318761],
[ 0.600825,  0.085245],
[-0.236101,  0.      ],...
2025-04-27 00:52:54.234498 test begin: paddle.minimum(Tensor([23, 1, 2],"float32"), Tensor([249405, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([23, 1, 2],"float32"), Tensor([249405, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 498810 (0.0002%)
Max absolute difference among violations: 0.04116845
Max relative difference among violations: 0.02472493
ACTUAL: array([[ 0.103894,  0.521777],
[-1.009622, -1.408901],
[ 0.071993,  0.518192],...
DESIRED: array([[ 0.103894,  0.521777],
[-1.009622, -1.408901],
[ 0.071994,  0.518192],...
2025-04-27 00:52:55.324393 test begin: paddle.minimum(Tensor([23, 1, 2],"float32"), Tensor([252195, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([23, 1, 2],"float32"), Tensor([252195, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 504390 (0.000198%)
Max absolute difference among violations: 0.1478909
Max relative difference among violations: 0.6868462
ACTUAL: array([[ 0.249451, -0.503042],
[-1.641935,  1.096825],
[ 0.      ,  1.016798],...
DESIRED: array([[ 0.249451, -0.503042],
[-1.641935,  1.096825],
[ 0.      ,  1.016798],...
2025-04-27 00:52:56.330679 test begin: paddle.minimum(Tensor([23, 1, 2],"float32"), Tensor([253728, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([23, 1, 2],"float32"), Tensor([253728, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 46 (2.17%)
Max absolute difference among violations: 0.12069178
Max relative difference among violations: 0.01850956
ACTUAL: array([[[ 112.419975,  128.04196 ]],
[[ -28.012707,  -27.510124]],...
DESIRED: array([[[ 112.42042 ,  128.04037 ]],
[[ -28.011982,  -27.510159]],...
2025-04-27 00:53:02.364941 test begin: paddle.minimum(Tensor([23, 1, 2],"float32"), Tensor([294624, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([23, 1, 2],"float32"), Tensor([294624, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 46 (2.17%)
Max absolute difference among violations: 0.24112082
Max relative difference among violations: 0.03333153
ACTUAL: array([[[   6.992896,  -19.09225 ]],
[[ -10.552914, -119.46991 ]],...
DESIRED: array([[[   7.234016,  -19.09229 ]],
[[ -10.555252, -119.47041 ]],...
2025-04-27 00:53:03.692483 test begin: paddle.minimum(Tensor([23, 1, 2],"float32"), Tensor([295443, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([23, 1, 2],"float32"), Tensor([295443, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 46 (2.17%)
Max absolute difference among violations: 0.0740886
Max relative difference among violations: 0.4161852
ACTUAL: array([[[-8.596402e+01,  2.427544e+01]],
[[-9.562630e+01, -7.009178e+01]],...
DESIRED: array([[[-8.596313e+01,  2.427559e+01]],
[[-9.562721e+01, -7.009180e+01]],...
2025-04-27 00:53:06.307280 test begin: paddle.minimum(Tensor([23, 1, 2],"float32"), Tensor([312324, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([23, 1, 2],"float32"), Tensor([312324, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 624648 (0.00016%)
Max absolute difference among violations: 0.01818672
Max relative difference among violations: 0.056128
ACTUAL: array([[-0.706463, -2.559059],
[ 0.718146,  1.583182],
[ 0.766839, -0.376385],...
DESIRED: array([[-0.706463, -2.559059],
[ 0.718146,  1.583182],
[ 0.766839, -0.376385],...
2025-04-27 00:53:10.455340 test begin: paddle.minimum(Tensor([23, 1, 2],"float32"), Tensor([322272, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([23, 1, 2],"float32"), Tensor([322272, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 644544 (0.000155%)
Max absolute difference among violations: 0.04329395
Max relative difference among violations: 0.04348728
ACTUAL: array([[-0.016792, -0.124868],
[-0.617882,  0.524582],
[-0.478186,  0.865986],...
DESIRED: array([[-0.016791, -0.124868],
[-0.617881,  0.524582],
[-0.478186,  0.865986],...
2025-04-27 00:53:20.992638 test begin: paddle.minimum(Tensor([23, 1, 2],"float32"), Tensor([63135, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([23, 1, 2],"float32"), Tensor([63135, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 126270 (0.000792%)
Max absolute difference among violations: 0.23687804
Max relative difference among violations: 0.2569522
ACTUAL: array([[-1.03727 ,  0.203077],
[ 0.362991,  0.930522],
[-0.368343,  0.227438],...
DESIRED: array([[-1.037269,  0.203077],
[ 0.362991,  0.930522],
[-0.368343,  0.227438],...
2025-04-27 00:53:50.362072 test begin: paddle.minimum(Tensor([232, 1, 2],"float32"), Tensor([1, 4725, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([232, 1, 2],"float32"), Tensor([1, 4725, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 464 (0.216%)
Max absolute difference among violations: 0.1937027
Max relative difference among violations: 0.02093675
ACTUAL: array([[[  9.245138,  -5.883488]],
[[ 25.033808,  16.24831 ]],...
DESIRED: array([[[  9.245146,  -5.883494]],
[[ 25.033813,  16.248302]],...
2025-04-27 00:55:30.027426 test begin: paddle.minimum(Tensor([24, 1, 2],"float32"), Tensor([236334, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([24, 1, 2],"float32"), Tensor([236334, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 472668 (0.000212%)
Max absolute difference among violations: 0.16015464
Max relative difference among violations: 0.24788167
ACTUAL: array([[-0.445793,  0.031732],
[ 0.565934,  0.194578],
[-0.097764, -0.768191],...
DESIRED: array([[-0.445793,  0.031732],
[ 0.565934,  0.194578],
[-0.097764, -0.768191],...
2025-04-27 00:55:32.258205 test begin: paddle.minimum(Tensor([24, 1, 2],"float32"), Tensor([260865, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([24, 1, 2],"float32"), Tensor([260865, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 48 (2.08%)
Max absolute difference among violations: 0.24890137
Max relative difference among violations: 0.01229813
ACTUAL: array([[[  67.44886 ,   38.857536]],
[[ -44.88936 , -109.975586]],...
DESIRED: array([[[  67.44954 ,   38.857437]],
[[ -44.88881 , -109.975494]],...
2025-04-27 00:55:34.506071 test begin: paddle.minimum(Tensor([24, 1, 2],"float32"), Tensor([286440, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([24, 1, 2],"float32"), Tensor([286440, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 572880 (0.000175%)
Max absolute difference among violations: 0.2269893
Max relative difference among violations: 2.2273371
ACTUAL: array([[ 0.003599,  0.414902],
[-0.238152,  0.071076],
[-0.237101,  0.      ],...
DESIRED: array([[ 0.003599,  0.414903],
[-0.238152,  0.071076],
[-0.237101,  0.      ],...
2025-04-27 00:55:37.134270 test begin: paddle.minimum(Tensor([24, 1, 2],"float32"), Tensor([310992, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([24, 1, 2],"float32"), Tensor([310992, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2 / 621984 (0.000322%)
Max absolute difference among violations: 0.14062124
Max relative difference among violations: 1.5550432
ACTUAL: array([[-1.548015, -0.395257],
[ 0.217709,  0.591418],
[ 0.367017, -0.027272],...
DESIRED: array([[-1.548015, -0.395258],
[ 0.217709,  0.591418],
[ 0.367017, -0.027272],...
2025-04-27 00:55:43.208739 test begin: paddle.minimum(Tensor([24, 1, 2],"float32"), Tensor([347820, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([24, 1, 2],"float32"), Tensor([347820, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2 / 695640 (0.000288%)
Max absolute difference among violations: 0.204591
Max relative difference among violations: 3.1193573
ACTUAL: array([[ 0.067326, -1.459331],
[ 0.748133, -0.536022],
[ 0.906526,  0.406522],...
DESIRED: array([[ 0.067326, -1.459331],
[ 0.748133, -0.536022],
[ 0.906526,  0.406522],...
2025-04-27 00:55:49.620575 test begin: paddle.minimum(Tensor([24, 1, 2],"float32"), Tensor([378540, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([24, 1, 2],"float32"), Tensor([378540, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 757080 (0.000132%)
Max absolute difference among violations: 0.04323339
Max relative difference among violations: 0.06076698
ACTUAL: array([[-0.303677,  0.115783],
[ 0.742639, -0.113366],
[ 0.218593, -1.653792],...
DESIRED: array([[-0.303677,  0.115783],
[ 0.742639, -0.113366],
[ 0.218593, -1.653792],...
2025-04-27 00:55:54.677204 test begin: paddle.minimum(Tensor([24, 1, 2],"float32"), Tensor([87600, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([24, 1, 2],"float32"), Tensor([87600, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 48 (2.08%)
Max absolute difference among violations: 0.24845839
Max relative difference among violations: 0.06298461
ACTUAL: array([[[  15.023559,  -32.145   ]],
[[  79.771255,   55.606625]],...
DESIRED: array([[[  15.024118,  -32.14499 ]],
[[  79.77111 ,   55.606544]],...
2025-04-27 00:56:37.010881 test begin: paddle.minimum(Tensor([2432, 1, 2],"float32"), Tensor([1, 3060, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([2432, 1, 2],"float32"), Tensor([1, 3060, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 4864 (0.0206%)
Max absolute difference among violations: 0.21995544
Max relative difference among violations: 0.0113904
ACTUAL: array([[[ -8.102024,   5.724167]],
[[  6.382164,  -3.085893]],...
DESIRED: array([[[ -8.102014,   5.724163]],
[[  6.382168,  -3.085898]],...
2025-04-27 00:57:36.619118 test begin: paddle.minimum(Tensor([248, 1, 2],"float32"), Tensor([1, 6804, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([248, 1, 2],"float32"), Tensor([1, 6804, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 13608 (0.00735%)
Max absolute difference among violations: 0.11877918
Max relative difference among violations: 0.03050645
ACTUAL: array([[[ 3.583417,  1.547707],
[-3.35134 , -1.826903],
[ 0.869451, -3.328261],...
DESIRED: array([[[ 3.583418,  1.547707],
[-3.35134 , -1.826903],
[ 0.86945 , -3.32826 ],...
2025-04-27 00:58:10.033540 test begin: paddle.minimum(Tensor([25, 1, 2],"float32"), Tensor([242991, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([25, 1, 2],"float32"), Tensor([242991, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 485982 (0.000206%)
Max absolute difference among violations: 0.06199652
Max relative difference among violations: 0.26555705
ACTUAL: array([[ 0.396282,  1.433292],
[-0.232677, -0.235351],
[ 1.210788,  1.122251],...
DESIRED: array([[ 0.396282,  1.433292],
[-0.232677, -0.235351],
[ 1.210788,  1.122251],...
2025-04-27 00:58:23.044439 test begin: paddle.minimum(Tensor([25, 1, 2],"float32"), Tensor([369303, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([25, 1, 2],"float32"), Tensor([369303, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 738606 (0.000135%)
Max absolute difference among violations: 0.01515868
Max relative difference among violations: 0.08708169
ACTUAL: array([[ 1.042488,  0.771591],
[-1.491412,  0.894093],
[-0.243524,  0.      ],...
DESIRED: array([[ 1.042489,  0.771591],
[-1.491412,  0.894093],
[-0.243524,  0.      ],...
2025-04-27 00:58:24.731842 test begin: paddle.minimum(Tensor([25, 1, 2],"float32"), Tensor([375984, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([25, 1, 2],"float32"), Tensor([375984, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 751968 (0.000133%)
Max absolute difference among violations: 0.08199565
Max relative difference among violations: 0.45090675
ACTUAL: array([[-1.78057 ,  0.148093],
[-0.961771, -1.107796],
[ 0.884229, -0.242625],...
DESIRED: array([[-1.78057 ,  0.148093],
[-0.961771, -1.107796],
[ 0.884229, -0.242625],...
2025-04-27 00:58:26.462172 test begin: paddle.minimum(Tensor([25, 1, 2],"float32"), Tensor([408177, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([25, 1, 2],"float32"), Tensor([408177, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 816354 (0.000122%)
Max absolute difference among violations: 0.22302496
Max relative difference among violations: 0.34029394
ACTUAL: array([[-0.215911,  1.02678 ],
[ 0.466913, -1.296881],
[ 1.116256, -0.225608],...
DESIRED: array([[-0.215911,  1.02678 ],
[ 0.466913, -1.296881],
[ 1.116256, -0.225608],...
2025-04-27 00:59:42.278168 test begin: paddle.minimum(Tensor([256, 1, 2],"float32"), Tensor([1, 10164, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([256, 1, 2],"float32"), Tensor([1, 10164, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2 / 512 (0.391%)
Max absolute difference among violations: 0.2418642
Max relative difference among violations: 0.03524483
ACTUAL: array([[[ 3.503280e+01,  1.182471e+01]],
[[-1.142999e+01,  1.229927e+01]],...
DESIRED: array([[[ 3.503281e+01,  1.182471e+01]],
[[-1.142997e+01,  1.229928e+01]],...
2025-04-27 00:59:48.475261 test begin: paddle.minimum(Tensor([2560, 1, 2],"float32"), Tensor([1, 1360, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([2560, 1, 2],"float32"), Tensor([1, 1360, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 5120 (0.0195%)
Max absolute difference among violations: 0.20490754
Max relative difference among violations: 0.11568782
ACTUAL: array([[[ -3.547711,  -0.372894]],
[[-25.284784,  -1.725294]],...
DESIRED: array([[[ -3.54771 ,  -0.372894]],
[[-25.284775,  -1.725293]],...
2025-04-27 01:00:39.130012 test begin: paddle.minimum(Tensor([26, 1, 2],"float32"), Tensor([234804, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([26, 1, 2],"float32"), Tensor([234804, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 469608 (0.000213%)
Max absolute difference among violations: 0.05261135
Max relative difference among violations: 0.03740279
ACTUAL: array([[ 0.271722,  1.633182],
[ 0.462784,  0.311534],
[ 0.020396,  0.865648],...
DESIRED: array([[ 0.271722,  1.633182],
[ 0.462784,  0.311534],
[ 0.020396,  0.865648],...
2025-04-27 01:00:41.489172 test begin: paddle.minimum(Tensor([26, 1, 2],"float32"), Tensor([250656, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([26, 1, 2],"float32"), Tensor([250656, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 52 (1.92%)
Max absolute difference among violations: 0.14032793
Max relative difference among violations: 0.01880042
ACTUAL: array([[[ -18.38234 , -157.08118 ]],
[[  78.51018 ,   39.57817 ]],...
DESIRED: array([[[ -18.382324, -157.0827  ]],
[[  78.51012 ,   39.57835 ]],...
2025-04-27 01:00:54.842449 test begin: paddle.minimum(Tensor([26, 1, 2],"float32"), Tensor([313347, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([26, 1, 2],"float32"), Tensor([313347, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 626694 (0.00016%)
Max absolute difference among violations: 0.13794398
Max relative difference among violations: 0.13614626
ACTUAL: array([[ 0.392883,  0.384695],
[ 0.196433, -0.746099],
[ 0.3405  , -0.109151],...
DESIRED: array([[ 0.392883,  0.384695],
[ 0.196433, -0.746099],
[ 0.3405  , -0.109151],...
2025-04-27 01:00:56.363351 test begin: paddle.minimum(Tensor([26, 1, 2],"float32"), Tensor([340176, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([26, 1, 2],"float32"), Tensor([340176, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 680352 (0.000147%)
Max absolute difference among violations: 0.1376312
Max relative difference among violations: 0.7048876
ACTUAL: array([[-0.213139,  0.412234],
[-1.171691,  0.23042 ],
[-1.505216,  0.260689],...
DESIRED: array([[-0.213139,  0.412234],
[-1.171691,  0.23042 ],
[-1.505216,  0.260689],...
2025-04-27 01:00:58.020392 test begin: paddle.minimum(Tensor([26, 1, 2],"float32"), Tensor([375984, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([26, 1, 2],"float32"), Tensor([375984, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 751968 (0.000133%)
Max absolute difference among violations: 0.07829696
Max relative difference among violations: 0.18139632
ACTUAL: array([[ 3.268009, -0.988527],
[-0.019913, -2.072741],
[ 0.      , -0.700905],...
DESIRED: array([[ 3.268009, -0.988527],
[-0.019913, -2.072741],
[ 0.      , -0.700905],...
2025-04-27 01:01:25.375556 test begin: paddle.minimum(Tensor([2624, 1, 2],"float32"), Tensor([1, 1360, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([2624, 1, 2],"float32"), Tensor([1, 1360, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 5248 (0.0191%)
Max absolute difference among violations: 0.06727529
Max relative difference among violations: 0.02190114
ACTUAL: array([[[ 9.636493,  7.705081]],
[[ 2.998608,  5.593935]],...
DESIRED: array([[[ 9.636491,  7.705085]],
[[ 2.998607,  5.593933]],...
2025-04-27 01:01:43.976887 test begin: paddle.minimum(Tensor([264, 1, 2],"float32"), Tensor([1, 9261, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([264, 1, 2],"float32"), Tensor([1, 9261, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 528 (0.189%)
Max absolute difference among violations: 0.20461035
Max relative difference among violations: 0.18300088
ACTUAL: array([[[ 5.015264e+00,  2.344510e+01]],
[[-9.238991e-01,  3.370640e-02]],...
DESIRED: array([[[ 5.015269e+00,  2.344510e+01]],
[[-9.239025e-01,  3.368759e-02]],...
2025-04-27 01:01:54.084592 test begin: paddle.minimum(Tensor([2651, 1, 2],"float32"), Tensor([11, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([2651, 1, 2],"float32"), Tensor([11, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 5302 (0.0189%)
Max absolute difference among violations: 0.09713939
Max relative difference among violations: 0.45517808
ACTUAL: array([[[-0.226299,  0.677404]],
[[ 0.      ,  0.069006]],...
DESIRED: array([[[-0.226299,  0.677404]],
[[ 0.      ,  0.069006]],...
2025-04-27 01:02:53.075527 test begin: paddle.minimum(Tensor([27, 1, 2],"float32"), Tensor([313038, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([27, 1, 2],"float32"), Tensor([313038, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 626076 (0.00016%)
Max absolute difference among violations: 0.19858307
Max relative difference among violations: 1.4303689
ACTUAL: array([[-0.098121, -0.412899],
[ 0.70431 ,  0.783258],
[-0.360338, -0.637111],...
DESIRED: array([[-0.098121, -0.412899],
[ 0.70431 ,  0.783258],
[-0.360338, -0.637111],...
2025-04-27 01:02:57.665160 test begin: paddle.minimum(Tensor([27, 1, 2],"float32"), Tensor([327360, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([27, 1, 2],"float32"), Tensor([327360, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 654720 (0.000153%)
Max absolute difference among violations: 0.03402543
Max relative difference among violations: 0.08817653
ACTUAL: array([[ 0.030732, -0.88338 ],
[ 0.      , -1.282953],
[ 0.038644,  1.880146],...
DESIRED: array([[ 0.030732, -0.883381],
[ 0.      , -1.282953],
[ 0.038644,  1.880146],...
2025-04-27 01:03:09.429771 test begin: paddle.minimum(Tensor([27, 1, 2],"float32"), Tensor([86940, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([27, 1, 2],"float32"), Tensor([86940, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 54 (1.85%)
Max absolute difference among violations: 0.11508465
Max relative difference among violations: 0.01126873
ACTUAL: array([[[  10.327831,   52.298447]],
[[ -68.13622 ,   37.125072]],...
DESIRED: array([[[  10.212747,   52.298405]],
[[ -68.136765,   37.125553]],...
2025-04-27 01:04:38.402489 test begin: paddle.minimum(Tensor([2784, 1, 2],"float32"), Tensor([4, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([2784, 1, 2],"float32"), Tensor([4, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 5568 (0.018%)
Max absolute difference among violations: 0.04693252
Max relative difference among violations: 0.38194212
ACTUAL: array([[[0.47398 , 0.      ]],
[[0.      , 0.      ]],...
DESIRED: array([[[0.47398 , 0.      ]],
[[0.      , 0.      ]],...
2025-04-27 01:04:51.621914 test begin: paddle.minimum(Tensor([28, 1, 2],"float32"), Tensor([188256, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([28, 1, 2],"float32"), Tensor([188256, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 376512 (0.000266%)
Max absolute difference among violations: 0.14818586
Max relative difference among violations: 1.
ACTUAL: array([[-0.337131, -1.085245],
[-0.541305, -2.601332],
[ 0.98945 ,  1.95897 ],...
DESIRED: array([[-0.337131, -1.085245],
[-0.541305, -2.601332],
[ 0.98945 ,  1.95897 ],...
2025-04-27 01:04:56.229465 test begin: paddle.minimum(Tensor([28, 1, 2],"float32"), Tensor([257796, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([28, 1, 2],"float32"), Tensor([257796, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 515592 (0.000194%)
Max absolute difference among violations: 0.18533486
Max relative difference among violations: 0.28051096
ACTUAL: array([[ 0.802281,  2.019139],
[ 0.      , -1.291997],
[ 0.82329 , -0.297657],...
DESIRED: array([[ 0.802281,  2.019139],
[ 0.      , -1.291997],
[ 0.82329 , -0.297657],...
2025-04-27 01:05:09.838706 test begin: paddle.minimum(Tensor([28, 1, 2],"float32"), Tensor([306900, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([28, 1, 2],"float32"), Tensor([306900, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 56 (1.79%)
Max absolute difference among violations: 0.12449419
Max relative difference among violations: 0.10252943
ACTUAL: array([[[ 2.422698e+02,  1.089056e+02]],
[[ 3.178313e+02,  1.615908e+02]],...
DESIRED: array([[[ 2.422712e+02,  1.089057e+02]],
[[ 3.178298e+02,  1.615903e+02]],...
2025-04-27 01:05:13.043852 test begin: paddle.minimum(Tensor([28, 1, 2],"float32"), Tensor([320739, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([28, 1, 2],"float32"), Tensor([320739, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 56 (1.79%)
Max absolute difference among violations: 0.2095747
Max relative difference among violations: 0.01450451
ACTUAL: array([[[-2.055963e+01, -6.464792e+01]],
[[ 2.076736e+02, -8.183036e+00]],...
DESIRED: array([[[-2.055901e+01, -6.464645e+01]],
[[ 2.076759e+02, -8.183072e+00]],...
2025-04-27 01:05:16.375760 test begin: paddle.minimum(Tensor([28, 1, 2],"float32"), Tensor([322272, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([28, 1, 2],"float32"), Tensor([322272, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 644544 (0.000155%)
Max absolute difference among violations: 0.22570395
Max relative difference among violations: 0.06183796
ACTUAL: array([[-0.50963 ,  2.127451],
[-1.822866, -1.242784],
[ 0.807025, -0.198582],...
DESIRED: array([[-0.50963 ,  2.127451],
[-1.822866, -1.242784],
[ 0.807025, -0.198582],...
2025-04-27 01:06:11.951667 test begin: paddle.minimum(Tensor([2837, 1, 2],"float32"), Tensor([18, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([2837, 1, 2],"float32"), Tensor([18, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 5674 (0.0176%)
Max absolute difference among violations: 0.03930783
Max relative difference among violations: 0.02132681
ACTUAL: array([[[-1.733   ,  0.458276]],
[[ 0.641907, -0.366992]],...
DESIRED: array([[[-1.733   ,  0.458275]],
[[ 0.641907, -0.366992]],...
2025-04-27 01:07:21.587933 test begin: paddle.minimum(Tensor([29, 1, 2],"float32"), Tensor([331452, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([29, 1, 2],"float32"), Tensor([331452, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2 / 662904 (0.000302%)
Max absolute difference among violations: 0.17839265
Max relative difference among violations: 0.08626829
ACTUAL: array([[-0.048313, -0.383713],
[-1.023342,  1.88442 ],
[-2.264366,  0.378233],...
DESIRED: array([[-0.048313, -0.383713],
[-1.023342,  1.88442 ],
[-2.264366,  0.378233],...
2025-04-27 01:07:27.189503 test begin: paddle.minimum(Tensor([29, 1, 2],"float32"), Tensor([375984, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([29, 1, 2],"float32"), Tensor([375984, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 751968 (0.000133%)
Max absolute difference among violations: 0.08466196
Max relative difference among violations: 0.4839658
ACTUAL: array([[-0.200981, -0.697549],
[-0.077152, -0.224756],
[ 0.      ,  1.066593],...
DESIRED: array([[-0.200981, -0.697549],
[-0.077152, -0.224755],
[ 0.      ,  1.066593],...
2025-04-27 01:07:31.957255 test begin: paddle.minimum(Tensor([29, 1, 2],"float32"), Tensor([66240, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([29, 1, 2],"float32"), Tensor([66240, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 132480 (0.000755%)
Max absolute difference among violations: 0.03819692
Max relative difference among violations: 0.13879278
ACTUAL: array([[-1.774543, -0.553064],
[-0.952285,  1.216606],
[ 0.892175, -0.263731],...
DESIRED: array([[-1.774543, -0.553064],
[-0.952285,  1.216605],
[ 0.892175, -0.263731],...
2025-04-27 01:07:50.685754 test begin: paddle.minimum(Tensor([292, 1, 2],"float32"), Tensor([1, 2541, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([292, 1, 2],"float32"), Tensor([1, 2541, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 584 (0.171%)
Max absolute difference among violations: 0.21047544
Max relative difference among violations: 0.08664238
ACTUAL: array([[[ 7.024012e+00, -2.231357e+00]],
[[-3.500756e-01, -1.015278e+01]],...
DESIRED: array([[[ 7.024001e+00, -2.231356e+00]],
[[-3.500755e-01, -1.015277e+01]],...
2025-04-27 01:08:14.636986 test begin: paddle.minimum(Tensor([2944, 1, 2],"float32"), Tensor([1, 1726, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([2944, 1, 2],"float32"), Tensor([1, 1726, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2 / 5888 (0.034%)
Max absolute difference among violations: 0.24101067
Max relative difference among violations: 0.04216931
ACTUAL: array([[[ -0.807932,  -1.314257]],
[[  9.304166,  -2.466745]],...
DESIRED: array([[[ -0.807932,  -1.31425 ]],
[[  9.304163,  -2.466745]],...
2025-04-27 01:08:15.612850 test begin: paddle.minimum(Tensor([2944, 1, 2],"float32"), Tensor([1, 3060, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([2944, 1, 2],"float32"), Tensor([1, 3060, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2 / 5888 (0.034%)
Max absolute difference among violations: 0.2159195
Max relative difference among violations: 0.01490973
ACTUAL: array([[[  1.26954 ,   9.246423]],
[[-13.528429,   5.197923]],...
DESIRED: array([[[  1.269537,   9.246428]],
[[-13.528433,   5.197918]],...
2025-04-27 01:09:47.762823 test begin: paddle.minimum(Tensor([3, 1, 2],"float32"), Tensor([268560, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([3, 1, 2],"float32"), Tensor([268560, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 537120 (0.000186%)
Max absolute difference among violations: 0.1872049
Max relative difference among violations: 0.3077084
ACTUAL: array([[ 0.      ,  0.      ],
[ 0.      ,  0.021282],
[ 0.577387,  0.      ],...
DESIRED: array([[ 0.      ,  0.      ],
[ 0.      ,  0.021282],
[ 0.577387,  0.      ],...
2025-04-27 01:09:53.198798 test begin: paddle.minimum(Tensor([3, 1, 2],"float32"), Tensor([291555, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([3, 1, 2],"float32"), Tensor([291555, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 6 (16.7%)
Max absolute difference among violations: 0.11123705
Max relative difference among violations: 0.01505854
ACTUAL: array([[[ 298.52435 ,    3.880629]],
[[-112.353905,    7.498209]],...
DESIRED: array([[[ 298.52383 ,    3.880478]],
[[-112.35475 ,    7.386972]],...
2025-04-27 01:09:59.521480 test begin: paddle.minimum(Tensor([3, 1, 2],"float32"), Tensor([325113, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([3, 1, 2],"float32"), Tensor([325113, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 650226 (0.000154%)
Max absolute difference among violations: 0.14930278
Max relative difference among violations: 0.47346848
ACTUAL: array([[ 0.      ,  0.482798],
[ 0.140423, -0.220274],
[ 0.159158,  0.70937 ],...
DESIRED: array([[ 0.      ,  0.482798],
[ 0.140423, -0.220274],
[ 0.159158,  0.70937 ],...
2025-04-27 01:10:08.839206 test begin: paddle.minimum(Tensor([3, 1, 2],"float32"), Tensor([378540, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([3, 1, 2],"float32"), Tensor([378540, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 757080 (0.000132%)
Max absolute difference among violations: 0.07284153
Max relative difference among violations: 0.12174683
ACTUAL: array([[ 0.      ,  0.046191],
[ 0.      ,  0.      ],
[ 0.463248, -0.47348 ],...
DESIRED: array([[ 0.      ,  0.046191],
[ 0.      ,  0.      ],
[ 0.463248, -0.47348 ],...
2025-04-27 01:11:55.497450 test begin: paddle.minimum(Tensor([304, 1, 2],"float32"), Tensor([1, 7581, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([304, 1, 2],"float32"), Tensor([1, 7581, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 608 (0.164%)
Max absolute difference among violations: 0.20627403
Max relative difference among violations: 0.04659022
ACTUAL: array([[[ 4.315387e+01,  1.747820e+01]],
[[-1.837972e+00,  6.119107e+00]],...
DESIRED: array([[[ 4.315383e+01,  1.747819e+01]],
[[-1.837972e+00,  6.119105e+00]],...
2025-04-27 01:11:56.160741 test begin: paddle.minimum(Tensor([304, 1, 2],"float32"), Tensor([1, 8400, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([304, 1, 2],"float32"), Tensor([1, 8400, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 608 (0.164%)
Max absolute difference among violations: 0.0937252
Max relative difference among violations: 0.14695366
ACTUAL: array([[[-4.164061e+01,  1.046458e+01]],
[[-1.849870e+01,  2.501353e+00]],...
DESIRED: array([[[-4.164057e+01,  1.046459e+01]],
[[-1.849872e+01,  2.501348e+00]],...
2025-04-27 01:12:45.781538 test begin: paddle.minimum(Tensor([31, 1, 2],"float32"), Tensor([217413, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([31, 1, 2],"float32"), Tensor([217413, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 434826 (0.00023%)
Max absolute difference among violations: 0.1669693
Max relative difference among violations: 0.10307382
ACTUAL: array([[ 0.      , -0.513193],
[ 0.946364,  2.374371],
[ 0.296849, -0.050347],...
DESIRED: array([[ 0.      , -0.513193],
[ 0.946364,  2.374371],
[ 0.296849, -0.050347],...
2025-04-27 01:12:47.107352 test begin: paddle.minimum(Tensor([31, 1, 2],"float32"), Tensor([229152, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([31, 1, 2],"float32"), Tensor([229152, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 458304 (0.000218%)
Max absolute difference among violations: 0.18594712
Max relative difference among violations: 0.25470865
ACTUAL: array([[ 0.15486 , -0.991529],
[-0.548213, -0.040952],
[-0.361218, -3.459918],...
DESIRED: array([[ 0.15486 , -0.991529],
[-0.548213, -0.040952],
[-0.361218, -3.459919],...
2025-04-27 01:12:49.774281 test begin: paddle.minimum(Tensor([31, 1, 2],"float32"), Tensor([236616, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([31, 1, 2],"float32"), Tensor([236616, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 473232 (0.000211%)
Max absolute difference among violations: 0.16325212
Max relative difference among violations: 0.07245777
ACTUAL: array([[-0.134043, -0.81356 ],
[-1.38659 ,  0.023329],
[ 0.552013,  0.565163],...
DESIRED: array([[-0.134043, -0.81356 ],
[-1.38659 ,  0.023329],
[ 0.552014,  0.565163],...
2025-04-27 01:12:52.535424 test begin: paddle.minimum(Tensor([31, 1, 2],"float32"), Tensor([245823, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([31, 1, 2],"float32"), Tensor([245823, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 491646 (0.000203%)
Max absolute difference among violations: 0.05702901
Max relative difference among violations: 0.02726655
ACTUAL: array([[ 0.206619,  1.731513],
[-1.000875,  0.774073],
[ 1.886625, -0.245022],...
DESIRED: array([[ 0.206619,  1.731513],
[-1.000875,  0.774073],
[ 1.886625, -0.245022],...
2025-04-27 01:13:00.163934 test begin: paddle.minimum(Tensor([31, 1, 2],"float32"), Tensor([278256, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([31, 1, 2],"float32"), Tensor([278256, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 556512 (0.00018%)
Max absolute difference among violations: 0.16726768
Max relative difference among violations: 0.13037643
ACTUAL: array([[ 2.579611,  0.023407],
[-0.322556,  0.37063 ],
[ 0.050091, -0.133162],...
DESIRED: array([[ 2.579611,  0.023407],
[-0.322556,  0.37063 ],
[ 0.050091, -0.133162],...
2025-04-27 01:13:05.119113 test begin: paddle.minimum(Tensor([31, 1, 2],"float32"), Tensor([291555, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([31, 1, 2],"float32"), Tensor([291555, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2 / 583110 (0.000343%)
Max absolute difference among violations: 0.229514
Max relative difference among violations: 0.8270765
ACTUAL: array([[-0.841267,  1.899195],
[-2.121759,  2.085242],
[-2.068965, -3.639682],...
DESIRED: array([[-0.841267,  1.899196],
[-2.12176 ,  2.085242],
[-2.068964, -3.639682],...
2025-04-27 01:13:10.466876 test begin: paddle.minimum(Tensor([31, 1, 2],"float32"), Tensor([322272, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([31, 1, 2],"float32"), Tensor([322272, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 644544 (0.000155%)
Max absolute difference among violations: 0.21667475
Max relative difference among violations: 0.4839199
ACTUAL: array([[ 1.073232,  1.81522 ],
[-0.949429,  0.903662],
[ 0.114405,  0.      ],...
DESIRED: array([[ 1.073231,  1.81522 ],
[-0.949429,  0.903662],
[ 0.114405,  0.      ],...
2025-04-27 01:13:16.045654 test begin: paddle.minimum(Tensor([31, 1, 2],"float32"), Tensor([408177, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([31, 1, 2],"float32"), Tensor([408177, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 62 (1.61%)
Max absolute difference among violations: 0.12187862
Max relative difference among violations: 0.01831082
ACTUAL: array([[[ 158.52814 ,   70.634834]],
[[ 118.663086,  -48.60999 ]],...
DESIRED: array([[[ 158.52832 ,   70.63451 ]],
[[ 118.663734,  -48.609978]],...
2025-04-27 01:14:37.556257 test begin: paddle.minimum(Tensor([32, 1, 2],"float32"), Tensor([208692, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([32, 1, 2],"float32"), Tensor([208692, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 417384 (0.00024%)
Max absolute difference among violations: 0.22917616
Max relative difference among violations: 0.47741345
ACTUAL: array([[-1.833643, -3.355601],
[-0.938523,  2.313579],
[ 0.513129,  0.177436],...
DESIRED: array([[-1.833643, -3.355601],
[-0.938523,  2.313579],
[ 0.513129,  0.177436],...
2025-04-27 01:14:40.505454 test begin: paddle.minimum(Tensor([32, 1, 2],"float32"), Tensor([310992, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([32, 1, 2],"float32"), Tensor([310992, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 621984 (0.000161%)
Max absolute difference among violations: 0.22326493
Max relative difference among violations: 0.31906533
ACTUAL: array([[-0.313864, -0.858042],
[-2.562825,  0.297956],
[ 0.03118 ,  0.641683],...
DESIRED: array([[-0.313864, -0.858042],
[-2.562825,  0.297956],
[ 0.03118 ,  0.641683],...
2025-04-27 01:16:26.081334 test begin: paddle.minimum(Tensor([3328, 1, 2],"float32"), Tensor([1, 2577, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([3328, 1, 2],"float32"), Tensor([1, 2577, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 5154 (0.0194%)
Max absolute difference among violations: 0.1903131
Max relative difference among violations: 0.04561557
ACTUAL: array([[[ -2.746706,  -6.474384],
[  2.163444, -16.709578],
[  2.083984,  12.055258],...
DESIRED: array([[[ -2.746705,  -6.4744  ],
[  2.163446, -16.709572],
[  2.083983,  12.055262],...
2025-04-27 01:16:53.471487 test begin: paddle.minimum(Tensor([336, 1, 2],"float32"), Tensor([1, 5376, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([336, 1, 2],"float32"), Tensor([1, 5376, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 10752 (0.0093%)
Max absolute difference among violations: 0.03282166
Max relative difference among violations: 0.0194884
ACTUAL: array([[[ 1.563621, -1.655127],
[ 0.871058,  0.918375],
[-6.772476, -0.918201],...
DESIRED: array([[[ 1.563621, -1.655127],
[ 0.871058,  0.918375],
[-6.772475, -0.918201],...
2025-04-27 01:17:28.602078 test begin: paddle.minimum(Tensor([34, 1, 2],"float32"), Tensor([223554, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([34, 1, 2],"float32"), Tensor([223554, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 447108 (0.000224%)
Max absolute difference among violations: 0.03552574
Max relative difference among violations: 0.0486568
ACTUAL: array([[-1.227081, -1.029262],
[-0.477059,  0.538428],
[-0.673925, -0.016578],...
DESIRED: array([[-1.227081, -1.029262],
[-0.477059,  0.538429],
[-0.673925, -0.016577],...
2025-04-27 01:17:29.996661 test begin: paddle.minimum(Tensor([34, 1, 2],"float32"), Tensor([227124, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([34, 1, 2],"float32"), Tensor([227124, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 454248 (0.00022%)
Max absolute difference among violations: 0.06348836
Max relative difference among violations: 0.03431607
ACTUAL: array([[ 0.406028, -0.005783],
[-0.27226 , -0.77233 ],
[-0.884961,  0.964264],...
DESIRED: array([[ 0.406028, -0.005783],
[-0.27226 , -0.77233 ],
[-0.884961,  0.964264],...
2025-04-27 01:17:33.289624 test begin: paddle.minimum(Tensor([34, 1, 2],"float32"), Tensor([368280, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([34, 1, 2],"float32"), Tensor([368280, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 68 (1.47%)
Max absolute difference among violations: 0.16163921
Max relative difference among violations: 0.01154477
ACTUAL: array([[[ -66.13953 ,   75.18239 ]],
[[  72.312454,   21.880938]],...
DESIRED: array([[[ -66.13933 ,   75.181786]],
[[  72.312485,   21.881058]],...
2025-04-27 01:18:07.645284 test begin: paddle.minimum(Tensor([344, 1, 2],"float32"), Tensor([1, 6804, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([344, 1, 2],"float32"), Tensor([1, 6804, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 13608 (0.00735%)
Max absolute difference among violations: 0.08713055
Max relative difference among violations: 0.01572289
ACTUAL: array([[[ 2.700056,  1.099765],
[ 0.224237, -1.202377],
[-0.38345 , -1.071885],...
DESIRED: array([[[ 2.700056,  1.099765],
[ 0.224237, -1.202377],
[-0.38345 , -1.071885],...
2025-04-27 01:18:19.627238 test begin: paddle.minimum(Tensor([3456, 1, 2],"float32"), Tensor([1, 3060, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([3456, 1, 2],"float32"), Tensor([1, 3060, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 6120 (0.0163%)
Max absolute difference among violations: 0.08228675
Max relative difference among violations: 0.44936493
ACTUAL: array([[[ 12.93836 ,  30.609316],
[-20.921436, -13.562171],
[  4.059279,   7.250846],...
DESIRED: array([[[ 12.938366,  30.609343],
[-20.92144 , -13.562176],
[  4.059278,   7.25085 ],...
2025-04-27 01:20:37.016001 test begin: paddle.minimum(Tensor([36, 1, 2],"float32"), Tensor([368280, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([36, 1, 2],"float32"), Tensor([368280, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 72 (1.39%)
Max absolute difference among violations: 0.19719028
Max relative difference among violations: 0.01263975
ACTUAL: array([[[  -2.732558,   -8.711286]],
[[-142.5189  ,  239.47702 ]],...
DESIRED: array([[[  -2.731823,   -8.710648]],
[[-142.51834 ,  239.4782  ]],...
2025-04-27 01:21:33.027607 test begin: paddle.minimum(Tensor([37, 1, 2],"float32"), Tensor([205923, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([37, 1, 2],"float32"), Tensor([205923, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 411846 (0.000243%)
Max absolute difference among violations: 0.14515495
Max relative difference among violations: 0.17080382
ACTUAL: array([[ 1.440846,  1.571162],
[ 0.587793, -1.130076],
[ 0.287481,  2.684465],...
DESIRED: array([[ 1.440846,  1.571162],
[ 0.587793, -1.130076],
[ 0.287481,  2.684465],...
2025-04-27 01:22:41.374888 test begin: paddle.minimum(Tensor([380, 1, 2],"float32"), Tensor([1, 9261, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([380, 1, 2],"float32"), Tensor([1, 9261, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 18522 (0.0054%)
Max absolute difference among violations: 0.22296381
Max relative difference among violations: 0.05087136
ACTUAL: array([[[-3.630586,  1.859153],
[-9.068921,  5.372266],
[ 7.933375, -4.202093],...
DESIRED: array([[[-3.630587,  1.859153],
[-9.06892 ,  5.372268],
[ 7.933381, -4.202091],...
2025-04-27 01:22:48.924930 test begin: paddle.minimum(Tensor([381, 1, 2],"float32"), Tensor([9, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([381, 1, 2],"float32"), Tensor([9, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 762 (0.131%)
Max absolute difference among violations: 0.03939742
Max relative difference among violations: 1.
ACTUAL: array([[[ 0.000000e+00, -7.990574e-01]],
[[ 0.000000e+00, -2.888828e-01]],...
DESIRED: array([[[ 0.000000e+00, -7.990574e-01]],
[[ 0.000000e+00, -2.888828e-01]],...
2025-04-27 01:23:07.331211 test begin: paddle.minimum(Tensor([384, 1, 2],"float32"), Tensor([1, 5376, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([384, 1, 2],"float32"), Tensor([1, 5376, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 768 (0.13%)
Max absolute difference among violations: 0.1076355
Max relative difference among violations: 0.0225614
ACTUAL: array([[[-1.631107e+01,  1.501118e+01]],
[[-8.822352e-01, -3.262445e+00]],...
DESIRED: array([[[-1.631105e+01,  1.501118e+01]],
[[-8.822354e-01, -3.262446e+00]],...
2025-04-27 01:23:44.044266 test begin: paddle.minimum(Tensor([39, 1, 2],"float32"), Tensor([217413, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([39, 1, 2],"float32"), Tensor([217413, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 434826 (0.00023%)
Max absolute difference among violations: 0.16837794
Max relative difference among violations: 0.21621782
ACTUAL: array([[ 0.159442, -0.147312],
[-1.06827 ,  0.921909],
[ 0.065779, -0.577385],...
DESIRED: array([[ 0.159442, -0.147312],
[-1.06827 ,  0.921909],
[ 0.065779, -0.577386],...
2025-04-27 01:23:45.582784 test begin: paddle.minimum(Tensor([39, 1, 2],"float32"), Tensor([242991, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([39, 1, 2],"float32"), Tensor([242991, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 78 (1.28%)
Max absolute difference among violations: 0.20511961
Max relative difference among violations: 0.04510841
ACTUAL: array([[[  81.80435 ,  -33.982742]],
[[ -54.478806,  124.218895]],...
DESIRED: array([[[  81.80428 ,  -33.982872]],
[[ -54.478935,  124.21919 ]],...
2025-04-27 01:23:47.319791 test begin: paddle.minimum(Tensor([39, 1, 2],"float32"), Tensor([246051, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([39, 1, 2],"float32"), Tensor([246051, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 492102 (0.000203%)
Max absolute difference among violations: 0.05168009
Max relative difference among violations: 0.13981222
ACTUAL: array([[ 0.136252, -1.130083],
[ 1.070764, -0.829402],
[-0.603202, -0.035038],...
DESIRED: array([[ 0.136252, -1.130083],
[ 1.070764, -0.829402],
[-0.603202, -0.035038],...
2025-04-27 01:25:10.140989 test begin: paddle.minimum(Tensor([4, 1, 2],"float32"), Tensor([205923, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([4, 1, 2],"float32"), Tensor([205923, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 411846 (0.000243%)
Max absolute difference among violations: 0.13766915
Max relative difference among violations: 0.19829728
ACTUAL: array([[0.245632, 0.048243],
[0.114699, 0.125197],
[0.      , 0.179871],...
DESIRED: array([[0.245632, 0.048243],
[0.114699, 0.125197],
[0.      , 0.179871],...
2025-04-27 01:25:24.183183 test begin: paddle.minimum(Tensor([4, 1, 2],"float32"), Tensor([283905, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([4, 1, 2],"float32"), Tensor([283905, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 567810 (0.000176%)
Max absolute difference among violations: 0.01669681
Max relative difference among violations: 0.1772296
ACTUAL: array([[-0.168914, -0.47966 ],
[-1.171949, -0.088571],
[ 1.096533, -0.644531],...
DESIRED: array([[-0.168914, -0.47966 ],
[-1.171949, -0.088571],
[ 1.096533, -0.644531],...
2025-04-27 01:25:27.430831 test begin: paddle.minimum(Tensor([4, 1, 2],"float32"), Tensor([299250, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([4, 1, 2],"float32"), Tensor([299250, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 598500 (0.000167%)
Max absolute difference among violations: 0.13694899
Max relative difference among violations: 0.96408045
ACTUAL: array([[ 0.395359, -0.402672],
[ 0.26035 ,  0.      ],
[ 0.356351, -0.110657],...
DESIRED: array([[ 0.395359, -0.402672],
[ 0.26035 ,  0.      ],
[ 0.356351, -0.110657],...
2025-04-27 01:26:09.672877 test begin: paddle.minimum(Tensor([4, 113, 1, 2],"float32"), Tensor([4, 1, 6804, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([4, 113, 1, 2],"float32"), Tensor([4, 1, 6804, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 904 (0.111%)
Max absolute difference among violations: 0.2312231
Max relative difference among violations: 0.02059593
ACTUAL: array([[[[ 3.711630e+01,  1.828488e+01]],
[[ 1.540445e+01, -1.145786e+01]],...
DESIRED: array([[[[ 3.711633e+01,  1.828487e+01]],
[[ 1.540442e+01, -1.122664e+01]],...
2025-04-27 01:26:17.783696 test begin: paddle.minimum(Tensor([4, 171, 1, 2],"float32"), Tensor([4, 1, 10164, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([4, 171, 1, 2],"float32"), Tensor([4, 1, 10164, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1368 (0.0731%)
Max absolute difference among violations: 0.14712262
Max relative difference among violations: 2.9967704
ACTUAL: array([[[[  2.588427, -18.100422]],
[[ 12.04408 , -10.306376]],...
DESIRED: array([[[[  2.588427, -18.100428]],
[[ 12.044081, -10.306363]],...
2025-04-27 01:26:53.837068 test begin: paddle.minimum(Tensor([4, 47, 1, 2],"float32"), Tensor([4, 1, 10164, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([4, 47, 1, 2],"float32"), Tensor([4, 1, 10164, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 81312 (0.00123%)
Max absolute difference among violations: 0.05908173
Max relative difference among violations: 0.24885583
ACTUAL: array([[[[ 1.680331,  0.780543],
[ 2.582834,  0.23046 ],
[-0.887658,  0.744609],...
DESIRED: array([[[[ 1.680332,  0.780543],
[ 2.582834,  0.23046 ],
[-0.887658,  0.744609],...
2025-04-27 01:27:23.473784 test begin: paddle.minimum(Tensor([40, 1, 2],"float32"), Tensor([310992, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([40, 1, 2],"float32"), Tensor([310992, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 621984 (0.000161%)
Max absolute difference among violations: 0.06230745
Max relative difference among violations: 0.11198442
ACTUAL: array([[ 1.030771,  2.28555 ],
[ 1.137485, -0.282115],
[-0.389991, -1.028232],...
DESIRED: array([[ 1.030771,  2.28555 ],
[ 1.137485, -0.282115],
[-0.389991, -1.028232],...
2025-04-27 01:27:25.654877 test begin: paddle.minimum(Tensor([40, 1, 2],"float32"), Tensor([375984, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([40, 1, 2],"float32"), Tensor([375984, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 751968 (0.000133%)
Max absolute difference among violations: 0.0331825
Max relative difference among violations: 0.02495505
ACTUAL: array([[-0.458584,  0.157239],
[ 0.378421,  0.413351],
[ 1.78975 ,  1.173744],...
DESIRED: array([[-0.458584,  0.15724 ],
[ 0.378421,  0.413351],
[ 1.78975 ,  1.173744],...
2025-04-27 01:27:29.156167 test begin: paddle.minimum(Tensor([400, 1, 2],"float32"), Tensor([1, 12096, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([400, 1, 2],"float32"), Tensor([1, 12096, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 800 (0.125%)
Max absolute difference among violations: 0.17990208
Max relative difference among violations: 0.01181671
ACTUAL: array([[[ 3.315744e+01,  4.088715e+01]],
[[-1.356411e+01,  5.183398e+00]],...
DESIRED: array([[[ 3.315741e+01,  4.088717e+01]],
[[-1.356411e+01,  5.183398e+00]],...
2025-04-27 01:28:53.502863 test begin: paddle.minimum(Tensor([416, 1, 2],"float32"), Tensor([1, 12096, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([416, 1, 2],"float32"), Tensor([1, 12096, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 24192 (0.00413%)
Max absolute difference among violations: 0.05223227
Max relative difference among violations: 0.03703497
ACTUAL: array([[[ 2.449216, -2.79523 ],
[-1.507875,  1.908094],
[-3.544125,  1.43567 ],...
DESIRED: array([[[ 2.449215, -2.79523 ],
[-1.507875,  1.908095],
[-3.544125,  1.435671],...
2025-04-27 01:29:30.412458 test begin: paddle.minimum(Tensor([424, 1, 2],"float32"), Tensor([1, 7581, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([424, 1, 2],"float32"), Tensor([1, 7581, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 848 (0.118%)
Max absolute difference among violations: 0.12845516
Max relative difference among violations: 0.02842286
ACTUAL: array([[[-6.458425e+00, -4.350523e-01]],
[[ 4.198880e+00,  1.797823e+01]],...
DESIRED: array([[[-6.458411e+00, -4.350517e-01]],
[[ 4.198883e+00,  1.797824e+01]],...
2025-04-27 01:30:02.211432 test begin: paddle.minimum(Tensor([432, 1, 2],"float32"), Tensor([1, 11109, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([432, 1, 2],"float32"), Tensor([1, 11109, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 22218 (0.0045%)
Max absolute difference among violations: 0.10675764
Max relative difference among violations: 0.09281135
ACTUAL: array([[[-3.35223 ,  1.379894],
[-1.037895, -4.149733],
[ 1.83243 , -4.750068],...
DESIRED: array([[[-3.352229,  1.379894],
[-1.037895, -4.149732],
[ 1.83243 , -4.750069],...
2025-04-27 01:30:58.730439 test begin: paddle.minimum(Tensor([448, 1, 2],"float32"), Tensor([1, 10164, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([448, 1, 2],"float32"), Tensor([1, 10164, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 896 (0.112%)
Max absolute difference among violations: 0.18262005
Max relative difference among violations: 0.02839118
ACTUAL: array([[[ 1.201657e+00, -1.323477e-01]],
[[-3.268694e+01,  1.197531e+01]],...
DESIRED: array([[[ 1.201657e+00, -1.323495e-01]],
[[-3.268694e+01,  1.197532e+01]],...
2025-04-27 01:31:02.901212 test begin: paddle.minimum(Tensor([448, 1, 2],"float32"), Tensor([1, 5376, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([448, 1, 2],"float32"), Tensor([1, 5376, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 896 (0.112%)
Max absolute difference among violations: 0.18036938
Max relative difference among violations: 0.01358719
ACTUAL: array([[[ 1.202148e+01,  1.019635e+01]],
[[ 9.918691e-01,  2.352287e+01]],...
DESIRED: array([[[ 1.202148e+01,  1.019639e+01]],
[[ 9.918652e-01,  2.352286e+01]],...
2025-04-27 01:31:23.829058 test begin: paddle.minimum(Tensor([452, 1, 2],"float32"), Tensor([1, 6804, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([452, 1, 2],"float32"), Tensor([1, 6804, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 904 (0.111%)
Max absolute difference among violations: 0.1587925
Max relative difference among violations: 0.01391841
ACTUAL: array([[[ 1.634514e+01, -1.200195e+01]],
[[ 2.478221e+00, -9.625333e+00]],...
DESIRED: array([[[ 1.634513e+01, -1.200195e+01]],
[[ 2.478220e+00, -9.625338e+00]],...
2025-04-27 01:31:39.305970 test begin: paddle.minimum(Tensor([4562, 1, 2],"float32"), Tensor([135, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([4562, 1, 2],"float32"), Tensor([135, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 9124 (0.011%)
Max absolute difference among violations: 0.19347024
Max relative difference among violations: 0.9622213
ACTUAL: array([[[ 3.442853,  0.168366]],
[[ 0.230647, -2.262325]],...
DESIRED: array([[[ 3.442854,  0.168366]],
[[ 0.230647, -2.262325]],...
2025-04-27 01:31:58.618546 test begin: paddle.minimum(Tensor([4627, 1, 2],"float32"), Tensor([17, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([4627, 1, 2],"float32"), Tensor([17, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2 / 9254 (0.0216%)
Max absolute difference among violations: 0.22293395
Max relative difference among violations: 0.34144083
ACTUAL: array([[[ 0.549666, -0.384757]],
[[ 0.301716,  1.775611]],...
DESIRED: array([[[ 0.549666, -0.384757]],
[[ 0.301716,  1.775611]],...
2025-04-27 01:33:20.873516 test begin: paddle.minimum(Tensor([48, 1, 2],"float32"), Tensor([205923, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([48, 1, 2],"float32"), Tensor([205923, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 411846 (0.000243%)
Max absolute difference among violations: 0.03299391
Max relative difference among violations: 0.03289283
ACTUAL: array([[-0.238296,  0.026272],
[ 1.943457, -1.951278],
[ 0.271513, -0.640204],...
DESIRED: array([[-0.238297,  0.026272],
[ 1.943457, -1.951278],
[ 0.271513, -0.640204],...
2025-04-27 01:33:22.669397 test begin: paddle.minimum(Tensor([48, 1, 2],"float32"), Tensor([365211, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([48, 1, 2],"float32"), Tensor([365211, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 730422 (0.000137%)
Max absolute difference among violations: 0.07329416
Max relative difference among violations: 0.05626421
ACTUAL: array([[-1.234356,  1.306711],
[ 1.517851, -1.046917],
[-0.532117, -1.522731],...
DESIRED: array([[-1.234356,  1.306711],
[ 1.517852, -1.046917],
[-0.532117, -1.522731],...
2025-04-27 01:33:51.176703 test begin: paddle.minimum(Tensor([49, 1, 2],"float32"), Tensor([343728, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([49, 1, 2],"float32"), Tensor([343728, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 687456 (0.000145%)
Max absolute difference among violations: 0.1600149
Max relative difference among violations: 0.5353332
ACTUAL: array([[-1.594623, -1.312789],
[ 0.273751,  1.076304],
[ 1.509533, -1.473553],...
DESIRED: array([[-1.594623, -1.312788],
[ 0.273751,  1.076304],
[ 1.509533, -1.473553],...
2025-04-27 01:33:54.268642 test begin: paddle.minimum(Tensor([49, 1, 2],"float32"), Tensor([369303, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([49, 1, 2],"float32"), Tensor([369303, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 98 (1.02%)
Max absolute difference among violations: 0.11329794
Max relative difference among violations: 0.02124871
ACTUAL: array([[[ -54.884804,  383.16833 ]],
[[  72.88806 ,  -30.383188]],...
DESIRED: array([[[ -54.884945,  383.16214 ]],
[[  72.888275,  -30.383713]],...
2025-04-27 01:34:15.262905 test begin: paddle.minimum(Tensor([496, 1, 2],"float32"), Tensor([1, 5376, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([496, 1, 2],"float32"), Tensor([1, 5376, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 992 (0.101%)
Max absolute difference among violations: 0.10265875
Max relative difference among violations: 0.01762327
ACTUAL: array([[[-4.521262e+00, -4.289722e-01]],
[[ 1.341690e+01, -2.805183e+01]],...
DESIRED: array([[[-4.521267e+00, -4.289775e-01]],
[[ 1.341690e+01, -2.805184e+01]],...
2025-04-27 01:34:38.814216 test begin: paddle.minimum(Tensor([5, 1, 2],"float32"), Tensor([236313, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([5, 1, 2],"float32"), Tensor([236313, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 472626 (0.000212%)
Max absolute difference among violations: 0.06293386
Max relative difference among violations: 1.
ACTUAL: array([[-0.759293, -0.195377],
[-0.018898, -0.858167],
[ 0.111449, -1.243781],...
DESIRED: array([[-0.759293, -0.195377],
[-0.018898, -0.858167],
[ 0.111449, -1.243781],...
2025-04-27 01:34:43.018696 test begin: paddle.minimum(Tensor([5, 1, 2],"float32"), Tensor([250656, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([5, 1, 2],"float32"), Tensor([250656, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 501312 (0.000199%)
Max absolute difference among violations: 0.08559221
Max relative difference among violations: 0.25056797
ACTUAL: array([[-0.449293,  0.100201],
[ 0.179714,  0.      ],
[-0.330552,  0.798536],...
DESIRED: array([[-0.449293,  0.100201],
[ 0.179714,  0.      ],
[-0.330552,  0.798536],...
2025-04-27 01:34:49.806841 test begin: paddle.minimum(Tensor([5, 1, 2],"float32"), Tensor([285444, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([5, 1, 2],"float32"), Tensor([285444, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 570888 (0.000175%)
Max absolute difference among violations: 0.15155488
Max relative difference among violations: 0.7809531
ACTUAL: array([[ 0.257042, -0.390236],
[-0.103709, -0.5278  ],
[ 1.058941, -0.162651],...
DESIRED: array([[ 0.257042, -0.390236],
[-0.103709, -0.5278  ],
[ 1.058941, -0.162651],...
2025-04-27 01:34:59.716225 test begin: paddle.minimum(Tensor([5, 1, 2],"float32"), Tensor([329205, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([5, 1, 2],"float32"), Tensor([329205, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 658410 (0.000152%)
Max absolute difference among violations: 0.18341215
Max relative difference among violations: 1.
ACTUAL: array([[-0.558701,  0.      ],
[-0.55712 ,  0.233635],
[-0.233722,  0.633366],...
DESIRED: array([[-0.558701,  0.      ],
[-0.55712 ,  0.233635],
[-0.233722,  0.633366],...
2025-04-27 01:35:02.813027 test begin: paddle.minimum(Tensor([5, 1, 2],"float32"), Tensor([343728, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([5, 1, 2],"float32"), Tensor([343728, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 687456 (0.000145%)
Max absolute difference among violations: 0.21186131
Max relative difference among violations: 0.24801354
ACTUAL: array([[-0.005392,  0.      ],
[ 0.432051,  0.850237],
[ 0.      ,  0.319873],...
DESIRED: array([[-0.005392,  0.      ],
[ 0.432051,  0.850237],
[ 0.      ,  0.319873],...
2025-04-27 01:35:06.831083 test begin: paddle.minimum(Tensor([5, 1, 2],"float32"), Tensor([368280, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([5, 1, 2],"float32"), Tensor([368280, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 736560 (0.000136%)
Max absolute difference among violations: 0.16020742
Max relative difference among violations: 1.5600767
ACTUAL: array([[-0.004166,  0.718188],
[-0.674138, -0.064341],
[ 0.      , -0.966322],...
DESIRED: array([[-0.004166,  0.718188],
[-0.674138, -0.064341],
[ 0.      , -0.966322],...
2025-04-27 01:36:02.446758 test begin: paddle.minimum(Tensor([512, 1, 2],"float32"), Tensor([1, 5376, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([512, 1, 2],"float32"), Tensor([1, 5376, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1024 (0.0977%)
Max absolute difference among violations: 0.19327259
Max relative difference among violations: 0.05047431
ACTUAL: array([[[ 23.103777,  -8.755187]],
[[-21.510769,  -1.152466]],...
DESIRED: array([[[ 23.103767,  -8.755186]],
[[-21.51078 ,  -1.152442]],...
2025-04-27 01:36:57.853404 test begin: paddle.minimum(Tensor([5358, 1, 2],"float32"), Tensor([180, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([5358, 1, 2],"float32"), Tensor([180, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 10716 (0.00933%)
Max absolute difference among violations: 0.18877038
Max relative difference among violations: 0.42048177
ACTUAL: array([[[-1.611767,  0.442071]],
[[-1.086918,  0.307225]],...
DESIRED: array([[[-1.611766,  0.442071]],
[[-1.086918,  0.307225]],...
2025-04-27 01:37:30.975149 test begin: paddle.minimum(Tensor([55, 1, 2],"float32"), Tensor([349866, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([55, 1, 2],"float32"), Tensor([349866, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2 / 699732 (0.000286%)
Max absolute difference among violations: 0.12269998
Max relative difference among violations: 5.8984
ACTUAL: array([[ 0.953039, -0.376532],
[-1.313195, -0.243814],
[ 1.948106, -0.47962 ],...
DESIRED: array([[ 0.953039, -0.376532],
[-1.313195, -0.243814],
[ 1.948106, -0.47962 ],...
2025-04-27 01:37:34.256619 test begin: paddle.minimum(Tensor([55, 1, 2],"float32"), Tensor([81000, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([55, 1, 2],"float32"), Tensor([81000, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 162000 (0.000617%)
Max absolute difference among violations: 0.11700088
Max relative difference among violations: 0.14494523
ACTUAL: array([[-1.152578,  0.144647],
[ 0.614772,  0.932484],
[ 0.648575,  2.536949],...
DESIRED: array([[-1.152578,  0.144647],
[ 0.614772,  0.932485],
[ 0.648575,  2.536949],...
2025-04-27 01:38:08.462760 test begin: paddle.minimum(Tensor([5635, 1, 2],"float32"), Tensor([121, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([5635, 1, 2],"float32"), Tensor([121, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 11270 (0.00887%)
Max absolute difference among violations: 0.07785159
Max relative difference among violations: 0.14928289
ACTUAL: array([[[-0.609695, -0.552146]],
[[-0.19102 , -1.46177 ]],...
DESIRED: array([[[-0.609695, -0.552146]],
[[-0.191021, -1.461769]],...
2025-04-27 01:38:32.007453 test begin: paddle.minimum(Tensor([576, 1, 2],"float32"), Tensor([1, 8400, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([576, 1, 2],"float32"), Tensor([1, 8400, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 16800 (0.00595%)
Max absolute difference among violations: 0.02500641
Max relative difference among violations: 0.08997555
ACTUAL: array([[[ -0.848271, -10.489818],
[  2.988013,  -4.484025],
[ -2.467176,   0.271255],...
DESIRED: array([[[ -0.848271, -10.489819],
[  2.988013,  -4.484023],
[ -2.467179,   0.271255],...
2025-04-27 01:38:32.990941 test begin: paddle.minimum(Tensor([576, 1, 2],"float32"), Tensor([1, 9261, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([576, 1, 2],"float32"), Tensor([1, 9261, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 18522 (0.0054%)
Max absolute difference among violations: 0.09672499
Max relative difference among violations: 0.01317746
ACTUAL: array([[[  1.690591,   2.001935],
[ -2.865229,   6.875026],
[ -2.751559,  -1.69307 ],...
DESIRED: array([[[  1.690591,   2.001934],
[ -2.865229,   6.875026],
[ -2.75156 ,  -1.69307 ],...
2025-04-27 01:39:44.968268 test begin: paddle.minimum(Tensor([6, 1, 2],"float32"), Tensor([220968, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([6, 1, 2],"float32"), Tensor([220968, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 441936 (0.000226%)
Max absolute difference among violations: 0.22586317
Max relative difference among violations: 1.0357317
ACTUAL: array([[ 0.734886,  1.264091],
[ 0.430502, -0.272028],
[ 1.142295, -0.129024],...
DESIRED: array([[ 0.734886,  1.264091],
[ 0.430502, -0.272028],
[ 1.142295, -0.129024],...
2025-04-27 01:39:49.338743 test begin: paddle.minimum(Tensor([6, 1, 2],"float32"), Tensor([242991, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([6, 1, 2],"float32"), Tensor([242991, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 485982 (0.000206%)
Max absolute difference among violations: 0.05882325
Max relative difference among violations: 1.
ACTUAL: array([[ 0.045233,  0.694078],
[ 0.      , -0.050088],
[-0.502868, -0.910628],...
DESIRED: array([[ 0.045233,  0.694078],
[ 0.      , -0.050088],
[-0.502868, -0.910628],...
2025-04-27 01:39:50.868013 test begin: paddle.minimum(Tensor([6, 1, 2],"float32"), Tensor([247086, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([6, 1, 2],"float32"), Tensor([247086, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 494172 (0.000202%)
Max absolute difference among violations: 0.11051363
Max relative difference among violations: 0.1581691
ACTUAL: array([[ 0.      , -0.438405],
[ 0.469903, -0.576525],
[ 0.466145,  1.115337],...
DESIRED: array([[ 0.      , -0.438406],
[ 0.469903, -0.576525],
[ 0.466145,  1.115337],...
2025-04-27 01:39:54.953834 test begin: paddle.minimum(Tensor([6, 1, 2],"float32"), Tensor([261888, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([6, 1, 2],"float32"), Tensor([261888, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 523776 (0.000191%)
Max absolute difference among violations: 0.03310589
Max relative difference among violations: 1.
ACTUAL: array([[ 0.343141,  0.243246],
[ 0.27512 , -0.306748],
[-0.370654, -0.399166],...
DESIRED: array([[ 0.343141,  0.243246],
[ 0.27512 , -0.306748],
[-0.370654, -0.399166],...
2025-04-27 01:39:56.422166 test begin: paddle.minimum(Tensor([6, 1, 2],"float32"), Tensor([268560, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([6, 1, 2],"float32"), Tensor([268560, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 537120 (0.000186%)
Max absolute difference among violations: 0.02210353
Max relative difference among violations: 0.294784
ACTUAL: array([[ 1.276486, -0.580415],
[ 0.616947, -0.317179],
[-0.089465,  0.293282],...
DESIRED: array([[ 1.276486, -0.580415],
[ 0.616947, -0.317179],
[-0.089465,  0.293282],...
2025-04-27 01:40:12.899472 test begin: paddle.minimum(Tensor([6, 1, 2],"float32"), Tensor([339150, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([6, 1, 2],"float32"), Tensor([339150, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 678300 (0.000147%)
Max absolute difference among violations: 0.04992402
Max relative difference among violations: 0.03898564
ACTUAL: array([[ 0.292615, -0.647189],
[ 0.197184,  1.064652],
[ 0.      ,  0.494376],...
DESIRED: array([[ 0.292615, -0.64719 ],
[ 0.197184,  1.064652],
[ 0.      ,  0.494376],...
2025-04-27 01:40:38.015136 test begin: paddle.minimum(Tensor([6, 1, 2],"float32"), Tensor([80640, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([6, 1, 2],"float32"), Tensor([80640, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 161280 (0.00062%)
Max absolute difference among violations: 0.06791723
Max relative difference among violations: 0.11588772
ACTUAL: array([[ 0.      ,  0.      ],
[ 0.48686 ,  0.      ],
[ 0.      ,  0.      ],...
DESIRED: array([[ 0.      ,  0.      ],
[ 0.48686 ,  0.      ],
[ 0.      ,  0.      ],...
2025-04-27 01:41:33.860102 test begin: paddle.minimum(Tensor([624, 1, 2],"float32"), Tensor([1, 2541, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([624, 1, 2],"float32"), Tensor([1, 2541, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1248 (0.0801%)
Max absolute difference among violations: 0.05631113
Max relative difference among violations: 0.02226759
ACTUAL: array([[[-25.267166,   6.542917]],
[[  5.164871,   7.178057]],...
DESIRED: array([[[-25.267176,   6.542916]],
[[  5.164871,   7.178054]],...
2025-04-27 01:41:34.897864 test begin: paddle.minimum(Tensor([624, 1, 2],"float32"), Tensor([1, 3549, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([624, 1, 2],"float32"), Tensor([1, 3549, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 7098 (0.0141%)
Max absolute difference among violations: 0.05224808
Max relative difference among violations: 0.42814794
ACTUAL: array([[[-0.377664, -0.860855],
[ 3.904311,  1.091451],
[ 0.390832,  4.79006 ],...
DESIRED: array([[[-0.377665, -0.860855],
[ 3.904312,  1.091451],
[ 0.390831,  4.790059],...
2025-04-27 01:42:10.991693 test begin: paddle.minimum(Tensor([64, 16, 1, 2],"float32"), Tensor([64, 1, 2577, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([64, 16, 1, 2],"float32"), Tensor([64, 1, 2577, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 2048 (0.0488%)
Max absolute difference among violations: 0.21271133
Max relative difference among violations: 0.01175578
ACTUAL: array([[[[ -8.893069,  -5.124677]],
[[  8.791459,   3.291158]],...
DESIRED: array([[[[ -8.89307 ,  -5.124675]],
[[  8.791468,   3.291157]],...
2025-04-27 01:42:14.447947 test begin: paddle.minimum(Tensor([64, 18, 1, 2],"float32"), Tensor([64, 1, 1360, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([64, 18, 1, 2],"float32"), Tensor([64, 1, 1360, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 2304 (0.0434%)
Max absolute difference among violations: 0.04483962
Max relative difference among violations: 0.02412446
ACTUAL: array([[[[  0.913889,   1.671415]],
[[  2.01953 ,   2.548599]],...
DESIRED: array([[[[  0.913889,   1.671413]],
[[  2.019532,   2.548598]],...
2025-04-27 01:42:16.597234 test begin: paddle.minimum(Tensor([64, 18, 1, 2],"float32"), Tensor([64, 1, 3060, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([64, 18, 1, 2],"float32"), Tensor([64, 1, 3060, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 2304 (0.0434%)
Max absolute difference among violations: 0.24994087
Max relative difference among violations: 0.01334337
ACTUAL: array([[[[-13.478865,  -4.941449]],
[[  1.890339, -10.845471]],...
DESIRED: array([[[[-13.478848,  -4.94144 ]],
[[  1.89034 , -10.845468]],...
2025-04-27 01:42:18.812099 test begin: paddle.minimum(Tensor([64, 19, 1, 2],"float32"), Tensor([64, 1, 2577, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([64, 19, 1, 2],"float32"), Tensor([64, 1, 2577, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 2432 (0.0411%)
Max absolute difference among violations: 0.04845369
Max relative difference among violations: 0.15944803
ACTUAL: array([[[[ 7.227882e+00,  4.968084e+00]],
[[-1.314659e+00,  3.705517e-01]],...
DESIRED: array([[[[ 7.227881e+00,  4.968090e+00]],
[[-1.314653e+00,  3.705498e-01]],...
2025-04-27 01:42:28.954794 test begin: paddle.minimum(Tensor([64, 22, 1, 2],"float32"), Tensor([64, 1, 3060, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([64, 22, 1, 2],"float32"), Tensor([64, 1, 3060, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 391680 (0.000255%)
Max absolute difference among violations: 0.1283724
Max relative difference among violations: 14.967382
ACTUAL: array([[[[-1.917778, -1.643243],
[-0.471916,  0.154925],
[-1.090449, -0.189075],...
DESIRED: array([[[[-1.917778, -1.643243],
[-0.471916,  0.154925],
[-1.090449, -0.189075],...
2025-04-27 01:42:29.844839 test begin: paddle.minimum(Tensor([64, 23, 1, 2],"float32"), Tensor([64, 1, 1360, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([64, 23, 1, 2],"float32"), Tensor([64, 1, 1360, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 174080 (0.000574%)
Max absolute difference among violations: 0.1374785
Max relative difference among violations: 0.25439364
ACTUAL: array([[[[ 1.114079e+00,  1.695035e+00],
[-7.697219e-01, -1.339216e+00],
[ 0.000000e+00,  2.809983e+00],...
DESIRED: array([[[[ 1.114079e+00,  1.695035e+00],
[-7.697219e-01, -1.339216e+00],
[ 0.000000e+00,  2.809983e+00],...
2025-04-27 01:42:31.522936 test begin: paddle.minimum(Tensor([64, 23, 1, 2],"float32"), Tensor([64, 1, 2577, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([64, 23, 1, 2],"float32"), Tensor([64, 1, 2577, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 2944 (0.034%)
Max absolute difference among violations: 0.21113715
Max relative difference among violations: 1.0851239
ACTUAL: array([[[[  4.212815,   6.14549 ]],
[[  9.069822,   5.847908]],...
DESIRED: array([[[[  4.212809,   6.145486]],
[[  9.069817,   5.84791 ]],...
2025-04-27 01:42:35.748729 test begin: paddle.minimum(Tensor([64, 24, 1, 2],"float32"), Tensor([64, 1, 3060, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([64, 24, 1, 2],"float32"), Tensor([64, 1, 3060, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 3072 (0.0326%)
Max absolute difference among violations: 0.22237444
Max relative difference among violations: 0.07772329
ACTUAL: array([[[[ -0.703389, -11.670792]],
[[ -4.563686,   4.894714]],...
DESIRED: array([[[[ -0.703388, -11.670794]],
[[ -4.563684,   4.894713]],...
2025-04-27 01:42:43.022114 test begin: paddle.minimum(Tensor([64, 26, 1, 2],"float32"), Tensor([64, 1, 3060, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([64, 26, 1, 2],"float32"), Tensor([64, 1, 3060, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 3328 (0.03%)
Max absolute difference among violations: 0.20239305
Max relative difference among violations: 0.14020498
ACTUAL: array([[[[ 15.066184, -14.694103]],
[[-14.464317,  -2.796723]],...
DESIRED: array([[[[ 15.066181, -14.694109]],
[[-14.464308,  -2.796722]],...
2025-04-27 01:42:47.026609 test begin: paddle.minimum(Tensor([64, 27, 1, 2],"float32"), Tensor([64, 1, 3060, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([64, 27, 1, 2],"float32"), Tensor([64, 1, 3060, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 3456 (0.0289%)
Max absolute difference among violations: 0.1117962
Max relative difference among violations: 0.12113173
ACTUAL: array([[[[-23.27864 ,   3.599071]],
[[  3.198402,   0.799641]],...
DESIRED: array([[[[-23.278652,   3.599072]],
[[  3.198405,   0.799641]],...
2025-04-27 01:43:01.629484 test begin: paddle.minimum(Tensor([64, 31, 1, 2],"float32"), Tensor([64, 1, 2125, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([64, 31, 1, 2],"float32"), Tensor([64, 1, 2125, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 272000 (0.000368%)
Max absolute difference among violations: 0.01020102
Max relative difference among violations: 1.
ACTUAL: array([[[[ 1.597995,  0.608624],
[ 0.380345, -0.970572],
[-0.286947, -0.259888],...
DESIRED: array([[[[ 1.597995,  0.608624],
[ 0.380345, -0.970572],
[-0.286947, -0.259888],...
2025-04-27 01:43:04.797137 test begin: paddle.minimum(Tensor([64, 32, 1, 2],"float32"), Tensor([64, 1, 1360, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([64, 32, 1, 2],"float32"), Tensor([64, 1, 1360, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 4096 (0.0244%)
Max absolute difference among violations: 0.14071274
Max relative difference among violations: 0.03108979
ACTUAL: array([[[[ -0.04355 ,   8.075318]],
[[  1.46629 ,  -7.212242]],...
DESIRED: array([[[[ -0.043545,   8.075325]],
[[  1.46629 ,  -7.212242]],...
2025-04-27 01:43:27.760979 test begin: paddle.minimum(Tensor([64, 37, 1, 2],"float32"), Tensor([64, 1, 2577, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([64, 37, 1, 2],"float32"), Tensor([64, 1, 2577, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 4736 (0.0211%)
Max absolute difference among violations: 0.2053479
Max relative difference among violations: 0.12944745
ACTUAL: array([[[[  0.275124,  -1.514811]],
[[ -2.218527,  -3.484932]],...
DESIRED: array([[[[  0.275126,  -1.514811]],
[[ -2.218528,  -3.48493 ]],...
2025-04-27 01:43:31.507464 test begin: paddle.minimum(Tensor([64, 38, 1, 2],"float32"), Tensor([64, 1, 3060, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([64, 38, 1, 2],"float32"), Tensor([64, 1, 3060, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 391680 (0.000255%)
Max absolute difference among violations: 0.03499281
Max relative difference among violations: 0.01746767
ACTUAL: array([[[[-0.389915,  1.405511],
[-2.286944,  0.807871],
[ 1.369499, -1.599665],...
DESIRED: array([[[[-0.389915,  1.405511],
[-2.286943,  0.807871],
[ 1.369499, -1.599665],...
2025-04-27 01:43:34.865893 test begin: paddle.minimum(Tensor([64, 39, 1, 2],"float32"), Tensor([64, 1, 2577, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([64, 39, 1, 2],"float32"), Tensor([64, 1, 2577, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 329856 (0.000303%)
Max absolute difference among violations: 0.07264173
Max relative difference among violations: 0.04430823
ACTUAL: array([[[[ 1.553799, -0.479218],
[ 0.196658,  1.434092],
[ 0.749848,  0.953865],...
DESIRED: array([[[[ 1.553799, -0.479218],
[ 0.196657,  1.434092],
[ 0.749848,  0.953865],...
2025-04-27 01:43:39.470050 test begin: paddle.minimum(Tensor([64, 41, 1, 2],"float32"), Tensor([64, 1, 1360, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([64, 41, 1, 2],"float32"), Tensor([64, 1, 1360, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2 / 5248 (0.0381%)
Max absolute difference among violations: 0.19023657
Max relative difference among violations: 0.62398785
ACTUAL: array([[[[ -9.203111,   2.666565]],
[[  0.589373,  16.542784]],...
DESIRED: array([[[[ -9.203112,   2.666566]],
[[  0.589372,  16.542778]],...
2025-04-27 01:43:48.371051 test begin: paddle.minimum(Tensor([64, 43, 1, 2],"float32"), Tensor([64, 1, 3060, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([64, 43, 1, 2],"float32"), Tensor([64, 1, 3060, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 391680 (0.000255%)
Max absolute difference among violations: 0.06476426
Max relative difference among violations: 0.02758385
ACTUAL: array([[[[-0.962375, -0.852073],
[-2.63071 ,  0.866964],
[-1.502702,  0.096907],...
DESIRED: array([[[[-0.962375, -0.852073],
[-2.63071 ,  0.866964],
[-1.502702,  0.096907],...
2025-04-27 01:44:02.537262 test begin: paddle.minimum(Tensor([64, 51, 1, 2],"float32"), Tensor([64, 1, 3060, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([64, 51, 1, 2],"float32"), Tensor([64, 1, 3060, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 6528 (0.0153%)
Max absolute difference among violations: 0.20234346
Max relative difference among violations: 0.02977099
ACTUAL: array([[[[-16.054949,  12.400883]],
[[ -9.6386  ,  -4.334153]],...
DESIRED: array([[[[-16.054935,  12.400876]],
[[ -9.638596,  -4.334149]],...
2025-04-27 01:44:06.155053 test begin: paddle.minimum(Tensor([64, 53, 1, 2],"float32"), Tensor([64, 1, 1360, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([64, 53, 1, 2],"float32"), Tensor([64, 1, 1360, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 174080 (0.000574%)
Max absolute difference among violations: 0.02527177
Max relative difference among violations: 0.07641913
ACTUAL: array([[[[ 1.561188, -1.521616],
[-0.400663, -0.900638],
[-0.49932 ,  0.211602],...
DESIRED: array([[[[ 1.561188, -1.521616],
[-0.400663, -0.900638],
[-0.49932 ,  0.211602],...
2025-04-27 01:44:07.121913 test begin: paddle.minimum(Tensor([64, 53, 1, 2],"float32"), Tensor([64, 1, 1726, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([64, 53, 1, 2],"float32"), Tensor([64, 1, 1726, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 220928 (0.000453%)
Max absolute difference among violations: 0.0171659
Max relative difference among violations: 0.02435804
ACTUAL: array([[[[ 0.781841,  0.53521 ],
[ 0.497543, -0.957645],
[ 0.897794, -1.732124],...
DESIRED: array([[[[ 0.781841,  0.53521 ],
[ 0.497543, -0.957646],
[ 0.897794, -1.732125],...
2025-04-27 01:44:08.231424 test begin: paddle.minimum(Tensor([64, 54, 1, 2],"float32"), Tensor([64, 1, 3060, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([64, 54, 1, 2],"float32"), Tensor([64, 1, 3060, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 6912 (0.0145%)
Max absolute difference among violations: 0.23354912
Max relative difference among violations: 0.01224736
ACTUAL: array([[[[-10.62283 ,  -1.176828]],
[[ 14.020656,  -2.506257]],...
DESIRED: array([[[[-10.622831,  -1.176826]],
[[ 14.020655,  -2.506271]],...
2025-04-27 01:44:13.281803 test begin: paddle.minimum(Tensor([640, 1, 2],"float32"), Tensor([1, 3549, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([640, 1, 2],"float32"), Tensor([1, 3549, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1280 (0.0781%)
Max absolute difference among violations: 0.1047163
Max relative difference among violations: 0.0333983
ACTUAL: array([[[ -6.561673,  -1.420272]],
[[ -2.872576,  -2.814636]],...
DESIRED: array([[[ -6.56167 ,  -1.420271]],
[[ -2.872571,  -2.814631]],...
2025-04-27 01:44:39.603891 test begin: paddle.minimum(Tensor([652, 1, 2],"float32"), Tensor([1, 4116, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([652, 1, 2],"float32"), Tensor([1, 4116, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1304 (0.0767%)
Max absolute difference among violations: 0.09067059
Max relative difference among violations: 0.03198492
ACTUAL: array([[[-18.02002 ,   3.832006]],
[[  6.283706, -11.54323 ]],...
DESIRED: array([[[-18.02003 ,   3.83201 ]],
[[  6.283703, -11.543219]],...
2025-04-27 01:45:08.287033 test begin: paddle.minimum(Tensor([668, 1, 2],"float32"), Tensor([1, 8400, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([668, 1, 2],"float32"), Tensor([1, 8400, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1336 (0.0749%)
Max absolute difference among violations: 0.14458585
Max relative difference among violations: 0.0767528
ACTUAL: array([[[ -2.700564,   7.863325]],
[[  0.897727,  -0.694212]],...
DESIRED: array([[[ -2.700562,   7.863316]],
[[  0.897766,  -0.694208]],...
2025-04-27 01:45:48.754826 test begin: paddle.minimum(Tensor([688, 1, 2],"float32"), Tensor([1, 10164, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([688, 1, 2],"float32"), Tensor([1, 10164, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1376 (0.0727%)
Max absolute difference among violations: 0.14391899
Max relative difference among violations: 0.02403907
ACTUAL: array([[[ 21.519848, -10.077457]],
[[ 20.73255 ,  -9.512444]],...
DESIRED: array([[[ 21.519892, -10.077463]],
[[ 20.732555,  -9.51244 ]],...
2025-04-27 01:46:27.293685 test begin: paddle.minimum(Tensor([7, 1, 2],"float32"), Tensor([193368, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([7, 1, 2],"float32"), Tensor([193368, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 14 (7.14%)
Max absolute difference among violations: 0.21694183
Max relative difference among violations: 0.01471455
ACTUAL: array([[[  24.664738,   86.123055]],
[[-175.59068 , -175.69588 ]],...
DESIRED: array([[[  24.664501,   86.12229 ]],
[[-175.59077 , -175.69576 ]],...
2025-04-27 01:46:34.439661 test begin: paddle.minimum(Tensor([7, 1, 2],"float32"), Tensor([236334, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([7, 1, 2],"float32"), Tensor([236334, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 472668 (0.000212%)
Max absolute difference among violations: 0.18505742
Max relative difference among violations: 1.
ACTUAL: array([[-1.042839, -0.054922],
[ 0.099063, -0.751029],
[ 0.      , -0.318207],...
DESIRED: array([[-1.042839, -0.054922],
[ 0.099063, -0.751029],
[ 0.      , -0.318207],...
2025-04-27 01:46:46.444939 test begin: paddle.minimum(Tensor([7, 1, 2],"float32"), Tensor([283905, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([7, 1, 2],"float32"), Tensor([283905, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 14 (7.14%)
Max absolute difference among violations: 0.11618233
Max relative difference among violations: 0.06966438
ACTUAL: array([[[   1.551561, -244.40245 ]],
[[-144.93134 ,  -70.3765  ]],...
DESIRED: array([[[   1.667744, -244.39914 ]],
[[-144.93094 ,  -70.37753 ]],...
2025-04-27 01:46:46.908453 test begin: paddle.minimum(Tensor([7, 1, 2],"float32"), Tensor([285444, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([7, 1, 2],"float32"), Tensor([285444, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 14 (7.14%)
Max absolute difference among violations: 0.24804497
Max relative difference among violations: 0.06904459
ACTUAL: array([[[172.00386 ,  10.119513]],
[[ 22.967268,  -3.840578]],...
DESIRED: array([[[172.00417 ,  10.119675]],
[[ 22.967297,  -3.592533]],...
2025-04-27 01:46:48.205745 test begin: paddle.minimum(Tensor([7, 1, 2],"float32"), Tensor([286977, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([7, 1, 2],"float32"), Tensor([286977, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 573954 (0.000174%)
Max absolute difference among violations: 0.0346393
Max relative difference among violations: 2.857218
ACTUAL: array([[-0.884305, -0.678729],
[ 1.11135 , -0.473917],
[ 0.277413,  0.036802],...
DESIRED: array([[-0.884305, -0.678729],
[ 1.11135 , -0.473917],
[ 0.277413,  0.036802],...
2025-04-27 01:46:54.531522 test begin: paddle.minimum(Tensor([7, 1, 2],"float32"), Tensor([317160, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([7, 1, 2],"float32"), Tensor([317160, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 634320 (0.000158%)
Max absolute difference among violations: 0.040694
Max relative difference among violations: 0.02928163
ACTUAL: array([[-0.239213, -0.47175 ],
[-0.001259,  0.391096],
[-0.389021,  0.980104],...
DESIRED: array([[-0.239213, -0.47175 ],
[-0.001259,  0.391096],
[-0.389021,  0.980104],...
2025-04-27 01:47:03.929749 test begin: paddle.minimum(Tensor([7, 1, 2],"float32"), Tensor([359613, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([7, 1, 2],"float32"), Tensor([359613, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 719226 (0.000139%)
Max absolute difference among violations: 0.19949108
Max relative difference among violations: 1.9833852
ACTUAL: array([[-0.340601,  0.276222],
[-0.021789,  1.459362],
[ 0.018062, -0.042915],...
DESIRED: array([[-0.340601,  0.276222],
[-0.021789,  1.459362],
[ 0.018062, -0.042915],...
2025-04-27 01:47:10.822688 test begin: paddle.minimum(Tensor([7, 1, 2],"float32"), Tensor([44220, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([7, 1, 2],"float32"), Tensor([44220, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 14 (7.14%)
Max absolute difference among violations: 0.17207241
Max relative difference among violations: 0.02092908
ACTUAL: array([[[ 19.647255,  22.936378]],
[[ 36.88743 ,   0.309309]],...
DESIRED: array([[[ 19.647263,  22.936459]],
[[ 36.88749 ,   0.309341]],...
2025-04-27 01:47:20.124938 test begin: paddle.minimum(Tensor([7, 1, 2],"float32"), Tensor([73920, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([7, 1, 2],"float32"), Tensor([73920, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 147840 (0.000676%)
Max absolute difference among violations: 0.01521534
Max relative difference among violations: 0.05209912
ACTUAL: array([[ 0.121507,  0.140768],
[ 0.357888,  1.263321],
[ 0.07568 , -0.55872 ],...
DESIRED: array([[ 0.121507,  0.140768],
[ 0.357888,  1.263321],
[ 0.07568 , -0.55872 ],...
2025-04-27 01:47:22.517808 test begin: paddle.minimum(Tensor([7, 1, 2],"float32"), Tensor([81000, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([7, 1, 2],"float32"), Tensor([81000, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 162000 (0.000617%)
Max absolute difference among violations: 0.09293562
Max relative difference among violations: 0.30433005
ACTUAL: array([[-0.962337, -0.423365],
[-0.393625, -0.278636],
[ 0.186255,  0.336697],...
DESIRED: array([[-0.962337, -0.423365],
[-0.393625, -0.278636],
[ 0.186255,  0.336697],...
2025-04-27 01:47:23.500510 test begin: paddle.minimum(Tensor([7, 1, 2],"float32"), Tensor([86940, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([7, 1, 2],"float32"), Tensor([86940, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 173880 (0.000575%)
Max absolute difference among violations: 0.21114224
Max relative difference among violations: 0.31771293
ACTUAL: array([[ 0.641887,  0.      ],
[-0.037216,  0.      ],
[ 0.      ,  0.      ],...
DESIRED: array([[ 0.641887,  0.      ],
[-0.037216,  0.      ],
[ 0.      ,  0.      ],...
2025-04-27 01:48:00.917201 test begin: paddle.minimum(Tensor([72, 1, 2],"float32"), Tensor([1, 6069, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([72, 1, 2],"float32"), Tensor([1, 6069, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 144 (0.694%)
Max absolute difference among violations: 0.10430622
Max relative difference among violations: 0.02073348
ACTUAL: array([[[ 7.171329e+00,  5.562372e+00]],
[[ 4.713042e+00, -1.650191e+01]],...
DESIRED: array([[[ 7.171329e+00,  5.562374e+00]],
[[ 4.713040e+00, -1.650195e+01]],...
2025-04-27 01:49:27.910352 test begin: paddle.minimum(Tensor([768, 1, 2],"float32"), Tensor([1, 6804, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([768, 1, 2],"float32"), Tensor([1, 6804, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 13608 (0.00735%)
Max absolute difference among violations: 0.20320034
Max relative difference among violations: 0.03220505
ACTUAL: array([[[-3.856693, -5.322948],
[ 8.188382, -4.548237],
[ 1.249739, -4.466429],...
DESIRED: array([[[-3.856692, -5.322952],
[ 8.188384, -4.548237],
[ 1.249737, -4.466429],...
2025-04-27 01:50:14.286471 test begin: paddle.minimum(Tensor([792, 1, 2],"float32"), Tensor([24, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([792, 1, 2],"float32"), Tensor([24, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1584 (0.0631%)
Max absolute difference among violations: 0.1783036
Max relative difference among violations: 0.17913349
ACTUAL: array([[[-0.901578,  0.278238]],
[[ 1.965314,  0.      ]],...
DESIRED: array([[[-0.901578,  0.278238]],
[[ 1.965314,  0.      ]],...
2025-04-27 01:50:42.476861 test begin: paddle.minimum(Tensor([8, 1, 2],"float32"), Tensor([230202, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([8, 1, 2],"float32"), Tensor([230202, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 460404 (0.000217%)
Max absolute difference among violations: 0.0841447
Max relative difference among violations: 1.
ACTUAL: array([[ 0.160864,  0.481706],
[-0.188433,  0.      ],
[-0.275792, -0.456661],...
DESIRED: array([[ 0.160864,  0.481706],
[-0.188433,  0.      ],
[-0.275792, -0.456661],...
2025-04-27 01:50:42.869662 test begin: paddle.minimum(Tensor([8, 1, 2],"float32"), Tensor([234804, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([8, 1, 2],"float32"), Tensor([234804, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 469608 (0.000213%)
Max absolute difference among violations: 0.24749269
Max relative difference among violations: 1.
ACTUAL: array([[ 0.223333, -0.679402],
[-0.051026, -0.52223 ],
[ 0.204498,  1.242204],...
DESIRED: array([[ 0.223333, -0.679402],
[-0.051026, -0.52223 ],
[ 0.204498,  1.242204],...
2025-04-27 01:50:48.294600 test begin: paddle.minimum(Tensor([8, 1, 2],"float32"), Tensor([260865, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([8, 1, 2],"float32"), Tensor([260865, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 16 (6.25%)
Max absolute difference among violations: 0.11267948
Max relative difference among violations: 0.01830424
ACTUAL: array([[[ -78.37037 ,   31.415407]],
[[-218.82617 ,  -65.43485 ]],...
DESIRED: array([[[ -78.37106 ,   31.414974]],
[[-218.82565 ,  -65.43503 ]],...
2025-04-27 01:50:49.217400 test begin: paddle.minimum(Tensor([8, 1, 2],"float32"), Tensor([261888, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([8, 1, 2],"float32"), Tensor([261888, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 16 (6.25%)
Max absolute difference among violations: 0.06456029
Max relative difference among violations: 0.04649021
ACTUAL: array([[[  58.265465,  -78.73115 ]],
[[ -74.37446 , -157.88586 ]],...
DESIRED: array([[[  58.26541 ,  -78.731064]],
[[ -74.37395 , -157.886   ]],...
2025-04-27 01:51:10.977583 test begin: paddle.minimum(Tensor([8, 1, 2],"float32"), Tensor([349155, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([8, 1, 2],"float32"), Tensor([349155, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 698310 (0.000143%)
Max absolute difference among violations: 0.19517589
Max relative difference among violations: 0.62220323
ACTUAL: array([[-0.747724,  0.077839],
[ 0.      ,  1.04599 ],
[ 0.649561, -0.042816],...
DESIRED: array([[-0.747725,  0.077839],
[ 0.      ,  1.045991],
[ 0.649561, -0.042816],...
2025-04-27 01:51:15.359334 test begin: paddle.minimum(Tensor([8, 1, 2],"float32"), Tensor([379050, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([8, 1, 2],"float32"), Tensor([379050, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 16 (6.25%)
Max absolute difference among violations: 0.20265853
Max relative difference among violations: 0.11203201
ACTUAL: array([[[  64.22232 ,  -84.93186 ]],
[[  64.60452 ,  -50.11332 ]],...
DESIRED: array([[[  64.22316 ,  -84.93137 ]],
[[  64.604324,  -50.111267]],...
2025-04-27 01:51:43.284796 test begin: paddle.minimum(Tensor([8, 12, 1, 2],"float32"), Tensor([8, 1, 6804, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([8, 12, 1, 2],"float32"), Tensor([8, 1, 6804, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 108864 (0.000919%)
Max absolute difference among violations: 0.06500126
Max relative difference among violations: 0.48791957
ACTUAL: array([[[[-0.622989, -0.311017],
[ 0.274943,  0.713827],
[ 0.426438, -0.300131],...
DESIRED: array([[[[-0.622989, -0.311017],
[ 0.274943,  0.713827],
[ 0.426438, -0.300131],...
2025-04-27 01:51:57.232389 test begin: paddle.minimum(Tensor([8, 15, 1, 2],"float32"), Tensor([8, 1, 6069, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([8, 15, 1, 2],"float32"), Tensor([8, 1, 6069, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 97104 (0.00103%)
Max absolute difference among violations: 0.04078758
Max relative difference among violations: 0.034947
ACTUAL: array([[[[-0.300798, -0.040988],
[-0.213439,  0.542646],
[ 0.679116,  0.783852],...
DESIRED: array([[[[-0.300798, -0.040988],
[-0.213439,  0.542646],
[ 0.679116,  0.783852],...
2025-04-27 01:51:58.055634 test begin: paddle.minimum(Tensor([8, 15, 1, 2],"float32"), Tensor([8, 1, 8400, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([8, 15, 1, 2],"float32"), Tensor([8, 1, 8400, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 134400 (0.000744%)
Max absolute difference among violations: 0.14336526
Max relative difference among violations: 0.34593278
ACTUAL: array([[[[-0.141752, -0.648682],
[-0.04697 , -1.108039],
[-0.076978,  0.513295],...
DESIRED: array([[[[-0.141752, -0.648682],
[-0.04697 , -1.108039],
[-0.076978,  0.513295],...
2025-04-27 01:52:09.074157 test begin: paddle.minimum(Tensor([8, 17328, 1, 2],"float32"), Tensor([8, 1, 50, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([8, 17328, 1, 2],"float32"), Tensor([8, 1, 50, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 277248 (0.000361%)
Max absolute difference among violations: 0.11270833
Max relative difference among violations: 0.07362546
ACTUAL: array([[[[-0.417328, -1.677626]],
[[ 0.046291, -0.234424]],...
DESIRED: array([[[[-0.417328, -1.677627]],
[[ 0.046291, -0.234424]],...
2025-04-27 01:52:12.671253 test begin: paddle.minimum(Tensor([8, 18, 1, 2],"float32"), Tensor([8, 1, 4116, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([8, 18, 1, 2],"float32"), Tensor([8, 1, 4116, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 65856 (0.00152%)
Max absolute difference among violations: 0.22177315
Max relative difference among violations: 0.09855896
ACTUAL: array([[[[ 0.056183, -0.431153],
[-1.062098,  0.301325],
[-0.729925,  0.005858],...
DESIRED: array([[[[ 0.056183, -0.431153],
[-1.062098,  0.301325],
[-0.729925,  0.005858],...
2025-04-27 01:52:24.217360 test begin: paddle.minimum(Tensor([8, 20, 1, 2],"float32"), Tensor([8, 1, 3549, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([8, 20, 1, 2],"float32"), Tensor([8, 1, 3549, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 56784 (0.00176%)
Max absolute difference among violations: 0.0686186
Max relative difference among violations: 0.09655237
ACTUAL: array([[[[ 0.739469, -0.24097 ],
[ 0.041652,  0.398412],
[ 0.816383, -0.08009 ],...
DESIRED: array([[[[ 0.739469, -0.24097 ],
[ 0.041652,  0.398412],
[ 0.816383, -0.08009 ],...
2025-04-27 01:52:25.263061 test begin: paddle.minimum(Tensor([8, 20, 1, 2],"float32"), Tensor([8, 1, 6069, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([8, 20, 1, 2],"float32"), Tensor([8, 1, 6069, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 97104 (0.00103%)
Max absolute difference among violations: 0.18887082
Max relative difference among violations: 0.4448155
ACTUAL: array([[[[ 0.344251, -0.473884],
[ 0.451923,  0.      ],
[ 0.925049,  1.111572],...
DESIRED: array([[[[ 0.344251, -0.473884],
[ 0.451923,  0.      ],
[ 0.925049,  1.111572],...
2025-04-27 01:52:34.149048 test begin: paddle.minimum(Tensor([8, 22, 1, 2],"float32"), Tensor([8, 1, 4725, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([8, 22, 1, 2],"float32"), Tensor([8, 1, 4725, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 352 (0.284%)
Max absolute difference among violations: 0.19415092
Max relative difference among violations: 0.01077724
ACTUAL: array([[[[-1.228927e+01,  1.358382e+01]],
[[-1.835677e+01,  2.953686e-01]],...
DESIRED: array([[[[-1.228926e+01,  1.358382e+01]],
[[-1.835677e+01,  2.953696e-01]],...
2025-04-27 01:52:36.453223 test begin: paddle.minimum(Tensor([8, 23, 1, 2],"float32"), Tensor([8, 1, 11109, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([8, 23, 1, 2],"float32"), Tensor([8, 1, 11109, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 177744 (0.000563%)
Max absolute difference among violations: 0.01505426
Max relative difference among violations: 0.16446783
ACTUAL: array([[[[ 2.158133e+00, -5.208203e-01],
[ 2.374705e-01,  2.158306e-01],
[ 3.694135e-01,  4.288286e-02],...
DESIRED: array([[[[ 2.158134e+00, -5.208203e-01],
[ 2.374704e-01,  2.158307e-01],
[ 3.694136e-01,  4.288286e-02],...
2025-04-27 01:52:46.843022 test begin: paddle.minimum(Tensor([8, 25, 1, 2],"float32"), Tensor([8, 1, 6069, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([8, 25, 1, 2],"float32"), Tensor([8, 1, 6069, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 97104 (0.00103%)
Max absolute difference among violations: 0.02445292
Max relative difference among violations: 0.24900852
ACTUAL: array([[[[-0.230757,  0.770655],
[ 0.641425, -0.074697],
[-0.326635,  1.037684],...
DESIRED: array([[[[-0.230757,  0.770655],
[ 0.641425, -0.074697],
[-0.326635,  1.037684],...
2025-04-27 01:52:50.432048 test begin: paddle.minimum(Tensor([8, 26, 1, 2],"float32"), Tensor([8, 1, 3549, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([8, 26, 1, 2],"float32"), Tensor([8, 1, 3549, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 416 (0.24%)
Max absolute difference among violations: 0.1262312
Max relative difference among violations: 0.0177651
ACTUAL: array([[[[ 1.178491e+01,  1.451323e+01]],
[[ 1.404617e+01,  4.403476e+00]],...
DESIRED: array([[[[ 1.178493e+01,  1.451324e+01]],
[[ 1.404614e+01,  4.403481e+00]],...
2025-04-27 01:52:55.864258 test begin: paddle.minimum(Tensor([8, 27, 1, 2],"float32"), Tensor([8, 1, 4725, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([8, 27, 1, 2],"float32"), Tensor([8, 1, 4725, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 432 (0.231%)
Max absolute difference among violations: 0.21662521
Max relative difference among violations: 0.01074346
ACTUAL: array([[[[-1.972953e+01, -2.710327e+01]],
[[ 1.127726e+01,  1.962763e+01]],...
DESIRED: array([[[[-1.972955e+01, -2.710330e+01]],
[[ 1.127725e+01,  1.962760e+01]],...
2025-04-27 01:53:01.962987 test begin: paddle.minimum(Tensor([8, 28, 1, 2],"float32"), Tensor([8, 1, 9261, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([8, 28, 1, 2],"float32"), Tensor([8, 1, 9261, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 448 (0.223%)
Max absolute difference among violations: 0.21114635
Max relative difference among violations: 0.01840891
ACTUAL: array([[[[ 1.336444e+01, -2.269985e+01]],
[[ 2.698932e+01,  1.256774e+01]],...
DESIRED: array([[[[ 1.336443e+01, -2.269983e+01]],
[[ 2.698935e+01,  1.256773e+01]],...
2025-04-27 01:53:09.111128 test begin: paddle.minimum(Tensor([8, 30, 1, 2],"float32"), Tensor([8, 1, 6804, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([8, 30, 1, 2],"float32"), Tensor([8, 1, 6804, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 108864 (0.000919%)
Max absolute difference among violations: 0.10240877
Max relative difference among violations: 0.32119557
ACTUAL: array([[[[ 2.587315e-02, -1.710677e+00],
[ 7.666621e-01, -7.007002e-01],
[-4.100800e-04, -1.052038e+00],...
DESIRED: array([[[[ 2.587301e-02, -1.710677e+00],
[ 7.666622e-01, -7.007002e-01],
[-4.101098e-04, -1.052038e+00],...
2025-04-27 01:53:24.171783 test begin: paddle.minimum(Tensor([8, 35, 1, 2],"float32"), Tensor([8, 1, 10164, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([8, 35, 1, 2],"float32"), Tensor([8, 1, 10164, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 560 (0.179%)
Max absolute difference among violations: 0.10781908
Max relative difference among violations: 0.08829387
ACTUAL: array([[[[ -2.866411,  16.313213]],
[[ 52.20212 ,  52.63401 ]],...
DESIRED: array([[[[ -2.866416,  16.31321 ]],
[[ 52.202118,  52.633976]],...
2025-04-27 01:53:35.151616 test begin: paddle.minimum(Tensor([8, 39, 1, 2],"float32"), Tensor([8, 1, 3549, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([8, 39, 1, 2],"float32"), Tensor([8, 1, 3549, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 56784 (0.00176%)
Max absolute difference among violations: 0.08295989
Max relative difference among violations: 0.04116379
ACTUAL: array([[[[-4.156024, -0.243643],
[ 2.670207, -0.745869],
[ 0.77561 ,  0.586263],...
DESIRED: array([[[[-4.156024, -0.243643],
[ 2.670207, -0.745869],
[ 0.77561 ,  0.586263],...
2025-04-27 01:53:39.036414 test begin: paddle.minimum(Tensor([8, 41, 1, 2],"float32"), Tensor([8, 1, 9261, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([8, 41, 1, 2],"float32"), Tensor([8, 1, 9261, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 148176 (0.000675%)
Max absolute difference among violations: 0.07824346
Max relative difference among violations: 0.7175357
ACTUAL: array([[[[ 0.960947, -1.102808],
[-1.47338 ,  2.470262],
[-0.620435,  0.358243],...
DESIRED: array([[[[ 0.960947, -1.102808],
[-1.47338 ,  2.470262],
[-0.620435,  0.358243],...
2025-04-27 01:53:41.712778 test begin: paddle.minimum(Tensor([8, 432, 1, 2],"float32"), Tensor([8, 1, 50, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([8, 432, 1, 2],"float32"), Tensor([8, 1, 50, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 6912 (0.0145%)
Max absolute difference among violations: 0.15670562
Max relative difference among violations: 0.13279325
ACTUAL: array([[[[ 0.069928,  3.112636]],
[[ 0.525971, -1.121403]],...
DESIRED: array([[[[ 0.069928,  3.112636]],
[[ 0.525971, -1.121404]],...
2025-04-27 01:53:43.452725 test begin: paddle.minimum(Tensor([8, 45, 1, 2],"float32"), Tensor([8, 1, 10164, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([8, 45, 1, 2],"float32"), Tensor([8, 1, 10164, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 162624 (0.000615%)
Max absolute difference among violations: 0.13512038
Max relative difference among violations: 0.6528691
ACTUAL: array([[[[-0.993045, -1.727897],
[-0.021621, -1.662739],
[ 0.161101, -1.407312],...
DESIRED: array([[[[-0.993045, -1.727897],
[-0.021621, -1.662739],
[ 0.161101, -1.407312],...
2025-04-27 01:53:45.473683 test begin: paddle.minimum(Tensor([8, 46, 1, 2],"float32"), Tensor([8, 1, 8400, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([8, 46, 1, 2],"float32"), Tensor([8, 1, 8400, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 736 (0.136%)
Max absolute difference among violations: 0.11579323
Max relative difference among violations: 0.01328914
ACTUAL: array([[[[ 1.766276e+01, -7.775920e+00]],
[[ 1.493603e+01,  4.936717e+01]],...
DESIRED: array([[[[ 1.766278e+01, -7.775888e+00]],
[[ 1.493604e+01,  4.936720e+01]],...
2025-04-27 01:54:06.439514 test begin: paddle.minimum(Tensor([8, 8112, 1, 2],"float32"), Tensor([8, 1, 50, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([8, 8112, 1, 2],"float32"), Tensor([8, 1, 50, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 129792 (0.00077%)
Max absolute difference among violations: 0.16375959
Max relative difference among violations: 0.11254443
ACTUAL: array([[[[-0.387258, -0.960905]],
[[ 0.134798,  2.348269]],...
DESIRED: array([[[[-0.387258, -0.960905]],
[[ 0.134798,  2.348268]],...
2025-04-27 01:54:08.071621 test begin: paddle.minimum(Tensor([8, 9, 1, 2],"float32"), Tensor([8, 1, 12096, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([8, 9, 1, 2],"float32"), Tensor([8, 1, 12096, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 193536 (0.000517%)
Max absolute difference among violations: 0.02703542
Max relative difference among violations: 0.10017025
ACTUAL: array([[[[-0.070662,  0.      ],
[ 0.      , -0.932809],
[ 0.142206,  0.092862],...
DESIRED: array([[[[-0.070662,  0.      ],
[ 0.      , -0.932809],
[ 0.142206,  0.092862],...
2025-04-27 01:54:10.115289 test begin: paddle.minimum(Tensor([8, 9, 1, 2],"float32"), Tensor([8, 1, 7581, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([8, 9, 1, 2],"float32"), Tensor([8, 1, 7581, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 121296 (0.000824%)
Max absolute difference among violations: 0.20265818
Max relative difference among violations: 0.33291095
ACTUAL: array([[[[-0.686813,  0.      ],
[ 1.169538,  0.472483],
[ 0.      ,  0.      ],...
DESIRED: array([[[[-0.686814,  0.      ],
[ 1.169538,  0.472483],
[ 0.      ,  0.      ],...
2025-04-27 01:54:10.842975 test begin: paddle.minimum(Tensor([8, 9408, 1, 2],"float32"), Tensor([8, 1, 50, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([8, 9408, 1, 2],"float32"), Tensor([8, 1, 50, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 150528 (0.000664%)
Max absolute difference among violations: 0.20189363
Max relative difference among violations: 0.4049206
ACTUAL: array([[[[ 3.211743, -2.663725]],
[[ 0.      ,  1.168229]],...
DESIRED: array([[[[ 3.211743, -2.663725]],
[[ 0.      ,  1.168229]],...
2025-04-27 01:56:30.338292 test begin: paddle.minimum(Tensor([88, 1, 2],"float32"), Tensor([1, 3549, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([88, 1, 2],"float32"), Tensor([1, 3549, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 176 (0.568%)
Max absolute difference among violations: 0.17591953
Max relative difference among violations: 0.02831564
ACTUAL: array([[[-31.570274,  11.296494]],
[[ -7.732791,  -1.598784]],...
DESIRED: array([[[-31.57025 ,  11.296487]],
[[ -7.73275 ,  -1.598784]],...
2025-04-27 01:57:21.673408 test begin: paddle.minimum(Tensor([9, 1, 2],"float32"), Tensor([242991, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([9, 1, 2],"float32"), Tensor([242991, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 485982 (0.000206%)
Max absolute difference among violations: 0.10081946
Max relative difference among violations: 1.
ACTUAL: array([[ 2.058884, -1.043087],
[-0.266798,  1.098181],
[-0.030959, -0.228646],...
DESIRED: array([[ 2.058884, -1.043087],
[-0.266798,  1.098181],
[-0.030959, -0.228646],...
2025-04-27 01:57:28.027458 test begin: paddle.minimum(Tensor([9, 1, 2],"float32"), Tensor([268560, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([9, 1, 2],"float32"), Tensor([268560, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 537120 (0.000186%)
Max absolute difference among violations: 0.13920718
Max relative difference among violations: 0.22875382
ACTUAL: array([[ 0.079039,  1.204375],
[ 0.      ,  0.622593],
[-0.780313, -0.662182],...
DESIRED: array([[ 0.079039,  1.204375],
[ 0.      ,  0.622593],
[-0.780313, -0.662182],...
2025-04-27 01:57:31.424120 test begin: paddle.minimum(Tensor([9, 1, 2],"float32"), Tensor([279300, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([9, 1, 2],"float32"), Tensor([279300, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 558600 (0.000179%)
Max absolute difference among violations: 0.13685167
Max relative difference among violations: 0.1192766
ACTUAL: array([[-0.434032,  0.707356],
[ 0.427149,  1.492449],
[ 0.803089,  0.429888],...
DESIRED: array([[-0.434032,  0.707356],
[ 0.427149,  1.492449],
[ 0.803089,  0.429888],...
2025-04-27 01:57:47.648684 test begin: paddle.minimum(Tensor([9, 1, 2],"float32"), Tensor([354501, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([9, 1, 2],"float32"), Tensor([354501, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 18 (5.56%)
Max absolute difference among violations: 0.22452784
Max relative difference among violations: 0.02773336
ACTUAL: array([[[ -11.972134,  -85.28432 ]],
[[ -68.6697  , -108.14326 ]],...
DESIRED: array([[[ -11.972054,  -85.283424]],
[[ -68.66893 , -108.14372 ]],...
2025-04-27 01:57:51.969476 test begin: paddle.minimum(Tensor([9, 1, 2],"float32"), Tensor([377514, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([9, 1, 2],"float32"), Tensor([377514, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 755028 (0.000132%)
Max absolute difference among violations: 0.11922117
Max relative difference among violations: 1.
ACTUAL: array([[-0.167363,  0.318413],
[-0.994382,  0.      ],
[ 0.321549, -0.618439],...
DESIRED: array([[-0.167363,  0.318413],
[-0.994382,  0.      ],
[ 0.321549, -0.618439],...
2025-04-27 01:59:39.829113 test begin: paddle.minimum(Tensor([96, 1, 2],"float32"), Tensor([1, 10164, 2],"float32"), )
[accuracy error] backward  paddle.minimum(Tensor([96, 1, 2],"float32"), Tensor([1, 10164, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 192 (0.521%)
Max absolute difference among violations: 0.19642735
Max relative difference among violations: 0.04810216
ACTUAL: array([[[-20.931948, -52.644886]],
[[ 11.789539,  14.220813]],...
DESIRED: array([[[-20.931917, -52.64498 ]],
[[ 11.789534,  14.220813]],...
2025-04-27 02:03:32.763356 test begin: paddle.nextafter(Tensor([],"float32"), Tensor([2, 3, 4],"float32"), )
[accuracy error] paddle.nextafter(Tensor([],"float32"), Tensor([2, 3, 4],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 23 / 24 (95.8%)
Max absolute difference among violations: 3.689349e+19
Max relative difference among violations: 8.109935e+19
ACTUAL: array([[[ 4.549172e-01,  4.565150e-41, -1.256798e-19,  4.565010e-41],
[ 0.000000e+00,  0.000000e+00,  0.000000e+00,  0.000000e+00],
[ 1.084202e-19,  1.550914e+00, -3.689349e+19,  1.703615e+00]],...
DESIRED: array([[[0.454917, 0.454917, 0.454917, 0.454917],
[0.454917, 0.454917, 0.454917, 0.454917],
[0.454917, 0.454917, 0.454917, 0.454917]],...
2025-04-27 02:03:59.986900 test begin: paddle.nn.functional.cosine_similarity(Tensor([23, 12, 1],"float32"), Tensor([23, 1, 10],"float32"), axis=2, eps=1e-06, )
[accuracy error] paddle.nn.functional.cosine_similarity(Tensor([23, 12, 1],"float32"), Tensor([23, 1, 10],"float32"), axis=2, eps=1e-06, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 264 / 276 (95.7%)
Max absolute difference among violations: 1.6972474
Max relative difference among violations: 2.1622791
ACTUAL: array([[ 0.211722,  0.211722,  0.211722, -0.211722,  0.211722,  0.211722,
-0.211722, -0.211722,  0.211722, -0.211722,  0.211722, -0.211722],
[ 0.255831, -0.255831,  0.255831, -0.255831, -0.255831,  0.255831,...
DESIRED: array([[ 0.066953,  0.066953,  0.066953, -0.066953,  0.066953,  0.066953,
-0.066953, -0.066953,  0.066953, -0.066953,  0.066953, -0.066953],
[ 0.080901, -0.080901,  0.080901, -0.080901, -0.080901,  0.080901,...
2025-04-27 02:04:00.484952 test begin: paddle.nn.functional.cosine_similarity(Tensor([5, 1, 3],"float64"), Tensor([1, 3],"float64"), axis=0, eps=1e-08, )
[accuracy error] paddle.nn.functional.cosine_similarity(Tensor([5, 1, 3],"float64"), Tensor([1, 3],"float64"), axis=0, eps=1e-08, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 3 / 3 (100%)
Max absolute difference among violations: 0.93953922
Max relative difference among violations: 1.23606798
ACTUAL: array([[-0.616635, -1.699642, -0.402295]])
DESIRED: array([[-0.275768, -0.760103, -0.179912]])
2025-04-27 02:11:19.169205 test begin: paddle.nn.functional.grid_sample(Tensor([1, 128, 128, 128],"float32"), Tensor([1, 128, 128, 2],"float32"), )
/root/anaconda3/envs/test2/lib/python3.9/site-packages/torch/nn/functional.py:5015: UserWarning: Default grid_sample and affine_grid behavior has changed to align_corners=False since 1.3.0. Please specify align_corners=True if the old behavior is desired. See the documentation of grid_sample for details.
warnings.warn(
[accuracy error] paddle.nn.functional.grid_sample(Tensor([1, 128, 128, 128],"float32"), Tensor([1, 128, 128, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1716118 / 2097152 (81.8%)
Max absolute difference among violations: 0.33302474
Max relative difference among violations: 288035.9
ACTUAL: array([[[[ 0.069774, -0.219488, -0.208696, ..., -0.128483,  0.005932,
0.165934],
[ 0.209313,  0.035917, -0.248694, ...,  0.46403 ,  0.29426 ,...
DESIRED: array([[[[ 0.043749, -0.204915, -0.255193, ..., -0.110617,  0.007181,
0.12691 ],
[ 0.265265,  0.072099, -0.243308, ...,  0.409508,  0.241013,...
2025-04-27 02:11:19.663941 test begin: paddle.nn.functional.grid_sample(Tensor([1, 128, 128, 128],"float32"), Tensor([1, 256, 256, 2],"float32"), )
[accuracy error] paddle.nn.functional.grid_sample(Tensor([1, 128, 128, 128],"float32"), Tensor([1, 256, 256, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 6886849 / 8388608 (82.1%)
Max absolute difference among violations: 0.35015905
Max relative difference among violations: 2273101.
ACTUAL: array([[[[-0.159551, -0.011048,  0.208843, ...,  0.181214,  0.023115,
-0.009332],
[ 0.062485,  0.216099, -0.086057, ..., -0.338454,  0.236886,...
DESIRED: array([[[[-0.141015, -0.169371,  0.242329, ...,  0.130727, -0.029408,
0.068241],
[ 0.103141,  0.136377, -0.065733, ..., -0.344959,  0.244941,...
2025-04-27 02:11:30.100616 test begin: paddle.nn.functional.grid_sample(Tensor([1, 4, 280, 350],"float32"), Tensor([1, 280, 350, 2],"float32"), mode="nearest", padding_mode="zeros", align_corners=False, )
[accuracy error] paddle.nn.functional.grid_sample(Tensor([1, 4, 280, 350],"float32"), Tensor([1, 280, 350, 2],"float32"), mode="nearest", padding_mode="zeros", align_corners=False, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 4 / 392000 (0.00102%)
Max absolute difference among violations: 0.7194653
Max relative difference among violations: 5.3197207
ACTUAL: array([[[[-0.313982,  0.446597, -0.099987, ...,  0.206866, -0.054422,
-0.206719],
[-0.168839, -0.491297,  0.014187, ...,  0.34669 ,  0.20105 ,...
DESIRED: array([[[[-0.313982,  0.446597, -0.099987, ...,  0.206866, -0.054422,
-0.206719],
[-0.168839, -0.491297,  0.014187, ...,  0.34669 ,  0.20105 ,...
2025-04-27 02:11:30.328663 test begin: paddle.nn.functional.grid_sample(Tensor([1, 4, 280, 350],"float32"), Tensor([1, 298, 364, 2],"float32"), mode="nearest", padding_mode="zeros", align_corners=False, )
[accuracy error] paddle.nn.functional.grid_sample(Tensor([1, 4, 280, 350],"float32"), Tensor([1, 298, 364, 2],"float32"), mode="nearest", padding_mode="zeros", align_corners=False, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 8 / 433888 (0.00184%)
Max absolute difference among violations: 0.81554985
Max relative difference among violations: 2.301464
ACTUAL: array([[[[ 0.457712,  0.2856  , -0.468322, ...,  0.368766,  0.185597,
-0.126839],
[ 0.021826, -0.337993,  0.354902, ...,  0.272793,  0.496557,...
DESIRED: array([[[[ 0.457712,  0.2856  , -0.468322, ...,  0.368766,  0.185597,
-0.126839],
[ 0.021826, -0.337993,  0.354902, ...,  0.272793,  0.496557,...
2025-04-27 02:11:30.542938 test begin: paddle.nn.functional.grid_sample(Tensor([1, 4, 280, 350],"float32"), Tensor([1, 368, 416, 2],"float32"), mode="nearest", padding_mode="zeros", align_corners=False, )
[accuracy error] paddle.nn.functional.grid_sample(Tensor([1, 4, 280, 350],"float32"), Tensor([1, 368, 416, 2],"float32"), mode="nearest", padding_mode="zeros", align_corners=False, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 8 / 612352 (0.00131%)
Max absolute difference among violations: 0.39299548
Max relative difference among violations: 9.642024
ACTUAL: array([[[[-0.266293,  0.270116, -0.266419, ...,  0.037547,  0.13825 ,
-0.020429],
[-0.217613,  0.08865 , -0.467321, ...,  0.313725, -0.040379,...
DESIRED: array([[[[-0.266293,  0.270116, -0.266419, ...,  0.037547,  0.13825 ,
-0.020429],
[-0.217613,  0.08865 , -0.467321, ...,  0.313725, -0.040379,...
2025-04-27 02:11:30.748248 test begin: paddle.nn.functional.grid_sample(Tensor([1, 4, 298, 364],"float32"), Tensor([1, 352, 407, 2],"float32"), mode="nearest", padding_mode="zeros", align_corners=False, )
[accuracy error] paddle.nn.functional.grid_sample(Tensor([1, 4, 298, 364],"float32"), Tensor([1, 352, 407, 2],"float32"), mode="nearest", padding_mode="zeros", align_corners=False, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 8 / 573056 (0.0014%)
Max absolute difference among violations: 0.68792397
Max relative difference among violations: 2.6466315
ACTUAL: array([[[[ 0.474403, -0.0026  , -0.065762, ..., -0.184376,  0.264497,
0.041359],
[ 0.491856,  0.034318, -0.285659, ..., -0.293117,  0.067382,...
DESIRED: array([[[[ 0.474403, -0.0026  , -0.065762, ..., -0.184376,  0.264497,
0.041359],
[ 0.491856,  0.034318, -0.285659, ..., -0.293117,  0.067382,...
2025-04-27 02:11:31.165340 test begin: paddle.nn.functional.grid_sample(Tensor([1, 4, 368, 416],"float32"), Tensor([1, 391, 436, 2],"float32"), mode="nearest", padding_mode="zeros", align_corners=False, )
[accuracy error] paddle.nn.functional.grid_sample(Tensor([1, 4, 368, 416],"float32"), Tensor([1, 391, 436, 2],"float32"), mode="nearest", padding_mode="zeros", align_corners=False, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 23 / 681904 (0.00337%)
Max absolute difference among violations: 0.841993
Max relative difference among violations: 26.51329
ACTUAL: array([[[[-0.111131, -0.417077,  0.290653, ..., -0.348785,  0.175036,
0.079808],
[ 0.196967,  0.163109, -0.154855, ...,  0.357004, -0.485713,...
DESIRED: array([[[[-0.111131, -0.417077,  0.290653, ..., -0.348785,  0.175036,
0.079808],
[ 0.196967,  0.163109, -0.154855, ...,  0.357004, -0.485713,...
2025-04-27 02:11:31.369775 test begin: paddle.nn.functional.grid_sample(Tensor([1, 4, 400, 300],"float32"), Tensor([1, 400, 300, 2],"float32"), mode="nearest", padding_mode="zeros", align_corners=False, )
[accuracy error] paddle.nn.functional.grid_sample(Tensor([1, 4, 400, 300],"float32"), Tensor([1, 400, 300, 2],"float32"), mode="nearest", padding_mode="zeros", align_corners=False, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 8 / 480000 (0.00167%)
Max absolute difference among violations: 0.7303537
Max relative difference among violations: 8.760038
ACTUAL: array([[[[ 0.434202, -0.241962, -0.395318, ..., -0.440079, -0.083867,
-0.001116],
[ 0.269879, -0.261313, -0.10298 , ..., -0.42274 ,  0.401475,...
DESIRED: array([[[[ 0.434202, -0.241962, -0.395318, ..., -0.440079, -0.083867,
-0.001116],
[ 0.269879, -0.261313, -0.10298 , ..., -0.42274 ,  0.401475,...
2025-04-27 02:11:31.605300 test begin: paddle.nn.functional.grid_sample(Tensor([1, 4, 400, 300],"float32"), Tensor([1, 430, 340, 2],"float32"), mode="nearest", padding_mode="zeros", align_corners=False, )
[accuracy error] paddle.nn.functional.grid_sample(Tensor([1, 4, 400, 300],"float32"), Tensor([1, 430, 340, 2],"float32"), mode="nearest", padding_mode="zeros", align_corners=False, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 12 / 584800 (0.00205%)
Max absolute difference among violations: 0.8879699
Max relative difference among violations: 9.197382
ACTUAL: array([[[[ 0.218716,  0.280649,  0.049983, ...,  0.292578, -0.285051,
0.369866],
[-0.369622, -0.425957, -0.44774 , ..., -0.366159, -0.042641,...
DESIRED: array([[[[ 0.218716,  0.280649,  0.049983, ...,  0.292578, -0.285051,
0.369866],
[-0.369622, -0.425957, -0.44774 , ..., -0.366159, -0.042641,...
2025-04-27 02:11:31.805698 test begin: paddle.nn.functional.grid_sample(Tensor([1, 4, 400, 300],"float32"), Tensor([1, 434, 346, 2],"float32"), mode="nearest", padding_mode="zeros", align_corners=False, )
[accuracy error] paddle.nn.functional.grid_sample(Tensor([1, 4, 400, 300],"float32"), Tensor([1, 434, 346, 2],"float32"), mode="nearest", padding_mode="zeros", align_corners=False, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 8 / 600656 (0.00133%)
Max absolute difference among violations: 0.48718312
Max relative difference among violations: 4.926701
ACTUAL: array([[[[-0.413393, -0.301862,  0.161307, ...,  0.398843, -0.161302,
-0.189866],
[-0.056387, -0.279371, -0.369224, ..., -0.082341,  0.327111,...
DESIRED: array([[[[-0.413393, -0.301862,  0.161307, ...,  0.398843, -0.161302,
-0.189866],
[-0.056387, -0.279371, -0.369224, ..., -0.082341,  0.327111,...
2025-04-27 02:11:32.207078 test begin: paddle.nn.functional.grid_sample(Tensor([1, 4, 434, 346],"float32"), Tensor([1, 466, 386, 2],"float32"), mode="nearest", padding_mode="zeros", align_corners=False, )
[accuracy error] paddle.nn.functional.grid_sample(Tensor([1, 4, 434, 346],"float32"), Tensor([1, 466, 386, 2],"float32"), mode="nearest", padding_mode="zeros", align_corners=False, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 16 / 719504 (0.00222%)
Max absolute difference among violations: 0.7731252
Max relative difference among violations: 13.426833
ACTUAL: array([[[[-0.045054,  0.072179,  0.043829, ..., -0.402999,  0.156273,
-0.429034],
[ 0.445461, -0.222995, -0.417306, ...,  0.38827 ,  0.47879 ,...
DESIRED: array([[[[-0.045054,  0.072179,  0.043829, ..., -0.402999,  0.156273,
-0.429034],
[ 0.445461, -0.222995, -0.417306, ...,  0.38827 ,  0.47879 ,...
2025-04-27 02:11:33.787281 test begin: paddle.nn.functional.grid_sample(Tensor([100, 1, 176, 176],"float32"), Tensor([100, 1, 37632, 2],"float32"), align_corners=False, )
[accuracy error] backward  paddle.nn.functional.grid_sample(Tensor([100, 1, 176, 176],"float32"), Tensor([100, 1, 37632, 2],"float32"), align_corners=False, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 7526400 (1.33e-05%)
Max absolute difference among violations: 26.728804
Max relative difference among violations: 2.167742
ACTUAL: array([[[[ 8.308245e+00, -1.356706e+01],
[-2.481397e+01,  3.091807e+00],
[ 8.609611e+00,  6.640132e+00],...
DESIRED: array([[[[ 8.308245e+00, -1.356706e+01],
[-2.481397e+01,  3.091806e+00],
[ 8.609611e+00,  6.640132e+00],...
2025-04-27 02:12:54.797963 test begin: paddle.nn.functional.grid_sample(Tensor([4, 128, 128, 128],"float32"), Tensor([4, 128, 128, 2],"float32"), )
[accuracy error] paddle.nn.functional.grid_sample(Tensor([4, 128, 128, 128],"float32"), Tensor([4, 128, 128, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 6872890 / 8388608 (81.9%)
Max absolute difference among violations: 0.36340562
Max relative difference among violations: 5016210.5
ACTUAL: array([[[[ 1.796455e-02, -1.586622e-01, -2.395768e-03, ...,
2.489683e-02, -3.453802e-02,  1.885922e-01],
[ 1.785293e-01,  4.184162e-01,  6.432718e-03, ...,...
DESIRED: array([[[[ 0.054033, -0.06634 ,  0.125267, ...,  0.069219, -0.007789,
0.152509],
[ 0.159474,  0.392279, -0.09392 , ..., -0.016044, -0.072855,...
2025-04-27 02:12:56.259281 test begin: paddle.nn.functional.grid_sample(Tensor([4, 128, 128, 128],"float32"), Tensor([4, 256, 256, 2],"float32"), )
[accuracy error] paddle.nn.functional.grid_sample(Tensor([4, 128, 128, 128],"float32"), Tensor([4, 256, 256, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 27487365 / 33554432 (81.9%)
Max absolute difference among violations: 0.37222695
Max relative difference among violations: 45375432.
ACTUAL: array([[[[ 2.076978e-02,  2.023996e-01,  2.135896e-01, ...,
-3.828319e-01, -1.111979e-03,  7.381995e-02],
[ 1.597993e-01,  1.461069e-01, -1.144563e-01, ...,...
DESIRED: array([[[[ 7.393800e-02,  2.079478e-01,  1.084486e-01, ...,
-4.158110e-01,  1.595184e-02,  1.089815e-01],
[ 1.885702e-01,  1.389137e-01, -6.433190e-02, ...,...
2025-04-27 02:13:02.815307 test begin: paddle.nn.functional.grid_sample(Tensor([512, 3, 64, 256],"float32"), Tensor([512, 32, 100, 2],"float32"), )
[accuracy error] paddle.nn.functional.grid_sample(Tensor([512, 3, 64, 256],"float32"), Tensor([512, 32, 100, 2],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 4030130 / 4915200 (82%)
Max absolute difference among violations: 0.35627955
Max relative difference among violations: 2240907.8
ACTUAL: array([[[[ 3.069261e-02, -4.429320e-03, -1.173268e-01, ...,
8.599874e-02, -1.955498e-01,  1.817861e-01],
[ 1.644845e-01,  3.179166e-01, -1.571217e-01, ...,...
DESIRED: array([[[[ 6.193094e-02,  2.966883e-03, -1.132456e-01, ...,
1.537249e-02, -2.187739e-01,  1.688309e-01],
[ 1.073838e-01,  2.303708e-01, -1.285878e-01, ...,...
2025-04-27 02:13:35.048187 test begin: paddle.nn.functional.grid_sample(Tensor([8, 32, 18, 25],"float32"), Tensor([8, 38367, 4, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=False, )
[accuracy error] backward  paddle.nn.functional.grid_sample(Tensor([8, 32, 18, 25],"float32"), Tensor([8, 38367, 4, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=False, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2 / 2455488 (8.15e-05%)
Max absolute difference among violations: 12.810676
Max relative difference among violations: 20.946941
ACTUAL: array([[[[ 3.984550e+00,  1.356534e+00],
[ 1.875684e-01, -1.146094e-01],
[-5.318187e+00,  7.366425e+00],...
DESIRED: array([[[[ 3.984549e+00,  1.356533e+00],
[ 1.875676e-01, -1.146090e-01],
[-5.318189e+00,  7.366428e+00],...
2025-04-27 02:25:22.773314 test begin: paddle.nn.functional.gumbel_softmax(Tensor([2, 3, 4, 5],"float32"), hard=True, )
[accuracy error] paddle.nn.functional.gumbel_softmax(Tensor([2, 3, 4, 5],"float32"), hard=True, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 38 / 120 (31.7%)
Max absolute difference among violations: 1.
Max relative difference among violations: 1.
ACTUAL: array([[[[0., 1., 0., 0., 0.],
[0., 0., 0., 1., 0.],
[0., 0., 0., 0., 1.],...
DESIRED: array([[[[0., 0., 0., 0., 1.],
[0., 0., 0., 0., 1.],
[0., 1., 0., 0., 0.],...
2025-04-27 02:25:24.066307 test begin: paddle.nn.functional.gumbel_softmax(Tensor([20, 10],"float64"), hard=False, )
[accuracy error] paddle.nn.functional.gumbel_softmax(Tensor([20, 10],"float64"), hard=False, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 172 / 200 (86%)
Max absolute difference among violations: 0.83709684
Max relative difference among violations: 98.40421421
ACTUAL: array([[0.052248, 0.306694, 0.023434, 0.013127, 0.044087, 0.050513,
0.302481, 0.095558, 0.046029, 0.065829],
[0.321194, 0.061777, 0.033657, 0.043413, 0.040764, 0.062283,...
DESIRED: array([[0.065669, 0.063615, 0.15059 , 0.032482, 0.07885 , 0.021319,
0.068021, 0.487004, 0.013414, 0.019038],
[0.551128, 0.01738 , 0.022218, 0.022893, 0.176004, 0.038014,...
2025-04-27 02:25:24.429170 test begin: paddle.nn.functional.gumbel_softmax(Tensor([20, 10],"float64"), hard=True, )
[accuracy error] paddle.nn.functional.gumbel_softmax(Tensor([20, 10],"float64"), hard=True, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 34 / 200 (17%)
Max absolute difference among violations: 1.
Max relative difference among violations: 1.
ACTUAL: array([[0., 0., 0., 0., 0., 0., 1., 0., 0., 0.],
[0., 0., 0., 0., 0., 0., 0., 1., 0., 0.],
[0., 1., 0., 0., 0., 0., 0., 0., 0., 0.],...
DESIRED: array([[0., 0., 0., 0., 0., 1., 0., 0., 0., 0.],
[0., 0., 0., 0., 0., 0., 0., 0., 1., 0.],
[0., 0., 0., 0., 0., 1., 0., 0., 0., 0.],...
2025-04-27 02:25:25.095806 test begin: paddle.nn.functional.gumbel_softmax(x=Tensor([2, 3, 4],"float64"), )
[accuracy error] paddle.nn.functional.gumbel_softmax(x=Tensor([2, 3, 4],"float64"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 22 / 24 (91.7%)
Max absolute difference among violations: 0.82070468
Max relative difference among violations: 57.97437857
ACTUAL: array([[[0.028652, 0.104639, 0.726593, 0.140116],
[0.081505, 0.278201, 0.144099, 0.496194],
[0.482139, 0.162151, 0.14434 , 0.211371]],...
DESIRED: array([[[0.527171, 0.069147, 0.323396, 0.080286],
[0.082771, 0.715402, 0.141079, 0.060748],
[0.008995, 0.982856, 0.004566, 0.003584]],...
2025-04-27 02:25:25.449967 test begin: paddle.nn.functional.gumbel_softmax(x=Tensor([2, 3, 4],"float64"), temperature=4.0, )
[accuracy error] paddle.nn.functional.gumbel_softmax(x=Tensor([2, 3, 4],"float64"), temperature=4.0, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 21 / 24 (87.5%)
Max absolute difference among violations: 0.35960191
Max relative difference among violations: 2.6765319
ACTUAL: array([[[0.287957, 0.21806 , 0.327239, 0.166743],
[0.341475, 0.150559, 0.300636, 0.20733 ],
[0.220746, 0.196698, 0.348494, 0.234062]],...
DESIRED: array([[[0.172179, 0.254025, 0.397833, 0.175963],
[0.187251, 0.149647, 0.190766, 0.472336],
[0.136176, 0.175371, 0.094789, 0.593664]],...
2025-04-27 02:25:25.768183 test begin: paddle.nn.functional.gumbel_softmax(x=Tensor([2, 3, 4],"float64"), temperature=4.0, hard=True, )
[accuracy error] paddle.nn.functional.gumbel_softmax(x=Tensor([2, 3, 4],"float64"), temperature=4.0, hard=True, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 8 / 24 (33.3%)
Max absolute difference among violations: 1.
Max relative difference among violations: 1.
ACTUAL: array([[[0., 0., 1., 0.],
[1., 0., 0., 0.],
[0., 0., 1., 0.]],...
DESIRED: array([[[1., 0., 0., 0.],
[0., 0., 0., 1.],
[0., 0., 1., 0.]],...
2025-04-27 02:25:26.091836 test begin: paddle.nn.functional.gumbel_softmax(x=Tensor([3, 4, 5],"float64"), temperature=4.0, hard=True, axis=0, )
[accuracy error] paddle.nn.functional.gumbel_softmax(x=Tensor([3, 4, 5],"float64"), temperature=4.0, hard=True, axis=0, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 32 / 60 (53.3%)
Max absolute difference among violations: 1.
Max relative difference among violations: 1.
ACTUAL: array([[[1., 0., 0., 1., 1.],
[0., 0., 0., 0., 0.],
[0., 1., 0., 1., 1.],...
DESIRED: array([[[0., 1., 0., 0., 0.],
[1., 0., 0., 0., 1.],
[0., 0., 0., 0., 0.],...
2025-04-27 02:25:26.433262 test begin: paddle.nn.functional.gumbel_softmax(x=Tensor([3, 4],"float64"), )
[accuracy error] paddle.nn.functional.gumbel_softmax(x=Tensor([3, 4],"float64"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 12 / 12 (100%)
Max absolute difference among violations: 0.41456655
Max relative difference among violations: 13.17621847
ACTUAL: array([[0.896012, 0.043127, 0.034751, 0.02611 ],
[0.371037, 0.109065, 0.44603 , 0.073868],
[0.458905, 0.049687, 0.219845, 0.271563]])
DESIRED: array([[0.593675, 0.150117, 0.093304, 0.162904],
[0.522298, 0.211754, 0.031463, 0.234484],
[0.193734, 0.171938, 0.407525, 0.226803]])
2025-04-27 02:25:26.821124 test begin: paddle.nn.functional.gumbel_softmax(x=Tensor([4],"float32"), )
[accuracy error] paddle.nn.functional.gumbel_softmax(x=Tensor([4],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 4 / 4 (100%)
Max absolute difference among violations: 0.18772928
Max relative difference among violations: 2.9306924
ACTUAL: array([0.567427, 0.087938, 0.092849, 0.251786], dtype=float32)
DESIRED: array([0.615406, 0.058856, 0.261682, 0.064056], dtype=float32)
2025-04-27 02:25:27.134506 test begin: paddle.nn.functional.gumbel_softmax(x=Tensor([4],"float64"), )
[accuracy error] paddle.nn.functional.gumbel_softmax(x=Tensor([4],"float64"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 4 / 4 (100%)
Max absolute difference among violations: 0.32032056
Max relative difference among violations: 32.72781118
ACTUAL: array([0.536126, 0.076228, 0.057539, 0.330108])
DESIRED: array([0.67501 , 0.311194, 0.004009, 0.009787])
2025-04-27 02:25:31.888510 test begin: paddle.nn.functional.hardsigmoid(Tensor([1, 120, 1, 1],"float32"), slope=0.2, offset=0.5, )
[accuracy error] paddle.nn.functional.hardsigmoid(Tensor([1, 120, 1, 1],"float32"), slope=0.2, offset=0.5, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 11 / 120 (9.17%)
Max absolute difference among violations: 0.01664698
Max relative difference among violations: 0.03911019
ACTUAL: array([[[[0.5444  ]],
[[0.523727]],...
DESIRED: array([[[[0.537   ]],
[[0.519773]],...
2025-04-27 02:25:35.540315 test begin: paddle.nn.functional.hardsigmoid(Tensor([1, 480, 1, 1],"float32"), slope=0.2, offset=0.5, )
[accuracy error] paddle.nn.functional.hardsigmoid(Tensor([1, 480, 1, 1],"float32"), slope=0.2, offset=0.5, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 56 / 480 (11.7%)
Max absolute difference among violations: 0.01665795
Max relative difference among violations: 0.03997489
ACTUAL: array([[[[0.469771]],
[[0.477349]],...
DESIRED: array([[[[0.474809]],
[[0.481124]],...
2025-04-27 02:25:36.525530 test begin: paddle.nn.functional.hardsigmoid(Tensor([1, 672, 1, 1],"float32"), slope=0.2, offset=0.5, )
[accuracy error] paddle.nn.functional.hardsigmoid(Tensor([1, 672, 1, 1],"float32"), slope=0.2, offset=0.5, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 65 / 672 (9.67%)
Max absolute difference among violations: 0.01662159
Max relative difference among violations: 0.03987025
ACTUAL: array([[[[0.508143]],
[[0.55824 ]],...
DESIRED: array([[[[0.506786]],
[[0.548533]],...
2025-04-27 02:25:36.893900 test begin: paddle.nn.functional.hardsigmoid(Tensor([1, 72, 1, 1],"float32"), slope=0.2, offset=0.5, )
[accuracy error] paddle.nn.functional.hardsigmoid(Tensor([1, 72, 1, 1],"float32"), slope=0.2, offset=0.5, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 7 / 72 (9.72%)
Max absolute difference among violations: 0.01665515
Max relative difference among violations: 0.0392024
ACTUAL: array([[[[0.509111]],
[[0.496507]],...
DESIRED: array([[[[0.507593]],
[[0.497089]],...
2025-04-27 02:25:38.368904 test begin: paddle.nn.functional.hardsigmoid(Tensor([1, 960, 1, 1],"float32"), slope=0.2, offset=0.5, )
[accuracy error] paddle.nn.functional.hardsigmoid(Tensor([1, 960, 1, 1],"float32"), slope=0.2, offset=0.5, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 90 / 960 (9.38%)
Max absolute difference among violations: 0.01666328
Max relative difference among violations: 0.03999027
ACTUAL: array([[[[0.442225]],
[[0.575411]],...
DESIRED: array([[[[0.451854]],
[[0.562843]],...
2025-04-27 02:25:39.045295 test begin: paddle.nn.functional.hardsigmoid(Tensor([1024, 120, 1, 1],"float32"), slope=0.2, offset=0.5, )
[accuracy error] paddle.nn.functional.hardsigmoid(Tensor([1024, 120, 1, 1],"float32"), slope=0.2, offset=0.5, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 12156 / 122880 (9.89%)
Max absolute difference among violations: 0.01666665
Max relative difference among violations: 0.03999994
ACTUAL: array([[[[0.514725]],
[[0.558664]],...
DESIRED: array([[[[0.512271]],
[[0.548886]],...
2025-04-27 02:25:39.839986 test begin: paddle.nn.functional.hardsigmoid(Tensor([1024, 144, 1, 1],"float32"), slope=0.2, offset=0.5, )
[accuracy error] paddle.nn.functional.hardsigmoid(Tensor([1024, 144, 1, 1],"float32"), slope=0.2, offset=0.5, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 14398 / 147456 (9.76%)
Max absolute difference among violations: 0.01666665
Max relative difference among violations: 0.03999995
ACTUAL: array([[[[0.544519]],
[[0.501126]],...
DESIRED: array([[[[0.537099]],
[[0.500938]],...
2025-04-27 02:25:40.613090 test begin: paddle.nn.functional.hardsigmoid(Tensor([1024, 16, 1, 1],"float32"), slope=0.2, offset=0.5, )
[accuracy error] paddle.nn.functional.hardsigmoid(Tensor([1024, 16, 1, 1],"float32"), slope=0.2, offset=0.5, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1611 / 16384 (9.83%)
Max absolute difference among violations: 0.01666567
Max relative difference among violations: 0.03999711
ACTUAL: array([[[[0.479966]],
[[0.589541]],...
DESIRED: array([[[[0.483305]],
[[0.574618]],...
2025-04-27 02:25:41.418660 test begin: paddle.nn.functional.hardsigmoid(Tensor([1024, 240, 1, 1],"float32"), slope=0.2, offset=0.5, )
[accuracy error] paddle.nn.functional.hardsigmoid(Tensor([1024, 240, 1, 1],"float32"), slope=0.2, offset=0.5, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 24014 / 245760 (9.77%)
Max absolute difference among violations: 0.01666662
Max relative difference among violations: 0.03999985
ACTUAL: array([[[[0.49366 ]],
[[0.574504]],...
DESIRED: array([[[[0.494716]],
[[0.562087]],...
2025-04-27 02:25:42.703827 test begin: paddle.nn.functional.hardsigmoid(Tensor([1024, 288, 1, 1],"float32"), slope=0.2, offset=0.5, )
[accuracy error] paddle.nn.functional.hardsigmoid(Tensor([1024, 288, 1, 1],"float32"), slope=0.2, offset=0.5, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 28762 / 294912 (9.75%)
Max absolute difference among violations: 0.01666665
Max relative difference among violations: 0.03999994
ACTUAL: array([[[[0.403929]],
[[0.549223]],...
DESIRED: array([[[[0.419941]],
[[0.541019]],...
2025-04-27 02:25:43.948235 test begin: paddle.nn.functional.hardsigmoid(Tensor([1024, 576, 1, 1],"float32"), slope=0.2, offset=0.5, )
[accuracy error] paddle.nn.functional.hardsigmoid(Tensor([1024, 576, 1, 1],"float32"), slope=0.2, offset=0.5, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 57921 / 589824 (9.82%)
Max absolute difference among violations: 0.01666659
Max relative difference among violations: 0.03999977
ACTUAL: array([[[[0.56613 ]],
[[0.414581]],...
DESIRED: array([[[[0.555109]],
[[0.428818]],...
2025-04-27 02:25:44.678124 test begin: paddle.nn.functional.hardsigmoid(Tensor([1024, 96, 1, 1],"float32"), slope=0.2, offset=0.5, )
[accuracy error] paddle.nn.functional.hardsigmoid(Tensor([1024, 96, 1, 1],"float32"), slope=0.2, offset=0.5, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 9248 / 98304 (9.41%)
Max absolute difference among violations: 0.01666656
Max relative difference among violations: 0.03999968
ACTUAL: array([[[[0.453957]],
[[0.470098]],...
DESIRED: array([[[[0.461631]],
[[0.475082]],...
2025-04-27 02:25:45.553559 test begin: paddle.nn.functional.hardsigmoid(Tensor([128, 120, 1, 1],"float32"), slope=0.2, offset=0.5, )
[accuracy error] paddle.nn.functional.hardsigmoid(Tensor([128, 120, 1, 1],"float32"), slope=0.2, offset=0.5, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1501 / 15360 (9.77%)
Max absolute difference among violations: 0.01666588
Max relative difference among violations: 0.03998629
ACTUAL: array([[[[0.429875]],
[[0.409328]],...
DESIRED: array([[[[0.441562]],
[[0.42444 ]],...
2025-04-27 02:25:45.980013 test begin: paddle.nn.functional.hardsigmoid(Tensor([128, 1200, 1, 1],"float32"), slope=0.2, offset=0.5, )
[accuracy error] paddle.nn.functional.hardsigmoid(Tensor([128, 1200, 1, 1],"float32"), slope=0.2, offset=0.5, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 14905 / 153600 (9.7%)
Max absolute difference among violations: 0.01666659
Max relative difference among violations: 0.03999979
ACTUAL: array([[[[0.420613]],
[[0.486123]],...
DESIRED: array([[[[0.433845]],
[[0.488436]],...
2025-04-27 02:25:46.604097 test begin: paddle.nn.functional.hardsigmoid(Tensor([128, 152, 1, 1],"float32"), slope=0.2, offset=0.5, )
[accuracy error] paddle.nn.functional.hardsigmoid(Tensor([128, 152, 1, 1],"float32"), slope=0.2, offset=0.5, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1904 / 19456 (9.79%)
Max absolute difference among violations: 0.016666
Max relative difference among violations: 0.03999754
ACTUAL: array([[[[0.423247]],
[[0.43251 ]],...
DESIRED: array([[[[0.436039]],
[[0.443758]],...
2025-04-27 02:25:46.901368 test begin: paddle.nn.functional.hardsigmoid(Tensor([128, 168, 1, 1],"float32"), slope=0.2, offset=0.5, )
[accuracy error] paddle.nn.functional.hardsigmoid(Tensor([128, 168, 1, 1],"float32"), slope=0.2, offset=0.5, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2085 / 21504 (9.7%)
Max absolute difference among violations: 0.01666653
Max relative difference among violations: 0.03999952
ACTUAL: array([[[[0.551974]],
[[0.552252]],...
DESIRED: array([[[[0.543312]],
[[0.543543]],...
2025-04-27 02:25:47.195076 test begin: paddle.nn.functional.hardsigmoid(Tensor([128, 232, 1, 1],"float32"), slope=0.2, offset=0.5, )
[accuracy error] paddle.nn.functional.hardsigmoid(Tensor([128, 232, 1, 1],"float32"), slope=0.2, offset=0.5, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2862 / 29696 (9.64%)
Max absolute difference among violations: 0.01666665
Max relative difference among violations: 0.03999994
ACTUAL: array([[[[0.421462]],
[[0.596165]],...
DESIRED: array([[[[0.434552]],
[[0.580138]],...
2025-04-27 02:25:47.557948 test begin: paddle.nn.functional.hardsigmoid(Tensor([128, 24, 1, 1],"float32"), slope=0.2, offset=0.5, )
[accuracy error] paddle.nn.functional.hardsigmoid(Tensor([128, 24, 1, 1],"float32"), slope=0.2, offset=0.5, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 304 / 3072 (9.9%)
Max absolute difference among violations: 0.01666409
Max relative difference among violations: 0.03996013
ACTUAL: array([[[[0.517533]],
[[0.597374]],...
DESIRED: array([[[[0.514611]],
[[0.581145]],...
2025-04-27 02:25:47.924479 test begin: paddle.nn.functional.hardsigmoid(Tensor([128, 240, 1, 1],"float32"), slope=0.2, offset=0.5, )
[accuracy error] paddle.nn.functional.hardsigmoid(Tensor([128, 240, 1, 1],"float32"), slope=0.2, offset=0.5, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 3037 / 30720 (9.89%)
Max absolute difference among violations: 0.01666576
Max relative difference among violations: 0.03999737
ACTUAL: array([[[[0.457516]],
[[0.463656]],...
DESIRED: array([[[[0.464597]],
[[0.469713]],...
2025-04-27 02:25:48.664361 test begin: paddle.nn.functional.hardsigmoid(Tensor([128, 336, 1, 1],"float32"), slope=0.2, offset=0.5, )
[accuracy error] paddle.nn.functional.hardsigmoid(Tensor([128, 336, 1, 1],"float32"), slope=0.2, offset=0.5, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 4333 / 43008 (10.1%)
Max absolute difference among violations: 0.01666653
Max relative difference among violations: 0.03999961
ACTUAL: array([[[[0.453918]],
[[0.485396]],...
DESIRED: array([[[[0.461598]],
[[0.48783 ]],...
2025-04-27 02:25:49.042952 test begin: paddle.nn.functional.hardsigmoid(Tensor([128, 360, 1, 1],"float32"), slope=0.2, offset=0.5, )
[accuracy error] paddle.nn.functional.hardsigmoid(Tensor([128, 360, 1, 1],"float32"), slope=0.2, offset=0.5, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 4480 / 46080 (9.72%)
Max absolute difference among violations: 0.01666638
Max relative difference among violations: 0.03999919
ACTUAL: array([[[[0.593162]],
[[0.4247  ]],...
DESIRED: array([[[[0.577635]],
[[0.43725 ]],...
2025-04-27 02:25:49.816387 test begin: paddle.nn.functional.hardsigmoid(Tensor([128, 40, 1, 1],"float32"), slope=0.2, offset=0.5, )
[accuracy error] paddle.nn.functional.hardsigmoid(Tensor([128, 40, 1, 1],"float32"), slope=0.2, offset=0.5, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 520 / 5120 (10.2%)
Max absolute difference among violations: 0.01666254
Max relative difference among violations: 0.03998174
ACTUAL: array([[[[0.471775]],
[[0.419963]],...
DESIRED: array([[[[0.476479]],
[[0.433303]],...
2025-04-27 02:25:50.145624 test begin: paddle.nn.functional.hardsigmoid(Tensor([128, 480, 1, 1],"float32"), slope=0.2, offset=0.5, )
[accuracy error] paddle.nn.functional.hardsigmoid(Tensor([128, 480, 1, 1],"float32"), slope=0.2, offset=0.5, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 6041 / 61440 (9.83%)
Max absolute difference among violations: 0.01666647
Max relative difference among violations: 0.03999661
ACTUAL: array([[[[0.464068]],
[[0.573826]],...
DESIRED: array([[[[0.470057]],
[[0.561522]],...
2025-04-27 02:25:50.550883 test begin: paddle.nn.functional.hardsigmoid(Tensor([128, 504, 1, 1],"float32"), slope=0.2, offset=0.5, )
[accuracy error] paddle.nn.functional.hardsigmoid(Tensor([128, 504, 1, 1],"float32"), slope=0.2, offset=0.5, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 6143 / 64512 (9.52%)
Max absolute difference among violations: 0.01666638
Max relative difference among violations: 0.03999916
ACTUAL: array([[[[0.490735]],
[[0.465669]],...
DESIRED: array([[[[0.492279]],
[[0.471391]],...
2025-04-27 02:25:51.367581 test begin: paddle.nn.functional.hardsigmoid(Tensor([128, 56, 1, 1],"float32"), slope=0.2, offset=0.5, )
[accuracy error] paddle.nn.functional.hardsigmoid(Tensor([128, 56, 1, 1],"float32"), slope=0.2, offset=0.5, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 723 / 7168 (10.1%)
Max absolute difference among violations: 0.01666588
Max relative difference among violations: 0.03997926
ACTUAL: array([[[[0.586616]],
[[0.588486]],...
DESIRED: array([[[[0.57218 ]],
[[0.573738]],...
2025-04-27 02:25:51.819430 test begin: paddle.nn.functional.hardsigmoid(Tensor([128, 600, 1, 1],"float32"), slope=0.2, offset=0.5, )
[accuracy error] paddle.nn.functional.hardsigmoid(Tensor([128, 600, 1, 1],"float32"), slope=0.2, offset=0.5, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 7531 / 76800 (9.81%)
Max absolute difference among violations: 0.01666647
Max relative difference among violations: 0.03999936
ACTUAL: array([[[[0.543781]],
[[0.497471]],...
DESIRED: array([[[[0.536484]],
[[0.497892]],...
2025-04-27 02:25:52.141260 test begin: paddle.nn.functional.hardsigmoid(Tensor([128, 64, 1, 1],"float32"), slope=0.2, offset=0.5, )
[accuracy error] paddle.nn.functional.hardsigmoid(Tensor([128, 64, 1, 1],"float32"), slope=0.2, offset=0.5, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 843 / 8192 (10.3%)
Max absolute difference among violations: 0.01666662
Max relative difference among violations: 0.03999987
ACTUAL: array([[[[0.512709]],
[[0.597327]],...
DESIRED: array([[[[0.510591]],
[[0.581106]],...
2025-04-27 02:25:52.828734 test begin: paddle.nn.functional.hardsigmoid(Tensor([128, 672, 1, 1],"float32"), slope=0.2, offset=0.5, )
[accuracy error] paddle.nn.functional.hardsigmoid(Tensor([128, 672, 1, 1],"float32"), slope=0.2, offset=0.5, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 8570 / 86016 (9.96%)
Max absolute difference among violations: 0.01666647
Max relative difference among violations: 0.03999815
ACTUAL: array([[[[0.434775]],
[[0.509713]],...
DESIRED: array([[[[0.445645]],
[[0.508095]],...
2025-04-27 02:25:53.177279 test begin: paddle.nn.functional.hardsigmoid(Tensor([128, 72, 1, 1],"float32"), slope=0.2, offset=0.5, )
[accuracy error] paddle.nn.functional.hardsigmoid(Tensor([128, 72, 1, 1],"float32"), slope=0.2, offset=0.5, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 923 / 9216 (10%)
Max absolute difference among violations: 0.01666653
Max relative difference among violations: 0.03999712
ACTUAL: array([[[[0.587675]],
[[0.49741 ]],...
DESIRED: array([[[[0.573063]],
[[0.497841]],...
2025-04-27 02:25:53.544218 test begin: paddle.nn.functional.hardsigmoid(Tensor([128, 720, 1, 1],"float32"), slope=0.2, offset=0.5, )
[accuracy error] paddle.nn.functional.hardsigmoid(Tensor([128, 720, 1, 1],"float32"), slope=0.2, offset=0.5, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 9122 / 92160 (9.9%)
Max absolute difference among violations: 0.01666668
Max relative difference among violations: 0.04000003
ACTUAL: array([[[[0.452633]],
[[0.520002]],...
DESIRED: array([[[[0.460528]],
[[0.516668]],...
2025-04-27 02:25:54.138770 test begin: paddle.nn.functional.hardsigmoid(Tensor([128, 840, 1, 1],"float32"), slope=0.2, offset=0.5, )
[accuracy error] paddle.nn.functional.hardsigmoid(Tensor([128, 840, 1, 1],"float32"), slope=0.2, offset=0.5, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 10650 / 107520 (9.91%)
Max absolute difference among violations: 0.01666653
Max relative difference among violations: 0.03999822
ACTUAL: array([[[[0.496799]],
[[0.489815]],...
DESIRED: array([[[[0.497332]],
[[0.491513]],...
2025-04-27 02:25:54.531162 test begin: paddle.nn.functional.hardsigmoid(Tensor([128, 88, 1, 1],"float32"), slope=0.2, offset=0.5, )
[accuracy error] paddle.nn.functional.hardsigmoid(Tensor([128, 88, 1, 1],"float32"), slope=0.2, offset=0.5, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1141 / 11264 (10.1%)
Max absolute difference among violations: 0.01666403
Max relative difference among violations: 0.03998948
ACTUAL: array([[[[0.534   ]],
[[0.464245]],...
DESIRED: array([[[[0.528334]],
[[0.470204]],...
2025-04-27 02:25:55.005261 test begin: paddle.nn.functional.hardsigmoid(Tensor([128, 960, 1, 1],"float32"), slope=0.2, offset=0.5, )
[accuracy error] paddle.nn.functional.hardsigmoid(Tensor([128, 960, 1, 1],"float32"), slope=0.2, offset=0.5, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 11899 / 122880 (9.68%)
Max absolute difference among violations: 0.01666662
Max relative difference among violations: 0.03999988
ACTUAL: array([[[[0.443412]],
[[0.449515]],...
DESIRED: array([[[[0.452843]],
[[0.457929]],...
2025-04-27 02:25:56.198192 test begin: paddle.nn.functional.hardsigmoid(Tensor([16, 240, 1, 1],"float32"), slope=0.2, offset=0.5, )
[accuracy error] paddle.nn.functional.hardsigmoid(Tensor([16, 240, 1, 1],"float32"), slope=0.2, offset=0.5, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 349 / 3840 (9.09%)
Max absolute difference among violations: 0.01666045
Max relative difference among violations: 0.03995464
ACTUAL: array([[[[0.595846]],
[[0.414948]],...
DESIRED: array([[[[0.579872]],
[[0.429124]],...
2025-04-27 02:25:57.317395 test begin: paddle.nn.functional.hardsigmoid(Tensor([16, 336, 1, 1],"float32"), slope=0.2, offset=0.5, )
[accuracy error] paddle.nn.functional.hardsigmoid(Tensor([16, 336, 1, 1],"float32"), slope=0.2, offset=0.5, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 542 / 5376 (10.1%)
Max absolute difference among violations: 0.01666361
Max relative difference among violations: 0.0399912
ACTUAL: array([[[[0.503408]],
[[0.428465]],...
DESIRED: array([[[[0.50284 ]],
[[0.440387]],...
2025-04-27 02:25:58.569740 test begin: paddle.nn.functional.hardsigmoid(Tensor([16, 40, 1, 1],"float32"), slope=0.2, offset=0.5, )
[accuracy error] paddle.nn.functional.hardsigmoid(Tensor([16, 40, 1, 1],"float32"), slope=0.2, offset=0.5, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 59 / 640 (9.22%)
Max absolute difference among violations: 0.01663253
Max relative difference among violations: 0.03990171
ACTUAL: array([[[[0.453756]],
[[0.425286]],...
DESIRED: array([[[[0.461463]],
[[0.437739]],...
2025-04-27 02:25:59.354600 test begin: paddle.nn.functional.hardsigmoid(Tensor([16, 480, 1, 1],"float32"), slope=0.2, offset=0.5, )
[accuracy error] paddle.nn.functional.hardsigmoid(Tensor([16, 480, 1, 1],"float32"), slope=0.2, offset=0.5, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 750 / 7680 (9.77%)
Max absolute difference among violations: 0.01666433
Max relative difference among violations: 0.03997909
ACTUAL: array([[[[0.559021]],
[[0.552742]],...
DESIRED: array([[[[0.549184]],
[[0.543952]],...
2025-04-27 02:26:00.554808 test begin: paddle.nn.functional.hardsigmoid(Tensor([16, 64, 1, 1],"float32"), slope=0.2, offset=0.5, )
[accuracy error] paddle.nn.functional.hardsigmoid(Tensor([16, 64, 1, 1],"float32"), slope=0.2, offset=0.5, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 100 / 1024 (9.77%)
Max absolute difference among violations: 0.01666582
Max relative difference among violations: 0.0398693
ACTUAL: array([[[[0.422235]],
[[0.487616]],...
DESIRED: array([[[[0.435196]],
[[0.48968 ]],...
2025-04-27 02:26:11.318428 test begin: paddle.nn.functional.hardsigmoid(Tensor([256, 104, 1, 1],"float32"), slope=0.2, offset=0.5, )
[accuracy error] paddle.nn.functional.hardsigmoid(Tensor([256, 104, 1, 1],"float32"), slope=0.2, offset=0.5, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2618 / 26624 (9.83%)
Max absolute difference among violations: 0.01666403
Max relative difference among violations: 0.03999195
ACTUAL: array([[[[0.553269]],
[[0.453248]],...
DESIRED: array([[[[0.544391]],
[[0.46104 ]],...
2025-04-27 02:26:11.613800 test begin: paddle.nn.functional.hardsigmoid(Tensor([256, 112, 1, 1],"float32"), slope=0.2, offset=0.5, )
[accuracy error] paddle.nn.functional.hardsigmoid(Tensor([256, 112, 1, 1],"float32"), slope=0.2, offset=0.5, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2759 / 28672 (9.62%)
Max absolute difference among violations: 0.01666635
Max relative difference among violations: 0.03999909
ACTUAL: array([[[[0.443012]],
[[0.580096]],...
DESIRED: array([[[[0.45251 ]],
[[0.566747]],...
2025-04-27 02:26:11.982727 test begin: paddle.nn.functional.hardsigmoid(Tensor([256, 120, 1, 1],"float32"), slope=0.2, offset=0.5, )
[accuracy error] paddle.nn.functional.hardsigmoid(Tensor([256, 120, 1, 1],"float32"), slope=0.2, offset=0.5, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 3021 / 30720 (9.83%)
Max absolute difference among violations: 0.01666665
Max relative difference among violations: 0.03999917
ACTUAL: array([[[[0.499974]],
[[0.574832]],...
DESIRED: array([[[[0.499978]],
[[0.56236 ]],...
2025-04-27 02:26:13.281421 test begin: paddle.nn.functional.hardsigmoid(Tensor([256, 144, 1, 1],"float32"), slope=0.2, offset=0.5, )
[accuracy error] paddle.nn.functional.hardsigmoid(Tensor([256, 144, 1, 1],"float32"), slope=0.2, offset=0.5, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 3578 / 36864 (9.71%)
Max absolute difference among violations: 0.01666605
Max relative difference among violations: 0.03999729
ACTUAL: array([[[[0.519345]],
[[0.408749]],...
DESIRED: array([[[[0.516121]],
[[0.423957]],...
2025-04-27 02:26:13.650347 test begin: paddle.nn.functional.hardsigmoid(Tensor([256, 152, 1, 1],"float32"), slope=0.2, offset=0.5, )
[accuracy error] paddle.nn.functional.hardsigmoid(Tensor([256, 152, 1, 1],"float32"), slope=0.2, offset=0.5, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 3935 / 38912 (10.1%)
Max absolute difference among violations: 0.01666617
Max relative difference among violations: 0.03999575
ACTUAL: array([[[[0.523594]],
[[0.550349]],...
DESIRED: array([[[[0.519662]],
[[0.541957]],...
2025-04-27 02:26:13.960814 test begin: paddle.nn.functional.hardsigmoid(Tensor([256, 16, 1, 1],"float32"), slope=0.2, offset=0.5, )
[accuracy error] paddle.nn.functional.hardsigmoid(Tensor([256, 16, 1, 1],"float32"), slope=0.2, offset=0.5, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 407 / 4096 (9.94%)
Max absolute difference among violations: 0.01666602
Max relative difference among violations: 0.03999815
ACTUAL: array([[[[0.430767]],
[[0.434509]],...
DESIRED: array([[[[0.442306]],
[[0.445424]],...
2025-04-27 02:26:14.613169 test begin: paddle.nn.functional.hardsigmoid(Tensor([256, 184, 1, 1],"float32"), slope=0.2, offset=0.5, )
[accuracy error] paddle.nn.functional.hardsigmoid(Tensor([256, 184, 1, 1],"float32"), slope=0.2, offset=0.5, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 4576 / 47104 (9.71%)
Max absolute difference among violations: 0.01666662
Max relative difference among violations: 0.03999986
ACTUAL: array([[[[0.511837]],
[[0.550701]],...
DESIRED: array([[[[0.509864]],
[[0.542251]],...
2025-04-27 02:26:15.308986 test begin: paddle.nn.functional.hardsigmoid(Tensor([256, 200, 1, 1],"float32"), slope=0.2, offset=0.5, )
[accuracy error] paddle.nn.functional.hardsigmoid(Tensor([256, 200, 1, 1],"float32"), slope=0.2, offset=0.5, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 4921 / 51200 (9.61%)
Max absolute difference among violations: 0.01666617
Max relative difference among violations: 0.03999738
ACTUAL: array([[[[0.515287]],
[[0.54559 ]],...
DESIRED: array([[[[0.512739]],
[[0.537991]],...
2025-04-27 02:26:15.632642 test begin: paddle.nn.functional.hardsigmoid(Tensor([256, 216, 1, 1],"float32"), slope=0.2, offset=0.5, )
[accuracy error] paddle.nn.functional.hardsigmoid(Tensor([256, 216, 1, 1],"float32"), slope=0.2, offset=0.5, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 5459 / 55296 (9.87%)
Max absolute difference among violations: 0.01666656
Max relative difference among violations: 0.03999968
ACTUAL: array([[[[0.54799 ]],
[[0.512603]],...
DESIRED: array([[[[0.539992]],
[[0.510503]],...
2025-04-27 02:26:16.012876 test begin: paddle.nn.functional.hardsigmoid(Tensor([256, 24, 1, 1],"float32"), slope=0.2, offset=0.5, )
[accuracy error] paddle.nn.functional.hardsigmoid(Tensor([256, 24, 1, 1],"float32"), slope=0.2, offset=0.5, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 636 / 6144 (10.4%)
Max absolute difference among violations: 0.01666522
Max relative difference among violations: 0.03999094
ACTUAL: array([[[[0.583068]],
[[0.587703]],...
DESIRED: array([[[[0.569224]],
[[0.573085]],...
2025-04-27 02:26:16.625592 test begin: paddle.nn.functional.hardsigmoid(Tensor([256, 240, 1, 1],"float32"), slope=0.2, offset=0.5, )
[accuracy error] paddle.nn.functional.hardsigmoid(Tensor([256, 240, 1, 1],"float32"), slope=0.2, offset=0.5, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 5935 / 61440 (9.66%)
Max absolute difference among violations: 0.01666653
Max relative difference among violations: 0.03999917
ACTUAL: array([[[[0.401499]],
[[0.504909]],...
DESIRED: array([[[[0.417916]],
[[0.504091]],...
2025-04-27 02:26:17.289409 test begin: paddle.nn.functional.hardsigmoid(Tensor([256, 288, 1, 1],"float32"), slope=0.2, offset=0.5, )
[accuracy error] paddle.nn.functional.hardsigmoid(Tensor([256, 288, 1, 1],"float32"), slope=0.2, offset=0.5, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 7211 / 73728 (9.78%)
Max absolute difference among violations: 0.01666659
Max relative difference among violations: 0.0399995
ACTUAL: array([[[[0.520851]],
[[0.541108]],...
DESIRED: array([[[[0.517376]],
[[0.534257]],...
2025-04-27 02:26:17.578025 test begin: paddle.nn.functional.hardsigmoid(Tensor([256, 304, 1, 1],"float32"), slope=0.2, offset=0.5, )
[accuracy error] paddle.nn.functional.hardsigmoid(Tensor([256, 304, 1, 1],"float32"), slope=0.2, offset=0.5, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 7603 / 77824 (9.77%)
Max absolute difference among violations: 0.01666665
Max relative difference among violations: 0.03999985
ACTUAL: array([[[[0.572607]],
[[0.41204 ]],...
DESIRED: array([[[[0.560506]],
[[0.4267  ]],...
2025-04-27 02:26:17.866630 test begin: paddle.nn.functional.hardsigmoid(Tensor([256, 32, 1, 1],"float32"), slope=0.2, offset=0.5, )
[accuracy error] paddle.nn.functional.hardsigmoid(Tensor([256, 32, 1, 1],"float32"), slope=0.2, offset=0.5, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 811 / 8192 (9.9%)
Max absolute difference among violations: 0.01666588
Max relative difference among violations: 0.03999531
ACTUAL: array([[[[0.551826]],
[[0.589658]],...
DESIRED: array([[[[0.543188]],
[[0.574715]],...
2025-04-27 02:26:18.450830 test begin: paddle.nn.functional.hardsigmoid(Tensor([256, 336, 1, 1],"float32"), slope=0.2, offset=0.5, )
[accuracy error] paddle.nn.functional.hardsigmoid(Tensor([256, 336, 1, 1],"float32"), slope=0.2, offset=0.5, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 8362 / 86016 (9.72%)
Max absolute difference among violations: 0.01666659
Max relative difference among violations: 0.03999976
ACTUAL: array([[[[0.416791]],
[[0.528892]],...
DESIRED: array([[[[0.430659]],
[[0.524077]],...
2025-04-27 02:26:18.745612 test begin: paddle.nn.functional.hardsigmoid(Tensor([256, 360, 1, 1],"float32"), slope=0.2, offset=0.5, )
[accuracy error] paddle.nn.functional.hardsigmoid(Tensor([256, 360, 1, 1],"float32"), slope=0.2, offset=0.5, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 8881 / 92160 (9.64%)
Max absolute difference among violations: 0.01666659
Max relative difference among violations: 0.03999952
ACTUAL: array([[[[0.506637]],
[[0.428446]],...
DESIRED: array([[[[0.505531]],
[[0.440372]],...
2025-04-27 02:26:19.787973 test begin: paddle.nn.functional.hardsigmoid(Tensor([256, 40, 1, 1],"float32"), slope=0.2, offset=0.5, )
[accuracy error] paddle.nn.functional.hardsigmoid(Tensor([256, 40, 1, 1],"float32"), slope=0.2, offset=0.5, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1004 / 10240 (9.8%)
Max absolute difference among violations: 0.01666528
Max relative difference among violations: 0.03998931
ACTUAL: array([[[[0.581566]],
[[0.514477]],...
DESIRED: array([[[[0.567972]],
[[0.512064]],...
2025-04-27 02:26:20.107550 test begin: paddle.nn.functional.hardsigmoid(Tensor([256, 432, 1, 1],"float32"), slope=0.2, offset=0.5, )
[accuracy error] paddle.nn.functional.hardsigmoid(Tensor([256, 432, 1, 1],"float32"), slope=0.2, offset=0.5, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 10712 / 110592 (9.69%)
Max absolute difference among violations: 0.01666665
Max relative difference among violations: 0.03999994
ACTUAL: array([[[[0.510292]],
[[0.4307  ]],...
DESIRED: array([[[[0.508577]],
[[0.44225 ]],...
2025-04-27 02:26:20.490503 test begin: paddle.nn.functional.hardsigmoid(Tensor([256, 48, 1, 1],"float32"), slope=0.2, offset=0.5, )
[accuracy error] paddle.nn.functional.hardsigmoid(Tensor([256, 48, 1, 1],"float32"), slope=0.2, offset=0.5, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1196 / 12288 (9.73%)
Max absolute difference among violations: 0.01666427
Max relative difference among violations: 0.03999307
ACTUAL: array([[[[0.476698]],
[[0.473923]],...
DESIRED: array([[[[0.480581]],
[[0.478269]],...
2025-04-27 02:26:21.105815 test begin: paddle.nn.functional.hardsigmoid(Tensor([256, 480, 1, 1],"float32"), slope=0.2, offset=0.5, )
[accuracy error] paddle.nn.functional.hardsigmoid(Tensor([256, 480, 1, 1],"float32"), slope=0.2, offset=0.5, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 12026 / 122880 (9.79%)
Max absolute difference among violations: 0.01666656
Max relative difference among violations: 0.03999968
ACTUAL: array([[[[0.457503]],
[[0.480928]],...
DESIRED: array([[[[0.464586]],
[[0.484107]],...
2025-04-27 02:26:21.943802 test begin: paddle.nn.functional.hardsigmoid(Tensor([256, 576, 1, 1],"float32"), slope=0.2, offset=0.5, )
[accuracy error] paddle.nn.functional.hardsigmoid(Tensor([256, 576, 1, 1],"float32"), slope=0.2, offset=0.5, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 14383 / 147456 (9.75%)
Max absolute difference among violations: 0.01666635
Max relative difference among violations: 0.0399991
ACTUAL: array([[[[0.598227]],
[[0.448375]],...
DESIRED: array([[[[0.581856]],
[[0.456979]],...
2025-04-27 02:26:22.882841 test begin: paddle.nn.functional.hardsigmoid(Tensor([256, 64, 1, 1],"float32"), slope=0.2, offset=0.5, )
[accuracy error] paddle.nn.functional.hardsigmoid(Tensor([256, 64, 1, 1],"float32"), slope=0.2, offset=0.5, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1659 / 16384 (10.1%)
Max absolute difference among violations: 0.01666653
Max relative difference among violations: 0.03999799
ACTUAL: array([[[[0.571786]],
[[0.446732]],...
DESIRED: array([[[[0.559822]],
[[0.45561 ]],...
2025-04-27 02:26:24.101864 test begin: paddle.nn.functional.hardsigmoid(Tensor([256, 72, 1, 1],"float32"), slope=0.2, offset=0.5, )
[accuracy error] paddle.nn.functional.hardsigmoid(Tensor([256, 72, 1, 1],"float32"), slope=0.2, offset=0.5, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1801 / 18432 (9.77%)
Max absolute difference among violations: 0.01666597
Max relative difference among violations: 0.03999796
ACTUAL: array([[[[0.498332]],
[[0.413715]],...
DESIRED: array([[[[0.49861 ]],
[[0.428096]],...
2025-04-27 02:26:24.546692 test begin: paddle.nn.functional.hardsigmoid(Tensor([256, 720, 1, 1],"float32"), slope=0.2, offset=0.5, )
[accuracy error] paddle.nn.functional.hardsigmoid(Tensor([256, 720, 1, 1],"float32"), slope=0.2, offset=0.5, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 18145 / 184320 (9.84%)
Max absolute difference among violations: 0.01666662
Max relative difference among violations: 0.03999986
ACTUAL: array([[[[0.43137 ]],
[[0.441642]],...
DESIRED: array([[[[0.442809]],
[[0.451368]],...
2025-04-27 02:26:24.877978 test begin: paddle.nn.functional.hardsigmoid(Tensor([256, 8, 1, 1],"float32"), slope=0.2, offset=0.5, )
[accuracy error] paddle.nn.functional.hardsigmoid(Tensor([256, 8, 1, 1],"float32"), slope=0.2, offset=0.5, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 213 / 2048 (10.4%)
Max absolute difference among violations: 0.0166491
Max relative difference among violations: 0.03994941
ACTUAL: array([[[[0.493606]],
[[0.549796]],...
DESIRED: array([[[[0.494672]],
[[0.541496]],...
2025-04-27 02:26:25.584796 test begin: paddle.nn.functional.hardsigmoid(Tensor([256, 88, 1, 1],"float32"), slope=0.2, offset=0.5, )
[accuracy error] paddle.nn.functional.hardsigmoid(Tensor([256, 88, 1, 1],"float32"), slope=0.2, offset=0.5, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2196 / 22528 (9.75%)
Max absolute difference among violations: 0.01666635
Max relative difference among violations: 0.03999497
ACTUAL: array([[[[0.596327]],
[[0.582868]],...
DESIRED: array([[[[0.580273]],
[[0.569056]],...
2025-04-27 02:26:25.993313 test begin: paddle.nn.functional.hardsigmoid(Tensor([256, 96, 1, 1],"float32"), slope=0.2, offset=0.5, )
[accuracy error] paddle.nn.functional.hardsigmoid(Tensor([256, 96, 1, 1],"float32"), slope=0.2, offset=0.5, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2460 / 24576 (10%)
Max absolute difference among violations: 0.01666659
Max relative difference among violations: 0.03999978
ACTUAL: array([[[[0.559893]],
[[0.476294]],...
DESIRED: array([[[[0.549911]],
[[0.480245]],...
2025-04-27 02:26:30.273314 test begin: paddle.nn.functional.hardsigmoid(Tensor([4, 120, 1, 1],"float32"), slope=0.2, offset=0.5, )
[accuracy error] paddle.nn.functional.hardsigmoid(Tensor([4, 120, 1, 1],"float32"), slope=0.2, offset=0.5, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 60 / 480 (12.5%)
Max absolute difference among violations: 0.01663452
Max relative difference among violations: 0.03983688
ACTUAL: array([[[[0.523422]],
[[0.409568]],...
DESIRED: array([[[[0.519518]],
[[0.42464 ]],...
2025-04-27 02:26:30.982334 test begin: paddle.nn.functional.hardsigmoid(Tensor([4, 128, 1, 1],"float32"), slope=0.2, offset=0.5, )
[accuracy error] paddle.nn.functional.hardsigmoid(Tensor([4, 128, 1, 1],"float32"), slope=0.2, offset=0.5, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 53 / 512 (10.4%)
Max absolute difference among violations: 0.01661932
Max relative difference among violations: 0.03979439
ACTUAL: array([[[[0.572837]],
[[0.543867]],...
DESIRED: array([[[[0.560698]],
[[0.536556]],...
2025-04-27 02:26:32.110912 test begin: paddle.nn.functional.hardsigmoid(Tensor([4, 16, 1, 1],"float32"), slope=0.2, offset=0.5, )
[accuracy error] paddle.nn.functional.hardsigmoid(Tensor([4, 16, 1, 1],"float32"), slope=0.2, offset=0.5, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 6 / 64 (9.38%)
Max absolute difference among violations: 0.01628032
Max relative difference among violations: 0.03889244
ACTUAL: array([[[[0.46705 ]],
[[0.575433]],...
DESIRED: array([[[[0.472542]],
[[0.562861]],...
2025-04-27 02:26:33.133523 test begin: paddle.nn.functional.hardsigmoid(Tensor([4, 24, 1, 1],"float32"), slope=0.2, offset=0.5, )
[accuracy error] paddle.nn.functional.hardsigmoid(Tensor([4, 24, 1, 1],"float32"), slope=0.2, offset=0.5, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 7 / 96 (7.29%)
Max absolute difference among violations: 0.01645303
Max relative difference among violations: 0.03938629
ACTUAL: array([[[[0.545835]],
[[0.439771]],...
DESIRED: array([[[[0.538195]],
[[0.449809]],...
2025-04-27 02:26:34.545481 test begin: paddle.nn.functional.hardsigmoid(Tensor([4, 240, 1, 1],"float32"), slope=0.2, offset=0.5, )
[accuracy error] paddle.nn.functional.hardsigmoid(Tensor([4, 240, 1, 1],"float32"), slope=0.2, offset=0.5, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 89 / 960 (9.27%)
Max absolute difference among violations: 0.01666236
Max relative difference among violations: 0.0398364
ACTUAL: array([[[[0.44593 ]],
[[0.420169]],...
DESIRED: array([[[[0.454942]],
[[0.433474]],...
2025-04-27 02:26:36.077644 test begin: paddle.nn.functional.hardsigmoid(Tensor([4, 384, 1, 1],"float32"), slope=0.2, offset=0.5, )
[accuracy error] paddle.nn.functional.hardsigmoid(Tensor([4, 384, 1, 1],"float32"), slope=0.2, offset=0.5, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 147 / 1536 (9.57%)
Max absolute difference among violations: 0.01665193
Max relative difference among violations: 0.03989254
ACTUAL: array([[[[0.576762]],
[[0.557528]],...
DESIRED: array([[[[0.563969]],
[[0.54794 ]],...
2025-04-27 02:26:38.080565 test begin: paddle.nn.functional.hardsigmoid(Tensor([4, 480, 1, 1],"float32"), slope=0.2, offset=0.5, )
[accuracy error] paddle.nn.functional.hardsigmoid(Tensor([4, 480, 1, 1],"float32"), slope=0.2, offset=0.5, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 162 / 1920 (8.44%)
Max absolute difference among violations: 0.01665717
Max relative difference among violations: 0.03997265
ACTUAL: array([[[[0.43468 ]],
[[0.462731]],...
DESIRED: array([[[[0.445566]],
[[0.468943]],...
2025-04-27 02:26:39.275599 test begin: paddle.nn.functional.hardsigmoid(Tensor([4, 672, 1, 1],"float32"), slope=0.2, offset=0.5, )
[accuracy error] paddle.nn.functional.hardsigmoid(Tensor([4, 672, 1, 1],"float32"), slope=0.2, offset=0.5, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 266 / 2688 (9.9%)
Max absolute difference among violations: 0.01665795
Max relative difference among violations: 0.03997489
ACTUAL: array([[[[0.438234]],
[[0.520583]],...
DESIRED: array([[[[0.448528]],
[[0.517152]],...
2025-04-27 02:26:39.968191 test begin: paddle.nn.functional.hardsigmoid(Tensor([4, 72, 1, 1],"float32"), slope=0.2, offset=0.5, )
[accuracy error] paddle.nn.functional.hardsigmoid(Tensor([4, 72, 1, 1],"float32"), slope=0.2, offset=0.5, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 27 / 288 (9.38%)
Max absolute difference among violations: 0.01664841
Max relative difference among violations: 0.03983228
ACTUAL: array([[[[0.521126]],
[[0.489349]],...
DESIRED: array([[[[0.517605]],
[[0.491124]],...
2025-04-27 02:26:40.914704 test begin: paddle.nn.functional.hardsigmoid(Tensor([4, 768, 1, 1],"float32"), slope=0.2, offset=0.5, )
[accuracy error] paddle.nn.functional.hardsigmoid(Tensor([4, 768, 1, 1],"float32"), slope=0.2, offset=0.5, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 289 / 3072 (9.41%)
Max absolute difference among violations: 0.01666656
Max relative difference among violations: 0.03999968
ACTUAL: array([[[[0.538453]],
[[0.525289]],...
DESIRED: array([[[[0.532044]],
[[0.521074]],...
2025-04-27 02:26:42.003001 test begin: paddle.nn.functional.hardsigmoid(Tensor([4, 96, 1, 1],"float32"), slope=0.2, offset=0.5, )
[accuracy error] paddle.nn.functional.hardsigmoid(Tensor([4, 96, 1, 1],"float32"), slope=0.2, offset=0.5, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 41 / 384 (10.7%)
Max absolute difference among violations: 0.01664034
Max relative difference among violations: 0.03992418
ACTUAL: array([[[[0.567623]],
[[0.514723]],...
DESIRED: array([[[[0.556352]],
[[0.512269]],...
2025-04-27 02:26:43.052635 test begin: paddle.nn.functional.hardsigmoid(Tensor([4, 960, 1, 1],"float32"), slope=0.2, offset=0.5, )
[accuracy error] paddle.nn.functional.hardsigmoid(Tensor([4, 960, 1, 1],"float32"), slope=0.2, offset=0.5, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 380 / 3840 (9.9%)
Max absolute difference among violations: 0.01666641
Max relative difference among violations: 0.03999919
ACTUAL: array([[[[0.521687]],
[[0.596365]],...
DESIRED: array([[[[0.518072]],
[[0.580304]],...
2025-04-27 02:26:46.535512 test begin: paddle.nn.functional.hardsigmoid(Tensor([512, 120, 1, 1],"float32"), slope=0.2, offset=0.5, )
[accuracy error] paddle.nn.functional.hardsigmoid(Tensor([512, 120, 1, 1],"float32"), slope=0.2, offset=0.5, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 6000 / 61440 (9.77%)
Max absolute difference among violations: 0.01666629
Max relative difference among violations: 0.03999891
ACTUAL: array([[[[0.461901]],
[[0.596167]],...
DESIRED: array([[[[0.468251]],
[[0.580139]],...
2025-04-27 02:26:48.003306 test begin: paddle.nn.functional.hardsigmoid(Tensor([512, 144, 1, 1],"float32"), slope=0.2, offset=0.5, )
[accuracy error] paddle.nn.functional.hardsigmoid(Tensor([512, 144, 1, 1],"float32"), slope=0.2, offset=0.5, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 7354 / 73728 (9.97%)
Max absolute difference among violations: 0.01666659
Max relative difference among violations: 0.03999976
ACTUAL: array([[[[0.463919]],
[[0.412079]],...
DESIRED: array([[[[0.469932]],
[[0.426733]],...
2025-04-27 02:26:48.755689 test begin: paddle.nn.functional.hardsigmoid(Tensor([512, 16, 1, 1],"float32"), slope=0.2, offset=0.5, )
[accuracy error] paddle.nn.functional.hardsigmoid(Tensor([512, 16, 1, 1],"float32"), slope=0.2, offset=0.5, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 806 / 8192 (9.84%)
Max absolute difference among violations: 0.01666623
Max relative difference among violations: 0.03998827
ACTUAL: array([[[[0.505027]],
[[0.571534]],...
DESIRED: array([[[[0.504189]],
[[0.559611]],...
2025-04-27 02:26:51.773111 test begin: paddle.nn.functional.hardsigmoid(Tensor([512, 240, 1, 1],"float32"), slope=0.2, offset=0.5, )
[accuracy error] paddle.nn.functional.hardsigmoid(Tensor([512, 240, 1, 1],"float32"), slope=0.2, offset=0.5, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 12004 / 122880 (9.77%)
Max absolute difference among violations: 0.01666665
Max relative difference among violations: 0.03999986
ACTUAL: array([[[[0.56693 ]],
[[0.447006]],...
DESIRED: array([[[[0.555775]],
[[0.455838]],...
2025-04-27 02:26:53.261089 test begin: paddle.nn.functional.hardsigmoid(Tensor([512, 288, 1, 1],"float32"), slope=0.2, offset=0.5, )
[accuracy error] paddle.nn.functional.hardsigmoid(Tensor([512, 288, 1, 1],"float32"), slope=0.2, offset=0.5, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 14308 / 147456 (9.7%)
Max absolute difference among violations: 0.01666659
Max relative difference among violations: 0.03999978
ACTUAL: array([[[[0.461028]],
[[0.505215]],...
DESIRED: array([[[[0.467523]],
[[0.504346]],...
2025-04-27 02:26:55.065392 test begin: paddle.nn.functional.hardsigmoid(Tensor([512, 48, 1, 1],"float32"), slope=0.2, offset=0.5, )
[accuracy error] paddle.nn.functional.hardsigmoid(Tensor([512, 48, 1, 1],"float32"), slope=0.2, offset=0.5, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2501 / 24576 (10.2%)
Max absolute difference among violations: 0.01666638
Max relative difference among violations: 0.03999919
ACTUAL: array([[[[0.595525]],
[[0.557004]],...
DESIRED: array([[[[0.579604]],
[[0.547503]],...
2025-04-27 02:26:56.484540 test begin: paddle.nn.functional.hardsigmoid(Tensor([512, 576, 1, 1],"float32"), slope=0.2, offset=0.5, )
[accuracy error] paddle.nn.functional.hardsigmoid(Tensor([512, 576, 1, 1],"float32"), slope=0.2, offset=0.5, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 28873 / 294912 (9.79%)
Max absolute difference among violations: 0.01666656
Max relative difference among violations: 0.03999969
ACTUAL: array([[[[0.490841]],
[[0.57689 ]],...
DESIRED: array([[[[0.492368]],
[[0.564075]],...
2025-04-27 02:26:58.534763 test begin: paddle.nn.functional.hardsigmoid(Tensor([512, 64, 1, 1],"float32"), slope=0.2, offset=0.5, )
[accuracy error] paddle.nn.functional.hardsigmoid(Tensor([512, 64, 1, 1],"float32"), slope=0.2, offset=0.5, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 3288 / 32768 (10%)
Max absolute difference among violations: 0.01666614
Max relative difference among violations: 0.0399985
ACTUAL: array([[[[0.580226]],
[[0.407126]],...
DESIRED: array([[[[0.566855]],
[[0.422605]],...
2025-04-27 02:26:59.223460 test begin: paddle.nn.functional.hardsigmoid(Tensor([512, 72, 1, 1],"float32"), slope=0.2, offset=0.5, )
[accuracy error] paddle.nn.functional.hardsigmoid(Tensor([512, 72, 1, 1],"float32"), slope=0.2, offset=0.5, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 3595 / 36864 (9.75%)
Max absolute difference among violations: 0.01666638
Max relative difference among violations: 0.03999918
ACTUAL: array([[[[0.559432]],
[[0.490086]],...
DESIRED: array([[[[0.549527]],
[[0.491739]],...
2025-04-27 02:27:00.640411 test begin: paddle.nn.functional.hardsigmoid(Tensor([512, 8, 1, 1],"float32"), slope=0.2, offset=0.5, )
[accuracy error] paddle.nn.functional.hardsigmoid(Tensor([512, 8, 1, 1],"float32"), slope=0.2, offset=0.5, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 426 / 4096 (10.4%)
Max absolute difference among violations: 0.01666605
Max relative difference among violations: 0.03998114
ACTUAL: array([[[[0.589604]],
[[0.445827]],...
DESIRED: array([[[[0.57467 ]],
[[0.454856]],...
2025-04-27 02:27:02.060606 test begin: paddle.nn.functional.hardsigmoid(Tensor([512, 96, 1, 1],"float32"), slope=0.2, offset=0.5, )
[accuracy error] paddle.nn.functional.hardsigmoid(Tensor([512, 96, 1, 1],"float32"), slope=0.2, offset=0.5, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 4716 / 49152 (9.59%)
Max absolute difference among violations: 0.01666617
Max relative difference among violations: 0.03999856
ACTUAL: array([[[[0.421985]],
[[0.456555]],...
DESIRED: array([[[[0.434988]],
[[0.463796]],...
2025-04-27 02:27:02.425795 test begin: paddle.nn.functional.hardsigmoid(Tensor([60, 240, 1, 1],"float32"), slope=0.2, offset=0.5, )
[accuracy error] paddle.nn.functional.hardsigmoid(Tensor([60, 240, 1, 1],"float32"), slope=0.2, offset=0.5, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1401 / 14400 (9.73%)
Max absolute difference among violations: 0.016666
Max relative difference among violations: 0.03999807
ACTUAL: array([[[[0.51993 ]],
[[0.481115]],...
DESIRED: array([[[[0.516608]],
[[0.484262]],...
2025-04-27 02:27:03.316329 test begin: paddle.nn.functional.hardsigmoid(Tensor([60, 336, 1, 1],"float32"), slope=0.2, offset=0.5, )
[accuracy error] paddle.nn.functional.hardsigmoid(Tensor([60, 336, 1, 1],"float32"), slope=0.2, offset=0.5, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2038 / 20160 (10.1%)
Max absolute difference among violations: 0.0166657
Max relative difference among violations: 0.03999497
ACTUAL: array([[[[0.506899]],
[[0.492088]],...
DESIRED: array([[[[0.505749]],
[[0.493406]],...
2025-04-27 02:27:03.637032 test begin: paddle.nn.functional.hardsigmoid(Tensor([60, 40, 1, 1],"float32"), slope=0.2, offset=0.5, )
[accuracy error] paddle.nn.functional.hardsigmoid(Tensor([60, 40, 1, 1],"float32"), slope=0.2, offset=0.5, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 220 / 2400 (9.17%)
Max absolute difference among violations: 0.01666602
Max relative difference among violations: 0.03999815
ACTUAL: array([[[[0.434397]],
[[0.448987]],...
DESIRED: array([[[[0.445331]],
[[0.457489]],...
2025-04-27 02:27:03.995442 test begin: paddle.nn.functional.hardsigmoid(Tensor([60, 480, 1, 1],"float32"), slope=0.2, offset=0.5, )
[accuracy error] paddle.nn.functional.hardsigmoid(Tensor([60, 480, 1, 1],"float32"), slope=0.2, offset=0.5, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2808 / 28800 (9.75%)
Max absolute difference among violations: 0.01666534
Max relative difference among violations: 0.03999247
ACTUAL: array([[[[0.502859]],
[[0.41744 ]],...
DESIRED: array([[[[0.502383]],
[[0.4312  ]],...
2025-04-27 02:27:04.824911 test begin: paddle.nn.functional.hardsigmoid(Tensor([60, 64, 1, 1],"float32"), slope=0.2, offset=0.5, )
[accuracy error] paddle.nn.functional.hardsigmoid(Tensor([60, 64, 1, 1],"float32"), slope=0.2, offset=0.5, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 384 / 3840 (10%)
Max absolute difference among violations: 0.01666659
Max relative difference among violations: 0.03997103
ACTUAL: array([[[[0.427036]],
[[0.524421]],...
DESIRED: array([[[[0.439197]],
[[0.520351]],...
2025-04-27 02:27:06.502700 test begin: paddle.nn.functional.hardsigmoid(Tensor([64, 240, 1, 1],"float32"), slope=0.2, offset=0.5, )
[accuracy error] paddle.nn.functional.hardsigmoid(Tensor([64, 240, 1, 1],"float32"), slope=0.2, offset=0.5, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1505 / 15360 (9.8%)
Max absolute difference among violations: 0.01666659
Max relative difference among violations: 0.03998715
ACTUAL: array([[[[0.492885]],
[[0.519305]],...
DESIRED: array([[[[0.49407 ]],
[[0.516087]],...
2025-04-27 02:27:08.479289 test begin: paddle.nn.functional.hardsigmoid(Tensor([64, 336, 1, 1],"float32"), slope=0.2, offset=0.5, )
[accuracy error] paddle.nn.functional.hardsigmoid(Tensor([64, 336, 1, 1],"float32"), slope=0.2, offset=0.5, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2054 / 21504 (9.55%)
Max absolute difference among violations: 0.01666576
Max relative difference among violations: 0.03999737
ACTUAL: array([[[[0.59503 ]],
[[0.402777]],...
DESIRED: array([[[[0.579192]],
[[0.418981]],...
2025-04-27 02:27:09.590811 test begin: paddle.nn.functional.hardsigmoid(Tensor([64, 40, 1, 1],"float32"), slope=0.2, offset=0.5, )
[accuracy error] paddle.nn.functional.hardsigmoid(Tensor([64, 40, 1, 1],"float32"), slope=0.2, offset=0.5, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 254 / 2560 (9.92%)
Max absolute difference among violations: 0.01666522
Max relative difference among violations: 0.03999582
ACTUAL: array([[[[0.43686 ]],
[[0.449883]],...
DESIRED: array([[[[0.447383]],
[[0.458236]],...
2025-04-27 02:27:10.845564 test begin: paddle.nn.functional.hardsigmoid(Tensor([64, 480, 1, 1],"float32"), slope=0.2, offset=0.5, )
[accuracy error] paddle.nn.functional.hardsigmoid(Tensor([64, 480, 1, 1],"float32"), slope=0.2, offset=0.5, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2971 / 30720 (9.67%)
Max absolute difference among violations: 0.01666605
Max relative difference among violations: 0.03999703
ACTUAL: array([[[[0.536255]],
[[0.414014]],...
DESIRED: array([[[[0.530213]],
[[0.428345]],...
2025-04-27 02:27:12.776888 test begin: paddle.nn.functional.hardsigmoid(Tensor([64, 64, 1, 1],"float32"), slope=0.2, offset=0.5, )
[accuracy error] paddle.nn.functional.hardsigmoid(Tensor([64, 64, 1, 1],"float32"), slope=0.2, offset=0.5, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 418 / 4096 (10.2%)
Max absolute difference among violations: 0.01666623
Max relative difference among violations: 0.03996861
ACTUAL: array([[[[0.590784]],
[[0.580521]],...
DESIRED: array([[[[0.575653]],
[[0.567101]],...
2025-04-27 02:27:13.911141 test begin: paddle.nn.functional.hardsigmoid(Tensor([640, 120, 1, 1],"float32"), slope=0.2, offset=0.5, )
[accuracy error] paddle.nn.functional.hardsigmoid(Tensor([640, 120, 1, 1],"float32"), slope=0.2, offset=0.5, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 7604 / 76800 (9.9%)
Max absolute difference among violations: 0.01666641
Max relative difference among violations: 0.03999925
ACTUAL: array([[[[0.533635]],
[[0.440977]],...
DESIRED: array([[[[0.528029]],
[[0.450814]],...
2025-04-27 02:27:14.547094 test begin: paddle.nn.functional.hardsigmoid(Tensor([640, 480, 1, 1],"float32"), slope=0.2, offset=0.5, )
[accuracy error] paddle.nn.functional.hardsigmoid(Tensor([640, 480, 1, 1],"float32"), slope=0.2, offset=0.5, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 29961 / 307200 (9.75%)
Max absolute difference among violations: 0.01666668
Max relative difference among violations: 0.04000003
ACTUAL: array([[[[0.572826]],
[[0.558943]],...
DESIRED: array([[[[0.560688]],
[[0.549119]],...
2025-04-27 02:27:15.200474 test begin: paddle.nn.functional.hardsigmoid(Tensor([640, 672, 1, 1],"float32"), slope=0.2, offset=0.5, )
[accuracy error] paddle.nn.functional.hardsigmoid(Tensor([640, 672, 1, 1],"float32"), slope=0.2, offset=0.5, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 42229 / 430080 (9.82%)
Max absolute difference among violations: 0.01666659
Max relative difference among violations: 0.03999962
ACTUAL: array([[[[0.529378]],
[[0.506624]],...
DESIRED: array([[[[0.524482]],
[[0.50552 ]],...
2025-04-27 02:27:15.878933 test begin: paddle.nn.functional.hardsigmoid(Tensor([640, 72, 1, 1],"float32"), slope=0.2, offset=0.5, )
[accuracy error] paddle.nn.functional.hardsigmoid(Tensor([640, 72, 1, 1],"float32"), slope=0.2, offset=0.5, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 4519 / 46080 (9.81%)
Max absolute difference among violations: 0.01666665
Max relative difference among violations: 0.03999933
ACTUAL: array([[[[0.430284]],
[[0.585523]],...
DESIRED: array([[[[0.441903]],
[[0.571269]],...
2025-04-27 02:27:16.504833 test begin: paddle.nn.functional.hardsigmoid(Tensor([640, 960, 1, 1],"float32"), slope=0.2, offset=0.5, )
[accuracy error] paddle.nn.functional.hardsigmoid(Tensor([640, 960, 1, 1],"float32"), slope=0.2, offset=0.5, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 59915 / 614400 (9.75%)
Max absolute difference among violations: 0.01666659
Max relative difference among violations: 0.03999968
ACTUAL: array([[[[0.447584]],
[[0.473428]],...
DESIRED: array([[[[0.45632 ]],
[[0.477857]],...
2025-04-27 02:27:17.136134 test begin: paddle.nn.functional.hardsigmoid(Tensor([8, 120, 1, 1],"float32"), slope=0.2, offset=0.5, )
[accuracy error] paddle.nn.functional.hardsigmoid(Tensor([8, 120, 1, 1],"float32"), slope=0.2, offset=0.5, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 100 / 960 (10.4%)
Max absolute difference among violations: 0.01664212
Max relative difference among violations: 0.03992933
ACTUAL: array([[[[0.507957]],
[[0.50539 ]],...
DESIRED: array([[[[0.506631]],
[[0.504492]],...
2025-04-27 02:27:19.843893 test begin: paddle.nn.functional.hardsigmoid(Tensor([8, 24, 1, 1],"float32"), slope=0.2, offset=0.5, )
[accuracy error] paddle.nn.functional.hardsigmoid(Tensor([8, 24, 1, 1],"float32"), slope=0.2, offset=0.5, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 20 / 192 (10.4%)
Max absolute difference among violations: 0.01665053
Max relative difference among violations: 0.03995351
ACTUAL: array([[[[0.47954 ]],
[[0.58449 ]],...
DESIRED: array([[[[0.48295 ]],
[[0.570408]],...
2025-04-27 02:27:23.103851 test begin: paddle.nn.functional.hardsigmoid(Tensor([8, 480, 1, 1],"float32"), slope=0.2, offset=0.5, )
[accuracy error] paddle.nn.functional.hardsigmoid(Tensor([8, 480, 1, 1],"float32"), slope=0.2, offset=0.5, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 363 / 3840 (9.45%)
Max absolute difference among violations: 0.01665702
Max relative difference among violations: 0.03997223
ACTUAL: array([[[[0.489111]],
[[0.515905]],...
DESIRED: array([[[[0.490926]],
[[0.513254]],...
2025-04-27 02:27:24.406498 test begin: paddle.nn.functional.hardsigmoid(Tensor([8, 672, 1, 1],"float32"), slope=0.2, offset=0.5, )
[accuracy error] paddle.nn.functional.hardsigmoid(Tensor([8, 672, 1, 1],"float32"), slope=0.2, offset=0.5, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 558 / 5376 (10.4%)
Max absolute difference among violations: 0.01666623
Max relative difference among violations: 0.03999317
ACTUAL: array([[[[0.448067]],
[[0.529659]],...
DESIRED: array([[[[0.456722]],
[[0.524716]],...
2025-04-27 02:27:24.988875 test begin: paddle.nn.functional.hardsigmoid(Tensor([8, 72, 1, 1],"float32"), slope=0.2, offset=0.5, )
[accuracy error] paddle.nn.functional.hardsigmoid(Tensor([8, 72, 1, 1],"float32"), slope=0.2, offset=0.5, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 79 / 576 (13.7%)
Max absolute difference among violations: 0.01665872
Max relative difference among violations: 0.03997712
ACTUAL: array([[[[0.513584]],
[[0.538286]],...
DESIRED: array([[[[0.51132 ]],
[[0.531905]],...
2025-04-27 02:27:27.013212 test begin: paddle.nn.functional.hardsigmoid(Tensor([8, 96, 1, 1],"float32"), slope=0.2, offset=0.5, )
[accuracy error] paddle.nn.functional.hardsigmoid(Tensor([8, 96, 1, 1],"float32"), slope=0.2, offset=0.5, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 71 / 768 (9.24%)
Max absolute difference among violations: 0.01666254
Max relative difference among violations: 0.03977365
ACTUAL: array([[[[0.436565]],
[[0.45302 ]],...
DESIRED: array([[[[0.447137]],
[[0.46085 ]],...
2025-04-27 02:27:27.478174 test begin: paddle.nn.functional.hardsigmoid(Tensor([8, 960, 1, 1],"float32"), slope=0.2, offset=0.5, )
[accuracy error] paddle.nn.functional.hardsigmoid(Tensor([8, 960, 1, 1],"float32"), slope=0.2, offset=0.5, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 792 / 7680 (10.3%)
Max absolute difference among violations: 0.016666
Max relative difference among violations: 0.03998022
ACTUAL: array([[[[0.588643]],
[[0.462413]],...
DESIRED: array([[[[0.573869]],
[[0.468677]],...
2025-04-27 18:39:01.464626 test begin: paddle.nn.functional.rrelu(Tensor([1, 2, 3, 4],"float64"), lower=0.05, upper=0.25, training=True, )
[accuracy error] paddle.nn.functional.rrelu(Tensor([1, 2, 3, 4],"float64"), lower=0.05, upper=0.25, training=True, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 6 / 24 (25%)
Max absolute difference among violations: 0.07096903
Max relative difference among violations: 3.7235094
ACTUAL: array([[[[-0.068542,  0.228109,  0.41666 , -0.004199],
[-0.032257,  0.475688,  0.36072 , -0.04435 ],
[ 0.285753, -0.026171, -0.098087,  0.293502]],...
DESIRED: array([[[[-0.059188,  0.228109,  0.41666 , -0.00977 ],
[-0.032618,  0.475688,  0.36072 , -0.109252],
[ 0.285753, -0.009567, -0.027118,  0.293502]],...
2025-04-27 00:00:18.465296 test begin: paddle.prod(x=Tensor([2, 2],"int32"), )
element 0 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.prod(x=Tensor([2, 2],"int32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 95155378400002048
Max relative difference among violations: 1.00000001
ACTUAL: array(-1057954192, dtype=int32)
DESIRED: array(95155377342047856)
2025-04-27 04:43:12.717014 test begin: paddle.std(Tensor([],"float32"), )
/root/anaconda3/envs/test2/lib/python3.9/site-packages/torch/utils/_device.py:104: UserWarning: std(): degrees of freedom is <= 0. Correction should be strictly less than the reduction factor (input numel divided by output numel). (Triggered internally at /pytorch/aten/src/ATen/native/ReduceOps.cpp:1831.)
return func(*args, **kwargs)
[accuracy error] paddle.std(Tensor([],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
nan location mismatch:
ACTUAL: array(0., dtype=float32)
DESIRED: array(nan, dtype=float32)
2025-04-27 04:43:12.923212 test begin: paddle.std(Tensor([],"float32"), list[], )
[accuracy error] paddle.std(Tensor([],"float32"), list[], )
Not equal to tolerance rtol=0.01, atol=0.01
nan location mismatch:
ACTUAL: array(0., dtype=float32)
DESIRED: array(nan, dtype=float32)
2025-04-27 04:43:43.798961 test begin: paddle.sum(Tensor([100, 102144],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([100, 102144],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 100 / 100 (100%)
Max absolute difference among violations: 218.5
Max relative difference among violations: 52.9
ACTUAL: array([ -1.079  ,  -0.7007 ,   5.598  , -10.36   ,   4.91   ,   3.898  ,
-27.84   ,   0.5186 ,  15.08   ,   2.436  ,   3.924  ,  -5.85   ,
20.86   ,  -2.246  ,  16.73   ,  13.94   ,  -3.324  ,  -1.179  ,...
DESIRED: array([-5.9625e+01, -7.3312e+01,  1.3950e+02, -1.8797e+01,  2.2338e+02,
-1.0769e+02, -3.6438e+01, -1.2862e+02,  9.1625e+01,  1.9512e+02,
8.8000e+01, -1.1644e+02, -7.8812e+01,  1.2711e+01,  8.5375e+01,...
2025-04-27 04:43:45.134466 test begin: paddle.sum(Tensor([100, 104832],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([100, 104832],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 100 / 100 (100%)
Max absolute difference among violations: 223.4
Max relative difference among violations: 4.996
ACTUAL: array([ 8.0859e-01,  9.8828e+00, -8.5234e+00, -7.7246e-01, -4.2031e+00,
-9.4453e+00,  1.9297e+01,  1.3547e+01,  7.0469e+00, -7.6074e-01,
4.5078e+00,  1.1898e+01, -1.8234e+01, -3.0254e+00,  2.0109e+01,...
DESIRED: array([  57.34 ,  -90.4  ,    3.336, -134.9  ,  -86.1  ,   59.84 ,
-90.94 ,  176.8  ,  -22.48 ,    7.03 ,   67.44 ,  210.5  ,
-97.9  ,  -78.94 ,  -20.25 ,   19.03 ,  149.6  ,  116.75 ,...
2025-04-27 04:43:59.629426 test begin: paddle.sum(Tensor([100, 60800],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([100, 60800],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 100 / 100 (100%)
Max absolute difference among violations: 155.5
Max relative difference among violations: 6.535
ACTUAL: array([ 13.23   , -11.82   ,  37.4    ,  -6.297  ,   0.917  ,  -7.96   ,
8.88   ,   8.81   ,   2.557  ,   8.766  ,  -4.285  ,  18.4    ,
-17.38   ,  -6.14   ,  -1.936  , -14.734  ,  -8.96   ,  15.086  ,...
DESIRED: array([  70.25 ,   51.5  ,  110.4  ,    4.023, -114.56 ,  -49.12 ,
34.97 ,   67.94 ,   81.1  ,   78.1  ,    3.016,   65.2  ,
-108.56 ,  -21.62 ,   17.84 , -118.25 , -121.44 ,   61.94 ,...
2025-04-27 04:44:00.457143 test begin: paddle.sum(Tensor([100, 62400],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([100, 62400],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 100 / 100 (100%)
Max absolute difference among violations: 194.8
Max relative difference among violations: 226.8
ACTUAL: array([ 11.516,   3.795,  -2.213, -19.28 ,  13.5  ,   6.156,  19.67 ,
-4.152,  18.08 ,   7.555,   5.242,  -5.61 ,  -4.39 ,  13.62 ,
-7.312,  -3.943,  19.9  ,   2.502, -28.67 , -12.07 , -17.42 ,...
DESIRED: array([ 5.1938e+01,  1.5752e+00, -2.6562e+01, -3.6906e+01, -4.0844e+01,
6.0875e+01,  8.8125e+01, -1.0775e+02,  2.8859e+01, -5.5312e+01,
1.6762e+02, -1.0094e+01,  6.6016e-01,  5.8719e+01, -1.2962e+02,...
2025-04-27 04:44:01.435583 test begin: paddle.sum(Tensor([100, 63232],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([100, 63232],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 100 / 100 (100%)
Max absolute difference among violations: 209.9
Max relative difference among violations: 74.56
ACTUAL: array([-23.05  , -14.37  ,  -0.3274,   2.174 ,   0.1626,   6.12  ,
14.25  ,  16.16  ,   1.769 ,  13.2   ,  -1.834 ,  -4.293 ,
17.38  ,  15.414 , -14.555 , -12.75  , -21.14  ,   6.184 ,...
DESIRED: array([-1.5562e+01, -9.7625e+01, -2.8219e+01,  9.8375e+01,  7.0875e+01,
-4.6312e+01,  4.1688e+01, -2.5312e+01, -7.7500e+00,  7.2688e+01,
3.6031e+01, -1.1994e+02,  2.1375e+01,  7.8125e+00,  1.8781e+01,...
2025-04-27 04:44:02.394846 test begin: paddle.sum(Tensor([100, 67200],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([100, 67200],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 100 / 100 (100%)
Max absolute difference among violations: 218.9
Max relative difference among violations: 21.27
ACTUAL: array([ 10.555 ,   7.676 ,  -0.813 ,   2.482 ,   0.484 ,  17.06  ,
-5.652 ,   4.52  ,   3.156 ,   5.69  ,   2.922 ,  -2.77  ,
-11.555 ,   5.258 , -25.81  ,  23.67  ,  10.15  , -14.945 ,...
DESIRED: array([ 101.9  ,   33.5  , -116.44 ,   17.53 ,  -78.3  , -111.6  ,
-79.6  ,   25.47 ,   25.25 ,   22.69 , -103.2  ,  -74.   ,
28.56 ,   21.47 ,  -79.2  ,  -23.98 ,    5.53 , -100.7  ,...
2025-04-27 04:44:03.280096 test begin: paddle.sum(Tensor([100, 69888],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([100, 69888],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 100 / 100 (100%)
Max absolute difference among violations: 200.4
Max relative difference among violations: 106.4
ACTUAL: array([  5.477 ,  -3.66  ,   5.168 ,  17.89  ,   8.41  , -41.28  ,
-13.23  ,   9.94  ,   0.505 ,   6.45  ,  -0.2488,  22.72  ,
-3.426 ,   8.43  ,   6.11  ,  -6.23  , -19.38  , -12.26  ,...
DESIRED: array([ 133.    ,  -58.97  ,   79.1   , -171.8   ,   94.1   ,    0.3918,
2.693 ,   30.69  ,   13.586 , -126.6   ,   18.95  ,  -20.23  ,
-106.2   ,   41.56  ,  108.56  ,  -21.42  ,   49.34  , -120.6   ,...
2025-04-27 04:44:04.278987 test begin: paddle.sum(Tensor([100, 76032],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([100, 76032],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 100 / 100 (100%)
Max absolute difference among violations: 246.1
Max relative difference among violations: 8.805
ACTUAL: array([ -6.805  , -12.75   ,  -4.113  , -24.97   ,  -0.8745 ,  -7.984  ,
3.418  ,  12.664  ,   3.904  ,   2.523  , -11.81   ,  -9.734  ,
-7.855  ,  -3.12   , -15.055  ,  -0.4656 ,  -8.66   ,   9.     ,...
DESIRED: array([ -77.8   , -189.    , -186.8   ,  -17.1   ,  -80.6   , -140.2   ,
-1.3955,   14.57  ,   80.25  , -185.4   ,   52.44  ,   -2.443 ,
-77.5   ,  119.25  , -140.9   ,   87.56  ,  -33.62  ,   93.94  ,...
2025-04-27 04:44:05.321744 test begin: paddle.sum(Tensor([100, 77824],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([100, 77824],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 100 / 100 (100%)
Max absolute difference among violations: 222.6
Max relative difference among violations: 8.91
ACTUAL: array([ 11.375  ,  30.03   ,  -8.19   ,  20.23   , -14.04   ,  16.61   ,
1.101  ,  14.016  ,  11.09   ,   3.146  ,  -0.4531 ,  -0.28   ,
-5.586  ,  -4.465  ,   4.027  , -22.34   , -10.84   ,  17.33   ,...
DESIRED: array([ 103.4  ,  167.8  ,  -39.84 ,  159.6  ,    6.73 ,  169.2  ,
4.008,    8.336,  172.9  ,  170.8  ,   28.72 ,  -51.5  ,
22.08 ,    0.565,  -56.78 , -148.1  ,  -35.6  ,  240.   ,...
2025-04-27 04:44:06.377757 test begin: paddle.sum(Tensor([100, 78144],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([100, 78144],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 100 / 100 (100%)
Max absolute difference among violations: 208.
Max relative difference among violations: 36.5
ACTUAL: array([  0.999 ,   6.97  ,  -0.1458,  -4.84  ,   4.305 ,  23.23  ,
6.246 ,  -3.87  ,   7.434 ,  -8.76  ,   4.05  ,  -7.043 ,
-0.171 ,  -9.62  ,   3.633 ,  23.33  ,  -7.676 ,  14.805 ,...
DESIRED: array([  61.78  ,   -5.727 ,  -10.94  ,  -63.7   ,  -11.78  ,  -48.9   ,
-15.63  ,   16.84  ,   73.44  ,    3.56  ,   10.6   ,   97.25  ,
-37.16  ,  -66.7   , -158.4   ,   58.8   ,   89.1   ,    2.389 ,...
2025-04-27 04:44:07.326605 test begin: paddle.sum(Tensor([100, 82688],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([100, 82688],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 100 / 100 (100%)
Max absolute difference among violations: 190.6
Max relative difference among violations: 137.
ACTUAL: array([ -1.834  ,   4.54   ,  19.44   ,   9.445  ,  -4.965  ,  -1.319  ,
-14.85   ,   5.543  ,   6.008  ,  -0.7036 ,  -3.482  ,  10.78   ,
18.14   ,   5.754  , -14.71   ,   2.264  ,  21.53   ,  -4.812  ,...
DESIRED: array([-3.3203e+00,  2.5406e+01,  1.9109e+01,  7.4875e+01, -5.3844e+01,
-1.0588e+02,  1.4625e+02, -6.5117e+00,  5.0062e+01, -1.3289e+01,
-5.0562e+01,  1.0094e+02,  7.5812e+01, -5.1906e+01,  1.0844e+02,...
2025-04-27 04:44:08.471128 test begin: paddle.sum(Tensor([100, 84864],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([100, 84864],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 100 / 100 (100%)
Max absolute difference among violations: 241.2
Max relative difference among violations: 17.56
ACTUAL: array([ -7.23  , -17.94  , -13.516 , -15.14  ,   1.429 ,  16.08  ,
2.87  ,   8.29  , -21.55  , -22.95  ,  19.25  , -28.58  ,
4.68  ,  -6.18  ,   2.668 ,  -0.8066, -11.6   ,  -0.4827,...
DESIRED: array([ -25.31  ,   92.44  ,  107.3   ,  -67.1   ,  129.5   ,  -27.17  ,
103.25  ,   45.56  ,   56.34  , -131.8   ,  103.4   ,  -91.    ,
116.    ,  -19.81  ,  113.4   ,  -51.88  ,  -76.6   ,  129.6   ,...
2025-04-27 04:44:09.617643 test begin: paddle.sum(Tensor([100, 86016],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([100, 86016],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 100 / 100 (100%)
Max absolute difference among violations: 252.6
Max relative difference among violations: 97.75
ACTUAL: array([ 2.3477e+00, -8.6484e+00, -1.2711e+01,  4.0742e+00,  1.5078e+01,
-9.7900e-01, -8.3672e+00, -1.6828e+01, -8.8047e+00,  1.0492e+01,
-7.2383e+00,  9.2031e+00, -1.2070e+01,  1.0219e+01,  8.4062e+00,...
DESIRED: array([ 7.4492e+00,  1.9578e+01,  8.8062e+01,  9.9875e+01, -1.7246e+00,
-4.3156e+01, -9.8500e+01, -3.6469e+01, -3.9938e+01,  2.2797e+01,
4.8125e+01,  8.8625e+01,  4.3969e+01,  5.3688e+01,  7.4250e+01,...
2025-04-27 04:44:10.600882 test begin: paddle.sum(Tensor([100, 87552],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([100, 87552],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 100 / 100 (100%)
Max absolute difference among violations: 203.9
Max relative difference among violations: 1.758
ACTUAL: array([-1.2742e+01, -1.2695e+01,  1.7646e+00,  3.7285e+00, -8.2812e+00,
-5.1270e-03, -1.2297e+01, -2.7641e+01, -3.1895e+00, -1.7922e+01,
1.4039e+01,  8.6016e+00,  1.0359e+01,  1.2320e+01,  1.2881e+00,...
DESIRED: array([-145.9  ,   89.3  ,  -38.5  ,  -16.81 ,  -96.75 ,  -84.56 ,
33.6  ,  -82.94 ,  -47.97 , -182.9  ,  -65.75 ,   31.27 ,
21.88 ,  -36.97 , -135.8  ,  -83.06 ,   97.5  ,  -67.25 ,...
2025-04-27 04:44:11.713902 test begin: paddle.sum(Tensor([100, 89216],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([100, 89216],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 100 / 100 (100%)
Max absolute difference among violations: 234.1
Max relative difference among violations: 4.7
ACTUAL: array([ 10.35  ,   3.174 ,  -2.082 ,   3.756 ,   1.154 ,  12.016 ,
-17.52  ,  -4.805 , -21.9   , -12.414 ,  -6.656 ,  -1.207 ,
-3.684 ,  13.29  ,  -2.814 ,  12.125 ,   5.164 ,   5.582 ,...
DESIRED: array([  40.25 ,   60.56 ,  103.94 ,   -8.305,   28.19 ,  226.2  ,
74.06 ,   56.9  ,  -36.75 ,  -61.8  ,    8.3  ,  -22.22 ,
-64.4  ,  -68.9  ,   79.44 ,   31.   ,  138.5  ,   32.4  ,...
2025-04-27 04:44:12.768575 test begin: paddle.sum(Tensor([100, 89984],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([100, 89984],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 100 / 100 (100%)
Max absolute difference among violations: 260.5
Max relative difference among violations: 5.67
ACTUAL: array([ -1.185  ,  -5.086  ,  -9.78   ,  15.016  , -15.586  ,   1.976  ,
16.53   ,   3.46   ,  22.42   ,   6.88   ,  -7.574  ,   0.2905 ,
-18.77   , -25.52   ,  -3.465  ,  17.48   ,  -9.78   ,  -6.582  ,...
DESIRED: array([ -51.03 , -120.25 ,  -25.19 ,   50.47 ,   60.25 ,  -19.48 ,
-99.75 ,   34.47 ,  103.2  ,   71.8  ,  -39.72 ,  -91.   ,
-88.5  ,   55.75 ,  -94.75 ,  -40.44 ,   -5.082,  -88.44 ,...
2025-04-27 04:44:13.854248 test begin: paddle.sum(Tensor([100, 91392],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([100, 91392],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 100 / 100 (100%)
Max absolute difference among violations: 253.9
Max relative difference among violations: 14.77
ACTUAL: array([-1.3023e+01,  5.2578e+00,  8.5703e+00, -2.9238e+00,  1.9484e+01,
-5.5352e+00,  5.1445e+00, -1.3844e+01,  7.5117e+00, -4.0352e+00,
5.9805e+00,  9.3828e+00,  1.8547e+01,  9.8516e+00, -3.7891e+00,...
DESIRED: array([ -24.   ,   20.86 ,   52.62 ,  -44.03 ,  252.8  ,   90.8  ,
6.66 ,   55.75 ,  -21.7  ,    2.773,   66.56 ,  -66.6  ,
26.84 ,   79.6  ,  -14.14 ,   92.4  ,  -26.12 ,  -70.2  ,...
2025-04-27 04:44:15.074652 test begin: paddle.sum(Tensor([100, 92416],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([100, 92416],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 100 / 100 (100%)
Max absolute difference among violations: 208.4
Max relative difference among violations: 31.1
ACTUAL: array([  7.312 , -17.42  ,  -6.605 ,   9.11  ,   7.25  ,  11.9   ,
-21.81  ,  -0.525 , -19.6   , -17.58  ,  -1.079 ,   2.44  ,
5.504 ,  14.11  ,  27.45  , -17.48  ,  -0.261 , -11.195 ,...
DESIRED: array([  17.14  ,  -59.28  ,   92.7   ,   -5.086 ,  -80.    ,   -3.002 ,
-114.    ,   82.56  ,   26.6   , -119.75  ,   14.055 ,  -96.2   ,
18.23  ,   99.    ,    9.49  ,   45.47  ,  -80.94  ,   76.44  ,...
2025-04-27 04:44:16.295857 test begin: paddle.sum(Tensor([1000, 1000],"float16"), )
[accuracy error] paddle.sum(Tensor([1000, 1000],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 42.75
Max relative difference among violations: 0.09357
ACTUAL: array(414., dtype=float16)
DESIRED: array(456.8, dtype=float16)
2025-04-27 04:44:16.661116 test begin: paddle.sum(Tensor([1000, 10],"float16"), )
[accuracy error] paddle.sum(Tensor([1000, 10],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 2.758
Max relative difference among violations: 0.198
ACTUAL: array(-11.17, dtype=float16)
DESIRED: array(-13.93, dtype=float16)
2025-04-27 04:44:18.387226 test begin: paddle.sum(Tensor([1000],"float16"), )
[accuracy error] paddle.sum(Tensor([1000],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 2.219
Max relative difference among violations: 0.2006
ACTUAL: array(8.84, dtype=float16)
DESIRED: array(11.06, dtype=float16)
2025-04-27 04:44:24.124944 test begin: paddle.sum(Tensor([1024, 1000],"float16"), axis=-1, )
[accuracy error] paddle.sum(Tensor([1024, 1000],"float16"), axis=-1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 999 / 1024 (97.6%)
Max absolute difference among violations: 5.203
Max relative difference among violations: 25.22
ACTUAL: array([ -5.64 , -13.95 ,   3.531, ...,   6.574,   3.553,   4.02 ],
dtype=float16)
DESIRED: array([ -5.582, -15.71 ,   4.797, ...,   8.336,   4.082,   3.646],
dtype=float16)
2025-04-27 04:44:26.036898 test begin: paddle.sum(Tensor([1024, 1024],"float16"), )
[accuracy error] paddle.sum(Tensor([1024, 1024],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 45.5
Max relative difference among violations: 0.1066
ACTUAL: array(-381.2, dtype=float16)
DESIRED: array(-426.8, dtype=float16)
2025-04-27 04:44:26.415583 test begin: paddle.sum(Tensor([1024, 10],"float16"), )
[accuracy error] paddle.sum(Tensor([1024, 10],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 3.766
Max relative difference among violations: 0.1656
ACTUAL: array(18.97, dtype=float16)
DESIRED: array(22.73, dtype=float16)
2025-04-27 04:44:26.802732 test begin: paddle.sum(Tensor([1024, 2],"float16"), )
[accuracy error] paddle.sum(Tensor([1024, 2],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 2.79
Max relative difference among violations: 0.1498
ACTUAL: array(-15.836, dtype=float16)
DESIRED: array(-18.62, dtype=float16)
2025-04-27 04:44:27.384893 test begin: paddle.sum(Tensor([1024],"float16"), )
[accuracy error] paddle.sum(Tensor([1024],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.316
Max relative difference among violations: 0.5693
ACTUAL: array(-0.8706, dtype=float16)
DESIRED: array(-0.5547, dtype=float16)
2025-04-27 04:44:29.559084 test begin: paddle.sum(Tensor([104, 102144],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([104, 102144],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 104 / 104 (100%)
Max absolute difference among violations: 248.9
Max relative difference among violations: 6.08
ACTUAL: array([  4.67  ,  -6.277 ,   8.664 ,  -6.824 ,   4.574 ,   5.258 ,
-6.938 ,  -4.727 ,   7.336 ,  12.66  , -14.2   ,  19.2   ,
0.376 ,  -4.78  ,   2.262 ,   9.28  ,  11.87  ,  -9.125 ,...
DESIRED: array([ -85.75 ,  139.8  ,   53.3  ,  -18.48 ,  -72.2  ,  -26.44 ,
-61.72 ,   22.89 ,   -2.05 ,   78.9  ,  -63.78 , -128.8  ,
59.   ,   17.45 , -116.5  , -239.6  , -128.2  ,   93.5  ,...
2025-04-27 04:44:49.796461 test begin: paddle.sum(Tensor([104, 54400],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([104, 54400],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 103 / 104 (99%)
Max absolute difference among violations: 192.8
Max relative difference among violations: 1.739
ACTUAL: array([-17.06  , -13.98  ,   0.604 ,   6.992 ,  -7.75  ,   4.562 ,
10.4   ,  -2.791 , -16.03  , -12.11  ,   8.47  ,   4.145 ,
1.74  ,  16.58  ,   5.918 ,  11.66  ,  -6.367 ,  10.83  ,...
DESIRED: array([ -27.   ,  -58.97 ,   23.7  ,  -19.92 ,  145.8  ,   46.78 ,
18.64 ,   49.66 ,   40.6  ,  -39.38 ,  -25.98 ,    4.35 ,
13.055,   26.64 ,   27.48 ,  106.2  ,  -12.44 ,   60.03 ,...
2025-04-27 04:44:50.663812 test begin: paddle.sum(Tensor([104, 60800],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([104, 60800],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 104 / 104 (100%)
Max absolute difference among violations: 210.4
Max relative difference among violations: 29.56
ACTUAL: array([ -9.43   ,  15.22   , -10.67   ,  -5.082  , -13.836  ,  -1.141  ,
-1.113  , -12.62   ,   5.957  ,  -5.49   ,   1.149  ,   8.73   ,
2.723  ,  12.55   ,  30.1    ,   1.474  ,   5.402  ,  -8.11   ,...
DESIRED: array([  72.44 ,   35.3  ,   82.25 ,  -98.2  ,   -6.645,  -47.62 ,
8.42 ,  -58.28 ,  102.1  ,   14.28 ,   30.95 ,    6.453,
37.38 ,  -70.94 ,   83.8  ,  211.9  ,  -39.2  ,  -46.97 ,...
2025-04-27 04:44:51.489571 test begin: paddle.sum(Tensor([104, 65600],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([104, 65600],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 104 / 104 (100%)
Max absolute difference among violations: 180.1
Max relative difference among violations: 23.08
ACTUAL: array([  1.104  , -18.73   ,  -8.08   ,  -2.156  ,   4.656  , -19.78   ,
1.275  ,   6.59   ,   0.2554 ,  -2.06   ,   9.22   ,  -7.35   ,
-8.99   ,  11.57   ,  14.984  , -10.64   ,  -9.19   ,   6.49   ,...
DESIRED: array([-163.8  ,   21.53 ,    3.15 ,  -62.47 ,  -81.8  ,    1.923,
1.94 ,  -95.44 , -153.   ,  -29.27 ,  152.6  ,  -28.33 ,
-41.22 ,  -45.88 ,   30.92 ,   11.04 ,  -11.555,   -5.07 ,...
2025-04-27 04:44:52.340851 test begin: paddle.sum(Tensor([104, 67200],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([104, 67200],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 104 / 104 (100%)
Max absolute difference among violations: 185.6
Max relative difference among violations: 6.223
ACTUAL: array([ -9.9   , -11.4   ,  -3.037 , -16.44  ,  -4.555 ,   5.516 ,
5.094 ,  -4.81  ,  -6.64  ,   4.75  , -18.55  ,  -9.62  ,
-3.053 ,  19.62  ,  -1.053 ,  11.08  ,  -6.277 ,   0.2883,...
DESIRED: array([  44.12 , -155.6  ,  -51.9  , -107.3  ,  -85.4  ,   -8.93 ,
59.44 ,   44.47 ,   27.11 ,  -60.56 ,   21.9  ,  -69.1  ,
-20.9  ,   63.94 ,  -28.39 ,    1.534,  -52.   ,   82.6  ,...
2025-04-27 04:44:53.322227 test begin: paddle.sum(Tensor([104, 73984],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([104, 73984],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 104 / 104 (100%)
Max absolute difference among violations: 203.2
Max relative difference among violations: 2.764
ACTUAL: array([ 18.2   ,  -3.99  ,  -4.754 ,  10.93  ,  -2.102 ,  10.266 ,
-0.3706, -34.16  ,  -8.23  ,  -9.89  ,  -7.152 ,  12.35  ,
0.5884,  -2.305 ,  -9.5   ,  27.9   , -12.78  ,  21.33  ,...
DESIRED: array([ -47.38 ,   56.84 ,  107.75 ,  -37.34 ,   16.12 ,   34.97 ,
-35.97 ,  -58.12 ,   38.12 ,  178.8  ,   35.2  ,  -59.7  ,
23.45 ,   53.44 ,  -27.83 ,   36.28 ,  -64.4  ,  224.6  ,...
2025-04-27 04:44:54.191282 test begin: paddle.sum(Tensor([104, 76160],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([104, 76160],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 104 / 104 (100%)
Max absolute difference among violations: 176.2
Max relative difference among violations: 21.4
ACTUAL: array([ -2.635  ,   9.875  ,   3.135  ,   3.656  , -12.05   ,  16.77   ,
0.1915 , -14.305  ,  11.83   ,  -2.725  ,   4.277  ,  11.055  ,
-8.22   ,   3.166  ,  -5.56   ,  -5.273  ,  -5.543  , -14.75   ,...
DESIRED: array([  68.6  ,  -51.94 ,   46.72 ,  149.8  ,  -87.5  ,  -42.7  ,
-29.97 ,  -77.4  ,  -21.17 ,  109.5  ,  -45.78 ,  187.2  ,
6.92 ,   87.8  ,   52.28 ,  -32.22 ,   68.1  ,    0.723,...
2025-04-27 04:44:55.087025 test begin: paddle.sum(Tensor([104, 78336],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([104, 78336],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 104 / 104 (100%)
Max absolute difference among violations: 175.
Max relative difference among violations: 7.445
ACTUAL: array([-9.9531e+00, -8.6250e+00, -1.1695e+01,  4.5781e+00, -1.0484e+01,
9.5234e+00, -3.9111e-01, -4.9609e+00,  1.4766e+01,  4.9961e+00,
-1.0133e+01, -8.4297e+00, -8.6250e+00, -6.7656e+00, -2.9578e+01,...
DESIRED: array([-113.25 ,   45.34 ,   30.23 ,  113.3  , -156.4  ,  -76.7  ,
-109.6  ,  -13.01 ,   21.48 ,   69.94 ,   17.12 ,   34.6  ,
-43.66 ,   33.62 ,   -4.734,   96.9  ,   57.97 ,   63.44 ,...
2025-04-27 04:44:56.053024 test begin: paddle.sum(Tensor([104, 82688],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([104, 82688],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 104 / 104 (100%)
Max absolute difference among violations: 247.1
Max relative difference among violations: 17.22
ACTUAL: array([  3.252 ,  -4.81  ,   5.35  ,   8.03  ,   2.188 ,  -7.246 ,
-9.1   , -10.086 ,   0.304 ,  -9.94  ,  -4.242 ,  -3.848 ,
9.11  , -10.03  ,   8.836 ,  -7.633 ,  10.25  , -17.8   ,...
DESIRED: array([ 123.7  , -106.75 ,    2.936,   23.16 , -150.6  ,   75.1  ,
9.23 ,   20.67 ,  247.4  ,   39.34 ,  -10.24 ,  124.06 ,
110.9  ,   74.25 ,  -22.73 ,  -89.9  ,   89.2  ,   30.86 ,...
2025-04-27 04:44:57.172501 test begin: paddle.sum(Tensor([104, 84480],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([104, 84480],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 104 / 104 (100%)
Max absolute difference among violations: 204.9
Max relative difference among violations: 7.613
ACTUAL: array([  1.538 ,   8.664 ,   8.21  ,   3.148 , -10.08  ,  19.56  ,
-11.72  ,  -0.9746,   8.6   ,  -7.465 ,  -9.83  ,   1.414 ,
42.5   ,  -1.025 ,  -5.742 ,  10.61  , -27.95  ,   9.75  ,...
DESIRED: array([ -29.83 ,   17.08 ,  100.75 ,   36.22 ,   -1.644,   46.3  ,
52.7  ,   25.11 ,   38.78 ,  -37.25 , -106.06 , -137.5  ,
105.9  ,  -97.56 ,  -55.88 ,   19.28 , -190.6  ,   25.67 ,...
2025-04-27 04:44:58.286262 test begin: paddle.sum(Tensor([104, 84864],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([104, 84864],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 104 / 104 (100%)
Max absolute difference among violations: 185.6
Max relative difference among violations: 11.586
ACTUAL: array([ 1.5070e+01, -6.3633e+00, -1.6422e+01,  2.1484e+00,  1.7828e+01,
-1.0555e+01,  6.6602e+00,  1.2273e+01, -1.1182e+00, -1.8453e+01,
4.1758e+00, -1.6453e+01, -1.0695e+01,  9.7266e-01,  3.9785e+00,...
DESIRED: array([-121.1   ,  -91.44  ,  -23.7   ,  -11.664 ,  137.2   ,  -72.1   ,
-46.47  ,  -87.9   ,  114.5   ,  -33.38  ,   -0.3945,   39.06  ,
-142.5   , -119.5   ,  -52.62  ,  185.6   ,  119.25  ,   36.2   ,...
2025-04-27 04:44:59.452391 test begin: paddle.sum(Tensor([104, 86016],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([104, 86016],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 104 / 104 (100%)
Max absolute difference among violations: 214.
Max relative difference among violations: 3.465
ACTUAL: array([-22.2   ,   3.164 ,  -3.467 ,  -5.7   , -15.78  ,   9.72  ,
3.379 ,  11.58  ,  -5.75  , -26.8   ,   0.4617,  -7.41  ,
22.06  ,  -7.41  ,   3.564 , -11.6   ,  15.336 ,   4.906 ,...
DESIRED: array([ -55.44 , -114.6  ,  -92.25 ,  -27.69 , -156.5  ,   10.05 ,
-29.11 , -100.4  ,   78.94 ,  104.25 ,   17.92 ,   -8.   ,
-117.1  , -127.3  ,  105.5  ,  -13.39 ,   39.25 ,  -26.1  ,...
2025-04-27 04:45:00.641920 test begin: paddle.sum(Tensor([104, 87360],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([104, 87360],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 104 / 104 (100%)
Max absolute difference among violations: 194.8
Max relative difference among violations: 1272.
ACTUAL: array([ -8.9   ,   1.345 ,   0.3853,  -3.287 ,  10.95  ,  -5.945 ,
9.414 ,   1.763 , -12.445 ,  -4.734 ,  11.5   , -13.24  ,
-23.62  ,   8.27  ,  -6.215 ,  11.49  , -10.    ,   8.98  ,...
DESIRED: array([-5.2938e+01,  1.1906e+02, -5.1367e-01,  1.0711e+01, -8.2562e+01,
1.8875e+02, -1.3212e+02, -1.1169e+02, -1.1431e+02, -5.9875e+01,
-9.5875e+01, -1.1200e+02, -1.0894e+02,  7.7422e+00, -6.5875e+01,...
2025-04-27 04:45:01.669253 test begin: paddle.sum(Tensor([104, 87552],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([104, 87552],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 104 / 104 (100%)
Max absolute difference among violations: 212.1
Max relative difference among violations: 31.45
ACTUAL: array([-1.3062e+01,  1.4195e+01, -2.7598e+00, -8.4453e+00, -5.9336e+00,
-5.1289e+00, -4.3711e+00, -3.8496e+00,  3.4277e+00,  5.5586e+00,
-1.4893e+00, -3.4570e+00,  1.7695e+00,  1.2109e+01, -3.1500e+01,...
DESIRED: array([-134.6  ,   -2.812,  133.4  ,   -4.7  ,  138.9  ,   82.25 ,
82.25 ,  127.06 ,   54.44 ,    8.12 ,    6.297,  -71.25 ,
134.1  ,  -56.97 , -110.4  , -148.8  ,  163.8  ,  148.9  ,...
2025-04-27 04:45:02.664458 test begin: paddle.sum(Tensor([104, 89984],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([104, 89984],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 104 / 104 (100%)
Max absolute difference among violations: 222.
Max relative difference among violations: 627.
ACTUAL: array([  9.25  ,  -0.1115,  -3.793 ,  -8.45  ,   5.61  ,   7.684 ,
-16.8   , -13.38  ,  -0.754 ,   5.562 ,  -1.31  ,   7.938 ,
-6.402 ,  12.87  ,  10.77  ,   4.52  ,  -6.67  ,  -3.076 ,...
DESIRED: array([ 9.2750e+01, -1.8262e+02,  7.4562e+01, -8.2438e+01, -1.9023e+00,
-1.0756e+02, -5.3000e+01, -7.1625e+01,  1.4188e+01,  7.2062e+01,
-5.8438e+01,  5.3969e+01, -1.1838e+02, -2.0500e+02,  1.2362e+02,...
2025-04-27 04:45:03.649993 test begin: paddle.sum(Tensor([104, 91392],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([104, 91392],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 104 / 104 (100%)
Max absolute difference among violations: 253.5
Max relative difference among violations: 3.318
ACTUAL: array([-15.664 ,  10.914 ,  -0.2128,  -4.664 ,  14.945 ,  -5.797 ,
11.92  ,   6.89  ,   0.818 ,   8.02  ,  -2.242 ,  -8.44  ,
2.39  ,  -4.61  ,  22.06  ,  -4.582 ,  22.94  ,  -7.137 ,...
DESIRED: array([ -96.1   ,   22.06  , -157.6   ,  -63.38  ,   42.78  ,   40.16  ,
34.53  ,  -61.72  ,  -18.22  ,   43.12  ,   24.58  ,  -75.44  ,
-76.94  ,  -41.16  ,  -22.77  ,  -13.55  ,  131.9   ,  -44.22  ,...
2025-04-27 04:45:04.668159 test begin: paddle.sum(Tensor([104, 92416],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([104, 92416],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 104 / 104 (100%)
Max absolute difference among violations: 188.9
Max relative difference among violations: 8.72
ACTUAL: array([ 7.5312e+00, -5.7305e+00,  2.9902e+00, -2.4102e+00,  7.2500e+00,
-3.2910e+00,  7.3242e+00,  5.4375e+00,  4.5586e+00, -1.3266e+01,
3.5527e+00,  5.2656e+00,  8.9297e+00,  5.9336e+00,  5.0586e+00,...
DESIRED: array([  33.34 ,    3.828, -102.1  ,   58.1  ,   98.06 ,   45.72 ,
31.98 ,    6.773,   41.25 ,  -95.4  ,  -25.05 ,  -98.   ,
-96.7  ,   -1.327,  -11.6  ,   84.06 ,   24.55 ,  -78.75 ,...
2025-04-27 04:45:05.697692 test begin: paddle.sum(Tensor([104, 97088],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([104, 97088],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 104 / 104 (100%)
Max absolute difference among violations: 204.5
Max relative difference among violations: 23.12
ACTUAL: array([ 7.4336e+00,  1.4180e+01,  1.1695e+01, -7.8828e+00,  4.0039e+00,
-2.6309e+00, -2.3734e+01,  9.5156e+00,  1.3719e+01,  1.6266e+01,
-1.2391e+01, -1.4331e-01,  5.9883e+00, -1.4539e+01,  2.3125e+01,...
DESIRED: array([-5.7406e+01,  9.2562e+01,  9.6562e+01,  2.8953e+01,  8.6125e+01,
-8.5000e+00, -5.7438e+01, -3.5906e+01, -8.8000e+01, -1.7516e+01,
-1.4662e+02,  6.6500e+01, -1.3016e+01, -3.8867e+00,  1.6688e+01,...
2025-04-27 04:45:07.218874 test begin: paddle.sum(Tensor([1048576],"float16"), )
[accuracy error] paddle.sum(Tensor([1048576],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 31.25
Max relative difference among violations: 0.1958
ACTUAL: array(-128.4, dtype=float16)
DESIRED: array(-159.6, dtype=float16)
2025-04-27 04:45:08.555857 test begin: paddle.sum(Tensor([108, 102144],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([108, 102144],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 108 / 108 (100%)
Max absolute difference among violations: 256.5
Max relative difference among violations: 12.36
ACTUAL: array([ 11.87   ,  17.02   ,  -8.32   ,   2.904  ,  10.23   ,   0.678  ,
10.84   , -13.93   ,  -4.348  ,  -0.04825,  -1.532  ,   7.86   ,
10.18   , -18.66   ,  -8.95   ,   6.863  ,  -8.414  , -14.195  ,...
DESIRED: array([ -86.8  ,   23.55 ,   97.1  ,  -60.38 ,  -78.25 ,  -36.97 ,
2.018,   94.44 ,   15.086, -118.06 ,   -8.734,   25.86 ,
17.08 ,   67.25 ,  -18.03 ,  103.7  , -167.6  ,   67.56 ,...
2025-04-27 04:45:22.734016 test begin: paddle.sum(Tensor([108, 54400],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([108, 54400],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 108 / 108 (100%)
Max absolute difference among violations: 213.6
Max relative difference among violations: 6.64
ACTUAL: array([-1.4938e+01,  1.4668e+00, -1.0211e+01,  2.7773e+00,  5.7539e+00,
7.4375e+00,  9.5361e-01, -5.3203e+00, -1.7906e+01,  5.7383e+00,
7.9805e+00, -5.5977e+00,  1.1734e+01,  1.6025e+00, -8.6016e+00,...
DESIRED: array([-102.94 ,   22.66 ,   11.89 ,   12.5  ,   -2.115,   25.83 ,
48.   ,  -84.25 , -171.   ,  115.   ,  -53.72 ,   86.44 ,
-13.35 ,   39.12 ,  -33.34 ,    1.782,   25.45 ,  107.06 ,...
2025-04-27 04:45:23.593687 test begin: paddle.sum(Tensor([108, 57600],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([108, 57600],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 108 / 108 (100%)
Max absolute difference among violations: 179.2
Max relative difference among violations: 5.88
ACTUAL: array([ -5.246 ,   0.873 , -10.71  ,  -4.63  ,  24.38  ,  -3.746 ,
2.229 ,  -8.35  ,   5.81  , -11.35  , -11.2   , -11.41  ,
-6.97  ,  -2.11  ,  -8.1   ,  -2.39  ,  12.97  ,  14.055 ,...
DESIRED: array([  20.89  ,  -40.6   ,   21.4   ,   29.86  ,   76.75  ,  -35.47  ,
57.34  ,   -1.214 ,    7.99  ,  -79.9   ,   60.53  ,   18.1   ,
-139.6   ,   -7.81  ,   -2.086 ,  102.06  ,   48.84  ,  158.8   ,...
2025-04-27 04:45:24.470163 test begin: paddle.sum(Tensor([108, 60800],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([108, 60800],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 108 / 108 (100%)
Max absolute difference among violations: 172.9
Max relative difference among violations: 18.73
ACTUAL: array([ -2.371 , -22.72  ,  -8.1   ,  10.24  ,  -5.59  ,  10.516 ,
5.49  ,  -7.184 ,  22.64  ,  -3.775 ,  -7.15  ,   5.812 ,
19.58  ,  -7.17  ,   4.84  , -12.734 ,  20.12  ,  13.24  ,...
DESIRED: array([ -38.03  ,  -77.25  ,  -65.9   ,   19.25  ,  137.5   ,  -48.97  ,
-11.625 ,  -73.06  ,   35.7   ,  169.1   ,   15.57  ,  -29.61  ,
124.4   ,   28.6   ,  -72.44  , -114.4   ,  147.5   ,   94.    ,...
2025-04-27 04:45:25.431718 test begin: paddle.sum(Tensor([108, 62400],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([108, 62400],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 108 / 108 (100%)
Max absolute difference among violations: 148.2
Max relative difference among violations: 41.66
ACTUAL: array([ -5.81  ,   9.336 ,  -4.383 , -10.18  ,   2.146 ,  20.2   ,
2.875 ,   0.445 , -12.445 ,   8.266 ,  11.43  ,   2.648 ,
2.63  ,  10.305 ,  -2.098 ,   1.254 , -20.78  , -19.23  ,...
DESIRED: array([   0.7812,  -21.1   , -138.8   ,  -65.56  , -128.6   ,  -11.47  ,
14.04  ,   13.414 ,  -27.47  ,   26.89  ,   99.1   ,  -26.6   ,
-31.92  ,  108.06  ,   12.81  ,  132.8   ,  -26.31  ,  -23.05  ,...
2025-04-27 04:45:26.347477 test begin: paddle.sum(Tensor([108, 67200],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([108, 67200],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 107 / 108 (99.1%)
Max absolute difference among violations: 192.8
Max relative difference among violations: 5.77
ACTUAL: array([ 31.47  , -13.2   ,   4.59  ,   0.713 , -17.73  ,  14.72  ,
-15.46  ,   6.85  ,  10.336 ,  -6.934 ,   7.008 ,   4.555 ,
23.4   ,   9.805 ,  14.8   ,   9.625 ,   5.49  , -15.91  ,...
DESIRED: array([ 132.4  ,  -35.72 ,  -57.8  ,   81.   ,  -56.28 ,  -74.7  ,
-41.6  ,   63.53 ,  -31.34 ,  -10.39 , -154.9  ,  -89.06 ,
129.4  ,  -47.88 ,   67.44 ,    9.625,   35.6  ,  -33.   ,...
2025-04-27 04:45:27.386980 test begin: paddle.sum(Tensor([108, 70528],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([108, 70528],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 108 / 108 (100%)
Max absolute difference among violations: 157.8
Max relative difference among violations: 51.3
ACTUAL: array([-10.42  ,   3.797 ,  18.12  , -10.17  , -10.05  ,  10.58  ,
25.88  , -12.47  ,   1.883 ,  17.52  ,   4.836 ,  13.88  ,
-24.11  ,  12.67  ,  -3.389 ,   4.855 ,  -6.49  , -10.9   ,...
DESIRED: array([ 2.9824e+00,  2.4414e+00,  5.5688e+01, -6.9188e+01, -1.3438e+01,
1.1547e+01,  7.2438e+01, -4.4438e+01, -1.0612e+02, -1.2106e+02,
2.1125e+01,  6.6312e+01, -1.0883e+01,  4.1797e+00, -7.9562e+01,...
2025-04-27 04:45:28.314717 test begin: paddle.sum(Tensor([108, 73984],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([108, 73984],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 108 / 108 (100%)
Max absolute difference among violations: 298.5
Max relative difference among violations: 145.5
ACTUAL: array([  7.71  ,  -0.7837, -10.87  ,  -5.69  ,  -9.695 ,   4.355 ,
-16.6   ,  12.23  ,   5.945 ,  -8.76  , -14.32  ,   4.223 ,
12.2   ,  15.41  ,  11.44  ,  -9.12  ,  -3.855 ,   3.174 ,...
DESIRED: array([ 5.8531e+01,  7.1062e+01, -9.2562e+01,  1.2569e+02, -1.2325e+02,
-1.1162e+02, -2.5547e+01,  1.0244e+02, -5.9406e+01,  5.5812e+01,
3.9094e+01,  4.4156e+01,  4.1750e+01, -1.1891e+01, -1.7688e+01,...
2025-04-27 04:45:29.313105 test begin: paddle.sum(Tensor([108, 82688],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([108, 82688],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 108 / 108 (100%)
Max absolute difference among violations: 216.2
Max relative difference among violations: 11.09
ACTUAL: array([  1.281 ,   9.516 ,   8.33  ,   8.31  ,   4.94  ,  -7.195 ,
7.355 ,  13.26  ,  -4.207 ,  -8.67  ,  -8.88  , -22.72  ,
-13.586 ,   0.1802,   5.457 ,  -3.816 ,   9.25  ,   7.06  ,...
DESIRED: array([  23.27 ,    7.12 ,   81.2  ,   13.2  ,  -45.1  ,   -4.953,
-24.36 ,   27.47 ,   60.78 , -113.1  ,  -43.88 ,  -27.4  ,
-114.8  ,   94.6  ,   59.62 ,  -99.06 ,  143.9  ,   12.51 ,...
2025-04-27 04:45:30.574303 test begin: paddle.sum(Tensor([108, 85120],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([108, 85120],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 108 / 108 (100%)
Max absolute difference among violations: 250.8
Max relative difference among violations: 31.94
ACTUAL: array([-1.0711e+01, -2.7500e+01, -5.1709e-01,  3.6562e+00,  1.2842e+00,
-9.6094e-01,  1.4172e+01, -2.6426e+00, -5.4492e+00,  7.8711e-01,
1.0867e+01,  8.3203e+00,  5.6016e+00,  2.1484e+01, -7.9141e+00,...
DESIRED: array([-2.1500e+01, -4.8531e+01, -1.2219e+02, -1.0294e+02, -1.2781e+02,
-3.1531e+01, -1.8312e+02,  4.9469e+01, -2.5625e+02, -8.6125e+01,
1.3175e+02,  7.1812e+01,  6.9250e+01,  8.5703e+00, -5.0219e+01,...
2025-04-27 04:45:31.563849 test begin: paddle.sum(Tensor([108, 87040],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([108, 87040],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 108 / 108 (100%)
Max absolute difference among violations: 217.8
Max relative difference among violations: 5.44
ACTUAL: array([-10.33  ,  -4.46  ,   4.668 ,   4.92  ,  15.52  ,   4.984 ,
-16.72  , -15.9   ,  10.22  , -13.53  ,  22.48  ,  15.23  ,
-18.11  , -13.86  ,  11.85  ,   2.49  ,  22.95  ,  -3.973 ,...
DESIRED: array([ 143.5  ,   54.72 ,  135.6  ,  -18.88 ,  -46.6  ,  -87.44 ,
-145.4  ,  -71.8  ,  -35.06 ,  -79.1  ,   83.25 ,  119.8  ,
-62.8  ,  175.8  ,   86.56 ,  -27.42 ,   21.6  ,   21.7  ,...
2025-04-27 04:45:32.770189 test begin: paddle.sum(Tensor([108, 89984],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([108, 89984],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 107 / 108 (99.1%)
Max absolute difference among violations: 195.4
Max relative difference among violations: 23.02
ACTUAL: array([-4.2461e+00,  1.0531e+01,  3.3574e+00,  1.3867e+00,  2.9736e-01,
3.0469e+00,  9.0078e+00,  1.1398e+01,  1.0180e+01,  3.6680e+00,
2.2021e-01,  3.6602e+00,  3.4434e+00,  9.0781e+00,  2.7852e+00,...
DESIRED: array([ -56.    ,  115.8   ,  -79.8   ,  -58.3   ,  130.8   ,  -71.5   ,
-113.4   ,   -3.324 ,   18.58  ,    0.8706,  195.6   ,  -28.3   ,
64.94  , -102.06  ,   -8.91  ,  121.9   ,   11.94  ,   -7.445 ,...
2025-04-27 04:45:34.004826 test begin: paddle.sum(Tensor([108, 91392],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([108, 91392],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 108 / 108 (100%)
Max absolute difference among violations: 195.6
Max relative difference among violations: 54.25
ACTUAL: array([-3.3535e+00,  7.7695e+00, -7.3164e+00, -5.7539e+00, -1.7062e+01,
-7.1484e+00,  1.9734e+01,  1.3227e+01,  7.3359e+00,  1.0375e+01,
-6.2734e+00,  2.3219e+01, -9.3047e+00, -9.7578e+00,  4.8867e+00,...
DESIRED: array([-4.4969e+01,  1.8250e+02,  6.0906e+01,  5.6781e+01, -1.8912e+02,
-4.1438e+01,  2.1538e+02,  9.5562e+01, -2.8484e+01,  7.4812e+01,
-6.6875e+01,  9.0500e+01,  7.3398e+00, -1.7425e+02,  7.5000e+01,...
2025-04-27 04:45:35.262632 test begin: paddle.sum(Tensor([108, 91840],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([108, 91840],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 108 / 108 (100%)
Max absolute difference among violations: 204.5
Max relative difference among violations: 21.55
ACTUAL: array([  3.264 ,   9.46  ,   4.754 ,  15.93  ,  -3.826 ,  10.39  ,
1.37  ,   4.574 ,  -4.555 ,  16.73  ,  -8.06  , -15.09  ,
6.23  , -13.16  ,   1.129 ,  17.03  ,   7.645 ,  17.89  ,...
DESIRED: array([ -52.97 , -104.9  ,  -41.38 ,  -42.84 , -109.44 ,  -44.9  ,
-61.34 ,  -10.96 ,   47.28 ,  152.5  , -151.   ,   31.4  ,
-109.5  ,   88.44 ,  -26.36 ,  109.44 ,  -70.2  ,  -59.72 ,...
2025-04-27 04:45:36.570327 test begin: paddle.sum(Tensor([108, 92416],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([108, 92416],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 108 / 108 (100%)
Max absolute difference among violations: 219.5
Max relative difference among violations: 39.75
ACTUAL: array([-7.2617e+00,  1.6768e+00,  4.7305e+00,  4.3750e+00,  1.1188e+01,
-4.6055e+00, -1.0727e+01, -5.2305e+00,  3.3344e+01, -1.9111e+00,
-7.4570e+00,  1.5656e+01, -4.0781e+00, -1.5719e+01,  4.6758e+00,...
DESIRED: array([ 8.3188e+01, -7.0125e+01,  3.9906e+01, -5.5750e+01,  6.8711e+00,
-7.2062e+01,  1.4025e+02,  4.3312e+01,  1.7175e+02,  2.1297e+01,
1.5500e+02, -7.7500e+00, -6.6812e+01, -9.7938e+01,  9.4688e+01,...
2025-04-27 04:45:37.772170 test begin: paddle.sum(Tensor([108, 94848],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([108, 94848],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 108 / 108 (100%)
Max absolute difference among violations: 184.1
Max relative difference among violations: 4.926
ACTUAL: array([ 12.945  ,   2.656  ,  -2.512  , -10.3    ,   6.22   ,   3.943  ,
3.758  ,  27.88   , -16.14   ,  24.19   ,   5.105  ,  -9.69   ,
-7.3    ,  14.87   ,  -1.664  ,   5.52   ,  -9.59   ,   4.383  ,...
DESIRED: array([ 103.94 ,  -12.19 ,   -4.832,    9.375,   73.4  ,  -88.1  ,
-135.5  ,   84.6  , -151.6  ,   21.64 ,   12.07 ,   33.72 ,
75.   ,   47.78 ,   47.12 ,  -69.1  ,   36.16 ,  -84.9  ,...
2025-04-27 04:45:41.858488 test begin: paddle.sum(Tensor([112, 102144],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([112, 102144],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 112 / 112 (100%)
Max absolute difference among violations: 284.
Max relative difference among violations: 7.
ACTUAL: array([-22.28  ,  -3.547 ,  -6.727 ,  -6.727 , -16.45  ,  -2.959 ,
-7.387 ,  -1.632 , -11.28  ,  -4.26  , -12.44  , -13.3   ,
-0.9844,  10.945 ,   0.2952, -15.59  ,  -8.63  ,  24.58  ,...
DESIRED: array([ -52.38 ,  -89.6  ,   29.22 , -136.8  , -140.6  ,   75.75 ,
-123.4  ,  -14.336,  -30.66 ,   66.4  ,   32.4  ,  -53.47 ,
132.5  ,   64.5  ,  -39.28 , -119.4  ,  -26.05 ,    6.766,...
2025-04-27 04:45:56.457056 test begin: paddle.sum(Tensor([112, 54400],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([112, 54400],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 111 / 112 (99.1%)
Max absolute difference among violations: 200.5
Max relative difference among violations: 3.904
ACTUAL: array([-1.7453e+01,  1.5695e+01, -4.8047e+00,  8.9531e+00,  1.2359e+01,
-1.0375e+01, -2.7051e+00,  2.4629e+00,  7.1484e+00,  2.0508e-01,
8.6016e+00,  7.9180e+00, -2.0918e+00,  8.6719e-01,  2.9199e+00,...
DESIRED: array([ -39.34 ,  -28.31 ,  -38.53 ,   44.25 ,  139.4  ,   23.72 ,
-126.2  ,  203.   ,   27.02 ,   32.84 ,    1.754,   44.97 ,
27.22 ,   -9.17 ,    9.78 ,   58.3  ,  -43.06 ,  -97.   ,...
2025-04-27 04:45:57.382870 test begin: paddle.sum(Tensor([112, 58752],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([112, 58752],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 111 / 112 (99.1%)
Max absolute difference among violations: 169.8
Max relative difference among violations: 13.92
ACTUAL: array([ 20.22  , -13.875 ,   7.273 ,  11.05  ,  10.33  , -32.97  ,
26.61  ,  -2.178 ,  11.47  , -19.17  ,  -6.195 , -12.92  ,
-15.52  ,   5.48  , -18.44  ,  -8.75  ,  -4.34  , -10.42  ,...
DESIRED: array([  88.2  ,    6.375,   20.5  ,  129.4  ,    6.016,    6.66 ,
66.06 ,  -33.44 ,  133.2  ,  -22.52 ,  154.2  ,  -69.7  ,
-19.69 ,  -72.7  ,   -3.406, -114.   ,  116.56 , -137.   ,...
2025-04-27 04:45:58.452939 test begin: paddle.sum(Tensor([112, 60800],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([112, 60800],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 112 / 112 (100%)
Max absolute difference among violations: 217.
Max relative difference among violations: 38.8
ACTUAL: array([ 7.7070e+00,  9.2422e+00,  4.5435e-01,  2.7676e+00,  3.6133e+00,
9.1484e+00, -2.0020e+00, -3.4980e+00, -1.9111e+00,  1.6816e+00,
1.5381e-02, -3.4805e+00,  8.2188e+00,  1.2510e+00,  1.9004e+00,...
DESIRED: array([ -40.56  ,  143.8   ,  158.1   ,   -0.9287,  -79.25  ,   42.94  ,
-52.97  , -111.5   ,  -30.22  ,  -79.8   ,  -48.25  ,  -46.8   ,
62.6   ,  218.2   ,  -40.28  ,  -41.12  ,   -4.984 ,  -41.34  ,...
2025-04-27 04:45:59.375993 test begin: paddle.sum(Tensor([112, 62400],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([112, 62400],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 112 / 112 (100%)
Max absolute difference among violations: 186.8
Max relative difference among violations: 13.88
ACTUAL: array([-18.38   ,  14.48   ,  -6.19   ,  -4.215  ,   4.168  ,  13.73   ,
-13.414  ,   6.45   , -24.69   ,   1.305  ,   0.474  ,   9.805  ,
-3.945  , -11.29   ,  -1.066  ,   6.664  ,   6.203  ,   1.652  ,...
DESIRED: array([-125.1  ,  143.5  ,   24.42 ,  -18.14 ,  117.25 ,  -51.38 ,
-54.   ,   50.66 ,  -97.8  ,   58.16 ,   18.89 ,   41.7  ,
139.4  ,  -58.88 ,  -36.7  ,   13.72 ,   40.94 ,   34.12 ,...
2025-04-27 04:46:00.348265 test begin: paddle.sum(Tensor([112, 63232],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([112, 63232],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 112 / 112 (100%)
Max absolute difference among violations: 173.2
Max relative difference among violations: 16.17
ACTUAL: array([ -6.605 ,  -1.586 ,   1.561 ,  25.9   , -21.53  ,   9.695 ,
9.09  , -13.84  ,   1.995 ,  -2.72  ,   5.67  ,   5.84  ,
20.08  , -14.25  ,   7.633 , -10.42  , -10.59  ,  -2.373 ,...
DESIRED: array([-121.   ,   82.   ,  -31.23 ,   73.8  ,  -15.41 ,   36.4  ,
-10.586,  -62.38 ,   69.94 ,  -17.84 ,   59.88 , -104.1  ,
28.36 , -161.1  ,   24.36 ,   -5.805,  162.6  ,  -68.5  ,...
2025-04-27 04:46:01.303197 test begin: paddle.sum(Tensor([112, 65664],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([112, 65664],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 112 / 112 (100%)
Max absolute difference among violations: 227.
Max relative difference among violations: 8.516
ACTUAL: array([ 1.0672e+01,  1.2695e+01,  3.7285e+00,  1.3320e+01, -2.0176e+00,
1.0703e+01,  1.1230e+00,  1.1836e+01, -3.9531e+00,  8.8594e+00,
-1.0461e+01,  2.1270e+00, -8.2891e+00,  2.0879e+00, -2.6969e+01,...
DESIRED: array([  55.78  ,  -41.38  ,   16.11  ,  -25.17  , -114.1   ,   51.47  ,
-18.66  ,  -12.76  ,   14.74  ,  -37.56  ,  -35.25  ,  -18.9   ,
-15.234 ,  -22.31  , -247.9   ,  -96.56  ,  -86.9   , -117.44  ,...
2025-04-27 04:46:02.394557 test begin: paddle.sum(Tensor([112, 67200],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([112, 67200],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 112 / 112 (100%)
Max absolute difference among violations: 172.1
Max relative difference among violations: 6.27
ACTUAL: array([ -0.9536 ,  -3.334  ,  -0.3684 ,  11.95   , -12.77   ,  -2.475  ,
-19.98   ,  11.36   ,  -4.02   ,  -4.047  ,   5.305  , -22.86   ,
1.523  ,  -0.932  ,  12.56   ,   0.961  ,  19.94   ,  -6.05   ,...
DESIRED: array([  29.95 ,  -62.9  ,   -1.56 ,    8.086,   85.44 ,   26.39 ,
-12.42 ,   66.44 ,   -3.621,  -36.34 ,    8.32 , -122.25 ,
34.94 ,   -4.227,   75.4  ,   28.05 ,  -46.28 ,  -25.94 ,...
2025-04-27 04:46:03.413818 test begin: paddle.sum(Tensor([112, 73984],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([112, 73984],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 112 / 112 (100%)
Max absolute difference among violations: 191.5
Max relative difference among violations: 67.06
ACTUAL: array([ 12.266  ,   1.73   , -13.49   ,   9.71   ,  14.305  ,  -5.363  ,
1.9375 ,  -5.37   ,   1.088  ,  -7.906  , -14.61   ,  17.02   ,
-7.63   ,  -6.074  ,   9.516  , -10.74   ,  -7.242  ,  -2.47   ,...
DESIRED: array([ -25.05  ,  -62.38  ,  -43.5   ,   55.28  ,  -10.22  ,  -56.2   ,
-41.72  ,  -20.64  ,  -27.7   ,  -68.9   , -197.2   , -113.1   ,
23.3   ,   23.03  ,   21.6   ,    8.805 ,  -29.34  ,    3.879 ,...
2025-04-27 04:46:04.512404 test begin: paddle.sum(Tensor([112, 76160],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([112, 76160],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 112 / 112 (100%)
Max absolute difference among violations: 244.4
Max relative difference among violations: 6.926
ACTUAL: array([ -3.559  ,   2.11   ,  13.27   ,  -8.695  ,   1.253  ,  -2.734  ,
7.324  ,   0.4556 , -21.17   ,   8.766  ,  -5.344  ,   3.514  ,
8.65   ,   2.264  ,  -4.574  ,  -3.55   ,   6.906  ,  -9.05   ,...
DESIRED: array([-103.44 ,   43.88 ,   34.72 ,    1.937,  100.56 ,   14.195,
-129.9  , -243.9  ,   47.84 ,  -51.56 , -102.25 ,  -65.4  ,
70.25 ,  125.44 ,  -12.12 , -101.4  ,  -19.83 ,  -26.34 ,...
2025-04-27 04:46:05.655771 test begin: paddle.sum(Tensor([112, 82688],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([112, 82688],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 112 / 112 (100%)
Max absolute difference among violations: 217.1
Max relative difference among violations: 9.39
ACTUAL: array([-7.6211e+00,  6.0781e+00,  3.5059e+00, -1.0617e+01,  5.9766e+00,
-3.4863e+00,  1.6299e+00, -6.3828e+00,  5.1641e+00, -3.7012e+00,
1.1977e+01, -8.3301e-01, -1.1945e+01,  4.3477e+00, -8.1797e+00,...
DESIRED: array([-115.94  ,   49.    ,  -55.12  ,  -13.71  ,  168.2   ,  -81.5   ,
-84.    ,   58.44  ,  105.06  , -121.7   ,   58.2   ,   79.1   ,
-99.06  ,   -7.656 ,  -13.18  ,  -23.05  ,   41.75  ,  -29.7   ,...
2025-04-27 04:46:06.876536 test begin: paddle.sum(Tensor([112, 85120],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([112, 85120],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 112 / 112 (100%)
Max absolute difference among violations: 253.9
Max relative difference among violations: 8.125
ACTUAL: array([ -0.718  ,  -0.1948 ,  -2.705  ,  -4.066  ,  11.37   ,  26.27   ,
-6.266  ,   2.37   , -16.23   , -18.56   ,   9.04   ,  14.25   ,
-6.156  ,  21.88   ,  -8.36   , -16.84   ,  10.75   , -15.1    ,...
DESIRED: array([ 115.7   ,  120.1   ,   -7.24  ,   32.3   ,  165.8   ,   24.58  ,
186.2   ,    6.824 ,  -85.06  ,  -56.4   ,   93.8   ,  -25.06  ,
-78.7   ,   97.4   ,  -52.72  ,   86.94  ,   -1.509 ,    8.8   ,...
2025-04-27 04:46:08.178622 test begin: paddle.sum(Tensor([112, 87040],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([112, 87040],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 112 / 112 (100%)
Max absolute difference among violations: 220.8
Max relative difference among violations: 13.875
ACTUAL: array([-12.58  ,  14.24  ,   0.0868,  -4.89  , -14.01  , -11.87  ,
12.72  ,  -1.308 ,   5.5   ,   9.445 ,  -6.836 ,   6.875 ,
-8.71  ,  -9.36  ,  11.08  ,   3.367 ,  20.47  ,  18.66  ,...
DESIRED: array([ -42.06  ,  102.8   ,   61.53  ,   96.    ,  -81.    ,   58.56  ,
-114.2   ,  -38.    ,  -50.28  ,  105.06  ,  -19.47  ,  147.6   ,
116.56  ,  -53.94  ,   33.34  ,  -27.6   ,  156.5   ,  -14.05  ,...
2025-04-27 04:46:09.468454 test begin: paddle.sum(Tensor([112, 92416],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([112, 92416],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 112 / 112 (100%)
Max absolute difference among violations: 195.1
Max relative difference among violations: 33.34
ACTUAL: array([-1.3812e+01, -4.9902e-01,  7.0391e+00, -9.6484e+00,  1.1180e+01,
-2.8078e+01,  4.2017e-01,  7.7305e+00, -3.6426e+00, -2.3633e+00,
1.9125e+01, -1.9395e+00, -2.1531e+01,  1.2656e+01,  7.2305e+00,...
DESIRED: array([ -13.08  ,  -27.95  ,   39.78  ,   82.06  ,  -74.2   ,  -33.2   ,
39.94  ,   24.84  ,  -36.4   ,   11.17  ,    0.5566, -154.    ,
-131.5   ,  -88.9   ,   77.    ,   99.5   ,    4.105 ,  -15.44  ,...
2025-04-27 04:46:13.072828 test begin: paddle.sum(Tensor([116, 102144],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([116, 102144],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 116 / 116 (100%)
Max absolute difference among violations: 237.6
Max relative difference among violations: 5.746
ACTUAL: array([  1.179 ,  -4.582 ,  -1.862 ,   2.518 ,  -8.53  ,  -2.328 ,
3.484 ,  -3.047 , -13.67  ,   2.502 ,  20.06  ,  -4.547 ,
20.52  ,  11.984 , -11.25  ,   1.806 ,   5.04  ,  -2.494 ,...
DESIRED: array([ -39.97 ,   12.7  ,  -53.44 ,  -67.   , -109.   ,  -42.78 ,
13.18 ,  -52.2  , -113.6  ,   67.4  ,   52.72 ,  -91.3  ,
61.94 ,   84.25 , -226.4  ,  -46.5  ,  114.   ,  134.1  ,...
2025-04-27 04:46:24.955209 test begin: paddle.sum(Tensor([116, 54400],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([116, 54400],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 116 / 116 (100%)
Max absolute difference among violations: 177.1
Max relative difference among violations: 19.58
ACTUAL: array([  5.203 ,   8.6   ,  -3.645 , -10.055 ,   3.236 , -10.63  ,
1.139 ,  21.17  , -18.52  ,  10.38  ,  14.45  ,   0.0721,
7.508 ,  -7.26  ,   5.3   ,  -6.66  ,   4.117 ,  -3.568 ,...
DESIRED: array([ -83.9   ,  -69.1   ,  -53.84  ,   25.9   ,   28.7   ,  -94.06  ,
-67.1   ,  -29.75  ,  -97.1   ,   41.88  ,  -18.88  ,  -39.72  ,
-22.47  ,  -69.3   ,  163.2   ,  -68.    ,  125.    ,  -83.44  ,...
2025-04-27 04:46:25.681091 test begin: paddle.sum(Tensor([116, 59200],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([116, 59200],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 116 / 116 (100%)
Max absolute difference among violations: 222.5
Max relative difference among violations: 6.273
ACTUAL: array([ -0.0803, -12.05  , -12.59  ,   0.131 ,  -7.855 ,   1.322 ,
-9.11  ,  -6.06  ,   3.012 ,  20.67  , -17.53  ,  19.89  ,
-16.84  , -13.03  ,   1.528 ,  -9.4   ,  -9.87  ,  -6.406 ,...
DESIRED: array([ -81.   ,   14.55 ,  -48.1  ,  -93.3  ,  -72.1  ,  -33.94 ,
43.34 ,  -21.48 ,  -50.1  ,  -14.46 , -132.2  ,  120.3  ,
205.6  , -144.1  ,  197.4  ,   33.25 ,   84.5  ,  -98.44 ,...
2025-04-27 04:46:26.454157 test begin: paddle.sum(Tensor([116, 60800],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([116, 60800],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 116 / 116 (100%)
Max absolute difference among violations: 182.8
Max relative difference among violations: 20.8
ACTUAL: array([  7.105 ,   8.9   ,  24.88  ,   6.684 ,   9.68  ,   5.2   ,
-11.65  ,   8.086 ,  -1.948 , -14.414 ,   2.19  ,   4.035 ,
6.56  , -14.97  ,   4.438 ,   3.117 , -16.83  ,  24.89  ,...
DESIRED: array([ 189.9   ,    6.58  ,  -95.94  ,   80.2   ,  157.6   ,   63.03  ,
-1.465 ,   30.28  ,  159.2   ,   -6.168 ,  -19.    ,  138.6   ,
-35.94  ,   30.    ,  -22.28  , -167.2   ,  -99.56  ,  130.4   ,...
2025-04-27 04:46:27.492254 test begin: paddle.sum(Tensor([116, 62400],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([116, 62400],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 116 / 116 (100%)
Max absolute difference among violations: 221.
Max relative difference among violations: 145.9
ACTUAL: array([-13.32  ,   3.332 , -24.83  ,   4.453 ,   3.143 , -19.25  ,
-12.99  ,  16.33  ,  10.13  ,   1.324 ,   2.078 ,   2.371 ,
-5.035 ,  -9.88  ,  11.14  , -14.46  ,   4.242 ,  -2.39  ,...
DESIRED: array([-5.5719e+01, -5.5906e+01, -4.3719e+01, -8.7000e+01,  1.5445e+01,
-1.0744e+02, -6.3375e+01, -3.6719e+01,  1.4175e+02, -3.9344e+01,
1.2938e+02,  2.8172e+01,  9.8438e+00,  1.8750e+01, -1.3898e+01,...
2025-04-27 04:46:28.528028 test begin: paddle.sum(Tensor([116, 67200],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([116, 67200],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 116 / 116 (100%)
Max absolute difference among violations: 156.5
Max relative difference among violations: 4.86
ACTUAL: array([  2.865  ,   2.377  ,  -2.91   ,  -7.51   ,  -9.13   ,   3.346  ,
-10.92   , -25.22   ,  -1.042  ,  -0.921  ,  -7.992  ,  -2.432  ,
-4.023  ,  10.22   , -13.164  , -11.64   , -17.53   , -26.14   ,...
DESIRED: array([ -86.3  ,    5.793,    2.361, -124.4  , -112.25 ,   34.   ,
-25.83 ,  -17.44 ,  -42.1  ,  -40.44 ,  -27.36 ,  -97.2  ,
13.66 ,  -78.56 ,   18.3  ,  -48.12 ,  -69.7  ,  -24.33 ,...
2025-04-27 04:46:29.589737 test begin: paddle.sum(Tensor([116, 70528],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([116, 70528],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 116 / 116 (100%)
Max absolute difference among violations: 217.2
Max relative difference among violations: 12.4
ACTUAL: array([-1.3008e+01,  1.4555e+01, -1.5840e+00, -3.9434e+00, -4.8340e-01,
3.9404e-01,  2.1500e+01, -3.7281e+01,  5.2266e+00, -4.7891e+00,
6.7031e+00, -2.7930e+00,  2.5344e+01,  2.4219e+01, -1.8031e+01,...
DESIRED: array([-2.5531e+01,  9.0312e+01, -4.9375e+01,  4.2062e+01, -1.4703e+01,
-4.1969e+01, -6.5125e+01, -3.1719e+01,  3.3750e+01,  6.8375e+01,
3.0344e+01, -1.4727e+01,  3.8938e+01, -1.2422e+01,  3.0156e+01,...
2025-04-27 04:46:30.640703 test begin: paddle.sum(Tensor([116, 72960],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([116, 72960],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 116 / 116 (100%)
Max absolute difference among violations: 167.6
Max relative difference among violations: 197.4
ACTUAL: array([ 4.0391e+00,  7.5859e+00,  4.8594e+00,  4.0273e+00, -1.9984e+01,
-2.5508e+00,  1.6250e+01, -9.2578e+00, -9.2578e+00, -1.9902e+00,
7.2461e+00, -3.3374e-01, -2.0266e+01, -2.9956e-01,  8.7422e+00,...
DESIRED: array([ 3.6113e+00,  1.0727e+01,  4.7625e+01,  5.9521e-01, -8.3812e+01,
-1.3788e+02, -2.3078e+01, -2.1406e+01,  4.9344e+01,  1.0338e+02,
-1.0725e+02, -5.7062e+01, -3.4469e+01,  2.3262e+00, -1.5102e+01,...
2025-04-27 04:46:31.756003 test begin: paddle.sum(Tensor([116, 73984],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([116, 73984],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 116 / 116 (100%)
Max absolute difference among violations: 217.
Max relative difference among violations: 15.77
ACTUAL: array([ 1.0875e+01,  1.0281e+01,  3.3438e+00, -1.1820e+01, -1.9463e+00,
1.6312e+01,  3.9258e-01,  3.9727e+00,  4.4531e+00,  4.5039e+00,
-5.0352e+00,  4.3711e+00, -1.4893e-02,  3.0020e+00,  1.8438e+01,...
DESIRED: array([  55.88  ,   -0.696 ,  -27.77  ,  -98.3   ,   86.75  ,   34.56  ,
-30.78  ,   79.25  ,   27.28  ,   49.34  ,   35.47  ,  -13.06  ,
66.1   , -114.5   ,   58.1   ,  -90.3   ,  -37.6   ,   68.7   ,...
2025-04-27 04:46:32.871011 test begin: paddle.sum(Tensor([116, 82688],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([116, 82688],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 116 / 116 (100%)
Max absolute difference among violations: 192.
Max relative difference among violations: 86.94
ACTUAL: array([-13.234  ,  12.484  ,  24.08   ,  15.805  ,  21.45   ,  -0.9814 ,
9.67   , -10.03   , -19.2    ,  10.46   ,   3.14   , -15.98   ,
-14.66   ,  -2.31   ,  -2.092  ,   5.836  ,   8.586  ,   6.73   ,...
DESIRED: array([ -39.03  ,   39.94  ,   67.06  ,  109.06  ,  100.25  , -132.5   ,
-33.72  ,    3.441 ,    0.2234,   47.12  ,   47.94  ,  -46.56  ,
-18.66  ,   74.7   ,  115.4   ,   16.64  ,   13.7   ,  -89.1   ,...
2025-04-27 04:46:34.121938 test begin: paddle.sum(Tensor([116, 84864],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([116, 84864],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 116 / 116 (100%)
Max absolute difference among violations: 260.2
Max relative difference among violations: 5.453
ACTUAL: array([  5.223  ,  12.7    ,  20.83   ,   1.173  , -13.88   , -16.28   ,
-5.758  , -10.914  ,  -4.375  ,   4.156  , -13.35   , -13.43   ,
23.55   ,  10.18   , -12.95   ,   0.04834, -16.47   ,  -0.4773 ,...
DESIRED: array([  37.53 ,   85.5  ,  174.9  ,    8.945,   -3.846,  -64.3  ,
-72.75 ,  -12.11 ,  -68.3  ,   -3.402, -127.5  ,   81.1  ,
58.84 ,  108.9  ,   55.   ,  -61.8  ,   46.53 ,  -42.78 ,...
2025-04-27 04:46:35.381593 test begin: paddle.sum(Tensor([116, 87552],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([116, 87552],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 116 / 116 (100%)
Max absolute difference among violations: 227.5
Max relative difference among violations: 3.926
ACTUAL: array([-23.12  ,  -7.87  ,  -1.66  ,  10.51  ,   5.953 ,   0.63  ,
-10.38  ,   2.705 ,  15.42  ,   3.133 ,  -2.73  ,  -3.023 ,
-5.074 ,  -2.412 ,  -2.783 ,  -9.88  , -10.69  ,  -2.988 ,...
DESIRED: array([-158.1  ,   76.56 ,   58.06 ,  176.8  ,  124.8  ,   22.38 ,
-51.66 ,   67.56 ,   33.5  ,  133.   ,   99.25 ,  -28.   ,
-101.56 ,    7.266,   91.94 ,  -68.1  ,  107.7  , -105.9  ,...
2025-04-27 04:46:36.591134 test begin: paddle.sum(Tensor([116, 91392],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([116, 91392],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 116 / 116 (100%)
Max absolute difference among violations: 243.8
Max relative difference among violations: 4.027
ACTUAL: array([-18.6   , -21.23  ,   5.465 , -14.13  , -22.89  ,  11.02  ,
-4.887 ,  26.12  ,  -5.4   , -17.06  ,   9.39  , -11.484 ,
5.062 ,   6.24  ,   0.9414,  19.34  ,  -4.953 ,  -1.357 ,...
DESIRED: array([-192.9  ,  -28.31 ,  -53.4  ,   -9.86 , -220.1  ,   -8.64 ,
-122.25 ,  -46.53 ,  -49.66 ,    6.76 ,  -26.05 ,  -29.98 ,
-12.3  ,   88.   ,   30.3  ,  154.4  ,  188.8  ,   76.56 ,...
2025-04-27 04:46:37.888951 test begin: paddle.sum(Tensor([116, 92416],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([116, 92416],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 116 / 116 (100%)
Max absolute difference among violations: 181.5
Max relative difference among violations: 20.4
ACTUAL: array([-18.9   ,  -7.816 ,  -4.67  , -10.23  ,  14.93  ,   0.2285,
23.36  ,   2.63  ,  -8.22  ,  -0.2812,  21.14  ,  -7.39  ,
18.17  ,   2.553 ,   6.824 ,  -4.875 ,  12.375 ,   9.14  ,...
DESIRED: array([-161.9  ,  -87.1  ,    1.72 ,  -75.   ,  157.5  ,  -10.53 ,
9.48 ,   46.25 ,   33.7  ,  -47.47 ,   52.4  ,   15.516,
-98.56 ,  -13.125,  -82.06 ,   58.8  ,  116.06 ,   24.89 ,...
2025-04-27 04:46:39.247265 test begin: paddle.sum(Tensor([116, 94848],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([116, 94848],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 116 / 116 (100%)
Max absolute difference among violations: 197.9
Max relative difference among violations: 71.3
ACTUAL: array([-10.63  ,  -6.68  ,  -9.51  ,   2.043 ,   3.48  ,   1.48  ,
-13.44  , -21.47  ,  -9.7   ,  -4.25  ,  11.46  ,   0.858 ,
16.34  , -15.52  ,  -4.16  , -14.516 ,   3.492 ,  -9.24  ,...
DESIRED: array([-4.9625e+01, -1.1550e+02,  1.5288e+02,  2.0406e+01,  1.7900e+02,
-5.4844e+01,  1.5195e+01, -1.7225e+02,  4.1562e+01,  1.2438e+02,
-3.0078e+01,  1.1462e+02,  2.7125e+01,  1.5938e+02,  1.5625e+01,...
2025-04-27 04:46:40.727609 test begin: paddle.sum(Tensor([116, 97280],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([116, 97280],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 116 / 116 (100%)
Max absolute difference among violations: 243.4
Max relative difference among violations: 70.5
ACTUAL: array([ -0.591 ,  10.664 ,  13.52  ,  15.56  ,  24.02  , -10.18  ,
6.316 ,  -0.819 , -10.086 , -31.08  ,   2.533 ,  -2.027 ,
29.75  ,   4.754 ,  -9.07  ,  -3.062 ,  -8.836 , -12.73  ,...
DESIRED: array([-6.3789e+00,  4.1094e+01,  4.0781e+01, -5.6000e+01,  3.8094e+01,
9.6312e+01,  3.9094e+01, -9.8500e+01,  1.1275e+02, -2.7450e+02,
2.0203e+01,  4.6281e+01,  2.5156e+01, -1.5662e+02,  1.2106e+02,...
2025-04-27 04:46:43.564063 test begin: paddle.sum(Tensor([12, 102144],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([12, 102144],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 12 / 12 (100%)
Max absolute difference among violations: 94.8
Max relative difference among violations: 17.69
ACTUAL: array([ -5.324,   2.873,  11.91 ,   1.224,   6.65 ,  -5.523,   2.326,
1.966, -10.555,  16.86 ,  -2.623,  -2.371], dtype=float16)
DESIRED: array([ 22.61  , -54.4   , -11.14  ,  38.34  ,  85.6   ,  -0.969 ,
-66.3   , -92.9   ,  11.26  , -63.16  ,   0.1572,  31.45  ],
dtype=float16)
2025-04-27 04:46:44.237522 test begin: paddle.sum(Tensor([12, 112896],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([12, 112896],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 12 / 12 (100%)
Max absolute difference among violations: 217.8
Max relative difference among violations: 0.9966
ACTUAL: array([ 24.1   ,  -8.83  , -13.22  ,  -0.1184, -11.61  ,  -2.924 ,
14.36  ,  18.77  , -14.9   , -10.05  ,   3.61  , -15.28  ],
dtype=float16)
DESIRED: array([  53.75, -127.25,  -25.58,  -35.7 , -229.4 ,  -47.84,  123.75,
58.22, -167.8 ,  -34.94,   94.56,  -76.7 ], dtype=float16)
2025-04-27 04:46:53.721623 test begin: paddle.sum(Tensor([12, 56576],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([12, 56576],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 12 / 12 (100%)
Max absolute difference among violations: 149.6
Max relative difference among violations: 1.979
ACTUAL: array([ 14.89  ,  -8.36  ,  -0.6196,  -4.344 ,  -6.12  ,   9.664 ,
14.03  ,   3.166 ,   1.656 , -19.34  ,  -1.2   ,  18.22  ],
dtype=float16)
DESIRED: array([ -15.21,  -13.62,   33.75,   21.94,   58.9 ,   42.44,  -40.84,
55.97,   80.8 , -169.  ,    7.11,   28.11], dtype=float16)
2025-04-27 04:46:54.631227 test begin: paddle.sum(Tensor([12, 60800],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([12, 60800],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 12 / 12 (100%)
Max absolute difference among violations: 167.2
Max relative difference among violations: 4.43
ACTUAL: array([  2.768 ,  17.81  ,   3.05  ,   3.99  ,   5.22  ,   1.239 ,
0.665 , -26.03  ,   7.016 ,  -9.29  ,   8.83  ,   0.8975],
dtype=float16)
DESIRED: array([  71.7 ,   80.9 ,   36.78,   69.3 ,   -8.35,  -29.02, -114.8 ,
7.59, -160.2 ,  -44.03,  106.6 ,   53.78], dtype=float16)
2025-04-27 04:46:55.274029 test begin: paddle.sum(Tensor([12, 73984],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([12, 73984],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 12 / 12 (100%)
Max absolute difference among violations: 159.2
Max relative difference among violations: 2.531
ACTUAL: array([ 12.05 ,  -4.543,  17.42 ,  -9.75 , -26.36 ,  11.86 ,  -4.06 ,
-24.55 ,  15.086,  -1.164,  14.945,   9.37 ], dtype=float16)
DESIRED: array([ 135.2  ,  -93.75 ,   78.7  , -116.7  , -126.44 , -117.44 ,
16.42 ,   -6.953,   82.   , -128.9  ,  -24.03 , -149.9  ],
dtype=float16)
2025-04-27 04:46:55.701144 test begin: paddle.sum(Tensor([12, 76160],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([12, 76160],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 12 / 12 (100%)
Max absolute difference among violations: 108.3
Max relative difference among violations: 9.12
ACTUAL: array([ 22.81 ,  21.42 ,   6.01 , -11.234,  -3.533,  13.97 , -20.55 ,
-13.47 ,  -0.605, -20.92 ,   8.14 ,  -1.113], dtype=float16)
DESIRED: array([  63.94  ,   87.8   ,   -0.7407,  -42.34  ,   26.03  ,  -67.94  ,
-105.06  ,  -12.    ,  -55.62  ,  -72.44  ,  116.44  ,  -41.03  ],
dtype=float16)
2025-04-27 04:46:56.347995 test begin: paddle.sum(Tensor([12, 82688],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([12, 82688],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 12 / 12 (100%)
Max absolute difference among violations: 128.8
Max relative difference among violations: 3.799
ACTUAL: array([ 15.11  ,   3.895 , -11.39  ,  -1.01  ,  -0.2277,   2.162 ,
0.1602, -13.87  ,  -6.18  ,  10.13  ,  -4.38  ,  21.23  ],
dtype=float16)
DESIRED: array([ 15.91 , 130.8  ,   5.28 , -33.06 ,  51.97 , 130.9  , -20.75 ,
-6.973, -14.84 , -13.39 ,  37.06 ,  -7.586], dtype=float16)
2025-04-27 04:46:56.817896 test begin: paddle.sum(Tensor([12, 87040],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([12, 87040],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 12 / 12 (100%)
Max absolute difference among violations: 219.2
Max relative difference among violations: 2.51
ACTUAL: array([ -1.885,  -7.23 ,   8.04 , -15.24 , -14.17 ,  23.08 , -14.92 ,
4.52 ,  -6.434,  -1.17 ,  -1.167, -26.4  ], dtype=float16)
DESIRED: array([ 100.7  ,  -94.9  ,    5.53 ,  105.4  ,  -12.234,   94.25 ,
114.3  ,  -20.17 ,    4.26 ,   25.92 , -220.4  ,  -89.   ],
dtype=float16)
2025-04-27 04:46:57.283105 test begin: paddle.sum(Tensor([12, 89984],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([12, 89984],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 12 / 12 (100%)
Max absolute difference among violations: 93.9
Max relative difference among violations: 7.746
ACTUAL: array([15.414 , -3.422 ,  2.559 , 19.22  , 17.23  , -7.547 ,  2.303 ,
1.73  ,  0.7837,  9.69  , -8.266 , -5.26  ], dtype=float16)
DESIRED: array([ -52.53 ,  -14.57 ,   -8.19 ,   61.75 ,    1.971,   32.25 ,
86.44 ,   10.695,   51.9  ,   99.8  , -102.1  ,   -1.892],
dtype=float16)
2025-04-27 04:46:57.778297 test begin: paddle.sum(Tensor([12, 92416],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([12, 92416],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 12 / 12 (100%)
Max absolute difference among violations: 206.5
Max relative difference among violations: 1.153
ACTUAL: array([  7.547 , -13.85  ,  12.19  ,  19.36  ,  -4.695 , -12.02  ,
-1.213 ,   0.2191,  11.38  ,  -6.785 ,  -1.163 , -11.36  ],
dtype=float16)
DESIRED: array([ -88.5 ,  -77.25,  218.6 , -170.4 ,  -94.56, -218.1 ,  108.7 ,
66.94, -101.8 ,  105.06,   77.56,   74.1 ], dtype=float16)
2025-04-27 04:46:58.304730 test begin: paddle.sum(Tensor([12, 99712],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([12, 99712],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 12 / 12 (100%)
Max absolute difference among violations: 145.2
Max relative difference among violations: 6.082
ACTUAL: array([ 11.086,   3.3  ,  -2.123, -10.71 ,   7.07 , -10.48 ,  -6.676,
3.348,  22.3  ,  -6.387,  -6.77 ,  -6.008], dtype=float16)
DESIRED: array([ -29.5  ,  112.06 ,   56.12 ,  -62.12 ,   16.77 ,  125.8  ,
-131.4  ,   37.97 ,   27.19 ,  -60.2  ,  138.5  ,    1.183],
dtype=float16)
2025-04-27 04:46:58.792787 test begin: paddle.sum(Tensor([120, 102144],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([120, 102144],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 120 / 120 (100%)
Max absolute difference among violations: 319.2
Max relative difference among violations: 6.016
ACTUAL: array([  8.63   , -11.11   ,   3.146  ,   5.305  , -16.17   ,  -1.191  ,
-8.61   ,  -9.3    ,  -4.227  ,   3.746  ,  -1.067  ,   3.516  ,
-5.85   ,   0.5117 ,  -6.6    ,  12.766  ,  -3.365  ,   3.705  ,...
DESIRED: array([ -15.88 ,   44.03 ,   59.   ,  -44.9  ,  -16.86 ,   57.9  ,
-7.227, -143.   ,  -96.3  ,  122.4  ,  -44.72 ,  154.5  ,
-1.306,  -81.6  ,  -76.4  ,  -30.31 ,  -46.34 ,   49.2  ,...
2025-04-27 04:47:00.386503 test begin: paddle.sum(Tensor([120, 104832],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([120, 104832],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 120 / 120 (100%)
Max absolute difference among violations: 342.
Max relative difference among violations: 4.21
ACTUAL: array([ 9.1875e+00, -1.4461e+01, -6.9580e-03,  7.6914e+00, -1.6219e+01,
-2.7984e+01, -1.5762e+00, -2.1113e+00,  1.2609e+01, -1.3641e+01,
1.2023e+01, -5.3242e+00, -1.4398e+01, -7.7227e+00,  6.9688e+00,...
DESIRED: array([ -32.5  ,   41.2  , -101.4  ,   20.77 ,  -23.64 ,  -27.3  ,
-96.94 ,  -11.48 , -132.   ,   15.305,   66.9  , -109.8  ,
-158.9  ,   94.94 ,  116.2  ,  -72.8  ,    8.664,   23.89 ,...
2025-04-27 04:47:01.926887 test begin: paddle.sum(Tensor([120, 107520],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([120, 107520],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 119 / 120 (99.2%)
Max absolute difference among violations: 236.2
Max relative difference among violations: 6.71
ACTUAL: array([ 21.11  ,  -7.47  ,  -3.947 ,  -1.393 ,  -3.143 ,  -1.118 ,
2.314 ,   0.3494,   4.426 ,  -7.008 , -14.33  ,  -3.676 ,
-4.58  ,   6.16  ,   6.63  ,  13.33  ,  -1.954 ,   5.08  ,...
DESIRED: array([ 172.5   ,   47.28  ,   -8.73  ,  -65.44  ,   36.03  ,  -53.78  ,
148.1   ,  -37.8   ,   17.    ,  -45.88  ,  -20.33  , -105.    ,
-144.9   ,   65.3   ,   79.1   ,  219.1   ,   32.47  ,   44.44  ,...
2025-04-27 04:47:21.841538 test begin: paddle.sum(Tensor([120, 54400],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([120, 54400],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 120 / 120 (100%)
Max absolute difference among violations: 180.6
Max relative difference among violations: 84.4
ACTUAL: array([  9.47   ,  -3.76   ,  -8.57   , -15.49   ,  -4.598  ,  11.484  ,
-1.013  ,   9.64   ,  19.17   ,  -2.395  ,   7.168  ,  -1.732  ,
-9.62   ,   5.465  ,  11.04   ,  -8.414  ,  22.16   ,  14.86   ,...
DESIRED: array([ 7.8250e+01, -2.6375e+01, -3.4094e+01, -5.5312e+00,  4.1650e-01,
1.1438e+02, -4.7562e+01, -5.1844e+01,  6.2312e+01,  1.2844e+01,
1.4838e+02,  6.4875e+01, -1.9025e+02, -6.5552e-02, -4.5000e+01,...
2025-04-27 04:47:22.879745 test begin: paddle.sum(Tensor([120, 57600],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([120, 57600],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 120 / 120 (100%)
Max absolute difference among violations: 139.
Max relative difference among violations: 51.66
ACTUAL: array([  7.684 ,   3.586 ,  -0.287 ,   4.15  ,   5.137 ,  -6.094 ,
-21.9   ,   6.547 ,  12.52  , -18.08  ,   9.29  ,  -6.887 ,
-1.747 ,   9.83  ,  13.2   ,  13.7   , -10.12  ,   0.843 ,...
DESIRED: array([-2.0391e+01,  4.1531e+01,  7.9062e+01, -2.3719e+01,  1.2727e+01,
2.6359e+01, -4.5020e-01, -6.1031e+01,  1.0550e+02, -4.2250e+01,
8.7012e-01, -2.0172e+01,  1.8812e+01,  8.0188e+01,  8.5125e+01,...
2025-04-27 04:47:23.909502 test begin: paddle.sum(Tensor([120, 60800],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([120, 60800],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 120 / 120 (100%)
Max absolute difference among violations: 171.8
Max relative difference among violations: 5.93
ACTUAL: array([  9.67   ,   2.03   ,  -6.04   ,   1.89   , -14.055  ,  10.164  ,
24.75   ,  12.016  , -16.4    ,  -7.945  ,   4.062  ,  -3.627  ,
11.73   ,  -3.713  ,   3.375  , -19.83   ,  -7.258  ,   4.742  ,...
DESIRED: array([  16.73 ,   21.16 ,   15.13 ,  -17.64 ,  -42.75 ,   -6.902,
17.34 ,  -33.25 ,   46.3  ,  -63.84 ,  112.3  ,  -63.72 ,
30.81 ,   48.62 ,   10.15 ,   61.7  ,  161.4  , -101.4  ,...
2025-04-27 04:47:24.953814 test begin: paddle.sum(Tensor([120, 62400],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([120, 62400],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 120 / 120 (100%)
Max absolute difference among violations: 275.8
Max relative difference among violations: 5.887
ACTUAL: array([ 6.4414e+00,  1.2344e+01,  7.6875e+00,  5.7695e+00, -1.6240e+00,
2.4629e+00,  3.0996e+00, -1.6875e+01, -1.7969e+01, -5.6250e+00,
1.0852e+01, -7.1016e+00, -3.0508e+00, -1.1312e+01, -6.2148e+00,...
DESIRED: array([-4.0375e+01,  8.7125e+01,  1.6225e+02,  4.7094e+01,  5.0281e+01,
-7.0500e+01, -6.3781e+01, -1.0544e+02,  4.5781e+01, -3.9453e+00,
-3.6219e+01,  2.3766e+01, -1.0725e+02,  8.3062e+01, -2.4969e+01,...
2025-04-27 04:47:26.006255 test begin: paddle.sum(Tensor([120, 64000],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([120, 64000],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 120 / 120 (100%)
Max absolute difference among violations: 145.5
Max relative difference among violations: 5.293
ACTUAL: array([ 21.4   ,  -5.7   ,  -5.56  ,   5.9   ,   4.246 ,  -3.91  ,
-0.7007,   3.277 ,   3.904 ,  -4.98  ,  -2.42  , -14.53  ,
0.915 ,   1.514 ,   5.53  ,   1.695 ,  31.28  ,   1.218 ,...
DESIRED: array([ -24.73 ,  -49.7  ,  -90.94 ,   68.5  ,   70.4  ,   53.28 ,
7.977,  -68.75 ,  128.2  ,  -71.9  ,    5.414,    3.387,
56.72 ,   27.78 ,  -55.9  ,   79.9  ,  146.8  ,   71.75 ,...
2025-04-27 04:47:27.084888 test begin: paddle.sum(Tensor([120, 67200],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([120, 67200],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 120 / 120 (100%)
Max absolute difference among violations: 204.9
Max relative difference among violations: 6.73
ACTUAL: array([-12.33  ,   7.492 ,   3.467 ,  -2.232 ,  -8.18  ,  14.97  ,
3.098 ,  -5.617 , -10.266 ,  14.34  ,   8.94  , -14.35  ,
-17.47  ,  -1.735 ,  15.    ,  12.13  , -14.16  ,  15.66  ,...
DESIRED: array([ -53.62  ,  -23.33  ,  -54.53  ,  126.25  , -110.4   ,   22.52  ,
-3.24  ,    8.57  , -142.9   ,   99.25  ,   94.06  , -107.8   ,
57.5   ,   -3.203 ,   72.44  ,   43.38  ,    8.65  ,  145.8   ,...
2025-04-27 04:47:28.213975 test begin: paddle.sum(Tensor([120, 67392],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([120, 67392],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 120 / 120 (100%)
Max absolute difference among violations: 242.6
Max relative difference among violations: 50.7
ACTUAL: array([-20.53   ,  -5.92   ,  -4.31   ,   7.5    ,  -7.035  ,  -8.33   ,
-2.508  ,  17.27   ,  -8.945  ,   8.54   ,   0.2458 ,   4.625  ,
3.844  ,  -1.945  , -13.09   ,  24.22   ,  14.16   ,   0.518  ,...
DESIRED: array([ 2.3359e+01,  2.4859e+01, -1.4562e+02,  2.2016e+01, -1.1106e+02,
-5.3188e+01, -2.4512e+02, -3.6367e+00, -6.3688e+01,  4.1406e+01,
6.1719e+01,  1.0469e+02,  1.0650e+02, -3.6594e+01,  5.2109e+00,...
2025-04-27 04:47:29.150504 test begin: paddle.sum(Tensor([120, 67456],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([120, 67456],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 120 / 120 (100%)
Max absolute difference among violations: 224.
Max relative difference among violations: 4.562
ACTUAL: array([  1.804 ,  -0.544 ,  21.16  , -17.6   ,   1.126 ,  -1.99  ,
10.87  ,   1.627 ,  -8.44  ,   9.266 ,  -1.5   ,  -8.82  ,
19.31  ,   9.84  ,   2.266 , -21.44  ,   0.4097,  -6.8   ,...
DESIRED: array([-122.75  ,   22.62  ,   90.7   ,  109.7   ,   -0.3647,  140.9   ,
-21.6   ,   29.7   ,    9.586 ,   19.86  , -105.7   ,   45.4   ,
147.2   ,    8.016 ,   44.03  ,   83.    ,  -62.88  ,  -28.14  ,...
2025-04-27 04:47:30.237677 test begin: paddle.sum(Tensor([120, 73984],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([120, 73984],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 120 / 120 (100%)
Max absolute difference among violations: 219.1
Max relative difference among violations: 15.266
ACTUAL: array([-3.6543e+00,  3.9844e+00, -3.5391e+00, -7.3203e+00,  2.3672e+01,
-1.0127e+00,  2.0359e+01, -1.1000e+01, -3.8809e+00,  8.9844e-01,
1.0312e+01,  1.5332e+00,  1.1742e+01,  2.3594e+00,  1.5227e+01,...
DESIRED: array([ -57.97  ,  -31.22  ,  -36.44  , -117.7   ,   89.2   ,  152.2   ,
58.78  ,  -40.84  ,   58.62  ,   71.56  ,   -0.8965, -170.9   ,
-50.9   ,   31.9   ,    0.936 ,  -58.22  ,  167.1   ,   24.19  ,...
2025-04-27 04:47:31.277537 test begin: paddle.sum(Tensor([120, 77824],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([120, 77824],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 119 / 120 (99.2%)
Max absolute difference among violations: 232.2
Max relative difference among violations: 3.47
ACTUAL: array([  0.877  , -16.5    ,  13.53   ,  12.61   ,   4.547  ,   9.21   ,
-14.68   ,   2.613  ,  -0.8286 ,   6.3    ,   7.96   ,  17.83   ,
-18.7    ,   5.09   ,  24.72   ,  25.94   , -15.71   ,   6.605  ,...
DESIRED: array([ -19.03 ,  -49.88 ,  -38.34 ,  146.5  , -110.2  , -178.   ,
-101.   ,   36.47 ,  -21.31 ,   46.88 ,  -25.78 ,  250.1  ,
-115.4  , -107.3  ,  107.   ,  108.4  ,   64.06 , -121.56 ,...
2025-04-27 04:47:32.469848 test begin: paddle.sum(Tensor([120, 82688],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([120, 82688],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 120 / 120 (100%)
Max absolute difference among violations: 209.9
Max relative difference among violations: 56.97
ACTUAL: array([-1.1536e-01, -8.4766e+00, -5.0439e-01, -8.0391e+00,  5.4883e+00,
3.2349e-02,  6.2227e+00,  1.2672e+01, -1.3992e+01,  2.3125e+01,
-1.5938e+01,  1.3281e+01,  4.0508e+00, -1.1258e+01,  1.0945e+01,...
DESIRED: array([-2.0797e+01,  5.9250e+01, -8.7562e+01, -1.6800e+02,  6.9312e+01,
4.4961e+00,  1.1112e+02,  1.7838e+02,  4.5625e+01, -2.5938e+01,
1.5312e+02, -7.2688e+01,  3.3969e+01,  3.9812e+01,  1.0631e+02,...
2025-04-27 04:47:33.620975 test begin: paddle.sum(Tensor([120, 84864],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([120, 84864],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 120 / 120 (100%)
Max absolute difference among violations: 200.6
Max relative difference among violations: 39.9
ACTUAL: array([-22.36  ,  -9.28  ,  10.54  ,  -2.793 ,   2.246 ,  -3.275 ,
-8.46  ,  -7.24  ,  -9.055 , -20.08  ,  19.7   , -14.18  ,
-4.234 ,   3.236 ,  15.055 , -20.47  ,   7.445 ,   8.48  ,...
DESIRED: array([  31.27 ,    4.98 ,  -89.06 ,  -81.4  ,  202.9  ,    3.127,
-53.47 ,  -72.4  ,  -90.56 ,  -16.34 ,  153.5  ,  -32.62 ,
47.12 ,   20.72 ,   95.6  ,  -50.78 ,   19.6  ,   30.31 ,...
2025-04-27 04:47:34.759832 test begin: paddle.sum(Tensor([120, 86016],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([120, 86016],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 120 / 120 (100%)
Max absolute difference among violations: 211.5
Max relative difference among violations: 45.9
ACTUAL: array([-18.05  , -21.97  ,  -1.366 ,  13.66  ,   8.21  ,   1.395 ,
-13.12  ,   3.408 , -10.63  , -17.81  ,   0.2856,  18.11  ,
4.996 ,   6.797 ,  14.086 , -18.92  ,   7.74  ,  13.73  ,...
DESIRED: array([ 2.1797e+01, -4.8781e+01, -1.0550e+02, -9.6000e+01, -1.3148e+01,
7.6000e+01, -4.8969e+01, -7.3188e+01, -1.2756e+02, -6.8750e+01,
-8.4062e+01, -4.7852e+00, -1.3922e+01,  9.0500e+01,  4.7000e+01,...
2025-04-27 04:47:35.865461 test begin: paddle.sum(Tensor([120, 88704],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([120, 88704],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 120 / 120 (100%)
Max absolute difference among violations: 248.9
Max relative difference among violations: 9.07
ACTUAL: array([ -1.871  ,  -0.9736 ,  -2.266  ,  -2.766  ,   3.215  ,   6.312  ,
-0.4014 ,   7.348  ,   3.469  ,   7.82   ,   7.7    ,  -2.121  ,
-9.2    ,  -2.043  ,  12.78   ,  -3.021  ,  -5.65   ,  -2.607  ,...
DESIRED: array([  49.94  ,   -7.766 ,  -30.05  ,   58.5   ,   75.8   ,  -73.44  ,
-88.06  ,   99.44  ,  -48.2   ,  -76.44  ,   99.56  ,   55.    ,
239.6   ,  -49.78  ,  121.1   ,  -48.38  ,  149.9   ,  136.2   ,...
2025-04-27 04:47:37.174184 test begin: paddle.sum(Tensor([120, 91392],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([120, 91392],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 120 / 120 (100%)
Max absolute difference among violations: 257.
Max relative difference among violations: 5.844
ACTUAL: array([  3.209  , -10.47   , -15.125  ,  -4.6    ,  13.586  ,  -0.7227 ,
-6.742  ,  20.3    ,  -1.158  ,  15.875  , -10.43   ,  -6.98   ,
2.793  ,   7.938  ,  17.05   ,   8.62   , -13.25   ,  -7.625  ,...
DESIRED: array([  41.47 , -188.2  ,   -6.137,  -81.56 ,  110.5  ,   33.75 ,
-263.8  ,  118.7  ,   90.3  ,  -14.58 ,    6.953,   12.625,
-118.94 , -102.25 ,   80.44 ,   -4.53 ,   13.91 ,   -4.11 ,...
2025-04-27 04:47:38.477566 test begin: paddle.sum(Tensor([120, 92416],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([120, 92416],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 120 / 120 (100%)
Max absolute difference among violations: 227.1
Max relative difference among violations: 75.06
ACTUAL: array([  3.982  ,  19.31   , -17.73   ,  16.16   , -13.81   ,  16.33   ,
8.164  ,  10.25   , -11.125  ,   5.125  ,   6.836  ,   0.05237,
-6.05   ,   0.4067 ,  -7.38   ,   0.2451 ,   8.62   ,  11.33   ,...
DESIRED: array([-5.3772e-02,  9.4500e+01,  2.0938e+02,  2.8734e+01, -8.2625e+01,
-1.1695e+01, -7.6500e+01,  5.7875e+01,  6.5625e+01,  3.9844e+01,
-2.5922e+01,  1.8938e+01,  1.6625e+02, -7.7062e+01,  1.7925e+02,...
2025-04-27 04:47:39.955623 test begin: paddle.sum(Tensor([120, 94848],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([120, 94848],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 120 / 120 (100%)
Max absolute difference among violations: 195.9
Max relative difference among violations: 5.598
ACTUAL: array([ 1.7715e+00, -9.5156e+00, -7.1055e+00,  2.7203e+01, -1.7922e+01,
-2.4844e+00,  8.9219e+00,  8.4844e+00, -5.7070e+00,  3.1816e+00,
-1.7672e+01, -1.2998e+00,  2.7891e+01, -1.3586e+01, -9.6045e-01,...
DESIRED: array([-161.6  ,  102.6  ,  -70.3  ,  111.44 , -142.4  ,  -42.4  ,
98.75 ,  125.25 , -180.2  ,   41.97 ,    7.586,  139.1  ,
-142.9  ,  -71.1  ,   85.1  ,    5.08 , -118.94 ,  133.6  ,...
2025-04-27 04:47:41.377127 test begin: paddle.sum(Tensor([120, 97280],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([120, 97280],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 120 / 120 (100%)
Max absolute difference among violations: 212.
Max relative difference among violations: 46.7
ACTUAL: array([-11.03  ,  -6.277 ,  15.35  ,   5.145 ,  -5.195 ,   2.088 ,
9.92  ,  11.62  , -18.8   ,  -7.875 , -25.53  ,  -1.803 ,
7.992 ,   6.58  ,  22.89  ,   6.22  ,  17.06  ,  -9.89  ,...
DESIRED: array([ 9.7891e+00, -4.4312e+01,  1.6388e+02, -6.1328e-01,  4.3250e+01,
-8.3062e+01, -4.9719e+01, -2.8438e+01, -2.7234e+01, -5.2094e+01,
-2.3750e+02, -1.6738e+02, -3.7844e+01,  1.2912e+02,  3.9750e+01,...
2025-04-27 04:47:43.930639 test begin: paddle.sum(Tensor([12288],"float16"), )
[accuracy error] paddle.sum(Tensor([12288],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 3.14
Max relative difference among violations: 0.359
ACTUAL: array(-5.61, dtype=float16)
DESIRED: array(-8.75, dtype=float16)
2025-04-27 04:47:44.409054 test begin: paddle.sum(Tensor([124, 102144],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([124, 102144],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 124 / 124 (100%)
Max absolute difference among violations: 245.9
Max relative difference among violations: 33.16
ACTUAL: array([  5.477 ,  -5.746 ,  -9.01  ,  -9.53  ,  -1.183 ,   9.31  ,
17.03  ,  20.98  ,   0.2499,  -3.744 ,  13.79  , -21.9   ,
10.26  ,  -7.41  ,  10.51  ,   1.382 ,   0.1653, -15.29  ,...
DESIRED: array([-5.0938e+00,  6.2719e+01,  1.3275e+02,  4.0219e+01,  1.1825e+02,
2.5250e+01,  1.3227e+01,  1.2888e+02,  1.3988e+02, -4.6844e+01,
1.1781e+01,  5.6594e+01,  9.1562e+01,  8.5312e+01, -8.9500e+01,...
2025-04-27 04:47:57.227949 test begin: paddle.sum(Tensor([124, 54400],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([124, 54400],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 124 / 124 (100%)
Max absolute difference among violations: 197.1
Max relative difference among violations: 25.42
ACTUAL: array([  1.595 ,  -5.56  ,  -8.016 ,  -7.508 ,  -1.006 ,   8.77  ,
11.086 ,   4.54  ,  -1.876 , -13.984 ,  -9.08  ,  -5.86  ,
-2.105 ,   4.133 ,  -2.818 ,  -2.773 ,  -5.03  , -10.19  ,...
DESIRED: array([  83.   ,  -19.89 ,  -44.34 ,  -38.38 ,  -90.5  ,  -33.25 ,
98.2  ,  -66.44 ,  -88.94 ,    4.215, -149.4  ,  -56.8  ,
-71.   ,   73.56 ,  -77.   ,   77.6  ,   -6.508,  -49.47 ,...
2025-04-27 04:47:58.206800 test begin: paddle.sum(Tensor([124, 60800],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([124, 60800],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 124 / 124 (100%)
Max absolute difference among violations: 194.6
Max relative difference among violations: 30.42
ACTUAL: array([ 4.6484e-01,  1.0773e+01,  7.1582e-01,  1.6641e+01, -8.3203e+00,
-2.0250e+01,  1.3574e+00,  9.8750e+00,  3.9746e+00, -2.1016e+01,
-1.3508e+01, -5.3906e+00, -3.7188e+00,  2.4312e+01, -9.4688e+00,...
DESIRED: array([-8.2562e+01,  2.0425e+02, -7.1797e+00, -8.4000e+01, -5.5438e+01,
-4.1969e+01,  5.6438e+01,  6.1469e+01,  2.4766e+01, -1.4388e+02,
4.3625e+01,  6.8438e+01,  8.1885e-01, -4.2469e+01, -5.2188e+01,...
2025-04-27 04:47:59.314247 test begin: paddle.sum(Tensor([124, 62400],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([124, 62400],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 124 / 124 (100%)
Max absolute difference among violations: 217.5
Max relative difference among violations: 32.34
ACTUAL: array([  9.195 ,  -2.217 , -21.17  ,  14.01  ,   4.72  ,  -3.898 ,
-22.25  ,  12.375 ,   8.87  , -15.91  ,   5.938 ,   1.167 ,
2.596 ,  -8.09  , -13.2   , -11.34  ,  -2.936 ,  -2.988 ,...
DESIRED: array([ -38.6  ,   52.6  ,  -52.78 ,  -26.95 ,  -20.67 ,   87.8  ,
-37.75 ,   46.6  ,  -36.53 , -118.94 ,  -86.1  ,   29.56 ,
-104.7  , -140.8  ,   31.98 ,  -95.5  , -103.6  ,   53.2  ,...
2025-04-27 04:48:00.349219 test begin: paddle.sum(Tensor([124, 64000],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([124, 64000],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 124 / 124 (100%)
Max absolute difference among violations: 149.8
Max relative difference among violations: 23.88
ACTUAL: array([ 2.4883e+00,  9.4609e+00, -1.3117e+01,  8.0000e+00, -5.3281e+00,
-1.9859e+01,  9.9844e+00, -7.5664e+00, -1.1031e+01,  2.5438e+01,
-8.9062e+00, -4.9531e+00, -8.6641e+00,  1.5680e+01, -6.9805e+00,...
DESIRED: array([ -34.1   ,  -30.5   ,  -59.28  ,   95.25  ,   18.62  ,  -52.3   ,
50.9   ,  -80.4   ,  -23.8   ,   -9.55  ,   20.64  ,   20.97  ,
-154.6   ,  103.8   ,    1.412 ,   16.88  ,   32.16  ,   90.4   ,...
2025-04-27 04:48:01.389151 test begin: paddle.sum(Tensor([124, 67200],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([124, 67200],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 124 / 124 (100%)
Max absolute difference among violations: 202.2
Max relative difference among violations: 2.664
ACTUAL: array([  1.275 , -14.484 ,  -9.35  ,  -1.006 ,  -4.797 ,  15.125 ,
6.49  ,   3.348 ,   1.219 ,  -2.324 ,  10.23  ,   4.336 ,
1.292 ,  -1.764 ,  -4.2   ,   5.336 , -10.45  ,  -9.55  ,...
DESIRED: array([  39.62 ,   32.88 , -111.9  ,  -11.984,  113.44 ,   62.44 ,
-39.75 ,   24.36 ,   53.6  ,   61.72 ,  -43.72 ,   99.3  ,
14.54 , -105.1  ,  -42.   ,   38.25 ,  -44.03 ,  -75.7  ,...
2025-04-27 04:48:02.557035 test begin: paddle.sum(Tensor([124, 73984],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([124, 73984],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 124 / 124 (100%)
Max absolute difference among violations: 163.5
Max relative difference among violations: 33.22
ACTUAL: array([  1.77   , -10.63   ,  -7.004  ,  -6.45   , -17.6    ,   7.5    ,
5.164  ,  -7.164  , -20.66   ,   4.61   ,  17.45   ,   1.087  ,
-11.23   ,   2.23   ,  -5.13   ,  11.27   ,  11.03   ,   3.68   ,...
DESIRED: array([ 115.06  ,   71.94  ,  -50.38  ,   26.4   ,    0.546 ,  -72.9   ,
15.98  ,   56.34  ,  -90.6   ,  -62.75  , -103.5   ,  -11.7   ,
-39.53  ,   32.12  ,    4.074 ,   26.17  ,    2.545 , -109.2   ,...
2025-04-27 04:48:03.773477 test begin: paddle.sum(Tensor([124, 77824],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([124, 77824],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 124 / 124 (100%)
Max absolute difference among violations: 221.5
Max relative difference among violations: 10.98
ACTUAL: array([ -2.781  ,   1.798  ,  12.1    ,  11.33   ,  -1.546  ,  22.69   ,
16.31   ,  11.9    ,   1.685  ,   8.24   ,  29.83   , -14.38   ,
-8.64   ,  -9.984  ,  11.234  ,  -9.82   ,  -4.082  ,  -5.15   ,...
DESIRED: array([  18.23 ,   67.44 ,  -75.56 ,  -37.6  ,   82.7  ,   15.195,
-14.53 ,   29.3  ,  -10.4  ,   98.4  ,   59.34 , -142.2  ,
-83.75 ,   34.38 , -105.   ,   -5.89 ,  107.4  ,  112.9  ,...
2025-04-27 04:48:05.067103 test begin: paddle.sum(Tensor([124, 82688],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([124, 82688],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 124 / 124 (100%)
Max absolute difference among violations: 218.9
Max relative difference among violations: 235.1
ACTUAL: array([ -8.13  , -20.95  , -13.23  ,   5.418 ,   8.055 ,   1.192 ,
11.32  ,   3.959 ,  -7.062 ,   2.793 ,  16.17  ,   5.62  ,
4.082 ,   2.71  ,   0.6416, -15.96  ,   1.116 ,  -4.992 ,...
DESIRED: array([ 7.2305e+00, -2.1800e+02, -1.2138e+02,  3.1906e+01, -8.9500e+01,
-2.3219e+01, -7.4000e+01,  2.5422e+01, -1.1069e+02, -1.0288e+02,
-6.1562e+01,  8.8312e+01,  7.7000e+01,  1.4512e+02, -7.9688e+01,...
2025-04-27 04:48:06.398947 test begin: paddle.sum(Tensor([124, 84864],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([124, 84864],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 124 / 124 (100%)
Max absolute difference among violations: 236.8
Max relative difference among violations: 37.75
ACTUAL: array([ 12.62  ,  16.44  ,  -6.38  ,   4.35  ,  -6.332 , -17.97  ,
12.3   ,  -3.596 ,  -3.63  ,  25.38  ,  -8.75  , -14.25  ,
-8.58  ,  12.76  ,  -1.727 ,  13.85  ,  -3.645 ,  -1.235 ,...
DESIRED: array([ 2.7719e+01,  1.6325e+02,  1.5492e+01,  1.3525e+02,  2.7922e+01,
-2.1594e+01,  1.7812e+01,  6.3062e+01,  6.9438e+01,  8.7000e+01,
-2.2571e-01,  4.7312e+01,  3.3500e+01, -5.5062e+01,  3.0953e+01,...
2025-04-27 04:48:07.765613 test begin: paddle.sum(Tensor([124, 86016],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([124, 86016],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 124 / 124 (100%)
Max absolute difference among violations: 197.8
Max relative difference among violations: 11.48
ACTUAL: array([ -9.97   , -16.34   ,  -1.397  ,  -2.826  ,  -8.65   ,  -1.693  ,
-15.3    ,  -5.004  ,   4.91   ,  16.28   ,   3.666  ,   2.102  ,
8.19   , -15.14   , -10.37   ,   8.06   , -24.94   ,   7.227  ,...
DESIRED: array([  11.164,  -96.   ,   86.25 ,   69.5  ,  -66.5  ,  -98.94 ,
-33.12 ,  -34.78 ,   60.25 ,   20.22 ,   35.9  ,   62.5  ,
-51.7  , -150.1  ,  -36.   ,    6.406,  -57.53 ,   23.2  ,...
2025-04-27 04:48:09.139622 test begin: paddle.sum(Tensor([124, 89984],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([124, 89984],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 124 / 124 (100%)
Max absolute difference among violations: 232.2
Max relative difference among violations: 71.2
ACTUAL: array([ -7.79  ,  15.15  ,  13.8   ,   1.609 ,   0.1844,   7.96  ,
15.86  ,  -6.01  ,  16.05  ,  11.164 ,   9.055 ,  -7.492 ,
-2.549 ,   8.44  ,   9.31  ,   8.25  , -16.28  ,  -7.605 ,...
DESIRED: array([ 1.0175e+02,  5.1906e+01,  9.8562e+01,  1.2138e+02, -4.3000e+01,
6.6000e+01,  8.8312e+01, -6.8562e+01,  4.8000e+01,  2.2984e+01,
4.3594e+01,  3.6531e+01,  1.1019e+02,  1.1525e+02,  9.4938e+01,...
2025-04-27 04:48:10.465292 test begin: paddle.sum(Tensor([124, 91392],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([124, 91392],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 124 / 124 (100%)
Max absolute difference among violations: 222.6
Max relative difference among violations: 16.75
ACTUAL: array([-8.2656e+00, -1.9238e+00, -3.0176e+00,  7.8633e+00, -1.2617e+01,
-1.3242e+01, -7.1680e+00, -1.7750e+01,  9.5547e+00,  8.1885e-01,
8.2500e+00,  1.3953e+01,  6.4492e+00,  4.5312e+00, -1.1391e+01,...
DESIRED: array([-1.3562e+02,  7.6688e+01,  6.2250e+01, -7.0562e+01, -7.8938e+01,
-3.5254e+00, -1.3412e+02, -3.9438e+01,  2.5328e+01,  2.4047e+01,
-2.1438e+02,  1.2669e+02,  6.9312e+01, -6.0156e+01, -1.0544e+02,...
2025-04-27 04:48:11.925655 test begin: paddle.sum(Tensor([124, 92416],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([124, 92416],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 124 / 124 (100%)
Max absolute difference among violations: 205.4
Max relative difference among violations: 42.56
ACTUAL: array([-1.2797e+01,  3.7188e+00,  3.5508e+00, -7.9219e+00,  2.3779e-01,
1.3438e+01,  1.2430e+01,  1.4664e+01, -2.5762e+00, -2.4023e+00,
-6.1523e+00, -1.6422e+01, -4.2227e+00,  1.0852e+01, -6.4141e+00,...
DESIRED: array([-126.8   ,  -95.44  ,  101.3   ,   24.17  ,   31.19  ,   41.9   ,
10.89  ,  122.2   , -182.8   , -110.4   , -134.6   ,   21.48  ,
75.1   ,  131.4   , -167.9   ,  130.9   ,  -12.92  , -197.4   ,...
2025-04-27 04:48:13.651284 test begin: paddle.sum(Tensor([12582912],"float16"), )
[accuracy error] paddle.sum(Tensor([12582912],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 43.75
Max relative difference among violations: 0.1074
ACTUAL: array(-363.5, dtype=float16)
DESIRED: array(-407.2, dtype=float16)
2025-04-27 04:48:15.093029 test begin: paddle.sum(Tensor([128, 1000],"float16"), axis=-1, )
[accuracy error] paddle.sum(Tensor([128, 1000],"float16"), axis=-1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 121 / 128 (94.5%)
Max absolute difference among violations: 5.47
Max relative difference among violations: 6.44
ACTUAL: array([ -3.748 ,  -5.832 ,  -9.414 ,  -6.723 ,  14.75  , -10.29  ,
6.91  ,   7.062 ,   0.4932,  -7.71  ,   3.56  ,  -9.03  ,
-9.37  ,   4.7   ,  -2.766 ,  -0.2468,   0.5396,   2.738 ,...
DESIRED: array([ -3.406  ,  -6.047  , -11.3    ,  -7.945  ,  16.48   , -13.11   ,
8.266  ,   6.844  ,   1.896  ,  -9.58   ,   3.47   , -10.49   ,
-11.86   ,   4.61   ,  -3.21   ,  -0.04764,  -0.6826 ,   3.824  ,...
2025-04-27 04:48:15.549979 test begin: paddle.sum(Tensor([128, 102144],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([128, 102144],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 128 / 128 (100%)
Max absolute difference among violations: 186.5
Max relative difference among violations: 15.945
ACTUAL: array([ -7.168 ,   0.1975,  11.41  ,  -8.59  , -10.1   , -16.11  ,
5.77  , -15.55  , -10.49  ,   9.04  , -10.08  ,   3.486 ,
14.46  ,  -4.863 ,   3.918 ,  -4.03  ,  19.58  ,  -6.742 ,...
DESIRED: array([-1.1831e+02,  3.0953e+01,  1.5275e+02, -9.0375e+01, -6.8438e+01,
-3.0172e+01,  1.0281e+02,  8.0000e+01,  1.4711e+01,  3.4625e+01,
-5.4844e+01,  1.9031e+01,  5.3562e+01, -5.1094e+01,  4.0625e+01,...
2025-04-27 04:48:17.287852 test begin: paddle.sum(Tensor([128, 104832],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([128, 104832],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 128 / 128 (100%)
Max absolute difference among violations: 261.5
Max relative difference among violations: 4.4
ACTUAL: array([ 10.85  ,  -1.299 ,  11.984 ,   3.621 , -17.81  ,  15.82  ,
8.    ,   1.499 ,  -5.96  ,  -1.682 ,  -1.817 , -13.53  ,
4.387 ,   9.234 ,  -0.147 , -14.695 ,   6.504 ,   2.61  ,...
DESIRED: array([ 127.6  ,  132.5  ,    8.27 ,  168.2  ,   96.6  ,    9.984,
41.88 ,   76.3  ,  -75.06 ,  -77.8  ,   71.6  ,   85.75 ,
-13.37 ,  196.2  ,   30.17 , -253.8  , -247.5  ,   12.38 ,...
2025-04-27 04:48:19.307777 test begin: paddle.sum(Tensor([128, 192612],"float16"), axis=-1, )
[accuracy error] paddle.sum(Tensor([128, 192612],"float16"), axis=-1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 128 / 128 (100%)
Max absolute difference among violations: 372.
Max relative difference among violations: 6.223
ACTUAL: array([  8.195 ,  -0.2593, -15.97  ,  14.13  , -18.11  ,   6.96  ,
2.375 ,  -2.475 ,   6.676 , -14.695 ,  12.914 ,  -0.905 ,
-6.97  ,  11.68  ,  10.14  , -14.05  ,   1.996 ,   1.713 ,...
DESIRED: array([-153.1  ,   47.16 , -175.9  ,   70.25 ,   34.03 ,  -33.38 ,
18.14 , -108.7  ,  -23.48 , -212.   ,  318.5  ,   41.62 ,
115.2  , -130.8  ,   33.2  , -102.   ,  -53.34 ,   16.62 ,...
2025-04-27 04:48:38.289021 test begin: paddle.sum(Tensor([128, 57600],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([128, 57600],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 128 / 128 (100%)
Max absolute difference among violations: 175.9
Max relative difference among violations: 57.28
ACTUAL: array([-4.1289e+00,  2.3953e+01,  1.0555e+01,  8.3281e+00,  1.5453e+01,
-2.2781e+01, -1.5791e+00, -4.1953e+00, -2.0281e+01,  3.1113e+00,
-3.5278e-01, -2.6504e+00, -4.1504e-03,  4.3555e+00,  2.1855e+00,...
DESIRED: array([-3.3781e+01, -1.9406e+01,  6.5438e+01, -8.3984e+00,  8.5250e+01,
-7.7188e+01, -2.7500e+01,  9.4844e+00, -5.1875e+01,  1.4531e+01,
9.2438e+01, -7.2938e+01,  4.5312e+01, -1.1200e+02, -5.4188e+01,...
2025-04-27 04:48:39.332015 test begin: paddle.sum(Tensor([128, 59200],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([128, 59200],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 128 / 128 (100%)
Max absolute difference among violations: 134.8
Max relative difference among violations: 6.16
ACTUAL: array([ 14.15   ,   4.16   ,   3.51   ,   4.26   ,  -0.3423 , -15.16   ,
-0.14   ,  -5.055  ,  18.2    ,   9.305  ,  14.97   , -18.33   ,
-4.758  ,  -0.581  ,  -3.416  , -13.72   ,  -1.836  ,  24.3    ,...
DESIRED: array([  60.53  ,   95.1   ,  -10.73  ,   55.7   ,  -90.6   ,  -23.7   ,
-39.6   ,   62.16  ,   20.03  ,   96.06  ,  -40.06  ,  -73.44  ,
17.88  ,   21.64  ,  -12.93  , -135.9   ,   19.36  ,  114.1   ,...
2025-04-27 04:48:40.347964 test begin: paddle.sum(Tensor([128, 60800],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([128, 60800],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 128 / 128 (100%)
Max absolute difference among violations: 182.9
Max relative difference among violations: 77.94
ACTUAL: array([-1.8938e+01,  4.4492e+00,  1.8076e+00, -2.0484e+01, -1.2086e+01,
2.3203e+01, -1.6475e+00, -1.0039e+01,  1.3828e+00, -3.7227e+00,
-1.8234e+01,  7.8359e+00,  1.3344e+01, -1.1543e+00, -1.4117e+01,...
DESIRED: array([-1.0794e+02,  7.9312e+01, -4.0344e+01, -4.7375e+01, -8.2000e+01,
1.4362e+02, -1.1900e+02,  1.4102e+01, -2.7969e+01, -1.3672e-01,
-4.2305e+00, -4.1062e+01,  4.1219e+01, -3.4551e+00, -2.8547e+01,...
2025-04-27 04:48:41.359571 test begin: paddle.sum(Tensor([128, 67200],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([128, 67200],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 128 / 128 (100%)
Max absolute difference among violations: 226.1
Max relative difference among violations: 6.42
ACTUAL: array([-19.31   ,  15.46   ,  28.73   ,  19.9    , -15.39   , -14.48   ,
-0.9727 , -10.08   ,  -9.93   ,   0.1849 ,  -1.562  ,  -6.92   ,
9.86   , -11.09   ,   1.142  ,   9.53   , -14.63   ,  19.56   ,...
DESIRED: array([ -28.88 ,  108.06 ,  -70.94 ,  -24.05 ,  -51.94 , -107.5  ,
25.17 ,  107.25 ,   20.81 ,   52.78 ,  -33.78 ,  -20.1  ,
-68.2  ,   23.89 ,  -45.12 ,   91.   ,  -40.25 ,  -45.34 ,...
2025-04-27 04:48:42.302236 test begin: paddle.sum(Tensor([128, 73984],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([128, 73984],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 128 / 128 (100%)
Max absolute difference among violations: 215.4
Max relative difference among violations: 16.36
ACTUAL: array([ 1.6672e+01,  1.6500e+01,  8.3691e-01, -9.7812e+00,  6.4570e+00,
5.3008e+00,  1.2334e+00,  6.5547e+00,  3.3320e+00, -2.3344e+01,
4.5000e+00, -2.9297e+00,  4.3203e+00,  2.8477e+00, -1.0648e+01,...
DESIRED: array([ -33.12 ,   71.5  ,  -17.5  ,  -24.47 ,  -26.2  ,   -0.345,
-25.45 ,   33.66 ,  115.8  ,   16.06 ,   71.6  ,    2.01 ,
-101.25 ,   94.1  ,  -18.53 ,   27.4  ,  -20.89 ,  104.1  ,...
2025-04-27 04:48:43.487264 test begin: paddle.sum(Tensor([128, 76160],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([128, 76160],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 128 / 128 (100%)
Max absolute difference among violations: 274.2
Max relative difference among violations: 9.67
ACTUAL: array([ 12.766 ,   6.516 ,  -9.164 ,   3.568 ,   4.01  ,  19.73  ,
-0.862 ,  -9.23  ,   5.02  ,  10.61  ,  -4.543 ,  25.16  ,
-7.574 ,   3.861 ,  -8.03  ,   4.285 ,  -0.797 ,  -5.97  ,...
DESIRED: array([  44.72  ,   46.1   ,  -87.2   ,  -49.75  , -103.    ,   30.4   ,
-28.58  ,  103.4   ,  -69.8   ,   -6.434 ,   62.2   ,   69.4   ,
-40.8   ,  -40.78  ,  154.4   ,  -41.22  ,  114.75  ,   13.18  ,...
2025-04-27 04:48:44.820622 test begin: paddle.sum(Tensor([128, 80256],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([128, 80256],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 128 / 128 (100%)
Max absolute difference among violations: 207.
Max relative difference among violations: 10.73
ACTUAL: array([-1.2641e+01,  7.5742e+00, -1.0398e+01,  6.8047e+00, -5.1367e+00,
-4.1602e+00,  3.0981e-01,  6.8828e+00, -8.1953e+00,  1.2492e+01,
-6.1211e+00,  4.8828e+00,  2.2559e+00,  2.6484e+00, -4.7188e+00,...
DESIRED: array([-116.7  ,   36.25 ,   30.9  ,   36.9  ,   19.61 ,    0.428,
157.2  , -138.8  ,   11.84 ,   92.75 ,   15.43 ,   34.16 ,
-13.71 ,  -43.38 ,   26.56 ,  -40.88 ,   86.44 ,   -2.793,...
2025-04-27 04:48:46.113592 test begin: paddle.sum(Tensor([128, 82688],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([128, 82688],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 127 / 128 (99.2%)
Max absolute difference among violations: 325.8
Max relative difference among violations: 210.5
ACTUAL: array([ 29.16   , -10.164  ,  27.03   ,  -6.91   ,  -2.492  ,   8.41   ,
4.918  ,   9.63   , -19.34   ,   0.33   ,  26.2    ,  12.56   ,
11.164  ,  -8.55   ,  -7.14   ,  -0.4602 ,  -8.18   ,  -3.246  ,...
DESIRED: array([-8.4000e+01, -8.1875e+01,  9.0500e+01, -3.5000e+01,  7.5938e+01,
8.4844e+00,  3.3938e+01,  3.5781e+01, -1.3188e+02, -6.7562e+01,
1.1381e+02, -2.2109e+01, -5.3284e-02,  2.0609e+01, -6.3344e+01,...
2025-04-27 04:48:47.452679 test begin: paddle.sum(Tensor([128, 91392],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([128, 91392],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 128 / 128 (100%)
Max absolute difference among violations: 299.5
Max relative difference among violations: 6.402
ACTUAL: array([  2.793  , -22.28   ,   5.918  , -11.95   ,   1.679  ,  -7.43   ,
7.125  , -10.72   ,   3.127  ,   6.56   ,   7.15   ,  -7.164  ,
-8.31   ,   7.29   , -15.92   ,  -1.413  , -23.89   ,   9.49   ,...
DESIRED: array([ -45.06 , -201.1  ,  107.2  ,   58.66 ,  -87.7  , -189.4  ,
69.1  ,  -30.39 ,   15.06 ,   80.   ,  -53.53 ,  -30.08 ,
135.4  ,   75.2  ,  132.9  ,  -94.7  , -157.2  ,   78.9  ,...
2025-04-27 04:48:48.865101 test begin: paddle.sum(Tensor([128, 92416],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([128, 92416],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 128 / 128 (100%)
Max absolute difference among violations: 327.5
Max relative difference among violations: 10.53
ACTUAL: array([-13.734 ,  -4.02  ,  -9.68  ,   7.03  ,  20.    ,  12.7   ,
15.555 , -29.17  ,  -1.723 ,  -2.137 ,   1.0625,   2.156 ,
14.82  ,   1.9   ,   2.672 ,  27.47  ,  21.83  ,  12.7   ,...
DESIRED: array([ -62.66 ,  -11.6  ,   79.5  ,  -87.94 ,   16.94 ,  114.   ,
156.2  ,   30.03 ,  -64.   ,  -36.1  ,   -3.865,  -38.84 ,
-27.11 ,  -94.9  ,  -46.97 ,   96.6  ,  118.25 ,   -4.555,...
2025-04-27 04:48:50.993680 test begin: paddle.sum(Tensor([128, 94080],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([128, 94080],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 127 / 128 (99.2%)
Max absolute difference among violations: 264.5
Max relative difference among violations: 3.002
ACTUAL: array([ 6.7383e+00, -1.6297e+01,  1.6469e+01, -2.2938e+01, -1.1117e+01,
-1.5055e+01,  2.0984e+01,  1.6855e+00, -4.3359e+00, -1.9277e+00,
-5.1641e+00,  6.6523e+00, -7.2188e+00, -1.6359e+01,  4.6875e+00,...
DESIRED: array([ -78.9  , -134.6  ,  130.1  ,   39.5  , -208.8  ,  168.4  ,
84.5  ,   49.88 ,  139.4  ,   32.8  ,  -41.75 ,  -91.5  ,
51.22 ,  -23.77 ,   -7.906, -178.2  , -269.   ,  -64.7  ,...
2025-04-27 04:48:57.620367 test begin: paddle.sum(Tensor([132, 102144],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([132, 102144],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 132 / 132 (100%)
Max absolute difference among violations: 218.1
Max relative difference among violations: 27.1
ACTUAL: array([-12.9    ,   2.482  ,  -0.984  ,   7.2    ,  -8.75   ,   0.5776 ,
-4.18   , -11.67   ,   1.722  ,   3.523  ,   2.154  ,   2.781  ,
-8.2    , -11.71   ,  -8.37   ,  -9.69   ,  11.29   ,  -7.855  ,...
DESIRED: array([ 1.3188e+01, -1.4612e+02, -1.7875e+02,  1.4462e+02,  9.7875e+01,
-1.2575e+02, -1.5836e+01,  1.2519e+02, -1.7672e+01, -6.6094e+00,
7.4500e+01, -1.0375e+02,  1.5088e+02,  1.5288e+02, -4.1125e+01,...
2025-04-27 04:49:09.500273 test begin: paddle.sum(Tensor([132, 54400],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([132, 54400],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 132 / 132 (100%)
Max absolute difference among violations: 204.
Max relative difference among violations: 8.64
ACTUAL: array([-29.64  ,   5.066 ,  -6.406 ,  -1.26  , -18.38  ,  12.19  ,
7.668 , -11.06  ,  -0.761 ,  -0.476 ,  10.39  ,  -8.55  ,
-16.55  ,  -2.49  , -16.39  ,  -5.477 ,   5.117 ,  -9.33  ,...
DESIRED: array([ -95.    ,   35.84  ,  -17.42  ,   22.11  ,  -63.75  ,  -25.62  ,
9.97  ,   47.06  ,   13.555 ,    0.2202,   34.84  ,  -98.5   ,
-63.47  ,  -50.3   ,  -76.56  ,   11.37  ,  -18.9   ,   72.1   ,...
2025-04-27 04:49:10.502211 test begin: paddle.sum(Tensor([132, 60800],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([132, 60800],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 132 / 132 (100%)
Max absolute difference among violations: 203.5
Max relative difference among violations: 15.13
ACTUAL: array([-5.6562e+00, -5.9219e+00, -1.4938e+01, -2.1973e+00, -2.6504e+00,
1.0020e+00,  1.3930e+01,  1.2594e+01,  2.8125e+00, -7.7188e+00,
1.3078e+01, -2.0375e+01, -1.9562e+01,  4.0664e+00, -6.7383e+00,...
DESIRED: array([-105.7  ,  -55.1  ,   31.73 , -131.2  ,  -89.94 ,  -43.78 ,
-82.56 ,   65.1  , -117.7  ,  -26.92 ,  -15.695, -112.25 ,
13.09 ,  -36.44 ,  -50.16 ,  -72.9  ,  -30.47 ,   94.4  ,...
2025-04-27 04:49:11.497834 test begin: paddle.sum(Tensor([132, 67200],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([132, 67200],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 132 / 132 (100%)
Max absolute difference among violations: 201.
Max relative difference among violations: 711.
ACTUAL: array([ 3.4395e+00,  2.6094e+00,  1.6152e+00, -1.6672e+01, -5.3008e+00,
1.3955e+00,  7.7305e+00, -7.6914e+00,  4.9648e+00, -7.8516e+00,
-3.7148e+00,  5.3945e+00, -1.8766e+01,  1.5461e+01, -1.3281e+01,...
DESIRED: array([-9.2344e+00,  2.4031e+01, -1.1712e+02, -3.9375e+01, -4.2281e+01,
6.0703e+00, -1.2625e+02,  9.1250e+00,  8.1438e+01, -1.0469e+02,
-6.6000e+01, -8.2938e+01,  6.6688e+01,  3.5031e+01, -5.0062e+01,...
2025-04-27 04:49:12.639980 test begin: paddle.sum(Tensor([132, 69632],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([132, 69632],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 132 / 132 (100%)
Max absolute difference among violations: 217.5
Max relative difference among violations: 5.824
ACTUAL: array([-17.5   ,  14.22  , -14.7   ,   5.34  ,  -0.132 ,  19.08  ,
2.197 ,  27.28  ,   4.395 ,  12.695 ,  -6.83  ,  21.84  ,
-6.16  ,  16.69  ,  -4.637 ,   2.121 ,  -4.64  ,  -1.204 ,...
DESIRED: array([-125.25 ,  -75.5  ,  -26.22 ,   18.3  ,    5.555,  133.1  ,
209.4  ,  110.8  ,  -25.97 ,   -6.992,  -98.   ,   39.1  ,
2.904,  -35.44 , -156.2  ,  111.9  ,  -17.27 ,  -27.14 ,...
2025-04-27 04:49:13.812872 test begin: paddle.sum(Tensor([132, 73984],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([132, 73984],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 132 / 132 (100%)
Max absolute difference among violations: 240.9
Max relative difference among violations: 17.33
ACTUAL: array([ -2.553  ,   8.3    ,  -1.388  ,  13.71   ,  19.89   ,  14.086  ,
1.068  , -15.79   ,  18.4    , -12.805  ,   1.84   ,  -2.402  ,
-16.75   ,  -6.848  ,  -4.848  ,  -4.67   ,   6.297  ,  13.414  ,...
DESIRED: array([-4.8312e+01,  2.8062e+01, -2.1984e+01,  8.2000e+01,  2.2125e+01,
1.2475e+02, -7.7500e+01, -1.0069e+02,  1.2144e+02, -7.5875e+01,
3.8281e+01,  6.7938e+01, -1.0581e+02,  7.2312e+01, -9.8828e+00,...
2025-04-27 04:49:14.996156 test begin: paddle.sum(Tensor([132, 76032],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([132, 76032],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 130 / 132 (98.5%)
Max absolute difference among violations: 181.
Max relative difference among violations: 416.8
ACTUAL: array([  0.1238,  -1.086 ,  -0.9644, -16.53  ,  11.984 ,   1.554 ,
-1.821 ,  -2.338 ,   5.18  ,   9.32  ,   6.746 ,   8.78  ,
-3.79  ,   0.6157,  -4.15  , -19.34  ,  -5.25  , -11.09  ,...
DESIRED: array([ 3.0953e+01, -5.0039e+00,  5.8719e+01, -4.8281e+01, -7.9688e+01,
-1.4300e+02, -3.2625e+01, -6.1094e+01, -1.5488e+02,  1.5275e+02,
1.0900e+02,  1.0812e+02,  5.8750e+01,  7.7812e+01, -1.0925e+02,...
2025-04-27 04:49:16.337520 test begin: paddle.sum(Tensor([132, 82688],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([132, 82688],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 131 / 132 (99.2%)
Max absolute difference among violations: 225.2
Max relative difference among violations: 46.03
ACTUAL: array([ 13.055  ,  14.89   ,   2.717  ,  11.81   ,   1.622  ,  -5.76   ,
-11.09   ,   4.33   ,  24.97   ,  17.25   ,  28.38   ,   3.945  ,
-6.46   ,   2.72   ,   1.063  , -14.     , -12.58   , -25.58   ,...
DESIRED: array([ -27.61  ,  -59.28  ,  -63.22  ,  -40.25  ,  -29.8   ,   17.81  ,
96.    ,   65.8   ,   -5.43  ,  121.06  ,   22.44  ,    1.761 ,
-108.4   ,   56.47  ,   13.69  ,   71.5   ,  -26.89  ,   53.56  ,...
2025-04-27 04:49:17.683568 test begin: paddle.sum(Tensor([132, 84864],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([132, 84864],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 132 / 132 (100%)
Max absolute difference among violations: 241.1
Max relative difference among violations: 5.254
ACTUAL: array([ 35.78  , -23.84  ,  -8.53  ,  -5.273 ,   1.05  ,   6.387 ,
10.67  ,  19.66  ,  -5.17  ,  -9.22  ,   3.371 ,  32.03  ,
-22.66  ,  16.44  , -22.77  , -13.51  , -17.36  ,  -7.42  ,...
DESIRED: array([  94.2  ,  -77.94 ,   83.2  ,  -81.7  ,  105.44 ,   37.1  ,
141.   ,  107.4  , -174.9  ,   76.56 ,   53.7  ,  101.9  ,
-48.1  ,  -58.88 , -128.5  ,  -52.44 ,  -14.2  ,    1.744,...
2025-04-27 04:49:19.134423 test begin: paddle.sum(Tensor([132, 91392],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([132, 91392],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 132 / 132 (100%)
Max absolute difference among violations: 236.9
Max relative difference among violations: 21.69
ACTUAL: array([ 1.6084e+00,  1.5539e+01, -2.0781e+01,  1.1852e+01,  9.6719e+00,
-5.3828e+00,  1.3727e+01, -2.3766e+01,  1.3898e+01, -3.0141e+01,
-3.5547e+00, -6.3438e+00,  2.5750e+01,  2.9453e+00, -1.2520e+00,...
DESIRED: array([-9.8562e+01,  2.2275e+02, -1.4150e+02, -1.0156e+02,  6.6000e+01,
-4.2906e+01,  4.3844e+01, -1.8888e+02, -1.1119e+02, -9.0500e+01,
1.3438e+02,  1.6625e+01,  6.3312e+01,  6.4625e+01, -5.0062e+01,...
2025-04-27 04:49:20.668833 test begin: paddle.sum(Tensor([132, 92416],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([132, 92416],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 132 / 132 (100%)
Max absolute difference among violations: 249.4
Max relative difference among violations: 9.234
ACTUAL: array([-6.8984e+00, -3.2617e+00, -1.0859e+01,  1.8812e+01, -2.5125e+01,
-9.3994e-02, -2.4170e-02,  8.5781e+00, -2.9258e+00, -6.4102e+00,
5.1289e+00,  7.1562e+00,  7.0469e+00, -2.2359e+01,  1.0008e+01,...
DESIRED: array([ -24.25 , -252.6  ,   43.53 ,  -10.24 , -173.1  ,   14.63 ,
-92.94 ,   35.66 , -230.   ,   91.3  ,   79.94 ,  -61.3  ,
-57.38 ,  -53.75 ,  154.9  ,   42.5  ,  -73.06 ,  132.9  ,...
2025-04-27 04:49:22.080909 test begin: paddle.sum(Tensor([132, 99712],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([132, 99712],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 132 / 132 (100%)
Max absolute difference among violations: 202.5
Max relative difference among violations: 3.607
ACTUAL: array([  4.81  ,  -5.645 ,  -2.533 , -19.06  ,   8.79  , -19.73  ,
17.16  ,  12.08  ,   6.24  ,   3.879 ,   0.834 ,   4.664 ,
17.39  ,  13.875 ,  -9.79  ,  -0.446 ,   7.004 , -13.125 ,...
DESIRED: array([ 128.5  ,   51.8  ,  -65.9  ,  -79.94 ,   97.8  , -136.5  ,
83.1  ,  151.   ,   42.25 , -132.1  ,  141.   ,   96.44 ,
-14.6  ,  -16.3  ,  -94.5  ,  -81.2  ,  -13.81 ,  189.4  ,...
2025-04-27 04:49:25.780014 test begin: paddle.sum(Tensor([136, 102144],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([136, 102144],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 136 / 136 (100%)
Max absolute difference among violations: 223.2
Max relative difference among violations: 185.9
ACTUAL: array([ 5.2227e+00, -6.1445e+00,  9.4766e+00, -4.3008e+00,  1.2883e+01,
7.6406e+00,  9.9531e+00,  9.6641e+00,  1.3859e+01, -8.0938e+00,
8.8281e+00,  1.4234e+01,  1.5938e+00,  1.4336e+01, -1.9844e+01,...
DESIRED: array([-1.0945e+01, -6.9000e+01,  9.1992e-01,  9.9500e+01,  1.4383e+01,
-1.2625e+01, -1.6141e+01,  6.3875e+01, -8.2125e+01, -1.9703e+01,
3.4000e+01, -3.5281e+01,  1.1700e+02,  1.8609e+01, -1.4275e+02,...
2025-04-27 04:49:27.346474 test begin: paddle.sum(Tensor([136, 112896],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([136, 112896],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 136 / 136 (100%)
Max absolute difference among violations: 232.6
Max relative difference among violations: 29.61
ACTUAL: array([-8.4219e+00, -1.1258e+01, -6.8799e-01, -1.9031e+01, -2.1582e+00,
-6.3320e+00, -1.3281e-01,  2.1141e+01, -2.3496e+00, -6.2734e+00,
-7.5664e+00,  5.2422e+00,  3.6914e+00, -3.9609e+00,  3.6108e-01,...
DESIRED: array([  70.4   ,   32.97  ,  -23.25  ,   24.89  ,  -89.8   , -148.4   ,
17.61  ,   73.25  ,  -37.22  ,  -70.9   , -153.1   ,   -2.562 ,
-26.34  ,  171.9   ,  -32.44  ,   55.6   ,  -69.3   ,  -15.84  ,...
2025-04-27 04:49:43.584767 test begin: paddle.sum(Tensor([136, 54400],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([136, 54400],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 136 / 136 (100%)
Max absolute difference among violations: 212.
Max relative difference among violations: 27.14
ACTUAL: array([ -0.963 ,  -8.12  ,  -8.67  ,  -9.15  ,   6.887 , -16.58  ,
7.273 ,   7.04  ,  -2.096 ,   1.306 ,  -6.66  ,  -6.547 ,
-1.508 ,   8.19  ,  -3.697 ,   5.87  , -16.1   ,  15.32  ,...
DESIRED: array([ 162.5  ,  -54.75 ,   35.88 ,    4.438,  161.2  ,  -78.75 ,
72.44 ,   17.53 ,  -34.7  ,   -9.055,  -25.45 ,   22.72 ,
-54.16 ,  -63.22 , -132.8  ,   78.25 ,   -0.814,   19.4  ,...
2025-04-27 04:49:44.496109 test begin: paddle.sum(Tensor([136, 60800],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([136, 60800],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 136 / 136 (100%)
Max absolute difference among violations: 214.4
Max relative difference among violations: 5.227
ACTUAL: array([ 12.65   , -12.625  ,   1.336  , -12.12   , -10.805  ,  -5.25   ,
7.777  ,   4.39   ,  14.86   , -12.91   ,   6.746  , -16.86   ,
0.7183 ,  -4.49   ,  -3.59   ,   4.41   ,  -8.3    ,   1.597  ,...
DESIRED: array([ -13.98  ,   47.62  ,   41.    ,    6.168 ,   45.56  ,  144.5   ,
101.25  ,   43.8   ,  119.75  ,  -93.    ,   16.55  ,  111.3   ,
6.08  ,  -52.7   ,   71.75  ,   47.9   , -118.06  ,   43.62  ,...
2025-04-27 04:49:45.576276 test begin: paddle.sum(Tensor([136, 62400],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([136, 62400],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 136 / 136 (100%)
Max absolute difference among violations: 172.2
Max relative difference among violations: 1206.
ACTUAL: array([  8.984  ,   8.69   ,   5.766  ,   6.562  ,  -4.1    ,  -6.047  ,
-26.58   ,  -2.674  , -14.37   ,  -8.72   ,  11.195  ,   5.117  ,
11.445  , -31.2    ,  10.125  ,   9.08   , -11.04   ,   5.01   ,...
DESIRED: array([ 1.1950e+02,  5.1219e+01, -7.9188e+01, -4.8938e+01,  1.9891e+01,
-6.1719e+01, -7.6938e+01,  1.4391e+01, -5.1500e+01,  5.3688e+01,
-4.2812e+01, -8.9750e+01, -3.5719e+01, -2.2578e+00, -5.0375e+01,...
2025-04-27 04:49:46.729399 test begin: paddle.sum(Tensor([136, 65600],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([136, 65600],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 136 / 136 (100%)
Max absolute difference among violations: 208.6
Max relative difference among violations: 52.75
ACTUAL: array([  4.637  , -26.97   ,   4.727  ,  -2.74   , -16.03   ,   2.145  ,
5.285  ,   1.868  ,  -4.96   ,   5.992  , -16.6    ,  -5.797  ,
12.88   ,  -0.533  , -15.5    , -14.57   ,   1.317  , -12.78   ,...
DESIRED: array([-1.0619e+02, -1.1230e+00, -1.3867e+00, -8.4000e+01, -3.9094e+01,
-9.5312e+01,  3.5719e+01, -1.8550e+02,  1.2789e+01,  4.7375e+01,
2.4641e+01,  2.5250e+01, -3.6219e+01, -5.2125e+01,  4.4750e+01,...
2025-04-27 04:49:47.817338 test begin: paddle.sum(Tensor([136, 67200],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([136, 67200],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 136 / 136 (100%)
Max absolute difference among violations: 160.6
Max relative difference among violations: 14.66
ACTUAL: array([  3.412  ,  30.3    , -10.2    , -22.23   ,  12.02   ,   0.791  ,
23.81   ,  20.89   ,  -9.31   ,   5.348  , -16.47   ,  20.58   ,
0.9287 ,   4.676  ,   6.215  ,  -9.     ,  -8.52   ,   7.723  ,...
DESIRED: array([  50.84  ,   73.56  ,   12.4   ,  -57.6   ,  -50.25  ,  137.4   ,
113.6   ,  122.06  ,   -1.954 ,    5.133 ,   27.89  ,  -64.6   ,
-47.75  ,  114.1   ,  -64.5   ,  -24.44  ,  -61.12  ,   51.4   ,...
2025-04-27 04:49:48.951607 test begin: paddle.sum(Tensor([136, 73984],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([136, 73984],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 136 / 136 (100%)
Max absolute difference among violations: 284.5
Max relative difference among violations: 10.414
ACTUAL: array([ 17.2   ,   6.32  ,  20.62  , -12.14  ,  -7.66  ,  -3.102 ,
7.254 ,   1.886 ,  14.805 ,  15.54  ,   9.42  ,  -8.01  ,
-8.3   ,   5.438 ,  -4.793 , -12.1   ,   9.84  ,  -8.21  ,...
DESIRED: array([ -38.75 ,  -98.8  ,   51.1  ,   53.28 ,   -3.99 ,  -78.4  ,
-4.625,   44.7  ,  241.8  ,   -7.348,   81.8  ,  -52.66 ,
-182.4  ,  -73.9  ,   75.   ,  -99.75 ,   72.75 ,  -46.28 ,...
2025-04-27 04:49:50.064032 test begin: paddle.sum(Tensor([136, 75392],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([136, 75392],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 136 / 136 (100%)
Max absolute difference among violations: 207.8
Max relative difference among violations: 8.34
ACTUAL: array([-10.44  ,  14.81  ,  24.42  ,  -3.992 ,  -9.47  ,  -6.168 ,
2.74  ,  26.81  , -13.03  ,   7.598 ,  -6.47  ,  -5.22  ,
7.    , -18.44  ,   2.947 , -13.22  ,   2.84  ,  11.98  ,...
DESIRED: array([   1.421,   54.9  ,   77.75 ,   91.1  , -112.44 ,  -11.55 ,
102.1  ,  146.2  , -144.8  ,   98.   ,   -9.63 ,   -9.7  ,
-100.56 ,  -10.27 ,  -15.3  ,  -53.8  , -110.5  ,  117.56 ,...
2025-04-27 04:49:51.265582 test begin: paddle.sum(Tensor([136, 77824],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([136, 77824],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 136 / 136 (100%)
Max absolute difference among violations: 189.4
Max relative difference among violations: 112.5
ACTUAL: array([ 17.47   , -29.69   ,  -7.31   ,  -7.348  ,  -8.54   ,   4.4    ,
3.873  ,  -6.883  ,  -7.152  , -16.4    ,  -2.137  ,  -2.535  ,
12.93   ,  14.15   ,  12.91   , -12.03   ,  -3.674  ,   5.555  ,...
DESIRED: array([ 147.8   ,  -15.98  ,   11.14  , -105.4   ,  -78.3   ,   93.2   ,
54.84  ,  112.    ,   30.12  ,  -25.75  ,  -84.56  ,  -70.7   ,
106.5   ,   61.62  ,   -7.668 ,  -49.38  ,   93.1   ,   -5.93  ,...
2025-04-27 04:49:52.613984 test begin: paddle.sum(Tensor([136, 80256],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([136, 80256],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 136 / 136 (100%)
Max absolute difference among violations: 233.5
Max relative difference among violations: 828.
ACTUAL: array([  0.8486 ,  -7.49   ,  -4.906  ,  -8.26   ,   0.6763 ,  -2.992  ,
-12.08   ,  -2.904  ,  -0.641  ,  -8.2    , -11.414  ,   3.89   ,
15.766  ,   0.2053 ,   1.107  , -18.81   ,  -3.94   ,   5.305  ,...
DESIRED: array([ 3.6750e+01, -6.1188e+01, -1.1242e+01, -5.0469e+01,  1.9906e+01,
-9.6000e+01,  9.2188e+01, -8.4875e+01,  8.5562e+01,  1.4648e+01,
-1.3763e-02,  2.5750e+01,  7.7562e+01, -2.4406e+01,  7.1812e+01,...
2025-04-27 04:49:53.999758 test begin: paddle.sum(Tensor([136, 82688],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([136, 82688],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 136 / 136 (100%)
Max absolute difference among violations: 221.2
Max relative difference among violations: 17.56
ACTUAL: array([-1.4719e+01, -1.6631e+00,  2.4531e+00, -2.4102e+00, -8.3984e+00,
1.1266e+01, -1.4391e+01, -8.0625e+00, -1.3617e+01, -3.8613e+00,
9.9414e-01,  3.8428e-01,  2.0016e+01,  1.2852e+01, -9.2266e+00,...
DESIRED: array([  35.6   ,  -34.12  ,    2.936 ,  -61.25  ,   33.9   ,  -96.7   ,
-13.56  ,  -70.6   , -234.9   , -119.4   ,    2.787 ,  -21.6   ,
-21.77  , -137.    ,  -49.44  , -109.6   ,    6.105 , -126.    ,...
2025-04-27 04:49:55.381587 test begin: paddle.sum(Tensor([136, 92416],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([136, 92416],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 136 / 136 (100%)
Max absolute difference among violations: 288.8
Max relative difference among violations: 9.305
ACTUAL: array([ 1.7656e+01, -3.0391e+01, -1.1250e+01, -1.1461e+01,  5.9844e+00,
1.0562e+01, -8.4844e+00, -1.3570e+01, -2.0344e+01, -3.9551e+00,
6.6211e-01, -4.6406e+00, -2.3281e+01,  8.7344e+00,  1.8594e+01,...
DESIRED: array([  -5.484,   60.44 , -134.1  ,   15.55 ,   14.33 ,  151.6  ,
-83.   ,   -8.73 ,    6.695, -209.9  ,   95.94 ,   43.6  ,
87.44 ,   72.1  ,   27.19 , -151.   ,  -19.84 ,   93.3  ,...
2025-04-27 04:50:06.104881 test begin: paddle.sum(Tensor([140, 56000],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([140, 56000],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 140 / 140 (100%)
Max absolute difference among violations: 169.
Max relative difference among violations: 12.49
ACTUAL: array([  7.523 , -10.42  ,  -4.15  ,  -4.836 ,  -9.68  ,  -1.24  ,
-3.684 ,  -2.766 ,  -2.014 ,  -6.49  , -11.77  , -10.71  ,
3.084 ,   4.746 ,  18.6   , -10.19  ,  10.625 , -14.85  ,...
DESIRED: array([  43.25 ,    6.008,  -71.7  ,   25.89 ,  -65.   , -145.5  ,
-74.06 ,   45.6  ,  123.56 ,   38.5  ,  108.3  , -132.1  ,
37.78 ,   81.9  ,   92.94 ,  -25.58 ,   26.95 , -130.6  ,...
2025-04-27 04:50:07.182935 test begin: paddle.sum(Tensor([140, 57600],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([140, 57600],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 138 / 140 (98.6%)
Max absolute difference among violations: 190.6
Max relative difference among violations: 12.805
ACTUAL: array([ 14.14   ,  -2.389  ,   0.729  ,   8.34   ,  -0.937  ,   6.906  ,
-5.465  ,  -5.133  ,  14.47   ,   7.016  , -18.02   , -14.5    ,
-15.3    ,  -8.08   ,   2.516  ,  -7.32   ,   8.81   ,   3.9    ,...
DESIRED: array([  25.89 ,  -46.88 ,  -81.4  ,  -72.7  ,  103.25 ,   27.81 ,
-78.25 ,   -5.082,  -22.88 ,  -69.4  , -126.2  ,   74.25 ,
4.203,  182.5  ,  -60.16 ,   73.44 ,  -73.1  ,   51.8  ,...
2025-04-27 04:50:08.318313 test begin: paddle.sum(Tensor([140, 60800],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([140, 60800],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 140 / 140 (100%)
Max absolute difference among violations: 254.5
Max relative difference among violations: 41.3
ACTUAL: array([-15.7   ,  24.42  ,  10.234 , -19.77  ,  10.984 , -14.8   ,
23.8   ,  -7.246 ,   0.2258,  -8.414 ,  -7.305 ,   3.219 ,
2.734 , -16.48  ,   4.926 , -14.25  ,   1.506 ,   6.61  ,...
DESIRED: array([-4.3188e+01,  1.1325e+02, -2.1359e+01, -6.4125e+01,  2.9000e+01,
-6.2969e+01,  7.5312e+00,  5.6562e+01,  5.0156e+01,  2.2625e+01,
-2.2625e+01,  1.0531e+01, -5.1000e+01,  2.0969e+01,  1.6203e+01,...
2025-04-27 04:50:09.530627 test begin: paddle.sum(Tensor([140, 68224],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([140, 68224],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 140 / 140 (100%)
Max absolute difference among violations: 178.6
Max relative difference among violations: 78.3
ACTUAL: array([  9.07  ,  11.086 ,   7.168 ,  10.11  ,   3.965 ,  25.52  ,
9.98  ,  24.58  ,  -1.405 ,   2.414 ,   3.752 ,  -5.438 ,
8.44  ,  -9.33  ,  14.47  ,   5.227 , -11.86  ,  19.8   ,...
DESIRED: array([ 1.6922e+01,  6.0906e+01,  7.6688e+01, -1.5775e+02,  5.7875e+01,
1.2288e+02, -7.8938e+01,  4.5062e+01,  4.3219e+01, -8.2875e+01,
3.6906e+01, -3.7250e+01, -3.4531e+00, -1.2688e+02,  4.0312e+01,...
2025-04-27 04:50:10.836221 test begin: paddle.sum(Tensor([140, 76032],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([140, 76032],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 140 / 140 (100%)
Max absolute difference among violations: 235.6
Max relative difference among violations: 27.17
ACTUAL: array([ -6.367 ,   2.977 ,   5.84  ,  22.03  , -13.48  ,  -1.114 ,
7.047 ,  -9.34  , -19.66  ,   7.04  ,   8.18  ,   0.888 ,
9.92  ,  -0.971 ,  13.41  ,  -2.922 , -22.73  ,  14.234 ,...
DESIRED: array([  18.39  ,  -59.66  ,    6.89  ,  -84.    ,  -57.8   ,   18.61  ,
116.7   ,  -54.2   ,  -84.75  ,  -52.94  ,   87.56  , -117.    ,
-206.5   ,   87.    ,  -91.6   ,  -84.2   ,  -60.28  ,   -3.107 ,...
2025-04-27 04:50:12.259948 test begin: paddle.sum(Tensor([140, 82688],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([140, 82688],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 140 / 140 (100%)
Max absolute difference among violations: 199.4
Max relative difference among violations: 17.2
ACTUAL: array([ -1.477 , -18.77  ,   5.004 ,  -7.832 ,  16.39  ,  -3.205 ,
-9.87  , -11.51  ,  -8.08  , -11.29  ,  -9.586 ,  -3.627 ,
-14.35  ,  -9.82  ,  11.78  ,  13.37  ,  -0.4797,   6.39  ,...
DESIRED: array([ 9.1188e+01, -1.0700e+02,  3.2625e+01,  2.8500e+01,  1.4450e+02,
1.7250e+01, -1.0244e+02,  1.0956e+02, -1.1444e+02, -5.0906e+01,
7.6500e+01, -3.1781e+01,  8.8525e-01,  2.5750e+01, -1.9922e+01,...
2025-04-27 04:50:13.700317 test begin: paddle.sum(Tensor([140, 83328],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([140, 83328],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 140 / 140 (100%)
Max absolute difference among violations: 231.2
Max relative difference among violations: 52.8
ACTUAL: array([-1.2664e+01, -1.8062e+01, -2.5781e+00,  1.0305e+01,  7.3008e+00,
-2.8906e+00, -9.0703e+00,  1.5875e+01, -3.2562e+01,  1.0930e+01,
-1.8213e-01, -5.6016e+00,  6.8945e+00,  2.2469e+01,  9.6719e+00,...
DESIRED: array([ 8.0188e+01, -2.6375e+01,  2.0453e+01,  2.8047e+01,  4.6000e+01,
-1.7712e+02,  1.7505e-01,  4.5000e+01,  6.7812e+01,  8.5688e+01,
7.3730e-01, -2.3688e+02, -4.6312e+01,  6.6000e+01, -2.8345e-01,...
2025-04-27 04:50:15.167243 test begin: paddle.sum(Tensor([140, 91392],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([140, 91392],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 139 / 140 (99.3%)
Max absolute difference among violations: 240.5
Max relative difference among violations: 2.504
ACTUAL: array([-3.1289e+00, -3.5449e-01,  1.6219e+01,  9.7656e+00, -3.4094e+01,
-1.5703e+00, -5.9062e+00,  1.7703e+01,  2.3652e+00,  1.0312e+00,
-1.0250e+01, -3.4812e+01, -1.9156e+01, -2.0406e+01, -4.1406e+00,...
DESIRED: array([ -58.88 ,   44.22 ,   53.88 ,  -17.89 ,  -66.8  ,   11.77 ,
189.2  ,  258.2  ,   71.25 ,    2.762,  -85.8  , -116.4  ,
-30.42 ,  -71.   ,  -14.79 ,  186.6  ,   72.44 , -180.1  ,...
2025-04-27 04:50:16.689545 test begin: paddle.sum(Tensor([140, 92416],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([140, 92416],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 140 / 140 (100%)
Max absolute difference among violations: 284.5
Max relative difference among violations: 14.08
ACTUAL: array([  4.977  ,  -6.85   , -16.78   , -12.41   , -14.58   ,  -3.672  ,
-16.19   ,  -2.576  ,   9.51   ,  -2.217  ,  16.92   ,  -3.75   ,
-6.39   , -16.72   ,  -3.76   ,   6.63   ,   4.195  ,  -3.783  ,...
DESIRED: array([  13.164 , -145.8   , -128.    ,  -50.3   ,  -33.8   ,   -1.4   ,
-80.44  ,  -49.72  ,  -39.62  ,   -8.94  ,    8.6   ,  -51.2   ,
86.7   ,  -93.4   ,  -55.4   ,   73.2   ,   50.53  ,  110.5   ,...
2025-04-27 04:50:20.690997 test begin: paddle.sum(Tensor([144, 102144],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([144, 102144],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 144 / 144 (100%)
Max absolute difference among violations: 272.
Max relative difference among violations: 8.445
ACTUAL: array([-2.5449e+00, -1.2016e+01,  2.5234e+00,  1.3740e+00,  1.1475e-01,
-6.0586e+00,  1.3848e+00, -9.5469e+00,  5.6680e+00, -1.0381e+00,
-5.6719e+00, -1.1172e+00, -9.3047e+00,  1.4773e+01,  3.3418e+00,...
DESIRED: array([ -57.3  ,  -10.586,   11.06 ,  -50.4  ,   52.62 ,  -62.6  ,
20.14 ,  -23.39 ,   42.6  ,  -50.47 , -104.56 ,   27.25 ,
-40.6  ,   54.97 ,  -34.8  ,   12.91 ,   90.06 ,  122.7  ,...
2025-04-27 04:50:22.354522 test begin: paddle.sum(Tensor([144, 112896],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([144, 112896],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 144 / 144 (100%)
Max absolute difference among violations: 302.8
Max relative difference among violations: 15.14
ACTUAL: array([  1.146 , -11.414 ,  19.75  ,  -4.594 ,  -6.668 ,  -8.86  ,
-11.16  ,   4.68  ,   6.434 ,   4.906 ,  -7.28  ,  17.66  ,
-7.023 , -19.22  ,  -4.17  ,   9.09  ,  -0.772 , -15.34  ,...
DESIRED: array([ 154.    , -133.9   ,   45.28  ,   -1.661 ,  -81.7   ,  -55.72  ,
44.3   ,  -21.53  ,    9.38  ,  127.8   ,  215.6   ,   51.16  ,
-39.22  ,   26.31  ,  156.1   ,  -28.89  ,  -29.34  ,   30.5   ,...
2025-04-27 04:50:39.902685 test begin: paddle.sum(Tensor([144, 54400],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([144, 54400],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 144 / 144 (100%)
Max absolute difference among violations: 189.6
Max relative difference among violations: 52.
ACTUAL: array([ 6.7031e+00,  2.7906e+01, -1.3453e+01,  1.3613e+00, -1.2789e+01,
6.3477e+00,  4.3203e+00, -4.9766e+00,  1.4930e+01,  9.1943e-01,
4.0703e+00,  1.2039e+01,  3.5391e+00,  2.8945e+00, -2.0031e+01,...
DESIRED: array([ 2.0562e+01,  1.0875e+02,  7.9625e+01, -4.4406e+01, -1.3750e+01,
6.1500e+01,  9.8750e+01, -1.7750e+02, -2.4797e+01,  1.0256e+02,
9.6000e+01, -4.4609e+00,  1.4258e+01, -5.1781e+01, -1.4825e+02,...
2025-04-27 04:50:40.957913 test begin: paddle.sum(Tensor([144, 57600],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([144, 57600],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 144 / 144 (100%)
Max absolute difference among violations: 285.5
Max relative difference among violations: 10.07
ACTUAL: array([-18.27  ,   9.664 ,   4.723 ,   4.082 ,   8.61  ,  -2.45  ,
-3.81  ,  12.48  ,  -2.703 ,   5.203 ,  -5.25  ,  12.86  ,
22.92  ,   7.234 , -11.32  , -14.2   ,   3.367 ,   6.89  ,...
DESIRED: array([  29.8   , -127.44  ,   59.47  ,    4.89  ,  -15.84  ,  -22.22  ,
40.53  ,    1.762 ,  -28.86  ,  -50.34  ,  -27.78  ,    2.688 ,
-38.12  ,   64.6   ,  -30.45  ,   -4.836 ,   70.5   ,  -65.    ,...
2025-04-27 04:50:42.074744 test begin: paddle.sum(Tensor([144, 60800],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([144, 60800],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 144 / 144 (100%)
Max absolute difference among violations: 235.6
Max relative difference among violations: 29.56
ACTUAL: array([-2.5078e+00, -2.7129e+00, -2.1188e+01,  1.6172e+01,  1.1398e+01,
8.9297e+00,  2.7969e+00,  2.3086e+00,  7.0039e+00,  7.8633e+00,
1.2012e+00, -2.0531e+01,  2.2676e+00, -2.2484e+01,  5.7031e+00,...
DESIRED: array([  25.73  ,   33.94  ,  -61.2   ,    0.6196,  -25.25  ,  -19.34  ,
-52.28  ,  -13.195 ,   70.44  ,   84.75  ,   68.9   , -253.    ,
35.66  , -139.5   ,   89.06  ,  -27.77  ,   -6.164 ,    4.74  ,...
2025-04-27 04:50:43.278317 test begin: paddle.sum(Tensor([144, 64000],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([144, 64000],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 144 / 144 (100%)
Max absolute difference among violations: 213.4
Max relative difference among violations: 11.95
ACTUAL: array([ 1.8000e+01, -1.4695e+01, -2.3312e+01, -1.2275e+00, -2.4160e+00,
-9.6875e+00,  8.2031e+00,  1.2227e+01, -1.3184e+00,  7.0234e+00,
-1.2984e+01,  5.9453e+00,  1.6602e-02, -2.3234e+01,  8.1875e+00,...
DESIRED: array([ 156.   ,   -1.135,  -21.25 ,   -0.721,  -83.44 ,   80.25 ,
24.81 ,  -49.16 ,   75.9  ,  -68.6  ,  -91.   ,   38.66 ,
113.1  ,   59.38 ,  103.75 ,   23.38 ,   11.51 ,  173.5  ,...
2025-04-27 04:50:44.360469 test begin: paddle.sum(Tensor([144, 67200],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([144, 67200],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 144 / 144 (100%)
Max absolute difference among violations: 202.5
Max relative difference among violations: 65.7
ACTUAL: array([-22.06  ,  -9.44  ,  14.67  ,   1.374 ,  -2.254 , -16.11  ,
7.01  , -11.234 ,   0.526 ,   3.6   ,  -9.375 ,  14.266 ,
-11.14  , -15.5   ,  -2.498 ,   0.3005, -15.03  ,   9.87  ,...
DESIRED: array([ -60.38  ,  -20.95  ,  -59.62  ,   44.97  ,  -28.88  ,   16.11  ,
-11.86  ,  -71.2   ,   28.42  ,   18.23  ,  -57.2   ,    4.863 ,
-97.56  ,  -44.97  ,   54.7   ,   29.34  ,   62.28  ,  106.25  ,...
2025-04-27 04:50:45.412072 test begin: paddle.sum(Tensor([144, 73984],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([144, 73984],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 144 / 144 (100%)
Max absolute difference among violations: 231.
Max relative difference among violations: 14.02
ACTUAL: array([  2.342  ,  -7.945  ,  12.62   ,  -0.8013 ,   2.7    ,  -0.688  ,
10.305  ,   9.49   ,  13.67   ,  12.64   ,  13.62   , -16.69   ,
6.574  ,   1.114  ,  -4.8    , -29.64   ,   8.74   ,  -5.74   ,...
DESIRED: array([  -4.586 ,  -83.4   ,  -32.94  ,  -32.4   ,   42.5   ,    1.887 ,
-13.36  ,   19.1   ,  -36.3   ,   53.75  ,  149.1   ,   10.91  ,
76.    ,  -75.2   ,  -29.36  ,   15.055 ,   20.67  ,   48.9   ,...
2025-04-27 04:50:46.612987 test begin: paddle.sum(Tensor([144, 82688],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([144, 82688],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 143 / 144 (99.3%)
Max absolute difference among violations: 208.1
Max relative difference among violations: 38.
ACTUAL: array([ 4.4180e+00,  9.1250e+00, -1.8281e+00, -1.5516e+01, -1.2047e+01,
7.8438e+00,  1.1401e-01,  4.0547e+00,  6.4766e+00,  3.4375e-01,
8.4453e+00,  8.2266e+00, -2.5742e+00,  1.1953e+01,  1.4430e+01,...
DESIRED: array([-2.2844e+01, -1.9238e+02, -1.7453e+01,  5.4219e+01, -2.2012e+02,
-5.4000e+01, -5.4562e+01, -1.2256e+02, -2.4062e+01,  5.6406e+01,
-2.5062e+01, -2.2141e+01, -6.5979e-02,  2.6234e+01,  6.2219e+01,...
2025-04-27 04:50:47.959764 test begin: paddle.sum(Tensor([144, 88704],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([144, 88704],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 144 / 144 (100%)
Max absolute difference among violations: 271.8
Max relative difference among violations: 32.1
ACTUAL: array([ -2.857  ,  17.16   ,  -2.365  ,   1.108  , -13.45   ,  -2.102  ,
-4.676  ,  -3.477  ,  -1.999  ,   5.29   ,  -1.1875 ,   9.21   ,
-3.771  ,  -2.535  ,  16.97   ,   3.77   ,  -8.11   ,  15.05   ,...
DESIRED: array([ 1.0150e+02,  7.6250e+01, -6.1438e+01,  7.7305e+00,  1.6844e+01,
-1.3406e+01, -2.2112e+02,  6.5188e+01, -1.2656e+01,  2.7906e+01,
7.6812e+01, -5.9125e+01, -2.0297e+01,  5.4031e+01,  1.4475e+02,...
2025-04-27 04:50:49.506729 test begin: paddle.sum(Tensor([144, 89216],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([144, 89216],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 143 / 144 (99.3%)
Max absolute difference among violations: 244.8
Max relative difference among violations: 108.94
ACTUAL: array([ -3.531 , -14.234 ,   5.26  ,   4.535 ,  -5.215 ,  -7.72  ,
-3.924 , -14.695 ,  22.02  , -16.77  ,   5.89  , -15.33  ,
0.61  , -16.27  ,  -5.78  ,  -2.738 ,   3.553 ,   2.047 ,...
DESIRED: array([-1.4355e+00,  6.5062e+01, -4.6680e+00,  2.2422e+01,  5.4188e+01,
4.4375e+01, -6.7875e+01, -9.0062e+01,  4.8219e+01,  9.7938e+01,
1.4047e+01,  2.8422e+01, -5.3594e+01,  2.8750e+00, -3.2312e+01,...
2025-04-27 04:50:51.048591 test begin: paddle.sum(Tensor([144, 91392],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([144, 91392],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 144 / 144 (100%)
Max absolute difference among violations: 246.
Max relative difference among violations: 11.16
ACTUAL: array([ -5.344  , -12.805  ,  -1.326  ,   6.746  , -19.44   ,  15.5    ,
15.41   ,   1.16   ,  -5.938  , -14.04   ,  11.11   ,  -1.142  ,
-3.896  ,  -7.58   ,   1.066  ,  -6.973  ,   0.09656, -14.96   ,...
DESIRED: array([ -19.27  ,   -5.863 ,  -13.45  , -127.2   , -191.1   ,  148.2   ,
108.    ,  -61.4   , -163.1   ,  -18.52  ,  145.6   ,  117.2   ,
-22.4   , -104.1   ,   80.1   ,  -11.49  ,   17.78  ,  -31.86  ,...
2025-04-27 04:50:52.730972 test begin: paddle.sum(Tensor([144, 92416],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([144, 92416],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 144 / 144 (100%)
Max absolute difference among violations: 216.8
Max relative difference among violations: 21.52
ACTUAL: array([-17.2    ,   2.863  ,   5.266  ,  -7.6    ,   3.893  ,  -8.22   ,
5.117  ,  10.66   ,   5.465  ,  18.45   ,  23.88   ,  -5.344  ,
-11.625  ,  11.195  ,  -7.5    ,  -6.027  ,  -3.078  ,   3.23   ,...
DESIRED: array([ 7.9250e+01,  1.5836e+01, -1.0070e+01, -3.4531e+01,  1.4000e+02,
6.2281e+01, -1.3788e+02, -7.9688e+01,  6.0156e+01,  1.4500e+02,
2.2138e+02, -4.8312e+01,  2.2000e+01, -2.1281e+01, -3.1234e+01,...
2025-04-27 04:50:56.242572 test begin: paddle.sum(Tensor([148, 102144],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([148, 102144],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 148 / 148 (100%)
Max absolute difference among violations: 251.8
Max relative difference among violations: 88.2
ACTUAL: array([  3.55   ,  -3.535  , -14.22   ,  -4.73   ,   4.05   ,  13.71   ,
3.371  ,   7.027  , -18.72   ,   3.936  ,  -2.729  ,   7.6    ,
-9.91   , -14.32   ,   3.447  ,   6.77   ,  16.14   ,  11.41   ,...
DESIRED: array([ 5.1594e+01,  2.4406e+01, -1.7275e+02,  2.2625e+01,  7.3625e+01,
9.6875e+00, -1.0125e+01,  1.1320e+01, -1.2056e+02,  3.5562e+01,
-1.5112e+02, -8.0125e+01,  2.6203e+01, -8.2438e+01,  8.4453e+00,...
2025-04-27 04:51:07.443418 test begin: paddle.sum(Tensor([148, 59200],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([148, 59200],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 148 / 148 (100%)
Max absolute difference among violations: 173.2
Max relative difference among violations: 11.76
ACTUAL: array([ 6.0000e+00,  5.9648e+00,  1.9199e+00,  2.6641e+01, -1.1883e+01,
7.8203e+00, -5.3906e-01,  1.3688e+01,  2.6141e+01,  1.2549e+00,
1.4250e+01,  1.2725e+00,  4.8984e+00, -1.3102e+01,  9.2285e-01,...
DESIRED: array([   5.062,  101.25 ,   48.62 ,   63.34 ,   61.28 ,   45.2  ,
34.94 ,  -55.03 ,   38.88 ,   20.53 ,   40.   ,  -59.94 ,
47.25 ,  -64.6  ,  -44.66 ,   52.03 ,  -84.75 ,    7.91 ,...
2025-04-27 04:51:08.637471 test begin: paddle.sum(Tensor([148, 60800],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([148, 60800],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 148 / 148 (100%)
Max absolute difference among violations: 269.
Max relative difference among violations: 34.5
ACTUAL: array([ 1.0422e+01, -1.5500e+01, -2.1133e+00,  1.9344e+01, -7.2188e+00,
-1.5459e+00,  2.6777e+00,  1.8266e+01, -1.0498e-01, -1.6625e+01,
-3.5293e+00,  2.6113e+00, -5.8828e+00, -1.4023e+00,  2.6055e+00,...
DESIRED: array([ 9.3188e+01,  1.6562e+01, -3.6344e+01, -8.3125e+01,  7.7312e+01,
5.6969e+01, -2.8734e+01, -7.3682e-01,  1.0238e+02,  5.0125e+01,
4.6156e+01, -1.1438e+02, -1.1950e+02, -3.5098e+00, -8.7250e+01,...
2025-04-27 04:51:09.872937 test begin: paddle.sum(Tensor([148, 67200],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([148, 67200],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 148 / 148 (100%)
Max absolute difference among violations: 209.6
Max relative difference among violations: 54.34
ACTUAL: array([ 1.5031e+01, -1.2453e+01,  1.0791e+00, -5.7969e+00,  1.1328e+01,
-1.6577e-01,  1.5125e+01,  1.7734e+00, -2.4656e+01, -4.4922e+00,
6.1250e+00, -5.8125e+00,  4.3281e+00,  2.1289e+00, -3.2773e+00,...
DESIRED: array([-1.2531e+01,  6.8438e+01,  5.3844e+01,  4.9562e+01,  4.6531e+01,
-1.5325e+02,  7.9000e+01, -8.5438e+01, -5.7625e+01,  1.0162e+02,
-2.7297e+01,  1.9547e+01, -9.9531e+00,  1.9125e+01,  3.1062e+01,...
2025-04-27 04:51:11.062647 test begin: paddle.sum(Tensor([148, 73984],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([148, 73984],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 148 / 148 (100%)
Max absolute difference among violations: 166.8
Max relative difference among violations: 20.31
ACTUAL: array([ 1.3695e+01, -8.9219e+00, -5.7383e+00, -7.0459e-01, -3.1738e-01,
-1.6904e+00, -9.7656e-04, -9.1172e+00, -1.8531e+01,  1.8877e+00,
7.8125e+00,  1.1516e+01,  8.0127e-01, -7.3594e+00, -7.6875e+00,...
DESIRED: array([  -0.7095,  -10.305 ,   -2.875 ,   -6.28  ,  -18.45  ,  -66.8   ,
98.7   ,  -28.33  ,  -23.14  ,   57.62  ,  116.06  ,  144.1   ,
31.89  ,   57.25  ,  -63.22  ,  -92.75  ,   91.94  ,  130.6   ,...
2025-04-27 04:51:12.288031 test begin: paddle.sum(Tensor([148, 82688],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([148, 82688],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 147 / 148 (99.3%)
Max absolute difference among violations: 225.1
Max relative difference among violations: 7.9
ACTUAL: array([ 2.7324e+00,  2.0000e+01, -1.4199e+00,  1.1592e+00,  1.5602e+01,
-1.1766e+01,  2.3922e+01,  1.6141e+01, -7.6904e-01, -4.2617e+00,
2.4500e-01, -1.6614e-01,  1.1164e+01, -7.3789e+00, -4.0859e+00,...
DESIRED: array([  64.56  ,   11.734 ,   89.44  ,  180.2   ,  -44.75  ,   85.    ,
140.    , -116.4   ,  -36.9   ,   34.88  ,   14.74  ,  184.4   ,
84.9   ,  -52.2   ,  100.06  ,    3.93  ,  -35.12  ,  -57.28  ,...
2025-04-27 04:51:13.628630 test begin: paddle.sum(Tensor([148, 91392],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([148, 91392],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 148 / 148 (100%)
Max absolute difference among violations: 225.8
Max relative difference among violations: 29.56
ACTUAL: array([-1.0527e+00,  2.3828e+00,  4.6758e+00, -7.2891e+00, -4.3789e+00,
3.7598e+00,  1.0148e+01,  2.5176e+00,  2.2988e+00,  4.5078e+00,
3.7168e+00,  6.6562e+00,  6.2109e+00, -5.9766e+00,  5.4297e+00,...
DESIRED: array([  47.5   ,   83.3   ,  -33.97  ,  -83.2   ,  -29.44  ,  158.6   ,
-23.42  ,  167.8   ,   13.016 , -174.2   ,   54.1   ,  -43.34  ,
61.22  ,  -35.62  ,   88.3   ,   38.    ,  161.1   ,  -23.75  ,...
2025-04-27 04:51:15.119257 test begin: paddle.sum(Tensor([148, 92416],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([148, 92416],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 148 / 148 (100%)
Max absolute difference among violations: 258.
Max relative difference among violations: 12.17
ACTUAL: array([-16.28  ,   9.234 ,  -8.805 ,  10.555 ,  -8.016 ,  14.555 ,
-15.07  ,  -5.883 ,   3.69  ,  -8.37  ,   2.535 ,   2.037 ,
-13.39  ,   1.226 ,  26.64  ,  -2.344 , -18.44  ,  -0.9214,...
DESIRED: array([  26.64 , -149.   ,   17.47 ,   39.25 ,   34.78 ,  -47.72 ,
-107.9  ,  230.   ,  219.6  , -167.1  ,   65.06 ,    2.793,
4.008, -181.   ,   76.5  ,   15.7  ,   37.72 ,   72.3  ,...
2025-04-27 04:51:16.645084 test begin: paddle.sum(Tensor([148, 94848],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([148, 94848],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 148 / 148 (100%)
Max absolute difference among violations: 212.2
Max relative difference among violations: 53.16
ACTUAL: array([ -0.74  ,  14.18  ,  -1.379 ,  -6.05  ,   9.836 ,   1.09  ,
2.545 ,  12.586 ,  -8.836 ,  25.45  , -20.56  ,   7.11  ,
10.25  ,  -2.725 , -12.52  ,  -2.059 ,   4.992 ,  -4.355 ,...
DESIRED: array([ -56.2   ,   54.53  ,  114.2   ,  -81.25  ,  -17.73  ,  124.5   ,
-96.1   ,   44.22  ,  -94.7   ,    5.48  , -185.6   ,   28.02  ,
-1.006 ,  177.4   ,   -0.2312, -115.4   , -101.2   ,  -40.66  ,...
2025-04-27 04:51:21.231562 test begin: paddle.sum(Tensor([152, 102144],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([152, 102144],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 152 / 152 (100%)
Max absolute difference among violations: 258.8
Max relative difference among violations: 17.03
ACTUAL: array([ 1.5391e+00,  4.9922e+00, -1.7422e+01, -1.3617e+01, -2.0469e+00,
2.2510e-01, -1.0391e+00,  1.5109e+01,  1.1352e+01, -7.3203e+00,
4.8047e-01, -1.6672e+01,  9.7891e+00, -1.4211e+01,  8.5859e+00,...
DESIRED: array([ -46.88 ,  120.5  ,  -57.56 ,  -82.44 ,   12.586,  -53.06 ,
-46.72 ,   37.5  ,  132.   ,  176.2  ,  188.6  , -144.6  ,
42.5  ,  105.3  ,  -30.25 ,   82.5  ,  -33.53 ,   -4.62 ,...
2025-04-27 04:51:22.974583 test begin: paddle.sum(Tensor([152, 107520],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([152, 107520],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 152 / 152 (100%)
Max absolute difference among violations: 234.9
Max relative difference among violations: 15.33
ACTUAL: array([ 15.125 ,   1.924 ,   7.37  ,  16.02  ,  -3.23  ,   2.818 ,
-19.12  ,   3.184 ,   3.264 ,  -8.71  ,   0.758 ,  -7.555 ,
-17.7   ,  -9.27  , -10.08  ,   2.725 , -12.414 , -12.65  ,...
DESIRED: array([-133.    ,  -30.05  ,   85.2   ,   12.164 ,   38.94  ,  197.1   ,
68.75  , -169.4   ,  -16.8   ,  -21.31  ,  -57.3   , -176.6   ,
-20.69  , -185.2   ,  -43.2   ,   15.53  ,   17.36  ,   32.25  ,...
2025-04-27 04:51:37.122968 test begin: paddle.sum(Tensor([152, 54400],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([152, 54400],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 152 / 152 (100%)
Max absolute difference among violations: 163.2
Max relative difference among violations: 7.023
ACTUAL: array([-1.2180e+01,  2.0062e+01,  6.0273e+00, -4.9766e+00, -6.3711e+00,
-1.7688e+01, -7.9219e+00,  1.2977e+01, -5.3477e+00, -2.8340e+00,
-5.4219e+00,  5.6289e+00,  5.3438e+00, -2.1641e+01,  3.3398e+00,...
DESIRED: array([-133.2  ,  -61.1  ,   -1.324,   -6.53 ,   40.88 , -163.   ,
34.53 ,   79.2  ,   61.75 ,  151.   ,  -96.06 ,   14.86 ,
-36.8  ,   73.8  ,   10.61 ,  157.2  , -104.   ,  -76.   ,...
2025-04-27 04:51:38.108773 test begin: paddle.sum(Tensor([152, 60800],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([152, 60800],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 151 / 152 (99.3%)
Max absolute difference among violations: 206.8
Max relative difference among violations: 10.75
ACTUAL: array([ -6.645  ,   3.37   ,   2.646  ,   0.2069 ,  -2.234  ,  -4.06   ,
3.37   ,  14.58   ,  18.08   ,   7.363  ,  -3.32   , -14.625  ,
-5.297  ,  -2.373  ,  30.44   ,  12.586  ,  -3.865  ,  11.12   ,...
DESIRED: array([  -2.127 ,  -27.83  ,   86.8   ,  -13.914 , -100.25  ,  152.8   ,
84.8   ,   60.62  ,   82.56  ,   53.5   ,  -88.94  ,    8.45  ,
-5.066 ,  -59.06  ,   20.06  ,   49.4   ,    9.836 ,   15.07  ,...
2025-04-27 04:51:39.305256 test begin: paddle.sum(Tensor([152, 62400],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([152, 62400],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 152 / 152 (100%)
Max absolute difference among violations: 181.9
Max relative difference among violations: 18.97
ACTUAL: array([ 7.8594e+00,  1.2383e+01, -3.8535e+00,  4.5273e+00,  1.6689e+00,
1.9453e+01,  9.6094e+00,  7.1875e+00,  7.5879e-01, -2.9961e+00,
6.1133e+00, -7.1602e+00, -6.6523e+00, -1.1062e+01,  1.0930e+01,...
DESIRED: array([ -11.836 ,  -90.6   ,   65.5   ,  133.8   ,  -44.66  ,  162.4   ,
-71.06  ,   63.78  , -111.94  ,  178.9   ,  -61.28  ,  -68.7   ,
70.75  ,  -18.86  ,   34.28  ,  -96.1   ,  -38.38  ,   16.88  ,...
2025-04-27 04:51:40.543049 test begin: paddle.sum(Tensor([152, 67200],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([152, 67200],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 152 / 152 (100%)
Max absolute difference among violations: 196.8
Max relative difference among violations: 145.2
ACTUAL: array([  5.023  ,  -7.465  , -12.23   ,  -1.657  ,  -0.2815 ,  -5.2    ,
-2.883  ,  22.62   ,  -5.617  ,  -4.99   ,  -6.72   ,   9.71   ,
-1.103  ,  11.43   ,  15.64   ,   1.441  ,  12.52   ,   0.04248,...
DESIRED: array([-4.6594e+01, -4.9062e+01, -1.1325e+02, -1.1969e+02, -7.7000e+01,
-6.8250e+01, -1.9838e+02,  2.6719e+01,  4.2500e+01,  3.7719e+01,
-4.7266e+00, -9.4500e+01,  1.1475e+02, -7.0438e+01,  1.9250e+02,...
2025-04-27 04:51:41.849262 test begin: paddle.sum(Tensor([152, 75392],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([152, 75392],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 151 / 152 (99.3%)
Max absolute difference among violations: 207.8
Max relative difference among violations: 8.04
ACTUAL: array([-1.2867e+01, -3.8110e-01, -5.2461e+00,  3.9297e+00,  2.5098e-01,
8.5312e+00,  1.2773e+00, -1.9199e+00, -1.2773e+01, -7.3750e+00,
7.7344e+00,  9.7656e+00,  1.4172e+01, -6.6562e+00,  3.1855e+00,...
DESIRED: array([-153.5   ,   -7.035 ,  107.56  ,   86.6   ,   44.5   ,  106.44  ,
18.95  ,  -59.06  ,   20.33  , -118.44  ,   29.53  ,   75.8   ,
-48.2   ,   23.67  ,  -73.25  ,  213.1   ,   45.75  ,  113.06  ,...
2025-04-27 04:51:43.325356 test begin: paddle.sum(Tensor([152, 77824],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([152, 77824],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 152 / 152 (100%)
Max absolute difference among violations: 208.
Max relative difference among violations: 71.3
ACTUAL: array([  9.08   , -11.61   ,   9.85   ,   9.484  ,  -4.2    ,  -1.922  ,
16.56   ,   0.2605 ,  20.1    ,  -1.84   ,  16.03   ,   1.025  ,
-16.94   ,  -0.06793,   4.14   ,  -0.3403 ,  -5.11   ,  12.     ,...
DESIRED: array([  52.5   , -120.25  ,   14.24  ,  -85.56  ,   60.8   ,   26.48  ,
9.97  ,   39.47  ,  116.6   ,    2.045 ,  -21.47  ,  -92.6   ,
-28.61  ,   14.51  ,  -38.56  ,   17.88  ,  -10.79  ,  -72.25  ,...
2025-04-27 04:51:44.830860 test begin: paddle.sum(Tensor([152, 82688],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([152, 82688],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 152 / 152 (100%)
Max absolute difference among violations: 245.6
Max relative difference among violations: 5.97
ACTUAL: array([ 6.3789e+00, -2.2344e+01, -1.0867e+01,  6.9873e-01,  9.4609e+00,
1.1820e+01, -6.1875e+00, -1.4492e+01,  3.3633e+00,  8.5547e+00,
-8.0938e+00,  3.5664e+00,  3.6797e+00, -5.0781e+00, -7.1641e+00,...
DESIRED: array([ 111.9   ,   15.32  ,    7.105 ,  165.1   ,   21.03  ,  -40.97  ,
60.6   ,  -42.75  ,  -19.72  ,   81.3   ,   81.6   ,   93.44  ,
-16.28  ,   49.88  ,  -34.97  ,  168.2   ,  -22.98  ,  -50.44  ,...
2025-04-27 04:51:46.382369 test begin: paddle.sum(Tensor([152, 91392],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([152, 91392],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 151 / 152 (99.3%)
Max absolute difference among violations: 236.8
Max relative difference among violations: 93.5
ACTUAL: array([ 13.9    ,  -0.669  ,   3.27   , -18.17   ,  -5.633  ,  -4.266  ,
3.877  ,   1.909  ,   6.785  ,  -7.543  , -20.48   ,   3.822  ,
3.703  ,  -0.2087 ,  -2.67   ,  -8.164  ,  -7.414  ,   2.934  ,...
DESIRED: array([-7.3500e+01, -2.6047e+01, -1.7906e+01, -1.0356e+02, -9.6938e+01,
6.7375e+01, -6.8438e+01,  3.8688e+01,  5.6000e+01, -1.3125e+02,
-1.4788e+02, -4.8750e+01, -2.0234e+01,  5.8344e+01, -5.3875e+01,...
2025-04-27 04:51:47.974292 test begin: paddle.sum(Tensor([152, 92416],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([152, 92416],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 152 / 152 (100%)
Max absolute difference among violations: 240.2
Max relative difference among violations: 44.88
ACTUAL: array([ -3.68  ,  18.48  ,  -1.611 ,   5.164 ,   6.85  ,   0.4905,
6.426 ,  -0.637 ,  28.95  ,   4.086 , -11.46  ,  -1.91  ,
9.56  ,  -6.25  ,   8.04  , -14.42  ,  -7.12  , -23.08  ,...
DESIRED: array([ 104.56 ,   72.8  ,  -46.5  ,   75.75 ,   70.25 ,   -2.48 ,
-17.03 ,  -76.44 , -116.56 ,   92.6  , -144.4  ,   66.56 ,
118.25 ,   32.84 ,  109.9  ,   -7.453,  -22.86 , -102.56 ,...
2025-04-27 04:51:51.374401 test begin: paddle.sum(Tensor([154, 1000],"float16"), axis=-1, )
[accuracy error] paddle.sum(Tensor([154, 1000],"float16"), axis=-1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 150 / 154 (97.4%)
Max absolute difference among violations: 4.53
Max relative difference among violations: 19.45
ACTUAL: array([-11.695  ,  -6.863  , -17.33   ,   7.12   ,  -0.762  ,   9.37   ,
-13.9    ,   5.723  ,  13.336  ,   3.71   ,  -7.48   , -19.36   ,
9.04   , -10.55   ,   9.42   , -16.83   ,   1.142  ,  -0.8228 ,...
DESIRED: array([-12.234  ,  -7.91   , -19.23   ,   8.94   ,  -0.1365 ,  10.92   ,
-16.05   ,   7.445  ,  14.86   ,   4.363  ,  -8.195  , -22.     ,
10.016  , -13.57   ,  11.68   , -20.73   ,  -0.5747 ,  -0.432  ,...
2025-04-27 04:51:53.677191 test begin: paddle.sum(Tensor([156, 102144],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([156, 102144],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 156 / 156 (100%)
Max absolute difference among violations: 258.
Max relative difference among violations: 52.25
ACTUAL: array([ 8.6797e+00, -5.8398e+00,  6.2930e+00, -1.6625e+01, -1.0750e+01,
6.2656e+00,  2.4469e+01,  1.5750e+01, -1.0148e+01,  1.2586e+01,
-2.8086e+00, -8.5078e+00,  1.5250e+01,  1.0625e+01,  1.4203e+01,...
DESIRED: array([-2.1719e+01, -1.2519e+02, -8.1062e+01,  1.8156e+01,  1.7162e+02,
1.6125e+01,  9.1625e+01,  1.3050e+02, -5.8344e+01,  1.6075e+02,
1.1481e+02, -6.0375e+01,  1.3562e+02, -5.1344e+01,  5.1250e+01,...
2025-04-27 04:52:04.771029 test begin: paddle.sum(Tensor([156, 56000],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([156, 56000],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 156 / 156 (100%)
Max absolute difference among violations: 200.4
Max relative difference among violations: 45.28
ACTUAL: array([ 1.5410e+00, -1.1758e+01, -1.7406e+01,  5.2881e-01,  1.3930e+01,
3.5820e+00,  4.7148e+00,  2.9414e+00,  5.3750e+00,  8.3750e+00,
7.5195e+00, -1.4602e+01,  8.5469e+00,  3.9121e+00,  6.3164e+00,...
DESIRED: array([  62.44  ,   41.56  ,  -36.56  , -199.9   ,   51.8   ,   24.58  ,
-1.374 ,  -55.7   ,  -38.47  ,  112.25  ,  -13.31  ,   -2.197 ,
78.2   ,  -13.85  ,   60.22  ,  -15.51  ,  -16.52  ,  128.9   ,...
2025-04-27 04:52:05.984677 test begin: paddle.sum(Tensor([156, 60800],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([156, 60800],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 156 / 156 (100%)
Max absolute difference among violations: 189.9
Max relative difference among violations: 11.695
ACTUAL: array([ -4.484 ,  11.16  , -10.64  ,  10.61  ,  13.43  ,   9.65  ,
-13.805 ,   8.94  ,  16.33  ,  -1.571 , -14.93  ,   1.669 ,
6.254 ,   3.47  ,   6.785 , -15.95  ,   5.92  ,   7.89  ,...
DESIRED: array([   6.97 ,    5.67 , -162.8  ,  147.5  ,  -40.34 ,   51.66 ,
-14.83 ,  -24.7  ,  -20.89 , -120.5  ,  -48.12 ,   51.   ,
-76.25 ,   -3.523,  156.8  ,   51.9  ,   24.97 ,   41.66 ,...
2025-04-27 04:52:07.363400 test begin: paddle.sum(Tensor([156, 62400],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([156, 62400],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 156 / 156 (100%)
Max absolute difference among violations: 230.9
Max relative difference among violations: 19.05
ACTUAL: array([  0.5815 ,  -0.963  ,   4.926  , -13.164  , -13.88   , -17.16   ,
18.77   , -12.664  ,  -2.967  ,   8.484  ,  -4.457  ,   4.758  ,
13.35   ,  -4.848  ,   1.361  ,  11.62   ,  18.14   , -17.88   ,...
DESIRED: array([ 3.8000e+01, -4.3477e+00, -5.4344e+01, -5.3188e+01,  2.9703e+01,
-8.6875e+01,  6.2281e+01,  8.8312e+01,  4.9492e+00, -3.9469e+01,
1.3781e+01,  3.7062e+01, -2.1719e+00,  3.3062e+01,  5.9906e+01,...
2025-04-27 04:52:08.663707 test begin: paddle.sum(Tensor([156, 67200],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([156, 67200],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 156 / 156 (100%)
Max absolute difference among violations: 218.9
Max relative difference among violations: 26.
ACTUAL: array([ -4.695 ,   3.834 , -36.3   ,   8.22  ,  -9.89  ,  -5.066 ,
-3.432 ,   4.516 ,  17.45  ,   6.9   ,   2.21  , -30.7   ,
-0.609 ,  -0.2468, -13.35  ,  -4.254 ,   6.99  ,   1.957 ,...
DESIRED: array([   9.28 ,  222.8  ,  -84.1  ,   10.47 ,  -75.3  ,   -7.363,
22.5  ,  -20.16 ,  -66.7  ,   57.72 ,  -55.22 ,  -82.7  ,
45.62 ,  152.5  ,  -39.75 ,   59.2  ,   46.9  ,   63.38 ,...
2025-04-27 04:52:10.006304 test begin: paddle.sum(Tensor([156, 68224],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([156, 68224],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 156 / 156 (100%)
Max absolute difference among violations: 307.5
Max relative difference among violations: 5.27
ACTUAL: array([  4.05  ,  -5.08  , -11.55  ,   0.4482,   8.945 ,  23.66  ,
1.627 , -14.85  ,  13.305 ,  -8.86  ,  -6.773 ,   4.703 ,
-11.2   , -23.73  ,  25.47  ,  26.9   ,   1.023 ,   6.195 ,...
DESIRED: array([  74.75 ,  -62.47 ,  -97.1  , -100.8  ,  103.6  ,   -5.54 ,
123.6  ,   -8.805,   14.82 ,  -76.2  ,   62.34 ,   88.8  ,
-101.2  ,   -8.3  ,   76.7  ,   59.8  ,  120.44 , -105.4  ,...
2025-04-27 04:52:11.387556 test begin: paddle.sum(Tensor([156, 74240],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([156, 74240],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 155 / 156 (99.4%)
Max absolute difference among violations: 217.8
Max relative difference among violations: 7.137
ACTUAL: array([  5.094  ,   0.89   ,   2.578  ,   4.945  ,   3.342  ,   4.22   ,
-12.88   ,  -7.113  , -16.25   , -11.67   , -11.17   ,  10.664  ,
-1.602  , -14.805  ,   1.519  ,   1.692  ,  -0.944  ,   8.16   ,...
DESIRED: array([  54.53 , -103.3  ,   51.44 ,  -39.84 ,   18.19 ,   -5.652,
73.8  ,   75.3  , -183.1  ,  -93.5  ,  -11.55 ,  -36.47 ,
36.25 ,   58.97 ,    1.507,   -4.43 ,  -69.44 ,   23.3  ,...
2025-04-27 04:52:12.809609 test begin: paddle.sum(Tensor([156, 80256],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([156, 80256],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 156 / 156 (100%)
Max absolute difference among violations: 250.
Max relative difference among violations: 138.4
ACTUAL: array([  3.883 ,   3.033 ,  11.7   ,   0.966 , -19.44  ,  -9.34  ,
-19.56  ,  -8.09  ,  -1.832 , -16.34  , -14.336 ,   4.01  ,
-6.293 ,  18.66  ,  -7.785 ,   1.869 ,  -8.02  ,  -1.544 ,...
DESIRED: array([-2.7312e+01, -8.3125e+00,  2.6175e+02, -6.6312e+01, -1.1762e+02,
2.5406e+01,  1.4233e-01, -8.6188e+01,  4.4781e+01, -8.8812e+01,
-5.7344e+01,  2.6016e+01,  4.8000e+01,  7.2562e+01, -6.8062e+01,...
2025-04-27 04:52:14.377257 test begin: paddle.sum(Tensor([156, 82688],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([156, 82688],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 156 / 156 (100%)
Max absolute difference among violations: 194.8
Max relative difference among violations: 461.2
ACTUAL: array([ -1.557  ,  -4.555  ,   0.4302 ,  -8.11   ,  -1.78   ,  -1.581  ,
16.58   ,   9.45   ,  -6.082  ,   4.375  ,   0.954  ,  -1.819  ,
-3.096  ,  -4.883  ,  -1.303  ,  -2.053  ,  -6.72   ,   5.484  ,...
DESIRED: array([-1.5250e+01, -7.9812e+01,  2.1297e+01, -6.0438e+01, -8.6375e+01,
2.2578e+01,  6.7375e+01, -3.0750e+01, -3.7969e+01,  1.1100e+02,
-1.8775e+02, -6.7875e+01,  3.4406e+01, -1.0559e-02,  2.7656e+01,...
2025-04-27 04:52:16.021212 test begin: paddle.sum(Tensor([156, 89216],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([156, 89216],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 156 / 156 (100%)
Max absolute difference among violations: 273.
Max relative difference among violations: 19.34
ACTUAL: array([ -2.373 ,   3.23  , -10.3   ,   4.727 ,   2.75  ,   0.755 ,
-3.328 , -13.09  ,  -4.598 ,  -8.19  , -24.28  ,   1.548 ,
26.92  ,  -2.125 ,  20.08  ,   8.98  ,   5.426 , -17.19  ,...
DESIRED: array([ -18.94  ,   10.61  ,  -64.2   ,  -36.66  ,  -21.62  ,  -13.47  ,
24.64  ,   80.    ,   70.25  , -131.4   , -105.94  ,  -73.25  ,
-32.47  ,   46.7   ,  145.6   ,  -21.92  ,  -63.4   ,  -79.    ,...
2025-04-27 04:52:17.657723 test begin: paddle.sum(Tensor([156, 92416],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([156, 92416],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 156 / 156 (100%)
Max absolute difference among violations: 277.
Max relative difference among violations: 5.766
ACTUAL: array([-1.2867e+01, -2.3770e+00,  1.9312e+01,  2.1766e+01,  3.9746e+00,
-1.7047e+01,  1.0766e+01,  5.8516e+00,  1.2391e+01,  4.8242e+00,
-2.6074e+00,  7.6289e+00,  7.8125e-02,  1.0219e+01, -1.1469e+01,...
DESIRED: array([ -40.66 ,   26.97 ,   -5.125,  138.9  ,   29.84 ,  -45.3  ,
-84.7  ,  -55.84 ,  -26.   ,    5.047, -190.8  , -113.7  ,
-60.75 ,   14.19 ,  -86.4  , -169.4  ,  131.5  ,  -89.44 ,...
2025-04-27 04:52:23.353976 test begin: paddle.sum(Tensor([16, 1000],"float16"), axis=-1, )
[accuracy error] paddle.sum(Tensor([16, 1000],"float16"), axis=-1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 16 / 16 (100%)
Max absolute difference among violations: 3.86
Max relative difference among violations: 4.18
ACTUAL: array([ -4.41   ,   0.10425,  -7.977  ,  -1.084  ,  -4.35   ,   0.10596,
-6.58   , -10.55   ,   0.7285 ,  -4.363  ,  -8.07   ,   3.012  ,
-5.086  ,   2.354  ,  -9.06   ,   6.766  ], dtype=float16)
DESIRED: array([ -6.055 ,  -0.496 , -11.836 ,   0.3408,  -5.707 ,   0.5693,
-8.44  , -13.51  ,   0.5996,  -4.164 , -10.555 ,   3.406 ,
-5.215 ,   2.705 ,  -8.87  ,   8.34  ], dtype=float16)
2025-04-27 04:52:23.766447 test begin: paddle.sum(Tensor([16, 102144],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([16, 102144],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 16 / 16 (100%)
Max absolute difference among violations: 224.
Max relative difference among violations: 36.78
ACTUAL: array([ 21.34 ,  -8.164,   2.227, -20.11 , -33.   , -26.06 ,  19.12 ,
-16.94 ,  -2.822,  -4.082,  -5.977,   8.96 ,  39.5  ,   4.395,
4.508, -11.305], dtype=float16)
DESIRED: array([ 139.2  ,   95.1  ,   10.36 ,   -0.532,  191.   ,  -60.8  ,
55.34 , -167.8  , -107.4  ,  113.06 ,  -92.94 , -103.5  ,
220.   ,   -4.754,   31.94 ,   32.12 ], dtype=float16)
2025-04-27 04:52:24.288081 test begin: paddle.sum(Tensor([16, 102400],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([16, 102400],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 16 / 16 (100%)
Max absolute difference among violations: 146.4
Max relative difference among violations: 63.25
ACTUAL: array([ -8.47  ,  -4.23  ,  -9.93  ,   3.8   ,   1.715 , -10.36  ,
10.66  , -14.64  ,  17.11  ,  -0.1838,  32.25  ,  -3.59  ,
-2.139 ,  16.98  , -16.12  ,   1.838 ], dtype=float16)
DESIRED: array([ -4.637 , -56.56  , -94.5   ,   5.27  , -88.1   ,  33.34  ,
29.33  ,  26.55  , 163.5   ,  13.31  , 174.5   ,   8.37  ,
70.5   ,  -0.2727,  28.78  , -76.1   ], dtype=float16)
2025-04-27 04:52:25.468279 test begin: paddle.sum(Tensor([16, 112896],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([16, 112896],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 16 / 16 (100%)
Max absolute difference among violations: 192.5
Max relative difference among violations: 2.916
ACTUAL: array([ -1.104  ,   9.44   ,   0.859  ,  16.23   ,  22.72   ,  -0.07544,
-12.5    ,  -0.2495 , -35.72   ,  23.6    ,   6.39   ,  -4.074  ,
-13.49   ,  12.42   , -18.47   ,   8.11   ], dtype=float16)
DESIRED: array([   1.659,   80.56 ,  -37.12 ,  120.44 ,  -67.5  ,   25.03 ,
-66.94 ,  -52.38 ,  -86.25 ,  -12.31 ,  -22.33 , -195.9  ,
-206.   ,  112.   ,   61.66 ,  -42.94 ], dtype=float16)
2025-04-27 04:52:45.654564 test begin: paddle.sum(Tensor([16, 54400],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([16, 54400],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 16 / 16 (100%)
Max absolute difference among violations: 173.6
Max relative difference among violations: 4.965
ACTUAL: array([-13.84  ,  -3.371 ,  -2.496 ,  -6.15  ,   5.42  , -10.13  ,
-4.46  ,   9.336 ,  12.    ,  -0.5225,   4.43  ,  -1.386 ,
28.81  ,  -9.914 , -19.6   ,  11.25  ], dtype=float16)
DESIRED: array([ -46.75 ,  -37.84 ,   22.39 ,   91.25 ,   12.305,  -15.64 ,
54.53 ,   40.94 ,    2.012,   17.38 ,    9.14 ,   13.57 ,
72.44 ,  -39.72 , -193.2  ,   53.78 ], dtype=float16)
2025-04-27 04:52:46.470814 test begin: paddle.sum(Tensor([16, 60800],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([16, 60800],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 16 / 16 (100%)
Max absolute difference among violations: 220.6
Max relative difference among violations: 1.237
ACTUAL: array([  8.88 ,  -2.695,  -1.693,   2.486, -12.   ,  -8.21 , -10.47 ,
16.6  ,  -5.457,   4.324,  20.81 ,  -7.56 ,  -2.383, -14.2  ,
-1.484,  10.59 ], dtype=float16)
DESIRED: array([ -46.56, -100.06,   41.53,  -27.58,  -22.53,  -20.55,   85.94,
237.2 ,  -87.9 ,  -44.1 ,   72.75,  -49.03,   17.52,  -96.25,
-116.7 ,  -44.56], dtype=float16)
2025-04-27 04:52:46.905417 test begin: paddle.sum(Tensor([16, 62400],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([16, 62400],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 16 / 16 (100%)
Max absolute difference among violations: 144.4
Max relative difference among violations: 2.623
ACTUAL: array([ -8.57  , -19.14  ,  -4.46  ,   4.14  ,  17.98  ,   0.871 ,
0.7754,   4.29  , -13.11  ,  10.23  , -11.516 , -13.12  ,
-7.824 ,   5.594 ,   2.932 ,   2.572 ], dtype=float16)
DESIRED: array([ -25.45 ,  -38.38 , -108.5  ,  -22.12 ,   18.81 ,  -13.68 ,
44.78 ,  119.9  , -157.5  ,   95.6  , -134.   ,    8.086,
-46.28 ,  -77.4  ,  -80.56 ,   88.44 ], dtype=float16)
2025-04-27 04:52:47.914670 test begin: paddle.sum(Tensor([16, 64000],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([16, 64000],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 16 / 16 (100%)
Max absolute difference among violations: 116.9
Max relative difference among violations: 1.948
ACTUAL: array([ 7.82  ,  2.475 ,  5.473 , -5.156 ,  7.297 , -0.0835,  2.805 ,
4.387 , -1.9   , -9.95  , -6.316 , -7.438 ,  9.07  ,  7.074 ,
4.79  , -6.504 ], dtype=float16)
DESIRED: array([ -62.06 , -105.7  ,   58.44 ,  -48.6  ,    2.475,  -19.94 ,
103.75 ,  -90.7  ,  105.94 ,  -82.5  ,   54.03 , -112.2  ,
77.5  , -109.8  ,   34.78 ,   36.   ], dtype=float16)
2025-04-27 04:52:48.496179 test begin: paddle.sum(Tensor([16, 65600],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([16, 65600],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 15 / 16 (93.8%)
Max absolute difference among violations: 184.9
Max relative difference among violations: 24.73
ACTUAL: array([ -7.25  ,   7.312 ,  -1.51  ,  15.8   ,  10.28  ,  -4.22  ,
-11.41  ,  -8.164 ,  15.664 ,  10.39  ,  -0.749 ,  -9.375 ,
14.734 ,  12.016 ,  -0.1917,   6.207 ], dtype=float16)
DESIRED: array([ -0.2817,  83.25  , -24.1   ,  15.82  ,  16.33  ,  30.66  ,
-42.03  ,   1.425 , 113.1   , 113.4   , -60.78  ,  31.28  ,
66.94  , 161.1   , 184.6   ,  58.56  ], dtype=float16)
2025-04-27 04:52:48.964911 test begin: paddle.sum(Tensor([16, 67200],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([16, 67200],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 16 / 16 (100%)
Max absolute difference among violations: 137.8
Max relative difference among violations: 1.036
ACTUAL: array([-11.5  ,   7.58 ,   2.924,   4.625,   0.878,  10.75 ,  -1.171,
-20.33 , -22.05 , -18.42 ,   8.56 ,  -6.152,   6.73 ,  -4.61 ,
4.41 , -26.12 ], dtype=float16)
DESIRED: array([ -47.34,  138.8 , -100.3 ,  142.4 ,   97.7 ,  148.  ,   40.03,
-27.81,  -51.12,  -78.8 ,    8.78,  -65.9 ,   41.06,  127.44,
46.16, -112.94], dtype=float16)
2025-04-27 04:52:49.348980 test begin: paddle.sum(Tensor([16, 69888],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([16, 69888],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 16 / 16 (100%)
Max absolute difference among violations: 145.5
Max relative difference among violations: 1.82
ACTUAL: array([  2.   ,   3.314,   9.555,  -5.445,  -4.168,   8.18 ,   7.883,
6.46 ,  -0.528,   1.087,   4.32 ,   8.21 ,  26.3  ,   6.09 ,
19.9  , -11.01 ], dtype=float16)
DESIRED: array([  87.3  ,  -49.3  ,  113.1  ,  108.56 ,  -80.6  ,   93.2  ,
72.7  ,   29.08 ,  145.   ,   14.04 ,    1.532,  -29.81 ,
122.3  ,   12.555,   95.7  , -134.4  ], dtype=float16)
2025-04-27 04:52:49.935418 test begin: paddle.sum(Tensor([16, 70528],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([16, 70528],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 16 / 16 (100%)
Max absolute difference among violations: 88.56
Max relative difference among violations: 22.44
ACTUAL: array([  4.406 ,  -1.386 , -11.266 ,  -8.45  ,  -1.378 ,   2.855 ,
-2.633 ,  -2.21  ,  -6.703 ,  13.87  ,  -4.633 , -31.34  ,
-11.59  ,  -6.895 ,  -3.117 ,   0.2094], dtype=float16)
DESIRED: array([ 32.22 ,  46.28 ,  -2.074, -97.   ,  19.19 ,  64.8  ,  81.8  ,
-41.47 ,  -3.465,   2.15 ,   5.63 ,  -1.337, -99.6  , -88.5  ,
74.4  ,  50.1  ], dtype=float16)
2025-04-27 04:52:50.403934 test begin: paddle.sum(Tensor([16, 73984],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([16, 73984],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 16 / 16 (100%)
Max absolute difference among violations: 167.1
Max relative difference among violations: 2.73
ACTUAL: array([  3.621 , -15.92  ,  -6.973 ,   6.195 ,   8.21  ,  -1.251 ,
9.94  ,  -0.0909,  -8.77  ,   4.37  ,  16.14  ,  -5.887 ,
5.395 , -21.14  , -16.02  ,  -0.1812], dtype=float16)
DESIRED: array([  48.5 ,   65.1 ,   -5.26,  -24.42,   93.1 , -168.4 ,  129.4 ,
50.22,    5.07,  -16.92,   56.66,  -54.3 ,   54.8 ,  110.44,
-64.56,  -24.05], dtype=float16)
2025-04-27 04:52:50.904516 test begin: paddle.sum(Tensor([16, 76160],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([16, 76160],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 16 / 16 (100%)
Max absolute difference among violations: 193.8
Max relative difference among violations: 5.637
ACTUAL: array([  6.773, -10.04 ,  -4.7  , -22.17 ,  14.734,  -7.613,  -7.668,
-7.44 ,  -6.633,  -0.736, -16.05 ,   9.695,  12.1  ,   8.86 ,
5.72 ,   1.194], dtype=float16)
DESIRED: array([   9.61 ,  -63.4  ,  112.4  , -140.4  ,  146.4  ,    1.643,
82.3  ,  186.2  , -131.4  ,  -16.03 , -107.25 ,  -95.1  ,
-63.6  ,  -64.9  ,   50.44 ,  -15.91 ], dtype=float16)
2025-04-27 04:52:51.617744 test begin: paddle.sum(Tensor([16, 77824],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([16, 77824],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 16 / 16 (100%)
Max absolute difference among violations: 147.6
Max relative difference among violations: 15.95
ACTUAL: array([ 30.3   ,   0.6416,  -5.63  ,   4.086 ,   0.1333,  -4.543 ,
-12.02  ,  -4.176 ,   1.161 ,   4.492 ,   8.34  , -19.19  ,
8.57  ,  10.74  ,  -5.52  ,   6.773 ], dtype=float16)
DESIRED: array([   5.047,   57.06 ,  136.9  ,  -60.34 ,   -5.824,  100.5  ,
-4.152,   23.38 , -145.8  ,  -52.3  ,    4.42 ,    1.283,
156.2  ,  -88.94 ,  -21.12 ,  -36.9  ], dtype=float16)
2025-04-27 04:52:52.484303 test begin: paddle.sum(Tensor([16, 80256],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([16, 80256],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 16 / 16 (100%)
Max absolute difference among violations: 139.4
Max relative difference among violations: 8.55
ACTUAL: array([  1.125,   3.018,  -2.592,  -1.599,  -3.227,  -6.14 ,  -3.68 ,
-3.658, -11.414,   9.586,   8.12 ,   1.347,  -3.045,  -9.39 ,
1.332,  16.45 ], dtype=float16)
DESIRED: array([ -47.78 ,  -59.1  ,   20.8  ,    7.785,  -11.99 ,  -29.69 ,
77.25 ,  -21.69 , -150.8  ,  144.   ,    0.85 ,  -11.6  ,
-48.12 ,  -46.7  ,    5.324,   50.4  ], dtype=float16)
2025-04-27 04:52:52.984367 test begin: paddle.sum(Tensor([16, 80512],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([16, 80512],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 16 / 16 (100%)
Max absolute difference among violations: 169.
Max relative difference among violations: 5.246
ACTUAL: array([ -7.395 ,   9.18  ,  -1.686 ,   6.473 ,   3.027 ,   0.9624,
-8.445 , -14.76  ,  -8.02  ,  -9.73  ,  18.38  ,   1.207 ,
-2.64  ,  17.31  ,   6.754 ,  -8.36  ], dtype=float16)
DESIRED: array([  33.   ,  131.9  ,   85.8  ,  -51.56 ,   70.6  ,  -79.1  ,
77.1  ,    3.475,  -14.39 , -178.8  ,   19.22 ,   -5.566,
60.16 ,  -67.8  ,   21.5  ,  -24.67 ], dtype=float16)
2025-04-27 04:52:53.399982 test begin: paddle.sum(Tensor([16, 82688],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([16, 82688],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 16 / 16 (100%)
Max absolute difference among violations: 126.3
Max relative difference among violations: 2.988
ACTUAL: array([ 12.58 ,  -4.504,  14.49 ,  17.08 , -21.39 ,  -0.889,   3.963,
-5.727,  -4.086,  -8.75 ,   9.32 ,  20.95 ,   1.163,  -6.258,
8.516, -11.74 ], dtype=float16)
DESIRED: array([ 17.52, -84.06,  20.22, -84.25,  10.76, 106.4 , -81.3 , -10.66,
23.62, -55.78, 135.6 , -80.56, -18.48,  -6.44,  42.4 , -21.22],
dtype=float16)
2025-04-27 04:52:53.890101 test begin: paddle.sum(Tensor([16, 84864],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([16, 84864],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 16 / 16 (100%)
Max absolute difference among violations: 211.8
Max relative difference among violations: 1.791
ACTUAL: array([ -2.576, -12.19 ,   6.38 ,   2.693, -14.4  ,   6.06 , -11.38 ,
2.648,   1.769,   8.44 ,  -7.23 ,   9.76 ,  25.05 ,  -2.566,
5.7  ,   9.11 ], dtype=float16)
DESIRED: array([  82.5 ,  -94.9 ,   37.62,  113.  ,   54.6 ,  -37.5 , -109.8 ,
-3.35,  -47.88,   83.56,  125.7 ,  143.9 ,   46.9 ,   18.77,
117.3 , -202.6 ], dtype=float16)
2025-04-27 04:52:54.381216 test begin: paddle.sum(Tensor([16, 85120],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([16, 85120],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 16 / 16 (100%)
Max absolute difference among violations: 209.
Max relative difference among violations: 3.725
ACTUAL: array([ 15.84 ,   1.035,  29.02 , -13.55 ,  10.36 ,  12.625,   6.73 ,
-19.25 , -11.24 , -19.84 , -12.71 , -19.53 ,   7.266, -19.16 ,
-3.396,  -4.555], dtype=float16)
DESIRED: array([  90.3  ,  210.   ,   35.72 ,   71.9  ,  -39.75 ,  -64.25 ,
-44.3  ,  -53.22 , -102.56 ,  -38.03 ,  -17.3  ,  -32.94 ,
44.9  ,   -4.055,  179.6  ,   54.5  ], dtype=float16)
2025-04-27 04:52:54.924416 test begin: paddle.sum(Tensor([16, 87552],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([16, 87552],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 16 / 16 (100%)
Max absolute difference among violations: 223.8
Max relative difference among violations: 4.277
ACTUAL: array([ -4.367 ,  20.27  , -11.66  ,  10.734 ,  -0.2452,   6.41  ,
16.7   ,  22.77  , -13.55  ,  -1.075 ,  -1.725 ,  28.84  ,
-12.96  ,   5.598 , -10.08  ,   3.42  ], dtype=float16)
DESIRED: array([   1.332, -203.5  , -120.06 ,  -37.03 ,  143.   ,  -82.3  ,
-21.94 ,  163.6  , -138.5  ,   -5.72 ,   -4.297,  125.06 ,
-42.22 ,  -52.   ,   -7.   ,  127.6  ], dtype=float16)
2025-04-27 04:52:55.425690 test begin: paddle.sum(Tensor([16, 89216],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([16, 89216],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 16 / 16 (100%)
Max absolute difference among violations: 189.8
Max relative difference among violations: 1.336
ACTUAL: array([  2.002 ,  -9.66  ,   0.9614,  15.73  ,  -7.36  ,   1.283 ,
-6.22  ,   1.099 ,  -2.523 ,   3.336 ,  -7.43  , -18.36  ,
-3.582 ,   4.65  ,   3.61  ,   9.445 ], dtype=float16)
DESIRED: array([ -39.2  , -135.5  ,   38.28 ,  130.4  ,   -3.771,  125.4  ,
30.   ,  144.4  ,  -58.47 , -156.9  ,  -82.2  ,   54.75 ,
-78.3  ,   42.28 , -186.1  ,  129.5  ], dtype=float16)
2025-04-27 04:52:55.912999 test begin: paddle.sum(Tensor([16, 89984],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([16, 89984],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 16 / 16 (100%)
Max absolute difference among violations: 154.6
Max relative difference among violations: 12.4
ACTUAL: array([ 11.78  , -11.11  ,  -8.69  ,  13.4   ,   0.3162,   0.7705,
-5.06  , -22.47  ,  -3.53  , -10.62  ,  11.7   ,   6.05  ,
14.81  ,  -4.867 , -23.97  ,   2.932 ], dtype=float16)
DESIRED: array([-106.06 ,   20.22 ,   -4.016,  -65.9  , -130.5  , -152.4  ,
26.34 , -177.1  ,   50.34 ,  -10.98 ,   57.1  ,   -0.531,
85.75 ,   12.8  ,  116.9  ,  123.25 ], dtype=float16)
2025-04-27 04:52:56.620721 test begin: paddle.sum(Tensor([16, 91392],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([16, 91392],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 16 / 16 (100%)
Max absolute difference among violations: 168.
Max relative difference among violations: 1.605
ACTUAL: array([  9.58 ,   1.115,  -2.682,  -1.868,   1.384,  21.34 ,  16.47 ,
7.523,  -7.113,  22.72 ,  -0.638,  16.95 ,   9.69 ,  15.664,
-17.4  ,   4.31 ], dtype=float16)
DESIRED: array([ -61.16,  137.5 , -124.6 ,  -54.56,   27.89, -146.6 ,  140.8 ,
75.8 ,  -58.88,  -37.5 ,  -34.4 ,  -90.2 ,   35.97,  -27.97,
-63.88,  -30.1 ], dtype=float16)
2025-04-27 04:52:57.055084 test begin: paddle.sum(Tensor([16, 92416],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([16, 92416],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 16 / 16 (100%)
Max absolute difference among violations: 220.5
Max relative difference among violations: 1.09
ACTUAL: array([ -6.16  ,   7.676 ,  11.83  ,   0.4731,  -2.5   ,   8.94  ,
-10.98  ,  -5.74  ,  -0.47  ,  -1.004 ,  17.2   ,   6.57  ,
19.61  ,  -4.27  ,  -4.867 , -17.97  ], dtype=float16)
DESIRED: array([-116.7 , -212.9 , -192.6 ,  -79.7 ,  100.94, -120.75,  132.2 ,
63.47,  122.75,   38.78,   82.7 ,   64.3 ,  196.8 , -128.4 ,
59.1 , -210.2 ], dtype=float16)
2025-04-27 04:52:57.444500 test begin: paddle.sum(Tensor([16, 94848],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([16, 94848],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 16 / 16 (100%)
Max absolute difference among violations: 257.8
Max relative difference among violations: 8.445
ACTUAL: array([ 11.49  ,   5.3   ,   3.492 ,  14.7   ,   5.344 , -29.42  ,
-2.617 ,  -0.1758,   3.656 ,  -7.03  ,  18.27  , -14.7   ,
9.91  ,   8.51  ,   6.867 ,  11.04  ], dtype=float16)
DESIRED: array([  96.3  ,   75.5  ,  -55.03 , -225.5  , -252.5  ,   12.41 ,
218.5  ,  -13.87 ,  -35.75 , -122.   ,   20.72 ,    1.974,
3.379,   46.3  ,  -73.44 ,  169.9  ], dtype=float16)
2025-04-27 04:52:58.422802 test begin: paddle.sum(Tensor([16, 96768],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([16, 96768],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 16 / 16 (100%)
Max absolute difference among violations: 184.
Max relative difference among violations: 2.178
ACTUAL: array([  8.08 ,  -3.57 ,   5.21 , -14.15 ,   1.299,   1.49 ,  -2.338,
-18.03 ,  12.97 ,  -7.06 ,  -7.152, -15.99 ,  -9.   ,  -4.945,
-11.   , -19.38 ], dtype=float16)
DESIRED: array([ -98.4 , -187.6 ,  -11.56,  -28.84,   39.34,   31.25,   81.06,
-41.44,   37.2 ,  -58.88,   82.8 , -127.4 ,  -32.53,  -85.1 ,
9.34,  -67.6 ], dtype=float16)
2025-04-27 04:52:58.924108 test begin: paddle.sum(Tensor([16, 99712],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([16, 99712],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 16 / 16 (100%)
Max absolute difference among violations: 170.6
Max relative difference among violations: 4.082
ACTUAL: array([ -1.173,   6.19 ,   6.58 , -11.75 ,   4.066,  -4.26 , -21.22 ,
11.305, -14.555,   5.09 , -15.39 ,  14.87 ,  -6.855, -11.766,
4.84 ,  16.75 ], dtype=float16)
DESIRED: array([  45.72 ,  115.6  ,  164.1  , -155.5  ,   15.91 , -102.06 ,
-80.06 ,  141.6  , -116.56 , -112.44 ,    4.992, -138.5  ,
-25.2  ,   57.97 ,  -65.9  ,  187.4  ], dtype=float16)
2025-04-27 04:52:59.444467 test begin: paddle.sum(Tensor([160, 102144],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([160, 102144],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 160 / 160 (100%)
Max absolute difference among violations: 296.8
Max relative difference among violations: 6.31
ACTUAL: array([ 1.7266e+01,  1.7207e+00,  2.5125e+01,  7.7266e+00, -1.6436e+00,
4.4609e+00,  1.7297e+01,  6.2148e+00,  4.2227e+00,  7.1055e+00,
-6.0156e+00, -4.9922e+00, -2.6602e+00,  2.4043e+00, -1.9023e+00,...
DESIRED: array([  75.7  ,  -51.53 ,   99.75 ,  114.9  ,  -84.9  ,  129.6  ,
-64.6  ,   35.28 ,  -14.21 ,   33.97 ,  167.5  ,   96.   ,
36.1  ,   15.13 , -260.2  , -203.   ,   38.03 ,   60.8  ,...
2025-04-27 04:53:14.290588 test begin: paddle.sum(Tensor([160, 54400],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([160, 54400],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 160 / 160 (100%)
Max absolute difference among violations: 175.
Max relative difference among violations: 16.7
ACTUAL: array([ 11.38   ,  -3.633  ,   0.5205 ,   7.508  , -19.02   , -25.23   ,
2.412  ,  -6.547  ,  14.1    ,   6.82   ,  -4.535  ,   6.816  ,
1.163  ,  13.92   ,   8.77   ,  17.95   , -16.75   ,  -0.09894,...
DESIRED: array([ 104.1   ,  -75.    ,   18.05  ,  -20.9   ,  -25.    , -200.2   ,
-83.6   ,  -10.336 ,   54.94  , -129.5   ,   18.02  ,  -56.28  ,
-22.38  ,   60.94  ,  120.1   ,   74.9   ,   -1.023 ,   88.6   ,...
2025-04-27 04:53:15.476581 test begin: paddle.sum(Tensor([160, 56000],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([160, 56000],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 160 / 160 (100%)
Max absolute difference among violations: 176.2
Max relative difference among violations: 428.8
ACTUAL: array([ 12.73   ,  -5.812  ,  -0.07935,  15.55   ,  -4.582  ,   4.785  ,
-3.912  , -16.17   ,   2.838  ,  -3.24   ,   7.215  ,   7.04   ,
0.7153 ,  13.625  ,   9.2    ,  -4.105  ,   2.998  ,  -2.766  ,...
DESIRED: array([ 2.5250e+01, -1.0961e+01,  1.7075e+02, -8.8125e+01, -3.6562e+01,
-4.7188e+01,  1.8625e+01, -6.0469e+01,  1.3588e+02, -3.2312e+01,
1.0594e+01,  2.1438e+01, -5.2188e+01,  5.7594e+01, -5.5031e+01,...
2025-04-27 04:53:16.723697 test begin: paddle.sum(Tensor([160, 60800],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([160, 60800],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 160 / 160 (100%)
Max absolute difference among violations: 266.8
Max relative difference among violations: 1082.
ACTUAL: array([-8.2109e+00, -1.4000e+01, -1.1109e+01,  1.0344e+01,  1.5461e+01,
-1.0469e+01,  1.0500e+01, -3.4609e+00, -7.7539e+00,  6.2969e+00,
-6.6719e+00,  8.3125e+00,  1.5391e+01, -3.7227e+00,  2.5281e+01,...
DESIRED: array([-7.5664e+00, -7.7250e+01,  9.6938e+01, -6.2156e+01,  5.3938e+01,
-6.0812e+01,  3.2531e+01, -7.3312e+01, -1.0938e+02, -4.9375e+01,
8.4000e+01, -9.3875e+01,  1.6719e+01, -1.3425e+02,  1.5867e+01,...
2025-04-27 04:53:17.949956 test begin: paddle.sum(Tensor([160, 67200],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([160, 67200],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 160 / 160 (100%)
Max absolute difference among violations: 216.9
Max relative difference among violations: 6.8
ACTUAL: array([ 5.7617e+00,  1.0732e+00,  1.4266e+01,  1.1297e+01, -8.4375e+00,
-8.4688e+00, -8.0625e+00,  1.2562e+01, -3.8828e+00, -4.2969e+00,
1.7156e+01,  8.8906e+00, -5.0430e+00,  1.7016e+01, -2.5195e-01,...
DESIRED: array([ -52.8  ,   23.19 ,  -95.7  ,  -39.03 ,  174.6  ,   13.336,
-139.6  ,   -4.156,   33.12 ,  -42.9  ,  -28.9  ,    2.09 ,
19.66 ,   61.06 ,   41.   ,  -33.34 ,  -21.48 ,  -61.8  ,...
2025-04-27 04:53:19.313716 test begin: paddle.sum(Tensor([160, 72960],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([160, 72960],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 160 / 160 (100%)
Max absolute difference among violations: 201.2
Max relative difference among violations: 6.75
ACTUAL: array([ 1.2883e+01, -9.4766e+00, -8.9453e+00, -2.5312e+00,  9.0078e+00,
-8.7598e-01,  2.9766e+00, -1.0773e+01,  1.8016e+01, -8.9922e+00,
-4.6914e+00, -3.0781e+00,  2.1484e+00,  1.1430e+01, -4.4141e+00,...
DESIRED: array([  45.8  ,  -61.38 ,  -90.7  ,  -47.3  ,  -10.43 ,   -5.715,
78.7  , -141.9  ,  174.2  ,  -12.86 ,  107.   ,  -80.5  ,
-169.5  ,  134.4  ,  -80.06 , -198.8  ,   51.22 ,   34.06 ,...
2025-04-27 04:53:20.681987 test begin: paddle.sum(Tensor([160, 82688],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([160, 82688],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 160 / 160 (100%)
Max absolute difference among violations: 224.5
Max relative difference among violations: 21.75
ACTUAL: array([  2.672 ,  -8.53  ,   1.037 ,   8.06  , -15.875 ,  -8.375 ,
12.75  ,   7.87  , -14.625 ,   7.742 , -13.96  , -16.6   ,
-5.246 , -19.38  , -10.914 ,  -0.709 ,   7.375 ,  -6.363 ,...
DESIRED: array([-221.9   ,  -48.56  ,    7.797 ,   68.56  ,  -22.05  ,   40.53  ,
-11.79  ,   35.7   ,   33.88  ,   -0.6367,   65.7   , -124.2   ,
-147.5   ,  -26.73  ,  -50.25  ,   -1.859 ,   35.84  ,   70.1   ,...
2025-04-27 04:53:22.297360 test begin: paddle.sum(Tensor([160, 84864],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([160, 84864],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 160 / 160 (100%)
Max absolute difference among violations: 239.9
Max relative difference among violations: 53.75
ACTUAL: array([  3.963 ,  17.42  ,   3.229 ,  21.2   ,   9.68  ,  -1.856 ,
4.85  ,   1.14  ,  -5.742 ,  16.64  , -14.56  ,  -3.258 ,
4.598 ,  -8.695 ,  -3.738 ,   2.676 ,  18.11  , -13.71  ,...
DESIRED: array([ -30.25  ,   17.92  ,   34.38  ,   -4.12  ,   -4.28  ,  -72.4   ,
31.97  ,   21.05  ,    1.917 ,   -0.3154,   24.33  ,   -0.366 ,
21.6   , -150.6   ,   19.02  , -114.9   ,   17.08  , -142.8   ,...
2025-04-27 04:53:23.966155 test begin: paddle.sum(Tensor([160, 89984],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([160, 89984],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 160 / 160 (100%)
Max absolute difference among violations: 226.2
Max relative difference among violations: 49.6
ACTUAL: array([ 13.734  ,   6.133  , -15.414  , -11.56   ,  27.6    ,   3.092  ,
-5.992  ,  -0.675  ,  -4.83   ,   0.598  ,  12.89   ,   4.316  ,
-4.2    ,  14.375  ,  24.44   ,   0.6206 ,  -1.77   ,  -9.42   ,...
DESIRED: array([ 151.5   ,  146.5   ,  -57.16  ,   15.18  ,   97.75  , -100.06  ,
-56.16  ,   39.1   , -231.1   ,   25.75  ,   58.75  ,   52.8   ,
-19.62  , -168.    ,  101.8   ,    6.812 ,  -13.69  ,   59.4   ,...
2025-04-27 04:53:25.668826 test begin: paddle.sum(Tensor([160, 91392],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([160, 91392],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 160 / 160 (100%)
Max absolute difference among violations: 248.6
Max relative difference among violations: 72.7
ACTUAL: array([ -8.086 ,  -9.1   , -14.914 ,  -9.875 ,   6.645 ,  14.03  ,
28.73  ,  -2.969 , -14.98  ,   3.482 ,  -8.81  , -29.34  ,
-0.5615, -19.86  , -15.66  , -12.71  ,   6.297 ,   7.906 ,...
DESIRED: array([ 7.7188e+01, -1.5812e+01, -2.6953e+00,  1.3281e+01, -4.5000e+00,
8.3562e+01,  2.3700e+02,  1.3094e+01,  6.6094e+00,  8.2438e+01,
-3.3000e+01, -8.7812e+00,  6.9188e+01, -1.0556e+02,  6.7562e+01,...
2025-04-27 04:53:27.438074 test begin: paddle.sum(Tensor([160, 92416],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([160, 92416],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 160 / 160 (100%)
Max absolute difference among violations: 215.5
Max relative difference among violations: 258.5
ACTUAL: array([-1.0906e+01, -5.7695e+00,  7.8398e+00, -1.1281e+01,  1.2984e+01,
6.4180e+00, -9.3994e-01, -2.6211e+00, -1.8625e+01, -1.0059e+00,
3.8672e+00,  9.8750e+00,  1.7062e+01, -1.2367e+01, -2.3844e+01,...
DESIRED: array([ 1.9971e+00,  7.5938e+01,  9.1625e+01, -7.3750e+01,  1.3012e+02,
-2.8734e+01, -1.2012e+02,  1.1656e+01, -1.6000e+02, -1.1039e+01,
-1.4912e+00, -1.8875e+01, -1.4200e+02, -1.4300e+02,  1.3825e+02,...
2025-04-27 04:53:32.866993 test begin: paddle.sum(Tensor([16384],"float16"), )
[accuracy error] paddle.sum(Tensor([16384],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 2.953
Max relative difference among violations: 0.1484
ACTUAL: array(-22.84, dtype=float16)
DESIRED: array(-19.89, dtype=float16)
2025-04-27 04:53:33.290294 test begin: paddle.sum(Tensor([164, 112896],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([164, 112896],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 164 / 164 (100%)
Max absolute difference among violations: 259.5
Max relative difference among violations: 8.87
ACTUAL: array([  3.38  ,   5.19  ,   4.    , -24.62  ,   5.707 ,  14.16  ,
-3.154 , -15.    , -21.22  ,  -8.19  ,  -4.387 , -11.45  ,
6.164 , -17.58  ,  -8.664 ,  -1.133 ,   4.234 , -12.94  ,...
DESIRED: array([-220.4  ,   -7.668,  -27.55 , -203.2  ,    8.97 ,    5.562,
-128.1  ,  120.06 ,   96.4  , -165.9  ,  -23.56 , -185.6  ,
109.94 ,  -17.31 ,   51.12 , -117.25 , -163.6  ,   74.5  ,...
2025-04-27 04:53:44.996659 test begin: paddle.sum(Tensor([164, 60800],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([164, 60800],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 164 / 164 (100%)
Max absolute difference among violations: 211.8
Max relative difference among violations: 10.31
ACTUAL: array([-9.4141e+00, -4.2188e+00,  3.0508e+00, -2.1797e+01, -5.2344e+00,
6.7070e+00,  1.5098e+00, -8.7891e+00,  6.2148e+00,  1.6992e+00,
6.5352e+00,  1.0029e+00, -3.2656e+00,  9.5234e+00, -3.3750e+00,...
DESIRED: array([ -74.06 ,   40.16 ,   40.12 ,  -45.56 ,  -26.89 ,  -35.56 ,
91.   ,   97.1  ,    5.38 ,   -3.68 ,  -23.73 ,   -6.164,
-31.77 ,  -81.94 ,  -28.88 ,   39.4  , -119.2  ,  -49.1  ,...
2025-04-27 04:53:46.396216 test begin: paddle.sum(Tensor([164, 65664],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([164, 65664],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 164 / 164 (100%)
Max absolute difference among violations: 219.5
Max relative difference among violations: 33.8
ACTUAL: array([  0.1943 ,  28.53   ,  12.01   ,   3.4    , -11.22   , -15.57   ,
2.898  ,  20.14   ,   1.37   ,   7.13   ,  16.58   ,  -8.99   ,
6.1    ,  10.45   ,  -4.14   ,   7.734  , -14.39   ,   1.534  ,...
DESIRED: array([ 1.0456e+02,  6.9750e+01, -6.6680e+00,  1.1962e+02, -1.4367e+01,
-4.4727e-01,  6.4625e+01, -1.5727e+01,  2.4625e+01,  7.3062e+01,
1.7178e+00, -8.0938e+01, -1.9688e+01,  1.2734e+01, -2.5953e+01,...
2025-04-27 04:53:47.756098 test begin: paddle.sum(Tensor([164, 67200],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([164, 67200],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 164 / 164 (100%)
Max absolute difference among violations: 226.2
Max relative difference among violations: 7.914
ACTUAL: array([ -4.055  ,  22.2    ,  -8.87   ,  10.94   ,  14.95   ,   1.491  ,
-5.684  , -18.2    , -12.67   ,  17.33   ,  -3.064  ,  18.31   ,
-5.895  , -13.35   ,  -2.865  ,  12.484  ,  15.82   , -10.63   ,...
DESIRED: array([  14.05 ,  -42.9  ,  -27.62 ,   47.7  ,  -96.56 ,   41.84 ,
-114.9  ,  -96.4  , -148.1  ,   34.1  ,   -7.348,   56.97 ,
-8.836,  -24.39 , -141.6  ,  -11.79 ,   85.6  ,   47.22 ,...
2025-04-27 04:53:49.216462 test begin: paddle.sum(Tensor([164, 73984],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([164, 73984],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 164 / 164 (100%)
Max absolute difference among violations: 223.
Max relative difference among violations: 25.14
ACTUAL: array([ 1.4141e+01, -9.6582e-01,  1.1963e+00, -2.9078e+01,  2.0938e+00,
7.7539e+00, -4.1719e+00, -6.1621e-01,  8.6328e+00, -1.6922e+01,
-4.6992e+00, -6.8711e+00, -1.8969e+01,  1.8926e+00, -2.3008e+00,...
DESIRED: array([ 101.56  , -101.8   ,   34.16  ,  -96.2   ,    3.637 ,   52.97  ,
10.57  ,  -91.1   ,  -41.25  , -110.    ,   64.3   , -102.    ,
-134.8   ,  -62.66  ,   -3.133 , -152.8   ,  -63.06  ,   83.2   ,...
2025-04-27 04:53:50.634924 test begin: paddle.sum(Tensor([164, 82688],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([164, 82688],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 164 / 164 (100%)
Max absolute difference among violations: 200.8
Max relative difference among violations: 2.975
ACTUAL: array([  3.21  ,   0.6245,   5.96  ,   4.46  ,  17.77  ,   7.07  ,
-2.031 ,  -0.7173,   9.38  ,   9.21  ,   0.638 ,   3.125 ,
-18.55  ,   0.115 ,   8.72  ,  -8.92  ,  11.22  ,   1.091 ,...
DESIRED: array([  -2.574 ,  -15.77  , -164.9   ,   58.66  ,   57.94  ,   22.42  ,
113.06  ,  -75.75  ,  -33.22  ,  -53.03  , -126.3   , -197.6   ,
-39.75  ,   47.66  ,   39.9   ,  126.94  ,  -44.97  ,   44.25  ,...
2025-04-27 04:53:52.289385 test begin: paddle.sum(Tensor([164, 87360],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([164, 87360],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 164 / 164 (100%)
Max absolute difference among violations: 218.2
Max relative difference among violations: 17.44
ACTUAL: array([ -6.977  ,  23.     ,   8.805  ,   3.678  ,  11.53   ,  15.914  ,
-6.617  ,  -1.079  , -13.92   ,  -2.916  ,  10.86   ,   0.291  ,
-5.742  ,   5.117  ,  -5.375  ,  -5.766  , -10.81   ,  -1.801  ,...
DESIRED: array([  28.84  , -144.4   ,  107.1   ,  175.8   ,  -27.12  ,   91.3   ,
20.02  ,  -93.56  ,   25.78  ,   65.7   ,  111.4   ,  -94.44  ,
10.016 ,   14.32  ,   -3.273 ,  -74.3   ,   -6.586 ,  -59.38  ,...
2025-04-27 04:53:53.885450 test begin: paddle.sum(Tensor([164, 89984],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([164, 89984],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 164 / 164 (100%)
Max absolute difference among violations: 225.9
Max relative difference among violations: 45.28
ACTUAL: array([-10.555  ,   0.82   ,   5.58   ,  -7.426  ,  22.97   ,   2.896  ,
10.32   ,  12.05   , -10.95   ,  -6.85   ,  -2.178  ,   1.99   ,
14.586  ,   8.625  ,   6.047  ,  -4.945  ,   3.924  ,  -6.94   ,...
DESIRED: array([  29.86  ,    8.22  ,   16.55  ,    1.847 ,  161.1   ,  107.6   ,
216.4   ,   -4.168 ,  -16.94  ,   15.48  ,   43.66  ,  -82.6   ,
-126.75  ,   81.6   ,   44.44  ,  -84.5   , -137.    , -181.    ,...
2025-04-27 04:53:55.711564 test begin: paddle.sum(Tensor([164, 92416],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([164, 92416],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 164 / 164 (100%)
Max absolute difference among violations: 287.5
Max relative difference among violations: 20.25
ACTUAL: array([-1.1852e+01,  3.7168e+00, -1.8812e+01,  7.9844e+00,  1.4203e+01,
-5.4531e+00, -4.3018e-01,  9.4219e+00,  2.8859e+01,  5.7461e+00,
6.6484e+00, -4.2725e-03,  1.7539e+00,  8.9531e+00,  8.5469e+00,...
DESIRED: array([  17.22 ,   65.94 , -135.4  ,   87.25 ,   -3.656, -144.2  ,
-133.9  ,  -14.99 ,  -76.4  ,   76.44 ,  135.6  ,  -80.44 ,
-67.44 ,   -2.885,  -53.5  ,   69.94 ,   78.4  ,  102.7  ,...
2025-04-27 04:54:00.392199 test begin: paddle.sum(Tensor([16777216],"float16"), )
[accuracy error] paddle.sum(Tensor([16777216],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 187.
Max relative difference among violations: 0.09503
ACTUAL: array(-1781., dtype=float16)
DESIRED: array(-1968., dtype=float16)
2025-04-27 04:54:01.210749 test begin: paddle.sum(Tensor([168, 102144],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([168, 102144],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 168 / 168 (100%)
Max absolute difference among violations: 268.2
Max relative difference among violations: 22.81
ACTUAL: array([-15.41  ,  14.48  ,  13.016 ,   7.516 ,  -2.883 ,   7.613 ,
-5.42  , -10.67  ,   8.65  ,  -2.967 ,  -8.42  ,   4.594 ,
-7.918 ,  -2.004 , -15.5   ,   8.164 ,  17.48  ,   1.361 ,...
DESIRED: array([-8.1875e+01,  1.5012e+02, -3.4062e+01,  1.2962e+02,  1.3220e-01,
-2.0862e+02, -8.0812e+01, -3.8438e+01,  9.0875e+01,  5.1500e+01,
-2.2500e+02, -1.2367e+01,  1.9312e+01,  1.1273e+01,  8.9062e+01,...
2025-04-27 04:54:12.321276 test begin: paddle.sum(Tensor([168, 57600],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([168, 57600],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 168 / 168 (100%)
Max absolute difference among violations: 190.2
Max relative difference among violations: 38.16
ACTUAL: array([  3.701 ,  -3.012 , -16.34  ,   0.539 ,  23.64  ,   5.785 ,
13.234 ,   8.98  ,  -7.87  ,  -6.82  ,   6.418 ,  -1.223 ,
6.137 ,   8.555 ,  -0.394 ,  -6.316 ,  -3.793 ,  -0.9575,...
DESIRED: array([ -79.8   ,   -7.08  ,  -60.38  ,  -62.94  ,   35.1   ,   66.25  ,
13.67  ,  -81.5   ,  -17.12  ,  -91.1   , -104.8   , -122.8   ,
6.43  ,  171.1   ,  -11.69  , -131.9   ,  -10.875 ,  -62.75  ,...
2025-04-27 04:54:13.656983 test begin: paddle.sum(Tensor([168, 60800],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([168, 60800],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 168 / 168 (100%)
Max absolute difference among violations: 193.5
Max relative difference among violations: 17.56
ACTUAL: array([ 5.8984e+00,  5.2734e-01, -1.5016e+01,  1.8859e+01,  1.1383e+01,
-6.8164e+00,  6.7305e+00, -8.1016e+00,  1.6577e-01, -5.7969e+00,
2.2562e+01,  1.6797e+01, -7.7500e+00,  7.6094e+00,  5.7178e-01,...
DESIRED: array([   3.389,   49.78 ,  -19.77 ,   57.84 ,  -77.5  ,  -65.4  ,
-84.25 , -140.6  ,   58.25 ,  -58.94 , -116.44 ,  125.8  ,
-90.3  ,  -82.4  ,  -54.1  ,   -5.27 ,  -26.84 ,   35.78 ,...
2025-04-27 04:54:14.963098 test begin: paddle.sum(Tensor([168, 73984],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([168, 73984],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 168 / 168 (100%)
Max absolute difference among violations: 230.4
Max relative difference among violations: 30.72
ACTUAL: array([ -4.56  ,  11.74  ,  -1.136 ,  -3.66  ,  -9.26  , -13.    ,
15.25  ,   7.688 ,  -6.266 ,  10.26  ,  -8.17  ,  11.35  ,
-9.16  ,  -0.3906, -11.74  ,   8.516 ,   2.873 ,  14.31  ,...
DESIRED: array([-108.3   ,   -7.844 ,   87.56  , -135.    ,  -15.65  ,   42.06  ,
9.84  ,  -55.4   ,  -15.17  ,  -11.41  , -161.4   ,  -42.53  ,
-61.5   ,   21.14  ,   20.12  ,  -81.1   ,   59.25  ,  154.9   ,...
2025-04-27 04:54:16.464294 test begin: paddle.sum(Tensor([168, 82688],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([168, 82688],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 168 / 168 (100%)
Max absolute difference among violations: 281.5
Max relative difference among violations: 24.53
ACTUAL: array([ 14.29  ,   4.08  ,  11.445 ,   0.6416,   0.3008,   2.82  ,
-2.172 ,  -0.8633,   6.4   , -12.    ,  -2.65  ,   1.289 ,
-2.348 , -14.92  ,   1.2295,  -7.98  ,   2.568 ,   1.841 ,...
DESIRED: array([ 100.3   ,   31.    ,   89.1   ,  -44.75  ,   23.48  , -105.75  ,
29.28  ,   22.38  ,   62.9   ,  -10.53  ,   -7.02  , -118.56  ,
24.97  ,  -66.6   ,  -90.5   ,   14.21  ,   84.8   , -167.2   ,...
2025-04-27 04:54:17.987429 test begin: paddle.sum(Tensor([168, 92416],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([168, 92416],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 168 / 168 (100%)
Max absolute difference among violations: 248.1
Max relative difference among violations: 188.9
ACTUAL: array([-1.3312e+01,  3.1738e+00, -8.8203e+00, -1.5107e+00,  4.5586e+00,
-3.4453e+00,  1.2055e+01,  5.8545e-01, -1.3812e+01, -2.1836e+00,
4.4688e+00,  2.7312e+01, -1.0969e+01, -2.2078e+01, -5.2695e+00,...
DESIRED: array([-1.6844e+01,  2.5609e+01,  8.4125e+01,  4.3219e+01, -8.9250e+01,
-6.8812e+01,  4.3531e+01, -1.6984e+01, -7.6000e+01, -2.2188e+02,
-1.0356e+02,  2.2031e+00, -8.4766e+00, -1.7112e+02,  1.0994e+02,...
2025-04-27 04:54:19.907038 test begin: paddle.sum(Tensor([168, 97280],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([168, 97280],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 168 / 168 (100%)
Max absolute difference among violations: 219.6
Max relative difference among violations: 9.445
ACTUAL: array([  3.209 ,   2.873 , -11.57  ,   1.854 ,   2.709 ,  -0.965 ,
2.033 , -16.58  ,   2.941 , -26.75  ,  -5.05  ,  -2.365 ,
-13.81  ,  -2.969 ,  15.06  ,  -3.068 ,  21.34  , -12.71  ,...
DESIRED: array([  25.73 ,  -67.3  ,  118.75 ,  -15.7  , -134.6  ,   32.16 ,
14.12 ,   -6.555,   -8.234,  -61.84 ,  -33.12 ,  -44.5  ,
-34.22 ,  -81.5  ,  147.9  ,  119.5  ,   72.5  ,  -35.06 ,...
2025-04-27 04:54:26.495292 test begin: paddle.sum(Tensor([172, 102144],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([172, 102144],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 172 / 172 (100%)
Max absolute difference among violations: 231.9
Max relative difference among violations: 213.9
ACTUAL: array([ 14.14   ,  16.05   ,   8.445  ,  -4.883  ,  -8.516  , -13.2    ,
-3.268  ,  -6.926  ,  -2.174  ,  -4.117  ,  -9.17   ,  19.7    ,
-9.58   ,  -6.07   ,  -8.24   , -18.78   ,  -2.775  ,  -5.395  ,...
DESIRED: array([ 2.2234e+01,  2.8281e+01,  4.7812e+01, -4.2125e+01, -2.6387e+00,
-6.1432e-02, -1.0762e+02, -4.3688e+01, -3.2625e+01, -1.2644e+02,
3.4906e+01, -6.1094e+01, -2.1504e+00, -6.8375e+01,  3.9414e+00,...
2025-04-27 04:54:37.446028 test begin: paddle.sum(Tensor([172, 54400],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([172, 54400],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 172 / 172 (100%)
Max absolute difference among violations: 213.2
Max relative difference among violations: 17.5
ACTUAL: array([ 2.1156e+01,  1.2289e+01,  1.3930e+01, -5.8047e+00,  1.3461e+01,
5.6602e+00, -2.7305e+00, -1.6875e+01,  7.5664e+00, -1.3117e+01,
3.1445e+00, -2.7422e+01, -8.4609e+00, -1.5742e+00, -6.6836e+00,...
DESIRED: array([  72.8   ,   63.84  ,   79.8   ,   14.25  ,  -37.5   ,  122.9   ,
15.09  ,   65.2   ,   34.2   , -158.8   , -101.25  ,  -78.8   ,
122.3   ,   11.27  ,  -35.9   ,   75.5   ,   47.03  ,    4.35  ,...
2025-04-27 04:54:38.634271 test begin: paddle.sum(Tensor([172, 60800],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([172, 60800],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 172 / 172 (100%)
Max absolute difference among violations: 254.4
Max relative difference among violations: 1090.
ACTUAL: array([ -7.797  , -15.58   ,  -5.69   ,   0.3171 ,   6.49   ,  10.01   ,
3.16   ,  -0.686  ,  26.28   ,  -5.21   ,  15.85   ,  -4.902  ,
4.434  ,   1.128  ,   0.4626 ,  -5.895  ,  -9.66   , -12.63   ,...
DESIRED: array([ 6.3156e+01, -1.6350e+02, -2.5922e+01, -1.3012e+02,  2.7109e+01,
-8.5812e+01, -1.6984e+01,  6.8312e+01,  7.6062e+01,  3.8906e+01,
1.0969e+02, -2.4812e+01, -2.5000e+02, -1.2450e+02, -4.6531e+01,...
2025-04-27 04:54:39.911587 test begin: paddle.sum(Tensor([172, 67200],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([172, 67200],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 172 / 172 (100%)
Max absolute difference among violations: 204.8
Max relative difference among violations: 21.06
ACTUAL: array([ 3.7422e+00,  2.1641e+00,  1.3164e+01, -3.2012e+00, -1.1748e+00,
1.3906e+01,  1.3422e+01,  2.8203e+00, -1.2664e+01, -3.5469e+01,
-2.5586e+00,  9.8906e+00,  2.9609e+00,  5.5000e+00, -7.4180e+00,...
DESIRED: array([  65.06  ,  -25.22  ,  126.6   ,  103.75  ,  -64.6   ,   -7.65  ,
-32.62  ,  -66.5   ,   19.69  , -187.1   ,   64.5   ,  -74.44  ,
26.36  ,  -62.72  ,   15.58  ,  -12.266 ,  100.5   , -157.    ,...
2025-04-27 04:54:41.379523 test begin: paddle.sum(Tensor([172, 77824],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([172, 77824],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 172 / 172 (100%)
Max absolute difference among violations: 197.9
Max relative difference among violations: 17.11
ACTUAL: array([-1.6547e+01,  1.3213e+00,  3.9746e+00, -7.2852e+00, -9.9922e+00,
1.1664e+01, -4.9072e-02,  4.7812e+00,  1.2148e+00,  8.2344e+00,
1.7484e+01,  1.3344e+01, -4.9258e+00, -8.0781e+00, -1.0859e+01,...
DESIRED: array([  49.28  ,  -26.31  ,   50.62  ,  -36.7   ,   21.05  ,  -82.44  ,
17.42  , -105.4   ,  114.5   ,  102.5   ,  -12.81  , -108.56  ,
-53.12  ,  -69.6   , -102.06  ,  -80.9   ,   -4.535 ,  112.75  ,...
2025-04-27 04:54:42.968125 test begin: paddle.sum(Tensor([172, 80256],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([172, 80256],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 171 / 172 (99.4%)
Max absolute difference among violations: 207.5
Max relative difference among violations: 78.94
ACTUAL: array([ 1.0562e+01,  7.5859e+00, -1.6453e+01,  3.6699e+00, -7.9102e+00,
8.4766e+00, -9.8984e+00,  1.7812e+01, -7.4375e+00, -1.5508e+01,
-9.2422e+00,  6.6719e+00,  9.9531e+00, -1.1883e+01,  4.0039e+00,...
DESIRED: array([-3.0328e+01,  9.1438e+01, -1.0369e+02,  8.3688e+01, -6.5625e+01,
2.6922e+01, -7.5688e+01, -2.4547e+01, -1.0881e+02, -1.2273e+01,
1.1038e+02,  1.5000e+02, -1.4703e+01, -1.1444e+02,  8.2688e+01,...
2025-04-27 04:54:44.599318 test begin: paddle.sum(Tensor([172, 80512],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([172, 80512],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 172 / 172 (100%)
Max absolute difference among violations: 224.8
Max relative difference among violations: 35.
ACTUAL: array([ -0.999 , -23.48  ,   2.736 ,  12.445 , -18.05  , -13.07  ,
-7.39  ,  -5.51  ,  -8.266 ,   0.43  ,  11.48  ,  12.58  ,
-6.375 ,   3.691 ,  -3.715 ,   4.457 ,  -0.367 ,   1.875 ,...
DESIRED: array([ -59.6  ,  100.56 ,  127.06 ,  -50.97 ,   30.53 ,  -20.33 ,
69.8  ,  -26.33 ,   99.8  ,  -21.78 ,  127.1  ,   -7.445,
-145.6  ,   78.2  ,  -51.7  ,  -28.2  ,  -67.3  ,   13.516,...
2025-04-27 04:54:46.267013 test begin: paddle.sum(Tensor([172, 82688],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([172, 82688],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 172 / 172 (100%)
Max absolute difference among violations: 240.6
Max relative difference among violations: 38.06
ACTUAL: array([-14.03   ,  -4.914  ,   4.316  ,   4.223  ,  -8.1    ,   8.59   ,
-11.71   ,   3.9    , -10.984  ,   6.367  , -16.28   ,  -3.74   ,
-9.586  ,  -3.828  ,  -1.235  ,  -8.87   ,  13.73   ,  -6.41   ,...
DESIRED: array([-124.8   ,  -19.02  ,  226.5   ,   21.22  ,  -65.9   ,  -89.56  ,
-39.72  ,  -74.8   ,  -68.1   , -176.5   , -115.1   ,   49.03  ,
-2.998 ,  108.3   , -108.9   ,   63.84  ,  105.44  , -174.8   ,...
2025-04-27 04:54:47.873154 test begin: paddle.sum(Tensor([172, 92416],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([172, 92416],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 172 / 172 (100%)
Max absolute difference among violations: 207.4
Max relative difference among violations: 72.06
ACTUAL: array([-3.1094e+00, -2.4316e+00, -6.9375e+00,  3.2734e+00,  8.9453e+00,
-1.6844e+01,  1.0617e+01, -2.5391e+00, -9.3281e+00, -6.9648e+00,
4.1211e+00, -2.2547e+01, -2.7031e+01,  1.6035e+00,  2.6016e+01,...
DESIRED: array([-7.5188e+01, -5.0906e+01, -6.1094e+01, -1.2338e+02,  8.2250e+01,
-7.0039e+00,  6.1781e+01,  8.8812e+01, -7.5625e+01, -1.8359e+01,
2.4547e+01, -2.0338e+02,  5.5906e+01, -1.7062e+02,  9.2938e+01,...
2025-04-27 04:55:05.672986 test begin: paddle.sum(Tensor([176, 60800],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([176, 60800],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 175 / 176 (99.4%)
Max absolute difference among violations: 231.2
Max relative difference among violations: 23.83
ACTUAL: array([-9.8267e-03,  8.5703e+00, -3.8262e+00,  9.0547e+00,  8.6797e+00,
-2.0332e+00, -3.6738e+00,  2.6074e-01,  8.3125e+00,  1.5734e+01,
1.1383e+01, -8.6094e+00, -7.7393e-01,  3.6289e+00,  5.5625e+00,...
DESIRED: array([ -23.98  ,  -13.28  ,   -1.259 ,  -29.73  ,   12.12  ,   33.44  ,
22.83  ,   97.44  ,  -55.97  ,   89.25  ,   52.4   ,  -43.6   ,
-90.5   ,  -19.89  ,  -40.78  ,  -37.56  ,   55.1   ,   53.38  ,...
2025-04-27 04:55:06.940475 test begin: paddle.sum(Tensor([176, 62400],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([176, 62400],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 176 / 176 (100%)
Max absolute difference among violations: 197.
Max relative difference among violations: 8.85
ACTUAL: array([-9.7188e+00,  8.8125e+00, -4.3066e-01,  5.8672e+00,  3.0016e+01,
-1.0312e+01, -1.1125e+01, -8.7109e+00, -1.8125e+01,  1.1062e+01,
2.5527e+00, -1.1273e+01, -4.6641e+00, -9.9062e+00,  1.7531e+01,...
DESIRED: array([ -13.46 ,  -26.75 ,  -68.6  ,  -23.53 ,   -8.375,  -62.16 ,
-90.06 ,   35.78 ,  -69.94 ,  158.4  ,  -22.94 ,  -87.06 ,
53.4  , -114.4  ,   49.5  ,  -55.06 ,  -35.78 ,    1.136,...
2025-04-27 04:55:08.291181 test begin: paddle.sum(Tensor([176, 69632],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([176, 69632],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 175 / 176 (99.4%)
Max absolute difference among violations: 178.8
Max relative difference among violations: 6.945
ACTUAL: array([-3.3203e+00, -1.6094e+01,  2.0859e+01,  1.6594e+01, -1.6594e+01,
-1.3916e+00,  8.1328e+00, -1.7021e+00, -8.5312e+00,  1.3550e-02,
1.0016e+01,  2.0352e+00, -9.5234e+00, -3.7559e+00, -1.7016e+01,...
DESIRED: array([ -43.53 ,   10.125,  -25.72 ,   38.56 ,   19.94 ,  -14.96 ,
42.2  , -142.1  ,  -64.56 ,  -48.5  ,   22.48 ,   48.88 ,
12.9  ,  -72.75 ,   51.9  , -144.1  , -154.   , -140.5  ,...
2025-04-27 04:55:09.749960 test begin: paddle.sum(Tensor([176, 74240],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([176, 74240],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 176 / 176 (100%)
Max absolute difference among violations: 207.8
Max relative difference among violations: 35.38
ACTUAL: array([ -8.266  ,  -0.8706 , -25.9    , -11.79   ,  14.875  ,  10.8    ,
6.652  ,  -8.336  ,  -0.3962 ,   9.41   ,   3.393  ,   3.592  ,
-0.2795 ,  -2.979  ,  23.67   , -11.25   ,   3.158  , -11.61   ,...
DESIRED: array([-6.9750e+01,  7.6406e+00, -2.1862e+02, -1.1266e+01, -5.3344e+01,
5.6348e-01, -4.9375e+01,  9.1375e+01, -5.7375e+01, -1.5320e+01,
1.0594e+01, -5.2969e+01, -4.3500e+01,  1.8438e+01, -5.3531e+01,...
2025-04-27 04:55:11.247610 test begin: paddle.sum(Tensor([176, 82688],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([176, 82688],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 176 / 176 (100%)
Max absolute difference among violations: 213.1
Max relative difference among violations: 57.66
ACTUAL: array([-18.9    ,  -3.77   , -14.125  , -18.23   ,  -0.03198,  -7.965  ,
25.47   ,   9.58   ,   9.08   ,   3.223  ,  -3.902  ,  -9.75   ,
-14.3    , -19.4    ,  11.1    ,   6.18   ,  13.45   ,  -8.69   ,...
DESIRED: array([   7.27  ,  -51.4   ,  -29.27  ,  114.9   ,    5.855 ,  -78.7   ,
96.3   ,   58.7   ,  -10.516 ,  -47.12  ,   -8.9   , -104.44  ,
-75.94  , -108.56  ,  122.8   ,   30.38  ,  -56.72  ,  -65.2   ,...
2025-04-27 04:55:12.827915 test begin: paddle.sum(Tensor([176, 83328],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([176, 83328],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 176 / 176 (100%)
Max absolute difference among violations: 210.2
Max relative difference among violations: 9.
ACTUAL: array([ 15.3   ,   1.442 ,  10.445 , -15.664 , -18.    ,  28.25  ,
-4.543 ,  16.03  ,  -1.164 ,   0.1755,   2.682 ,   5.85  ,
6.574 ,  -9.08  ,  -2.133 ,   6.902 , -21.83  ,  -8.37  ,...
DESIRED: array([  28.61  ,  -62.9   ,   55.12  ,    9.99  ,  192.2   ,  -16.05  ,
21.81  ,   47.8   ,  -68.25  ,   31.92  ,  -57.66  ,  -67.94  ,
52.66  ,   82.7   , -108.1   ,   57.44  ,   13.34  ,   27.8   ,...
2025-04-27 04:55:14.537229 test begin: paddle.sum(Tensor([176, 92416],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([176, 92416],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 176 / 176 (100%)
Max absolute difference among violations: 231.1
Max relative difference among violations: 36.2
ACTUAL: array([ -5.688  , -11.9    , -12.2    ,   2.895  ,  19.27   ,  16.94   ,
-10.65   ,   0.918  ,  -2.592  ,   5.234  ,  -1.199  ,  19.06   ,
18.95   ,   3.105  ,   0.629  ,  22.9    ,   7.617  ,   3.408  ,...
DESIRED: array([ -60.28  ,   36.78  , -114.4   ,   38.72  ,   15.92  ,   33.6   ,
67.94  ,  155.    ,  110.94  , -124.1   , -113.    ,  110.    ,
-18.3   ,   70.7   ,   88.56  ,  -36.97  ,   85.5   ,  131.1   ,...
2025-04-27 04:55:16.390828 test begin: paddle.sum(Tensor([176, 94848],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([176, 94848],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 176 / 176 (100%)
Max absolute difference among violations: 241.4
Max relative difference among violations: 41.56
ACTUAL: array([ 6.1602e+00,  6.4141e+00, -1.2898e+01, -1.1367e+01,  9.1553e-01,
-1.3891e+01,  1.1008e+01, -1.8646e-02,  7.1875e+00,  1.1617e+01,
-4.7773e+00, -3.3086e+00, -6.9180e+00,  1.5383e+01,  1.2883e+01,...
DESIRED: array([ 2.2219e+01,  1.1762e+02, -1.2544e+02,  1.1606e+02, -1.8703e+01,
1.4650e+02, -6.9750e+01,  1.8588e+02, -2.2344e+01, -3.1859e+01,
4.3000e+01,  1.8359e+01, -2.3656e+01,  5.8094e+01,  1.5900e+02,...
2025-04-27 04:55:18.307581 test begin: paddle.sum(Tensor([176, 99712],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([176, 99712],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 176 / 176 (100%)
Max absolute difference among violations: 238.2
Max relative difference among violations: 11.85
ACTUAL: array([-6.4766e+00, -1.9859e+01, -7.3125e+00, -8.0625e+00, -2.1547e+01,
-2.4172e+01, -7.7812e+00,  8.2812e+00, -6.8789e+00,  8.9688e+00,
-1.7246e+00, -5.3828e+00, -2.4438e-01,  1.9697e+00,  1.7766e+01,...
DESIRED: array([-152.2  ,  -70.1  ,  174.9  ,  127.6  , -111.1  ,   14.27 ,
78.7  ,   -6.953,  -59.75 ,  109.25 ,  -75.75 ,  -18.72 ,
87.7  ,  115.06 ,  -39.47 ,  -14.086, -218.1  ,  -48.06 ,...
2025-04-27 04:55:24.834594 test begin: paddle.sum(Tensor([180, 102144],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([180, 102144],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 180 / 180 (100%)
Max absolute difference among violations: 288.5
Max relative difference among violations: 97.25
ACTUAL: array([-7.7383e+00,  1.0664e+01, -8.9141e+00,  4.2383e+00,  1.5400e+00,
-1.6016e+01,  7.0195e+00, -8.5010e-01,  4.1758e+00, -3.7676e+00,
3.3711e+00,  4.1089e-01, -9.6953e+00, -1.7438e+01, -1.5688e+01,...
DESIRED: array([-3.5031e+01,  2.1922e+01, -6.2219e+01,  6.6688e+01, -1.3612e+02,
-1.6525e+02,  3.5957e+00, -1.8750e+02, -2.9859e+01,  1.8762e+02,
-2.0250e+01, -9.0312e+00, -5.5812e+01, -3.7531e+01, -1.1450e+02,...
2025-04-27 04:55:37.669332 test begin: paddle.sum(Tensor([180, 54400],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([180, 54400],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 180 / 180 (100%)
Max absolute difference among violations: 188.
Max relative difference among violations: 6.277
ACTUAL: array([-16.6    , -12.914  ,  -9.53   ,   4.06   ,  -0.0371 ,  15.68   ,
15.27   , -13.02   ,  -3.365  ,  -5.535  ,  10.875  ,  -5.23   ,
20.77   ,   4.043  ,   8.12   ,   6.77   ,  -8.52   ,   3.21   ,...
DESIRED: array([-101.1  ,  -32.97 ,   28.53 ,   25.12 ,  112.   ,  125.6  ,
-15.84 , -124.1  ,    4.812,  -10.805,  162.8  ,  -35.2  ,
-6.754,   -9.5  ,   44.22 ,   60.9  , -104.5  ,   -8.266,...
2025-04-27 04:55:38.798872 test begin: paddle.sum(Tensor([180, 60800],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([180, 60800],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 179 / 180 (99.4%)
Max absolute difference among violations: 211.6
Max relative difference among violations: 29.36
ACTUAL: array([ -1.378 ,   2.336 ,  -3.732 ,  -7.72  ,   4.152 ,   0.0476,
0.6016, -27.27  ,  27.56  ,  18.73  ,  18.48  ,  12.24  ,
14.1   ,  18.66  ,   7.562 , -28.48  ,  20.81  ,  -1.788 ,...
DESIRED: array([ 3.5156e+01, -6.7438e+01,  4.2938e+01,  7.9000e+01, -1.3550e+02,
9.7125e+01, -1.0600e+02, -1.1312e+02,  1.0812e+02,  1.3062e+02,
-3.8250e+01, -4.5844e+01,  4.8594e+01,  5.1031e+01,  1.2456e+02,...
2025-04-27 04:55:39.939960 test begin: paddle.sum(Tensor([180, 64000],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([180, 64000],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 180 / 180 (100%)
Max absolute difference among violations: 189.4
Max relative difference among violations: 28.36
ACTUAL: array([-3.0484e+01,  3.8809e+00, -8.0273e-01, -1.6625e+01,  6.9062e+00,
-1.3656e+01, -7.3086e+00, -8.4033e-01, -1.1694e-01, -4.5039e+00,
1.8066e+00,  7.9180e+00, -2.2203e+01, -1.9031e+01, -1.7562e+01,...
DESIRED: array([ 7.0375e+01, -1.4612e+02, -7.0562e+01,  2.7578e+00,  9.6625e+01,
-6.3688e+01, -3.9812e+01, -7.5000e+01,  8.3125e+00,  2.3141e+01,
6.5688e+01, -6.2500e+01, -4.4656e+01,  2.5203e+01, -3.8844e+01,...
2025-04-27 04:55:41.171575 test begin: paddle.sum(Tensor([180, 80256],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([180, 80256],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 180 / 180 (100%)
Max absolute difference among violations: 197.
Max relative difference among violations: 98.4
ACTUAL: array([  1.002 , -10.84  ,  -0.567 ,  -3.996 , -19.5   ,  22.84  ,
-19.92  ,  -5.043 ,   2.25  ,  -1.754 ,  -8.29  ,   3.77  ,
-6.055 , -18.25  , -14.48  ,  -4.766 ,  10.375 , -14.055 ,...
DESIRED: array([ 8.3812e+01,  1.0638e+02,  3.4000e+01, -2.4500e+01,  1.1731e+02,
1.3325e+02, -5.9781e+01,  3.6219e+01,  1.2156e+02, -3.2031e+01,
7.2500e+01,  8.4375e+01, -5.7750e+01, -5.8656e+01, -4.2906e+01,...
2025-04-27 04:55:42.648119 test begin: paddle.sum(Tensor([180, 82688],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([180, 82688],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 180 / 180 (100%)
Max absolute difference among violations: 223.9
Max relative difference among violations: 11.
ACTUAL: array([-2.7773e+00,  2.4648e+00, -7.1875e+00, -2.5371e+00, -5.4180e+00,
-1.5648e+01,  9.2578e+00,  2.7559e+00,  8.4844e+00,  9.5859e+00,
1.3430e+01,  1.0859e+01, -1.5918e+00, -2.0094e+01, -7.2500e+00,...
DESIRED: array([  16.27  ,    0.804 ,  -30.28  ,   19.98  , -110.56  ,  -75.94  ,
73.2   ,   -5.77  ,   40.06  ,  102.25  ,  107.9   ,   99.1   ,
119.9   ,  -99.06  ,  -66.44  ,   45.94  ,  196.6   ,    7.562 ,...
2025-04-27 04:55:44.292992 test begin: paddle.sum(Tensor([180, 83328],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([180, 83328],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 180 / 180 (100%)
Max absolute difference among violations: 194.1
Max relative difference among violations: 79.06
ACTUAL: array([ 25.53  ,  -1.856 , -30.84  ,   4.19  ,   6.137 ,  -4.59  ,
7.41  , -14.125 ,  -4.535 ,  -7.41  ,  -2.785 , -19.17  ,
9.56  ,  15.836 ,  13.32  ,   3.766 ,   3.176 ,   5.316 ,...
DESIRED: array([ 7.3562e+01, -2.6281e+01, -5.8344e+01, -1.0742e+01,  4.6188e+01,
-3.2562e+01, -9.4910e-02, -1.6300e+02,  8.8625e+01,  7.5438e+01,
1.8266e+01, -1.2207e+00,  4.4625e+01, -4.5469e+01, -2.6172e+01,...
2025-04-27 04:55:45.901164 test begin: paddle.sum(Tensor([180, 91392],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([180, 91392],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 180 / 180 (100%)
Max absolute difference among violations: 271.
Max relative difference among violations: 11.94
ACTUAL: array([  1.669 ,  26.38  ,  -1.575 ,   3.541 ,  -4.36  ,  15.13  ,
-8.49  ,  -6.97  ,   8.83  ,  -9.15  ,  -0.4058,  15.33  ,
18.    ,  -7.75  , -14.03  ,  -5.285 ,  -0.69  ,  -8.75  ,...
DESIRED: array([  85.1  ,   86.3  , -152.8  ,   23.53 ,  -18.   ,  115.5  ,
99.75 ,  131.1  ,  -53.8  ,   62.5  ,  213.9  ,  -21.55 ,
47.6  ,  -74.   ,   34.62 ,  -16.27 ,  114.56 ,  -37.72 ,...
2025-04-27 04:55:47.531607 test begin: paddle.sum(Tensor([180, 92416],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([180, 92416],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 179 / 180 (99.4%)
Max absolute difference among violations: 251.9
Max relative difference among violations: 246.1
ACTUAL: array([ 3.1969e+01,  4.9121e-01, -4.2500e+00, -1.1445e+01,  6.1602e+00,
-1.0898e+01,  2.2974e-01, -1.6143e+00,  1.4586e+01, -6.0117e+00,
-2.4000e+01, -1.7344e+01, -1.3680e+01, -1.3672e+01,  3.6172e+00,...
DESIRED: array([-5.1844e+01, -5.0188e+01, -3.5188e+01, -1.5150e+02, -6.6000e+01,
1.4062e+02, -6.9062e+00,  1.0319e+02,  5.2156e+01,  2.6234e+01,
6.9625e+01,  3.8750e+01, -1.3425e+02, -2.4781e+01, -3.5062e+01,...
2025-04-27 04:56:02.213557 test begin: paddle.sum(Tensor([184, 54400],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([184, 54400],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 184 / 184 (100%)
Max absolute difference among violations: 179.6
Max relative difference among violations: 32.44
ACTUAL: array([-1.8076e+00,  1.0367e+01,  1.1062e+01,  2.4961e+00,  3.0969e+01,
-1.3273e+01,  1.9641e+01, -1.1816e-01, -6.9492e+00,  8.7500e+00,
-2.7754e+00,  5.2031e+00,  9.7656e+00,  1.3422e+01, -4.9219e+00,...
DESIRED: array([ -50.62  ,  155.2   ,   28.28  ,   17.75  ,   75.4   ,  -34.8   ,
52.72  ,   34.88  ,   -3.047 ,   39.38  ,   -0.7837,  121.56  ,
20.77  ,  -63.84  ,   49.44  ,  182.9   ,   -2.72  ,  -32.75  ,...
2025-04-27 04:56:03.429470 test begin: paddle.sum(Tensor([184, 60800],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([184, 60800],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 184 / 184 (100%)
Max absolute difference among violations: 188.9
Max relative difference among violations: 358.5
ACTUAL: array([-1.7578e+01,  1.1281e+01, -8.4609e+00,  1.1461e+01, -5.4883e+00,
5.4346e-01,  3.4668e+00,  1.2803e+00, -1.3648e+01, -8.4766e+00,
5.1328e+00,  6.5078e+00,  9.4062e+00,  4.5625e+00,  4.8203e+00,...
DESIRED: array([ 1.1633e+01,  6.8125e+01,  3.6312e+01,  4.4875e+01, -7.4188e+01,
2.9750e+01, -5.0781e+00, -2.6562e+01,  1.7525e+02,  8.1125e+01,
-1.1336e+01, -3.5875e+01, -2.6306e-02, -1.0900e+02,  2.3531e+01,...
2025-04-27 04:56:04.787971 test begin: paddle.sum(Tensor([184, 65600],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([184, 65600],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 183 / 184 (99.5%)
Max absolute difference among violations: 208.8
Max relative difference among violations: 19.1
ACTUAL: array([-3.9062e+00, -1.8916e+00, -2.4297e+00,  1.8953e+01, -1.3500e+01,
-8.0469e+00, -1.7562e+01,  7.5547e+00,  1.6375e+01,  6.9219e+00,
-1.1188e+01, -1.4750e+01, -2.2125e+01,  5.8125e+00, -1.2156e+01,...
DESIRED: array([ -46.7   ,  -33.97  ,  -62.94  ,   23.14  ,  -42.44  ,   60.5   ,
91.94  ,  173.6   ,  117.8   ,   97.25  , -127.44  ,  -51.    ,
8.3   ,   93.3   ,  -89.75  ,   50.03  ,  -70.3   ,  -50.3   ,...
2025-04-27 04:56:06.144173 test begin: paddle.sum(Tensor([184, 67200],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([184, 67200],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 184 / 184 (100%)
Max absolute difference among violations: 231.4
Max relative difference among violations: 12.9
ACTUAL: array([ 9.8359e+00,  1.6387e+00, -1.9250e+01,  3.8027e+00,  1.7959e+00,
-2.8828e+00, -1.5836e+01,  5.5762e-01,  1.7871e-01,  1.3281e+01,
-1.5172e+01,  9.4922e+00,  2.0156e+00,  1.0570e+01,  1.6172e+01,...
DESIRED: array([  17.92  ,  -96.1   ,  -28.16  ,  211.8   ,   64.7   ,  -17.8   ,
48.03  ,   65.94  ,   77.94  ,    8.71  ,  -45.97  ,  -79.94  ,
58.9   ,  135.5   ,   78.06  ,  -60.1   ,  -67.3   ,   11.78  ,...
2025-04-27 04:56:07.683732 test begin: paddle.sum(Tensor([184, 82688],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([184, 82688],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 184 / 184 (100%)
Max absolute difference among violations: 253.4
Max relative difference among violations: 30.67
ACTUAL: array([ -9.8   ,  -9.055 , -14.68  ,   5.33  ,  21.97  , -22.77  ,
20.92  ,  22.95  ,  -9.06  ,   7.09  ,  14.09  ,  -5.83  ,
21.19  ,  -4.55  ,  -6.586 ,  17.83  , -14.4   ,   7.473 ,...
DESIRED: array([ -71.3   ,  -48.8   ,    9.15  ,  -19.69  ,  126.25  ,  -23.12  ,
157.6   ,  -68.9   ,   99.2   ,   73.06  ,   92.3   ,  -22.72  ,
28.16  , -156.9   , -123.    ,   58.44  ,   51.94  ,   17.42  ,...
2025-04-27 04:56:09.432105 test begin: paddle.sum(Tensor([184, 92416],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([184, 92416],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 184 / 184 (100%)
Max absolute difference among violations: 261.
Max relative difference among violations: 123.3
ACTUAL: array([-2.2217e-02,  1.8531e+01, -8.1406e+00,  2.0557e-01, -5.6797e+00,
4.3359e+00, -3.4961e+00,  2.4160e+00,  1.0844e+01, -1.9590e+00,
-1.0875e+01,  6.0977e+00,  3.1465e+00, -8.1328e+00,  4.0625e+00,...
DESIRED: array([-1.0288e+02,  1.7100e+02,  1.9862e+02, -5.2250e+01, -1.1894e+02,
-2.1281e+01,  4.6000e+01, -7.6812e+01,  4.3594e+01, -8.5625e+00,
-1.6450e+02,  1.2859e+01,  2.4812e+01, -7.9562e+01,  1.3412e+02,...
2025-04-27 04:56:11.213519 test begin: paddle.sum(Tensor([184, 99456],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([184, 99456],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 184 / 184 (100%)
Max absolute difference among violations: 245.
Max relative difference among violations: 8128.
ACTUAL: array([  0.3938 ,   7.395  ,  -7.3    ,  -9.36   ,  -0.4102 ,  11.46   ,
-14.15   ,   2.64   ,   0.6694 ,  10.766  , -13.77   ,   3.246  ,
-10.84   ,  -0.686  ,  -2.234  ,   0.7217 , -22.12   , -18.62   ,...
DESIRED: array([-7.0875e+01,  6.3844e+01, -5.2375e+01, -1.7462e+02, -2.4719e+01,
-5.1000e+01, -1.3362e+02,  1.7981e-01,  5.5531e+01,  1.1562e+02,
-7.0875e+01,  1.0944e+02, -1.5738e+02, -8.0000e+01,  1.1231e+02,...
2025-04-27 04:56:18.113452 test begin: paddle.sum(Tensor([188, 102144],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([188, 102144],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 187 / 188 (99.5%)
Max absolute difference among violations: 283.8
Max relative difference among violations: 9.695
ACTUAL: array([ -1.956  , -10.63   ,  -6.387  ,  -1.66   ,  -8.46   ,   5.67   ,
-10.49   ,  -1.634  ,  -1.952  ,  -3.01   ,  -4.445  ,  10.75   ,
-3.64   ,  -2.156  ,  -5.84   ,  10.95   ,   3.676  ,   9.32   ,...
DESIRED: array([-136.4   , -104.6   ,    6.832 ,   64.75  ,  -59.12  ,  -51.3   ,
-25.62  ,  -33.84  ,  -28.78  ,   48.94  ,  230.4   ,    1.615 ,
118.1   ,   91.75  , -189.8   ,  -82.75  ,  -48.94  ,  -64.75  ,...
2025-04-27 04:56:29.898521 test begin: paddle.sum(Tensor([188, 60800],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([188, 60800],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 188 / 188 (100%)
Max absolute difference among violations: 179.6
Max relative difference among violations: 38.
ACTUAL: array([ 1.8591e-01, -1.1906e+01,  2.8198e-02,  5.2305e+00,  1.4531e+01,
-1.7484e+01, -5.8906e+00,  2.0000e+01,  1.9814e+00, -3.0703e+00,
2.5645e+00,  5.7891e+00,  1.3469e+01,  1.4336e+01, -2.8369e-01,...
DESIRED: array([ 2.1406e+01,  1.5414e+01,  8.3625e+01, -1.3762e+02,  1.6969e+01,
-5.2406e+01, -7.9375e+01,  1.3875e+02, -6.7000e+01,  7.4750e+01,
8.1438e+01, -8.8125e+01, -1.8109e+01,  1.0406e+02, -5.7625e+01,...
2025-04-27 04:56:31.361452 test begin: paddle.sum(Tensor([188, 67200],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([188, 67200],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 188 / 188 (100%)
Max absolute difference among violations: 252.6
Max relative difference among violations: 42.28
ACTUAL: array([-4.5000e+00,  3.3887e+00, -6.5625e+00, -1.5477e+01, -1.4500e+01,
3.0293e+00, -1.3008e+01,  1.7969e+01, -8.0469e+00,  3.9062e+00,
4.6367e+00, -2.7070e+00,  1.7953e+01,  6.0898e+00,  6.5039e+00,...
DESIRED: array([  27.7  ,    1.902,  -22.67 ,   34.75 ,  -41.3  ,  -24.89 ,
-41.6  ,   67.1  , -109.5  ,  -14.5  ,  -35.3  ,  -71.1  ,
-0.435, -246.5  ,   -4.35 ,   72.2  ,  -87.06 ,   27.94 ,...
2025-04-27 04:56:32.835990 test begin: paddle.sum(Tensor([188, 73984],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([188, 73984],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 188 / 188 (100%)
Max absolute difference among violations: 206.8
Max relative difference among violations: 63.88
ACTUAL: array([ 9.5859e+00, -6.6250e+00, -6.1523e+00,  4.7461e+00,  7.7031e+00,
8.8359e+00, -1.0367e+01,  3.2422e+00,  3.4746e+00,  9.3828e+00,
7.4180e+00, -9.3984e+00, -5.7344e+00,  1.1484e+01,  1.0828e+01,...
DESIRED: array([ 8.2000e+01,  3.7812e+01,  2.3969e+01,  1.3788e+02,  5.9656e+01,
3.4125e+01, -1.5312e+01, -6.3344e+01,  6.1156e+01,  9.6938e+01,
-1.5766e+01,  4.9000e+01, -1.4750e+02, -4.6844e+01,  5.5250e+01,...
2025-04-27 04:56:34.402560 test begin: paddle.sum(Tensor([188, 78336],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([188, 78336],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 188 / 188 (100%)
Max absolute difference among violations: 206.9
Max relative difference among violations: 76.7
ACTUAL: array([ -5.664  ,   5.45   ,  -1.625  , -17.12   ,   7.4    ,  15.77   ,
-18.03   , -16.6    ,   3.75   , -17.73   ,   2.648  ,  11.555  ,
10.016  ,  15.54   ,  12.2    ,  -4.125  ,  -4.758  ,   0.3499 ,...
DESIRED: array([-1.0019e+02, -8.2250e+01, -2.6484e+01, -1.8828e+00,  1.1438e+02,
-4.9219e+01, -8.1062e+01,  2.3703e+01, -1.6562e+01, -1.1544e+02,
-1.5984e+01, -2.2016e+01,  6.6438e+01,  9.9688e+01,  1.5242e+01,...
2025-04-27 04:56:36.094108 test begin: paddle.sum(Tensor([188, 82688],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([188, 82688],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 188 / 188 (100%)
Max absolute difference among violations: 277.8
Max relative difference among violations: 12.61
ACTUAL: array([-4.2734e+00, -4.0352e+00,  1.0609e+01,  2.3266e+01, -5.9648e+00,
-1.1401e-01, -1.2727e+01,  1.1664e+01, -1.7719e+01, -1.2430e+01,
7.4883e+00, -1.7754e+00,  1.1352e+01,  1.7441e+00, -3.9609e+00,...
DESIRED: array([ -26.12 ,   58.62 ,  -33.56 ,  -37.94 , -112.1  ,  109.6  ,
-133.1  ,  -10.96 ,  143.5  ,  -80.4  ,  218.   ,    4.79 ,
168.8  ,  -15.22 ,   92.9  ,  -86.7  ,   77.1  ,  -11.31 ,...
2025-04-27 04:56:37.852881 test begin: paddle.sum(Tensor([188, 91392],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([188, 91392],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 187 / 188 (99.5%)
Max absolute difference among violations: 230.2
Max relative difference among violations: 5.254
ACTUAL: array([ 1.0852e+01, -4.6055e+00, -2.3000e+01, -1.9883e+00,  7.4023e+00,
2.5820e+00, -1.3531e+01, -5.0312e+00,  3.3125e+00, -3.6348e+00,
-4.0156e+00,  1.1305e+01, -1.6162e+00,  4.6523e+00, -7.8008e+00,...
DESIRED: array([  48.3  ,   67.   , -221.8  ,  -58.53 , -163.   ,  -65.94 ,
-98.   ,  143.4  ,   18.86 ,   79.5  ,  -16.88 ,   22.55 ,
-80.4  ,  -75.4  , -160.1  ,   40.25 , -124.5  , -165.4  ,...
2025-04-27 04:56:39.787883 test begin: paddle.sum(Tensor([188, 92416],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([188, 92416],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 188 / 188 (100%)
Max absolute difference among violations: 266.2
Max relative difference among violations: 46.28
ACTUAL: array([ -0.4612,   5.754 ,  14.08  ,  -3.545 ,   8.55  ,   4.99  ,
12.72  ,  14.625 ,   9.664 ,  17.62  ,  -2.912 , -16.05  ,
16.02  , -14.32  ,   2.963 ,  -5.49  ,  -3.19  ,  10.01  ,...
DESIRED: array([-9.6250e+01, -5.5344e+01,  1.2494e+02, -4.8203e+00,  1.2398e+01,
9.8312e+01,  1.6400e+02, -4.4500e+01, -4.0875e+01,  1.5288e+02,
6.1438e+01,  6.3633e+00,  1.0766e+01, -1.0750e+02, -7.9812e+01,...
2025-04-27 04:57:01.293928 test begin: paddle.sum(Tensor([192, 60800],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([192, 60800],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 192 / 192 (100%)
Max absolute difference among violations: 201.5
Max relative difference among violations: 30.1
ACTUAL: array([ 1.2289e+01,  1.7000e+01, -2.9141e+00, -4.8750e+00, -5.4648e+00,
1.3812e+01,  8.1953e+00,  3.4746e+00, -6.5195e+00,  1.2793e-01,
-1.2586e+01,  9.4844e+00, -7.4883e+00, -1.7803e+00, -2.7285e+00,...
DESIRED: array([ -41.56  ,  157.9   , -129.4   ,  -56.47  ,   28.27  ,   55.56  ,
-13.34  ,  -94.6   ,  -76.8   ,   -6.855 ,   25.8   ,  114.25  ,
21.17  ,  104.44  ,  -79.5   ,  -46.47  , -132.    ,    9.77  ,...
2025-04-27 04:57:02.856339 test begin: paddle.sum(Tensor([192, 67200],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([192, 67200],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 192 / 192 (100%)
Max absolute difference among violations: 190.1
Max relative difference among violations: 35.25
ACTUAL: array([-19.78  ,   6.855 ,  -5.227 , -10.08  ,  -4.637 ,  -5.41  ,
0.2944,   3.297 ,   5.336 ,   1.242 ,   7.777 ,   7.58  ,
-11.3   ,  13.164 , -17.56  ,   8.27  ,   4.223 ,   4.664 ,...
DESIRED: array([-102.3   ,  -16.36  ,   85.1   ,   44.66  ,   16.34  ,   21.38  ,
120.44  ,   24.06  ,   98.4   ,   72.1   ,   86.5   ,  135.    ,
16.1   ,  -31.9   ,  -33.84  ,   18.6   ,  119.3   ,  -14.34  ,...
2025-04-27 04:57:04.254774 test begin: paddle.sum(Tensor([192, 82688],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([192, 82688],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 192 / 192 (100%)
Max absolute difference among violations: 276.8
Max relative difference among violations: 13.41
ACTUAL: array([ 4.3906e+00,  4.9727e+00, -2.3938e+01,  8.5156e+00, -2.1172e+00,
6.3555e+00,  2.7363e+00, -4.3516e+00, -9.3828e+00, -5.1250e+00,
1.2438e+01,  1.3383e+01,  9.8047e+00, -1.1969e+01, -4.6641e+00,...
DESIRED: array([ -21.16 ,   58.62 ,   39.22 ,   -6.312,  -98.06 , -142.6  ,
15.695,  -67.25 ,   41.25 ,  -42.3  ,   -1.086,  -60.28 ,
47.7  ,   49.38 ,  -34.4  ,  -38.38 ,  125.06 ,  109.06 ,...
2025-04-27 04:57:05.998218 test begin: paddle.sum(Tensor([192, 92416],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([192, 92416],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 192 / 192 (100%)
Max absolute difference among violations: 226.5
Max relative difference among violations: 46.7
ACTUAL: array([ 3.3887e+00, -2.8496e+00,  3.4258e+00, -2.0469e+01,  5.4844e+00,
7.0391e+00, -4.0703e+00, -1.4039e+01, -1.2070e+01, -1.0398e+01,
-5.4336e+00, -2.3547e+01,  1.4898e+01,  2.0605e+00,  2.6035e+00,...
DESIRED: array([-6.9938e+01, -2.1766e+01,  3.7219e+01,  8.1750e+01,  3.8125e+01,
2.2812e+01, -4.0188e+01, -1.4600e+02, -3.3500e+01, -3.0762e+00,
-9.9125e+01, -1.5925e+02, -1.4875e+01, -5.2469e+01,  6.7875e+01,...
2025-04-27 04:57:11.551763 test begin: paddle.sum(Tensor([196, 102144],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([196, 102144],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 196 / 196 (100%)
Max absolute difference among violations: 258.2
Max relative difference among violations: 5.65
ACTUAL: array([ 1.9234e+01,  5.0078e+00, -4.2266e+00,  3.6836e+00, -1.6133e+00,
-1.0172e+01, -9.3438e+00, -2.0449e+00, -1.3664e+01,  2.5938e+00,
-2.0391e+01, -4.4297e+00, -1.0148e+01, -2.5797e+01,  2.1973e+00,...
DESIRED: array([ 130.9  , -125.56 ,   76.25 ,    2.25 ,  -52.53 ,  -29.34 ,
142.   ,  -52.28 ,   95.25 ,  -53.7  ,  -45.66 ,  127.25 ,
-1.527,   77.8  ,  -16.8  ,  108.9  ,   46.62 ,  -40.38 ,...
2025-04-27 04:57:19.434115 test begin: paddle.sum(Tensor([196, 60800],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([196, 60800],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 196 / 196 (100%)
Max absolute difference among violations: 205.2
Max relative difference among violations: 485.8
ACTUAL: array([ -1.46  ,   7.92  ,  11.53  ,  -5.887 ,  16.72  ,  -7.98  ,
7.14  ,   6.844 ,  -5.535 ,  -9.5   ,  12.055 ,  20.25  ,
-1.587 ,   2.746 ,  -0.9404,  13.29  ,   4.73  ,  -6.973 ,...
DESIRED: array([-6.1844e+01, -5.8312e+01,  8.8938e+01, -6.2383e+00,  1.2650e+02,
4.0625e+01, -2.6297e+01, -3.5812e+01, -1.2588e+02,  7.0625e+01,
6.9750e+01, -1.7328e+01,  1.2888e+02, -2.0125e+01,  3.1938e+01,...
2025-04-27 04:57:20.865286 test begin: paddle.sum(Tensor([196, 67200],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([196, 67200],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 196 / 196 (100%)
Max absolute difference among violations: 215.8
Max relative difference among violations: 11.695
ACTUAL: array([  0.4065, -12.305 ,   2.498 ,  -1.5625,   0.601 ,  -9.664 ,
-2.014 ,   2.707 ,  -2.385 ,  17.38  ,  -4.355 ,  13.48  ,
-7.746 ,   2.035 ,  -9.85  ,  -5.586 , -16.17  ,   5.08  ,...
DESIRED: array([-114.2  , -132.6  ,   -3.705,   30.69 ,  -53.72 ,   75.9  ,
22.78 ,   97.   ,   -5.184,  -20.56 ,  -50.78 ,   61.94 ,
-74.25 ,  -54.3  ,  -21.58 , -138.6  , -121.56 ,  -64.56 ,...
2025-04-27 04:57:22.492462 test begin: paddle.sum(Tensor([196, 91392],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([196, 91392],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 196 / 196 (100%)
Max absolute difference among violations: 233.8
Max relative difference among violations: 5.387
ACTUAL: array([ 11.96   ,  -8.1    , -16.81   ,  -5.043  , -16.     ,   4.773  ,
-3.871  ,  -4.625  ,   0.63   , -12.14   ,   1.754  , -13.73   ,
-0.443  ,  22.94   , -19.84   ,  13.74   , -10.35   ,  -3.527  ,...
DESIRED: array([ -41.56  ,   -1.411 ,  -70.3   ,   95.94  ,  110.9   ,  -46.5   ,
49.38  ,  -74.3   ,  -30.42  ,  -29.05  ,  -19.    , -117.06  ,
-174.2   ,   23.58  , -107.06  ,  -95.8   ,    2.893 ,  106.9   ,...
2025-04-27 04:57:24.492312 test begin: paddle.sum(Tensor([196, 92416],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([196, 92416],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 196 / 196 (100%)
Max absolute difference among violations: 258.
Max relative difference among violations: 171.6
ACTUAL: array([ 20.7   ,   1.405 ,  14.72  , -14.65  ,   9.734 ,  15.055 ,
2.14  ,  -5.64  ,   5.28  ,   5.92  ,   5.047 ,   0.8594,
3.732 ,  -0.9536,  11.836 ,   5.984 ,  -2.361 ,  -9.32  ,...
DESIRED: array([ 3.9719e+01, -1.1350e+02,  8.8062e+01,  3.0969e+01,  5.3906e+01,
9.3000e+01, -1.1862e+02,  4.0094e+01, -3.9531e+01,  6.1812e+01,
-3.9125e+01,  9.8500e+01, -3.2438e+01, -3.1734e+01, -4.2344e+01,...
2025-04-27 04:57:54.453069 test begin: paddle.sum(Tensor([20, 102144],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([20, 102144],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 20 / 20 (100%)
Max absolute difference among violations: 224.2
Max relative difference among violations: 1.277
ACTUAL: array([-13.95 ,  -2.016,   3.771,   1.825,  -2.129,   6.02 ,  14.734,
11.29 ,   1.407,   2.387,   4.465, -33.03 ,  17.28 ,  32.   ,
5.312,  -5.54 ,  10.74 , -12.414,  -3.525,  -0.61 ],
dtype=float16)
DESIRED: array([-151.5  ,  -12.47 ,   51.34 ,  -54.16 ,   67.3  ,   39.38 ,
39.4  ,  178.4  ,    9.586,  -89.2  ,   22.1  ,  -19.27 ,
-66.4  ,  155.2  , -218.9  ,   -9.22 ,  -38.75 ,  -23.89 ,
96.4  , -147.5  ], dtype=float16)
2025-04-27 04:57:54.941831 test begin: paddle.sum(Tensor([20, 102400],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([20, 102400],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 20 / 20 (100%)
Max absolute difference among violations: 265.8
Max relative difference among violations: 1.158
ACTUAL: array([ 30.22  ,  -4.73  ,  -5.336 ,  -6.805 ,   2.361 ,   9.766 ,
-19.58  ,   5.02  ,  18.47  ,  11.695 ,  11.64  ,   6.8   ,
-18.44  ,   0.1558,  -2.799 ,  -8.12  ,   2.975 ,   0.2383,
-14.03  ,  -6.117 ], dtype=float16)
DESIRED: array([ 170.1 ,   58.75, -178.5 , -150.2 ,  -94.94, -119.2 ,  -29.03,
-38.03,  284.2 , -142.1 ,    8.46,   63.38,  191.1 ,  -52.97,
-68.5 ,   72.6 ,  -45.12,  -25.73,   88.94,  -60.2 ],
dtype=float16)
2025-04-27 04:57:59.852685 test begin: paddle.sum(Tensor([20, 60800],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([20, 60800],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 20 / 20 (100%)
Max absolute difference among violations: 102.2
Max relative difference among violations: 1.312
ACTUAL: array([  3.758 ,   3.934 ,   0.1586,   0.7646,   3.57  ,  10.81  ,
5.164 ,  -5.523 , -16.5   ,   2.54  ,  -7.234 ,   8.27  ,
9.44  ,   6.53  ,  -7.434 ,   1.278 ,   7.406 ,  -7.844 ,
2.27  ,   9.92  ], dtype=float16)
DESIRED: array([ 20.05 ,  72.5  ,  98.7  ,  68.4  ,  93.8  , -91.4  ,  41.38 ,
95.06 , -78.5  ,  58.06 , -79.25 ,  97.1  , 110.6  ,  65.25 ,
23.84 ,  21.84 , -56.75 , -22.62 ,   1.863,  46.5  ],
dtype=float16)
2025-04-27 04:58:00.629036 test begin: paddle.sum(Tensor([20, 64000],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([20, 64000],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 20 / 20 (100%)
Max absolute difference among violations: 182.2
Max relative difference among violations: 1.45
ACTUAL: array([  7.586,  10.02 ,   8.414,   5.402,  -5.133,   1.99 ,  14.71 ,
-19.6  ,   1.668,   6.945,   9.414,  21.89 , -13.08 ,   6.73 ,
13.81 ,  14.055,  -3.406, -12.875,  12.38 ,  -3.477],
dtype=float16)
DESIRED: array([  43.12,  118.56,   46.5 ,    6.01,   54.4 ,   -4.43,   92.2 ,
-44.38,  -24.53,   51.78,  187.6 ,   54.12,  -72.06,  127.6 ,
-95.8 ,  -80.25, -185.6 ,  -15.76,   59.84,  -18.48],
dtype=float16)
2025-04-27 04:58:01.066429 test begin: paddle.sum(Tensor([20, 67200],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([20, 67200],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 19 / 20 (95%)
Max absolute difference among violations: 158.2
Max relative difference among violations: 24.
ACTUAL: array([ -3.094,   3.732,  12.49 , -13.82 ,  -2.91 , -23.17 ,   9.46 ,
-11.266, -10.2  ,  -1.577,  -5.098,   3.861,  -5.688,  -4.688,
16.78 ,  13.96 ,  -4.375,   8.12 ,  15.805,  -4.52 ],
dtype=float16)
DESIRED: array([  22.08  ,  -24.33  ,   86.7   ,   22.42  ,   82.44  , -130.4   ,
82.06  ,  -11.27  ,  -32.3   , -159.9   ,    0.2217,  137.2   ,
25.16  , -120.    ,  104.    ,  -17.89  ,   90.5   ,   19.89  ,
-41.44  ,  -58.    ], dtype=float16)
2025-04-27 04:58:01.515544 test begin: paddle.sum(Tensor([20, 70528],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([20, 70528],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 20 / 20 (100%)
Max absolute difference among violations: 161.6
Max relative difference among violations: 2.402
ACTUAL: array([  2.59  , -16.03  ,   0.4377,   0.7837,  -2.225 ,  -2.04  ,
2.973 ,  -5.76  ,   0.2712,   0.5776,  10.08  ,  -0.2224,
1.259 ,  26.73  ,   3.088 , -10.21  ,  -6.73  ,   6.754 ,
-28.36  , -20.19  ], dtype=float16)
DESIRED: array([  56.7 ,  -48.28, -161.1 ,   58.3 ,   66.2 ,  -28.36,  -45.94,
4.11,   27.33,  -28.61,  -69.5 ,  158.2 ,   86.75,    9.47,
97.06,  -93.9 ,  -20.86,   56.47,  -84.6 ,  -24.  ],
dtype=float16)
2025-04-27 04:58:01.948857 test begin: paddle.sum(Tensor([20, 73984],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([20, 73984],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 20 / 20 (100%)
Max absolute difference among violations: 157.1
Max relative difference among violations: 1.576
ACTUAL: array([  1.945,   3.451,   4.543,   9.74 ,  15.56 ,  -7.875,  -3.545,
2.133,  -1.066,   3.512,  -8.945,  13.625,   3.992, -15.266,
14.164, -26.55 ,  10.33 ,  19.73 , -18.56 ,  12.36 ],
dtype=float16)
DESIRED: array([   0.764,   -5.992,   33.88 ,  147.4  ,   58.6  ,  -60.97 ,
-30.77 ,  147.   ,  -29.8  ,  139.8  ,  -88.1  ,   11.336,
-18.75 , -124.1  ,  171.2  , -122.8  ,  146.4  ,  -35.62 ,
-82.   ,  -67.44 ], dtype=float16)
2025-04-27 04:58:02.387942 test begin: paddle.sum(Tensor([20, 82688],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([20, 82688],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 20 / 20 (100%)
Max absolute difference among violations: 191.5
Max relative difference among violations: 1.92
ACTUAL: array([  8.06  ,  13.06  ,   2.504 ,   3.861 , -16.22  ,   1.86  ,
-18.73  ,  -7.684 , -18.67  ,  -0.5366, -17.9   , -15.01  ,
10.516 ,  16.97  ,  -1.865 ,  22.77  ,  13.08  ,  -3.736 ,
-13.17  ,  -2.068 ], dtype=float16)
DESIRED: array([  -8.766,   66.06 ,   -9.484, -123.5  ,   90.25 ,   46.6  ,
32.8  ,   41.75 , -101.1  ,  -89.6  ,  158.5  ,  -11.02 ,
-16.28 ,  208.5  ,   24.66 ,  123.9  ,   13.56 ,   15.01 ,
72.6  ,   16.23 ], dtype=float16)
2025-04-27 04:58:02.868981 test begin: paddle.sum(Tensor([20, 85120],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([20, 85120],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 20 / 20 (100%)
Max absolute difference among violations: 154.4
Max relative difference among violations: 2.727
ACTUAL: array([ -7.004 ,  -8.055 ,  -0.6665,  -1.272 ,  13.79  ,  16.3   ,
5.223 ,   2.162 ,   3.89  ,   5.09  , -11.54  , -15.84  ,
13.305 ,   1.463 ,  -5.758 ,  -2.883 ,   1.581 ,   4.816 ,
9.2   ,  -6.17  ], dtype=float16)
DESIRED: array([ 122.4  ,  146.4  ,   16.97 ,  -29.66 ,  -80.4  ,  -39.94 ,
52.53 ,    2.787,  -63.1  ,   26.14 ,    6.68 , -141.   ,
-57.5  ,  101.94 ,   -7.67 ,  -51.1  ,  -19.73 , -140.9  ,
35.44 ,  -17.94 ], dtype=float16)
2025-04-27 04:58:03.331439 test begin: paddle.sum(Tensor([20, 87040],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([20, 87040],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 20 / 20 (100%)
Max absolute difference among violations: 136.1
Max relative difference among violations: 2.22
ACTUAL: array([-21.22  ,   3.502 ,   2.543 ,  -5.695 ,   5.062 ,   3.045 ,
0.3235,  -1.229 ,   1.189 ,  23.42  ,  -7.703 ,   3.238 ,
-7.78  ,   5.91  ,   9.625 ,   5.418 , -17.16  ,  11.44  ,
4.848 ,   9.945 ], dtype=float16)
DESIRED: array([ -80.1  ,  -73.8  ,   40.84 ,  -19.2  ,  -41.75 ,  -10.94 ,
37.97 ,  -28.95 ,  -52.6  ,   40.94 ,    9.08 ,    1.486,
-143.9  ,   12.805,   -7.88 ,  -18.67 ,   31.39 ,  115.9  ,
30.88 ,  119.4  ], dtype=float16)
2025-04-27 04:58:03.799461 test begin: paddle.sum(Tensor([20, 89984],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([20, 89984],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 20 / 20 (100%)
Max absolute difference among violations: 217.
Max relative difference among violations: 1.446
ACTUAL: array([  6.758 ,  13.125 , -10.28  ,  14.59  , -12.766 ,   3.94  ,
1.065 ,   5.207 ,  16.88  ,  14.21  ,  37.06  ,  -0.3647,
-1.435 ,  25.25  ,  -3.928 ,  -0.532 ,  -0.3135,  -8.8   ,
15.14  , -12.086 ], dtype=float16)
DESIRED: array([  20.77 ,  176.4  ,   69.44 ,   17.81 ,  -62.53 ,   84.8  ,
-141.4  ,    6.406,  177.1  ,  -31.86 ,   23.6  ,   26.39 ,
72.   ,   70.25 ,  -51.44 ,  216.5  ,  115.9  ,  -21.72 ,
185.2  ,  -29.17 ], dtype=float16)
2025-04-27 04:58:04.267020 test begin: paddle.sum(Tensor([20, 91392],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([20, 91392],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 20 / 20 (100%)
Max absolute difference among violations: 194.1
Max relative difference among violations: 1.892
ACTUAL: array([-16.36  ,  33.16  ,   0.7627,   4.637 ,  -9.94  ,  25.72  ,
3.258 ,  -1.17  ,  14.94  ,  -2.27  , -24.36  ,  11.836 ,
-1.94  ,   0.8057,   8.83  ,   0.9106,  -7.03  ,   7.848 ,
8.125 ,  13.28  ], dtype=float16)
DESIRED: array([  18.38,  141.8 ,   73.2 ,   48.4 ,   36.56,  162.9 ,  197.4 ,
-139.1 ,   83.44,   97.  , -123.1 ,   64.75,   75.56, -154.5 ,
-118.4 ,  -28.48,   18.72,  140.9 ,  -33.97,  -16.3 ],
dtype=float16)
2025-04-27 04:58:04.746393 test begin: paddle.sum(Tensor([20, 92352],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([20, 92352],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 20 / 20 (100%)
Max absolute difference among violations: 163.6
Max relative difference among violations: 1.501
ACTUAL: array([ 2.232e+00, -7.273e+00,  1.082e+01, -2.042e+01, -8.648e+00,
-6.906e+00, -4.914e+00,  3.582e+00,  4.363e+00,  1.008e+01,
-1.382e+01, -5.074e+00, -7.426e+00, -1.526e-02, -3.361e+00,...
DESIRED: array([ -63.84,   98.06,  115.06, -125.1 ,  151.2 ,   34.25, -168.5 ,
55.62,  129.  ,  132.4 ,   49.47,   76.  , -125.94,  -63.66,
25.19,  124.94,   39.25,  -13.91,    9.59,  -61.75],
dtype=float16)
2025-04-27 04:58:05.181919 test begin: paddle.sum(Tensor([20, 92416],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([20, 92416],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 20 / 20 (100%)
Max absolute difference among violations: 135.9
Max relative difference among violations: 1.777
ACTUAL: array([ -3.633 , -18.53  ,  -0.4792,  -9.49  ,   2.598 ,  14.805 ,
-0.2366,  14.445 , -10.44  ,   0.829 ,   2.512 ,  12.93  ,
11.52  ,   5.01  ,  17.36  ,   4.277 ,  -8.7   ,   4.184 ,
-7.766 ,  21.61  ], dtype=float16)
DESIRED: array([ -78.   ,  -19.44 ,   91.75 , -117.56 ,   89.2  ,    8.875,
-37.16 ,  107.9  ,  -36.7  ,  -59.44 , -133.4  ,   42.47 ,
-50.22 ,  -32.8  ,  129.2  ,   10.23 , -112.25 ,  115.1  ,
-36.9  ,  -27.81 ], dtype=float16)
2025-04-27 04:58:05.617900 test begin: paddle.sum(Tensor([20, 97280],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([20, 97280],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 20 / 20 (100%)
Max absolute difference among violations: 183.4
Max relative difference among violations: 5.695
ACTUAL: array([-34.6  ,  -8.26 ,  -5.543,   7.332,   5.758,   2.809,  -1.572,
-12.25 ,  23.12 ,   1.905,  -0.169,  -4.363,  -3.682,  -4.87 ,
-7.992,   3.873,   9.89 ,  -2.242,  14.04 , -13.164],
dtype=float16)
DESIRED: array([  73.25 ,   -6.035,  -10.88 , -176.   , -107.3  ,  -44.1  ,
-97.5  ,  -93.75 ,   75.06 ,   28.27 ,   36.1  , -129.2  ,
30.6  ,  142.6  ,   19.75 ,  -29.75 ,   57.5  ,   -0.335,
-115.2  ,   27.42 ], dtype=float16)
2025-04-27 04:58:06.112994 test begin: paddle.sum(Tensor([20, 99712],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([20, 99712],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 20 / 20 (100%)
Max absolute difference among violations: 277.
Max relative difference among violations: 4.758
ACTUAL: array([  1.743, -11.234,  -2.252,  -8.61 ,  20.9  ,   6.316, -11.76 ,
-5.973,  10.16 ,   1.782,  -0.89 ,   7.45 ,   7.293,   8.125,
7.883,   5.215,   1.329, -11.75 , -14.16 ,  -5.89 ],
dtype=float16)
DESIRED: array([  86.9  ,  265.8  ,   80.06 ,  -27.64 ,  -76.9  , -114.94 ,
-2.043,   23.33 ,  237.   ,  201.9  ,  -50.75 ,   17.66 ,
6.832,   26.31 ,   55.97 ,   67.25 ,  -60.28 ,  -71.5  ,
-63.16 ,  157.8  ], dtype=float16)
2025-04-27 04:58:06.593719 test begin: paddle.sum(Tensor([200, 102144],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([200, 102144],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 200 / 200 (100%)
Max absolute difference among violations: 344.8
Max relative difference among violations: 495.2
ACTUAL: array([  4.676  ,  -2.951  ,  -5.43   , -12.734  ,  -3.05   ,  15.41   ,
8.87   , -23.61   ,  -4.918  ,  -4.453  ,  -1.727  ,  23.98   ,
-2.959  ,  14.6    ,  17.44   ,  -1.474  ,  19.19   ,   6.457  ,...
DESIRED: array([-7.0125e+01, -9.7188e+01,  1.3512e+02,  6.7188e+01,  4.0656e+01,
-1.8162e+02,  1.1156e+02,  8.7688e+01, -3.8008e+00, -1.1703e+01,
2.6219e+01,  9.9625e+01, -1.6912e+02,  6.5812e+01, -2.8016e+01,...
2025-04-27 04:58:08.764235 test begin: paddle.sum(Tensor([200, 104832],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([200, 104832],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 200 / 200 (100%)
Max absolute difference among violations: 337.
Max relative difference among violations: 18.73
ACTUAL: array([  5.297 ,  -0.456 ,  15.94  ,  -5.88  ,   4.164 ,  11.93  ,
-4.625 ,  18.03  ,  -2.91  ,   4.223 ,  -6.293 ,  -3.615 ,
-6.1   ,  15.5   , -14.02  ,   5.527 ,  19.33  ,  17.56  ,...
DESIRED: array([ -50.06  ,   33.12  ,  -42.5   ,   82.5   ,   91.7   ,   12.18  ,
45.6   ,   -3.623 ,  -12.86  ,   90.75  ,   59.16  ,   56.84  ,
-75.6   ,  145.2   , -131.5   ,   21.11  ,   36.6   ,  -49.1   ,...
2025-04-27 04:58:19.159353 test begin: paddle.sum(Tensor([200, 60800],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([200, 60800],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 200 / 200 (100%)
Max absolute difference among violations: 199.5
Max relative difference among violations: 14.805
ACTUAL: array([  3.105 ,  -3.809 ,  25.8   ,  23.1   ,   4.273 ,  10.66  ,
-10.67  ,  13.16  ,  19.08  ,   2.086 , -16.84  ,  -3.95  ,
10.12  ,   1.365 ,   9.91  ,  13.89  ,   2.299 , -10.76  ,...
DESIRED: array([  41.38 ,   15.35 ,  154.2  ,   60.1  ,  -47.8  ,  -58.56 ,
-24.03 ,  114.1  ,  115.7  , -181.4  ,  -50.53 ,  -49.12 ,
71.7  ,   77.2  ,  -13.36 ,   75.25 ,   56.8  ,  -26.   ,...
2025-04-27 04:58:20.691632 test begin: paddle.sum(Tensor([200, 82688],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([200, 82688],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 200 / 200 (100%)
Max absolute difference among violations: 228.2
Max relative difference among violations: 8.28
ACTUAL: array([ -9.45  , -12.84  ,  -2.854 , -24.42  ,   1.422 ,  -0.5054,
26.83  , -11.67  ,   6.094 , -29.12  , -18.34  ,   0.5093,
-19.9   ,  -4.08  ,  -8.734 ,   0.1024,   2.154 ,   5.73  ,...
DESIRED: array([-128.5   ,  -50.44  ,  -38.3   , -105.4   ,   12.69  ,   37.78  ,
50.9   ,  -94.94  ,   97.2   ,  -99.2   ,  -23.25  ,   -0.9937,
-44.28  ,   13.92  ,  -76.6   ,   -6.902 ,  -64.1   ,   35.28  ,...
2025-04-27 04:58:22.679930 test begin: paddle.sum(Tensor([200, 92416],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([200, 92416],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 200 / 200 (100%)
Max absolute difference among violations: 225.2
Max relative difference among violations: 42.9
ACTUAL: array([ 1.6359e+01, -2.8730e+00, -1.7984e+01, -4.4336e+00, -8.5938e+00,
-8.3281e+00, -1.4307e+00, -6.1992e+00,  1.7000e+01,  1.5055e+01,
-4.8555e+00,  8.2578e+00, -9.0234e+00, -8.8574e-01,  1.4078e+01,...
DESIRED: array([ 3.5062e+01, -1.0650e+02, -7.5062e+01,  7.2375e+01,  5.4609e+00,
-4.2562e+01,  1.1756e+02,  1.2644e+02,  5.5078e+00,  4.5219e+01,
8.6641e+00,  3.0141e+01, -9.2812e+01,  9.5625e+00,  2.3638e+02,...
2025-04-27 04:58:32.265036 test begin: paddle.sum(Tensor([204, 54400],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([204, 54400],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 204 / 204 (100%)
Max absolute difference among violations: 182.4
Max relative difference among violations: 38.72
ACTUAL: array([ 22.17  ,  -1.613 ,   6.324 ,  10.86  , -30.11  ,   0.8853,
6.46  ,  -6.695 ,   8.62  ,   8.3   , -14.79  ,  -7.96  ,
-0.3547,   8.88  , -20.45  , -15.68  ,  11.82  ,  -1.142 ,...
DESIRED: array([  95.1   ,    7.52  ,  -29.75  ,   85.6   ,  -13.46  ,   -6.258 ,
71.4   ,  -71.7   ,   29.19  ,  -20.12  ,  -65.3   ,   54.56  ,
-132.8   ,   -8.56  ,   -0.515 ,  -57.03  ,   66.75  ,  -10.016 ,...
2025-04-27 04:58:33.613680 test begin: paddle.sum(Tensor([204, 62400],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([204, 62400],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 203 / 204 (99.5%)
Max absolute difference among violations: 186.6
Max relative difference among violations: 18.81
ACTUAL: array([ -8.695 ,  10.6   ,   5.145 , -15.6   ,   5.78  ,  -2.41  ,
-12.414 ,   4.547 ,   3.982 ,  10.69  ,   8.12  , -12.46  ,
10.555 , -14.47  , -11.25  , -15.19  ,  -7.598 ,  -2.223 ,...
DESIRED: array([  43.28  ,  149.6   ,   30.06  ,  -76.8   ,  -24.34  ,  -59.47  ,
-117.4   ,   73.5   ,   -1.756 ,   11.6   ,   40.06  ,  -47.3   ,
62.38  ,  -90.56  ,   75.44  ,   10.84  ,    4.09  ,   36.38  ,...
2025-04-27 04:58:35.007555 test begin: paddle.sum(Tensor([204, 67200],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([204, 67200],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 204 / 204 (100%)
Max absolute difference among violations: 189.1
Max relative difference among violations: 7.906
ACTUAL: array([ 3.3691e+00, -3.8125e+00, -6.1797e+00, -9.8047e+00, -9.4453e+00,
-1.5594e+01, -1.3320e+01,  1.3367e+01,  8.3672e+00,  1.2024e-01,
-1.8047e+01,  3.1934e+00, -2.2828e+01,  3.1641e+00,  1.6734e+01,...
DESIRED: array([  -6.953, -125.75 ,  -25.88 ,   41.94 ,  -54.22 ,  -20.55 ,
23.08 ,  -16.97 ,  -43.62 ,   12.336,    9.555,   60.66 ,
57.66 ,  -48.16 , -114.   ,   23.44 ,    1.066,  -87.6  ,...
2025-04-27 04:58:36.574419 test begin: paddle.sum(Tensor([204, 82688],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([204, 82688],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 204 / 204 (100%)
Max absolute difference among violations: 268.2
Max relative difference among violations: 10.8
ACTUAL: array([-5.4297e+00, -2.2328e+01,  5.6602e+00, -5.9297e+00,  1.4170e+00,
-3.6758e+00,  2.0875e+01, -9.8438e+00,  9.0625e+00, -4.4961e+00,
-7.3789e+00, -3.5625e+00,  1.7125e+01, -8.1299e-01, -8.9922e+00,...
DESIRED: array([ -91.75  ,  -34.3   ,   47.    ,  -17.8   ,   25.62  ,  -85.5   ,
71.94  ,   84.2   ,  -64.9   ,   18.69  ,   65.25  ,  -90.2   ,
-91.7   ,  -12.54  ,  -46.25  ,  -16.25  ,  147.1   ,  -11.32  ,...
2025-04-27 04:58:38.499625 test begin: paddle.sum(Tensor([204, 92416],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([204, 92416],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 204 / 204 (100%)
Max absolute difference among violations: 228.4
Max relative difference among violations: 3.896
ACTUAL: array([ 1.1450e-01,  1.8750e+00,  2.2109e+01,  1.1266e+01, -1.5215e+00,
5.5566e-01,  2.5586e+00,  4.6133e+00,  5.3789e+00,  2.1531e+01,
-7.8945e+00, -1.7047e+01,  8.9141e+00,  5.7764e-01, -3.3672e+00,...
DESIRED: array([ -45.03 ,  -23.3  ,   99.25 ,  120.4  ,  -41.2  ,  -32.3  ,
90.2  ,  156.4  ,  204.6  ,   85.4  , -108.9  ,   51.3  ,
54.03 ,  -59.16 ,   83.06 ,   -9.9  ,   84.3  ,   21.61 ,...
2025-04-27 04:58:52.966954 test begin: paddle.sum(Tensor([208, 54400],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([208, 54400],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 208 / 208 (100%)
Max absolute difference among violations: 180.4
Max relative difference among violations: 20.45
ACTUAL: array([  2.094 ,   6.95  ,  15.836 ,   4.36  ,  -9.445 , -17.92  ,
11.29  ,  -6.57  ,   9.234 ,  -8.38  ,   7.965 ,  -5.094 ,
-12.12  ,   0.3135,   3.623 , -12.016 ,   4.15  ,  -2.29  ,...
DESIRED: array([  13.28  ,   74.75  ,   55.3   ,    6.945 ,  -22.27  ,  -46.06  ,
10.46  ,   74.1   ,  -46.94  ,  -21.33  ,   93.94  ,  113.9   ,
-40.4   ,   86.06  ,   30.31  ,   25.4   ,  -42.4   ,  -14.98  ,...
2025-04-27 04:58:54.243586 test begin: paddle.sum(Tensor([208, 60800],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([208, 60800],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 208 / 208 (100%)
Max absolute difference among violations: 187.1
Max relative difference among violations: 284.8
ACTUAL: array([-2.0156e+01,  3.7031e+00, -4.1055e+00, -2.1297e+01,  7.3516e+00,
-1.5375e+01,  5.2188e+00,  1.0539e+01, -7.0430e+00, -4.1094e+00,
1.3672e+01, -1.2172e+01, -4.7617e+00, -2.6781e+01, -1.5242e+01,...
DESIRED: array([ 4.0156e+00, -1.3258e+01, -1.0356e+02,  3.0500e+01, -4.0875e+01,
3.9406e+01,  3.6500e+01, -3.4062e+01, -7.0188e+01,  2.6359e+01,
4.7852e-02, -5.7469e+01,  2.6438e+01, -1.0981e+02, -7.5125e+01,...
2025-04-27 04:58:55.673874 test begin: paddle.sum(Tensor([208, 67200],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([208, 67200],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 208 / 208 (100%)
Max absolute difference among violations: 317.
Max relative difference among violations: 9.43
ACTUAL: array([-1.1930e+01, -6.5430e+00, -7.6953e+00, -9.8267e-02,  5.5195e+00,
-3.0059e+00,  4.1055e+00, -6.2891e+00,  8.0469e+00,  9.2334e-01,
-1.8219e+01, -1.5883e+01,  7.6055e+00,  8.1016e+00, -6.8398e+00,...
DESIRED: array([ -20.1  ,  -30.36 ,  -15.84 ,  -64.3  ,  114.94 , -320.   ,
76.7  ,  -89.3  ,   25.   ,    4.71 , -117.56 ,   62.38 ,
-23.39 ,   39.88 ,  -18.95 ,    9.17 ,  -55.12 ,   89.7  ,...
2025-04-27 04:58:57.330473 test begin: paddle.sum(Tensor([208, 82688],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([208, 82688],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 208 / 208 (100%)
Max absolute difference among violations: 228.4
Max relative difference among violations: 7.38
ACTUAL: array([  2.938 ,   5.234 ,  -2.82  ,   7.47  ,  -0.7534,   9.25  ,
10.27  ,  -3.459 ,  -4.94  ,  -1.728 ,  -5.1   ,   6.344 ,
2.807 ,   1.508 ,   5.617 ,  14.69  ,  -7.74  ,  -7.582 ,...
DESIRED: array([ -42.97  , -153.5   ,  109.    ,   -8.62  , -141.    ,    2.91  ,
77.25  ,  -61.28  ,  185.4   , -135.8   ,  -49.72  ,   11.86  ,
91.56  ,   37.8   ,   54.34  , -116.6   ,  -36.44  ,   41.8   ,...
2025-04-27 04:58:59.241269 test begin: paddle.sum(Tensor([208, 87552],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([208, 87552],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 208 / 208 (100%)
Max absolute difference among violations: 263.2
Max relative difference among violations: 26.34
ACTUAL: array([ -1.058  , -12.94   , -22.56   , -10.35   ,  -3.914  ,   5.402  ,
-7.953  ,  -4.492  ,   2.514  ,  10.6    ,  -0.3162 , -16.03   ,
-8.766  ,  12.69   ,   4.977  ,   4.164  , -11.75   ,  13.555  ,...
DESIRED: array([ 6.2031e+01, -1.4125e+02, -1.2650e+02, -2.0462e+02,  1.5375e+01,
5.5562e+01,  2.0266e+01, -3.7219e+01,  8.9609e+00, -1.2844e+01,
5.0469e+01,  2.5918e+00,  3.3594e+01, -3.7844e+01, -1.6500e+01,...
2025-04-27 04:59:01.217621 test begin: paddle.sum(Tensor([208, 92416],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([208, 92416],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 206 / 208 (99%)
Max absolute difference among violations: 255.
Max relative difference among violations: 10.36
ACTUAL: array([ 11.414  ,   8.19   ,  -0.833  ,  -4.418  ,  18.88   ,  -9.16   ,
16.62   , -25.19   ,  29.28   ,   3.469  ,   3.984  ,  -2.746  ,
11.92   ,   4.33   , -16.66   ,  -4.156  ,   1.912  ,   3.56   ,...
DESIRED: array([  15.39  ,   21.94  ,  -29.17  ,  -47.8   ,  -96.5   , -141.    ,
114.06  , -135.6   ,  284.2   ,   -0.734 ,   76.56  ,   54.44  ,
-75.25  ,   40.06  ,  -46.    ,   60.78  ,  -12.664 ,    0.4673,...
2025-04-27 04:59:06.688875 test begin: paddle.sum(Tensor([212, 102144],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([212, 102144],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 212 / 212 (100%)
Max absolute difference among violations: 264.5
Max relative difference among violations: 18.77
ACTUAL: array([  1.287  , -14.414  ,  12.72   ,   0.053  ,  -2.877  ,  -4.887  ,
-8.31   ,  -9.52   ,   0.6816 ,   2.533  , -11.164  , -21.22   ,
6.82   ,  -2.352  ,  -1.215  ,  18.23   ,  23.25   ,  -4.266  ,...
DESIRED: array([ 9.3875e+01, -9.7625e+01,  1.0500e+02,  5.5906e+01,  9.5812e+01,
-5.8031e+01,  4.1531e+01,  2.1484e+01,  3.7969e+01,  6.7188e+01,
4.7750e+01,  9.5562e+01,  2.0641e+01, -1.1250e+02,  2.8578e+01,...
2025-04-27 04:59:18.661712 test begin: paddle.sum(Tensor([212, 54400],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([212, 54400],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 212 / 212 (100%)
Max absolute difference among violations: 187.8
Max relative difference among violations: 81.7
ACTUAL: array([-28.58   ,  -7.973  ,  20.55   , -21.9    ,   4.33   ,   1.527  ,
15.734  , -13.12   ,   3.135  ,   5.945  ,  -7.973  ,   5.836  ,
-10.234  ,  -2.61   ,  -7.39   ,  -2.893  ,  -6.297  ,  -5.613  ,...
DESIRED: array([ -93.06  ,  -48.8   ,  -25.4   ,  -82.7   ,  100.94  ,  -35.94  ,
0.9844,  -45.2   ,  -23.5   ,   23.33  , -106.5   ,   13.13  ,
27.14  ,  111.44  ,  -45.    ,  103.75  ,  -58.56  ,   27.06  ,...
2025-04-27 04:59:20.075481 test begin: paddle.sum(Tensor([212, 57600],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([212, 57600],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 212 / 212 (100%)
Max absolute difference among violations: 211.4
Max relative difference among violations: 96.
ACTUAL: array([ -9.836 ,  -4.74  ,  -8.38  ,  19.7   ,  -4.195 ,   9.6   ,
-2.02  ,  -0.3784, -17.36  ,  -3.734 ,  21.17  ,   6.05  ,
4.87  ,   3.064 ,  14.31  ,   3.006 ,   5.723 ,  -6.305 ,...
DESIRED: array([-9.0688e+01,  3.2781e+01, -1.2775e+02,  5.2406e+01, -6.6750e+01,
-1.8188e+01,  4.7469e+01,  1.5262e+02,  4.5234e+00,  5.7750e+01,
-1.4133e+01, -3.6688e+01,  7.6812e+01, -4.5000e+01, -5.8812e+01,...
2025-04-27 04:59:21.596206 test begin: paddle.sum(Tensor([212, 60800],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([212, 60800],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 212 / 212 (100%)
Max absolute difference among violations: 186.5
Max relative difference among violations: 11.11
ACTUAL: array([ 1.3344e+01,  2.6387e+00,  8.6953e+00, -3.4199e+00, -1.3898e+01,
1.5812e+01, -9.2102e-02, -9.7500e+00, -1.6156e+01,  1.4719e+01,
9.8750e+00,  1.1453e+01, -2.9734e+01,  1.5867e+01,  2.2719e+01,...
DESIRED: array([  90.06  ,  -59.56  ,   63.75  ,  183.1   ,   35.34  ,  140.4   ,
35.84  ,  -57.78  ,  -28.45  ,   43.53  ,   92.44  ,   41.2   ,
-141.4   ,   99.7   ,  -71.8   ,  -24.84  ,   24.92  ,   65.75  ,...
2025-04-27 04:59:23.122840 test begin: paddle.sum(Tensor([212, 65600],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([212, 65600],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 212 / 212 (100%)
Max absolute difference among violations: 175.1
Max relative difference among violations: 8.2
ACTUAL: array([-14.78   ,  -8.9    ,   2.965  ,  -7.64   , -16.22   ,   5.812  ,
-1.986  ,  14.26   , -12.17   ,   6.207  ,  -6.41   ,   2.959  ,
9.984  ,   8.32   ,  12.23   ,  -0.2852 ,   7.83   , -19.02   ,...
DESIRED: array([ -53.34 ,  -27.45 ,   98.56 ,  -47.12 ,  -57.72 , -103.3  ,
3.857,   22.45 ,   52.06 ,   -2.215, -150.6  ,   92.3  ,
6.082,    1.292,  -37.78 ,   18.94 ,   89.06 ,   15.74 ,...
2025-04-27 04:59:24.798018 test begin: paddle.sum(Tensor([212, 73984],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([212, 73984],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 212 / 212 (100%)
Max absolute difference among violations: 234.1
Max relative difference among violations: 161.9
ACTUAL: array([ -1.608  , -10.586  ,  13.14   ,  -6.86   ,  -1.181  ,   4.938  ,
-8.49   ,  -0.09766,   6.465  ,  -7.145  ,  -1.615  ,  13.555  ,
2.541  ,  -0.6445 ,  -4.844  , -15.47   ,  -1.433  ,  15.15   ,...
DESIRED: array([ 3.2312e+01, -5.1406e+01,  3.9594e+01,  1.3700e+02, -3.3844e+01,
-4.5281e+01, -6.9250e+01, -1.5800e+02,  6.9375e+01, -9.5250e+01,
-1.0344e+01,  8.6438e+01,  1.0200e+02, -6.8812e+01, -7.0000e+01,...
2025-04-27 04:59:26.624243 test begin: paddle.sum(Tensor([212, 80256],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([212, 80256],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 212 / 212 (100%)
Max absolute difference among violations: 250.
Max relative difference among violations: 2.613
ACTUAL: array([-11.64  ,  11.914 , -10.53  ,   1.382 ,  -7.664 ,  -7.047 ,
-3.398 ,   0.704 ,   5.72  ,  -9.9   ,  -1.145 ,  -4.6   ,
-15.59  ,  -9.81  ,  12.336 ,   2.535 ,  13.99  ,  -2.59  ,...
DESIRED: array([ -15.3  ,   76.94 , -195.5  ,   56.75 ,  -13.5  , -102.3  ,
-182.2  ,  158.2  ,   24.62 ,  -25.42 ,   89.06 ,   65.06 ,
83.7  ,  -47.9  ,   41.44 ,   21.56 , -131.   ,  -23.17 ,...
2025-04-27 04:59:28.499050 test begin: paddle.sum(Tensor([212, 82688],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([212, 82688],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 212 / 212 (100%)
Max absolute difference among violations: 219.
Max relative difference among violations: 46.8
ACTUAL: array([  3.184  ,   4.754  ,   7.625  ,  10.84   , -10.82   , -15.9    ,
-6.64   ,  -6.676  ,   4.035  ,  -5.625  ,  -4.207  , -19.62   ,
1.505  ,   4.547  ,   4.06   ,   3.242  , -11.09   ,  -2.588  ,...
DESIRED: array([-5.4906e+01, -9.0625e+01, -7.1938e+01,  2.4188e+01,  5.0562e+01,
3.2375e+01,  1.2012e+02,  7.3812e+01,  5.8000e+01, -2.1512e+02,
-7.9562e+01, -2.9141e+01,  2.1234e+01,  7.7938e+01,  8.5312e+01,...
2025-04-27 04:59:30.531256 test begin: paddle.sum(Tensor([212, 92416],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([212, 92416],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 211 / 212 (99.5%)
Max absolute difference among violations: 222.1
Max relative difference among violations: 17.45
ACTUAL: array([-1.2320e+01, -2.1609e+01,  2.2070e+00, -1.0602e+01, -1.1164e+01,
8.7734e+00, -2.6309e+00,  4.4609e+00, -2.9883e+00, -1.5617e+01,
-2.9980e+00, -7.1641e+00,  7.4883e+00, -4.8086e+00, -1.4922e+00,...
DESIRED: array([ 103.2  ,  139.4  ,   22.06 ,  -54.3  , -115.06 ,   44.   ,
44.2  ,  -57.84 ,   39.2  ,  165.4  ,  -96.9  ,   27.73 ,
21.69 ,   71.06 ,  -67.4  ,   47.53 ,   33.44 ,   77.9  ,...
2025-04-27 04:59:39.189004 test begin: paddle.sum(Tensor([216, 60800],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([216, 60800],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 216 / 216 (100%)
Max absolute difference among violations: 246.1
Max relative difference among violations: 7.152
ACTUAL: array([ 4.2148e+00,  3.2832e+00, -1.2648e+01,  1.5102e+01,  4.1914e+00,
4.2480e-01,  1.5219e+01,  2.7363e+00, -1.7859e+01,  3.6523e-01,
6.2773e+00, -4.8086e+00, -2.3922e+01,  6.0205e-01,  6.2227e+00,...
DESIRED: array([  26.2  ,  100.8  ,   17.92 ,  -43.06 ,   76.75 ,   48.56 ,
113.   ,   67.75 ,  -77.25 ,   13.23 ,  -69.   ,   64.56 ,
-19.77 ,  -21.98 ,   83.75 ,  -32.53 ,   -6.715,   22.17 ,...
2025-04-27 04:59:42.012733 test begin: paddle.sum(Tensor([216, 92416],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([216, 92416],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 216 / 216 (100%)
Max absolute difference among violations: 230.9
Max relative difference among violations: 21.08
ACTUAL: array([-1.0352e+00,  2.5117e+00, -8.5000e+00, -1.2266e+01,  6.1621e-01,
1.0578e+01, -1.1357e+00,  2.3453e+01, -2.5547e+00, -1.5250e+01,
1.0070e+01,  5.9180e-01, -8.8281e+00, -1.3680e+01, -3.4023e+00,...
DESIRED: array([ -21.84 , -112.   ,   35.34 , -125.8  ,  -20.2  ,   35.7  ,
-1.069,  194.9  ,   -5.9  , -111.44 , -141.8  ,  -14.21 ,
-47.84 ,   35.   ,   21.11 ,  -43.97 ,  181.1  ,  -27.88 ,...
2025-04-27 04:59:51.191142 test begin: paddle.sum(Tensor([220, 60800],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([220, 60800],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 220 / 220 (100%)
Max absolute difference among violations: 210.8
Max relative difference among violations: 23.9
ACTUAL: array([ -0.7183 ,   6.5    ,  -0.11096, -18.08   ,   2.625  , -10.25   ,
-12.27   ,  -3.035  ,  10.39   ,   0.9404 ,  -4.03   , -15.586  ,
16.03   ,  -8.445  ,   0.6123 ,  -2.832  ,  15.07   ,   4.83   ,...
DESIRED: array([ 119.94  ,   -4.29  ,  210.6   ,  -47.6   ,  -30.3   ,   63.06  ,
46.97  ,  -58.6   ,  116.6   ,  -45.44  ,   33.12  , -111.2   ,
94.25  ,   11.17  ,  -56.16  ,   56.22  ,   14.734 ,  -83.2   ,...
2025-04-27 04:59:52.748197 test begin: paddle.sum(Tensor([220, 63232],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([220, 63232],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 220 / 220 (100%)
Max absolute difference among violations: 197.
Max relative difference among violations: 36.6
ACTUAL: array([ 4.3242e+00, -6.1768e-01,  1.2977e+01, -1.4008e+01,  5.0508e+00,
3.3406e+01, -1.2242e+01,  1.0453e+01,  1.1094e+01,  5.9648e+00,
7.6211e+00, -1.1094e+00,  7.4805e+00,  1.8609e+01,  3.2935e-01,...
DESIRED: array([ 4.2406e+01,  1.2336e+01,  3.9902e+00, -9.9312e+01, -1.0238e+02,
1.2475e+02, -1.3039e+01,  4.0500e+01, -4.8688e+01, -8.5125e+01,
4.8688e+01,  2.0391e+01,  2.9969e+01, -1.9328e+01,  3.0609e+01,...
2025-04-27 04:59:54.268696 test begin: paddle.sum(Tensor([220, 67200],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([220, 67200],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 220 / 220 (100%)
Max absolute difference among violations: 169.
Max relative difference among violations: 6.637
ACTUAL: array([ 1.9766e+01,  4.7021e-01, -1.2500e+00,  5.2578e+00,  6.9414e+00,
1.3115e+00, -2.8633e+00,  1.6426e+00,  7.2422e+00, -5.3867e+00,
7.4102e+00,  2.6312e+01,  4.3164e+00,  9.4609e+00,  8.6377e-01,...
DESIRED: array([  32.97 ,  -58.47 ,  -40.12 ,  102.   ,  -19.5  ,  -85.7  ,
-61.2  ,  -49.16 ,  -52.1  ,  -17.83 ,   13.58 ,   93.9  ,
135.9  ,   97.7  ,  100.2  ,   73.06 ,   19.81 ,  -49.28 ,...
2025-04-27 04:59:55.872188 test begin: paddle.sum(Tensor([220, 92416],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([220, 92416],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 220 / 220 (100%)
Max absolute difference among violations: 270.2
Max relative difference among violations: 24.03
ACTUAL: array([  8.78  ,  19.88  ,  18.03  , -11.44  ,   2.498 ,  10.82  ,
-25.7   ,  -5.918 ,  -3.361 ,   0.0559,  -7.582 , -18.81  ,
5.59  ,   1.154 ,  -0.8335,   2.377 ,  11.21  ,   4.793 ,...
DESIRED: array([  55.8  ,  -97.9  ,   32.44 ,   33.25 ,  -76.94 ,   26.28 ,
-41.72 ,  -35.53 ,  -55.25 ,  -65.75 ,   -8.086,   61.34 ,
10.414, -203.5  ,  196.8  ,   67.4  ,  -10.87 ,   -1.788,...
2025-04-27 04:59:59.881431 test begin: paddle.sum(Tensor([224, 102144],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([224, 102144],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 224 / 224 (100%)
Max absolute difference among violations: 322.2
Max relative difference among violations: 25.42
ACTUAL: array([ -6.09  ,   8.34  ,  -1.869 ,   3.764 ,   3.158 ,  -4.246 ,
17.22  ,   5.96  ,  -3.4   , -14.54  ,  -0.316 ,  -9.71  ,
4.06  ,  13.53  ,  14.52  , -16.27  ,  -4.11  ,   3.963 ,...
DESIRED: array([-3.6969e+01,  3.9656e+01, -1.5975e+02, -2.4609e+01, -4.8250e+01,
-2.8031e+01, -8.2500e+01, -4.5688e+01, -2.0500e+01, -1.6859e+01,
-6.3562e+01,  1.5488e+02,  1.5050e+02,  7.9688e+01, -3.9594e+01,...
2025-04-27 05:00:16.339324 test begin: paddle.sum(Tensor([224, 54400],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([224, 54400],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 224 / 224 (100%)
Max absolute difference among violations: 184.5
Max relative difference among violations: 5.63
ACTUAL: array([-10.37  ,   8.2   , -13.38  ,  15.79  ,  31.94  ,   9.695 ,
-10.87  ,   6.613 ,  16.44  , -10.445 ,  17.17  ,   8.34  ,
8.91  , -13.74  ,  11.09  ,  10.42  ,   3.027 ,  -6.66  ,...
DESIRED: array([  65.3  ,    6.637,   22.33 ,  -81.44 ,  -57.72 ,    3.95 ,
-36.5  ,   -1.428,   77.2  ,   59.4  ,  107.94 ,   21.42 ,
20.89 ,    7.508,  -27.55 ,  191.2  ,  -13.266,   14.805,...
2025-04-27 05:00:17.823802 test begin: paddle.sum(Tensor([224, 59200],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([224, 59200],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 223 / 224 (99.6%)
Max absolute difference among violations: 239.2
Max relative difference among violations: 37.25
ACTUAL: array([  4.586 ,   4.44  ,  -2.023 , -10.85  ,  12.4   ,  18.08  ,
5.13  ,  -2.828 ,  -6.42  ,   4.49  ,  -0.9414,  -2.127 ,
7.082 ,  -4.97  ,  12.24  ,  -8.69  ,  -9.46  ,  -3.373 ,...
DESIRED: array([  65.5   ,   46.4   ,  -47.06  ,   68.44  ,  182.1   ,  -97.06  ,
-45.2   ,  -30.97  ,   78.56  ,  -41.4   ,  -43.56  ,  -14.13  ,
20.05  ,   47.25  ,  -25.75  ,   20.56  ,  -71.44  ,  -33.38  ,...
2025-04-27 05:00:19.447368 test begin: paddle.sum(Tensor([224, 60800],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([224, 60800],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 224 / 224 (100%)
Max absolute difference among violations: 243.4
Max relative difference among violations: 13.945
ACTUAL: array([  2.854 ,  -0.0818,  -2.152 ,   3.135 ,  -1.904 ,   5.69  ,
-9.484 ,  -8.78  ,  -9.41  ,  12.625 ,  26.86  ,  -5.664 ,
-1.379 ,  -7.707 ,  19.17  ,  22.27  ,  -0.95  ,   7.56  ,...
DESIRED: array([  36.06 ,   -1.122,   88.6  ,  -63.66 ,   28.1  ,   21.58 ,
70.4  ,  -14.81 ,  -62.94 ,    5.27 ,   18.1  ,   26.02 ,
-78.6  ,  -54.25 ,   74.94 ,   46.34 ,  -30.78 ,  -84.8  ,...
2025-04-27 05:00:21.087768 test begin: paddle.sum(Tensor([224, 63232],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([224, 63232],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 224 / 224 (100%)
Max absolute difference among violations: 205.6
Max relative difference among violations: 29.72
ACTUAL: array([ 9.6797e+00,  1.5609e+01, -1.9703e+01,  5.6602e+00, -1.3586e+01,
1.8750e+01,  6.0273e+00, -2.0812e+01,  1.7998e+00,  7.5430e+00,
1.1922e+01,  9.2812e+00,  1.1469e+01, -1.0305e+01,  4.4609e+00,...
DESIRED: array([  33.8  ,   43.22 ,  -10.414,   14.945, -119.   ,   64.6  ,
17.08 ,   11.836,  -33.8  ,  131.6  ,   41.44 ,  -82.8  ,
-39.72 ,  -84.1  ,    2.635,  -54.28 ,  102.8  ,   54.94 ,...
2025-04-27 05:00:22.708080 test begin: paddle.sum(Tensor([224, 65600],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([224, 65600],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 223 / 224 (99.6%)
Max absolute difference among violations: 205.1
Max relative difference among violations: 130.9
ACTUAL: array([ -3.633 ,  -9.19  , -10.086 , -18.25  ,  -2.383 ,  10.875 ,
-6.99  , -15.41  ,  -5.527 ,  -8.03  , -12.88  ,   1.735 ,
-5.957 ,   4.855 , -13.06  ,  -0.996 ,   5.516 ,  11.98  ,...
DESIRED: array([-1.2320e+01, -1.3075e+02,  7.5742e+00,  1.9922e+01, -3.8281e+01,
1.7203e+01, -3.7656e+01, -1.8238e+02, -1.0088e+02,  3.8344e+01,
6.8438e+01,  3.0016e+01,  8.0250e+01,  2.4656e+01, -9.9562e+01,...
2025-04-27 05:00:24.405036 test begin: paddle.sum(Tensor([224, 67200],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([224, 67200],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 224 / 224 (100%)
Max absolute difference among violations: 200.6
Max relative difference among violations: 13.17
ACTUAL: array([  1.075  , -11.74   ,   9.055  ,  22.14   ,   1.722  , -19.88   ,
-2.238  ,  17.33   ,  17.33   ,  -7.2    ,   8.91   ,  -4.375  ,
-3.88   ,  -1.864  ,  -6.594  , -16.75   ,   2.355  ,   0.929  ,...
DESIRED: array([ -31.02  ,  -83.5   ,  150.1   ,  -64.25  ,  -67.06  ,  -25.05  ,
-18.11  ,  181.9   ,    1.223 , -110.6   ,  -38.28  ,  -85.56  ,
-160.    ,  -66.44  ,   -3.701 ,   47.4   ,  141.9   ,  -10.25  ,...
2025-04-27 05:00:26.155576 test begin: paddle.sum(Tensor([224, 76160],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([224, 76160],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 223 / 224 (99.6%)
Max absolute difference among violations: 233.4
Max relative difference among violations: 67.94
ACTUAL: array([-1.0516e+01, -6.2031e+00, -9.7734e+00,  1.1279e+00,  1.2367e+01,
-3.0098e+00,  1.3727e+01, -7.1094e+00,  2.3496e+00,  5.0195e+00,
-3.4883e+00, -1.0602e+01,  8.9688e+00,  7.4492e+00,  2.8418e+00,...
DESIRED: array([ 7.1625e+01, -8.3875e+01, -1.0281e+01, -5.6625e+01,  1.9844e+01,
7.3562e+01,  1.5312e+02,  1.4672e+01, -1.2056e+02,  5.6031e+01,
3.5906e+01,  1.1250e+02, -1.4766e+00,  6.6750e+01,  1.3062e+02,...
2025-04-27 05:00:28.135631 test begin: paddle.sum(Tensor([224, 78336],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([224, 78336],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 224 / 224 (100%)
Max absolute difference among violations: 226.1
Max relative difference among violations: 5.91
ACTUAL: array([-11.41   ,   6.453  , -20.56   , -16.67   ,  19.95   , -14.15   ,
5.85   ,   1.94   , -16.78   ,  -3.588  ,   5.777  ,   3.16   ,
-11.66   ,  -7.656  , -10.28   ,   3.912  ,   9.72   ,   5.2    ,...
DESIRED: array([  35.78 ,   48.34 , -138.8  ,  -10.39 ,  176.1  ,   93.4  ,
79.06 ,    9.734,  -21.78 ,   58.56 ,   10.09 ,  106.44 ,
28.78 ,  -68.3  ,  -59.88 ,  -56.03 ,  -24.6  ,  -49.7  ,...
2025-04-27 05:00:30.018003 test begin: paddle.sum(Tensor([224, 82688],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([224, 82688],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 224 / 224 (100%)
Max absolute difference among violations: 239.5
Max relative difference among violations: 24.23
ACTUAL: array([-7.1875e+00,  1.1992e+01,  1.0133e+01,  1.5625e-02, -9.7969e+00,
1.3367e+01, -8.0781e+00,  2.3078e+01,  4.0859e+00,  9.7559e-01,
1.5945e+01, -2.0109e+01,  7.7969e+00, -6.1562e+00, -2.1953e+00,...
DESIRED: array([ -47.44  ,   56.84  ,   38.44  ,   96.44  ,   34.56  ,   23.61  ,
-46.53  ,   11.84  ,   21.98  ,   53.34  ,   29.23  ,  -46.6   ,
36.62  ,  -61.84  ,   83.    ,  -22.5   ,  -11.1   ,  126.44  ,...
2025-04-27 05:00:32.109594 test begin: paddle.sum(Tensor([224, 92416],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([224, 92416],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 223 / 224 (99.6%)
Max absolute difference among violations: 271.8
Max relative difference among violations: 33.88
ACTUAL: array([  3.54  ,   0.2776,  -6.926 ,  14.21  ,  -2.676 , -19.47  ,
5.723 ,  -4.16  , -13.75  ,  11.38  ,  31.7   ,   4.02  ,
-6.137 ,  21.4   , -16.38  ,   7.72  ,  -5.414 ,   4.895 ,...
DESIRED: array([ -53.5   ,   58.3   ,  -73.    ,   65.7   ,   45.3   ,  -25.12  ,
-65.7   ,   29.77  , -118.06  ,   31.02  ,  303.5   ,  -74.7   ,
-94.7   ,  104.25  ,  -56.1   , -142.1   ,  -16.28  , -157.2   ,...
2025-04-27 05:00:36.095630 test begin: paddle.sum(Tensor([228, 102144],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([228, 102144],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 228 / 228 (100%)
Max absolute difference among violations: 243.
Max relative difference among violations: 26.6
ACTUAL: array([ 1.6375e+01, -4.9531e+00, -8.0938e+00,  2.2988e+00,  1.5359e+01,
9.8359e+00, -4.6133e+00,  8.1738e-01, -7.4766e+00,  4.0195e+00,
9.4141e+00, -2.7100e-01, -2.0281e+01,  2.8242e+00, -1.6455e+00,...
DESIRED: array([ -22.5  ,  -93.06 , -140.9  ,   71.6  ,  112.4  ,  -73.5  ,
24.05 ,  -65.3  ,  -44.7  ,  132.2  ,    2.125,   43.   ,
41.72 ,  -11.64 ,  105.75 ,  -11.07 ,  -43.75 ,  -28.7  ,...
2025-04-27 05:00:42.689672 test begin: paddle.sum(Tensor([228, 67200],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([228, 67200],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 228 / 228 (100%)
Max absolute difference among violations: 205.8
Max relative difference among violations: 170.9
ACTUAL: array([ 18.66  ,  13.77  ,  -4.406 , -12.95  ,  26.69  ,   3.27  ,
7.637 , -13.805 ,  16.14  ,   2.55  ,  -5.4   ,   4.3   ,
16.67  ,  -7.473 ,  10.25  ,  -8.75  , -10.88  ,   2.852 ,...
DESIRED: array([ 1.2506e+02,  7.7312e+01,  5.4688e+01, -4.1844e+01,  1.1788e+02,
1.0102e+01, -7.5562e+01,  7.3438e+01,  1.7859e+01, -1.8900e+02,
-4.6938e+01, -1.0150e+02,  5.2031e+01,  3.1188e+01,  4.2281e+01,...
2025-04-27 05:00:44.439850 test begin: paddle.sum(Tensor([228, 82688],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([228, 82688],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 227 / 228 (99.6%)
Max absolute difference among violations: 245.2
Max relative difference among violations: 455.5
ACTUAL: array([ -1.298  ,   4.508  ,   7.453  ,  -4.367  ,  15.28   ,   5.35   ,
6.812  ,  -1.12   , -20.58   ,   0.565  ,  22.66   , -27.84   ,
3.77   , -15.75   ,  18.88   , -12.414  ,   7.258  ,   5.523  ,...
DESIRED: array([-2.8625e+01,  8.7875e+01,  1.3125e+02,  3.4750e+01, -2.6203e+01,
2.6375e+01, -6.5562e+01, -1.0931e+02,  8.3594e+00,  1.6350e+02,
-3.1453e+01, -3.2438e+01,  1.4088e+02,  2.6938e+01,  3.3344e+01,...
2025-04-27 05:00:54.982726 test begin: paddle.sum(Tensor([232, 54400],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([232, 54400],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 231 / 232 (99.6%)
Max absolute difference among violations: 210.4
Max relative difference among violations: 36.28
ACTUAL: array([-19.34  ,  11.69  ,  -0.4778,   1.5   , -20.27  ,  -8.01  ,
-3.562 , -14.24  ,  14.87  , -10.55  ,   0.1501,   9.95  ,
9.4   ,   0.759 ,  -5.973 ,   8.22  , -12.07  ,  -5.062 ,...
DESIRED: array([  37.44  ,   65.75  ,  -19.97  ,    6.76  ,  -68.8   ,  -30.19  ,
-73.4   ,  -23.19  ,   47.38  ,  -29.89  ,  131.4   ,  113.56  ,
7.094 ,   41.4   ,   62.22  ,   10.6   ,   41.    ,  -21.48  ,...
2025-04-27 05:00:56.477498 test begin: paddle.sum(Tensor([232, 67200],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([232, 67200],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 232 / 232 (100%)
Max absolute difference among violations: 225.4
Max relative difference among violations: 7.777
ACTUAL: array([ 1.0938e+01, -2.1297e+01, -9.9062e+00, -1.2285e+00,  6.5195e+00,
-2.8691e+00,  1.8109e+01, -1.2281e+01, -2.7578e+00, -5.9961e+00,
-8.8203e+00, -7.3945e+00,  8.1172e+00, -1.6750e+01,  2.7109e+00,...
DESIRED: array([ -62.7  , -111.7  , -184.1  ,   29.95 ,  -76.3  ,  105.1  ,
51.4  ,  -52.28 , -111.1  ,   73.75 ,  -82.75 ,   18.94 ,
-40.38 ,  -92.3  ,   86.4  ,  -97.3  , -207.   ,  -33.4  ,...
2025-04-27 05:00:58.300929 test begin: paddle.sum(Tensor([232, 92416],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([232, 92416],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 232 / 232 (100%)
Max absolute difference among violations: 229.1
Max relative difference among violations: 24.23
ACTUAL: array([ 1.5938e+01, -2.1266e+01, -3.9473e+00, -9.6250e+00,  2.0344e+01,
-1.2102e+01,  3.5547e+00, -1.2680e+01, -1.5992e+01,  1.7594e+01,
-1.3414e+01, -1.1031e+01,  1.0844e+01,  1.8531e+01, -1.7750e+01,...
DESIRED: array([  35.53  ,  -51.88  ,   97.3   ,  200.4   ,  100.3   ,   11.164 ,
-128.9   ,  -81.4   ,  101.06  ,  -74.7   ,   17.02  ,   15.61  ,
31.22  ,    0.7344,  -47.3   ,  -37.28  ,  -42.06  ,   86.3   ,...
2025-04-27 05:01:00.723757 test begin: paddle.sum(Tensor([232, 99456],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([232, 99456],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 231 / 232 (99.6%)
Max absolute difference among violations: 288.5
Max relative difference among violations: 844.
ACTUAL: array([ 6.7266e+00,  2.7188e+00,  4.5547e+00, -1.3245e-01,  7.4688e+00,
-5.7715e-01,  1.6531e+01, -6.2188e+00,  4.8364e-01,  6.1523e+00,
-8.5449e-03, -8.1094e+00, -1.0484e+01,  3.7520e+00, -3.3301e+00,...
DESIRED: array([-1.1662e+02,  1.6775e+02, -8.4062e+01, -2.2688e+01, -5.6219e+01,
4.0688e+01, -8.9500e+01,  5.1758e+00,  3.9668e+00,  5.4500e+01,
-8.3312e+01, -4.6875e+01, -7.6000e+01,  1.6450e+02, -4.4656e+01,...
2025-04-27 05:01:06.545203 test begin: paddle.sum(Tensor([236, 54400],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([236, 54400],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 235 / 236 (99.6%)
Max absolute difference among violations: 206.1
Max relative difference among violations: 169.8
ACTUAL: array([ 18.86  ,  -6.72  ,  20.62  ,  13.66  ,  -4.785 ,  11.65  ,
8.44  ,  -4.19  , -16.45  ,  -7.785 ,  -1.11  ,   4.01  ,
-2.354 ,  -3.83  ,  14.33  ,  14.61  ,  -6.023 ,  11.61  ,...
DESIRED: array([ 1.5023e+01, -3.5594e+01,  9.4938e+01,  3.6406e+01, -4.5625e+01,
1.8391e+01, -3.0859e+01, -8.0000e+00, -4.9969e+01,  4.4125e+01,
-6.9750e+01, -8.6250e+00,  3.5625e+01,  3.0141e+01,  9.6750e+01,...
2025-04-27 05:01:08.116566 test begin: paddle.sum(Tensor([236, 60800],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([236, 60800],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 236 / 236 (100%)
Max absolute difference among violations: 227.5
Max relative difference among violations: 16.97
ACTUAL: array([-13.56  ,   4.88  ,  11.61  , -18.34  , -12.56  , -17.05  ,
-0.802 ,  10.22  ,  -5.266 ,  -0.5938,  -6.277 ,  17.3   ,
-5.223 ,   0.4812,   4.074 ,   7.35  ,  -6.336 ,  11.445 ,...
DESIRED: array([ -11.47  ,   54.5   ,    7.99  ,  -15.26  ,  -63.88  ,  -62.28  ,
-59.4   ,    4.598 ,   31.28  ,    0.3477,   82.8   ,    3.629 ,
-42.12  ,    7.1   , -103.75  ,   56.47  ,   94.75  ,  -18.44  ,...
2025-04-27 05:01:11.134430 test begin: paddle.sum(Tensor([24, 102144],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([24, 102144],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 24 / 24 (100%)
Max absolute difference among violations: 179.6
Max relative difference among violations: 6.707
ACTUAL: array([ -2.162 ,  -9.445 ,  -9.37  , -17.83  ,   4.645 ,  -6.496 ,
12.86  ,  -3.28  ,   1.882 ,  -9.42  ,  -4.727 ,  19.7   ,
3.375 , -10.33  ,  10.86  , -28.22  , -19.25  ,  -0.2322,...
DESIRED: array([ -92.5  ,    1.655,  -75.75 ,  -94.   ,  -24.61 ,   13.98 ,
172.5  ,   -4.133,  -65.8  , -189.   ,   38.88 ,   24.12 ,
-42.94 ,  -51.47 ,    4.645, -107.2  ,   32.97 ,  -31.81 ,...
2025-04-27 05:01:11.620032 test begin: paddle.sum(Tensor([24, 104832],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([24, 104832],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 24 / 24 (100%)
Max absolute difference among violations: 216.4
Max relative difference among violations: 2.072
ACTUAL: array([ -2.76  ,  20.1   ,  -8.836 ,   4.492 ,  -9.23  , -15.34  ,
5.42  , -13.86  ,  -2.973 ,  -3.275 ,  12.516 ,   0.498 ,
-9.16  ,  17.    ,  -3.977 ,   2.883 ,  -6.8   ,   1.871 ,...
DESIRED: array([-100.5 ,   48.4 ,  165.9 ,   48.6 , -203.1 ,  -74.25,  -18.52,
31.92,  -52.62,  -69.4 ,   36.62,  216.9 , -157.8 ,   27.34,
-31.47,   91.5 , -202.2 , -111.75,   30.89,  112.4 ,  -27.11,
-194.9 ,  -45.34,  109.25], dtype=float16)
2025-04-27 05:01:12.216043 test begin: paddle.sum(Tensor([24, 112896],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([24, 112896],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 24 / 24 (100%)
Max absolute difference among violations: 173.6
Max relative difference among violations: 2.94
ACTUAL: array([ -3.404,  -4.746,  -7.06 ,   2.336,   2.885,  -9.05 , -14.56 ,
13.21 ,   7.86 ,  -2.855,   6.64 ,  11.04 ,  -5.14 ,  11.63 ,
8.875,  -8.59 ,  10.445, -22.73 ,   5.297,  -8.5  ,   3.486,
8.305,  -2.93 ,  -4.69 ], dtype=float16)
DESIRED: array([ -30.53 ,  -25.92 ,   31.1  ,  176.   ,   -8.31 ,  -92.4  ,
-110.6  ,  -23.19 ,  100.25 , -133.8  ,   69.   ,  -35.8  ,
-19.67 ,   21.81 ,   35.62 , -148.8  ,   16.42 ,  -79.   ,...
2025-04-27 05:01:32.720152 test begin: paddle.sum(Tensor([24, 54400],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([24, 54400],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 24 / 24 (100%)
Max absolute difference among violations: 146.
Max relative difference among violations: 2.273
ACTUAL: array([  1.55 , -14.36 , -15.2  ,  -7.22 ,  -2.508,  17.84 ,   8.65 ,
-15.61 , -11.91 ,   1.413,  -3.559,   7.016,   2.092, -15.016,
-2.459, -15.375,  13.14 ,  12.85 ,  -9.12 , -20.14 ,  -2.2  ,
-13.38 ,  -4.547,   4.297], dtype=float16)
DESIRED: array([  -9.77 , -139.4  , -106.   ,  -51.66 ,  -76.25 ,  105.4  ,
-73.25 ,   12.24 ,  -26.58 , -144.6  ,   76.2  ,    2.309,
65.7  ,   53.25 , -107.7  ,  -42.3  ,  101.2  ,  -48.   ,...
2025-04-27 05:01:33.192366 test begin: paddle.sum(Tensor([24, 56576],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([24, 56576],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 24 / 24 (100%)
Max absolute difference among violations: 138.8
Max relative difference among violations: 11.95
ACTUAL: array([ -5.89 ,  -2.117, -10.914,  15.625,   7.973,   3.195,  -8.51 ,
12.52 ,   9.086,  20.55 ,  19.39 ,   6.457,  -9.94 ,  14.75 ,
-2.32 ,   1.858,   5.773,  -7.242,  12.875,  13.31 ,  -0.503,
-1.282,   1.124, -18.2  ], dtype=float16)
DESIRED: array([  39.4   ,   38.3   ,  -29.23  ,   51.84  ,   56.88  ,    7.83  ,
-86.94  ,  140.2   ,   -0.8296,  -18.52  ,   53.84  ,  -90.94  ,
-45.    ,  -65.3   ,  136.4   ,  -12.125 ,   43.53  ,  -47.78  ,...
2025-04-27 05:01:33.608515 test begin: paddle.sum(Tensor([24, 57600],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([24, 57600],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 24 / 24 (100%)
Max absolute difference among violations: 135.1
Max relative difference among violations: 3.562
ACTUAL: array([  3.098,  -7.277, -22.23 ,   8.055,  -8.125,  13.62 ,  11.3  ,
20.12 ,  -1.735,  -5.516, -10.83 , -14.78 ,   5.066,  -1.357,
-6.395, -17.77 ,   4.234,  14.336, -24.78 ,  -7.8  , -10.8  ,
3.205,  -9.016,   8.6  ], dtype=float16)
DESIRED: array([  -2.969,   16.81 ,  -25.6  ,   29.98 , -143.2  ,  129.4  ,
47.94 ,  -29.81 ,   -2.55 ,   84.25 ,   27.23 ,  -25.31 ,
-49.22 ,   64.5  ,  -14.97 ,   26.33 ,   54.75 ,   47.44 ,...
2025-04-27 05:01:34.123872 test begin: paddle.sum(Tensor([24, 60800],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([24, 60800],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 24 / 24 (100%)
Max absolute difference among violations: 139.8
Max relative difference among violations: 6.81
ACTUAL: array([ -4.31  ,   0.2231, -12.89  ,   0.748 ,   0.0708, -13.75  ,
-5.77  ,  23.58  ,  -3.645 ,  -6.613 ,  -3.742 ,  12.17  ,
-5.06  , -10.96  ,  -9.29  ,   5.7   ,   3.004 ,  -1.919 ,...
DESIRED: array([-130.4   , -115.4   ,   -6.074 ,  -70.06  ,  -19.78  ,  -49.1   ,
-2.059 ,  -25.19  ,  -14.125 ,   -0.8467,  -67.4   ,   99.9   ,
85.8   ,   53.53  ,   14.36  ,   34.72  ,  108.06  ,  -42.38  ,...
2025-04-27 05:01:34.584963 test begin: paddle.sum(Tensor([24, 62400],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([24, 62400],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 24 / 24 (100%)
Max absolute difference among violations: 148.9
Max relative difference among violations: 3.012
ACTUAL: array([  6.637,  11.73 , -12.79 ,  -3.57 ,  27.95 ,   8.62 ,   7.637,
-16.47 ,  -2.992,  -0.897,  -9.56 ,  -2.516,  -3.814,  -4.184,
-9.89 ,   1.297,  -0.759,   2.963,   2.44 ,   5.152,  -2.84 ,
7.773,  13.18 ,  -8.15 ], dtype=float16)
DESIRED: array([  -3.299,   42.6  ,  -79.5  ,   62.62 ,   51.4  ,   65.56 ,
-45.66 , -154.4  ,   79.8  ,   -1.519,   46.12 ,  -83.6  ,
-125.7  ,  -51.22 ,  -59.44 ,  -18.72 ,   50.6  ,   51.56 ,...
2025-04-27 05:01:35.050601 test begin: paddle.sum(Tensor([24, 63232],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([24, 63232],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 24 / 24 (100%)
Max absolute difference among violations: 182.
Max relative difference among violations: 1.98
ACTUAL: array([ -8.    ,  12.78  ,  -2.848 ,  -5.227 ,  -2.363 ,  11.47  ,
-4.906 , -10.64  ,   2.33  ,  13.984 ,   0.4775, -12.06  ,
-3.746 ,  -5.902 ,   3.912 ,   2.781 , -17.23  ,  17.81  ,...
DESIRED: array([   8.16 ,  -27.45 ,  -58.66 ,    7.258,   49.78 ,   74.94 ,
56.62 ,  -21.33 ,   10.5  ,   60.53 ,  131.4  ,   69.2  ,
-31.67 ,  121.6  ,  149.4  ,   84.8  ,  -45.84 ,   37.4  ,...
2025-04-27 05:01:35.716498 test begin: paddle.sum(Tensor([24, 64000],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([24, 64000],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 24 / 24 (100%)
Max absolute difference among violations: 175.9
Max relative difference among violations: 1.799
ACTUAL: array([  6.453 ,  -1.207 ,  -0.2844,   6.797 ,   3.71  ,   4.047 ,
5.605 , -15.4   ,  12.58  ,  -9.68  , -25.28  ,  13.36  ,
1.189 ,   9.01  ,  13.21  ,  -3.084 ,  -5.09  ,  16.05  ,...
DESIRED: array([  15.914, -101.25 ,   75.3  ,   -9.9  ,  -33.88 ,    3.123,
6.164,  103.75 ,  103.2  ,   12.125,  -58.4  , -162.5  ,
32.9  ,   12.99 ,  -70.75 ,  -43.4  ,  -40.7  ,    8.22 ,...
2025-04-27 05:01:36.170056 test begin: paddle.sum(Tensor([24, 67200],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([24, 67200],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 23 / 24 (95.8%)
Max absolute difference among violations: 171.
Max relative difference among violations: 28.92
ACTUAL: array([ -1.288 ,  -4.96  ,   4.65  ,   5.316 ,   0.1313, -11.96  ,
-3.943 ,   5.176 ,   1.283 ,  -3.336 ,  10.625 , -19.    ,
2.586 ,   8.98  ,   7.258 ,   7.098 ,  -1.143 ,  -8.11  ,...
DESIRED: array([ -20.33  ,  166.    ,   25.94  ,  -18.39  , -100.7   ,  -57.47  ,
53.03  ,  -54.44  ,   41.9   ,  -31.62  ,    6.375 ,  -63.03  ,
-11.914 ,   39.6   ,   18.4   ,   -0.2542,   -9.07  , -121.2   ,...
2025-04-27 05:01:36.608179 test begin: paddle.sum(Tensor([24, 68096],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([24, 68096],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 24 / 24 (100%)
Max absolute difference among violations: 193.5
Max relative difference among violations: 6.805
ACTUAL: array([  9.43 ,   3.848,  -4.26 ,   7.793,  -5.766, -12.164,   6.938,
12.69 ,  12.17 , -14.37 ,  13.93 , -18.33 , -12.59 ,   8.94 ,
8.42 , -16.11 , -10.305,   8.15 ,  -9.08 ,   3.383,   1.712,
7.43 ,  15.94 ,  -6.297], dtype=float16)
DESIRED: array([  96.4  ,  100.94 ,  145.   ,   68.56 ,  -33.12 ,  -30.4  ,
-15.98 ,  206.2  ,   70.1  ,  -94.44 ,   87.6  ,  -18.66 ,
29.5  ,   -2.406,   82.94 ,   -2.064, -105.4  ,   52.2  ,...
2025-04-27 05:01:37.099008 test begin: paddle.sum(Tensor([24, 70528],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([24, 70528],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 24 / 24 (100%)
Max absolute difference among violations: 155.5
Max relative difference among violations: 3.143
ACTUAL: array([  8.875,  -5.277,   5.168,   1.99 ,  15.57 ,   3.484, -12.84 ,
-24.66 ,   4.17 ,  -6.85 ,   0.263,  19.39 , -19.72 ,   7.31 ,
12.96 ,   3.332,  -4.125,  -4.42 ,  -8.66 ,   5.098,   9.74 ,
4.504,  28.22 ,  -8.69 ], dtype=float16)
DESIRED: array([ -32.62  ,   93.4   ,   60.44  ,    0.4805,   42.94  ,  -17.83  ,
37.38  ,  -73.75  ,  127.4   ,  -89.5   , -155.2   ,   94.2   ,
-59.28  ,   61.06  ,    5.848 ,  -11.65  ,  -43.22  ,  -36.1   ,...
2025-04-27 05:01:37.591763 test begin: paddle.sum(Tensor([24, 73984],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([24, 73984],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 24 / 24 (100%)
Max absolute difference among violations: 154.6
Max relative difference among violations: 1.612
ACTUAL: array([-14.05 ,  -5.938,  10.32 ,  18.89 ,   8.125,  18.03 ,   2.957,
-15.38 ,  -2.926, -14.05 , -25.19 , -17.1  ,   8.31 , -17.67 ,
2.436,  22.48 ,   8.53 ,  -0.327,   2.26 ,   8.91 ,  11.15 ,
-6.312,  14.055,  -5.65 ], dtype=float16)
DESIRED: array([  78.94 ,   76.75 ,   71.25 ,    7.63 ,   10.92 ,   73.6  ,
-109.94 ,   27.66 ,  120.6  ,  -96.2  ,  -78.8  ,  -58.1  ,
-72.6  ,  -25.88 , -118.2  ,  109.2  ,  -37.38 ,  -91.94 ,...
2025-04-27 05:01:38.069773 test begin: paddle.sum(Tensor([24, 74240],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([24, 74240],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 24 / 24 (100%)
Max absolute difference among violations: 203.6
Max relative difference among violations: 22.9
ACTUAL: array([ 15.65  ,  21.58  ,  10.9   ,  -4.816 ,  -1.454 ,  25.73  ,
22.39  ,  12.65  ,  -1.236 ,  -7.3   , -17.84  ,  -3.21  ,
-5.938 ,  -1.712 , -15.484 , -12.49  ,   3.424 , -12.07  ,...
DESIRED: array([  -0.7144,  225.2   , -167.8   ,   69.75  ,   99.1   ,  107.25  ,
112.5   ,   68.1   ,  -38.62  ,   30.33  ,  -18.92  ,   35.4   ,
-139.6   ,   73.75  ,  -75.44  ,  -31.02  ,  -36.8   ,  111.3   ,...
2025-04-27 05:01:38.549721 test begin: paddle.sum(Tensor([24, 76032],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([24, 76032],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 24 / 24 (100%)
Max absolute difference among violations: 124.44
Max relative difference among violations: 2.389
ACTUAL: array([ -1.811, -25.81 ,   5.84 ,  12.2  ,   2.492,  -3.57 , -11.43 ,
-10.46 ,   6.44 ,  -1.95 ,  -0.816,  -5.816,  -8.47 , -17.5  ,
25.92 ,   8.305,  16.81 ,   9.   ,   8.016,  -7.117,   6.227,
3.207,  -8.56 , -11.4  ], dtype=float16)
DESIRED: array([122.6  ,  18.6  ,  19.02 ,   4.684, 120.7  ,  -8.01 , -88.75 ,
-33.78 ,  44.84 , -41.34 ,  98.4  , -82.9  ,  56.88 , -72.25 ,
44.25 ,  68.44 , -13.63 ,  50.72 , 105.4  ,  60.97 , -37.3  ,
15.016,  61.28 ,  -6.043], dtype=float16)
2025-04-27 05:01:38.963929 test begin: paddle.sum(Tensor([24, 76160],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([24, 76160],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 24 / 24 (100%)
Max absolute difference among violations: 213.6
Max relative difference among violations: 4.016
ACTUAL: array([ 20.66  ,  -0.1863, -31.95  ,  -4.93  , -21.34  ,  -3.502 ,
5.316 ,   8.33  ,  20.84  ,   0.384 ,   5.69  ,  -1.304 ,
-2.236 ,   3.857 ,  -2.379 , -10.92  ,  -9.375 ,  -4.8   ,...
DESIRED: array([  69.6  ,  -50.7  ,  -10.03 ,  -87.1  ,   14.3  ,   34.66 ,
-14.93 ,  -12.625,  -44.3  ,    2.531,  -41.62 ,   98.1  ,
-30.55 ,  177.9  ,   47.44 ,   71.7  ,   44.72 ,  -35.94 ,...
2025-04-27 05:01:39.408764 test begin: paddle.sum(Tensor([24, 78144],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([24, 78144],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 24 / 24 (100%)
Max absolute difference among violations: 172.4
Max relative difference among violations: 2.53
ACTUAL: array([-22.77 , -25.27 , -20.16 ,   5.676,   8.07 , -12.195,  -5.824,
-16.36 ,  -3.83 , -12.27 ,  -2.117,  18.28 ,  -8.125,   9.88 ,
8.11 , -17.55 ,   4.285,  -6.797,  -2.01 ,  -4.137,  -5.625,
-17.23 ,  -8.44 ,  11.03 ], dtype=float16)
DESIRED: array([ -11.16 , -197.6  ,   89.44 ,  -23.53 ,   20.27 , -148.5  ,
-62.25 ,  -20.38 ,   34.47 , -168.8  ,   52.12 ,  110.1  ,
135.9  ,  -27.47 ,  -97.   ,   11.48 ,   24.95 ,  -95.2  ,...
2025-04-27 05:01:39.937033 test begin: paddle.sum(Tensor([24, 78336],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([24, 78336],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 24 / 24 (100%)
Max absolute difference among violations: 124.9
Max relative difference among violations: 1.394
ACTUAL: array([ -0.9165,   1.898 ,   8.31  ,   6.01  ,  -8.7   ,  -2.959 ,
10.05  ,   1.715 ,  17.9   ,   7.363 ,  10.11  ,  14.01  ,
-16.95  , -11.24  ,   3.803 ,  13.2   ,  20.45  ,  12.75  ,...
DESIRED: array([ -38.06,  -53.  ,  -45.94, -118.9 ,   22.14,  -85.  ,   76.7 ,
17.47,   76.7 ,   72.5 ,  -82.9 ,   10.65,  -29.17,   31.5 ,
-92.9 ,  -88.4 ,   16.25,  108.06,  -29.97,  -31.62, -130.8 ,
62.25,  -53.8 ,  -55.03], dtype=float16)
2025-04-27 05:01:40.472938 test begin: paddle.sum(Tensor([24, 80256],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([24, 80256],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 24 / 24 (100%)
Max absolute difference among violations: 174.1
Max relative difference among violations: 11.91
ACTUAL: array([ -5.19  ,  -0.3718,   3.652 ,   3.58  ,   1.553 ,  -8.07  ,
2.607 ,   8.37  , -20.45  ,   0.9   , -11.11  ,   6.03  ,
7.355 , -16.58  ,  12.62  ,  -6.344 , -21.78  ,  -9.15  ,...
DESIRED: array([  66.8   ,   87.    ,  -78.75  ,   90.75  ,   70.4   ,   -0.6255,
-171.5   ,  -31.72  , -189.1   ,  -20.64  , -135.2   ,   39.16  ,
-27.33  ,    7.383 ,  -43.12  ,    8.805 ,  -14.57  ,  -14.875 ,...
2025-04-27 05:01:40.939160 test begin: paddle.sum(Tensor([24, 80512],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([24, 80512],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 24 / 24 (100%)
Max absolute difference among violations: 165.1
Max relative difference among violations: 1.884
ACTUAL: array([ 10.37  ,  18.9   ,  -0.2458,  -7.72  ,  -7.832 , -19.81  ,
-7.066 ,   0.552 , -10.54  ,  -1.519 ,  -9.125 ,  10.88  ,
4.824 , -16.7   ,   6.17  ,  -3.49  ,  -5.82  ,  -2.678 ,...
DESIRED: array([-101.94 ,   48.28 ,  126.06 , -129.1  ,   79.6  ,   81.   ,
-31.78 ,    2.932,  -66.4  ,   12.945,   63.78 ,  -57.88 ,
-33.66 ,   18.89 , -120.56 ,   41.12 ,  -18.53 ,   33.66 ,...
2025-04-27 05:01:41.369365 test begin: paddle.sum(Tensor([24, 82688],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([24, 82688],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 24 / 24 (100%)
Max absolute difference among violations: 224.1
Max relative difference among violations: 2.191
ACTUAL: array([ 14.32 ,  10.555,   3.592, -13.18 ,  -3.771,   7.55 ,   1.948,
-5.39 ,  11.51 ,  10.85 ,  18.23 ,  22.33 ,  23.23 ,  19.5  ,
-8.1  ,  -1.345,  13.445, -14.62 ,  -7.64 ,  11.29 ,  12.6  ,
7.383,   5.65 ,   3.158], dtype=float16)
DESIRED: array([ -25.  , -213.6 ,  107.5 ,  -89.25,   24.48,  118.44,   15.86,
-31.25,   27.86,   37.38,   27.42,  -63.56,  111.25,  -16.38,
38.4 ,  -16.05,  -55.78,   36.8 ,  -44.9 ,   89.94,  -77.3 ,
-55.78,   65.1 ,  -59.25], dtype=float16)
2025-04-27 05:01:41.827745 test begin: paddle.sum(Tensor([24, 84864],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([24, 84864],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 24 / 24 (100%)
Max absolute difference among violations: 223.
Max relative difference among violations: 1.385
ACTUAL: array([-11.69  ,  -2.783 ,  20.95  ,  10.85  ,  18.5   ,  -4.945 ,
4.63  ,   3.918 ,  -4.566 , -12.28  ,  -6.59  , -18.16  ,
8.68  ,  -6.08  ,   3.533 ,   2.385 ,   1.571 ,  -1.33  ,...
DESIRED: array([-161.   ,  140.1  , -106.25 ,   32.8  ,  241.5  ,  -69.56 ,
-77.06 ,   50.88 ,   54.75 ,  -97.6  ,   57.28 ,   47.16 ,
-60.47 ,   -8.22 ,  -98.8  ,  133.8  ,  -42.88 ,  -71.06 ,...
2025-04-27 05:01:42.318036 test begin: paddle.sum(Tensor([24, 85120],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([24, 85120],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 24 / 24 (100%)
Max absolute difference among violations: 202.8
Max relative difference among violations: 17.6
ACTUAL: array([-13.47  ,  -4.734 ,   4.375 ,   5.723 ,  -5.633 , -14.62  ,
-1.8125, -30.9   ,   6.223 ,   4.383 , -18.69  ,   8.29  ,
16.69  ,   2.59  ,  -2.89  ,  -8.875 ,  -0.5723,   8.414 ,...
DESIRED: array([  51.12  ,  -26.14  ,  129.2   ,    3.545 ,  -58.16  ,  -50.44  ,
153.4   , -233.6   ,  -40.56  ,   99.4   ,  -90.56  ,    1.826 ,
-42.7   ,   -7.812 ,   12.72  ,  115.5   ,  -25.83  ,  -11.266 ,...
2025-04-27 05:01:42.857314 test begin: paddle.sum(Tensor([24, 86016],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([24, 86016],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 24 / 24 (100%)
Max absolute difference among violations: 116.7
Max relative difference among violations: 6.676
ACTUAL: array([ 28.84  ,   7.934 ,   2.832 ,  -3.61  ,   0.9927,  -6.55  ,
-0.2708,  10.15  ,  13.87  ,  -8.11  ,   7.84  ,  -0.1392,
1.68  ,  -1.974 ,   3.137 ,  -9.89  ,  -4.266 ,   2.752 ,...
DESIRED: array([  30.55 ,   19.17 ,    5.473,  -62.97 ,  100.3  ,  -10.46 ,
1.485,  100.5  ,    9.81 ,   -1.057,  102.7  ,   94.25 ,
64.8  ,  -70.25 , -108.75 ,  -34.6  ,   86.8  ,    6.8  ,...
2025-04-27 05:01:43.371630 test begin: paddle.sum(Tensor([24, 87040],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([24, 87040],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 24 / 24 (100%)
Max absolute difference among violations: 211.6
Max relative difference among violations: 1.485
ACTUAL: array([  8.984 ,  -1.525 ,  17.17  ,   8.266 , -13.35  ,  -8.945 ,
-12.57  ,  -7.895 , -17.05  ,  -9.26  ,   7.684 , -31.05  ,
3.535 ,   5.47  ,   0.2002,   5.51  ,  -1.639 , -10.555 ,...
DESIRED: array([-196.2   ,  -70.5   ,   82.1   ,  127.9   ,  -19.38  ,   68.44  ,
199.    ,  -58.97  ,   35.1   ,  139.    ,   66.3   ,  -97.44  ,
50.22  ,  -84.8   ,    6.605 ,   39.62  ,   -0.8984,  -42.44  ,...
2025-04-27 05:01:43.825150 test begin: paddle.sum(Tensor([24, 87552],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([24, 87552],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 24 / 24 (100%)
Max absolute difference among violations: 210.5
Max relative difference among violations: 9.586
ACTUAL: array([-10.7   ,  -4.492 , -20.19  ,   0.5054,  -4.562 ,  -3.62  ,
-7.355 , -13.35  ,  -1.515 ,  -6.125 ,   2.602 ,   6.492 ,
2.559 ,  -7.715 ,   9.78  ,   2.299 ,   2.928 , -13.02  ,...
DESIRED: array([ -73.94  , -152.5   ,   89.3   ,  -95.25  ,    2.986 ,  153.    ,
-6.945 ,   26.5   ,  -77.8   ,    5.418 ,  -82.8   ,   72.    ,
-123.2   ,  -24.48  ,  220.2   ,  -62.47  ,   89.8   ,  -34.7   ,...
2025-04-27 05:01:44.372505 test begin: paddle.sum(Tensor([24, 89216],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([24, 89216],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 24 / 24 (100%)
Max absolute difference among violations: 178.5
Max relative difference among violations: 3.727
ACTUAL: array([  2.326, -14.01 ,  -2.3  ,   2.697,   7.105,  -3.975,  -5.938,
-8.47 ,  14.63 ,  -9.81 ,  -6.94 ,  -4.01 , -12.91 , -12.01 ,
-5.098,  19.8  ,  15.586,   7.176,   6.344,   3.697,   0.999,
-27.5  ,   8.445,  15.695], dtype=float16)
DESIRED: array([  61.6  ,  -96.9  , -115.   ,  -77.75 ,  -62.75 ,  -42.7  ,
-129.6  ,  -38.84 ,   11.23 ,    3.6  ,  -69.56 ,  -33.84 ,
-71.06 ,   16.45 , -134.9  ,  113.56 ,   42.72 ,  -28.3  ,...
2025-04-27 05:01:44.879995 test begin: paddle.sum(Tensor([24, 89984],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([24, 89984],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 24 / 24 (100%)
Max absolute difference among violations: 205.9
Max relative difference among violations: 1.351
ACTUAL: array([ 10.39  ,  -0.544 ,  25.73  ,  -2.451 ,  -9.266 ,  10.6   ,
-12.56  , -10.164 ,  21.73  , -13.125 , -15.266 ,   9.17  ,
8.516 ,   1.537 ,  -7.3   ,  -0.4216, -24.84  ,   3.52  ,...
DESIRED: array([  48.1  ,  -15.414,   41.6  ,  -50.1  ,  -54.   ,  185.2  ,
-30.66 ,   96.44 ,  -62.03 , -129.2  ,  -10.19 ,   27.3  ,
89.56 ,  207.4  ,   69.7  , -113.25 ,  -83.3  ,    7.684,...
2025-04-27 05:01:45.327725 test begin: paddle.sum(Tensor([24, 91392],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([24, 91392],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 24 / 24 (100%)
Max absolute difference among violations: 305.
Max relative difference among violations: 2.816
ACTUAL: array([  0.9297,   4.34  ,  -5.953 , -16.98  ,   4.145 ,  -8.875 ,
-4.453 ,  -8.805 ,   5.074 ,   0.0842, -14.83  ,   4.613 ,
5.    ,   1.463 , -25.78  ,  21.3   ,   8.65  ,  -8.22  ,...
DESIRED: array([ -11.414,   -3.943,  100.06 , -130.1  ,  -23.55 ,    4.887,
-4.15 ,  -87.94 , -101.2  ,   26.33 , -319.8  ,   95.1  ,
46.4  ,  -24.7  , -250.2  ,   31.8  ,   -5.633,   19.05 ,...
2025-04-27 05:01:45.857185 test begin: paddle.sum(Tensor([24, 91840],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([24, 91840],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 24 / 24 (100%)
Max absolute difference among violations: 165.5
Max relative difference among violations: 33.97
ACTUAL: array([  0.0825, -14.29  , -16.69  ,   2.69  ,   2.027 ,   9.11  ,
22.23  ,   8.9   ,  24.67  ,  14.18  ,  -9.445 ,  -1.786 ,
5.875 ,  -9.04  ,  -5.18  ,   7.797 , -10.06  ,  -2.205 ,...
DESIRED: array([  8.27  , -36.88  , -54.72  , -92.44  ,  74.8   ,  -0.2761,
-54.34  , 133.4   ,  17.42  , -56.16  ,  57.84  ,  11.23  ,
-49.97  ,  39.06  , 160.4   ,  10.29  ,  33.06  , 105.2   ,...
2025-04-27 05:01:46.390890 test begin: paddle.sum(Tensor([24, 92416],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([24, 92416],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 24 / 24 (100%)
Max absolute difference among violations: 128.4
Max relative difference among violations: 5.133
ACTUAL: array([ 12.94 ,  17.9  ,   6.117,   8.24 ,  -7.84 , -17.62 ,   5.23 ,
-11.92 , -10.984,  23.19 ,  11.414,  -3.951, -16.6  ,   8.39 ,
-8.89 , -23.31 ,   8.46 ,  -2.637, -12.414,  -5.1  ,   3.451,
-6.207,  12.47 ,  -3.361], dtype=float16)
DESIRED: array([   2.11 ,  -27.05 ,   28.45 ,  133.9  ,   14.945, -146.   ,
-2.014,   75.7  ,   41.8  ,   67.56 ,   68.9  ,  -52.1  ,
98.2  ,   86.   ,   32.28 ,  -95.3  ,   37.22 ,  -63.34 ,...
2025-04-27 05:01:46.923435 test begin: paddle.sum(Tensor([24, 94848],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([24, 94848],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 24 / 24 (100%)
Max absolute difference among violations: 228.2
Max relative difference among violations: 2.871
ACTUAL: array([  6.473 ,  12.23  ,  10.734 ,   9.09  ,   4.52  ,   8.54  ,
-1.274 , -10.055 ,  16.22  , -20.7   ,   3.643 ,  -0.3198,
14.41  ,   4.906 ,  -4.383 , -12.07  ,  -0.0945,  -9.25  ,...
DESIRED: array([  90.4  ,   18.86 ,    4.055, -219.   ,  -17.08 ,   38.66 ,
227.   ,   28.7  ,   -8.664,   -9.03 ,   72.94 ,   -3.691,
58.3  , -175.8  , -100.44 ,   26.64 ,   63.22 ,   20.73 ,...
2025-04-27 05:01:47.601471 test begin: paddle.sum(Tensor([24, 96768],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([24, 96768],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 24 / 24 (100%)
Max absolute difference among violations: 161.
Max relative difference among violations: 10.29
ACTUAL: array([ -5.086 , -11.28  ,  -3.336 ,  -1.179 , -11.35  ,  -4.75  ,
-13.24  ,  25.9   ,  21.27  ,  27.19  , -26.25  ,  -1.656 ,
6.887 , -12.86  , -15.84  ,   0.2087,   9.24  ,   3.695 ,...
DESIRED: array([ -23.45 ,   14.16 ,   52.2  , -147.1  ,    1.222, -103.25 ,
-26.19 ,   21.39 ,  103.4  , -111.56 ,  134.8  ,  -77.5  ,
68.5  , -107.9  ,   18.81 ,   54.47 ,  150.   ,   50.97 ,...
2025-04-27 05:01:48.138536 test begin: paddle.sum(Tensor([24, 97088],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([24, 97088],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 24 / 24 (100%)
Max absolute difference among violations: 389.2
Max relative difference among violations: 260.8
ACTUAL: array([  4.67 ,  -5.41 ,   1.299,   2.44 ,   2.852,   9.86 , -13.984,
25.58 , -15.586, -14.9  ,   8.58 ,  17.4  , -26.06 ,  23.84 ,
-15.32 ,  10.46 ,  -4.39 ,  -6.336,   5.92 ,   5.664, -27.44 ,
16.06 , -10.46 ,   0.567], dtype=float16)
DESIRED: array([ 4.7688e+01, -1.3320e+01, -8.8500e+01, -5.2875e+01, -2.0088e+02,
8.5188e+01,  1.4984e+01,  4.4438e+01, -1.3062e+02, -1.2100e+02,
-2.6547e+01,  4.3344e+01, -9.9548e-02, -4.1000e+01, -4.1719e+01,...
2025-04-27 05:01:48.697815 test begin: paddle.sum(Tensor([24, 97280],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([24, 97280],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 24 / 24 (100%)
Max absolute difference among violations: 164.2
Max relative difference among violations: 2.922
ACTUAL: array([  1.274, -15.48 ,   5.906,  -9.17 ,   6.543,  -2.096, -12.53 ,
9.92 , -17.98 ,  -4.348,  -4.406,  10.26 ,  10.28 ,   7.98 ,
13.97 ,  -7.965,  17.58 ,  10.734,  -9.62 ,  15.24 ,   9.59 ,
2.564,   5.605,  21.31 ], dtype=float16)
DESIRED: array([ -42.9  ,  113.5  ,  -74.1  , -173.4  ,    3.666,  103.5  ,
24.98 ,   52.56 ,   31.72 ,  -22.48 ,  -85.94 ,  -81.7  ,
20.97 ,   76.6  ,  -19.16 ,   44.44 ,  124.3  ,   95.4  ,...
2025-04-27 05:01:49.193813 test begin: paddle.sum(Tensor([24, 99456],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([24, 99456],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 24 / 24 (100%)
Max absolute difference among violations: 209.8
Max relative difference among violations: 2.375
ACTUAL: array([ 1.9922e+01, -6.7070e+00,  4.7500e+00, -3.2129e+00, -1.3234e+01,
-5.6797e+00,  1.6266e+01,  7.7930e+00,  9.0381e-01,  1.2939e-02,
2.1047e+01, -8.5547e+00, -2.9883e+00, -1.1156e+01, -3.3574e+00,...
DESIRED: array([  23.11 ,  -16.28 ,  123.3  ,  -93.2  ,    9.625,   93.2  ,
41.97 ,   46.9  ,   49.84 , -197.4  ,  -49.84 ,   54.5  ,
38.12 ,  -77.94 , -171.   ,   28.73 , -208.6  ,  -46.56 ,...
2025-04-27 05:01:49.703774 test begin: paddle.sum(Tensor([24, 99712],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([24, 99712],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 24 / 24 (100%)
Max absolute difference among violations: 240.1
Max relative difference among violations: 6.6
ACTUAL: array([-13.5   ,  -6.54  ,  -8.23  , -15.52  ,  25.3   ,   7.527 ,
-0.3438,  -3.361 ,  -3.28  ,   6.49  , -12.086 ,   4.45  ,
13.6   ,   3.492 ,  -2.457 , -18.42  , -17.03  , -19.62  ,...
DESIRED: array([-124.1 ,  -86.2 ,  174.2 ,  -44.06,  151.1 ,  -21.47,  -49.88,
0.6 ,   98.  ,  125.75,  126.7 , -202.5 ,   36.62,   42.1 ,
-84.7 , -258.5 ,  -96.44, -104.94,   23.75,   86.6 ,   69.2 ,
92.7 ,   26.92,   63.12], dtype=float16)
2025-04-27 05:01:50.255245 test begin: paddle.sum(Tensor([240, 102144],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([240, 102144],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 240 / 240 (100%)
Max absolute difference among violations: 291.5
Max relative difference among violations: 5.625
ACTUAL: array([  8.445  ,  -4.77   ,  -3.652  , -23.12   ,   8.48   ,  -4.273  ,
-1.781  ,  -8.97   ,   5.758  ,   4.66   ,  -5.016  ,  -5.742  ,
4.72   ,   8.46   , -14.734  ,  -1.676  , -18.58   ,  -3.742  ,...
DESIRED: array([-163.5  ,  -87.6  ,   29.14 ,  -11.   , -114.56 ,  -53.72 ,
59.   ,   14.38 ,   17.72 ,  -20.86 ,   60.34 ,  -33.38 ,
-72.7  ,   49.4  ,   45.47 ,  -62.34 , -132.6  ,   90.1  ,...
2025-04-27 05:01:59.068287 test begin: paddle.sum(Tensor([240, 82688],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([240, 82688],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 238 / 240 (99.2%)
Max absolute difference among violations: 220.6
Max relative difference among violations: 60.12
ACTUAL: array([ 8.0156e+00, -7.5430e+00, -1.1906e+01,  1.5068e+00, -1.5273e+01,
-2.1219e+01, -1.0133e+01,  1.0281e+01, -8.3516e+00, -3.9922e+00,
1.5508e+01,  1.0420e+00,  9.0703e+00,  1.6266e+01, -1.2148e+00,...
DESIRED: array([ 1.3450e+02,  6.3062e+01, -5.3656e+01,  1.3312e+01, -1.4000e+01,
-4.4125e+01,  2.7641e+01,  2.3797e+01, -9.5750e+01, -2.2078e+01,
7.4375e+01,  6.2461e+00,  4.9125e+01, -1.2350e+02,  6.5062e+01,...
2025-04-27 05:02:01.344879 test begin: paddle.sum(Tensor([240, 92416],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([240, 92416],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 240 / 240 (100%)
Max absolute difference among violations: 244.6
Max relative difference among violations: 257.8
ACTUAL: array([-19.4    , -12.47   ,  -4.22   ,  13.07   , -14.07   , -10.95   ,
-16.3    ,   7.17   ,  -5.195  ,   5.35   ,  -3.035  ,  -3.326  ,
0.05505, -13.     ,  15.44   ,  16.98   ,   9.1    ,  20.17   ,...
DESIRED: array([-2.0738e+02, -1.3281e+01, -5.0219e+01, -1.3938e+02,  5.4810e-02,
2.0375e+01, -4.0156e+01,  5.3312e+01,  2.9594e+01, -9.1562e+01,
3.7906e+01,  4.7219e+01, -6.6688e+01,  4.2688e+01,  9.7688e+01,...
2025-04-27 05:02:08.839307 test begin: paddle.sum(Tensor([244, 54400],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([244, 54400],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 244 / 244 (100%)
Max absolute difference among violations: 184.8
Max relative difference among violations: 103.56
ACTUAL: array([-17.42   ,  14.42   ,  16.84   ,  -2.959  ,   5.414  , -11.305  ,
6.223  ,  -3.484  ,  -9.62   , -11.48   ,   5.496  ,   8.24   ,
-0.877  ,  13.85   ,   6.117  ,   6.594  ,  -2.05   , -26.27   ,...
DESIRED: array([ -63.16  ,  -42.    ,  -54.16  ,   25.98  ,   40.97  ,    4.38  ,
-60.1   ,  100.56  ,   26.7   ,   13.05  ,   -9.586 ,   -2.072 ,
-99.75  ,  -84.75  ,   27.58  ,   83.6   ,  -58.12  , -169.6   ,...
2025-04-27 05:02:10.432632 test begin: paddle.sum(Tensor([244, 60800],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([244, 60800],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 243 / 244 (99.6%)
Max absolute difference among violations: 208.8
Max relative difference among violations: 23.36
ACTUAL: array([ -3.398 ,   5.508 ,   3.73  ,   5.13  ,  11.68  ,   2.023 ,
0.557 ,   8.66  ,  26.23  ,  14.44  ,   3.86  , -12.57  ,
0.3484,  -9.13  ,  -9.68  , -12.37  ,   3.297 ,  -8.766 ,...
DESIRED: array([ -72.    ,  -33.56  ,   64.75  ,  106.9   ,  -75.2   ,   34.97  ,
32.6   ,  184.8   ,  213.9   ,  -78.75  ,   -3.574 ,  -59.94  ,
40.88  ,  -71.4   ,   99.75  ,   16.34  ,  -27.25  ,   40.53  ,...
2025-04-27 05:02:12.088415 test begin: paddle.sum(Tensor([244, 82688],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([244, 82688],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 244 / 244 (100%)
Max absolute difference among violations: 239.2
Max relative difference among violations: 12.64
ACTUAL: array([ 5.1719e+00, -3.0098e+00,  1.7656e+01,  3.8672e-01,  8.5703e+00,
2.3828e+00, -6.1719e+00,  1.1062e+01,  3.1211e+00, -1.6562e+01,
1.2906e+01, -1.8000e+01, -7.4727e+00, -2.0586e+00,  1.0328e+01,...
DESIRED: array([ -14.734 ,  -28.45  ,  -43.06  , -232.    , -120.56  ,  -14.914 ,
74.1   ,   49.4   ,  -54.44  , -119.    ,  -96.94  ,  -40.8   ,
154.8   ,  -53.9   ,   10.82  ,  -32.22  ,  121.2   ,  -22.73  ,...
2025-04-27 05:02:15.409779 test begin: paddle.sum(Tensor([248, 102144],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([248, 102144],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 247 / 248 (99.6%)
Max absolute difference among violations: 253.1
Max relative difference among violations: 72.06
ACTUAL: array([-2.5312e+01,  1.2109e+01, -1.6625e+01, -1.9219e+00,  1.0098e+00,
1.5734e+01, -5.0977e+00, -7.1250e+00, -1.0205e+00,  1.9600e+00,
4.4219e+00,  1.5312e+01,  4.6992e+00,  3.7480e+00, -1.5273e+01,...
DESIRED: array([-2.5547e+00,  6.3047e+00, -5.4125e+01, -6.5125e+01,  9.2750e+01,
7.5875e+01, -4.8188e+01,  1.4175e+02, -3.8188e+01,  6.4125e+01,
-1.8193e+00,  8.9875e+01,  1.2062e+02, -2.4938e+02,  1.3350e+02,...
2025-04-27 05:02:22.240790 test begin: paddle.sum(Tensor([248, 54400],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([248, 54400],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 248 / 248 (100%)
Max absolute difference among violations: 165.2
Max relative difference among violations: 39.34
ACTUAL: array([ -6.94  ,   0.641 ,   5.832 ,   2.648 , -15.74  ,  -6.96  ,
-5.84  ,   2.225 ,   9.516 ,  18.9   ,  23.44  , -16.3   ,
-17.89  ,   4.15  , -12.02  ,  -9.9   ,  -1.88  , -14.73  ,...
DESIRED: array([  73.25  ,  -38.6   ,  -22.86  ,  -58.34  ,   81.44  ,   17.19  ,
56.9   ,  125.    ,  -89.4   ,   97.3   , -129.6   ,  -20.23  ,
-64.44  ,   -3.361 ,   23.12  ,    6.2   ,  -37.25  , -102.2   ,...
2025-04-27 05:02:23.778985 test begin: paddle.sum(Tensor([248, 76160],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([248, 76160],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 247 / 248 (99.6%)
Max absolute difference among violations: 228.2
Max relative difference among violations: 12.92
ACTUAL: array([-1.6453e+01,  5.3760e-01,  6.4648e+00, -5.9570e+00, -2.5938e+00,
-6.0273e+00,  7.2305e+00, -2.0781e+01,  4.8711e+00,  6.6953e+00,
-1.5820e+01, -4.6953e+00, -1.1508e+01,  8.0312e+00, -3.3809e+00,...
DESIRED: array([-7.0000e+01,  1.1156e+01, -5.7219e+01, -7.3125e+01,  4.6602e+00,
-3.1609e+01, -1.5617e+01,  5.7812e+01,  3.4844e+01,  7.9844e+00,
1.8984e+01, -9.0312e+01,  7.8711e+00,  2.2312e+01,  4.0094e+01,...
2025-04-27 05:02:31.690021 test begin: paddle.sum(Tensor([252, 60800],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([252, 60800],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 252 / 252 (100%)
Max absolute difference among violations: 202.9
Max relative difference among violations: 437.
ACTUAL: array([-4.9766e+00, -7.0557e-01, -4.7656e-01, -6.4805e+00, -1.0070e+01,
-6.1484e+00, -1.6938e+01,  2.1328e+01,  1.6500e+01, -5.1328e+00,
-1.5633e+01, -2.5977e-01,  4.6953e+00,  9.6406e+00,  4.4023e+00,...
DESIRED: array([-4.1531e+01, -6.6719e+00,  1.1219e+02, -1.3525e+02,  6.0812e+01,
8.5812e+01, -8.2188e+01, -2.6594e+01, -4.6523e+00,  6.9812e+01,
-9.8250e+01,  1.1644e+02,  5.0375e+01,  7.1000e+01,  6.0531e+01,...
2025-04-27 05:02:33.402365 test begin: paddle.sum(Tensor([252, 72960],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([252, 72960],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 252 / 252 (100%)
Max absolute difference among violations: 216.5
Max relative difference among violations: 42.3
ACTUAL: array([ -6.684 ,  -5.87  ,  15.695 , -15.62  , -19.75  ,  -2.234 ,
14.67  , -16.67  ,  18.1   , -14.86  ,   8.48  ,  -2.264 ,
9.85  , -12.81  ,  -1.426 ,  -3.033 ,  -8.56  ,  -6.727 ,...
DESIRED: array([  52.4   ,   50.6   ,  -31.1   ,   54.9   ,  -85.06  ,   13.71  ,
-48.12  ,  -19.27  ,  -16.95  ,  -99.75  ,   52.44  ,   15.555 ,
70.    ,  -77.2   ,   66.1   ,  132.    ,   20.12  ,   -2.504 ,...
2025-04-27 05:02:35.421843 test begin: paddle.sum(Tensor([252, 82688],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([252, 82688],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 252 / 252 (100%)
Max absolute difference among violations: 248.6
Max relative difference among violations: 106.06
ACTUAL: array([  2.307  ,  -8.4    ,   3.664  ,  13.81   ,   7.22   ,  -1.179  ,
16.94   ,  -1.519  , -26.83   ,   9.664  ,  30.05   ,   6.273  ,
-12.82   ,  -6.82   ,   9.336  , -18.66   ,   1.861  , -13.26   ,...
DESIRED: array([ 1.4512e+02, -1.2056e+02, -1.2656e+02,  5.4656e+01,  1.8500e+01,
-4.7344e+01,  7.5875e+01, -4.9125e+01,  7.7930e+00,  3.1172e+01,
7.3938e+01, -9.7375e+01, -1.2075e+02,  4.9344e+01,  6.6062e+01,...
2025-04-27 05:02:38.413573 test begin: paddle.sum(Tensor([256, 1000],"float16"), axis=-1, )
[accuracy error] paddle.sum(Tensor([256, 1000],"float16"), axis=-1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 251 / 256 (98%)
Max absolute difference among violations: 4.844
Max relative difference among violations: 50.38
ACTUAL: array([ 4.2266e+00,  1.4062e+01,  1.3154e+00, -6.6953e+00, -1.1672e+01,
1.5586e+00, -2.9141e+00,  1.6188e+01,  1.2758e+01,  4.8828e+00,
5.2344e+00,  7.5938e+00,  5.2656e+00,  1.1719e+01, -1.5303e+00,...
DESIRED: array([  5.312  ,  15.69   ,   1.244  ,  -7.61   , -14.9    ,   1.248  ,
-2.957  ,  19.38   ,  17.39   ,   5.336  ,   5.773  ,   7.49   ,
7.008  ,  15.37   ,  -1.799  ,   4.14   ,   0.7295 ,  -2.346  ,...
2025-04-27 05:02:44.078213 test begin: paddle.sum(Tensor([256, 54400],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([256, 54400],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 256 / 256 (100%)
Max absolute difference among violations: 197.9
Max relative difference among violations: 61.62
ACTUAL: array([ 5.3076e-01, -9.4922e+00,  1.4863e+00,  1.2242e+01, -1.8184e+00,
1.0062e+01, -6.5469e+00,  9.3750e+00, -1.0844e+01, -8.0371e-01,
-2.9805e+00, -7.7891e+00, -2.2793e+00, -1.2656e+01, -3.0645e+00,...
DESIRED: array([ 2.0344e+01, -5.8633e+00, -3.4719e+01,  7.0500e+01,  1.6609e+01,
-1.9344e+01, -9.0875e+01, -2.2031e+01, -5.4250e+01,  1.1000e+02,
2.3453e+01,  1.2359e+01, -1.5912e+02,  1.8281e+01, -2.0281e+01,...
2025-04-27 05:02:45.720757 test begin: paddle.sum(Tensor([256, 60800],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([256, 60800],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 256 / 256 (100%)
Max absolute difference among violations: 250.2
Max relative difference among violations: 4.023
ACTUAL: array([-2.6699e+00, -1.2988e+00,  6.8242e+00,  8.3594e+00,  1.1572e+00,
8.0547e+00,  8.4453e+00,  9.2578e+00, -5.3320e-01, -2.1738e+00,
3.5156e+00,  6.6953e+00, -1.6688e+01, -1.6621e+00, -1.4453e+01,...
DESIRED: array([  17.86 ,  -43.34 ,  -15.125,   63.6  ,   98.   ,    7.54 ,
-17.3  ,  -48.8  ,  -27.33 ,  -10.01 ,  -66.8  ,   48.78 ,
95.4  ,  -52.75 ,  -86.9  ,  -73.44 ,   30.11 ,  -12.68 ,...
2025-04-27 05:02:48.894586 test begin: paddle.sum(Tensor([260, 102144],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([260, 102144],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 260 / 260 (100%)
Max absolute difference among violations: 233.8
Max relative difference among violations: 134.8
ACTUAL: array([  2.402 ,  -7.645 ,   4.805 ,  -9.26  , -15.22  , -14.68  ,
-3.764 ,   1.674 , -13.625 ,   1.872 ,   9.62  ,  -1.667 ,
-13.945 ,  -0.822 ,  -2.555 , -27.77  ,  -4.47  ,  11.12  ,...
DESIRED: array([-2.0156e+01, -1.1125e+02,  1.1312e+01,  8.0188e+01,  1.9250e+02,
-3.7562e+01,  1.7050e+02,  1.3200e+02, -4.9156e+01, -1.3800e+02,
9.2891e+00, -4.6875e+01,  7.9062e+01, -5.8031e+01, -5.7406e+01,...
2025-04-27 05:02:55.903732 test begin: paddle.sum(Tensor([260, 60800],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([260, 60800],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 260 / 260 (100%)
Max absolute difference among violations: 181.4
Max relative difference among violations: 27.3
ACTUAL: array([-2.7368e-01, -1.0484e+01,  1.5117e+01,  8.2422e+00, -7.9570e+00,
5.0234e+00,  1.5766e+01, -2.1984e+01,  2.2969e+00,  3.9902e+00,
2.2109e+01, -2.7859e+01, -1.6594e+01,  4.8555e+00, -1.9047e+01,...
DESIRED: array([  81.9   ,  -30.27  ,  -52.    ,   64.44  ,  -40.94  ,   65.4   ,
-32.1   ,   31.22  ,   37.66  ,   79.94  ,  -41.06  ,  -13.92  ,
33.38  ,  -77.75  ,  -88.8   ,   51.44  ,  -94.1   ,   81.7   ,...
2025-04-27 05:02:57.673517 test begin: paddle.sum(Tensor([260, 82688],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([260, 82688],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 260 / 260 (100%)
Max absolute difference among violations: 234.5
Max relative difference among violations: 9.266
ACTUAL: array([  2.908 ,  15.16  , -13.664 ,  15.164 ,   8.53  , -25.64  ,
8.39  ,  -2.545 , -14.46  , -23.48  ,  -4.51  ,   5.816 ,
-0.748 ,   4.31  ,  29.16  ,  11.51  ,  -1.994 ,  -6.42  ,...
DESIRED: array([  82.4   ,   41.2   ,  -60.9   ,   43.84  ,  -40.62  ,  -80.75  ,
-25.56  ,   18.78  ,   22.33  ,  116.9   ,   41.    ,   21.8   ,
105.4   ,   36.25  ,  171.2   ,   63.25  ,  -62.25  ,  -67.3   ,...
2025-04-27 05:03:08.567406 test begin: paddle.sum(Tensor([264, 82688],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([264, 82688],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 263 / 264 (99.6%)
Max absolute difference among violations: 224.5
Max relative difference among violations: 27.12
ACTUAL: array([ 7.7305e+00, -1.9188e+01, -8.3281e+00, -6.0273e+00,  1.3797e+01,
6.3516e+00,  6.0391e+00,  2.0203e+01, -8.3984e+00,  3.8770e+00,
-2.2227e+00, -1.4375e+00,  3.3125e+00,  2.8320e+00,  3.3630e-02,...
DESIRED: array([-118.25  ,   -2.896 ,   37.72  ,  121.44  ,   19.83  ,   34.34  ,
48.28  ,   15.87  ,  -93.06  ,    1.823 ,   52.1   ,  135.8   ,
182.6   ,  158.5   ,   -5.168 ,   98.75  ,   -0.7036,  -41.22  ,...
2025-04-27 05:03:10.875344 test begin: paddle.sum(Tensor([264, 92416],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([264, 92416],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 264 / 264 (100%)
Max absolute difference among violations: 214.8
Max relative difference among violations: 66.5
ACTUAL: array([-1.8643e+00,  1.2469e+01, -2.9609e+00, -2.6875e+01, -1.1516e+01,
1.6934e+00, -2.6953e+01,  4.5195e+00, -1.5469e+01,  1.1961e+01,
-2.4102e+00, -1.7906e+01,  1.3447e+00,  1.2633e+01, -2.6582e+00,...
DESIRED: array([-6.9492e+00,  9.0250e+01,  1.4962e+02, -1.6788e+02, -9.5500e+01,
-3.0156e+01, -1.6788e+02,  4.9250e+01,  1.4258e+01,  3.0156e+01,
-7.1062e+01, -8.3375e+01,  5.9500e+01,  9.8438e+01, -8.7938e+01,...
2025-04-27 05:03:13.513264 test begin: paddle.sum(Tensor([264, 94080],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([264, 94080],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 264 / 264 (100%)
Max absolute difference among violations: 272.
Max relative difference among violations: 45.12
ACTUAL: array([ -6.11   ,  26.22   ,  15.64   , -21.66   , -10.086  ,   8.67   ,
-2.236  ,   9.87   ,  -8.164  , -23.02   , -10.18   ,   9.87   ,
0.1578 ,  -7.902  , -22.89   ,  -8.01   ,  15.39   ,  18.89   ,...
DESIRED: array([ 149.8   ,  164.2   ,    0.79  , -101.56  ,  -29.88  ,  111.56  ,
-132.9   ,   30.98  ,  -36.06  , -167.4   ,  -17.77  ,  -68.1   ,
-94.44  ,   28.12  ,  -18.98  ,  -43.3   ,  -43.8   ,   97.5   ,...
2025-04-27 05:03:16.140464 test begin: paddle.sum(Tensor([264, 94848],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([264, 94848],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 264 / 264 (100%)
Max absolute difference among violations: 237.
Max relative difference among violations: 14.234
ACTUAL: array([-1.1414e+01,  6.1562e+00, -1.3430e+01,  6.4375e+00, -6.2344e+00,
3.0781e+00, -1.0578e+01, -8.3125e+00,  4.9219e+00,  1.1328e+01,
-5.4375e+00,  7.5000e-01,  8.4375e+00,  8.0547e+00, -3.7207e+00,...
DESIRED: array([-122.9   ,   21.8   ,  108.7   ,  -77.4   ,  -42.4   ,  111.7   ,
-15.77  ,   -8.14  ,  -69.75  ,   37.56  ,    8.97  ,  -65.94  ,
4.367 ,   99.1   ,   -0.671 ,   33.    ,   -3.908 , -141.    ,...
2025-04-27 05:03:23.637913 test begin: paddle.sum(Tensor([268, 54400],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([268, 54400],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 268 / 268 (100%)
Max absolute difference among violations: 166.9
Max relative difference among violations: 7.418
ACTUAL: array([ 12.92  ,  -4.902 ,   3.219 ,  24.11  ,   2.441 ,  -5.11  ,
2.309 ,   4.625 ,  -7.742 , -26.03  ,  -1.218 ,  -2.676 ,
7.754 ,  -1.499 ,  -1.263 ,  -7.742 ,  -7.984 ,   1.312 ,...
DESIRED: array([  99.44  ,  -28.45  ,  -14.55  ,  -44.62  ,  -50.8   ,  -16.31  ,
-57.12  ,   34.78  ,    2.34  ,   10.45  ,   41.34  ,   34.9   ,
114.7   ,   71.5   ,    2.834 ,  -29.97  , -107.4   ,  -26.88  ,...
2025-04-27 05:03:25.343689 test begin: paddle.sum(Tensor([268, 82688],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([268, 82688],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 268 / 268 (100%)
Max absolute difference among violations: 241.8
Max relative difference among violations: 12.195
ACTUAL: array([-1.6266e+01,  3.6797e+00,  8.8828e+00,  2.5156e+00,  1.4734e+01,
5.7969e+00, -1.6688e+01, -6.2539e+00, -1.0891e+01, -3.3594e+00,
-2.2969e+00, -4.9883e+00,  1.2914e+01, -1.2211e+01, -8.2344e+00,...
DESIRED: array([ -57.03  ,  117.    ,  -88.7   ,   28.55  ,   81.06  ,    4.105 ,
-39.38  , -121.5   ,   -9.836 ,  -45.34  ,   86.56  ,   -0.7925,
25.72  ,  -44.88  ,   49.6   ,  -50.5   ,  138.2   ,  -56.16  ,...
2025-04-27 05:03:27.801511 test begin: paddle.sum(Tensor([268, 92416],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([268, 92416],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 267 / 268 (99.6%)
Max absolute difference among violations: 228.
Max relative difference among violations: 28.78
ACTUAL: array([ -5.215  ,  -0.6606 , -14.72   ,   3.861  ,   8.695  , -27.81   ,
4.695  ,   1.693  , -12.37   ,  -2.03   ,  -8.33   ,  -8.46   ,
12.53   ,  11.1    ,  -2.98   , -11.55   , -32.4    ,  -2.992  ,...
DESIRED: array([-103.9   , -119.5   ,   95.94  , -189.    ,   25.75  ,  -14.13  ,
-30.98  ,   93.06  ,  -61.12  ,  -37.    ,   63.28  ,  -22.75  ,
-29.23  ,   -7.457 ,  -13.38  ,  -83.8   ,  -42.3   ,  -32.16  ,...
2025-04-27 05:03:35.097080 test begin: paddle.sum(Tensor([272, 60800],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([272, 60800],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 271 / 272 (99.6%)
Max absolute difference among violations: 231.9
Max relative difference among violations: 2976.
ACTUAL: array([-8.1719e+00, -1.1992e+01,  1.5422e+01,  1.4695e+01, -1.1695e+01,
-8.9355e-01, -1.3250e+01,  3.9961e+00, -3.2793e+00,  3.0957e+00,
4.3677e-01, -7.4141e+00, -2.7852e+00,  3.3965e+00,  8.9141e+00,...
DESIRED: array([-6.3203e+00, -9.5250e+01,  8.5250e+01,  3.8750e+01,  1.4175e+02,
8.8359e+00,  3.2594e+01,  1.6078e+01, -2.6312e+01, -1.7797e+01,
4.4438e+01,  1.4375e+02, -1.2744e+02,  9.0500e+01, -2.9844e+01,...
2025-04-27 05:03:37.039973 test begin: paddle.sum(Tensor([272, 74240],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([272, 74240],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 272 / 272 (100%)
Max absolute difference among violations: 210.4
Max relative difference among violations: 78.4
ACTUAL: array([ 14.21   ,   4.625  ,  -3.926  , -15.555  ,   3.09   ,  -6.6    ,
-5.863  ,  -3.277  ,   5.16   ,   4.96   ,  13.53   ,  -0.2415 ,
6.273  ,   3.033  , -12.98   ,  -6.95   ,  19.97   ,   6.47   ,...
DESIRED: array([-5.2969e+01,  3.7688e+01,  3.9406e+01, -5.4062e+01, -1.2775e+02,
-4.7500e+01, -9.5125e+01,  4.0719e+01,  8.8062e+01,  9.7312e+01,
-4.7281e+01, -2.5906e+01, -2.9453e+01, -4.3062e+01, -6.7461e+00,...
2025-04-27 05:03:41.247294 test begin: paddle.sum(Tensor([28, 102144],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([28, 102144],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 28 / 28 (100%)
Max absolute difference among violations: 142.
Max relative difference among violations: 1.685
ACTUAL: array([ -4.523 ,  15.72  ,   9.68  , -10.74  ,  19.55  ,   1.078 ,
24.67  , -18.48  ,  -7.45  ,  -0.284 ,   4.29  ,  -7.37  ,
-11.91  ,  -4.266 ,   0.5015,   5.387 ,  -4.42  ,  -1.951 ,...
DESIRED: array([  18.94 ,  -99.5  ,  -82.3  ,  -92.3  , -110.3  ,   11.69 ,
-36.06 , -151.6  ,  -93.3  ,   85.6  ,  -83.6  ,   66.25 ,
77.2  ,   65.7  ,  -20.73 ,  -84.94 ,  -40.47 ,   52.4  ,...
2025-04-27 05:03:47.677079 test begin: paddle.sum(Tensor([28, 60800],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([28, 60800],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 28 / 28 (100%)
Max absolute difference among violations: 91.5
Max relative difference among violations: 9.336
ACTUAL: array([ 13.055 ,  -3.15  , -10.9   ,  -8.766 , -15.305 ,   0.603 ,
-1.798 ,   4.88  ,  -1.912 , -15.54  ,  -3.963 ,   5.324 ,
-1.427 ,  -1.173 , -13.11  ,   7.344 ,   2.656 ,  -3.223 ,...
DESIRED: array([ 66.5   ,   5.46  , -37.72  ,  41.44  ,  35.47  , -75.3   ,
42.    , -10.73  ,  31.1   , -59.7   , -59.2   ,  -0.6387,
-59.06  ,  16.47  , -13.414 , -40.16  , -88.9   ,  52.28  ,...
2025-04-27 05:03:48.189826 test begin: paddle.sum(Tensor([28, 63232],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([28, 63232],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 28 / 28 (100%)
Max absolute difference among violations: 117.9
Max relative difference among violations: 20.47
ACTUAL: array([ 19.23  ,  10.78  ,   5.656 ,   2.555 ,  -5.414 , -18.25  ,
-1.614 ,  -4.29  ,  13.73  ,   7.61  ,  -1.202 , -11.29  ,
17.52  ,   4.2   ,   9.7   ,  32.25  ,   5.72  ,  14.01  ,...
DESIRED: array([  10.51  ,   26.88  , -108.06  ,  -77.5   ,   49.3   ,   27.64  ,
-91.25  ,   -1.567 ,  131.6   ,  120.5   ,   59.97  ,  -45.53  ,
59.22  ,  -27.73  ,   15.9   ,   70.44  ,   -0.2937,   15.53  ,...
2025-04-27 05:03:48.670351 test begin: paddle.sum(Tensor([28, 64000],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([28, 64000],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 28 / 28 (100%)
Max absolute difference among violations: 193.5
Max relative difference among violations: 1.786
ACTUAL: array([  2.71  , -17.14  ,  17.17  ,   5.863 ,  -1.238 ,  -2.193 ,
-16.78  , -11.72  ,  -8.97  , -16.44  ,  -4.91  ,  -7.273 ,
14.36  ,   5.355 ,   7.7   ,  12.45  ,   7.137 ,  -1.333 ,...
DESIRED: array([  89.7  ,  123.25 ,   74.94 ,  -87.1  ,  -32.   ,    3.904,
-41.6  ,  -23.3  ,  -46.47 ,   -7.812,  -34.34 ,   34.47 ,
-146.5  ,   37.6  ,   46.6  ,  -23.88 ,  -30.66 ,  -27.98 ,...
2025-04-27 05:03:49.147830 test begin: paddle.sum(Tensor([28, 67456],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([28, 67456],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 28 / 28 (100%)
Max absolute difference among violations: 136.6
Max relative difference among violations: 4.54
ACTUAL: array([  6.184 ,  -9.34  ,  -7.344 ,   0.754 , -15.125 ,  -2.2   ,
0.1445,   3.564 ,   4.395 , -13.51  , -12.97  ,  16.2   ,
1.964 ,  -8.07  ,  15.61  ,   1.89  ,   6.84  ,   8.87  ,...
DESIRED: array([ -23.62 ,   70.1  , -106.94 ,   19.28 ,  -34.2  ,   18.62 ,
-15.555,  140.2  ,  -40.28 ,   99.   ,    3.664,  133.   ,
-10.77 ,   40.56 ,   50.66 ,   68.9  ,  -30.14 ,   55.78 ,...
2025-04-27 05:03:49.615102 test begin: paddle.sum(Tensor([28, 73984],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([28, 73984],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 28 / 28 (100%)
Max absolute difference among violations: 139.1
Max relative difference among violations: 4.05
ACTUAL: array([ 12.54  ,   7.75  ,  10.69  ,  -6.33  ,  12.05  ,  14.35  ,
12.63  ,   4.586 ,  10.11  ,   1.351 ,   0.2402, -10.78  ,
11.914 , -14.79  ,   2.691 ,  16.47  ,  -3.    ,  -0.293 ,...
DESIRED: array([  30.19 ,  -46.2  ,   -3.502,  -40.66 ,   97.3  ,  -18.86 ,
109.4  ,   39.66 ,  -46.78 ,  -84.56 ,  -31.39 ,  -76.44 ,
-119.4  ,  124.3  ,   10.34 ,   68.1  ,   94.7  ,  -91.25 ,...
2025-04-27 05:03:50.130732 test begin: paddle.sum(Tensor([28, 78336],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([28, 78336],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 28 / 28 (100%)
Max absolute difference among violations: 206.9
Max relative difference among violations: 1.642
ACTUAL: array([ -0.5366,  -8.3   ,  -7.008 ,  -0.1392, -19.31  , -16.67  ,
3.465 ,  -9.42  ,  -5.027 ,   4.523 ,   7.504 ,   0.0371,
9.46  ,   2.525 ,  -4.004 ,   4.53  ,   1.855 ,   3.273 ,...
DESIRED: array([  49.38 ,   97.6  ,  -93.44 ,  -42.97 ,   -9.66 ,  -87.1  ,
99.56 ,  -57.53 ,  -99.3  ,   47.75 , -100.8  ,   89.25 ,
7.96 ,  -14.26 ,  -62.84 , -202.4  ,  131.9  ,  -41.56 ,...
2025-04-27 05:03:50.599276 test begin: paddle.sum(Tensor([28, 82688],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([28, 82688],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 28 / 28 (100%)
Max absolute difference among violations: 179.6
Max relative difference among violations: 7.875
ACTUAL: array([ -3.975  ,  -9.58   ,  22.03   , -17.33   ,  -0.3755 ,  -0.07764,
-5.312  , -16.16   ,  -8.72   ,  -2.377  ,  16.38   ,  24.02   ,
-19.88   , -10.164  ,  -1.362  ,  17.25   ,   0.7393 ,  -9.58   ,...
DESIRED: array([  30.06 ,  -32.47 ,   72.06 ,  155.5  ,   53.5  , -124.25 ,
-84.75 ,   52.84 ,  -34.3  ,  -26.19 ,  125.06 ,  -14.516,
41.1  ,  -93.25 ,   51.8  ,  -97.3  ,  -75.94 ,   -6.098,...
2025-04-27 05:03:51.146647 test begin: paddle.sum(Tensor([28, 84864],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([28, 84864],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 28 / 28 (100%)
Max absolute difference among violations: 181.2
Max relative difference among violations: 9.45
ACTUAL: array([ -1.732,  -9.18 ,   4.824,  16.45 ,  -3.766,   3.55 ,  10.42 ,
6.453,  -2.568,   1.152,   8.26 ,  -8.22 ,  -7.688,  11.1  ,
13.984,   1.6  ,  11.445,  -6.332,   4.24 , -10.24 ,  -5.77 ,...
DESIRED: array([ -33.1   ,   -0.8784,  -82.3   ,  106.25  ,  -69.6   ,   98.06  ,
-114.8   ,  -99.9   ,  -11.5   ,   10.75  ,  101.75  , -162.2   ,
-44.2   , -107.56  ,  195.2   ,  -13.31  ,   52.72  ,  -38.88  ,...
2025-04-27 05:03:51.706085 test begin: paddle.sum(Tensor([28, 86016],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([28, 86016],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 28 / 28 (100%)
Max absolute difference among violations: 185.9
Max relative difference among violations: 82.3
ACTUAL: array([ 12.766,  -9.555,   1.032,  -2.783,  -1.723, -17.17 , -14.7  ,
-2.168,   9.51 ,   1.416,   3.445,   9.266,  16.34 ,  -6.22 ,
15.125,  16.5  ,   3.488,  -4.984,  -1.358,   4.26 , -12.71 ,...
DESIRED: array([-159.5  , -152.4  ,  178.4  ,  -22.7  ,   -8.5  ,  -82.3  ,
-29.02 , -117.56 ,   51.78 ,  -89.1  , -159.4  ,   13.36 ,
0.196,  106.9  ,   31.42 ,   80.25 ,  133.5  , -190.9  ,...
2025-04-27 05:03:52.243075 test begin: paddle.sum(Tensor([28, 89984],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([28, 89984],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 28 / 28 (100%)
Max absolute difference among violations: 217.8
Max relative difference among violations: 9.164
ACTUAL: array([-24.7    , -18.31   ,  -6.004  ,   1.253  ,  -5.24   ,  -3.879  ,
3.14   , -10.48   ,   0.06775,  -7.367  ,   8.8    , -30.77   ,
5.64   ,  -0.9634 , -18.9    ,  -7.367  ,  20.62   , -10.13   ,...
DESIRED: array([  43.9  , -110.3  ,  -18.31 ,   23.78 ,   -3.498,  -30.69 ,
57.22 ,   -1.03 ,   25.86 ,  -83.44 ,   19.48 ,  -43.16 ,
-109.8  ,  101.2  ,   75.   ,   96.94 ,   58.97 ,   -6.246,...
2025-04-27 05:03:52.833016 test begin: paddle.sum(Tensor([28, 91392],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([28, 91392],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 28 / 28 (100%)
Max absolute difference among violations: 172.8
Max relative difference among violations: 2.408
ACTUAL: array([  1.001 , -10.42  ,   5.266 ,  11.26  ,   4.25  ,   0.7   ,
8.09  ,  -3.346 ,  -4.082 ,   4.473 ,  -4.227 ,   2.719 ,
-11.1   , -17.42  ,   6.234 , -14.31  ,   0.783 ,  -2.498 ,...
DESIRED: array([  14.99 ,  -25.88 ,    2.998,   96.75 ,  -92.7  ,   76.6  ,
7.85 ,   12.24 ,   29.73 ,  120.4  ,   12.07 ,  -40.53 ,
60.06 ,   34.84 , -107.3  ,   10.164,    5.406,   -9.09 ,...
2025-04-27 05:03:53.310559 test begin: paddle.sum(Tensor([28, 92416],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([28, 92416],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 28 / 28 (100%)
Max absolute difference among violations: 191.6
Max relative difference among violations: 2.504
ACTUAL: array([  5.484,  -8.05 ,   2.395,  13.25 , -17.8  ,  10.766,  -4.004,
-8.08 ,   2.455,  -0.299,   3.682,  15.72 ,  -3.338,  -3.357,
3.482,  -3.145,  14.79 ,   5.664, -22.94 ,   1.879,   5.938,...
DESIRED: array([  82.1  ,   12.22 ,  -54.62 ,  103.8  ,  -10.45 ,  163.6  ,
-23.8  ,  -34.97 ,   68.2  ,  100.06 ,  166.1  ,  -94.06 ,
-139.9  ,  -56.97 ,   74.4  ,  -26.27 ,   60.12 ,  197.2  ,...
2025-04-27 05:03:53.778779 test begin: paddle.sum(Tensor([28, 94080],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([28, 94080],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 28 / 28 (100%)
Max absolute difference among violations: 188.5
Max relative difference among violations: 5.426
ACTUAL: array([ -5.41   ,  10.586  ,   1.961  ,  -8.555  ,   3.865  ,   0.6787 ,
-20.03   ,  21.88   ,  -5.414  ,   2.883  ,   6.527  , -13.59   ,
3.023  ,  -0.973  ,  14.7    ,  -0.7236 ,   9.914  ,  25.48   ,...
DESIRED: array([  93.56 ,  -93.44 ,  -51.12 , -160.9  ,  -58.78 , -118.56 ,
-82.44 ,   43.88 ,  -13.68 ,   66.06 ,  -50.22 ,  -88.56 ,
129.5  ,  100.2  ,   36.6  ,  -48.3  ,   69.   ,   53.06 ,...
2025-04-27 05:03:54.338424 test begin: paddle.sum(Tensor([28, 96768],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([28, 96768],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 28 / 28 (100%)
Max absolute difference among violations: 211.6
Max relative difference among violations: 2.514
ACTUAL: array([  1.058 ,   7.37  , -17.81  , -13.42  ,   1.938 ,  -5.684 ,
-0.1145,  12.875 ,   0.4639,   1.449 ,  -2.168 ,   8.16  ,
-14.016 ,  -5.61  ,  -3.281 , -25.14  ,  -9.89  ,   7.367 ,...
DESIRED: array([ -13.17 ,  169.2  ,   11.76 ,  -87.7  ,    1.565,   20.42 ,
102.4  ,  191.4  ,  162.8  , -127.3  ,   50.9  ,  -83.6  ,
-25.62 ,   97.1  ,  136.5  , -117.06 , -100.7  ,   10.125,...
2025-04-27 05:03:54.851931 test begin: paddle.sum(Tensor([28, 97088],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([28, 97088],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 28 / 28 (100%)
Max absolute difference among violations: 184.1
Max relative difference among violations: 124.2
ACTUAL: array([ -7.22  ,  -0.1539,   8.586 ,  -1.446 ,  -6.715 ,  -1.24  ,
-14.766 ,  -2.25  ,   6.656 ,  -6.695 ,   5.87  ,  18.17  ,
-13.96  ,   3.574 ,   5.215 ,  15.58  ,  16.73  ,  52.25  ,...
DESIRED: array([-6.4883e+00, -5.4062e+01, -6.9702e-02,  3.0531e+01, -3.6000e+01,
1.8288e+02,  2.8453e+01, -2.7539e+00,  1.3462e+02, -7.1438e+01,
3.3250e+01,  1.0744e+02,  1.5633e+01, -2.2422e+01,  2.7016e+01,...
2025-04-27 05:03:55.440849 test begin: paddle.sum(Tensor([28, 97280],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([28, 97280],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 28 / 28 (100%)
Max absolute difference among violations: 200.
Max relative difference among violations: 2.48
ACTUAL: array([ -1.162 ,  10.75  ,  -4.5   ,  -5.797 ,   6.367 ,   3.479 ,
24.03  ,  -7.17  ,  -5.45  ,  -6.168 ,   6.66  ,  -3.19  ,
4.773 ,  -1.82  ,  12.445 ,  -9.56  , -10.61  ,   6.086 ,...
DESIRED: array([  -8.84 ,   31.12 ,  -99.25 ,  -86.8  ,  206.4  ,   72.6  ,
47.28 ,   58.9  ,   23.53 ,  120.7  , -117.06 ,   85.06 ,
-44.66 ,    9.24 ,  -11.59 ,  -23.38 ,  -11.17 , -170.4  ,...
2025-04-27 05:03:56.044340 test begin: paddle.sum(Tensor([28, 99712],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([28, 99712],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 28 / 28 (100%)
Max absolute difference among violations: 291.2
Max relative difference among violations: 3.396
ACTUAL: array([ -9.94 ,  -4.367,  21.22 ,  10.36 ,   2.426, -15.516,  -6.88 ,
-12.59 ,  -1.027, -15.98 , -12.18 ,   3.84 ,  -8.06 , -16.88 ,
-4.215,   4.887,   4.85 ,   4.176,  13.32 ,   7.258,   7.59 ,...
DESIRED: array([-152.5  ,  -28.34 ,   67.6  ,  -95.44 , -115.7  , -128.4  ,
-144.8  ,  106.6  , -124.6  ,  -72.75 ,  -28.5  ,   35.22 ,
15.8  ,   -3.838,  287.   ,   36.28 ,   50.28 ,    2.879,...
2025-04-27 05:04:00.479418 test begin: paddle.sum(Tensor([280, 60800],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([280, 60800],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 280 / 280 (100%)
Max absolute difference among violations: 304.5
Max relative difference among violations: 43.72
ACTUAL: array([-7.6562e-01,  8.3496e-01, -1.0742e+01, -1.5188e+01, -1.1766e+01,
1.1516e+01,  8.8438e+00, -3.7891e-01,  7.6270e-01,  3.2129e+00,
2.1422e+01, -1.4055e+01, -6.2266e+00,  3.0039e+00,  2.4551e+00,...
DESIRED: array([-2.3203e+01,  1.1781e+01, -8.4188e+01, -1.4112e+02, -1.4925e+02,
7.4688e+01,  4.9625e+01,  5.0000e+00,  3.3500e+01,  2.2547e+01,
3.8008e+00, -6.2625e+01, -7.9312e+01, -4.3781e+01,  4.7250e+01,...
2025-04-27 05:04:02.342430 test begin: paddle.sum(Tensor([280, 82688],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([280, 82688],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 280 / 280 (100%)
Max absolute difference among violations: 236.6
Max relative difference among violations: 94.8
ACTUAL: array([ 13.375  ,   3.455  ,   1.787  ,  15.45   ,  -9.51   ,  -1.741  ,
4.055  ,  -2.152  ,  23.22   ,  -6.324  ,   6.777  ,  -9.625  ,
-10.64   , -18.05   ,   9.23   ,  10.48   ,   3.602  ,  -7.65   ,...
DESIRED: array([ 1.0500e+02,  4.9844e+01, -2.8094e+01, -3.6219e+01,  8.3312e+01,
-2.6367e+00, -6.1500e+01,  1.9547e+01,  5.8594e+01, -1.9450e+02,
3.2406e+01, -6.8062e+01,  3.6758e+00, -6.1531e+01,  1.4525e+02,...
2025-04-27 05:04:09.242412 test begin: paddle.sum(Tensor([288, 73984],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([288, 73984],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 287 / 288 (99.7%)
Max absolute difference among violations: 254.4
Max relative difference among violations: 7.684
ACTUAL: array([-1.3496e+00,  8.4297e+00, -6.0742e-01, -8.8906e+00, -9.5312e+00,
3.3301e+00, -4.2480e-01,  3.1641e+00,  4.1562e+00, -2.7062e+01,
-1.4883e+01, -4.5039e+00, -3.5234e+00, -9.9062e+00, -9.3945e-01,...
DESIRED: array([  49.7  ,   62.6  ,   33.88 ,   -6.05 ,    8.21 ,   36.53 ,
-156.8  ,   15.664,  -41.47 ,  -77.   ,  -84.6  ,  -26.3  ,
-25.55 , -104.94 ,  164.5  ,  -77.3  ,   75.9  ,   12.1  ,...
2025-04-27 05:04:16.715897 test begin: paddle.sum(Tensor([292, 60800],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([292, 60800],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 292 / 292 (100%)
Max absolute difference among violations: 197.2
Max relative difference among violations: 84.6
ACTUAL: array([ 3.9087e-01,  1.1125e+01, -6.8945e+00, -3.4805e+00, -2.2246e+00,
1.2094e+01,  8.6641e+00, -4.7583e-01,  1.9141e+00, -5.4922e+00,
-4.4570e+00, -2.7969e+00, -2.3594e+01, -3.9258e+00, -4.7031e+00,...
DESIRED: array([ 7.4250e+01, -1.6600e+02, -4.7219e+01, -1.1456e+02,  1.8250e+01,
4.4906e+01,  1.1675e+02, -3.2844e+01,  3.4648e+00, -2.6234e+01,
7.7375e+01, -9.4688e+01, -2.5594e+01, -1.0883e+01, -1.1681e+02,...
2025-04-27 05:04:18.657420 test begin: paddle.sum(Tensor([292, 91392],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([292, 91392],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 292 / 292 (100%)
Max absolute difference among violations: 254.4
Max relative difference among violations: 56.4
ACTUAL: array([  2.096 ,   9.766 ,  -8.53  ,   5.97  , -14.31  ,  -3.906 ,
1.677 ,  -4.625 ,  15.89  , -12.32  ,  12.75  ,  -7.3   ,
18.31  ,  -1.975 ,  -8.29  ,  -9.734 ,  24.19  ,   3.629 ,...
DESIRED: array([ 5.3000e+01, -8.1875e+01, -1.7975e+02,  2.0688e+02,  1.5547e+01,
1.1769e+02,  1.2131e+02, -3.9031e+01,  1.4662e+02,  4.9875e+01,
4.8562e+01,  2.4712e+02, -2.0391e+01,  6.7375e+01,  1.0930e+01,...
2025-04-27 05:04:24.558645 test begin: paddle.sum(Tensor([296, 60800],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([296, 60800],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 296 / 296 (100%)
Max absolute difference among violations: 219.4
Max relative difference among violations: 428.8
ACTUAL: array([-15.03   , -24.88   ,   6.676  ,  -7.67   ,   2.592  ,   7.117  ,
16.86   ,   2.     ,  -4.38   , -12.99   ,  17.58   ,   2.5    ,
-1.378  ,  -6.95   ,   1.464  ,   9.22   ,  -5.195  ,   0.2458 ,...
DESIRED: array([-3.1266e+01, -4.3531e+01, -1.0148e+01, -4.4281e+01,  2.5984e+01,
1.8462e+02,  9.0312e+01, -4.2406e+01,  1.0239e-02, -1.0688e+01,
3.5656e+01,  4.8406e+01, -4.5000e+01, -5.4031e+01, -6.0969e+01,...
2025-04-27 05:04:41.638858 test begin: paddle.sum(Tensor([304, 67200],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([304, 67200],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 302 / 304 (99.3%)
Max absolute difference among violations: 199.6
Max relative difference among violations: 7.266
ACTUAL: array([ 6.2617e+00, -1.6865e+00,  1.9219e+01,  2.2328e+01,  1.0492e+01,
7.0508e-01, -1.8391e+01, -7.0898e+00,  5.9414e+00, -1.9578e+01,
5.3242e+00,  2.1621e+00,  4.0859e+00,  7.3486e-01,  1.1438e+01,...
DESIRED: array([  61.28 ,   -6.93 ,   19.31 ,   90.   ,   84.06 ,    6.11 ,
24.81 ,   -1.646,   30.31 , -137.5  ,  -27.38 ,  118.56 ,
21.95 ,  -40.66 , -114.4  ,  -16.94 ,   10.33 ,   58.3  ,...
2025-04-27 05:04:46.816072 test begin: paddle.sum(Tensor([308, 92416],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([308, 92416],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 308 / 308 (100%)
Max absolute difference among violations: 321.5
Max relative difference among violations: 86.25
ACTUAL: array([ -2.676  ,  11.375  ,   7.973  ,   7.61   ,   2.041  ,   3.48   ,
10.09   ,   4.32   , -12.125  ,  -7.36   , -11.1    ,  16.75   ,
-4.195  ,  -2.523  ,   0.3123 ,  -9.78   ,  -0.454  ,   9.8    ,...
DESIRED: array([ 7.1562e+01,  1.2006e+02, -5.4500e+01,  3.4625e+01,  9.6438e+01,
6.4438e+01,  1.6436e+00,  3.7281e+01, -2.1031e+01, -1.6012e+02,
-1.6612e+02,  3.6719e+01,  1.6750e+01, -8.6688e+01,  1.0450e+02,...
2025-04-27 05:04:53.645182 test begin: paddle.sum(Tensor([32, 102144],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([32, 102144],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 32 / 32 (100%)
Max absolute difference among violations: 194.4
Max relative difference among violations: 35.22
ACTUAL: array([  7.715 ,  14.875 ,  -3.07  ,  -7.387 ,  -6.336 ,   0.2615,
-0.7944, -14.22  ,  -2.08  ,   1.225 ,   5.64  , -10.555 ,
-2.781 ,  14.68  ,  11.1   ,   2.5   ,   2.545 ,   7.76  ,...
DESIRED: array([ -59.25  ,   17.53  ,  -72.8   ,   55.94  ,  -84.56  ,  -81.75  ,
103.2   ,   96.44  ,  164.8   , -108.06  ,   89.75  ,  112.4   ,
41.44  ,    7.438 ,  119.56  ,  160.8   ,   88.25  , -111.56  ,...
2025-04-27 05:04:54.242919 test begin: paddle.sum(Tensor([32, 102400],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([32, 102400],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 32 / 32 (100%)
Max absolute difference among violations: 192.5
Max relative difference among violations: 6.508
ACTUAL: array([ -3.969 ,  -5.938 ,  14.51  ,   3.574 ,  -7.867 ,   9.58  ,
2.145 , -10.914 ,  -3.473 ,  10.57  ,  -1.084 , -11.56  ,
-19.95  ,  -1.466 ,   8.625 ,  14.07  ,   3.105 ,   6.16  ,...
DESIRED: array([  75.6   ,  -29.53  ,  -84.    ,  -18.38  ,  -83.75  ,   21.17  ,
97.1   , -136.5   ,  -50.66  ,  203.1   ,   -0.5884, -170.6   ,
-147.4   ,  -31.69  ,  -39.4   ,  123.94  ,  106.75  ,  156.8   ,...
2025-04-27 05:04:55.458312 test begin: paddle.sum(Tensor([32, 104832],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([32, 104832],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 32 / 32 (100%)
Max absolute difference among violations: 219.1
Max relative difference among violations: 3.934
ACTUAL: array([ 30.52  ,  -2.527 , -10.39  , -11.06  ,  11.38  , -14.16  ,
-7.777 ,  18.06  , -17.58  ,  -1.852 ,  -4.344 ,   3.936 ,
-8.46  , -30.98  ,  -2.678 ,  -5.04  , -13.01  ,  -4.09  ,...
DESIRED: array([  98.94 , -221.6  ,  -22.81 ,    3.77 ,  187.5  ,  -47.25 ,
87.1  ,   66.2  ,   -8.984,   15.23 ,   76.5  ,   76.9  ,
57.1  ,  -74.06 ,  -93.2  ,  -22.25 ,   76.7  , -132.   ,...
2025-04-27 05:04:56.661175 test begin: paddle.sum(Tensor([32, 107520],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([32, 107520],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 32 / 32 (100%)
Max absolute difference among violations: 198.9
Max relative difference among violations: 4.695
ACTUAL: array([ -6.27  ,   5.34  ,  -7.137 ,   5.492 ,  -9.14  ,  -3.457 ,
7.875 ,  -7.242 ,   9.484 , -12.69  , -11.16  ,  -1.712 ,
11.766 ,   7.336 ,  17.11  , -15.305 ,  12.92  ,  12.195 ,...
DESIRED: array([  73.8  ,  -63.38 ,  -28.25 ,  -36.   ,   76.8  ,  158.2  ,
56.66 , -112.8  ,  151.   ,   -6.066,  -51.66 ,   64.8  ,
146.6  ,   41.78 ,   26.38 ,  -40.25 ,   91.   ,  -63.1  ,...
2025-04-27 05:04:58.372112 test begin: paddle.sum(Tensor([32, 112896],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([32, 112896],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 32 / 32 (100%)
Max absolute difference among violations: 242.6
Max relative difference among violations: 1.679
ACTUAL: array([  8.56  ,  35.03  ,  16.84  , -10.75  ,   0.764 ,   4.613 ,
-0.389 ,  15.64  , -13.01  ,  -3.67  ,  15.28  ,   6.88  ,
-16.31  ,  -4.453 ,   1.752 ,  -7.93  ,  13.73  ,  12.7   ,...
DESIRED: array([ -67.25,  144.5 ,  -24.83,  132.1 ,   58.06,  -14.49,  125.75,
121.6 , -192.5 ,  176.2 ,   85.  ,  -12.15,   31.42,   42.06,
120.94,  -42.84,  -83.6 ,   89.2 , -139.8 ,  148.1 , -138.2 ,...
2025-04-27 05:05:16.697778 test begin: paddle.sum(Tensor([32, 54400],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([32, 54400],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 32 / 32 (100%)
Max absolute difference among violations: 128.8
Max relative difference among violations: 41.47
ACTUAL: array([ -6.35 , -10.68 ,   8.914,  -6.41 ,   6.29 ,   6.742, -14.95 ,
-5.625, -13.31 ,  -6.742, -12.34 ,   0.282, -19.31 , -17.08 ,
-29.52 ,   7.066,  -3.855,   8.26 ,  11.31 ,  14.74 , -12.05 ,...
DESIRED: array([  47.    ,   28.62  ,   62.9   ,   83.94  , -119.44  ,   87.7   ,
33.38  ,  -99.    ,   10.51  ,  -60.8   ,   -6.49  ,   53.03  ,
0.4775,   11.055 , -102.4   , -121.7   ,   -9.24  ,   78.75  ,...
2025-04-27 05:05:17.196740 test begin: paddle.sum(Tensor([32, 60800],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([32, 60800],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 32 / 32 (100%)
Max absolute difference among violations: 199.4
Max relative difference among violations: 2.887
ACTUAL: array([ -7.75  ,  -6.207 ,  -0.4414, -31.45  ,   2.041 ,   0.6807,
6.59  ,  12.375 ,   2.13  ,  -7.617 ,   0.355 ,   1.773 ,
10.734 ,   4.1   ,  -4.336 ,  -5.723 ,   2.31  ,  -7.676 ,...
DESIRED: array([ -88.6  , -205.6  ,   40.62 ,  -46.66 ,   49.3  ,  -82.06 ,
-103.7  ,   41.34 ,   53.94 ,   -1.959,  -55.84 ,  -58.4  ,
15.12 ,  -21.81 ,   83.56 ,  -33.72 ,   47.56 ,  117.4  ,...
2025-04-27 05:05:17.695223 test begin: paddle.sum(Tensor([32, 62400],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([32, 62400],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 32 / 32 (100%)
Max absolute difference among violations: 167.8
Max relative difference among violations: 1.531
ACTUAL: array([  2.86  ,  -1.303 ,  11.13  ,  -5.58  ,  -0.596 ,   0.3882,
-7.918 ,   7.105 ,   8.5   ,  -5.31  ,   8.336 ,  23.14  ,
-5.992 ,   4.387 ,  -6.145 ,  10.71  , -14.31  ,  -3.773 ,...
DESIRED: array([  79.25 , -144.8  ,   74.25 ,  -45.53 ,  -18.66 ,   99.4  ,
22.97 ,   76.3  ,   40.5  ,   -8.05 ,  176.1  ,   19.3  ,
65.4  ,  -47.66 ,  -52.06 ,  -72.6  ,  -49.44 , -100.3  ,...
2025-04-27 05:05:18.192504 test begin: paddle.sum(Tensor([32, 63232],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([32, 63232],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 32 / 32 (100%)
Max absolute difference among violations: 153.2
Max relative difference among violations: 1.649
ACTUAL: array([-10.12  ,  18.3   , -20.86  ,  -3.188 ,  19.75  , -10.94  ,
-3.12  ,  18.77  ,   9.62  ,  -6.75  ,  -9.34  ,  -4.887 ,
1.052 ,  -6.645 ,  -2.156 ,   3.19  ,   0.2522,  -1.907 ,...
DESIRED: array([  49.28,   69.9 ,  -50.97,  -24.31,   84.3 ,  -15.29,   90.75,
62.97,   94.5 ,  112.3 , -111.44,   33.12,  -89.9 , -111.8 ,
148.2 ,  -27.66,  -17.7 ,   15.19,   50.16,  -60.8 ,  -12.56,...
2025-04-27 05:05:19.055907 test begin: paddle.sum(Tensor([32, 67200],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([32, 67200],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 32 / 32 (100%)
Max absolute difference among violations: 158.5
Max relative difference among violations: 2.5
ACTUAL: array([ -1.062,   9.23 ,   2.654,   4.99 ,  -0.812,   8.414,   4.258,
-8.39 ,  -3.814,   2.123, -11.35 , -27.02 , -17.11 ,   3.96 ,
-5.43 ,   3.605,  -4.63 ,   2.29 ,  -4.188,  -1.038,  12.164,...
DESIRED: array([-159.5  ,  -43.97 ,   27.25 ,  -56.47 ,   18.05 ,   41.94 ,
-34.56 ,  -38.28 ,   98.9  ,   30.47 ,  -63.75 ,  -25.66 ,
-118.25 ,    9.5  ,  -27.25 ,   40.94 , -113.2  ,  -61.88 ,...
2025-04-27 05:05:19.576734 test begin: paddle.sum(Tensor([32, 68096],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([32, 68096],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 32 / 32 (100%)
Max absolute difference among violations: 180.4
Max relative difference among violations: 3.957
ACTUAL: array([  6.21  , -12.836 ,  -6.977 ,   4.23  , -13.875 ,  11.97  ,
-1.652 ,  -3.371 ,   3.338 ,  -7.46  ,   6.242 ,   1.657 ,
-11.195 ,   8.15  ,  17.06  ,   6.414 ,  11.76  ,   0.8945,...
DESIRED: array([ -77.5   ,   70.94  ,  -67.4   ,  184.6   ,   54.12  ,    6.137 ,
-68.2   ,  -89.7   ,    0.6733,  -26.5   ,   77.7   ,   20.48  ,
-91.44  ,   22.83  ,  106.25  ,  -44.1   ,   36.53  , -177.9   ,...
2025-04-27 05:05:20.121966 test begin: paddle.sum(Tensor([32, 73984],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([32, 73984],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 32 / 32 (100%)
Max absolute difference among violations: 202.4
Max relative difference among violations: 1.499
ACTUAL: array([ -5.754 ,   9.37  ,   7.47  ,   1.98  ,   2.145 ,  12.016 ,
11.234 ,  29.55  ,  10.66  ,   0.638 ,   5.773 ,   9.82  ,
-12.36  ,  -0.7183,  20.95  ,   3.316 ,   3.896 ,  22.52  ,...
DESIRED: array([-100.75,  135.6 ,  -75.44, -116.1 ,  -21.77,  110.7 ,   23.08,
77.94,   45.06,  -42.66,   41.5 ,  -19.66,  137.2 ,   49.06,
17.83,   30.  ,  -94.25,   35.75,  -61.78,   16.94, -207.1 ,...
2025-04-27 05:05:20.630996 test begin: paddle.sum(Tensor([32, 76160],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([32, 76160],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 32 / 32 (100%)
Max absolute difference among violations: 247.2
Max relative difference among violations: 17.56
ACTUAL: array([-18.42  ,   7.418 ,   3.863 , -16.97  , -13.734 ,  -4.66  ,
26.23  ,   8.375 ,  -4.395 ,  -2.531 ,  13.74  ,   8.625 ,
-17.31  ,   1.652 ,   4.5   ,  -0.724 ,  -0.2031, -11.97  ,...
DESIRED: array([ -67.5  ,   70.5  ,  117.75 ,    9.03 ,    0.829,   94.5  ,
191.2  ,  -29.   ,    2.785, -109.1  ,   31.94 ,   93.06 ,
-264.5  ,   67.8  ,   38.1  ,   54.8  ,  -51.72 ,   49.62 ,...
2025-04-27 05:05:21.195486 test begin: paddle.sum(Tensor([32, 77824],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([32, 77824],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 32 / 32 (100%)
Max absolute difference among violations: 134.8
Max relative difference among violations: 6100.
ACTUAL: array([ -4.707 ,  -5.51  ,   0.7163,  -0.9956,  -9.46  ,  -7.3   ,
-17.83  ,  -6.74  ,   4.15  , -28.58  ,  -6.336 ,   4.72  ,
-2.84  ,  11.445 ,  18.19  ,   5.88  ,   6.28  ,  -3.34  ,...
DESIRED: array([ 9.6625e+01,  4.1125e+01,  5.5969e+01, -2.7547e+01, -1.1694e+02,
5.2156e+01,  8.3625e+01,  1.2219e+02, -6.6062e+01, -5.8469e+01,
-1.1219e+02, -3.0719e+01, -7.5820e+00, -7.6062e+01,  1.5300e+02,...
2025-04-27 05:05:21.689544 test begin: paddle.sum(Tensor([32, 78336],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([32, 78336],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 32 / 32 (100%)
Max absolute difference among violations: 243.8
Max relative difference among violations: 9.766
ACTUAL: array([  2.365 ,  11.83  ,  -1.239 ,  26.78  , -23.98  ,  19.17  ,
-26.7   ,   2.283 ,   5.094 ,  -5.094 ,   5.938 ,   0.2415,
8.01  , -17.78  , -21.33  ,   7.758 ,  16.56  ,  -0.761 ,...
DESIRED: array([  85.2 ,  150.2 , -168.5 ,  172.8 ,  -79.3 ,   72.  ,   -2.48,
-8.66,    9.76, -126.75,  -74.1 ,  190.5 ,   78.25,  -46.16,
34.12,  -26.4 ,   -9.86,   89.3 ,  -58.  , -212.9 ,   84.8 ,...
2025-04-27 05:05:22.495326 test begin: paddle.sum(Tensor([32, 82688],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([32, 82688],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 32 / 32 (100%)
Max absolute difference among violations: 182.
Max relative difference among violations: 1.73
ACTUAL: array([ 17.23  ,   9.36  ,   4.09  ,  -1.67  ,   2.17  , -10.055 ,
6.184 ,   1.637 ,   6.35  ,  -7.887 ,  -2.072 ,  15.59  ,
-13.414 , -10.266 ,  -7.727 ,  14.734 ,  -1.765 , -17.89  ,...
DESIRED: array([  58.06 ,   14.05 ,    3.268,  180.4  ,  100.7  , -180.1  ,
51.94 ,   83.25 ,  -71.7  ,  -32.7  ,  -32.16 ,   64.   ,
24.69 ,   53.28 ,  -15.914,   50.38 ,    2.416,   28.48 ,...
2025-04-27 05:05:23.099566 test begin: paddle.sum(Tensor([32, 84864],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([32, 84864],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 32 / 32 (100%)
Max absolute difference among violations: 192.1
Max relative difference among violations: 38.03
ACTUAL: array([ 1.1312e+01, -3.5656e+01,  1.1938e+01, -2.3062e+01,  8.2422e+00,
-8.1484e+00, -1.4633e+01, -7.7617e+00, -1.3961e+01, -7.8125e-03,
-4.1055e+00,  4.5820e+00, -2.0098e+00, -1.1586e+01, -2.7988e+00,...
DESIRED: array([  33.06  ,   60.53  ,  167.8   ,  -97.6   ,   55.5   ,  -42.3   ,
-28.84  , -115.8   , -111.3   ,   52.4   ,   40.28  ,  -51.94  ,
-159.6   ,  -56.75  ,  -27.42  ,  142.8   , -196.6   , -130.2   ,...
2025-04-27 05:05:23.659326 test begin: paddle.sum(Tensor([32, 85120],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([32, 85120],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 32 / 32 (100%)
Max absolute difference among violations: 179.2
Max relative difference among violations: 3.428
ACTUAL: array([  5.13  ,   7.83  ,  -4.93  ,   5.797 ,  14.96  ,  -5.18  ,
4.992 ,  21.33  ,  12.23  ,   6.19  , -30.64  ,  -0.754 ,
-1.425 , -11.73  ,  -3.924 , -11.11  ,   5.734 , -11.37  ,...
DESIRED: array([   9.87 ,   61.62 ,  -12.15 ,   -3.127,  107.4  ,   29.36 ,
5.633,   15.07 ,   85.5  ,   87.2  ,   45.1  ,  -68.   ,
13.32 ,  -38.06 ,   -7.945, -190.4  ,   18.94 ,   -5.395,...
2025-04-27 05:05:24.421660 test begin: paddle.sum(Tensor([32, 87040],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([32, 87040],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 32 / 32 (100%)
Max absolute difference among violations: 180.1
Max relative difference among violations: 12.19
ACTUAL: array([  5.777 ,  15.69  ,   8.98  ,  -0.4563,   1.268 ,  12.805 ,
-10.08  ,  -4.383 ,  -6.098 ,  -6.51  , -20.86  ,   3.262 ,
4.57  ,   0.7417,  -3.678 ,  10.42  ,  11.27  ,   6.098 ,...
DESIRED: array([  45.53 ,   -1.402,  108.5  ,  -35.9  ,  121.3  ,   12.21 ,
-88.56 ,   89.8  ,   -2.922, -107.5  ,  -73.1  ,   80.75 ,
16.88 ,   -6.543,  -91.7  ,  100.75 ,  -69.3  ,  155.9  ,...
2025-04-27 05:05:24.953057 test begin: paddle.sum(Tensor([32, 89984],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([32, 89984],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 31 / 32 (96.9%)
Max absolute difference among violations: 159.9
Max relative difference among violations: 1.594
ACTUAL: array([ 17.64  , -10.55  , -24.45  ,  -7.41  ,   0.896 ,  13.93  ,
-4.26  ,  -5.934 ,  -5.426 ,   1.425 ,  -4.65  ,   3.068 ,
4.746 ,   2.025 , -20.62  ,   9.195 ,  -3.766 ,  -7.113 ,...
DESIRED: array([  85.1  ,   -9.92 ,  -24.38 ,  -25.67 , -105.25 ,   11.664,
155.6  ,  -21.22 ,  -81.1  ,  -81.7  ,  -31.5  ,  -77.   ,
-54.8  ,   88.56 ,   34.75 ,   69.5  ,  -23.7  ,   88.7  ,...
2025-04-27 05:05:25.829785 test begin: paddle.sum(Tensor([32, 91392],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([32, 91392],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 32 / 32 (100%)
Max absolute difference among violations: 182.1
Max relative difference among violations: 3.28
ACTUAL: array([ 16.28  ,  -5.094 , -25.61  ,  -0.5576,   9.38  ,   4.78  ,
5.574 , -15.91  ,  -0.5933,  -1.016 ,   3.371 ,  10.414 ,
-7.93  , -12.91  ,   3.98  ,  -6.953 ,   0.0804,   6.836 ,...
DESIRED: array([-111.94 ,  -45.5  ,   52.6  ,  -23.89 ,   88.5  , -177.4  ,
3.004,   12.08 ,  -64.25 ,  -61.22 ,  -62.12 ,   90.9  ,
-1.854,   20.12 ,   14.44 ,   55.06 ,  -83.5  ,  -10.04 ,...
2025-04-27 05:05:26.555193 test begin: paddle.sum(Tensor([32, 92416],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([32, 92416],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 32 / 32 (100%)
Max absolute difference among violations: 166.
Max relative difference among violations: 3.152
ACTUAL: array([-25.    , -15.375 ,  12.56  , -11.    ,  -0.7915, -13.72  ,
-16.66  ,  -3.352 ,  -4.344 ,  -3.393 , -11.54  ,  18.16  ,
12.945 ,   1.998 ,  -3.451 ,  -8.516 , -12.87  ,  -3.281 ,...
DESIRED: array([-191.   ,   -5.715,    3.025,  -11.85 ,  -93.56 ,  -39.06 ,
-101.44 ,   76.44 ,   -3.389,   21.97 ,  -21.98 ,  -11.14 ,
-9.77 ,  140.8  ,   79.06 ,  -27.58 ,  -55.97 ,  -81.1  ,...
2025-04-27 05:05:27.108152 test begin: paddle.sum(Tensor([32, 94080],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([32, 94080],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 32 / 32 (100%)
Max absolute difference among violations: 371.5
Max relative difference among violations: 2.12
ACTUAL: array([ -6.54  , -21.53  ,   9.93  ,  -8.83  , -10.09  ,   0.222 ,
-3.74  , -17.11  ,   3.643 , -10.26  ,  -7.656 ,  13.73  ,
-16.36  ,  -8.125 ,  25.12  , -12.36  ,  -4.598 ,  19.97  ,...
DESIRED: array([ -25.94 ,  -16.77 , -185.9  ,  -40.38 ,  -16.22 ,  -61.75 ,
6.77 ,   76.9  ,   75.44 ,   77.56 ,  135.9  ,   14.625,
113.8  ,   70.94 ,   95.2  ,  101.56 ,  -40.44 ,   46.78 ,...
2025-04-27 05:05:27.696657 test begin: paddle.sum(Tensor([32, 94848],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([32, 94848],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 32 / 32 (100%)
Max absolute difference among violations: 196.2
Max relative difference among violations: 6.03
ACTUAL: array([  6.05  ,   3.385 ,   2.215 ,  -1.651 ,  -0.9985,   2.46  ,
7.867 ,   1.674 ,  16.14  ,  -6.18  ,  -2.27  , -14.9   ,
2.38  ,  -6.977 ,   3.13  ,   5.86  ,  12.875 ,  -0.5215,...
DESIRED: array([ 100.44 ,   24.9  ,  -21.28 ,   32.   ,  -84.6  ,  -88.1  ,
141.9  ,   12.71 ,   68.   ,  -76.56 ,   10.22 ,  -60.4  ,
92.7  ,    3.215,   68.8  ,  -53.8  ,   94.06 , -196.8  ,...
2025-04-27 05:05:28.622209 test begin: paddle.sum(Tensor([32, 97088],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([32, 97088],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 32 / 32 (100%)
Max absolute difference among violations: 142.9
Max relative difference among violations: 3.39
ACTUAL: array([ -9.37 ,  10.   , -16.42 ,   8.38 ,   2.996,  14.22 ,  -8.164,
-6.645,   9.96 , -21.23 ,   7.703,  16.39 ,  -5.67 , -30.69 ,
3.928,   3.365, -10.664,  -2.865, -14.25 ,   2.74 , -10.305,...
DESIRED: array([ -77.56 ,   62.16 ,   92.9  ,   48.5  , -100.25 ,  -23.08 ,
-151.   ,  -79.2  ,  -85.25 , -151.6  ,   36.72 ,   24.22 ,
-18.56 ,   12.83 ,   77.44 ,   64.4  ,   85.75 ,   35.56 ,...
2025-04-27 05:05:29.191083 test begin: paddle.sum(Tensor([32, 97280],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([32, 97280],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 32 / 32 (100%)
Max absolute difference among violations: 140.2
Max relative difference among violations: 3.72
ACTUAL: array([ -6.63   , -13.664  ,   3.117  ,  16.75   , -21.12   , -17.77   ,
-3.117  , -20.1    ,  16.53   ,   0.2332 ,  17.7    ,  -3.97   ,
15.72   ,   9.53   ,  -0.10815, -10.76   ,  11.484  , -10.55   ,...
DESIRED: array([ -62.8  ,   62.2  ,  -83.2  ,   21.89 , -161.4  , -127.5  ,
-19.44 ,    7.383,  -21.53 ,  -23.25 ,   -8.01 ,  -33.2  ,
-91.1  ,   56.53 ,   63.34 ,  -45.97 ,   19.31 ,  -52.22 ,...
2025-04-27 05:05:29.742950 test begin: paddle.sum(Tensor([32, 99712],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([32, 99712],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 32 / 32 (100%)
Max absolute difference among violations: 181.5
Max relative difference among violations: 3.043
ACTUAL: array([  3.086,  -9.48 ,  -6.387,   1.719,   1.835,  19.48 ,   1.68 ,
-12.06 ,   1.881,  21.75 ,   6.543,  -5.566,  14.34 ,  -3.414,
10.695,  16.12 , -15.89 ,  22.52 ,   8.13 ,  -1.575,   7.094,...
DESIRED: array([ -76.56 , -141.4  , -104.3  ,  -63.97 ,  -64.44 ,   38.78 ,
67.75 , -193.6  ,   -5.414,  131.   ,  -13.336, -131.8  ,
162.1  ,  -77.7  ,   -5.24 ,  129.   ,  -79.9  ,  157.5  ,...
2025-04-27 05:05:33.421174 test begin: paddle.sum(Tensor([320, 91392],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([320, 91392],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 319 / 320 (99.7%)
Max absolute difference among violations: 269.2
Max relative difference among violations: 66.1
ACTUAL: array([  7.547 ,  -3.697 ,  14.94  ,  -0.145 ,   1.618 ,  11.586 ,
-2.648 ,  -6.707 , -20.2   , -12.32  ,  -6.53  ,  -1.027 ,
-0.2489,   8.086 , -24.78  ,   5.34  ,  -0.5767,  22.12  ,...
DESIRED: array([ 1.3150e+02,  6.9125e+01,  1.2188e+02,  3.0422e+01,  5.5406e+01,
4.1344e+01,  2.4594e+01,  5.3500e+01,  1.0162e+02, -7.4438e+01,
-1.6750e+02,  5.2469e+01, -5.6602e+00,  1.6016e+01, -1.2000e+02,...
2025-04-27 05:05:39.588811 test begin: paddle.sum(Tensor([332, 102144],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([332, 102144],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 331 / 332 (99.7%)
Max absolute difference among violations: 263.5
Max relative difference among violations: 70.56
ACTUAL: array([ -9.016  ,  -3.355  , -18.73   ,  14.06   ,  22.92   ,  29.05   ,
-14.125  ,  13.016  ,   5.863  ,  28.28   ,  -4.844  ,  -6.305  ,
-13.5    ,   6.875  ,   3.08   ,  -5.54   ,  -1.946  ,  16.66   ,...
DESIRED: array([-2.5150e+02,  3.1172e+01, -1.6188e+02,  1.8062e+01,  1.0156e+02,
3.5531e+01, -1.0050e+02,  1.5188e+01,  1.1394e+02,  1.4412e+02,
-1.6859e+01, -1.5625e+02, -1.4975e+02, -1.2769e+02, -2.0375e+02,...
2025-04-27 05:05:47.103442 test begin: paddle.sum(Tensor([332, 60800],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([332, 60800],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 332 / 332 (100%)
Max absolute difference among violations: 187.1
Max relative difference among violations: 163.4
ACTUAL: array([  4.113 ,  16.17  ,  18.58  ,   2.398 ,   2.344 ,   8.62  ,
16.98  , -15.875 ,   2.133 ,  -3.836 ,   0.1343,  -4.613 ,
9.414 ,  14.15  , -27.12  ,  -3.352 ,   7.566 ,  -0.1892,...
DESIRED: array([ 9.9875e+01,  4.5312e+01,  1.1856e+02, -5.3906e+01, -3.8062e+01,
-1.4445e+01, -1.7422e+01, -1.4406e+01, -5.7781e+01, -4.5375e+01,
-7.8375e+01, -5.5188e+01,  6.1344e+01,  3.9594e+01, -7.0062e+01,...
2025-04-27 05:05:57.227930 test begin: paddle.sum(Tensor([36, 102144],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([36, 102144],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 36 / 36 (100%)
Max absolute difference among violations: 217.6
Max relative difference among violations: 2.762
ACTUAL: array([  8.695 ,  -2.191 ,  -5.652 ,   5.5   ,  -4.78  , -11.984 ,
17.9   ,  -1.054 , -15.71  ,   6.4   ,   6.19  ,   8.5   ,
2.31  ,   4.582 ,   0.2214,  -8.47  , -14.336 ,  -4.375 ,...
DESIRED: array([  34.06 , -115.75 ,  133.4  ,   87.6  ,   28.7  ,  -62.66 ,
-41.44 , -143.4  ,  -97.06 ,   77.3  ,   68.   ,  159.   ,
22.9  ,   21.94 ,  -58.53 ,   -7.83 ,  -37.12 , -102.8  ,...
2025-04-27 05:06:08.980944 test begin: paddle.sum(Tensor([36, 54400],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([36, 54400],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 36 / 36 (100%)
Max absolute difference among violations: 170.5
Max relative difference among violations: 36.38
ACTUAL: array([ 2.2402e+00,  1.1336e+01,  1.6523e+00, -1.0805e+01, -2.9160e+00,
-2.9094e+01,  1.1898e+01,  1.9089e-02, -5.8555e+00, -8.8047e+00,
3.1211e+00, -5.3086e+00, -1.2451e-02,  7.5586e+00,  2.5293e+00,...
DESIRED: array([-121.5   ,   48.25  ,  -15.85  ,  -46.75  ,  121.7   , -173.    ,
-158.6   ,  -53.28  ,  -45.34  ,  -65.    ,   93.25  ,  -45.    ,
0.4314,   11.65  ,   13.65  ,   66.5   ,  -42.84  ,  -14.89  ,...
2025-04-27 05:06:09.435585 test begin: paddle.sum(Tensor([36, 56000],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([36, 56000],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 36 / 36 (100%)
Max absolute difference among violations: 153.9
Max relative difference among violations: 5.902
ACTUAL: array([-10.76  ,  -7.152 ,   5.633 ,  -0.3013,  -2.576 ,  -9.89  ,
2.793 ,  16.05  ,   1.669 ,  -6.656 ,   0.8145,   6.69  ,
-24.56  , -13.58  ,  -0.991 ,   4.773 ,  -6.117 ,  21.83  ,...
DESIRED: array([ -47.62 ,  -12.18 ,  -33.78 ,  -24.89 ,  -10.88 ,  -22.27 ,
-15.86 ,    2.324,   -1.611,  -32.53 ,  -68.4  ,  149.4  ,
-121.06 ,  -50.97 ,  -49.3  ,  -12.516,   17.44 ,   10.664,...
2025-04-27 05:06:09.935038 test begin: paddle.sum(Tensor([36, 58752],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([36, 58752],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 36 / 36 (100%)
Max absolute difference among violations: 147.
Max relative difference among violations: 42.34
ACTUAL: array([ -8.51   ,   6.734  , -12.55   ,   4.863  ,  -4.05   ,  11.8    ,
-4.004  ,  -0.1427 ,   6.36   ,   3.941  ,  -9.5    ,   7.11   ,
4.215  ,  -4.89   ,  16.66   ,  -0.04932, -12.31   ,   2.246  ,...
DESIRED: array([-2.5000e+01,  5.9219e+01, -2.0203e+01,  1.2531e+01,  4.1500e+01,
1.5070e+01, -2.9844e+01,  5.3938e+01, -2.9000e+01, -2.2281e+01,
-7.2375e+01,  5.5219e+01, -2.4391e+01, -1.1285e-01,  1.6362e+02,...
2025-04-27 05:06:10.401486 test begin: paddle.sum(Tensor([36, 59200],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([36, 59200],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 36 / 36 (100%)
Max absolute difference among violations: 176.2
Max relative difference among violations: 1.935
ACTUAL: array([-1.9891e+01,  4.5234e+00,  1.4711e+01,  1.2750e+01,  1.9189e+00,
1.3672e-02, -8.9111e-01, -1.2047e+01, -4.4727e+00,  4.9141e+00,
-2.9672e+01, -1.9906e+01,  5.5273e-01,  1.4668e+00, -3.9082e+00,...
DESIRED: array([  35.66,  -54.75,  -15.74,   25.3 ,  -21.61,  -23.66,   -4.45,
-54.34,  -97.06,  -43.28, -122.  ,  -68.94,  -96.06,  -18.05,
-33.78,   18.08,   19.5 ,  -79.1 ,  -29.81,   31.11,   71.5 ,...
2025-04-27 05:06:10.854556 test begin: paddle.sum(Tensor([36, 60800],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([36, 60800],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 36 / 36 (100%)
Max absolute difference among violations: 166.
Max relative difference among violations: 3.838
ACTUAL: array([  9.19  , -17.86  ,  -5.85  ,  -5.92  ,  24.94  ,   2.518 ,
5.227 ,  10.02  ,   7.94  ,   9.586 , -14.23  ,  -7.977 ,
-23.77  ,   1.872 ,   6.46  , -18.02  ,  20.31  , -17.38  ,...
DESIRED: array([  15.41 ,  -54.62 , -117.1  ,  -53.1  ,  -61.84 ,   41.9  ,
54.4  ,   -6.31 ,   60.44 ,   -3.377,  -82.5  ,    3.688,
-176.8  ,    3.242,   35.78 ,   70.9  ,   67.44 , -155.5  ,...
2025-04-27 05:06:11.330951 test begin: paddle.sum(Tensor([36, 62400],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([36, 62400],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 36 / 36 (100%)
Max absolute difference among violations: 168.
Max relative difference among violations: 10.945
ACTUAL: array([ 15.13  , -25.75  ,  15.57  ,  16.75  ,   2.793 ,   5.082 ,
11.555 ,  -1.119 , -27.19  , -18.81  ,  10.99  ,  -6.527 ,
4.188 ,   3.455 ,  18.36  ,  28.88  , -14.11  , -20.33  ,...
DESIRED: array([  32.66  , -154.    ,   21.64  ,  -25.9   ,   19.44  ,   79.6   ,
14.64  ,   69.56  ,  -65.5   ,   80.9   ,   17.17  ,   11.24  ,
-63.44  ,   17.61  ,  -33.6   ,  -50.88  ,    1.419 ,  -12.16  ,...
2025-04-27 05:06:11.790859 test begin: paddle.sum(Tensor([36, 63232],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([36, 63232],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 36 / 36 (100%)
Max absolute difference among violations: 156.
Max relative difference among violations: 2.81
ACTUAL: array([  0.506 ,  -2.459 , -10.586 ,  -6.715 ,   9.91  ,  -3.562 ,
5.36  ,   7.816 ,  -0.3877,  -7.844 ,   3.65  ,   6.19  ,
-16.17  ,  -4.29  ,  10.72  ,  -7.605 ,   5.395 , -20.56  ,...
DESIRED: array([  55.75 ,    1.357,  -95.44 ,  -74.94 ,  107.8  ,   34.44 ,
20.94 ,  -38.12 , -112.3  ,   24.1  ,  -90.06 ,  -16.95 ,
17.7  ,   26.39 ,   32.5  ,   -2.953,  157.5  ,  -74.3  ,...
2025-04-27 05:06:12.333873 test begin: paddle.sum(Tensor([36, 64000],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([36, 64000],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 36 / 36 (100%)
Max absolute difference among violations: 192.9
Max relative difference among violations: 4.242
ACTUAL: array([  6.24  ,  -5.848 ,   7.137 ,  16.44  ,   1.937 ,  12.586 ,
-11.78  ,  -6.31  ,  -0.1011,  30.62  ,   6.34  ,   7.996 ,
-17.45  ,   7.59  ,  14.47  ,  -5.414 ,  -2.148 ,  -9.58  ,...
DESIRED: array([  56.62 ,   -9.06 ,  -85.6  ,   56.75 ,  -36.25 ,  117.2  ,
-96.8  ,   17.36 ,  -58.53 ,  110.44 ,  199.2  ,  -18.92 ,
69.7  ,  -12.2  ,  -17.3  ,   19.22 ,  -63.34 ,  -86.5  ,...
2025-04-27 05:06:12.873475 test begin: paddle.sum(Tensor([36, 67200],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([36, 67200],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 36 / 36 (100%)
Max absolute difference among violations: 135.8
Max relative difference among violations: 1.829
ACTUAL: array([ 2.6348e+00,  1.3422e+01,  1.4443e+00,  8.0078e+00,  9.1797e+00,
-1.4695e+01, -2.5840e+00, -9.0332e-03, -1.5367e+01, -5.0234e+00,
5.9531e+00, -9.2422e+00, -2.0094e+01,  2.3340e+00,  1.2023e+01,...
DESIRED: array([  -6.2  ,    9.2  ,  -30.23 ,  143.8  ,   75.25 ,  -78.   ,
-29.5  ,  112.4  ,   26.77 , -128.2  ,   44.3  ,  -39.62 ,
-7.1  ,  123.94 , -123.56 ,   39.88 ,   51.72 ,   95.44 ,...
2025-04-27 05:06:13.473240 test begin: paddle.sum(Tensor([36, 70528],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([36, 70528],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 36 / 36 (100%)
Max absolute difference among violations: 182.1
Max relative difference among violations: 2.512
ACTUAL: array([-3.1523e+00,  4.9414e+00,  8.3672e+00,  1.7000e+01, -5.4258e+00,
-1.6656e+01, -3.1738e-03,  1.7715e+00, -1.2227e+01, -1.9854e+00,
7.2383e+00, -4.9102e+00,  2.6489e-01,  2.7090e+00,  7.2812e+00,...
DESIRED: array([   2.088 ,   35.94  ,  117.44  ,  -34.03  ,  -53.7   ,  -47.34  ,
23.75  ,  -25.48  ,  -22.5   ,   -0.9897,   18.56  , -141.5   ,
-89.25  ,  -54.25  ,  -98.6   ,   28.45  ,   24.12  ,   46.06  ,...
2025-04-27 05:06:14.058592 test begin: paddle.sum(Tensor([36, 72960],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([36, 72960],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 36 / 36 (100%)
Max absolute difference among violations: 214.5
Max relative difference among violations: 17.03
ACTUAL: array([  1.919 ,  -6.043 , -18.67  ,  13.484 ,   3.367 ,   7.383 ,
-15.17  ,  -7.945 ,  12.89  ,  -7.598 , -18.67  ,  -5.68  ,
1.328 ,  13.68  ,   4.523 ,  -4.043 ,  -1.197 , -11.96  ,...
DESIRED: array([ 141.1   ,  208.5   ,  -29.2   ,  164.9   ,   87.2   ,  -31.52  ,
-129.2   ,   21.67  ,  175.8   , -100.2   ,  -22.62  ,  -11.42  ,
46.94  ,  -17.84  ,   10.11  ,   98.56  ,  -35.6   ,    0.7466,...
2025-04-27 05:06:14.585812 test begin: paddle.sum(Tensor([36, 73984],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([36, 73984],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 36 / 36 (100%)
Max absolute difference among violations: 171.2
Max relative difference among violations: 3.402
ACTUAL: array([ 15.4   ,   2.816 ,  12.81  ,   2.74  ,  10.625 ,  -0.7256,
-12.49  ,  -5.74  ,  -1.726 ,  15.57  ,   2.598 ,   0.2834,
22.33  ,   3.262 ,   0.6826, -15.58  ,  -2.611 ,   2.453 ,...
DESIRED: array([ 144.2  , -168.4  ,  -66.25 ,   19.89 ,  169.9  , -110.06 ,
-56.6  ,   90.44 , -156.1  ,    5.63 ,   17.77 , -113.1  ,
67.   ,  141.9  ,    5.027,   51.38 ,   19.83 ,   43.88 ,...
2025-04-27 05:06:15.183002 test begin: paddle.sum(Tensor([36, 77824],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([36, 77824],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 36 / 36 (100%)
Max absolute difference among violations: 165.4
Max relative difference among violations: 81.06
ACTUAL: array([ -0.8267,  17.12  ,  -1.493 ,  14.89  ,  12.68  ,  13.04  ,
-1.009 ,  -9.44  ,   0.405 ,   8.414 ,  22.64  , -11.61  ,
4.316 ,   8.85  ,  -3.326 ,   4.6   , -10.44  ,  -7.6   ,...
DESIRED: array([-144.8  ,  -47.44 ,   22.98 ,  -47.94 ,  -86.2  ,  -18.6  ,
44.78 ,   -3.125,   48.84 ,  -49.8  ,    0.276,   27.95 ,
-37.5  ,   46.53 ,  -69.6  ,   92.75 ,  -26.64 ,   14.13 ,...
2025-04-27 05:06:15.778316 test begin: paddle.sum(Tensor([36, 78336],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([36, 78336],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 36 / 36 (100%)
Max absolute difference among violations: 163.4
Max relative difference among violations: 11.5
ACTUAL: array([-11.5   ,   4.6   ,  -7.84  ,  13.35  ,   1.572 ,   4.68  ,
-7.953 , -11.664 ,   7.75  ,   8.41  ,   0.5557,   7.055 ,
-13.89  ,  10.25  ,  -1.03  ,   5.934 ,   7.01  ,  18.67  ,...
DESIRED: array([-114.3   ,   10.555 , -156.6   ,  -67.6   ,  137.9   ,   -5.543 ,
-81.    ,  151.8   , -132.9   ,  -21.3   ,  -53.53  ,   42.7   ,
-145.1   ,   73.94  ,   56.22  ,  152.5   ,   15.94  ,   24.52  ,...
2025-04-27 05:06:16.289272 test begin: paddle.sum(Tensor([36, 80256],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([36, 80256],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 35 / 36 (97.2%)
Max absolute difference among violations: 163.1
Max relative difference among violations: 24.19
ACTUAL: array([  0.3186,  12.414 ,  17.34  ,  17.11  , -11.81  ,  -5.758 ,
7.027 , -28.44  ,  26.36  ,  12.42  ,  -4.176 ,  -5.168 ,
-29.4   ,   9.95  ,   3.283 ,  19.14  ,   1.327 ,  21.58  ,...
DESIRED: array([ -75.3  ,   46.16 ,   -0.748,  104.06 ,    6.24 ,  -19.69 ,
16.78 ,   40.   ,  137.5  ,    6.74 , -157.8  ,  120.1  ,
-93.8  ,  -79.3  ,   69.94 ,  105.94 ,   74.5  ,  -73.1  ,...
2025-04-27 05:06:16.867595 test begin: paddle.sum(Tensor([36, 80512],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([36, 80512],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 36 / 36 (100%)
Max absolute difference among violations: 232.4
Max relative difference among violations: 6.57
ACTUAL: array([ -4.383 ,  -6.88  ,  10.    ,  13.484 ,  -0.3723,  -2.723 ,
-18.03  ,  -8.28  ,  -2.227 , -22.33  , -11.48  ,   4.89  ,
-12.35  ,  -4.12  , -19.95  ,  -6.223 ,   1.859 ,  -4.266 ,...
DESIRED: array([  17.95  ,   56.22  ,   51.06  ,   93.8   ,   65.44  ,   47.1   ,
-83.56  ,   78.7   ,  -43.28  , -208.1   , -100.94  ,  -48.44  ,
-41.94  ,  -54.9   , -115.9   ,   41.3   ,   59.03  ,   36.06  ,...
2025-04-27 05:06:17.516568 test begin: paddle.sum(Tensor([36, 82688],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([36, 82688],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 36 / 36 (100%)
Max absolute difference among violations: 237.5
Max relative difference among violations: 5.637
ACTUAL: array([ 11.43  , -21.23  , -19.66  ,   7.168 ,  -4.062 ,  -3.348 ,
-2.914 ,  -0.7744,   2.793 ,   9.16  , -10.2   ,  -1.148 ,
3.26  , -14.13  ,   0.2478,   7.617 ,   4.81  ,  14.2   ,...
DESIRED: array([  -5.867,  -23.03 ,  -91.7  ,   -6.336, -103.4  ,   -5.83 ,
54.28 ,  -78.56 ,   10.78 ,   33.3  ,  -66.5  ,  -31.53 ,
91.4  ,   21.55 ,  -84.7  ,  -45.56 ,   71.3  ,    2.14 ,...
2025-04-27 05:06:18.017247 test begin: paddle.sum(Tensor([36, 84480],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([36, 84480],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 36 / 36 (100%)
Max absolute difference among violations: 172.1
Max relative difference among violations: 13.38
ACTUAL: array([-10.16  , -11.555 ,   1.002 ,   6.625 ,   3.629 ,  -1.706 ,
1.84  ,   9.6   ,  14.39  ,  -1.927 , -24.56  , -15.86  ,
6.13  ,  -3.242 ,   5.36  ,  13.03  ,  12.17  ,  21.6   ,...
DESIRED: array([  -0.7065,  -30.47  , -161.8   ,  -50.3   ,   65.6   ,  -26.53  ,
-66.25  ,   58.88  ,  -93.4   ,  -63.56  ,   21.52  ,   54.62  ,
-56.3   ,   22.69  ,   58.53  ,  120.25  ,  108.94  ,  -35.6   ,...
2025-04-27 05:06:18.641121 test begin: paddle.sum(Tensor([36, 84864],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([36, 84864],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 36 / 36 (100%)
Max absolute difference among violations: 228.2
Max relative difference among violations: 4.32
ACTUAL: array([ -1.445 ,   0.0791,  11.414 ,   8.234 ,   2.676 ,  15.23  ,
-2.842 ,  15.57  ,  16.34  ,  14.92  ,  -7.78  ,  13.25  ,
-1.691 ,  -2.81  ,   6.83  ,  -9.57  ,  -6.55  ,   3.572 ,...
DESIRED: array([  23.12 ,   85.6  , -132.2  ,  -77.9  ,    8.26 ,   75.44 ,
-0.534,   29.39 ,  103.94 , -133.2  , -151.9  ,  -28.45 ,
-82.06 ,   56.8  ,   37.7  ,   11.086,  135.4  ,   46.2  ,...
2025-04-27 05:06:19.255752 test begin: paddle.sum(Tensor([36, 85120],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([36, 85120],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 36 / 36 (100%)
Max absolute difference among violations: 169.8
Max relative difference among violations: 7.645
ACTUAL: array([-10.84  , -17.58  , -12.24  , -11.06  ,  -2.885 ,   5.637 ,
8.1   ,   4.32  ,  20.39  ,  14.34  , -17.97  ,  12.31  ,
6.1   ,   2.031 ,  14.66  ,  -1.548 ,  -4.58  ,   0.3457,...
DESIRED: array([  71.75 ,  -66.3  , -160.6  ,   -1.279,  -18.27 ,  -51.97 ,
76.75 ,   71.94 ,   36.53 ,   99.9  ,  128.4  ,   25.86 ,
-22.33 , -156.   ,  172.9  ,   56.38 ,   63.6  ,  102.56 ,...
2025-04-27 05:06:19.833294 test begin: paddle.sum(Tensor([36, 86016],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([36, 86016],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 36 / 36 (100%)
Max absolute difference among violations: 235.1
Max relative difference among violations: 6.434
ACTUAL: array([  6.24  ,  -6.2   , -10.78  ,  -9.99  , -16.25  ,  16.77  ,
-8.37  ,  12.586 ,  -7.06  ,  -4.363 ,   6.953 , -16.73  ,
-18.34  , -18.97  ,  -8.21  ,  13.89  ,   3.385 ,   5.625 ,...
DESIRED: array([ -96.7  ,   12.72 ,  -20.92 , -104.44 ,  -50.6  ,   50.34 ,
45.84 ,   60.12 ,   69.2  , -144.8  ,   98.5  ,  -74.7  ,
-70.8  ,    3.49 ,  -19.83 ,  -29.11 ,  141.2  ,  122.2  ,...
2025-04-27 05:06:20.433449 test begin: paddle.sum(Tensor([36, 87040],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([36, 87040],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 36 / 36 (100%)
Max absolute difference among violations: 197.
Max relative difference among violations: 3.406
ACTUAL: array([ -6.86  ,  19.44  ,  15.625 ,   4.387 ,  -4.145 ,  -3.45  ,
9.91  ,  -4.277 , -14.85  ,   2.127 ,   0.527 ,  -0.1924,
-9.33  ,  14.25  , -20.39  ,   6.008 ,  -7.59  ,  11.13  ,...
DESIRED: array([ -56.38 ,   70.44 ,  -76.3  ,  -13.61 ,  104.7  ,    9.35 ,
47.38 ,   63.44 ,  -75.06 , -189.8  , -131.5  ,   99.25 ,
91.8  ,   55.7  ,  -21.48 ,  -12.67 ,  -53.16 ,   54.66 ,...
2025-04-27 05:06:20.974825 test begin: paddle.sum(Tensor([36, 87360],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([36, 87360],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 36 / 36 (100%)
Max absolute difference among violations: 166.2
Max relative difference among violations: 32.56
ACTUAL: array([-12.6   ,  -6.867 ,  -1.167 , -18.3   ,   5.875 ,   6.363 ,
-0.9478, -28.86  ,  11.58  ,  -6.14  ,  21.61  , -16.81  ,
-2.451 ,  12.234 , -11.88  ,  13.63  , -13.29  ,   9.016 ,...
DESIRED: array([ -38.7   ,  -74.    , -166.2   ,  -50.94  ,   77.4   ,    7.656 ,
12.09  ,   24.05  ,  -57.53  ,   63.25  ,   -0.6846, -155.2   ,
45.25  , -114.4   , -105.4   ,  130.8   , -131.4   ,  -89.1   ,...
2025-04-27 05:06:21.647945 test begin: paddle.sum(Tensor([36, 87552],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([36, 87552],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 36 / 36 (100%)
Max absolute difference among violations: 137.5
Max relative difference among violations: 1.565
ACTUAL: array([ -0.7563,  16.2   ,  26.86  ,  -1.9   ,  -4.16  ,   3.951 ,
-9.24  ,  -3.416 ,   7.332 ,   8.87  ,  -7.617 ,   7.914 ,
-0.8047, -12.266 , -16.78  , -13.16  ,   1.558 ,  -8.71  ,...
DESIRED: array([  26.83 ,  -28.62 ,  163.8  ,  -20.66 , -108.25 ,  -84.3  ,
118.   ,   94.   ,   29.62 ,   25.17 ,  -63.94 ,  -97.6  ,
13.305,  -50.25 ,  -98.06 ,   67.9  ,   21.66 , -103.1  ,...
2025-04-27 05:06:22.243225 test begin: paddle.sum(Tensor([36, 89216],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([36, 89216],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 36 / 36 (100%)
Max absolute difference among violations: 292.5
Max relative difference among violations: 74.06
ACTUAL: array([-20.56  ,  16.28  ,   9.1   ,   9.56  ,   7.09  , -19.83  ,
-2.951 ,  -6.688 ,  -8.48  ,  11.66  ,  26.25  ,  -8.47  ,
-2.88  ,  -8.336 ,   7.754 ,  -0.2322,  13.58  ,  -4.28  ,...
DESIRED: array([ -53.12  ,  -14.74  ,  -56.47  ,  -66.9   ,   44.84  ,   10.266 ,
-295.5   ,  138.2   ,  105.9   , -143.8   ,    0.3499,   65.4   ,
20.64  ,  -13.96  ,  118.9   ,  -23.56  , -117.75  ,  -40.53  ,...
2025-04-27 05:06:22.906013 test begin: paddle.sum(Tensor([36, 89984],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([36, 89984],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 36 / 36 (100%)
Max absolute difference among violations: 167.4
Max relative difference among violations: 7.027
ACTUAL: array([ 16.02  ,   6.945 ,  -2.523 ,   0.5425,  -1.538 ,  16.11  ,
6.047 , -17.34  , -10.21  ,  13.516 ,  23.5   ,   1.918 ,
13.87  ,  -4.96  ,  -2.725 ,   8.39  ,  -6.176 , -13.7   ,...
DESIRED: array([  73.3  ,  128.4  ,   87.2  ,   34.7  ,   -4.703,  -30.05 ,
20.8  ,  -27.5  ,   69.5  ,   33.38 ,  -44.78 ,   51.03 ,
-72.2  ,  145.5  ,  164.   ,  -91.9  , -116.25 ,  -17.1  ,...
2025-04-27 05:06:23.503364 test begin: paddle.sum(Tensor([36, 91392],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([36, 91392],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 36 / 36 (100%)
Max absolute difference among violations: 222.6
Max relative difference among violations: 2.752
ACTUAL: array([ -5.375 ,  -0.312 ,  -7.363 ,  -1.8   , -16.97  ,  -6.902 ,
-0.5444,   9.195 ,   2.406 ,  -2.705 ,   8.3   ,  12.14  ,
-10.805 ,  14.09  , -14.664 ,  16.56  ,  -9.73  ,  -1.365 ,...
DESIRED: array([  95.5  ,  -31.5  ,   39.88 ,   62.3  , -120.2  , -133.   ,
157.5  ,   20.45 ,  -85.56 ,  -64.8  ,   58.56 ,  -15.24 ,
-212.8  ,  169.4  , -237.2  , -104.1  ,   -5.51 ,  -47.25 ,...
2025-04-27 05:06:24.135232 test begin: paddle.sum(Tensor([36, 92416],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([36, 92416],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 36 / 36 (100%)
Max absolute difference among violations: 172.
Max relative difference among violations: 12.93
ACTUAL: array([ -5.473 ,  -3.688 ,  -2.06  ,  -4.61  ,  -1.115 ,  12.56  ,
8.195 ,  -8.53  ,   5.043 ,   8.125 ,  -2.37  ,  14.93  ,
-2.91  ,   4.63  , -13.99  ,  10.3   ,  11.33  ,  -8.96  ,...
DESIRED: array([ -20.22 , -169.8  ,  -83.9  ,    1.452,  105.3  ,  129.1  ,
-7.934,    6.934,  -43.3  ,   34.5  ,  -61.28 ,  148.9  ,
-78.5  ,   39.9  ,   78.4  ,   29.81 ,   12.57 , -113.75 ,...
2025-04-27 05:06:24.797707 test begin: paddle.sum(Tensor([36, 94848],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([36, 94848],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 36 / 36 (100%)
Max absolute difference among violations: 255.9
Max relative difference among violations: 1.803
ACTUAL: array([-18.17  ,  -1.403 ,  12.984 ,  -3.516 ,  16.97  ,  23.34  ,
-2.41  ,  17.98  ,  -3.59  ,  25.08  , -15.02  ,  -9.21  ,
4.918 ,  -8.6   ,  10.31  ,  10.914 ,   2.914 , -11.234 ,...
DESIRED: array([ -66.7  ,  -19.38 ,  -21.73 ,   52.12 ,  -22.1  ,  279.2  ,
-61.6  , -156.   ,   52.62 ,   94.   ,  -94.5  ,  -80.8  ,
51.5  ,   26.14 ,   66.3  ,  116.2  ,  166.9  ,   66.06 ,...
2025-04-27 05:06:25.438538 test begin: paddle.sum(Tensor([36, 97280],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([36, 97280],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 36 / 36 (100%)
Max absolute difference among violations: 226.9
Max relative difference among violations: 9.414
ACTUAL: array([-10.16 , -11.875,  12.71 ,  -4.227,   3.705,  21.62 ,  -1.589,
2.943,   8.625,  -5.79 ,  16.11 , -16.5  ,  10.125,  -8.73 ,
-6.246,  -3.055, -20.23 ,   2.285,  -6.7  ,   8.39 , -16.33 ,...
DESIRED: array([ -81.25 ,  154.1  ,  100.9  ,   68.25 ,    0.61 ,    4.008,
-4.58 ,    7.01 ,   22.45 ,  -51.12 ,  127.7  ,   14.41 ,
59.8  ,   -5.055,   75.44 ,  -63.78 ,   66.3  ,  143.8  ,...
2025-04-27 05:06:26.031753 test begin: paddle.sum(Tensor([36, 99456],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([36, 99456],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 36 / 36 (100%)
Max absolute difference among violations: 207.
Max relative difference among violations: 4.125
ACTUAL: array([  0.6133,   0.8467,   5.383 ,  15.37  ,  14.25  ,  -4.375 ,
2.621 ,  -8.055 ,   8.66  , -13.06  ,   8.95  ,  28.66  ,
-8.74  ,  -1.157 ,  -8.76  ,  -7.293 ,  -3.049 ,  -9.2   ,...
DESIRED: array([-154.   ,   78.7  ,  212.4  ,  213.   ,    7.523,    3.15 ,
-22.4  ,   -3.31 ,   31.42 ,  -69.   ,  -87.44 ,  140.9  ,
3.84 , -116.94 , -157.   ,  104.9  ,  -51.25 , -106.7  ,...
2025-04-27 05:06:29.017167 test begin: paddle.sum(Tensor([360, 67200],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([360, 67200],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 359 / 360 (99.7%)
Max absolute difference among violations: 242.4
Max relative difference among violations: 16.03
ACTUAL: array([ 9.2871e-01,  1.1270e+00,  2.1078e+01,  1.5852e+01,  2.1266e+01,
5.1523e+00,  1.0070e+01,  6.0859e+00,  9.6016e+00,  1.3953e+01,
9.3281e+00, -1.7250e+01,  5.5312e+00,  6.8516e+00, -1.1711e+01,...
DESIRED: array([  39.72 ,  -62.   ,  122.44 ,  -10.195,  -31.33 ,   22.06 ,
74.3  ,   96.06 ,   48.2  ,   56.1  ,   42.2  ,  -16.7  ,
18.31 ,    8.39 ,    5.05 ,   88.44 ,   33.3  ,  -48.7  ,...
2025-04-27 05:06:32.207811 test begin: paddle.sum(Tensor([364, 102144],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([364, 102144],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 362 / 364 (99.5%)
Max absolute difference among violations: 266.8
Max relative difference among violations: 73.56
ACTUAL: array([ -0.723  ,  -4.547  ,   6.504  ,   6.58   ,   1.688  ,   3.906  ,
-14.31   ,  25.89   ,  11.11   ,  -5.234  ,  19.47   , -10.03   ,
11.9    ,   4.355  ,   1.733  ,  -2.654  , -15.34   ,   3.781  ,...
DESIRED: array([ 1.2275e+02, -9.3312e+01, -3.4094e+01,  1.0250e+02, -8.5781e+00,
1.6275e+02, -1.2312e+01,  1.0988e+02, -1.5662e+02,  1.4388e+02,
-4.2594e+01, -7.1625e+01,  1.2016e+01,  1.0484e+01, -1.4100e+02,...
2025-04-27 05:06:41.680303 test begin: paddle.sum(Tensor([372, 102144],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([372, 102144],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 372 / 372 (100%)
Max absolute difference among violations: 242.
Max relative difference among violations: 36.6
ACTUAL: array([ 7.9395e-01, -1.2914e+01, -1.9727e+00,  3.7832e+00,  1.7939e+00,
-2.8438e+00, -1.3109e+01,  6.7266e+00, -7.2578e+00,  2.1156e+01,
4.0781e+00, -1.0688e+01,  5.4736e-01,  1.9150e+00, -4.6758e+00,...
DESIRED: array([  26.61  ,  -36.75  , -244.    ,   62.53  ,  -45.    ,   91.25  ,
23.88  ,   23.86  ,  -92.25  ,  145.    ,   34.3   ,  -62.25  ,
53.94  ,   42.06  ,  189.2   ,  -88.6   , -166.2   ,   27.48  ,...
2025-04-27 05:06:58.547254 test begin: paddle.sum(Tensor([4, 102144],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([4, 102144],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 4 / 4 (100%)
Max absolute difference among violations: 122.2
Max relative difference among violations: 1.235
ACTUAL: array([-7.74, 10.13, 25.94, 23.3 ], dtype=float16)
DESIRED: array([-76.9  ,  15.055,  60.6  , -98.9  ], dtype=float16)
2025-04-27 05:06:59.137087 test begin: paddle.sum(Tensor([4, 112896],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([4, 112896],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 4 / 4 (100%)
Max absolute difference among violations: 254.4
Max relative difference among violations: 0.9634
ACTUAL: array([  4.348,  -8.02 , -19.9  ,  -8.586], dtype=float16)
DESIRED: array([ 118.94, -172.9 , -274.2 , -220.4 ], dtype=float16)
2025-04-27 05:07:21.115804 test begin: paddle.sum(Tensor([4, 67200],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([4, 67200],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 4 / 4 (100%)
Max absolute difference among violations: 49.6
Max relative difference among violations: 0.9185
ACTUAL: array([-29.22,   4.4 ,   9.02,  15.44], dtype=float16)
DESIRED: array([-42.4 ,  54.  ,  53.16,  53.  ], dtype=float16)
2025-04-27 05:07:21.914074 test begin: paddle.sum(Tensor([4, 73984],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([4, 73984],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 4 / 4 (100%)
Max absolute difference among violations: 140.5
Max relative difference among violations: 1.332
ACTUAL: array([ -5.78 , -21.61 ,  -2.217,  13.17 ], dtype=float16)
DESIRED: array([-146.2 ,  -23.69,  -35.78,  -39.75], dtype=float16)
2025-04-27 05:07:22.790276 test begin: paddle.sum(Tensor([4, 80512],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([4, 80512],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 4 / 4 (100%)
Max absolute difference among violations: 76.9
Max relative difference among violations: 1.295
ACTUAL: array([ -2.064,  14.28 , -13.19 ,   3.42 ], dtype=float16)
DESIRED: array([10.01, 91.2 , 44.72, 75.7 ], dtype=float16)
2025-04-27 05:07:23.967728 test begin: paddle.sum(Tensor([4, 82688],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([4, 82688],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 4 / 4 (100%)
Max absolute difference among violations: 133.8
Max relative difference among violations: 1.144
ACTUAL: array([  1.559,  12.766, -32.88 ,   7.957], dtype=float16)
DESIRED: array([  32.7 ,  -88.94, -166.6 ,   23.72], dtype=float16)
2025-04-27 05:07:24.649936 test begin: paddle.sum(Tensor([4, 84864],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([4, 84864],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 4 / 4 (100%)
Max absolute difference among violations: 44.84
Max relative difference among violations: 0.98
ACTUAL: array([-10.4  ,  10.58 ,  -1.181,   0.564], dtype=float16)
DESIRED: array([-12.88,  20.  , -46.03,  28.23], dtype=float16)
2025-04-27 05:07:25.051930 test begin: paddle.sum(Tensor([4, 87360],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([4, 87360],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 4 / 4 (100%)
Max absolute difference among violations: 89.06
Max relative difference among violations: 1.114
ACTUAL: array([-4.973,  9.15 ,  6.73 ,  2.463], dtype=float16)
DESIRED: array([-33.62, -79.94,  74.8 ,  61.2 ], dtype=float16)
2025-04-27 05:07:25.943153 test begin: paddle.sum(Tensor([4, 92416],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([4, 92416],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 4 / 4 (100%)
Max absolute difference among violations: 150.2
Max relative difference among violations: 1.153
ACTUAL: array([-14.77 ,  -9.67 ,  -2.234,  19.67 ], dtype=float16)
DESIRED: array([  96.25,  -82.2 , -152.5 ,   10.67], dtype=float16)
2025-04-27 05:07:26.988362 test begin: paddle.sum(Tensor([4, 97280],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([4, 97280],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 4 / 4 (100%)
Max absolute difference among violations: 129.6
Max relative difference among violations: 1.028
ACTUAL: array([ -9.05  ,  -0.2432, -14.01  ,   3.531 ], dtype=float16)
DESIRED: array([ -25.73,  -12.21,  -20.34, -126.06], dtype=float16)
2025-04-27 05:07:28.029602 test begin: paddle.sum(Tensor([40, 102144],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([40, 102144],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 40 / 40 (100%)
Max absolute difference among violations: 248.4
Max relative difference among violations: 5.004
ACTUAL: array([ -6.664 ,  11.76  ,  11.336 , -11.17  ,   8.55  ,  -0.817 ,
2.293 ,   5.453 ,   1.108 ,  -9.85  ,  -2.361 , -20.8   ,
-13.086 ,  10.79  ,  20.56  ,  14.08  ,  12.766 ,   6.383 ,...
DESIRED: array([ 185.5  ,  -51.12 ,  -17.73 ,   32.56 ,   85.6  ,  -19.02 ,
-61.3  , -113.3  ,    5.293,  136.8  ,  110.6  , -247.6  ,
72.5  ,   28.52 ,   91.25 ,   70.44 ,  150.5  ,   12.16 ,...
2025-04-27 05:07:28.844043 test begin: paddle.sum(Tensor([40, 104832],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([40, 104832],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 40 / 40 (100%)
Max absolute difference among violations: 238.8
Max relative difference among violations: 8.17
ACTUAL: array([  2.676  ,   9.95   ,   4.344  ,  14.664  ,   6.426  ,   2.496  ,
-5.363  ,   2.16   ,   4.348  ,  20.58   ,  -2.305  ,   8.6    ,
3.898  ,   0.04468,  -7.332  ,   2.312  ,  -5.24   ,   5.574  ,...
DESIRED: array([ 171.  ,   37.22,  129.9 , -224.1 ,  -48.22,   73.4 , -145.5 ,
-25.5 ,  -17.03,   94.5 ,  -69.94, -170.2 ,  -58.62,   15.83,
-79.4 ,   57.3 ,  -74.7 ,   56.66,  -47.8 ,  108.9 ,   22.4 ,...
2025-04-27 05:07:30.255205 test begin: paddle.sum(Tensor([40, 112896],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([40, 112896],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 40 / 40 (100%)
Max absolute difference among violations: 182.9
Max relative difference among violations: 6.832
ACTUAL: array([ -4.74  , -10.84  ,   9.55  ,   1.223 ,  -6.16  ,   1.873 ,
-4.074 ,   6.176 ,  17.78  ,   7.65  ,  -5.133 ,   0.839 ,
-4.176 , -17.16  ,  -4.633 ,  19.58  ,  18.78  ,   8.72  ,...
DESIRED: array([   6.883, -101.56 ,  -73.56 ,   57.06 ,   -6.805,  -59.66 ,
100.8  ,   -1.059,  116.   ,  -59.   ,  172.9  ,   66.9  ,
-61.53 , -115.5  ,   50.34 ,   30.31 ,  -33.3  ,   19.5  ,...
2025-04-27 05:07:47.400053 test begin: paddle.sum(Tensor([40, 54400],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([40, 54400],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 40 / 40 (100%)
Max absolute difference among violations: 125.06
Max relative difference among violations: 9.83
ACTUAL: array([  0.9116,  -0.4075,  -2.441 ,  14.8   ,  13.29  ,  25.81  ,
-3.209 ,  10.19  ,   3.861 , -17.58  ,  -5.836 ,   8.52  ,
1.582 ,   8.94  , -13.09  ,  17.97  , -18.8   , -22.9   ,...
DESIRED: array([  35.16 ,  -27.   ,    8.09 ,  137.1  ,   35.5  ,   14.66 ,
-4.75 ,   55.34 ,  -24.81 ,  -26.08 ,  -67.5  ,  -15.85 ,
57.9  ,  -61.22 ,  -36.1  ,   58.62 ,  -53.47 , -108.1  ,...
2025-04-27 05:07:47.953459 test begin: paddle.sum(Tensor([40, 56576],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([40, 56576],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 40 / 40 (100%)
Max absolute difference among violations: 164.8
Max relative difference among violations: 14.89
ACTUAL: array([-12.37   ,   7.566  ,  -0.993  ,   0.4805 ,  -8.125  ,  23.84   ,
1.375  ,  14.28   ,  -0.03955,  -2.664  ,  15.94   ,  23.9    ,
-7.08   ,  16.67   ,   0.2472 ,   3.807  ,  -7.79   ,  -8.4    ,...
DESIRED: array([ -87.9  ,   43.84 ,   -3.04 ,  -29.   ,   43.16 ,   -6.316,
-20.28 ,   -1.028,  120.2  ,  -94.5  ,  -73.56 ,  188.6  ,
-5.953,  -64.44 ,  -62.97 ,  -69.44 , -112.94 ,  -54.44 ,...
2025-04-27 05:07:48.470813 test begin: paddle.sum(Tensor([40, 59200],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([40, 59200],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 40 / 40 (100%)
Max absolute difference among violations: 182.2
Max relative difference among violations: 8.07
ACTUAL: array([  1.973 ,  17.83  ,  18.88  ,  25.22  , -11.2   ,  -0.9736,
9.31  ,  14.516 ,   6.703 ,  -0.3481,   1.7   ,   5.098 ,
21.44  ,   0.918 ,   7.082 ,  -2.684 , -18.78  , -19.61  ,...
DESIRED: array([  51.75 ,    7.29 ,   92.06 ,   62.   , -193.5  ,  -67.4  ,
105.1  ,  -63.78 ,   63.47 ,  -88.8  ,  -34.28 ,  -23.53 ,
45.84 ,   75.6  ,  103.   , -154.5  ,  -94.75 ,  -76.3  ,...
2025-04-27 05:07:48.995674 test begin: paddle.sum(Tensor([40, 60800],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([40, 60800],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 40 / 40 (100%)
Max absolute difference among violations: 191.9
Max relative difference among violations: 2.87
ACTUAL: array([ 18.08  ,   0.5005,   2.78  ,  26.61  ,  -1.912 ,   9.74  ,
-5.824 ,  -3.451 ,  13.88  ,   6.793 ,   9.945 ,  -1.23  ,
18.03  ,   1.243 ,  -0.9893, -12.266 , -33.1   ,   3.332 ,...
DESIRED: array([  37.38 ,   49.12 ,  -77.1  ,  -14.234,   33.44 ,  127.56 ,
30.69 ,  -64.1  , -104.2  ,  -73.5  ,   59.25 ,   72.1  ,
128.9  ,  -63.16 ,  -39.5  ,  -75.75 ,  -86.4  ,   98.3  ,...
2025-04-27 05:07:49.570804 test begin: paddle.sum(Tensor([40, 63232],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([40, 63232],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 40 / 40 (100%)
Max absolute difference among violations: 163.
Max relative difference among violations: 3.709
ACTUAL: array([-17.5   ,   2.516 ,  10.24  ,   4.617 ,   5.957 ,  -8.02  ,
13.37  ,   6.08  ,  10.945 ,  12.31  ,   6.266 , -15.61  ,
8.25  ,  16.72  ,  -2.59  ,   9.84  ,  -1.854 ,   7.    ,...
DESIRED: array([ -44.28  ,  -80.1   ,  170.4   ,   17.25  ,  -37.4   ,   87.25  ,
21.03  ,   11.46  ,  112.    , -150.8   , -126.06  ,   31.34  ,
15.57  ,  -92.7   ,    0.9565,   11.62  ,  -69.    ,  -32.47  ,...
2025-04-27 05:07:50.089260 test begin: paddle.sum(Tensor([40, 63936],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([40, 63936],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 40 / 40 (100%)
Max absolute difference among violations: 149.9
Max relative difference among violations: 4.832
ACTUAL: array([ -7.176 ,  21.64  ,  -0.5967,  -7.137 , -10.08  , -11.02  ,
5.074 ,   3.58  , -16.66  , -16.12  ,   7.465 , -10.67  ,
-0.68  ,   6.105 ,  16.64  ,   6.633 ,   5.105 ,  -4.203 ,...
DESIRED: array([  60.66 ,    7.49 ,   35.75 ,  -12.36 ,    2.63 ,  -94.25 ,
-85.4  ,  -95.7  , -114.   ,  -14.06 ,  -78.94 ,   24.25 ,
-145.2  ,  -19.34 ,    8.93 , -143.2  ,   72.1  ,   87.4  ,...
2025-04-27 05:07:50.613650 test begin: paddle.sum(Tensor([40, 64000],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([40, 64000],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 40 / 40 (100%)
Max absolute difference among violations: 166.6
Max relative difference among violations: 8.62
ACTUAL: array([-16.94  ,  -9.734 ,   4.504 ,  -1.664 ,   8.39  ,  -1.341 ,
-1.856 ,  -3.016 , -20.75  , -21.98  ,   6.805 ,   5.242 ,
-4.586 ,  -6.348 ,  -6.03  ,   6.65  ,  13.22  ,  -4.96  ,...
DESIRED: array([ -15.75 ,   66.   ,   62.12 , -118.   ,  175.   ,  -38.22 ,
13.12 ,   51.06 ,  -92.5  ,  -28.78 ,   99.7  ,  -55.9  ,
-2.953,    0.833,   33.78 ,    9.01 ,    4.305,   70.94 ,...
2025-04-27 05:07:51.161731 test begin: paddle.sum(Tensor([40, 67200],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([40, 67200],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 40 / 40 (100%)
Max absolute difference among violations: 129.4
Max relative difference among violations: 2.967
ACTUAL: array([-9.0000e+00, -1.3969e+01,  1.2695e-02,  1.2844e+01,  1.7422e+01,
6.7461e+00,  2.4414e-04,  4.4648e+00, -2.3828e-01,  1.5484e+01,
-7.3594e+00, -7.3359e+00,  1.4766e+00,  1.1234e+01,  1.6846e+00,...
DESIRED: array([-138.4  ,    7.105,  -93.2  ,  -40.62 ,   89.25 ,   37.47 ,
-83.75 ,   98.9  ,  -92.9  ,   35.8  ,  -91.7  ,  -11.83 ,
-38.2  ,   95.9  ,   50.56 ,   43.84 ,    3.846,  -94.   ,...
2025-04-27 05:07:51.712065 test begin: paddle.sum(Tensor([40, 67392],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([40, 67392],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 40 / 40 (100%)
Max absolute difference among violations: 155.8
Max relative difference among violations: 5.023
ACTUAL: array([ 18.52  ,  -1.976 ,  -0.0886,  -4.29  ,  -7.645 ,  -1.417 ,
-0.995 ,  -3.04  , -11.45  ,  34.7   ,  -3.014 ,   4.133 ,
-10.24  ,  23.89  ,  15.23  ,   0.708 , -13.055 , -12.48  ,...
DESIRED: array([  72.3  , -107.56 ,   87.56 , -160.   ,  -76.4  ,  -83.9  ,
-106.6  ,    7.83 ,   21.73 ,   86.75 ,    6.008,  -34.9  ,
74.06 ,  -13.445,   16.9  ,   13.2  ,   18.05 ,  -15.16 ,...
2025-04-27 05:07:52.235913 test begin: paddle.sum(Tensor([40, 69632],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([40, 69632],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 40 / 40 (100%)
Max absolute difference among violations: 228.6
Max relative difference among violations: 3.574
ACTUAL: array([ 1.619e+01, -2.181e+01, -1.379e+01, -1.018e+01,  1.741e+01,
-8.125e+00, -2.254e+00, -5.652e+00,  1.812e+01, -2.378e+01,
-1.889e+01, -8.617e+00,  5.166e-01, -7.418e+00,  9.185e-01,...
DESIRED: array([  37.2 ,  -19.14,   30.3 ,   10.79,  -44.6 ,   71.75,  -46.53,
-33.  ,    5.4 ,    9.24,  107.4 ,  -74.8 ,  -55.34,  -39.12,
-16.19,  -24.78,  -16.6 ,   68.75,   95.5 ,  223.8 ,  101.2 ,...
2025-04-27 05:07:52.740919 test begin: paddle.sum(Tensor([40, 70528],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([40, 70528],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 40 / 40 (100%)
Max absolute difference among violations: 159.9
Max relative difference among violations: 2.133
ACTUAL: array([ 12.945  ,   2.824  ,  -2.     ,  -4.316  , -25.5    , -21.98   ,
-0.791  ,  11.26   ,   3.793  ,   4.35   ,  -9.875  ,  11.16   ,
0.1804 ,  -7.797  ,   5.117  ,   3.29   ,   6.71   ,   6.684  ,...
DESIRED: array([  52.12 ,   61.78 ,  126.7  ,  -46.62 ,  134.4  ,  -72.1  ,
-86.44 ,   24.25 ,   44.62 ,  -89.75 , -142.6  ,  142.5  ,
72.06 ,  -24.52 ,   -4.51 ,  -69.4  ,  107.6  ,  -53.28 ,...
2025-04-27 05:07:53.224315 test begin: paddle.sum(Tensor([40, 73984],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([40, 73984],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 40 / 40 (100%)
Max absolute difference among violations: 266.8
Max relative difference among violations: 27.95
ACTUAL: array([-10.65  ,   5.195 ,  25.98  ,   0.5063,   6.953 , -10.85  ,
12.15  ,  -1.538 , -12.99  ,   6.36  ,  10.234 ,  12.23  ,
-14.67  ,  -0.1826,  -9.8   , -24.73  ,  25.23  ,  27.44  ,...
DESIRED: array([-5.8750e+01,  1.6266e+01,  8.0188e+01,  2.7148e+00,  2.7375e+02,
-1.2050e+02,  6.8688e+01, -1.9512e+02,  6.2875e+01, -1.6562e+01,
1.0588e+02,  8.1625e+01, -1.1656e+01, -8.7000e+01,  1.2294e+02,...
2025-04-27 05:07:53.934731 test begin: paddle.sum(Tensor([40, 76160],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([40, 76160],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 40 / 40 (100%)
Max absolute difference among violations: 130.6
Max relative difference among violations: 2.527
ACTUAL: array([  5.605 ,   9.15  ,   2.23  ,   2.652 ,  -2.646 ,   0.1132,
8.18  ,   5.273 , -21.5   ,  -6.477 ,  -4.21  ,   5.47  ,
-1.85  ,  -1.731 ,  -1.942 ,  -4.77  , -12.67  , -21.47  ,...
DESIRED: array([ 125.2  ,  -37.94 ,  -99.44 ,   20.5  ,  -12.9  ,   78.06 ,
28.03 ,  -11.51 ,   -8.44 , -130.8  ,   21.8  ,   -3.584,
56.6  ,   44.25 ,   30.   , -129.2  ,  -89.9  ,  -87.25 ,...
2025-04-27 05:07:54.658306 test begin: paddle.sum(Tensor([40, 78144],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([40, 78144],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 40 / 40 (100%)
Max absolute difference among violations: 183.6
Max relative difference among violations: 90.56
ACTUAL: array([-10.29  , -23.7   ,  -3.186 ,   3.85  ,  12.04  ,  -8.5   ,
-0.6377,  -2.309 ,  16.7   ,   1.557 ,   7.105 ,  -3.98  ,
0.412 ,   9.83  ,   5.75  ,  24.27  ,  -8.49  ,  -8.14  ,...
DESIRED: array([-1.7234e+01, -6.1562e+01,  1.3175e+02,  1.1875e+02,  6.3156e+01,
-4.9188e+01,  8.6000e+01,  2.0266e+01, -2.3203e+01, -2.7797e+01,
-8.3188e+01, -9.8562e+01, -6.0188e+01, -5.1688e+01, -7.1375e+01,...
2025-04-27 05:07:55.225817 test begin: paddle.sum(Tensor([40, 78336],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([40, 78336],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 40 / 40 (100%)
Max absolute difference among violations: 203.
Max relative difference among violations: 3.748
ACTUAL: array([  2.652,  20.34 ,  -1.384, -12.2  ,  15.86 ,  -4.43 ,  13.24 ,
-20.4  ,   3.99 ,   1.474,  -1.382,   2.602,  -3.346,  10.13 ,
-7.082,   7.3  ,  15.15 ,  -5.117, -19.39 ,  15.36 ,  -9.88 ,...
DESIRED: array([ -83.   ,  100.4  ,  -85.94 ,   45.28 ,  -55.22 ,   62.16 ,
-40.06 ,  -23.55 ,  163.   ,  108.25 ,  -86.5  ,    8.35 ,
9.16 ,   47.12 , -121.06 ,  117.2  ,  -94.5  ,  117.94 ,...
2025-04-27 05:07:55.781056 test begin: paddle.sum(Tensor([40, 78400],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([40, 78400],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 40 / 40 (100%)
Max absolute difference among violations: 184.9
Max relative difference among violations: 2.295
ACTUAL: array([-1.2750e+01, -6.8477e+00,  3.0664e+00, -3.8691e+00,  1.2828e+01,
-3.8496e+00,  2.3262e+00, -1.3570e+01,  8.1177e-03,  6.3008e+00,
-1.1148e+01, -4.1328e+00, -1.3096e+00, -1.9258e+00,  1.1641e+01,...
DESIRED: array([ -65.44 ,  -47.7  ,  -46.4  ,  -30.88 , -161.9  ,   19.97 ,
109.25 ,  -17.77 ,  -71.56 ,  123.5  ,  -42.12 ,   97.44 ,
41.62 ,   47.8  ,   30.53 ,  101.06 ,   14.484, -102.5  ,...
2025-04-27 05:07:56.496047 test begin: paddle.sum(Tensor([40, 80512],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([40, 80512],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 40 / 40 (100%)
Max absolute difference among violations: 161.4
Max relative difference among violations: 9.24
ACTUAL: array([-13.42   ,  -1.467  , -13.62   , -10.95   ,   2.51   , -10.     ,
7.305  ,  16.64   ,  -5.785  ,   7.023  ,  12.945  ,   1.551  ,
15.69   ,   7.18   ,  -0.12476,  10.516  ,  -0.263  ,   6.92   ,...
DESIRED: array([  99.1  ,   29.33 , -148.8  ,   29.52 ,    2.273,  -15.62 ,
-11.266,   65.06 ,   87.4  ,   78.2  ,    4.234,  156.1  ,
150.   ,  -33.25 ,  -97.3  ,   76.44 ,  -85.   ,   45.8  ,...
2025-04-27 05:07:57.200793 test begin: paddle.sum(Tensor([40, 82688],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([40, 82688],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 40 / 40 (100%)
Max absolute difference among violations: 211.2
Max relative difference among violations: 1.383
ACTUAL: array([  0.81  , -11.99  ,   8.805 ,  -0.963 ,  -5.152 ,  16.1   ,
8.234 ,  -6.688 ,   5.363 ,   1.978 ,  16.2   , -21.88  ,
-1.094 ,  -4.977 ,  24.02  , -15.055 ,  -0.4136,  -0.2673,...
DESIRED: array([ -64.1 ,  -23.23,  -38.4 , -165.9 ,  138.  ,  -42.  , -111.1 ,
40.53,   47.56,   76.6 , -129.5 , -121.8 ,   43.38,  -50.66,
81.8 ,  -16.31,  -54.3 ,  -71.1 , -209.8 , -110.94,  -54.7 ,...
2025-04-27 05:07:57.884917 test begin: paddle.sum(Tensor([40, 84864],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([40, 84864],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 40 / 40 (100%)
Max absolute difference among violations: 128.6
Max relative difference among violations: 3.32
ACTUAL: array([  6.32  ,   8.23  , -12.19  , -10.89  ,  -4.055 ,   0.7144,
-11.445 , -10.27  ,  20.39  ,  14.79  , -13.99  ,   4.652 ,
-8.16  ,  -2.238 ,   7.406 ,  -6.664 ,  -3.482 ,  -0.4827,...
DESIRED: array([ 112.56 ,  -37.72 ,  -55.78 ,   78.6  ,   36.62 ,   93.8  ,
-136.8  ,   44.5  ,   52.44 ,   45.22 , -115.7  ,  -46.   ,
-56.34 ,   38.28 ,  -71.94 ,  -26.25 ,  -93.8  ,    1.546,...
2025-04-27 05:07:58.639600 test begin: paddle.sum(Tensor([40, 85120],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([40, 85120],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 40 / 40 (100%)
Max absolute difference among violations: 234.8
Max relative difference among violations: 3.953
ACTUAL: array([  6.25  ,  -1.461 ,   9.555 ,  15.25  , -24.2   ,  -0.8813,
-19.2   ,  -3.688 ,  13.26  ,   2.572 ,  29.44  ,  -6.52  ,
-14.97  , -15.55  ,   9.58  ,  -0.1819,   3.457 ,  -0.796 ,...
DESIRED: array([  -6.594,  -54.3  ,   79.2  ,   24.56 ,  -34.56 ,   97.   ,
-133.6  , -138.   , -123.75 , -232.1  ,  -36.84 ,  -94.94 ,
-60.9  ,   36.44 ,   46.6  ,   65.06 ,  -38.44 ,  114.3  ,...
2025-04-27 05:07:59.499536 test begin: paddle.sum(Tensor([40, 86016],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([40, 86016],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 40 / 40 (100%)
Max absolute difference among violations: 182.
Max relative difference among violations: 1.836
ACTUAL: array([  7.83  ,   3.9   ,   0.847 ,  -9.66  ,   4.64  ,   7.207 ,
1.109 ,  11.08  ,  -7.73  ,   6.188 ,   6.56  ,  15.445 ,
-4.77  , -11.07  ,   0.2328,   0.765 ,  -4.85  ,  -0.909 ,...
DESIRED: array([ -11.516,  -12.98 ,   44.53 ,  -66.06 ,   38.06 ,   53.84 ,
10.414,  -41.66 ,  -34.66 ,   24.64 ,   46.94 ,  -70.25 ,
5.703, -114.44 ,  -12.69 ,   40.38 ,  -74.1  ,   17.55 ,...
2025-04-27 05:08:00.230812 test begin: paddle.sum(Tensor([40, 87040],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([40, 87040],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 40 / 40 (100%)
Max absolute difference among violations: 150.8
Max relative difference among violations: 68.3
ACTUAL: array([  2.535 ,   2.639 ,  10.56  ,   2.893 ,  -7.336 , -15.46  ,
-9.414 , -16.58  , -18.94  ,  -0.397 ,  -6.832 ,  -7.1   ,
-12.74  ,   6.72  ,   8.52  ,  20.27  ,  11.18  ,  28.97  ,...
DESIRED: array([  38.22  ,    1.672 ,  -83.56  ,  -98.56  ,  -11.8   , -145.5   ,
-33.2   ,   25.62  ,    6.844 ,   51.6   ,   32.5   ,    6.918 ,
28.34  ,   46.03  ,   40.6   ,    0.2922,  -47.12  ,  179.8   ,...
2025-04-27 05:08:01.122977 test begin: paddle.sum(Tensor([40, 89216],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([40, 89216],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 40 / 40 (100%)
Max absolute difference among violations: 201.5
Max relative difference among violations: 6.387
ACTUAL: array([ -6.56 ,   0.797,  17.11 ,  -2.293,  10.18 ,  -6.04 ,   5.93 ,
14.8  ,  -9.195,  17.81 , -14.09 ,   7.395,  -1.499,   1.988,
12.336,   3.424,  15.99 ,   5.707,  16.08 ,  -3.156,   0.59 ,...
DESIRED: array([  35.12 ,   -5.82 ,    2.316,  -66.5  ,  -64.56 ,  -99.   ,
-24.27 ,  166.2  , -210.8  ,   13.94 ,  -65.75 ,  -58.5  ,
-124.8  ,  189.9  ,   29.44 ,  -76.94 ,   22.62 ,   60.6  ,...
2025-04-27 05:08:01.709498 test begin: paddle.sum(Tensor([40, 89984],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([40, 89984],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 40 / 40 (100%)
Max absolute difference among violations: 183.5
Max relative difference among violations: 4.31
ACTUAL: array([ 24.44  ,   4.246 ,  -0.893 ,  -6.086 ,   2.69  ,  -0.2834,
7.1   ,   3.03  ,  16.73  ,  12.52  ,  -4.184 ,  -2.46  ,
-10.61  ,   5.89  ,   6.285 ,   7.76  ,   8.625 ,  16.97  ,...
DESIRED: array([  94.9  ,  -82.9  ,  -58.56 ,  -65.3  ,   47.78 ,   -4.727,
67.5  , -143.1  ,  -60.22 ,   55.   ,    1.265,  181.   ,
-111.75 ,   38.94 ,   36.16 ,  -38.44 ,   75.5  ,   25.34 ,...
2025-04-27 05:08:02.711074 test begin: paddle.sum(Tensor([40, 91392],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([40, 91392],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 40 / 40 (100%)
Max absolute difference among violations: 231.1
Max relative difference among violations: 10.76
ACTUAL: array([-10.48  , -19.83  , -14.55  ,   1.523 ,   0.2952,  -8.84  ,
-10.81  ,  -6.38  ,  -5.215 ,   5.445 , -13.86  ,   7.223 ,
11.83  ,  -9.945 , -12.18  ,  -2.531 ,  -2.023 ,   7.87  ,...
DESIRED: array([ -19.34  ,  -79.9   ,   56.53  ,  232.6   , -190.8   ,  -32.78  ,
-142.6   ,   46.84  ,   53.7   ,   99.06  ,  103.94  ,   -4.83  ,
-79.    ,   68.3   ,  -69.6   , -109.2   ,   72.25  ,   18.58  ,...
2025-04-27 05:08:03.513083 test begin: paddle.sum(Tensor([40, 92416],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([40, 92416],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 40 / 40 (100%)
Max absolute difference among violations: 168.6
Max relative difference among violations: 4.016
ACTUAL: array([ -7.758 , -15.38  ,   7.156 ,  -8.336 ,  -1.76  ,  11.32  ,
-2.54  , -13.3   ,   7.15  ,  -9.09  , -10.914 ,  16.31  ,
14.64  ,  -7.742 ,  -3.602 ,   9.44  ,  -5.457 , -10.805 ,...
DESIRED: array([  12.77 ,   42.66 , -114.4  ,   -6.96 ,  -58.44 ,   78.9  ,
-50.88 ,  -53.7  , -106.44 ,  -52.1  ,   64.1  , -112.8  ,
79.06 ,   -5.445,  -55.1  ,  -49.72 ,   50.97 ,  127.56 ,...
2025-04-27 05:08:04.497245 test begin: paddle.sum(Tensor([40, 94080],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([40, 94080],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 40 / 40 (100%)
Max absolute difference among violations: 221.
Max relative difference among violations: 1.758
ACTUAL: array([ -1.733 ,  13.3   , -22.55  ,   6.777 , -13.164 ,  -5.273 ,
9.2   , -12.7   ,  -1.323 ,   0.7314, -18.25  ,  -2.092 ,
-1.284 ,   4.266 ,  -1.314 , -16.39  ,  -0.321 ,  -4.62  ,...
DESIRED: array([  11.54 ,   78.6  , -127.4  ,   80.5  , -156.8  , -107.4  ,
-67.7  ,  -98.4  ,  -35.   ,   40.28 ,  -47.9  ,  -82.75 ,
-116.   ,   55.8  , -102.2  ,  -96.2  ,  -65.3  ,   -9.9  ,...
2025-04-27 05:08:05.151648 test begin: paddle.sum(Tensor([40, 94848],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([40, 94848],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 40 / 40 (100%)
Max absolute difference among violations: 204.8
Max relative difference among violations: 1.774
ACTUAL: array([  1.003 ,   3.504 , -12.07  ,  -1.158 ,   5.97  ,  17.08  ,
10.92  ,  -4.855 ,  -7.582 ,  11.66  , -22.47  , -12.2   ,
16.2   ,  20.44  ,  -6.207 ,  -7.39  ,  20.3   , -15.05  ,...
DESIRED: array([ -35.94 , -171.6  ,   45.56 ,  -34.16 ,   69.7  ,  -32.88 ,
68.75 ,  -53.5  ,  -17.2  , -114.56 ,  -31.27 , -184.8  ,
-105.56 ,  -26.38 ,  122.3  ,   87.3  ,  -42.06 ,   41.16 ,...
2025-04-27 05:08:06.384659 test begin: paddle.sum(Tensor([40, 97280],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([40, 97280],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 40 / 40 (100%)
Max absolute difference among violations: 181.1
Max relative difference among violations: 1.343
ACTUAL: array([ -7.85  ,   9.11  ,   3.986 ,  -8.414 ,   1.182 ,  -9.51  ,
-13.734 ,  -1.045 ,   1.93  ,  -2.316 ,   3.574 ,  -7.605 ,
13.945 ,  -7.227 ,  21.28  ,   3.732 ,  -6.453 ,  -9.125 ,...
DESIRED: array([  66.  ,  -37.7 ,  -33.84, -103.4 ,  112.56,  -96.06, -141.6 ,
-104.5 ,  -78.9 , -121.75, -105.06,  129.6 ,  109.44,   81.8 ,
-71.9 ,  -38.56, -101.25,   83.25,  178.2 ,   46.62,  121.2 ,...
2025-04-27 05:08:07.457779 test begin: paddle.sum(Tensor([40, 99456],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([40, 99456],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 40 / 40 (100%)
Max absolute difference among violations: 185.9
Max relative difference among violations: 3.758
ACTUAL: array([ 12.78  ,  -7.246 ,   2.076 ,  14.805 , -13.78  , -12.25  ,
0.4263,  11.7   ,   7.613 ,   2.734 ,  10.58  , -14.57  ,
-2.508 ,   7.41  ,   1.251 ,  -9.4   ,  -2.717 , -18.27  ,...
DESIRED: array([ -84.9  ,  -97.44 ,   96.56 ,  125.3  , -121.5  ,  -94.94 ,
-70.06 ,  -27.23 ,  191.9  ,  -19.3  ,  -54.25 ,    6.7  ,
-45.3  ,  -14.27 ,  -77.56 ,  -10.266, -122.56 ,   73.7  ,...
2025-04-27 05:08:08.108899 test begin: paddle.sum(Tensor([40, 99712],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([40, 99712],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 40 / 40 (100%)
Max absolute difference among violations: 150.8
Max relative difference among violations: 4.57
ACTUAL: array([-15.87  ,  20.22  ,  11.82  , -14.25  ,  -1.005 ,   2.285 ,
-10.33  ,  -5.703 ,  -6.777 ,  -0.903 ,  -5.293 ,   1.972 ,
-0.5156,  20.03  ,   3.56  ,   5.83  ,  -1.355 ,  27.48  ,...
DESIRED: array([-108.56 ,  131.8  ,   74.6  ,  -93.94 ,   98.06 ,  -18.05 ,
-15.85 ,   86.9  ,  -83.44 ,   87.3  ,  -56.47 , -119.94 ,
58.72 ,   75.25 ,   55.72 ,   65.56 , -106.56 ,  146.4  ,...
2025-04-27 05:08:14.399133 test begin: paddle.sum(Tensor([4096],"float16"), )
[accuracy error] paddle.sum(Tensor([4096],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.961
Max relative difference among violations: 0.10205
ACTUAL: array(8.45, dtype=float16)
DESIRED: array(9.414, dtype=float16)
2025-04-27 05:08:17.754777 test begin: paddle.sum(Tensor([4194304],"float16"), )
[accuracy error] paddle.sum(Tensor([4194304],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 25.
Max relative difference among violations: 0.05408
ACTUAL: array(-437.2, dtype=float16)
DESIRED: array(-462.2, dtype=float16)
2025-04-27 05:08:23.660301 test begin: paddle.sum(Tensor([44, 102144],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([44, 102144],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 44 / 44 (100%)
Max absolute difference among violations: 173.8
Max relative difference among violations: 42.53
ACTUAL: array([  2.654 ,   2.47  ,   7.066 ,   6.406 ,   0.6484,   7.83  ,
6.94  ,   8.734 ,  -0.545 ,   4.332 ,   8.086 ,  12.78  ,
-22.61  ,   9.625 , -20.03  ,  -1.103 ,  13.46  , -15.82  ,...
DESIRED: array([ 6.2406e+01, -6.3469e+01, -4.7500e+01, -3.3438e+01,  5.8156e+01,
-6.0742e+00,  9.6188e+01,  5.7281e+01, -8.4938e+01, -3.6125e+01,
8.9500e+01,  1.1350e+02, -3.0438e+01, -8.7062e+01,  1.1438e+02,...
2025-04-27 05:08:32.012310 test begin: paddle.sum(Tensor([44, 54400],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([44, 54400],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 44 / 44 (100%)
Max absolute difference among violations: 123.94
Max relative difference among violations: 556.5
ACTUAL: array([ -1.77 ,   9.86 ,   3.438,  13.02 ,  -5.305,  12.66 , -13.45 ,
-15.664,   5.91 ,   7.11 ,  17.77 ,  10.32 , -10.04 ,   8.42 ,
-3.475,  12.664,  -9.445,   8.914, -11.84 ,   0.734,  -2.084,...
DESIRED: array([ 1.077e+01, -4.988e+01, -4.253e+01,  4.444e+01, -5.206e+01,
3.131e+01, -6.288e+01, -5.284e+01, -4.047e+01, -3.561e+00,
2.614e+01,  1.342e+02,  2.530e+01,  7.059e+00,  3.145e+01,...
2025-04-27 05:08:32.573521 test begin: paddle.sum(Tensor([44, 60800],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([44, 60800],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 44 / 44 (100%)
Max absolute difference among violations: 154.8
Max relative difference among violations: 14.12
ACTUAL: array([  9.086 , -16.36  , -14.7   ,  -4.895 ,  -7.227 ,   4.516 ,
-10.99  ,  -4.996 ,  10.945 , -12.984 ,   1.858 ,  10.086 ,
-3.596 , -19.02  , -12.21  , -22.69  ,  -8.47  ,  -1.683 ,...
DESIRED: array([   7.32 ,  -69.9  ,   22.06 , -106.7  ,  -19.61 ,  -68.4  ,
107.8  ,    2.627,   -7.617,  -25.52 ,   39.8  ,  -50.66 ,
45.72 , -173.8  ,  -33.78 ,   35.   , -146.4  ,  -41.8  ,...
2025-04-27 05:08:33.168708 test begin: paddle.sum(Tensor([44, 63232],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([44, 63232],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 44 / 44 (100%)
Max absolute difference among violations: 117.7
Max relative difference among violations: 2.736
ACTUAL: array([ 10.07  ,   1.276 ,  -5.082 ,   8.11  ,   0.373 ,   0.9146,
3.13  ,  12.02  ,   2.55  ,  10.41  ,  16.7   ,  -6.74  ,
-12.94  ,  -3.11  ,   6.082 , -12.5   , -13.484 ,  -4.758 ,...
DESIRED: array([ -56.4  ,   59.6  ,  -31.73 ,  112.6  ,  -19.   ,  -24.66 ,
95.5  ,   10.85 ,   21.81 ,   78.75 ,   21.06 ,  -64.3  ,
76.1  ,   51.62 ,  -34.44 ,  -31.56 ,  -15.05 ,  -67.2  ,...
2025-04-27 05:08:33.717723 test begin: paddle.sum(Tensor([44, 64000],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([44, 64000],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 44 / 44 (100%)
Max absolute difference among violations: 131.4
Max relative difference among violations: 1.758
ACTUAL: array([ -3.479 , -12.95  , -17.84  ,  -5.7   , -25.17  ,   6.01  ,
-13.45  ,  -0.725 ,  -6.523 ,  10.016 ,   8.875 ,  12.164 ,
8.6   ,   6.47  ,  -7.125 ,  -3.775 ,  13.09  ,  13.04  ,...
DESIRED: array([ -63.03,  -76.44,  -53.8 ,   47.62,  -27.1 ,  -55.8 ,  -70.1 ,
-69.  ,   29.05,  -33.12,   20.08,   34.03,   40.12,   28.53,
83.3 ,  -95.  ,   78.75,  138.8 ,   80.7 ,   31.69,   26.64,...
2025-04-27 05:08:34.318627 test begin: paddle.sum(Tensor([44, 67200],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([44, 67200],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 44 / 44 (100%)
Max absolute difference among violations: 157.1
Max relative difference among violations: 2.4
ACTUAL: array([  7.906 ,  21.72  ,   9.88  ,  17.69  ,  -6.305 ,  11.38  ,
-0.3433,   4.812 ,  10.37  ,  -6.363 ,  -4.79  ,   0.3862,
-11.91  ,  21.42  ,   0.4172,  11.88  ,  -2.02  ,  -2.22  ,...
DESIRED: array([ -27.5  ,  -32.25 ,   72.8  ,  140.6  ,  -36.22 ,   73.5  ,
137.1  ,   42.72 ,   50.12 ,   47.56 ,  -28.94 ,   -5.78 ,
-35.84 ,   26.44 ,   54.8  ,   19.42 ,  -93.6  ,  154.9  ,...
2025-04-27 05:08:34.865117 test begin: paddle.sum(Tensor([44, 73984],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([44, 73984],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 44 / 44 (100%)
Max absolute difference among violations: 162.8
Max relative difference among violations: 2.793
ACTUAL: array([  1.231  ,  11.72   , -22.73   , -25.2    ,  -1.124  , -16.56   ,
10.09   ,  -1.186  ,  -6.805  , -18.02   ,  -6.93   ,   1.91   ,
0.05054,   2.832  ,  11.266  , -13.4    ,  16.72   ,   5.113  ,...
DESIRED: array([  40.53 ,   85.6  ,  -52.28 , -125.9  ,  150.9  ,  -91.5  ,
-148.4  ,   25.55 ,  -68.3  ,  -41.88 ,  -91.7  ,  118.3  ,
50.28 ,   63.78 ,  -53.4  ,  -43.1  ,  112.94 ,  135.6  ,...
2025-04-27 05:08:35.435942 test begin: paddle.sum(Tensor([44, 75392],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([44, 75392],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 44 / 44 (100%)
Max absolute difference among violations: 170.
Max relative difference among violations: 33.4
ACTUAL: array([  6.945 , -17.81  ,   0.8022, -15.97  ,   7.31  ,   1.846 ,
-5.62  , -19.88  ,  -3.385 ,  29.9   ,   5.457 ,   1.097 ,
-18.78  ,   3.145 ,  14.53  ,  11.54  ,   4.1   , -19.31  ,...
DESIRED: array([ -14.98  , -103.75  , -147.    ,  -17.75  ,  -86.7   ,  -92.06  ,
-145.2   , -177.1   ,   85.94  ,   48.4   ,  -26.98  ,   13.164 ,
9.12  ,  -15.586 ,  -81.8   , -139.8   ,  -20.81  , -151.4   ,...
2025-04-27 05:08:36.030865 test begin: paddle.sum(Tensor([44, 78144],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([44, 78144],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 44 / 44 (100%)
Max absolute difference among violations: 226.1
Max relative difference among violations: 3.77
ACTUAL: array([-15.055 ,  -5.39  , -23.72  ,  16.84  ,   2.404 ,   1.696 ,
15.266 ,  -0.7573,   2.428 ,  14.234 , -34.38  ,   0.2747,
-14.914 ,   0.1399,   0.9136,  11.3   ,  11.75  , -25.7   ,...
DESIRED: array([ -92.44 , -125.5  ,  -90.44 ,   96.9  , -119.25 ,  -15.47 ,
-37.4  ,  -25.52 ,   27.39 ,   11.32 , -124.06 ,    1.099,
-37.12 ,   29.05 ,  111.75 ,   51.47 ,    2.723,   40.94 ,...
2025-04-27 05:08:36.648056 test begin: paddle.sum(Tensor([44, 80512],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([44, 80512],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 44 / 44 (100%)
Max absolute difference among violations: 161.6
Max relative difference among violations: 7.598
ACTUAL: array([ 15.28  ,  -2.018 ,  -1.767 ,   8.414 , -12.266 ,  -3.68  ,
-8.984 ,  -1.099 ,   0.1423,   2.623 ,   2.857 ,   1.076 ,
-2.031 ,  -5.32  ,   1.235 , -17.05  ,  -6.004 , -11.77  ,...
DESIRED: array([  32.97 ,   23.17 ,  151.6  ,  -15.234,   28.31 ,   93.1  ,
-120.94 ,  -23.28 ,    4.9  ,  -58.5  ,  143.2  ,   -4.85 ,
-59.78 ,   48.84 ,   37.7  ,  144.6  ,   50.22 ,  -32.8  ,...
2025-04-27 05:08:37.278113 test begin: paddle.sum(Tensor([44, 82688],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([44, 82688],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 44 / 44 (100%)
Max absolute difference among violations: 188.
Max relative difference among violations: 5.82
ACTUAL: array([  5.793 ,  -0.6094,  -6.742 ,  -6.51  , -30.28  ,   8.63  ,
10.695 , -18.95  , -16.44  ,   1.447 ,   5.668 ,   7.566 ,
10.086 ,  -8.    , -11.125 ,  10.55  , -17.44  ,   3.62  ,...
DESIRED: array([  -8.48 ,  -86.7  , -190.   ,   59.62 , -133.   ,  124.3  ,
6.027,  -29.47 ,   -7.64 ,  -54.88 ,    0.831,  -33.84 ,
60.4  ,  100.56 ,   18.89 ,   38.6  ,  -97.   ,  191.6  ,...
2025-04-27 05:08:37.957439 test begin: paddle.sum(Tensor([44, 84864],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([44, 84864],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 44 / 44 (100%)
Max absolute difference among violations: 195.8
Max relative difference among violations: 10.91
ACTUAL: array([ -9.89   ,   4.645  ,  24.72   ,   8.71   ,  -3.625  ,   7.05   ,
6.75   ,   5.45   ,  -6.25   ,  12.5    ,   2.857  ,  -1.895  ,
-7.918  ,  17.58   ,  -3.93   ,  -6.742  ,   6.406  ,  -4.074  ,...
DESIRED: array([ -39.66  ,  -79.6   , -102.5   ,   38.16  ,  -47.4   ,    8.55  ,
12.77  ,   44.94  ,   79.25  ,   71.2   ,  -41.    ,   50.8   ,
0.7993,    2.66  ,   24.55  ,  -49.2   ,   85.75  ,  -37.5   ,...
2025-04-27 05:08:38.644982 test begin: paddle.sum(Tensor([44, 91392],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([44, 91392],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 44 / 44 (100%)
Max absolute difference among violations: 215.5
Max relative difference among violations: 5.17
ACTUAL: array([ 12.29  , -13.06  ,  -4.902 ,  15.05  ,  -6.47  ,  11.64  ,
6.227 ,   9.62  ,  17.25  , -11.164 ,  -1.461 ,  12.336 ,
3.45  , -10.69  ,  16.4   ,  -5.566 ,   0.2427,  -8.99  ,...
DESIRED: array([  82.75 ,  -48.5  ,   20.1  ,  -97.06 ,    4.457,   61.25 ,
141.5  ,    6.41 ,   23.78 , -133.1  ,  -10.26 ,  -21.56 ,
20.08 ,   11.445,   66.5  ,   67.2  ,  -94.4  ,   39.9  ,...
2025-04-27 05:08:39.292915 test begin: paddle.sum(Tensor([44, 92416],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([44, 92416],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 44 / 44 (100%)
Max absolute difference among violations: 206.5
Max relative difference among violations: 56.38
ACTUAL: array([  6.973,  -4.21 ,  -4.4  ,  -2.773, -21.61 ,  -8.664,  -2.307,
11.09 , -26.23 , -15.34 , -18.5  ,  -7.97 ,  10.39 , -14.445,
10.836,  -7.51 ,  -7.12 ,   4.176,  -5.17 ,  -1.471,   1.254,...
DESIRED: array([ -19.94  ,   20.83  , -130.8   ,  101.4   ,   39.12  ,   47.56  ,
26.44  ,   -7.332 ,    8.58  ,  165.    , -153.    ,  -25.33  ,
67.44  ,   24.98  ,  -67.4   ,  -43.1   ,  183.4   ,   65.9   ,...
2025-04-27 05:08:40.031590 test begin: paddle.sum(Tensor([44, 94848],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([44, 94848],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 44 / 44 (100%)
Max absolute difference among violations: 199.5
Max relative difference among violations: 4.324
ACTUAL: array([ 12.516 ,   2.75  ,  23.77  ,  10.69  ,   8.72  , -20.95  ,
7.004 ,  14.84  ,  17.36  ,  15.31  , -13.55  ,  -3.174 ,
-14.39  ,   9.875 ,  -5.246 ,   9.43  ,  -2.75  ,  10.79  ,...
DESIRED: array([ -70.5  ,   88.94 ,   -7.15 ,   56.38 ,   85.2  , -137.4  ,
37.9  ,   39.94 ,   55.53 ,   14.   , -113.06 ,  132.4  ,
28.83 ,  -44.7  , -188.1  ,   61.97 ,   88.8  ,   32.22 ,...
2025-04-27 05:08:40.686916 test begin: paddle.sum(Tensor([44, 97088],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([44, 97088],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 44 / 44 (100%)
Max absolute difference among violations: 201.5
Max relative difference among violations: 73.1
ACTUAL: array([  4.723 , -11.15  ,   9.81  ,   8.305 , -12.91  ,  -7.3   ,
-10.25  ,   9.336 ,  -3.46  , -11.336 ,  21.77  ,  -2.234 ,
8.28  ,   4.465 ,  17.78  , -16.69  ,   3.55  ,   7.375 ,...
DESIRED: array([ 5.6594e+01,  4.4969e+01,  1.4500e+01,  8.8938e+01, -1.2331e+02,
-1.2950e+02, -5.4188e+01,  1.2106e+02,  1.9297e+01,  1.5710e-01,
1.4325e+02,  8.6719e+00,  4.5000e+01,  1.2619e+02, -4.8312e+01,...
2025-04-27 05:08:41.453211 test begin: paddle.sum(Tensor([44, 99712],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([44, 99712],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 44 / 44 (100%)
Max absolute difference among violations: 210.4
Max relative difference among violations: 7.098
ACTUAL: array([  4.83  , -12.71  , -23.33  , -18.06  ,   3.078 ,   3.023 ,
-18.69  ,   3.88  ,   8.44  ,  16.42  ,   9.69  , -20.75  ,
1.752 ,  14.56  ,  21.11  ,   2.223 , -12.63  ,  -1.583 ,...
DESIRED: array([-132.1  ,   14.34 ,  -53.78 ,    2.963,  -62.16 ,  -54.8  ,
-66.7  ,   61.34 ,  -68.2  ,   40.66 ,   94.25 , -189.6  ,
3.71 ,   49.16 ,  194.5  ,   23.9  ,   76.1  ,   -2.283,...
2025-04-27 05:08:54.376218 test begin: paddle.sum(Tensor([48, 102144],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([48, 102144],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 48 / 48 (100%)
Max absolute difference among violations: 297.
Max relative difference among violations: 8.52
ACTUAL: array([-15.6   , -10.38  , -13.914 ,   9.72  ,  18.31  ,   9.32  ,
-3.514 ,   2.09  ,  20.17  , -15.55  ,  -0.5884,   5.113 ,
-0.2908,  -9.16  , -10.78  ,   1.59  , -14.92  ,  19.53  ,...
DESIRED: array([-143.2  ,  -52.56 ,   58.28 ,    8.46 ,   76.75 ,   -9.05 ,
130.4  ,   19.98 , -117.7  , -214.6  ,   45.5  ,   41.44 ,
-10.11 ,   96.06 , -111.25 ,  -28.2  , -159.9  ,  160.6  ,...
2025-04-27 05:08:55.472807 test begin: paddle.sum(Tensor([48, 104832],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([48, 104832],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 48 / 48 (100%)
Max absolute difference among violations: 222.9
Max relative difference among violations: 3.373
ACTUAL: array([  5.05  ,   6.484 , -11.66  ,   4.22  ,  16.3   ,   7.54  ,
15.9   ,   6.37  ,  11.664 ,  -2.39  ,   1.07  ,  10.39  ,
22.84  ,  -9.72  ,  10.445 ,   2.97  ,  -7.27  ,   6.008 ,...
DESIRED: array([-150.4  ,   -9.26 ,  116.6  ,  -42.25 ,  -17.97 ,  134.4  ,
-52.44 , -193.2  ,   50.2  ,   66.6  ,  138.6  ,  117.94 ,
147.2  ,  136.   ,   98.5  ,    0.679,   15.5  ,  -21.67 ,...
2025-04-27 05:08:56.606645 test begin: paddle.sum(Tensor([48, 112896],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([48, 112896],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 48 / 48 (100%)
Max absolute difference among violations: 262.
Max relative difference among violations: 3.748
ACTUAL: array([ 28.11  ,  -1.275 ,  12.76  ,  13.45  ,  14.    ,  -8.836 ,
2.188 ,  -8.766 ,  18.4   ,   1.657 ,   3.021 ,  -4.64  ,
-6.223 ,  -1.055 , -18.52  ,   6.312 ,  20.98  , -18.12  ,...
DESIRED: array([  54.25  ,  153.    ,   74.5   ,  -78.7   , -100.44  ,  167.5   ,
-22.53  , -113.75  ,  275.5   ,   -0.6533,  152.1   ,  -75.06  ,
130.5   ,   63.16  , -143.8   ,  -20.38  ,  -67.3   ,  -69.06  ,...
2025-04-27 05:09:15.925197 test begin: paddle.sum(Tensor([48, 54400],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([48, 54400],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 48 / 48 (100%)
Max absolute difference among violations: 184.6
Max relative difference among violations: 6.96
ACTUAL: array([ 28.62  ,  22.17  ,   3.336 , -15.86  ,   4.344 ,  -8.76  ,
9.016 ,  -7.4   ,   0.7974,  22.08  , -18.58  , -15.01  ,
12.33  ,  14.305 ,   5.332 ,  19.56  ,  11.875 ,  12.01  ,...
DESIRED: array([  93.75 ,  -11.54 ,  -70.2  ,  -42.03 ,   27.6  ,  -18.3  ,
-1.584,   17.3  ,    8.87 , -162.5  , -119.06 ,   17.67 ,
69.4  ,   45.12 , -177.4  ,   -3.281,   22.45 ,   22.05 ,...
2025-04-27 05:09:16.461949 test begin: paddle.sum(Tensor([48, 57600],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([48, 57600],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 48 / 48 (100%)
Max absolute difference among violations: 140.9
Max relative difference among violations: 3.848
ACTUAL: array([-10.97  ,   0.6694,   3.297 ,   9.38  ,  17.02  , -12.484 ,
-12.375 ,  17.97  ,  12.49  ,   0.4214,  -7.555 ,   1.431 ,
6.496 ,  -4.23  ,  14.586 ,  15.805 ,  -4.914 ,  -2.496 ,...
DESIRED: array([  54.47 ,   42.8  ,  144.1  ,  147.   ,  -44.88 ,  -59.62 ,
-81.8  ,   17.12 ,   60.78 ,   46.72 ,   23.97 ,  -63.1  ,
14.63 ,   27.52 ,   49.44 ,  -57.06 ,    6.45 , -125.06 ,...
2025-04-27 05:09:17.011250 test begin: paddle.sum(Tensor([48, 60800],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([48, 60800],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 48 / 48 (100%)
Max absolute difference among violations: 162.1
Max relative difference among violations: 24.39
ACTUAL: array([  9.59  ,  13.83  ,  11.69  , -10.46  ,  18.16  ,  13.766 ,
27.34  ,  -0.2214,   0.3967,  -7.543 ,  18.2   ,   5.64  ,
-5.418 ,  11.69  ,  -8.086 ,  18.28  ,   5.555 ,  14.305 ,...
DESIRED: array([ -28.12 ,  -36.03 ,   38.28 ,  -21.22 ,  -53.3  ,   35.12 ,
5.99 ,   42.75 ,  105.   ,   44.4  ,  -18.08 ,   64.9  ,
108.8  ,   21.16 , -105.2  ,   67.44 ,   86.6  ,  130.9  ,...
2025-04-27 05:09:17.566469 test begin: paddle.sum(Tensor([48, 62400],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([48, 62400],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 48 / 48 (100%)
Max absolute difference among violations: 172.9
Max relative difference among violations: 2.48
ACTUAL: array([  5.69  , -16.58  ,   7.31  ,   4.5   ,  -6.477 ,  -8.63  ,
0.7603,   3.098 ,  -4.26  ,   5.098 ,  16.81  ,  12.26  ,
-3.842 ,  -9.51  ,   4.09  ,  -6.37  ,  -7.69  ,  -8.68  ,...
DESIRED: array([  53.62 ,  113.9  ,   44.3  , -160.8  ,   31.73 ,    5.832,
131.4  ,  -31.56 ,   60.2  ,  -30.2  ,  -93.5  ,  -70.94 ,
-20.14 ,  -67.6  ,   36.88 ,   53.5  ,  -24.36 ,   82.44 ,...
2025-04-27 05:09:18.306848 test begin: paddle.sum(Tensor([48, 63936],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([48, 63936],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 48 / 48 (100%)
Max absolute difference among violations: 164.6
Max relative difference among violations: 7.707
ACTUAL: array([ 23.89  ,   9.76  , -15.664 , -17.14  , -17.8   , -14.08  ,
15.87  ,   3.996 , -13.46  ,   3.75  ,  -5.695 ,   5.52  ,
12.086 ,   6.754 ,  -7.81  ,  -7.746 ,  11.41  ,  21.75  ,...
DESIRED: array([ 144.   ,   11.695,  -70.7  ,  147.5  ,  -27.77 ,   95.3  ,
5.46 ,  108.1  ,  -51.7  , -102.6  ,   21.02 ,   23.92 ,
41.84 ,  -74.25 ,  -53.66 ,    8.36 ,    9.23 ,    6.656,...
2025-04-27 05:09:18.987132 test begin: paddle.sum(Tensor([48, 64000],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([48, 64000],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 48 / 48 (100%)
Max absolute difference among violations: 164.1
Max relative difference among violations: 17.56
ACTUAL: array([ 14.24 ,  -1.627, -15.836,   4.56 ,  -9.31 ,   0.71 ,   3.576,
3.943,   7.684,   7.336,  25.5  , -18.55 ,  -1.358,  14.22 ,
-8.766,   9.14 , -16.25 ,   9.664,   4.63 ,   2.719,  -1.581,...
DESIRED: array([  77.9   ,   37.56  , -116.    ,    9.59  ,   19.48  ,  -18.45  ,
-20.62  ,   34.    , -104.3   ,   41.7   ,  172.2   ,  -25.61  ,
116.9   ,   12.98  ,  -38.06  , -155.    ,  129.6   ,   54.3   ,...
2025-04-27 05:09:19.681673 test begin: paddle.sum(Tensor([48, 65664],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([48, 65664],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 48 / 48 (100%)
Max absolute difference among violations: 182.5
Max relative difference among violations: 23.6
ACTUAL: array([ 15.03  ,  -7.69  ,   6.902 ,  -4.617 ,  12.29  ,   9.5   ,
-6.453 ,  11.94  , -11.44  ,  -5.363 , -18.33  ,  -3.25  ,
-5.336 ,  16.03  ,  -7.957 ,  15.53  ,   5.375 ,  -4.03  ,...
DESIRED: array([  30.73 , -127.7  ,   44.28 ,  -32.62 , -131.1  ,  121.25 ,
-72.44 , -119.7  ,   35.3  , -104.25 ,   24.39 ,  -13.836,
-3.516,  -19.06 , -114.1  ,  -38.16 ,  -12.37 ,  -30.94 ,...
2025-04-27 05:09:20.338664 test begin: paddle.sum(Tensor([48, 67200],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([48, 67200],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 48 / 48 (100%)
Max absolute difference among violations: 182.5
Max relative difference among violations: 19.72
ACTUAL: array([-17.39  , -10.68  ,  -4.85  ,   6.902 ,  15.914 ,   5.99  ,
2.715 ,   9.12  , -11.49  , -18.6   ,  13.02  ,  13.83  ,
5.766 ,  -2.545 ,  -0.1292,   2.904 ,   0.6436,  20.39  ,...
DESIRED: array([ -10.24  , -121.7   ,  -70.44  ,   41.44  ,  120.9   ,   76.8   ,
-89.4   , -120.9   ,  -17.38  ,  -84.    ,  124.5   ,  -40.47  ,
120.75  ,   77.44  ,    6.184 ,   -7.797 ,   88.4   ,  189.4   ,...
2025-04-27 05:09:21.120862 test begin: paddle.sum(Tensor([48, 68096],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([48, 68096],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 48 / 48 (100%)
Max absolute difference among violations: 136.
Max relative difference among violations: 12.05
ACTUAL: array([ -9.305  ,  17.39   ,   9.46   ,   4.094  , -14.734  , -15.97   ,
6.855  ,   4.16   ,   8.39   ,  -7.37   ,  -2.006  ,  -3.145  ,
-5.793  ,  -2.385  ,  -3.16   ,  -9.23   ,  -6.69   ,  -1.266  ,...
DESIRED: array([-145.2  , -113.75 ,   40.38 ,   -6.824,  -61.22 ,  -31.98 ,
-83.4  ,  -26.67 ,   78.06 ,    3.166,  -29.25 ,  -28.66 ,
-10.09 ,  -98.75 ,  -67.75 ,   45.56 ,  -11.69 ,   40.16 ,...
2025-04-27 05:09:21.960877 test begin: paddle.sum(Tensor([48, 69888],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([48, 69888],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 48 / 48 (100%)
Max absolute difference among violations: 173.1
Max relative difference among violations: 12.56
ACTUAL: array([ 1.0344e+01, -7.2021e-01,  3.6309e+00,  1.0195e+01,  1.7547e+01,
5.2188e+00,  4.2930e+00,  8.3438e+00,  1.7719e+01,  1.4359e+01,
6.7852e+00, -1.3453e+01,  2.7910e+00, -6.5117e+00,  1.2367e+01,...
DESIRED: array([  44.4   ,   22.38  ,   52.28  ,   89.4   ,   70.6   ,   22.14  ,
148.1   ,   43.38  ,   20.44  ,  -87.25  ,  113.2   ,   -0.9917,
76.44  ,  -31.69  ,   89.7   ,  -69.7   , -164.8   ,   58.    ,...
2025-04-27 05:09:22.608330 test begin: paddle.sum(Tensor([48, 70528],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([48, 70528],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 48 / 48 (100%)
Max absolute difference among violations: 187.1
Max relative difference among violations: 2.127
ACTUAL: array([-11.8   ,   0.1826,   1.44  ,  -4.152 , -15.44  , -14.29  ,
-4.566 ,  -3.744 ,   6.605 ,   9.05  ,   0.6274,  -1.499 ,
-34.1   , -13.21  ,   6.348 ,  -8.4   ,   3.697 ,   8.266 ,...
DESIRED: array([ -67.94 ,  -75.56 , -111.5  ,  -14.68 ,  -45.2  ,  -56.34 ,
-26.62 ,   33.25 ,    3.549,   54.16 ,   37.66 ,  -47.22 ,
-63.06 ,  173.9  ,   63.75 , -136.2  ,  -61.47 ,  123.6  ,...
2025-04-27 05:09:23.829636 test begin: paddle.sum(Tensor([48, 73984],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([48, 73984],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 48 / 48 (100%)
Max absolute difference among violations: 195.9
Max relative difference among violations: 3.285
ACTUAL: array([  7.164 ,   9.5   ,   5.047 , -11.14  ,  -6.28  ,   6.992 ,
1.649 ,  -7.676 , -16.8   ,  -0.9434,  -2.303 ,   9.91  ,
-5.266 ,  19.83  ,  -4.86  ,  -6.51  , -11.51  ,   2.182 ,...
DESIRED: array([-111.06 ,  -10.01 ,  -62.6  ,   33.12 ,   32.44 ,   42.9  ,
-5.656,    3.662,  -50.03 ,   35.9  ,  -63.3  ,  107.   ,
64.06 ,   18.84 ,  -12.49 ,  -41.62 ,   47.66 ,   92.94 ,...
2025-04-27 05:09:24.866759 test begin: paddle.sum(Tensor([48, 75392],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([48, 75392],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 48 / 48 (100%)
Max absolute difference among violations: 199.2
Max relative difference among violations: 1.755
ACTUAL: array([-21.69 ,   4.195,   5.52 ,  -9.04 , -13.45 , -21.77 , -15.11 ,
18.02 ,   9.45 ,   4.24 ,   5.59 ,  -2.66 ,   4.316,   4.277,
3.006,  -4.08 ,  10.98 ,   5.984,   5.953,   5.21 , -16.69 ,...
DESIRED: array([  44.16 ,    8.086,   44.03 ,  118.56 ,   17.81 , -150.9  ,
-57.28 ,  129.6  ,   84.25 ,   87.8  , -112.   ,  -40.62 ,
26.62 ,   -8.77 ,  -22.23 ,   34.62 ,   36.2  ,  205.2  ,...
2025-04-27 05:09:25.746653 test begin: paddle.sum(Tensor([48, 76160],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([48, 76160],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 48 / 48 (100%)
Max absolute difference among violations: 144.9
Max relative difference among violations: 5.598
ACTUAL: array([ 10.64 , -28.9  ,  -0.897,   8.95 ,  15.23 ,  -3.246,   5.84 ,
10.74 ,  13.51 ,   1.908,   8.82 , -15.6  ,  -6.6  ,   8.94 ,
-5.82 , -17.05 , -20.56 ,  18.66 ,  -6.8  ,   6.82 , -12.01 ,...
DESIRED: array([ 101.75  ,  -53.06  ,   74.3   ,  115.    ,   49.62  ,  -14.11  ,
5.473 ,   43.38  ,  127.56  ,   63.4   ,   44.9   ,  -50.8   ,
38.03  ,    1.3545,   12.945 ,  -40.5   ,   -7.203 ,  101.75  ,...
2025-04-27 05:09:27.055451 test begin: paddle.sum(Tensor([48, 80256],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([48, 80256],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 48 / 48 (100%)
Max absolute difference among violations: 227.8
Max relative difference among violations: 20.77
ACTUAL: array([-13.836 , -10.12  ,  -4.48  ,  -2.498 , -12.93  ,   3.857 ,
5.844 , -14.555 ,   3.672 ,  21.81  ,   4.324 , -14.195 ,
-5.78  ,  17.11  ,  -7.41  ,  13.84  ,   7.812 ,   4.883 ,...
DESIRED: array([  -0.6357,   47.2   ,   68.75  ,  147.2   ,   61.53  ,   54.16  ,
167.5   ,  -58.66  ,   94.9   ,  211.2   ,  -31.84  ,  -18.08  ,
96.5   ,  133.5   ,  -60.53  ,    1.199 ,  -21.67  ,  -43.47  ,...
2025-04-27 05:09:27.720227 test begin: paddle.sum(Tensor([48, 80512],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([48, 80512],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 48 / 48 (100%)
Max absolute difference among violations: 181.1
Max relative difference among violations: 2.623
ACTUAL: array([-24.5   ,   5.438 ,  -6.023 ,  -6.953 ,  14.164 ,   2.672 ,
5.93  , -16.48  ,   3.293 , -18.3   ,  -5.29  ,   7.617 ,
-15.69  ,  -0.5728,   0.2358,   2.354 ,   0.2952,   0.902 ,...
DESIRED: array([ -58.16,   97.25,   45.78, -100.1 ,   45.72,   14.96, -142.2 ,
-197.6 ,  -55.25, -130.1 ,   29.33,   84.3 ,  -62.9 ,   43.3 ,
95.44,  -49.75,  151.1 ,   43.22,  115.6 , -128.8 ,  -57.62,...
2025-04-27 05:09:28.665833 test begin: paddle.sum(Tensor([48, 82688],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([48, 82688],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 48 / 48 (100%)
Max absolute difference among violations: 188.6
Max relative difference among violations: 2.354
ACTUAL: array([ -3.78   ,  14.08   ,   0.8037 ,   7.258  ,   0.09326,   5.785  ,
-2.393  ,   6.21   ,   7.613  ,  -8.22   ,  12.72   ,  -5.934  ,
0.7676 ,  -4.805  ,   0.498  ,   4.66   ,  -7.94   ,   6.31   ,...
DESIRED: array([   5.836,   54.16 ,   14.61 ,   14.805,  -54.03 ,   -9.28 ,
-23.47 , -156.9  ,   11.45 ,   15.93 , -102.75 ,   10.85 ,
72.2  ,   93.9  ,   21.58 ,   50.72 ,  -86.06 ,  -15.26 ,...
2025-04-27 05:09:29.440027 test begin: paddle.sum(Tensor([48, 83328],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([48, 83328],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 48 / 48 (100%)
Max absolute difference among violations: 192.1
Max relative difference among violations: 6.297
ACTUAL: array([-24.86  , -11.96  ,   4.355 , -12.47  ,  10.06  ,  11.51  ,
7.695 , -25.34  , -16.89  , -28.02  ,  -0.0598,   2.73  ,
-21.66  ,   9.78  ,   3.79  ,   5.383 ,  -2.451 ,   7.508 ,...
DESIRED: array([ -66.4  , -188.8  ,   -9.555, -130.2  ,   18.58 ,   -2.562,
131.5  ,   74.2  , -155.6  ,   -7.547,   68.06 ,  -92.2  ,
-103.94 ,  100.5  ,  -73.44 ,  -91.1  ,  129.4  ,   82.44 ,...
2025-04-27 05:09:30.325006 test begin: paddle.sum(Tensor([48, 84864],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([48, 84864],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 47 / 48 (97.9%)
Max absolute difference among violations: 225.2
Max relative difference among violations: 3.098
ACTUAL: array([ -3.006  ,   2.38   ,   6.87   ,   0.02905,  11.58   , -22.7    ,
-14.08   ,   9.38   ,  -4.914  ,   0.9917 ,  -1.473  , -15.516  ,
-14.46   ,  12.94   ,  -5.785  ,  -2.145  ,  -0.5654 ,  11.234  ,...
DESIRED: array([-152.4  ,  106.1  ,   41.6  ,   96.   ,   70.8  ,   -5.54 ,
-103.25 ,  -78.7  ,   93.1  ,  -89.94 ,   19.73 ,   84.7  ,
13.17 ,    4.848,   -9.93 ,   29.69 ,  -44.97 ,  153.2  ,...
2025-04-27 05:09:31.293923 test begin: paddle.sum(Tensor([48, 85120],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([48, 85120],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 48 / 48 (100%)
Max absolute difference among violations: 147.8
Max relative difference among violations: 5.355
ACTUAL: array([ -2.19  ,  11.164 , -10.734 ,  -0.3354,  21.89  , -24.75  ,
1.549 ,  -1.343 ,  -3.783 , -12.7   ,  24.75  ,  14.836 ,
10.1   , -15.07  ,  -1.061 , -21.97  ,  17.42  ,   1.718 ,...
DESIRED: array([ -56.34 ,  100.   ,   33.2  ,  -17.7  ,   64.75 ,   -3.895,
71.7  ,  -58.56 ,  -93.4  ,   23.11 ,   40.03 , -126.4  ,
5.9  ,    9.58 ,  -66.   ,   47.44 ,   -4.77 ,    8.38 ,...
2025-04-27 05:09:31.996817 test begin: paddle.sum(Tensor([48, 86016],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([48, 86016],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 48 / 48 (100%)
Max absolute difference among violations: 188.8
Max relative difference among violations: 11.39
ACTUAL: array([  4.074 ,   5.184 ,   3.023 ,  10.87  ,   2.83  ,  10.7   ,
-10.445 ,   6.355 ,  -5.938 , -15.81  ,  -6.254 ,  -0.756 ,
3.83  ,   0.2191, -18.34  ,   0.1265,  10.8   ,  -4.426 ,...
DESIRED: array([ 129.5  ,  -15.17 ,   97.   ,  -25.55 ,  -18.12 ,  -71.06 ,
-87.75 ,   -0.612,  136.2  , -177.6  ,   45.7  ,  -79.94 ,
-49.47 ,   35.2  ,   -7.49 ,  -57.94 ,   84.9  ,   -2.383,...
2025-04-27 05:09:32.952351 test begin: paddle.sum(Tensor([48, 87040],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([48, 87040],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 48 / 48 (100%)
Max absolute difference among violations: 271.2
Max relative difference among violations: 3.434
ACTUAL: array([ 17.92   , -20.58   , -14.98   ,  17.22   ,  -1.188  ,   0.4614 ,
8.6    , -10.17   ,  -2.93   ,  -3.145  , -11.625  ,  12.195  ,
-1.943  ,   1.8955 ,  -9.58   ,  -4.234  ,  -4.695  ,  -9.8    ,...
DESIRED: array([  33.78 ,  -77.   ,   30.38 ,  144.8  ,  111.6  ,   36.62 ,
-43.34 ,    4.18 ,  -28.53 , -155.9  ,  -45.   ,  -25.75 ,
-93.4  ,   37.72 ,   20.98 , -123.44 , -138.8  ,  -90.   ,...
2025-04-27 05:09:33.634285 test begin: paddle.sum(Tensor([48, 87552],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([48, 87552],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 48 / 48 (100%)
Max absolute difference among violations: 179.6
Max relative difference among violations: 2.928
ACTUAL: array([  4.832 ,   7.793 ,   4.68  ,  -0.1455,  12.77  ,  14.34  ,
-5.867 ,  13.87  , -11.34  ,  -0.2566, -12.305 ,  10.93  ,
-4.484 ,  13.78  ,   2.34  , -10.04  ,  18.7   ,  -7.547 ,...
DESIRED: array([ 107.5  ,   -4.645,  -28.7  ,   74.9  ,  108.1  ,  -47.72 ,
-23.08 ,   52.72 ,   21.84 ,   45.72 ,  -15.14 ,  188.   ,
-14.805,  111.4  ,  -36.2  ,  -34.1  ,   29.38 ,  -56.97 ,...
2025-04-27 05:09:34.575982 test begin: paddle.sum(Tensor([48, 88704],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([48, 88704],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 48 / 48 (100%)
Max absolute difference among violations: 162.2
Max relative difference among violations: 13.445
ACTUAL: array([  1.897  ,  -8.3    , -22.1    ,  -5.344  , -17.02   ,  16.81   ,
-16.06   ,  16.53   ,   8.56   ,   2.146  ,  14.96   ,  11.77   ,
9.73   , -11.61   ,   1.641  ,   6.633  ,   1.193  ,  -0.05933,...
DESIRED: array([  78.25 , -131.9  ,  -58.75 ,   19.03 ,    1.368,   10.27 ,
-10.78 ,  -62.84 ,   55.94 ,  111.8  ,   -6.086,   31.17 ,
-10.82 , -104.   ,  101.2  ,   97.8  ,   26.33 ,   23.03 ,...
2025-04-27 05:09:35.285794 test begin: paddle.sum(Tensor([48, 89216],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([48, 89216],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 48 / 48 (100%)
Max absolute difference among violations: 280.2
Max relative difference among violations: 44.53
ACTUAL: array([ 10.08  ,  10.    ,  10.    ,  10.43  ,   5.76  ,   5.098 ,
8.414 , -15.53  , -12.96  , -10.19  ,  12.71  ,   0.557 ,
-10.62  ,   7.293 ,  13.71  ,  -8.97  ,   2.377 ,   9.06  ,...
DESIRED: array([-2.3157e-01,  9.2875e+01, -3.9570e+00, -1.1525e+02, -3.8156e+01,
1.3688e+02,  4.0938e+01, -9.7188e+01, -5.2656e+00,  3.7719e+01,
-1.8000e+01, -8.9000e+01, -1.0100e+02,  7.9875e+01,  9.2562e+01,...
2025-04-27 05:09:35.991840 test begin: paddle.sum(Tensor([48, 89984],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([48, 89984],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 48 / 48 (100%)
Max absolute difference among violations: 240.5
Max relative difference among violations: 21.23
ACTUAL: array([  7.38  ,   6.64  ,  -9.56  ,   0.0907,  -0.4688,  23.03  ,
7.965 ,  -5.65  ,   9.86  ,  -6.836 ,  -2.795 ,  -3.633 ,
1.386 ,  -0.649 ,   5.707 ,  -0.989 , -18.42  , -11.45  ,...
DESIRED: array([   2.938,  -93.25 ,   51.28 ,   11.25 ,   49.12 ,  -44.9  ,
-43.62 ,   99.6  ,   -0.487,   26.81 ,   98.56 ,   26.44 ,
100.75 ,  -90.9  ,   69.94 ,   12.766,  -61.72 ,  -65.6  ,...
2025-04-27 05:09:37.013594 test begin: paddle.sum(Tensor([48, 91392],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([48, 91392],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 48 / 48 (100%)
Max absolute difference among violations: 311.5
Max relative difference among violations: 6.754
ACTUAL: array([ 11.09  ,  -5.51  , -11.9   ,   3.295 , -11.69  ,   3.352 ,
9.99  ,  -4.152 ,  -1.95  ,   3.809 ,   5.15  , -11.484 ,
7.887 ,   1.461 ,  -2.072 , -13.9   ,  -7.934 ,  -9.59  ,...
DESIRED: array([  -1.928,  -96.8  ,   33.16 ,   37.22 ,   95.7  , -308.2  ,
-122.25 ,  -13.31 ,   26.19 ,   38.56 ,  -34.75 ,   99.8  ,
-67.56 ,  -83.2  ,   42.1  , -139.2  ,   27.55 ,  -49.47 ,...
2025-04-27 05:09:37.756339 test begin: paddle.sum(Tensor([48, 91840],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([48, 91840],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 48 / 48 (100%)
Max absolute difference among violations: 190.
Max relative difference among violations: 12.61
ACTUAL: array([  3.43  ,  -1.278 ,  -3.686 ,   9.51  ,  14.89  ,  -5.96  ,
16.75  ,  -0.9067, -15.37  , -10.62  ,   0.1099,  -9.81  ,
4.246 ,  -1.26  ,  -8.18  ,  -9.54  ,   2.37  ,  -5.613 ,...
DESIRED: array([  21.86 ,  146.5  ,  -48.4  ,    4.62 ,  100.56 ,  -60.97 ,
40.16 ,   -3.164,   48.56 ,  -10.12 ,   22.56 ,  -84.   ,
104.8  ,  -96.56 ,   -5.945, -101.44 ,   62.94 ,  -95.9  ,...
2025-04-27 05:09:39.478278 test begin: paddle.sum(Tensor([48, 92416],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([48, 92416],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 48 / 48 (100%)
Max absolute difference among violations: 223.1
Max relative difference among violations: 6.664
ACTUAL: array([ 21.34  ,   6.875 ,  12.94  ,   5.816 ,  -3.287 ,  -2.398 ,
12.03  ,  -0.5107,   8.71  , -10.22  ,  12.1   ,  11.33  ,
-3.734 ,   4.492 ,  -0.83  ,  -1.722 , -24.6   ,   6.816 ,...
DESIRED: array([ 101.3  , -134.8  ,   42.88 ,   93.25 ,   -9.74 ,   86.94 ,
-17.23 ,   67.94 ,   -4.26 ,   24.45 ,   63.1  ,  113.3  ,
-29.94 ,  118.2  ,  -24.55 ,  -54.12 ,  -76.25 ,  -51.03 ,...
2025-04-27 05:09:41.644454 test begin: paddle.sum(Tensor([48, 94080],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([48, 94080],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 48 / 48 (100%)
Max absolute difference among violations: 184.8
Max relative difference among violations: 2.906
ACTUAL: array([ 12.96  ,   4.156 ,  -2.996 , -24.33  ,  -5.684 ,   7.46  ,
1.7   ,  11.66  ,  -4.414 , -14.06  ,  -6.9   ,  -3.088 ,
-9.73  ,   9.64  ,  11.766 ,  11.31  ,   7.062 ,  -7.74  ,...
DESIRED: array([  39.38 ,  -62.62 , -121.   ,   12.75 ,   48.47 ,  101.8  ,
34.12 , -104.44 ,   30.14 , -198.8  ,   -4.55 , -172.2  ,
19.22 ,  123.7  ,  -82.3  ,   87.9  ,  177.9  ,   61.47 ,...
2025-04-27 05:09:43.222955 test begin: paddle.sum(Tensor([48, 97088],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([48, 97088],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 48 / 48 (100%)
Max absolute difference among violations: 203.5
Max relative difference among violations: 2.168
ACTUAL: array([  0.712  ,   0.8896 ,   3.256  ,   8.71   ,  14.73   ,  -5.098  ,
-4.434  ,  17.75   , -11.61   , -11.78   ,   9.44   ,  10.47   ,
1.718  , -21.94   ,   0.05273,  -6.65   ,   7.242  ,  12.1    ,...
DESIRED: array([  -9.97 ,  -66.6  ,   63.22 ,   55.12 ,  -97.4  , -145.6  ,
-97.75 ,   20.34 ,  -67.9  ,  -63.72 ,  -51.94 ,  -66.5  ,
-104.5  , -205.2  ,  -95.7  ,  -45.34 ,  210.8  ,   43.25 ,...
2025-04-27 05:09:44.021082 test begin: paddle.sum(Tensor([48, 97280],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([48, 97280],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 48 / 48 (100%)
Max absolute difference among violations: 263.8
Max relative difference among violations: 5.137
ACTUAL: array([ 9.9922e+00, -3.2227e+00,  1.0484e+01, -1.6934e+00,  1.7234e+01,
-4.8516e+00, -2.1328e+01, -1.5766e+01, -1.4273e+01, -1.3086e+01,
5.6016e+00, -2.6538e-01, -1.8838e+00,  1.4078e+01, -5.7773e+00,...
DESIRED: array([  91.75  ,   88.5   , -163.9   , -152.6   ,  179.9   ,   15.6   ,
-141.    ,  -36.78  ,  -41.34  ,  -48.3   , -128.9   ,    1.477 ,
20.39  ,  151.4   ,    8.81  , -123.    ,  -21.2   , -116.25  ,...
2025-04-27 05:09:44.977560 test begin: paddle.sum(Tensor([48, 99456],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([48, 99456],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 48 / 48 (100%)
Max absolute difference among violations: 261.5
Max relative difference among violations: 31.08
ACTUAL: array([  2.559 ,   5.336 ,   6.566 ,  -5.777 ,  -0.1611,  -8.51  ,
14.24  ,  -7.914 ,  -5.574 ,   4.05  ,  -4.168 ,  -3.014 ,
-13.1   ,   4.81  ,  -6.48  ,  -0.179 ,   4.266 ,   0.3105,...
DESIRED: array([ -97.2   ,  158.6   ,   76.3   ,  -97.1   ,    3.227 , -193.4   ,
86.44  , -158.1   ,   22.66  ,   21.06  , -131.2   ,  -69.7   ,
248.4   ,  -11.266 ,  -44.56  ,  113.75  ,  -14.74  ,  113.56  ,...
2025-04-27 05:09:45.749016 test begin: paddle.sum(Tensor([48, 99712],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([48, 99712],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 48 / 48 (100%)
Max absolute difference among violations: 238.6
Max relative difference among violations: 8.414
ACTUAL: array([ -9.33 ,  -0.599,  19.1  , -12.54 ,   8.21 ,  -1.209,   3.748,
6.48 ,  24.64 , -11.42 ,  -7.785, -18.28 , -10.15 ,  11.27 ,
3.662,  16.8  , -19.83 ,   8.17 ,  35.94 ,  -2.541,   3.281,...
DESIRED: array([ 100.4   , -102.4   , -123.9   ,   -2.133 ,   15.51  ,   17.52  ,
62.    ,   17.44  ,  -26.84  ,  155.    ,   80.2   ,  -13.99  ,
179.2   ,    1.198 ,  -17.39  ,  151.5   ,  -37.47  ,  161.5   ,...
2025-04-27 05:09:57.063254 test begin: paddle.sum(Tensor([500032],"float16"), )
[accuracy error] paddle.sum(Tensor([500032],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 28.62
Max relative difference among violations: 0.3713
ACTUAL: array(-48.44, dtype=float16)
DESIRED: array(-77.06, dtype=float16)
2025-04-27 05:10:00.783565 test begin: paddle.sum(Tensor([512, 1000],"float16"), axis=-1, )
[accuracy error] paddle.sum(Tensor([512, 1000],"float16"), axis=-1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 500 / 512 (97.7%)
Max absolute difference among violations: 4.83
Max relative difference among violations: 80.2
ACTUAL: array([-9.6172e+00, -1.9033e+00,  2.1094e+00, -1.3641e+01, -4.1602e+00,
-1.5273e+01,  1.0518e+00,  2.4219e+00,  5.4023e+00, -1.7080e+00,
1.2617e+01,  6.7461e+00,  7.2852e+00, -1.6156e+01,  8.9141e+00,...
DESIRED: array([-1.2414e+01, -6.3477e-01,  1.7051e+00, -1.5656e+01, -5.9414e+00,
-1.7266e+01,  1.2402e+00,  2.3516e+00,  5.0312e+00, -1.8994e+00,
1.5203e+01,  9.1328e+00,  9.1406e+00, -1.8797e+01,  1.1016e+01,...
2025-04-27 05:10:03.926775 test begin: paddle.sum(Tensor([51511296],"float16"), )
[accuracy error] paddle.sum(Tensor([51511296],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 312.
Max relative difference among violations: 0.1049
ACTUAL: array(2662., dtype=float16)
DESIRED: array(2974., dtype=float16)
2025-04-27 05:10:07.115500 test begin: paddle.sum(Tensor([52, 102144],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([52, 102144],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 52 / 52 (100%)
Max absolute difference among violations: 215.5
Max relative difference among violations: 1.581
ACTUAL: array([  2.176 ,  17.45  ,  13.766 , -16.38  , -23.36  ,  13.266 ,
4.695 ,  -1.084 ,  13.72  , -19.12  ,  -0.7583,   2.027 ,
-12.79  ,   7.125 ,   1.154 ,  -8.18  ,   0.641 ,  10.84  ,...
DESIRED: array([ -44.4  ,   56.72 ,   16.31 , -179.   ,  143.9  ,   60.8  ,
26.92 ,   35.8  , -144.4  , -113.6  ,  -89.9  ,  114.6  ,
40.88 ,  -51.03 ,   12.836, -102.1  ,  -78.2  ,  226.4  ,...
2025-04-27 05:10:07.848567 test begin: paddle.sum(Tensor([52, 102400],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([52, 102400],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 52 / 52 (100%)
Max absolute difference among violations: 206.6
Max relative difference among violations: 5.98
ACTUAL: array([ 6.6523e+00,  7.5898e+00,  6.3906e+00, -2.6934e+00, -3.5879e+00,
-6.8516e+00,  5.2295e-01, -1.4625e+01,  5.3438e+00,  2.3688e+01,
7.7461e+00, -9.5234e+00,  1.5703e+00, -8.6172e+00,  1.6125e+01,...
DESIRED: array([  62.2  ,  -39.78 , -120.2  ,  -48.28 , -193.2  ,  -66.9  ,
73.25 ,  -38.28 ,  144.   , -123.5  ,  -13.26 ,  -11.02 ,
-37.   , -206.8  ,  -57.22 ,   -7.57 , -125.56 ,  -28.42 ,...
2025-04-27 05:10:08.677677 test begin: paddle.sum(Tensor([52, 104832],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([52, 104832],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 52 / 52 (100%)
Max absolute difference among violations: 192.8
Max relative difference among violations: 24.86
ACTUAL: array([ -1.343 , -17.39  ,  -5.094 , -24.08  ,  11.05  ,   9.58  ,
-2.305 ,   5.48  ,  17.38  , -28.02  ,   5.5   ,   0.4333,
-31.48  ,  10.57  , -11.8   ,  13.51  , -11.266 , -20.02  ,...
DESIRED: array([  16.88 ,   29.27 ,  118.44 ,  -41.78 ,   -2.586,   57.22 ,
-32.72 ,  100.2  ,  -39.1  ,  -44.25 ,   -7.047,  -76.06 ,
-224.2  , -109.56 ,   74.4  ,   39.4  ,   96.6  ,   24.39 ,...
2025-04-27 05:10:21.762230 test begin: paddle.sum(Tensor([52, 54400],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([52, 54400],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 52 / 52 (100%)
Max absolute difference among violations: 168.4
Max relative difference among violations: 6.355
ACTUAL: array([ -0.618 ,   7.887 ,  -7.215 ,  -6.434 ,  -0.2283,  -4.805 ,
5.223 , -13.91  ,  21.11  ,   2.125 ,   0.743 , -17.19  ,
1.328 , -10.74  ,   1.637 ,  -7.035 ,  -3.516 ,   4.098 ,...
DESIRED: array([ -29.5   ,   -5.56  ,   78.75  ,  -44.56  ,   52.    ,  -29.9   ,
-24.55  ,   -5.152 ,  109.44  , -122.1   ,   82.7   ,  -57.1   ,
131.    ,  -71.7   ,  -67.7   ,   27.66  ,   -0.4778,  160.1   ,...
2025-04-27 05:10:22.261206 test begin: paddle.sum(Tensor([52, 60800],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([52, 60800],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 52 / 52 (100%)
Max absolute difference among violations: 132.8
Max relative difference among violations: 3.518
ACTUAL: array([ -4.13  ,  -4.734 ,   9.13  ,   4.07  , -11.97  ,  -7.035 ,
9.9   ,  16.23  ,  14.72  , -17.03  , -11.61  ,  -1.251 ,
2.527 ,   2.658 ,  18.1   ,  17.92  ,   8.555 , -12.78  ,...
DESIRED: array([ -19.95 ,   64.9  ,   70.6  ,   51.53 , -114.2  ,  -57.03 ,
-78.94 ,  -42.97 ,   65.4  ,  -61.34 ,   -2.57 ,  -51.78 ,
-57.34 ,   19.64 ,   46.12 ,  -89.8  ,  -49.1  ,  -81.94 ,...
2025-04-27 05:10:22.796172 test begin: paddle.sum(Tensor([52, 62400],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([52, 62400],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 52 / 52 (100%)
Max absolute difference among violations: 163.6
Max relative difference among violations: 84.94
ACTUAL: array([  5.14  ,  -1.416 , -17.23  , -10.46  ,   7.492 ,   5.047 ,
12.984 ,   9.24  ,  -6.582 ,   8.38  ,  -5.496 ,   2.623 ,
-0.5156,  -3.338 ,  -7.586 ,  -0.7236, -14.42  ,  24.67  ,...
DESIRED: array([ 1.0031e+02,  1.0794e+02,  2.7812e+01,  1.5625e+01,  9.2750e+01,
6.2406e+01,  1.5112e-01, -1.9000e+01,  1.3195e+01,  8.1250e+01,
5.4000e+01, -1.2109e+01, -8.9125e+01,  1.6025e+02,  5.3562e+01,...
2025-04-27 05:10:23.432735 test begin: paddle.sum(Tensor([52, 64000],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([52, 64000],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 52 / 52 (100%)
Max absolute difference among violations: 177.9
Max relative difference among violations: 10.336
ACTUAL: array([  2.32  ,   1.309 ,  -3.623 ,  -4.48  ,  -1.37  ,  -6.016 ,
24.28  , -11.016 ,  26.31  , -17.31  ,   8.586 , -27.67  ,
3.479 ,  11.47  , -25.16  ,  -9.43  ,   2.95  ,   1.934 ,...
DESIRED: array([ -63.8   ,  167.8   ,  144.1   ,  -87.5   ,   -7.69  ,  -41.75  ,
112.8   ,  111.25  ,   38.9   ,  -40.4   ,   42.4   ,  -69.25  ,
-49.12  ,  -86.4   ,  -29.3   ,   56.62  , -126.2   ,   -7.44  ,...
2025-04-27 05:10:24.046314 test begin: paddle.sum(Tensor([52, 65664],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([52, 65664],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 52 / 52 (100%)
Max absolute difference among violations: 152.1
Max relative difference among violations: 3.45
ACTUAL: array([ 9.797e+00,  6.301e+00, -2.658e+00,  4.995e-01, -4.898e+00,
-4.461e+00, -9.250e+00,  4.141e+00,  2.516e+00, -7.703e+00,
-5.200e-01, -6.672e+00,  1.318e+01,  1.550e+01, -9.600e-01,...
DESIRED: array([ -83.6  ,  -25.94 ,   38.16 ,   57.72 ,  -18.31 ,   26.75 ,
84.4  ,  123.4  ,  -35.75 ,  -15.3  ,  -11.11 ,  -67.06 ,
99.4  ,   56.97 ,   57.12 ,   38.9  ,    3.137,  118.5  ,...
2025-04-27 05:10:24.618498 test begin: paddle.sum(Tensor([52, 67200],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([52, 67200],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 52 / 52 (100%)
Max absolute difference among violations: 210.1
Max relative difference among violations: 3.742
ACTUAL: array([ -4.656,   7.47 ,  -6.305,  24.86 , -15.99 ,  -8.445,   7.426,
-8.23 , -10.64 ,  -5.062,  12.914,  -2.533,   3.176,  18.06 ,
1.115, -21.53 ,  16.72 ,  -1.408, -11.59 ,  -2.227,  -8.29 ,...
DESIRED: array([-100.    ,  -75.    ,   26.88  ,   53.72  ,  -18.    , -218.6   ,
56.47  ,   27.88  ,  -72.75  ,  -85.9   ,  -17.34  ,  -67.94  ,
-7.477 ,   49.6   ,  -17.97  , -162.4   ,   24.58  ,  122.1   ,...
2025-04-27 05:10:25.284384 test begin: paddle.sum(Tensor([52, 70528],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([52, 70528],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 52 / 52 (100%)
Max absolute difference among violations: 203.4
Max relative difference among violations: 2.514
ACTUAL: array([-10.05  ,   9.016 , -14.414 ,   5.5   , -25.4   ,  -1.477 ,
0.9727,  16.69  ,   5.484 ,   4.51  , -17.92  ,  -6.934 ,
-28.97  ,  -4.84  ,   8.62  ,  -0.4497,  -5.11  ,  14.875 ,...
DESIRED: array([ -33.22 ,  113.8  ,  -73.44 ,  -26.31 ,  -94.6  ,  -36.34 ,
-70.25 ,   98.3  , -142.2  ,   27.52 ,   31.61 ,  -66.5  ,
-133.8  ,   68.3  ,  -86.06 ,   76.6  ,  -62.62 ,   32.56 ,...
2025-04-27 05:10:25.846847 test begin: paddle.sum(Tensor([52, 76160],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([52, 76160],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 52 / 52 (100%)
Max absolute difference among violations: 216.5
Max relative difference among violations: 164.9
ACTUAL: array([  5.484 , -10.85  , -14.44  ,   1.827 ,   0.9595,  11.14  ,
0.1403,  -1.271 ,  25.31  , -15.34  ,  -4.062 ,   9.69  ,
5.137 ,  -1.517 ,   2.287 ,   5.12  ,   2.582 ,   3.318 ,...
DESIRED: array([ 4.7539e+00, -1.2781e+02,  2.0212e+02, -8.0547e+00,  2.0203e+01,
-6.5188e+01, -3.5156e+01,  1.3555e+01,  1.6984e+01, -5.4531e+01,
-5.6938e+01,  2.6859e+01, -2.1797e+01, -5.2188e+01, -2.1375e+01,...
2025-04-27 05:10:26.488843 test begin: paddle.sum(Tensor([52, 78336],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([52, 78336],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 52 / 52 (100%)
Max absolute difference among violations: 167.8
Max relative difference among violations: 5.906
ACTUAL: array([  4.613 ,  12.31  ,  13.07  , -10.77  ,  -0.65  , -17.16  ,
15.25  ,  -6.94  , -15.23  ,  19.4   ,   7.797 ,  15.336 ,
-0.5024,  16.39  ,   8.6   ,  -3.37  ,   4.848 ,   5.48  ,...
DESIRED: array([  43.66 ,  -17.88 ,   81.7  ,  -47.25 ,   31.95 ,  116.75 ,
-19.53 ,   51.56 ,    8.27 ,  127.44 ,   51.16 ,   26.03 ,
1.119,    7.152,   61.6  , -171.1  ,   -9.98 ,  -37.38 ,...
2025-04-27 05:10:27.165637 test begin: paddle.sum(Tensor([52, 82688],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([52, 82688],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 52 / 52 (100%)
Max absolute difference among violations: 179.
Max relative difference among violations: 11.37
ACTUAL: array([  8.53  ,  -9.79  ,   9.74  ,   4.87  ,   5.61  ,   0.7886,
-13.81  ,  -2.277 , -14.44  ,   9.97  ,  -2.56  ,  -4.395 ,
-2.637 ,   7.016 ,  -6.27  ,  10.91  ,   9.38  ,   4.848 ,...
DESIRED: array([  -8.81 ,  -62.22 ,   96.3  ,    5.914,   71.9  , -147.9  ,
-1.15 ,  -25.6  ,  -79.5  ,    0.806, -120.2  ,  -75.2  ,
-81.75 , -128.1  ,   -8.54 ,  -41.4  ,  -38.78 ,   51.28 ,...
2025-04-27 05:10:27.814179 test begin: paddle.sum(Tensor([52, 84864],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([52, 84864],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 52 / 52 (100%)
Max absolute difference among violations: 210.4
Max relative difference among violations: 5.664
ACTUAL: array([ -8.766 , -14.77  ,  -3.232 , -10.73  ,   2.076 ,   1.537 ,
-24.47  ,  -5.707 ,   9.31  ,   4.367 ,   4.18  ,  19.72  ,
1.309 ,   3.498 ,  -7.68  ,  -9.95  ,  13.63  ,  15.58  ,...
DESIRED: array([  57.97  ,  124.8   ,  101.2   ,  -66.2   ,  114.3   ,  121.6   ,
-67.3   ,  -83.75  ,   51.2   ,   45.25  ,   -0.8965,  165.6   ,
35.12  ,  -97.06  ,  -46.7   ,  -12.18  ,  -52.38  ,  -74.56  ,...
2025-04-27 05:10:28.535466 test begin: paddle.sum(Tensor([52, 85120],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([52, 85120],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 52 / 52 (100%)
Max absolute difference among violations: 180.5
Max relative difference among violations: 22.08
ACTUAL: array([ 4.1821e-01,  2.2461e-02,  1.2031e+01,  1.9336e+00, -7.6562e+00,
-1.0055e+01, -2.0562e+01, -7.9199e-01, -1.1338e+00, -1.5672e+01,
-7.4297e+00,  6.0703e+00, -3.6250e+00, -1.1992e+01, -1.0500e+01,...
DESIRED: array([  -0.4282,   92.3   , -132.    ,   62.94  , -108.75  ,   44.38  ,
-33.66  ,  -66.94  ,   89.06  ,    0.7437,  -54.06  ,   88.44  ,
150.1   ,  -39.72  ,   70.3   ,   27.86  ,  -68.9   ,  108.9   ,...
2025-04-27 05:10:29.271139 test begin: paddle.sum(Tensor([52, 86016],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([52, 86016],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 51 / 52 (98.1%)
Max absolute difference among violations: 194.9
Max relative difference among violations: 6.12
ACTUAL: array([ 1.4570e+01,  8.6172e+00, -5.1172e+00,  4.4531e+00, -7.6318e-01,
2.2305e+00,  6.5117e+00,  1.1922e+01, -4.2188e+00, -1.1766e+01,
-1.1963e-02, -9.5020e-01, -7.1406e+00, -4.6445e+00,  1.6602e+00,...
DESIRED: array([ -87.25 ,  -73.25 ,   86.8  ,   68.1  ,   50.06 ,   32.6  ,
116.5  ,    8.99 ,   16.78 ,  113.4  ,   68.   ,  -84.06 ,
34.38 , -113.4  ,    8.05 ,  -21.8  , -180.5  ,  171.1  ,...
2025-04-27 05:10:30.044237 test begin: paddle.sum(Tensor([52, 89216],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([52, 89216],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 52 / 52 (100%)
Max absolute difference among violations: 223.1
Max relative difference among violations: 9.54
ACTUAL: array([  7.758 ,   2.467 ,  -4.367 ,  -5.953 ,  13.27  ,  -9.42  ,
-3.531 ,  -7.074 , -17.98  ,  30.95  ,   8.26  ,  10.266 ,
7.586 ,  -5.42  ,   9.46  , -10.93  , -26.83  ,   1.725 ,...
DESIRED: array([  35.34 ,   18.14 , -147.6  ,   80.25 ,   29.5  ,  -65.3  ,
-192.4  ,    3.89 ,  -77.75 ,  148.1  ,   80.56 ,  -81.2  ,
159.   ,    1.878,  189.1  ,   -1.037,   70.5  ,  117.8  ,...
2025-04-27 05:10:30.845458 test begin: paddle.sum(Tensor([52, 89984],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([52, 89984],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 51 / 52 (98.1%)
Max absolute difference among violations: 176.6
Max relative difference among violations: 4.445
ACTUAL: array([ 19.67  , -11.32  ,  -1.897 , -12.42  ,   2.752 ,  -5.03  ,
8.07  ,   9.375 , -10.02  ,  15.4   ,  -7.812 , -11.6   ,
0.687 , -22.55  ,  -4.824 ,  -3.96  ,  15.18  ,  -7.105 ,...
DESIRED: array([  98.3  ,   21.25 ,   16.11 ,  117.2  ,   89.8  ,    2.727,
69.06 ,  -26.98 ,  -62.3  ,    9.88 ,    5.324,  -34.6  ,
103.25 , -109.4  ,   37.78 ,  -31.38 ,  -59.94 ,    2.062,...
2025-04-27 05:10:31.646459 test begin: paddle.sum(Tensor([52, 91392],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([52, 91392],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 52 / 52 (100%)
Max absolute difference among violations: 159.5
Max relative difference among violations: 8.09
ACTUAL: array([  8.055 ,  10.016 ,   0.5903, -18.52  ,   8.46  ,  -4.164 ,
-2.496 ,  14.586 ,  -6.96  ,  10.414 , -15.63  ,  -3.482 ,
13.36  ,  -8.89  ,   3.506 , -10.07  ,  -5.812 ,   2.633 ,...
DESIRED: array([ -16.11  ,    1.188 ,   41.38  ,   -9.77  ,   30.66  ,  -18.67  ,
-19.89  ,   22.47  ,  -12.75  ,   97.44  ,  -90.25  ,  -21.3   ,
42.66  ,  -60.94  ,  -86.2   ,  -58.12  ,   82.1   ,  -79.25  ,...
2025-04-27 05:10:32.425955 test begin: paddle.sum(Tensor([52, 92352],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([52, 92352],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 52 / 52 (100%)
Max absolute difference among violations: 232.5
Max relative difference among violations: 1.98
ACTUAL: array([  8.66  ,  -4.266 ,  -9.52  , -16.7   ,   5.168 , -11.81  ,
14.48  ,   5.125 ,  -2.693 ,  12.84  , -11.016 ,   2.76  ,
9.26  , -11.164 ,   3.824 , -12.21  ,  -3.283 ,   5.875 ,...
DESIRED: array([  -8.836, -164.8  ,  -48.06 , -106.4  , -121.06 ,   24.47 ,
-20.14 ,   37.9  ,  -54.34 ,  143.5  , -128.9  ,  -51.62 ,
-38.4  ,  221.4  ,  -22.36 ,  -26.38 ,  -54.47 ,  147.5  ,...
2025-04-27 05:10:33.195067 test begin: paddle.sum(Tensor([52, 92416],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([52, 92416],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 52 / 52 (100%)
Max absolute difference among violations: 246.5
Max relative difference among violations: 5.094
ACTUAL: array([-15.69  ,  11.37  , -11.31  ,   3.727 ,   7.69  ,   7.457 ,
1.607 , -24.39  ,   6.324 ,   9.44  ,  -2.207 , -18.75  ,
-7.035 ,   0.611 ,   2.164 ,  14.2   ,   0.4485,   4.516 ,...
DESIRED: array([ -86.2  ,   75.5  ,  -14.94 ,  -24.66 , -105.8  ,   30.3  ,
45.28 ,  -40.53 ,   61.4  ,   -9.54 ,  -18.06 , -118.75 ,
-2.258, -229.2  ,   18.9  ,   21.98 ,   49.06 ,   83.4  ,...
2025-04-27 05:10:33.872042 test begin: paddle.sum(Tensor([52, 94080],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([52, 94080],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 52 / 52 (100%)
Max absolute difference among violations: 214.9
Max relative difference among violations: 2.285
ACTUAL: array([  1.585 ,  13.03  ,   0.6187,  15.14  , -15.13  ,   1.036 ,
-2.656 ,  -1.242 ,  30.61  ,  -3.988 , -21.06  ,  -2.287 ,
-10.75  ,  -2.867 , -14.266 ,  -1.301 ,  -4.688 ,  16.06  ,...
DESIRED: array([  -4.277,  -55.   ,   64.2  ,   39.44 ,  -36.62 ,  -62.25 ,
40.7  ,   30.6  ,  213.2  ,   28.05 ,  -53.34 ,    3.938,
64.56 ,   96.2  ,  -42.53 ,  -95.25 ,   21.11 ,    4.89 ,...
2025-04-27 05:10:34.634403 test begin: paddle.sum(Tensor([52, 94848],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([52, 94848],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 52 / 52 (100%)
Max absolute difference among violations: 255.4
Max relative difference among violations: 6.703
ACTUAL: array([ -5.33  ,   2.625 , -13.234 ,  -4.688 ,  -1.578 ,   5.293 ,
-5.87  ,   1.159 ,  10.8   , -34.38  ,  -6.95  ,  13.69  ,
5.297 ,   7.03  ,  -3.486 , -15.11  ,   3.357 ,  -1.054 ,...
DESIRED: array([ 191.6  ,  -27.3  ,   -8.945,   12.125,  -17.48 ,  -77.9  ,
14.734,  196.6  ,  143.1  ,  124.75 ,  -29.92 ,   94.75 ,
223.1  ,  -11.625,   36.88 ,   59.66 ,   -1.417,   64.1  ,...
2025-04-27 05:10:35.411898 test begin: paddle.sum(Tensor([52, 97280],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([52, 97280],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 52 / 52 (100%)
Max absolute difference among violations: 161.
Max relative difference among violations: 7.71
ACTUAL: array([-19.6   ,   5.363 ,   3.275 ,  -7.8   ,  10.49  ,  -9.02  ,
11.836 , -11.75  , -13.16  ,  -0.543 ,   5.465 , -24.1   ,
0.2915,  -6.73  ,   2.035 ,  16.61  ,  -4.22  ,  -4.188 ,...
DESIRED: array([  56.44 ,   -7.21 ,   17.84 ,  144.9  ,   25.94 , -110.06 ,
-58.44 ,  117.44 ,   15.31 ,  -52.   ,  -30.88 ,  -67.1  ,
29.5  , -112.94 ,   88.2  ,   13.805,    5.04 ,   25.7  ,...
2025-04-27 05:10:36.230395 test begin: paddle.sum(Tensor([52, 99456],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([52, 99456],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 52 / 52 (100%)
Max absolute difference among violations: 210.
Max relative difference among violations: 26.73
ACTUAL: array([  6.727 ,  -3.965 ,  -6.008 ,  15.914 ,  -1.95  ,   1.744 ,
0.4065,  15.91  ,  -8.66  ,  -3.615 ,  -7.594 , -10.61  ,
-16.94  ,  14.8   , -25.92  ,  13.195 , -27.28  ,   0.889 ,...
DESIRED: array([-4.9406e+01,  2.0812e+01, -1.3575e+02,  1.6600e+02, -4.5812e+01,
-1.7775e+02, -2.9812e+01,  2.4547e+01, -9.3312e+01,  7.2562e+01,
1.7828e+01,  9.9875e+01, -9.7875e+01,  2.2475e+02, -3.8188e+01,...
2025-04-27 05:10:38.221827 test begin: paddle.sum(Tensor([524288],"float16"), )
[accuracy error] paddle.sum(Tensor([524288],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 11.19
Max relative difference among violations: 0.1081
ACTUAL: array(-114.7, dtype=float16)
DESIRED: array(-103.5, dtype=float16)
2025-04-27 05:10:48.070359 test begin: paddle.sum(Tensor([56, 102144],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([56, 102144],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 56 / 56 (100%)
Max absolute difference among violations: 205.1
Max relative difference among violations: 7.445
ACTUAL: array([  5.44  ,   5.61  ,  11.555 ,   2.719 ,   1.928 ,  -4.2   ,
11.22  , -17.3   , -16.56  ,  26.89  , -11.375 , -32.1   ,
13.77  ,  10.64  ,  -7.348 ,  -7.688 ,   6.89  ,   9.39  ,...
DESIRED: array([ -82.4  ,   11.72 ,   54.3  ,    6.523, -112.   ,   -9.35 ,
-15.09 ,  -52.12 , -110.44 ,   65.   , -102.9  , -178.   ,
-79.6  ,   95.6  ,    3.06 ,  -68.75 ,   57.72 , -104.8  ,...
2025-04-27 05:10:59.910279 test begin: paddle.sum(Tensor([56, 54400],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([56, 54400],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 56 / 56 (100%)
Max absolute difference among violations: 156.6
Max relative difference among violations: 2.72
ACTUAL: array([-14.48   ,  10.62   ,   9.34   ,  -3.605  , -10.05   ,  21.39   ,
13.3    ,  -5.754  ,   0.311  ,  15.38   ,   3.352  ,  -1.114  ,
0.799  ,  -8.96   ,  -4.316  , -12.53   ,   0.639  , -16.27   ,...
DESIRED: array([ -59.62,  -77.9 ,  -23.1 ,  -26.72,  -17.11,  -14.78,  -19.72,
-30.81,   70.1 ,   49.72,   19.3 ,  111.3 ,   62.88,   36.06,
15.16,  -72.6 , -112.1 ,  140.4 ,   61.94,   90.44, -129.8 ,...
2025-04-27 05:11:01.286758 test begin: paddle.sum(Tensor([56, 60800],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([56, 60800],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 56 / 56 (100%)
Max absolute difference among violations: 199.1
Max relative difference among violations: 11.67
ACTUAL: array([  3.838 ,  -5.773 ,  -6.863 ,   1.585 , -10.63  ,  -4.703 ,
6.414 ,   9.555 , -13.734 ,   9.336 ,  11.375 ,  -9.234 ,
-12.48  ,   3.178 ,  -5.395 ,  15.99  ,  -6.36  ,  -9.1   ,...
DESIRED: array([  65.   ,  -20.61 ,  -73.6  ,   -3.893,  -64.1  ,   -9.   ,
14.6  ,   19.31 ,  -22.97 ,   65.5  ,   10.47 ,  -34.1  ,
-0.985,   56.25 ,  -60.9  ,   78.25 ,   82.5  ,   43.16 ,...
2025-04-27 05:11:02.171041 test begin: paddle.sum(Tensor([56, 62400],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([56, 62400],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 56 / 56 (100%)
Max absolute difference among violations: 174.5
Max relative difference among violations: 3.82
ACTUAL: array([-19.92   ,  12.95   , -16.     ,   5.496  ,  -5.38   ,  -6.477  ,
12.32   ,  -3.398  , -11.25   ,   4.406  ,   4.535  ,  -0.06238,
-0.6694 ,   4.67   ,   3.1    ,  10.42   ,  16.5    ,  -8.22   ,...
DESIRED: array([  -4.133,  -22.44 ,  -36.3  ,   52.8  ,   22.67 ,   -9.03 ,
-54.8  ,   75.94 , -185.8  ,   -4.246,   31.67 ,  -71.75 ,
-18.56 ,  -45.5  , -161.9  ,    9.06 ,   96.3  , -106.06 ,...
2025-04-27 05:11:03.007511 test begin: paddle.sum(Tensor([56, 63936],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([56, 63936],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 56 / 56 (100%)
Max absolute difference among violations: 214.8
Max relative difference among violations: 16.81
ACTUAL: array([-17.45   , -12.96   ,  -1.695  ,  -6.086  , -20.27   ,  -0.483  ,
12.7    ,   4.95   , -10.82   ,  -7.965  ,  -8.13   ,   8.73   ,
7.43   ,  -2.982  ,   2.543  ,  -9.37   ,  -6.836  , -11.234  ,...
DESIRED: array([ -82.7  ,   79.5  ,   91.2  ,  -56.88 ,  -70.1  ,  -18.44 ,
19.11 ,  -25.27 ,  -50.72 , -222.8  ,   -7.395,   37.75 ,
-83.44 ,   15.234,   44.03 ,  -19.8  ,   17.6  , -189.8  ,...
2025-04-27 05:11:03.797830 test begin: paddle.sum(Tensor([56, 64000],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([56, 64000],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 56 / 56 (100%)
Max absolute difference among violations: 175.8
Max relative difference among violations: 11.14
ACTUAL: array([  0.3  ,   7.824,  -7.273,   6.668, -13.85 , -11.29 , -10.43 ,
-9.38 ,   4.81 , -14.29 ,  -7.508, -11.11 ,   5.363,  10.25 ,
-6.957,  -1.69 , -20.28 ,  10.04 ,   5.797,  20.64 ,  -2.59 ,...
DESIRED: array([-5.203e+01,  8.900e+01,  3.856e+01, -1.361e+02, -6.394e+01,
-2.227e+01,  1.306e+01, -3.962e+01,  2.623e+00,  4.747e+01,
1.820e+00, -2.347e+01,  7.113e+00,  5.066e+01,  1.981e+01,...
2025-04-27 05:11:04.627019 test begin: paddle.sum(Tensor([56, 65664],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([56, 65664],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 56 / 56 (100%)
Max absolute difference among violations: 154.2
Max relative difference among violations: 13.91
ACTUAL: array([  5.22 , -14.44 ,  11.875,  -9.22 ,  -3.215,   3.926,   4.477,
-2.441, -12.266,   2.805,   2.322,  -2.918,  -5.523,  -8.05 ,
5.742,   6.4  ,  -1.581, -12.41 ,   2.836, -11.47 , -23.27 ,...
DESIRED: array([ -37.75 ,   74.25 ,  -32.62 ,  -72.1  ,  -44.66 ,   76.8  ,
-39.7  ,   -7.812,    5.082, -151.5  ,  -37.38 ,  -14.125,
-64.3  ,  -17.61 ,  -33.53 ,  -50.47 ,   17.47 , -129.4  ,...
2025-04-27 05:11:05.613018 test begin: paddle.sum(Tensor([56, 67200],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([56, 67200],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 56 / 56 (100%)
Max absolute difference among violations: 151.
Max relative difference among violations: 4.027
ACTUAL: array([  4.676 ,   7.98  ,  -7.957 , -12.336 , -10.8   ,   2.598 ,
-16.44  ,  -8.85  ,  12.11  ,  -0.9966,  -7.754 ,  -7.508 ,
-20.84  ,   0.835 ,  -1.706 ,  17.39  , -16.7   ,   7.184 ,...
DESIRED: array([ -43.84 ,  143.9  ,  -65.75 ,   13.96 ,   -9.836,  -26.69 ,
-3.27 ,  142.1  ,    8.55 ,  -90.7  ,  -89.6  ,   19.98 ,
-68.9  ,    4.188, -111.   ,   17.86 , -140.2  ,   52.16 ,...
2025-04-27 05:11:07.179525 test begin: paddle.sum(Tensor([56, 73984],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([56, 73984],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 56 / 56 (100%)
Max absolute difference among violations: 186.4
Max relative difference among violations: 2.752
ACTUAL: array([ -2.906  , -24.9    ,  -8.38   ,   6.117  ,   4.598  ,  12.42   ,
-10.055  , -20.23   , -17.03   ,  11.77   ,   1.43   ,  -1.395  ,
-0.1826 ,   8.83   ,   9.12   ,   7.066  ,   5.184  , -13.21   ,...
DESIRED: array([ -41.53 , -142.   ,   26.33 ,   66.6  ,  165.2  ,   90.8  ,
-44.84 ,   47.8  ,  -36.56 ,   86.   ,  160.4  , -149.9  ,
-18.73 ,  130.1  ,   53.44 ,   73.75 ,   22.12 ,  -95.   ,...
2025-04-27 05:11:07.931920 test begin: paddle.sum(Tensor([56, 76032],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([56, 76032],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 56 / 56 (100%)
Max absolute difference among violations: 185.1
Max relative difference among violations: 2.06
ACTUAL: array([-12.43   ,   4.16   ,  10.65   ,  -3.139  , -18.84   ,  -7.67   ,
5.625  ,  -1.285  ,   7.875  ,  11.836  ,   3.02   , -12.61   ,
6.285  ,  -0.6885 ,   6.96   ,  20.03   ,  -4.242  ,   6.11   ,...
DESIRED: array([ -77.56 ,  -41.03 ,   98.44 ,   18.   ,   79.06 ,   30.64 ,
51.12 ,   17.11 ,   93.   ,  -50.5  ,  118.06 , -170.2  ,
79.1  ,   15.46 ,   27.03 ,   39.25 ,   21.39 ,   21.42 ,...
2025-04-27 05:11:08.733270 test begin: paddle.sum(Tensor([56, 77824],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([56, 77824],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 56 / 56 (100%)
Max absolute difference among violations: 174.5
Max relative difference among violations: 4.156
ACTUAL: array([ 14.555 ,   0.841 ,   3.125 ,  10.56  ,  -8.33  , -12.07  ,
0.8296,  -9.78  ,  -7.39  , -19.9   ,   1.716 , -11.57  ,
-7.918 ,   3.82  ,   6.02  , -36.16  ,   8.59  , -13.58  ,...
DESIRED: array([  94.56 , -173.6  ,   63.12 ,   51.72 ,  -88.06 ,   87.7  ,
103.6  ,  -94.4  ,   52.97 ,  -23.02 ,   87.25 ,   -2.244,
-22.34 ,  -32.84 ,   14.625, -153.5  ,   93.7  ,   -7.957,...
2025-04-27 05:11:09.959952 test begin: paddle.sum(Tensor([56, 80256],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([56, 80256],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 56 / 56 (100%)
Max absolute difference among violations: 188.9
Max relative difference among violations: 5.082
ACTUAL: array([  6.957 ,  -5.297 ,  -3.637 ,  -8.03  ,  -7.906 ,  -6.543 ,
-21.06  ,   9.805 ,  14.15  ,   9.82  , -26.06  ,   0.7236,
-2.377 ,   6.51  ,  19.52  ,  11.59  ,  18.28  ,  30.08  ,...
DESIRED: array([ -52.25 ,   35.03 ,   52.88 ,   93.94 ,  123.4  , -115.2  ,
-67.7  ,   38.84 ,   19.11 , -146.8  , -128.6  , -123.25 ,
-60.5  ,  -72.44 ,  103.6  , -147.4  ,  -40.5  ,  187.5  ,...
2025-04-27 05:11:10.688925 test begin: paddle.sum(Tensor([56, 80512],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([56, 80512],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 56 / 56 (100%)
Max absolute difference among violations: 206.1
Max relative difference among violations: 2.604
ACTUAL: array([ -5.562 , -11.24  ,   5.367 , -13.2   ,  -6.945 ,  15.16  ,
0.9146,   3.412 , -20.83  ,  -0.628 ,   4.266 , -11.85  ,
1.681 ,  -5.855 ,   4.6   ,  -0.3762,   1.944 ,  17.56  ,...
DESIRED: array([-128.1  ,   40.78 ,   21.39 ,   20.98 ,  -23.55 ,  -91.94 ,
15.31 ,   58.66 , -105.94 ,  -55.75 ,  -39.8  ,    7.395,
-67.8  ,   26.17 ,  -81.9  ,  -66.8  ,   36.75 ,   36.22 ,...
2025-04-27 05:11:11.761026 test begin: paddle.sum(Tensor([56, 82688],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([56, 82688],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 56 / 56 (100%)
Max absolute difference among violations: 202.2
Max relative difference among violations: 2.262
ACTUAL: array([  7.168  ,   9.01   ,  11.51   ,   1.774  ,  -7.984  ,   7.58   ,
-1.772  ,   5.3    ,   0.629  ,  -2.287  ,   3.94   ,  10.375  ,
-19.48   ,   0.719  ,   3.832  ,   0.05835,   5.02   ,   6.996  ,...
DESIRED: array([  74.   ,  -61.75 ,   19.25 ,  -26.77 , -146.6  ,  -10.64 ,
-130.2  ,    3.28 ,    2.639,  -50.4  ,   31.9  ,   34.2  ,
-56.6  ,   16.73 ,   12.2  ,   74.   , -122.2  ,   99.06 ,...
2025-04-27 05:11:12.853617 test begin: paddle.sum(Tensor([56, 84480],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([56, 84480],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 56 / 56 (100%)
Max absolute difference among violations: 204.6
Max relative difference among violations: 3.018
ACTUAL: array([ -7.434 , -22.55  ,   3.176 ,   1.758 ,   2.469 , -18.38  ,
-2.111 , -14.48  ,   2.291 ,   7.805 ,  15.5   , -10.99  ,
-15.516 ,  13.46  ,   5.184 ,  -1.674 ,  -5.707 ,   8.266 ,...
DESIRED: array([-138.4  , -143.4  ,  138.6  ,  -39.34 ,   95.06 , -131.8  ,
-25.69 ,   -6.48 ,   45.97 ,   66.   ,  -22.42 ,   31.67 ,
123.75 ,   62.28 ,  -44.3  ,  -83.25 , -210.4  ,  -35.66 ,...
2025-04-27 05:11:14.202824 test begin: paddle.sum(Tensor([56, 87360],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([56, 87360],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 56 / 56 (100%)
Max absolute difference among violations: 178.
Max relative difference among violations: 37.97
ACTUAL: array([-17.67  ,  -7.445 ,   4.434 ,  -4.727 ,   0.572 ,   0.3313,
0.4915,  -9.52  , -15.336 ,  18.72  ,  -4.46  ,  -2.957 ,
-23.38  ,  -8.66  , -25.06  ,  18.14  ,   1.502 ,  -9.445 ,...
DESIRED: array([-117.    , -115.8   ,   62.84  ,    5.75  ,    5.613 ,   81.3   ,
118.7   ,   53.97  , -153.9   ,   55.25  ,   -4.043 ,   99.6   ,
-13.63  ,  169.4   ,   22.9   ,   -0.4905,  -27.06  ,  -95.56  ,...
2025-04-27 05:11:15.112678 test begin: paddle.sum(Tensor([56, 89984],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([56, 89984],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 56 / 56 (100%)
Max absolute difference among violations: 193.2
Max relative difference among violations: 4.855
ACTUAL: array([-26.27  ,  -2.824 ,  -4.527 , -11.445 , -12.586 ,  18.34  ,
-15.78  ,  -3.74  ,  -3.43  ,   5.54  ,   7.57  ,  -7.227 ,
19.95  , -35.44  ,   3.766 ,  -1.119 ,   7.66  ,  -3.53  ,...
DESIRED: array([  79.44 ,  -78.44 ,   50.06 ,  -31.94 ,   28.78 ,    9.99 ,
-22.52 ,   90.   ,   70.1  ,   17.73 ,    5.574,  -58.66 ,
94.2  , -138.4  ,  -27.64 ,   72.2  ,  -25.1  ,   73.7  ,...
2025-04-27 05:11:16.228049 test begin: paddle.sum(Tensor([56, 91392],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([56, 91392],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 55 / 56 (98.2%)
Max absolute difference among violations: 231.
Max relative difference among violations: 2.758
ACTUAL: array([-15.92  ,   3.371 ,   3.371 , -16.33  ,   5.027 , -32.8   ,
6.312 ,  10.12  ,  -5.527 ,  13.81  ,   8.16  ,   2.158 ,
-15.21  ,  11.77  ,   2.566 ,   1.399 , -12.32  ,  -1.619 ,...
DESIRED: array([ -18.89 ,   -7.133,    3.404, -107.9  ,   63.72 ,  -18.47 ,
-24.1  ,   71.25 ,  -14.89 ,   81.8  ,  107.7  ,  -29.36 ,
37.16 ,   67.44 ,   12.93 ,   15.   ,  -63.53 ,  -87.2  ,...
2025-04-27 05:11:16.929351 test begin: paddle.sum(Tensor([56, 92416],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([56, 92416],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 56 / 56 (100%)
Max absolute difference among violations: 216.
Max relative difference among violations: 4.367
ACTUAL: array([ -6.664 ,  -7.73  ,   0.3757,  -0.4592,  -5.457 ,  -0.676 ,
4.367 ,  12.17  , -12.9   , -15.516 ,  -4.473 ,  12.63  ,
-7.594 , -12.8   ,   8.65  ,   9.46  , -14.99  ,   0.7246,...
DESIRED: array([   5.215,   -7.28 ,  105.3  ,  -10.01 , -116.56 ,  -88.25 ,
-8.14 ,   90.3  ,  -76.7  ,  -49.47 ,  -89.75 ,  -48.72 ,
-223.6  ,   41.   ,  -63.56 ,   28.8  ,  -26.61 ,   72.9  ,...
2025-04-27 05:11:17.726267 test begin: paddle.sum(Tensor([56, 94080],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([56, 94080],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 56 / 56 (100%)
Max absolute difference among violations: 241.9
Max relative difference among violations: 11.23
ACTUAL: array([  8.305 ,  13.33  ,   9.555 , -11.    ,   6.125 , -14.27  ,
-15.234 , -14.586 ,   4.848 ,  -3.555 ,  -3.287 ,  16.56  ,
10.98  ,  11.11  ,  -8.61  , -10.24  , -15.97  ,   4.4   ,...
DESIRED: array([  33.47 ,   76.   , -143.1  ,  -72.   ,   31.28 ,   67.06 ,
1.489,   97.1  ,  -57.44 ,    3.281, -179.5  ,  110.3  ,
-5.586,  163.1  , -136.2  , -179.5  ,  -79.1  ,   64.3  ,...
2025-04-27 05:11:18.582972 test begin: paddle.sum(Tensor([56, 94848],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([56, 94848],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 56 / 56 (100%)
Max absolute difference among violations: 294.5
Max relative difference among violations: 6.156
ACTUAL: array([  1.324  ,  -0.1548 , -21.28   , -17.48   ,  11.34   ,   5.312  ,
-17.06   ,  -1.75   ,  -0.7256 , -16.33   ,  -3.33   , -11.86   ,
7.3    ,  -6.004  ,  11.09   ,   6.375  ,  -2.883  , -15.     ,...
DESIRED: array([  21.77 ,  -72.06 ,  -27.45 ,   76.   ,  -68.94 ,   73.25 ,
111.2  ,   23.47 ,  139.2  ,   50.3  ,  -74.8  ,  -79.7  ,
67.2  ,   51.3  ,  -36.62 , -109.25 ,  -43.34 ,   80.5  ,...
2025-04-27 05:11:19.343434 test begin: paddle.sum(Tensor([56, 97088],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([56, 97088],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 56 / 56 (100%)
Max absolute difference among violations: 241.6
Max relative difference among violations: 1.907
ACTUAL: array([ 34.28 ,  10.54 , -25.92 ,  -5.74 ,   8.01 , -14.54 ,  -5.777,
6.566,  16.6  ,   6.504, -10.125,   9.664,   3.99 , -14.17 ,
3.826,  -1.048,  -7.902,  13.   ,  -5.27 ,  -0.55 ,   7.03 ,...
DESIRED: array([  82.4  ,  -46.38 , -112.9  ,  -35.12 ,  162.   ,   32.94 ,
235.9  ,   85.94 ,   15.29 ,  -61.16 , -188.2  ,  -35.53 ,
2.807,   34.56 ,   -6.664, -105.2  ,   20.11 ,  -32.78 ,...
2025-04-27 05:11:20.175225 test begin: paddle.sum(Tensor([56, 97280],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([56, 97280],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 55 / 56 (98.2%)
Max absolute difference among violations: 222.4
Max relative difference among violations: 3.732
ACTUAL: array([  0.294 ,  20.69  ,  15.68  , -12.7   ,  17.95  , -10.914 ,
4.793 , -13.44  ,  -1.25  , -14.16  ,   2.969 ,  15.99  ,
-13.89  ,  11.91  ,   1.443 ,  12.33  , -24.52  ,  13.45  ,...
DESIRED: array([ -40.25 , -106.7  ,   15.77 ,  -73.8  ,  -64.44 ,  117.9  ,
7.266,   71.9  ,  -60.78 ,  -48.1  ,   67.94 ,  238.4  ,
-21.6  ,  129.8  , -122.06 ,   -9.09 ,    8.98 ,  -41.06 ,...
2025-04-27 05:11:38.394823 test begin: paddle.sum(Tensor([60, 102144],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([60, 102144],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 60 / 60 (100%)
Max absolute difference among violations: 255.1
Max relative difference among violations: 14.05
ACTUAL: array([-21.45  , -25.78  ,  -2.234 ,   3.607 ,  14.19  ,  -0.164 ,
-3.1   ,   5.062 ,   6.188 ,  -8.125 ,   4.246 , -13.766 ,
10.95  ,  -5.203 ,  -2.455 ,  16.25  ,  10.17  ,   4.22  ,...
DESIRED: array([  -1.426,   30.23 ,    1.806,  -35.84 ,  -64.5  ,  -68.4  ,
83.56 ,  105.25 ,  -61.34 , -142.1  ,  -23.6  , -120.94 ,
172.   ,    5.99 ,  121.94 , -159.2  ,  -48.16 ,   -5.74 ,...
2025-04-27 05:11:53.132846 test begin: paddle.sum(Tensor([60, 54400],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([60, 54400],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 60 / 60 (100%)
Max absolute difference among violations: 158.5
Max relative difference among violations: 2.928
ACTUAL: array([-24.16  ,   3.65  ,   3.027 ,   6.785 , -12.18  ,   5.035 ,
11.625 ,   3.893 ,  -7.84  ,   2.367 , -13.6   ,  13.81  ,
7.637 ,  -1.957 ,   8.234 ,  -3.008 , -26.86  ,  -7.59  ,...
DESIRED: array([ -47.88 ,   34.03 ,  -32.75 ,  -32.62 ,   36.16 ,  -66.1  ,
40.84 ,   35.8  ,  -64.4  ,   -1.39 ,   -3.463,  -43.6  ,
-38.6  ,   -8.35 ,  -16.8  ,   16.73 ,  -99.4  ,  -69.75 ,...
2025-04-27 05:11:53.819211 test begin: paddle.sum(Tensor([60, 56576],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([60, 56576],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 60 / 60 (100%)
Max absolute difference among violations: 186.5
Max relative difference among violations: 11.72
ACTUAL: array([ -1.633 ,  10.414 ,   1.963 ,  10.766 , -11.65  , -18.1   ,
20.73  ,   8.66  , -15.766 ,  -1.849 ,  -5.156 , -12.57  ,
-6.996 ,   8.445 ,  -5.082 ,   6.465 ,   2.377 ,   4.973 ,...
DESIRED: array([  21.9  ,   39.7  ,  -18.58 ,  -47.8  ,   32.6  ,   42.1  ,
-43.1  ,   -7.215,    1.471,  -81.6  ,  -10.27 ,   19.98 ,
-94.1  ,   34.8  ,  -47.4  ,  -37.2  ,  -35.62 ,  -30.34 ,...
2025-04-27 05:11:54.415316 test begin: paddle.sum(Tensor([60, 58752],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([60, 58752],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 60 / 60 (100%)
Max absolute difference among violations: 166.5
Max relative difference among violations: 10.52
ACTUAL: array([ -9.72  ,  -1.813 ,   1.414 ,   4.797 ,   9.    ,  -6.918 ,
4.035 , -22.92  ,   2.271 ,  18.98  ,   5.605 ,   8.57  ,
14.77  , -27.5   ,   2.133 ,  -4.863 ,   5.656 ,  10.62  ,...
DESIRED: array([   6.113 ,   31.    ,  -11.55  ,   13.414 ,   19.92  ,  -64.9   ,
-8.24  , -189.4   ,   15.44  ,   29.9   , -106.94  ,  -58.6   ,
-30.88  ,   -9.62  ,   17.    ,  -50.72  ,   65.44  ,  -15.586 ,...
2025-04-27 05:11:55.064620 test begin: paddle.sum(Tensor([60, 60800],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([60, 60800],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 60 / 60 (100%)
Max absolute difference among violations: 149.8
Max relative difference among violations: 4.312
ACTUAL: array([-15.87  ,   8.016 ,   5.137 ,  -9.5   , -21.6   ,   7.918 ,
-16.77  ,  -4.03  ,   0.4397,  -3.896 ,  16.39  ,   7.21  ,
18.02  ,  -1.265 ,  -2.129 ,   1.76  ,  -0.3833,  -9.79  ,...
DESIRED: array([ 131.9  ,  -77.1  ,    2.156,   62.3  ,  -13.125,   80.94 ,
-105.75 ,   57.47 ,   39.6  , -128.2  ,  115.8  ,   57.88 ,
-32.25 ,   26.17 ,  -32.22 ,   25.64 , -108.7  ,   99.4  ,...
2025-04-27 05:11:55.606399 test begin: paddle.sum(Tensor([60, 62400],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([60, 62400],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 60 / 60 (100%)
Max absolute difference among violations: 212.2
Max relative difference among violations: 15.08
ACTUAL: array([-23.77  , -10.03  , -17.69  ,  -5.875 ,   9.77  ,  -5.324 ,
4.8   ,   6.137 ,   8.39  ,  12.14  ,   3.908 ,   4.855 ,
18.11  ,  -3.88  ,  -1.219 ,  -5.992 ,  -6.    ,  -2.217 ,...
DESIRED: array([  27.55  ,   37.47  ,   20.31  ,  -13.97  ,  -48.78  ,  -33.1   ,
-69.8   ,  -57.03  ,   80.1   ,  -18.25  ,   78.1   ,   10.87  ,
-25.17  ,   56.75  ,   81.1   ,  -23.56  ,  -45.1   ,  -31.31  ,...
2025-04-27 05:11:56.176092 test begin: paddle.sum(Tensor([60, 63232],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([60, 63232],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 60 / 60 (100%)
Max absolute difference among violations: 248.4
Max relative difference among violations: 4.254
ACTUAL: array([ 20.36  ,  -9.79  ,  -9.36  ,  -5.875 ,  21.7   ,  15.19  ,
-13.29  ,   9.29  ,   0.9634, -14.664 ,  13.164 ,  -7.137 ,
-7.664 ,  12.25  ,   2.367 ,   6.17  , -38.3   ,  -4.69  ,...
DESIRED: array([  35.78 , -165.4  ,  -11.6  ,   -5.965,   -7.223,   15.96 ,
40.25 ,  -38.25 ,    9.31 , -105.7  ,  156.2  ,    8.3  ,
-15.21 ,   33.38 ,  -64.9  ,  -96.75 , -113.1  ,  -94.56 ,...
2025-04-27 05:11:56.777487 test begin: paddle.sum(Tensor([60, 63936],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([60, 63936],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 60 / 60 (100%)
Max absolute difference among violations: 156.4
Max relative difference among violations: 7.273
ACTUAL: array([ 16.86  , -19.25  ,   0.1558, -10.06  ,   5.7   , -12.375 ,
2.783 ,   8.89  ,   2.34  ,   8.51  , -14.555 , -10.195 ,
-6.01  ,  16.94  ,   1.246 , -12.76  , -10.    ,  -6.08  ,...
DESIRED: array([ 173.2   ,   18.5   ,   58.53  ,    7.2   ,   35.38  , -122.1   ,
23.12  ,   92.8   ,   10.305 ,   86.06  ,  -39.    , -118.8   ,
-47.25  ,   44.5   ,  -38.44  ,  -23.56  ,  -22.86  ,  -90.1   ,...
2025-04-27 05:11:57.450139 test begin: paddle.sum(Tensor([60, 64000],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([60, 64000],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 60 / 60 (100%)
Max absolute difference among violations: 213.2
Max relative difference among violations: 11.91
ACTUAL: array([-15.65  ,   2.008 ,  15.36  ,  -3.307 ,   7.38  ,  -3.307 ,
5.867 ,   3.52  ,  -5.14  ,   6.65  ,   7.664 ,   9.375 ,
0.0281,  -2.555 ,  -5.49  ,   7.965 ,  -9.57  , -10.61  ,...
DESIRED: array([ -52.38  ,  -12.06  ,  -12.234 ,  -90.5   ,  -28.    ,   51.72  ,
-14.68  ,  -18.38  ,  -63.7   ,   -4.023 ,  -21.44  ,   84.2   ,
28.4   ,   -6.426 ,    0.554 ,   41.22  , -111.75  ,  -12.87  ,...
2025-04-27 05:11:58.105189 test begin: paddle.sum(Tensor([60, 65600],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([60, 65600],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 59 / 60 (98.3%)
Max absolute difference among violations: 182.
Max relative difference among violations: 34.4
ACTUAL: array([ 15.74  , -24.16  ,  -3.904 ,  11.08  , -16.23  ,   2.246 ,
10.695 ,   4.848 , -14.28  ,   8.72  ,   5.246 ,  10.85  ,
-14.516 ,   4.984 ,  -1.785 ,   0.1708,  12.375 ,   4.543 ,...
DESIRED: array([ -76.    ,  -70.5   ,  -96.94  ,  -30.69  ,   30.84  ,  -17.19  ,
52.97  ,  -63.12  ,  -39.34  , -113.4   ,  104.75  ,  -44.44  ,
80.7   ,  -52.62  ,   -9.87  ,  -46.22  ,  171.9   ,   67.44  ,...
2025-04-27 05:11:58.726092 test begin: paddle.sum(Tensor([60, 65664],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([60, 65664],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 60 / 60 (100%)
Max absolute difference among violations: 137.2
Max relative difference among violations: 2.201
ACTUAL: array([-12.61  ,   2.871 ,   0.8325, -11.22  ,  15.05  ,  -4.395 ,
-6.22  ,  11.48  ,  -2.133 ,  -7.68  ,  13.56  ,  10.15  ,
-16.27  ,  -7.727 ,   1.992 ,  11.43  ,   9.85  , -23.7   ,...
DESIRED: array([ -39.   ,  -41.94 ,   32.22 , -118.8  ,   62.9  ,  -49.94 ,
-85.56 ,   96.44 ,   40.6  ,   65.06 ,   22.8  ,   48.7  ,
13.55 ,  -17.5  ,  -94.5  ,  -90.8  ,  -23.75 ,   59.16 ,...
2025-04-27 05:11:59.392405 test begin: paddle.sum(Tensor([60, 67200],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([60, 67200],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 60 / 60 (100%)
Max absolute difference among violations: 160.6
Max relative difference among violations: 12.65
ACTUAL: array([ -4.625  , -20.1    ,  -4.688  , -21.4    ,  11.266  ,   9.61   ,
-2.36   ,   6.34   , -23.25   ,   6.855  ,   2.156  ,  -4.16   ,
-1.662  ,  10.12   ,  21.     ,  -4.66   ,  -3.934  ,  -5.754  ,...
DESIRED: array([  -2.328,  -23.94 ,   49.44 ,    2.518,   63.   ,  129.8  ,
-71.06 ,   45.12 ,  -32.94 ,    6.723,  -38.53 ,  -21.25 ,
50.38 ,  -24.8  ,  129.   ,   -3.979,   84.94 ,   77.56 ,...
2025-04-27 05:12:00.008989 test begin: paddle.sum(Tensor([60, 67456],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([60, 67456],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 60 / 60 (100%)
Max absolute difference among violations: 202.9
Max relative difference among violations: 1.877
ACTUAL: array([ 20.06  , -10.88  ,   0.4412,   4.938 ,  -1.079 ,  -1.525 ,
2.41  ,  11.11  , -11.58  ,  -8.22  , -17.    ,  -9.805 ,
10.59  ,  12.64  , -11.71  ,   6.61  ,  -0.5254,   5.79  ,...
DESIRED: array([  68.7 ,  -52.16,  -35.6 ,    3.06,  -27.78,   16.62,   24.55,
65.5 ,   81.2 , -102.8 ,  -55.72,  -16.25,  -72.44,   20.75,
-56.78,   33.88,   68.6 ,   82.6 ,  -18.27,   30.55,  -57.22,...
2025-04-27 05:12:00.586161 test begin: paddle.sum(Tensor([60, 68224],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([60, 68224],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 60 / 60 (100%)
Max absolute difference among violations: 155.8
Max relative difference among violations: 6.977
ACTUAL: array([  2.719  ,  -5.336  ,  -6.562  ,  19.16   ,   1.59   ,  12.02   ,
0.156  , -16.36   , -21.03   , -18.66   ,  -2.096  , -18.47   ,
-9.93   ,   2.672  ,  25.69   ,  -2.625  ,   9.016  ,  10.31   ,...
DESIRED: array([  81.56 ,   18.73 ,  -30.17 ,   24.92 ,   61.84 ,  -28.58 ,
-62.2  ,   91.25 ,  -69.56 ,    7.17 ,   15.31 ,  -74.3  ,
-102.   ,  -52.   ,  110.3  ,  -20.7  ,  -42.75 ,   57.12 ,...
2025-04-27 05:12:01.295062 test begin: paddle.sum(Tensor([60, 73984],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([60, 73984],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 60 / 60 (100%)
Max absolute difference among violations: 164.8
Max relative difference among violations: 2.73
ACTUAL: array([  2.1   ,   2.867 ,  24.53  ,   4.18  , -14.98  , -11.984 ,
-4.348 ,   2.424 , -12.7   ,   1.341 ,   6.293 ,  15.234 ,
-2.182 ,  -8.25  , -10.07  ,  -2.7   ,  -5.54  ,   2.93  ,...
DESIRED: array([  18.   ,  -60.34 ,  144.6  ,  -24.06 ,  -66.56 ,  -88.44 ,
13.87 ,   13.805,  -91.7  ,  -59.38 ,   47.44 ,  144.2  ,
-65.8  ,  -19.78 ,  -21.8  ,  -13.695,  -28.48 ,  -55.1  ,...
2025-04-27 05:12:01.980937 test begin: paddle.sum(Tensor([60, 77824],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([60, 77824],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 60 / 60 (100%)
Max absolute difference among violations: 194.8
Max relative difference among violations: 2.346
ACTUAL: array([ -3.885 ,  -1.93  ,  -5.324 ,   3.418 ,   0.3523,  -4.633 ,
28.14  ,   6.152 ,  16.67  ,  20.95  ,   2.48  , -12.51  ,
-9.555 ,  -3.363 ,   4.176 ,   5.527 , -18.31  , -13.6   ,...
DESIRED: array([ 190.9  ,   12.91 , -122.3  ,   65.1  ,  -93.8  , -152.6  ,
129.8  ,   51.78 ,   25.47 ,   75.75 ,  -31.6  ,  -15.305,
-60.8  , -178.   ,  -56.4  ,  -96.   ,  -37.44 ,   96.56 ,...
2025-04-27 05:12:02.716769 test begin: paddle.sum(Tensor([60, 80512],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([60, 80512],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 60 / 60 (100%)
Max absolute difference among violations: 173.8
Max relative difference among violations: 259.2
ACTUAL: array([  0.7256 ,   0.08563,  15.1    ,   7.797  ,  -9.71   ,  10.53   ,
-10.93   , -14.13   ,  14.234  ,   4.73   ,  12.54   ,  13.33   ,
10.1    ,   0.791  ,  14.33   ,  -9.016  ,  15.55   ,  -6.645  ,...
DESIRED: array([ 1.7578e+01, -4.1000e+01,  9.1875e+01, -2.4266e+01, -2.6578e+01,
-6.2656e+01,  4.7344e+01, -6.5875e+01,  1.8612e+02,  1.0062e+02,
-3.1969e+01, -7.5688e+01, -3.3156e+01,  4.9258e+00, -1.5212e+02,...
2025-04-27 05:12:03.406151 test begin: paddle.sum(Tensor([60, 82688],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([60, 82688],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 60 / 60 (100%)
Max absolute difference among violations: 183.1
Max relative difference among violations: 6.008
ACTUAL: array([ 19.73  ,   8.164 ,  19.5   ,  -9.06  , -10.73  ,  -7.73  ,
1.6045,  -1.057 ,  -4.676 ,  -3.072 ,  -8.53  ,   6.555 ,
3.066 ,  -7.445 ,   9.75  ,   2.959 ,  17.58  ,  -7.293 ,...
DESIRED: array([  62.06 ,  -74.56 ,   15.03 ,  -68.1  ,   -1.53 , -133.6  ,
-109.   ,  -31.33 ,  -32.72 , -105.2  ,   -9.805,  -93.   ,
91.75 ,   17.5  ,  -82.4  ,  -98.1  ,  200.8  ,  -37.66 ,...
2025-04-27 05:12:04.141403 test begin: paddle.sum(Tensor([60, 84864],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([60, 84864],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 60 / 60 (100%)
Max absolute difference among violations: 236.8
Max relative difference among violations: 1.766
ACTUAL: array([  0.1678, -15.15  ,   7.492 , -27.2   ,  -9.43  ,   9.4   ,
-8.99  ,   9.32  ,   5.664 ,  -8.49  ,  14.53  ,  -5.43  ,
-25.02  ,  -2.04  ,  -0.6763,  -7.984 ,  -4.984 ,   0.3123,...
DESIRED: array([ -97.06 ,  221.6  ,   75.75 ,   35.5  ,  -30.1  ,    4.305,
-61.97 ,   79.44 ,   15.28 ,   38.6  ,  108.9  ,  -30.06 ,
-110.1  , -167.1  ,   18.56 ,  -37.56 ,    9.33 ,   59.25 ,...
2025-04-27 05:12:04.912552 test begin: paddle.sum(Tensor([60, 89984],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([60, 89984],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 59 / 60 (98.3%)
Max absolute difference among violations: 223.2
Max relative difference among violations: 3.396
ACTUAL: array([ -2.85   , -13.914  ,   1.07   , -10.305  , -12.05   , -24.84   ,
3.488  ,  -4.574  ,  -2.404  , -13.56   ,  -7.645  ,  -1.144  ,
-10.76   ,  -2.73   , -16.67   ,  -5.438  ,   2.02   , -10.445  ,...
DESIRED: array([ -21.06 ,  -10.484,   40.3  ,   77.94 , -111.25 ,   -5.65 ,
-42.06 ,  -78.06 ,  -79.8  ,  -80.6  ,   36.16 ,   86.56 ,
-36.56 ,   81.06 ,  -99.44 ,   86.3  ,  -65.06 ,   25.22 ,...
2025-04-27 05:12:05.696735 test begin: paddle.sum(Tensor([60, 91392],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([60, 91392],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 60 / 60 (100%)
Max absolute difference among violations: 194.8
Max relative difference among violations: 1.87
ACTUAL: array([ -6.457,  14.03 ,   3.955,  13.984, -13.69 , -10.91 ,  -4.883,
13.42 ,  -8.96 , -11.6  ,  -9.88 ,  22.19 ,   2.66 ,  -6.72 ,
-11.21 ,  -1.368,   9.62 , -18.61 ,  -7.58 ,   7.39 ,   5.29 ,...
DESIRED: array([ -15.77 ,  -99.7  ,  -75.5  ,  -36.34 ,   87.06 ,   38.56 ,
22.38 ,  136.6  ,  -75.8  ,   13.336,  107.7  ,  -45.4  ,
-172.2  ,  -38.1  ,  -36.53 ,   43.8  ,  116.2  ,  -44.94 ,...
2025-04-27 05:12:06.539640 test begin: paddle.sum(Tensor([60, 91840],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([60, 91840],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 60 / 60 (100%)
Max absolute difference among violations: 197.4
Max relative difference among violations: 7.92
ACTUAL: array([-15.625 ,  -2.67  ,   5.426 ,  -7.99  , -10.53  ,  17.28  ,
5.203 ,  -3.56  ,  -6.305 ,   1.483 ,  -1.736 , -16.69  ,
13.8   ,  -6.496 ,  11.41  ,  -6.03  ,  19.78  ,  20.53  ,...
DESIRED: array([  29.7   ,  -82.5   ,   75.3   ,  -58.97  ,  -66.06  ,   -2.604 ,
46.06  ,  177.    , -125.2   ,   51.84  ,  108.44  , -156.4   ,
4.883 ,  -14.016 ,  -59.94  ,   85.44  ,  208.6   ,   79.9   ,...
2025-04-27 05:12:07.374675 test begin: paddle.sum(Tensor([60, 92416],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([60, 92416],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 60 / 60 (100%)
Max absolute difference among violations: 200.5
Max relative difference among violations: 8.52
ACTUAL: array([ -1.757 ,   5.273 ,  -4.492 , -11.77  ,   4.203 ,  -0.574 ,
-0.37  ,  -2.205 , -17.67  ,  -3.426 ,   5.508 ,  -0.9326,
-4.086 ,  -7.2   ,  -6.58  ,   9.61  ,   3.117 ,   3.568 ,...
DESIRED: array([  35.25 ,   86.56 , -117.5  ,  -92.2  ,  -19.75 ,  -56.   ,
-182.4  ,   51.6  ,   18.48 ,  106.8  ,  -42.1  ,   33.8  ,
-104.   ,  -26.77 ,  -40.44 ,  176.   ,   23.73 ,   22.36 ,...
2025-04-27 05:12:08.143916 test begin: paddle.sum(Tensor([60, 94080],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([60, 94080],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 59 / 60 (98.3%)
Max absolute difference among violations: 194.8
Max relative difference among violations: 97.9
ACTUAL: array([-1.7922e+01, -1.0203e+01,  1.5344e+01,  6.5586e+00, -5.3203e+00,
6.5195e+00, -1.8625e+01, -6.9492e+00,  1.1203e+01, -1.3799e+00,
1.0438e+01, -5.0391e+00,  1.2727e+01, -6.8828e+00, -1.4824e+00,...
DESIRED: array([-3.4551e+00, -1.2788e+02, -2.8562e+01, -1.6391e+01,  1.1312e+02,
5.6062e+01, -9.2500e+01, -3.4375e+01, -3.6688e+01, -1.5788e+02,
-1.8425e+02, -1.3088e+02,  3.0375e+01,  3.5957e+00, -1.4999e-02,...
2025-04-27 05:12:08.894315 test begin: paddle.sum(Tensor([60, 94848],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([60, 94848],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 60 / 60 (100%)
Max absolute difference among violations: 199.4
Max relative difference among violations: 35.9
ACTUAL: array([ 10.62   , -13.48   ,  -3.621  ,   1.633  ,  -2.4    ,  -6.875  ,
-0.504  ,   0.4194 ,   2.098  , -14.06   ,   1.201  ,  11.555  ,
13.61   ,  12.78   , -17.28   ,  -2.639  ,  -6.645  ,  -9.4    ,...
DESIRED: array([ -74.    ,  -47.12  ,  -74.56  ,  -93.2   ,   21.17  ,  -34.9   ,
3.428 ,  -21.72  ,  -23.3   ,  -15.664 , -118.56  ,   60.6   ,
60.28  ,   -8.766 ,  -67.75  ,  105.75  , -172.2   , -145.4   ,...
2025-04-27 05:12:09.683259 test begin: paddle.sum(Tensor([60, 96768],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([60, 96768],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 60 / 60 (100%)
Max absolute difference among violations: 212.2
Max relative difference among violations: 1.624
ACTUAL: array([ -0.517 ,  -5.773 ,   1.864 , -19.12  ,   5.754 ,   7.93  ,
8.195 ,  -7.793 ,  -7.9   , -13.89  ,  -5.617 ,  -6.18  ,
3.32  ,   2.807 ,  12.336 ,  -7.35  , -17.1   ,   8.53  ,...
DESIRED: array([  10.43 ,  -57.1  , -120.56 ,  -49.38 ,    8.805,  141.1  ,
-13.88 ,   56.7  ,   62.38 , -226.1  ,  151.1  ,   18.84 ,
73.94 ,  -27.97 ,   99.56 ,  -60.6  ,  -37.56 ,  -56.22 ,...
2025-04-27 05:12:10.538881 test begin: paddle.sum(Tensor([60, 99712],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([60, 99712],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 60 / 60 (100%)
Max absolute difference among violations: 262.5
Max relative difference among violations: 662.
ACTUAL: array([  0.5146 ,  -0.11035,  15.164  ,   4.43   ,  14.6    ,   4.13   ,
1.326  ,  -5.242  ,  -9.83   ,  -9.15   , -14.75   ,   7.043  ,
17.03   ,   6.82   ,  -1.428  ,   7.305  ,   0.9443 ,   6.152  ,...
DESIRED: array([-5.044e+01, -2.406e+02,  1.370e+02, -9.581e+01, -4.894e+01,
-1.463e+01, -4.609e+01, -1.745e+02,  1.343e+01, -5.375e+00,
1.123e+02, -1.361e+02,  6.021e-01, -5.538e+01,  5.944e+01,...
2025-04-27 05:12:21.072704 test begin: paddle.sum(Tensor([64, 1000],"float16"), axis=-1, )
[accuracy error] paddle.sum(Tensor([64, 1000],"float16"), axis=-1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 60 / 64 (93.8%)
Max absolute difference among violations: 4.383
Max relative difference among violations: 5.004
ACTUAL: array([ -4.035 ,  16.75  ,  10.6   ,  -8.32  ,  -7.08  ,   2.094 ,
0.5205,   7.543 ,  -1.024 ,   1.586 , -11.8   ,  -0.635 ,
-2.357 ,   3.096 ,   3.38  ,   1.829 ,   5.766 ,  14.945 ,...
DESIRED: array([ -4.613 ,  19.14  ,  13.42  , -10.27  ,  -7.117 ,   2.19  ,
0.5376,   8.09  ,  -1.431 ,   1.726 , -13.93  ,   0.1584,
-2.354 ,   3.078 ,   4.07  ,   2.586 ,   7.99  ,  18.25  ,...
2025-04-27 05:12:21.438715 test begin: paddle.sum(Tensor([64, 102144],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([64, 102144],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 64 / 64 (100%)
Max absolute difference among violations: 292.2
Max relative difference among violations: 15.45
ACTUAL: array([ -6.04  ,  -0.958 ,  12.45  ,   4.652 ,  18.83  , -18.61  ,
-0.541 ,   7.793 ,  -0.6494,  10.414 ,   9.484 ,  -0.8096,
15.63  , -14.87  , -15.49  ,   9.83  ,  -1.956 , -11.414 ,...
DESIRED: array([-237.1  ,   66.06 ,    0.757,   24.1  ,  126.94 ,   18.2  ,
166.9  ,  138.   ,  -27.36 ,  -46.94 ,   11.98 ,   59.94 ,
-136.4  ,  -36.47 ,  -26.19 ,   72.06 ,  -86.56 ,  245.4  ,...
2025-04-27 05:12:30.802676 test begin: paddle.sum(Tensor([64, 26, 512, 1, 40],"float16"), tuple(3,4,), keepdim=False, )
[accuracy error] paddle.sum(Tensor([64, 26, 512, 1, 40],"float16"), tuple(3,4,), keepdim=False, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 18667 / 851968 (2.19%)
Max absolute difference among violations: 0.0703
Max relative difference among violations: 1885.
ACTUAL: array([[[-1.9617e-01, -5.9102e+00,  1.9434e+00, ...,  6.4307e-01,
2.6348e+00, -3.9199e+00],
[ 1.4316e+00,  1.2109e+00,  1.7080e+00, ...,  6.1182e-01,...
DESIRED: array([[[-1.9971e-01, -5.9492e+00,  1.9482e+00, ...,  6.4355e-01,
2.6719e+00, -3.9531e+00],
[ 1.4473e+00,  1.2295e+00,  1.7256e+00, ...,  6.1523e-01,...
2025-04-27 05:12:53.623511 test begin: paddle.sum(Tensor([64, 54400],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([64, 54400],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 64 / 64 (100%)
Max absolute difference among violations: 133.2
Max relative difference among violations: 3.67
ACTUAL: array([  9.41  ,  11.625 ,  -0.6416,  13.5   ,   3.994 ,   3.916 ,
-7.3   ,  -2.025 ,   1.803 , -15.39  ,   4.797 ,   0.5728,
2.145 ,  -0.4065,   1.829 , -15.445 ,  -8.65  ,   4.91  ,...
DESIRED: array([ -30.92 ,   66.25 ,  -57.12 ,   98.   ,  -27.6  ,   31.02 ,
4.836,  -56.94 ,   61.06 ,  -81.3  ,   26.7  , -119.7  ,
99.9  ,   -8.13 ,   -1.76 ,  -10.6  ,  -34.66 ,   51.2  ,...
2025-04-27 05:12:54.741280 test begin: paddle.sum(Tensor([64, 57600],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([64, 57600],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 64 / 64 (100%)
Max absolute difference among violations: 207.8
Max relative difference among violations: 17.2
ACTUAL: array([  4.082 ,  -7.965 , -12.664 ,  -3.225 ,   8.83  ,   1.111 ,
-0.1034,  -5.95  ,  10.92  ,  15.94  ,   4.33  ,  -1.098 ,
8.69  ,  -1.451 ,  21.27  ,   1.924 ,  -6.973 ,   3.498 ,...
DESIRED: array([  56.25  ,  -23.5   ,  -71.5   , -205.9   ,    9.6   ,   33.28  ,
-88.06  ,    6.645 ,   56.7   ,   22.14  ,  -50.78  ,   39.6   ,
-38.28  ,  -60.3   ,   22.67  ,   38.44  ,  -15.74  ,  -93.7   ,...
2025-04-27 05:12:55.776459 test begin: paddle.sum(Tensor([64, 60800],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([64, 60800],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 64 / 64 (100%)
Max absolute difference among violations: 172.6
Max relative difference among violations: 27.4
ACTUAL: array([-11.04  ,  -9.805 ,   6.13  , -11.26  ,   1.335 ,  22.47  ,
-8.13  ,   1.659 ,  -2.436 ,  14.03  ,  17.02  ,  17.77  ,
10.305 ,  -4.6   ,  -6.527 ,   7.86  ,  -7.336 , -26.06  ,...
DESIRED: array([ -51.9   ,  -97.6   ,   -2.682 ,   32.06  ,   83.6   ,    4.375 ,
-71.56  ,  -12.54  ,   36.53  ,   17.16  ,    7.824 ,   67.6   ,
49.34  ,   68.75  ,   22.06  , -106.5   ,   75.9   ,  -65.06  ,...
2025-04-27 05:12:56.769807 test begin: paddle.sum(Tensor([64, 62400],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([64, 62400],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 64 / 64 (100%)
Max absolute difference among violations: 138.8
Max relative difference among violations: 2.861
ACTUAL: array([  6.902 , -24.38  ,  -6.387 ,  11.43  ,  -2.963 ,   1.704 ,
7.73  ,  21.33  ,  -8.06  ,  -9.75  ,  -1.726 ,   1.578 ,
-5.84  ,  -7.477 ,   6.875 ,  15.09  ,   3.992 ,  -1.807 ,...
DESIRED: array([  37.78 ,  -99.06 ,  -93.94 ,   81.4  ,   23.6  ,  -77.2  ,
56.   ,  -41.75 , -106.   ,    8.18 ,  121.6  , -124.44 ,
-68.7  ,  -27.22 ,   39.88 ,   69.1  ,  -35.34 ,   51.25 ,...
2025-04-27 05:12:57.693153 test begin: paddle.sum(Tensor([64, 64000],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([64, 64000],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 64 / 64 (100%)
Max absolute difference among violations: 174.8
Max relative difference among violations: 16.61
ACTUAL: array([-15.15  ,  -9.98  ,  10.28  ,  17.27  ,  -8.805 ,  10.28  ,
-13.82  ,  -7.242 ,  -9.38  ,  -8.89  ,   8.305 ,  16.38  ,
-18.86  ,  -1.    ,   8.234 ,  -0.1503, -19.94  ,  10.33  ,...
DESIRED: array([-130.6  ,  -41.34 ,  115.56 ,  161.4  ,   97.94 , -164.5  ,
-56.5  ,  -41.97 ,  -49.66 ,   17.16 ,   53.62 ,   20.4  ,
-70.25 ,  -46.8  ,   11.86 ,   91.1  ,  -83.   ,  -12.945,...
2025-04-27 05:12:58.545516 test begin: paddle.sum(Tensor([64, 65664],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([64, 65664],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 64 / 64 (100%)
Max absolute difference among violations: 193.
Max relative difference among violations: 340.8
ACTUAL: array([-1.4289e+01,  2.2109e+00,  2.9395e+00,  1.3469e+01,  3.3887e+00,
3.1875e+01,  3.6172e+00,  1.8031e+01,  3.1469e+01,  1.9562e+01,
1.0570e+01, -3.3320e+00,  1.9312e+01,  2.5410e+00,  1.5000e+01,...
DESIRED: array([-3.5500e+01,  6.2156e+01,  7.0688e+01,  5.1094e+01, -1.3338e+02,
-1.4867e+01,  8.1562e+01,  5.2795e-02,  2.2250e+01,  5.8031e+01,
-6.6875e+01, -7.2227e+00, -4.3219e+01, -1.9050e+02,  9.1500e+01,...
2025-04-27 05:12:59.652780 test begin: paddle.sum(Tensor([64, 67200],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([64, 67200],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 64 / 64 (100%)
Max absolute difference among violations: 204.9
Max relative difference among violations: 10.336
ACTUAL: array([-19.64  ,   6.695 ,   2.63  ,   3.662 ,  19.77  ,  -6.133 ,
6.918 ,  -6.223 ,  -2.836 ,  29.16  ,  -9.75  ,   9.93  ,
-4.555 ,  10.84  , -10.42  ,  -1.347 ,   9.31  , -11.64  ,...
DESIRED: array([  28.86  ,  -46.9   ,   -0.5757,   22.5   ,   58.1   ,  101.3   ,
82.3   ,  -56.16  ,   77.6   ,   84.06  ,  -11.35  ,  214.8   ,
-90.94  ,   56.1   , -124.56  ,  -50.94  ,   74.25  ,  -20.08  ,...
2025-04-27 05:13:00.528272 test begin: paddle.sum(Tensor([64, 68224],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([64, 68224],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 64 / 64 (100%)
Max absolute difference among violations: 203.
Max relative difference among violations: 3.678
ACTUAL: array([ -1.385 ,   9.85  , -10.984 ,  -6.934 , -10.945 ,   0.6924,
-18.9   ,  -8.8   ,   9.39  ,  13.49  ,  -4.723 ,   1.861 ,
18.34  ,  -5.38  ,   1.653 ,   6.844 ,   5.18  ,  10.375 ,...
DESIRED: array([  47.88 ,   28.05 ,  -61.3  ,   21.12 ,  -46.5  ,   40.2  ,
-8.35 ,   99.75 ,  107.06 ,  -61.44 ,  -97.75 ,   54.84 ,
26.53 ,  -99.6  ,  -75.8  ,   42.1  ,   46.25 ,  158.2  ,...
2025-04-27 05:13:01.574491 test begin: paddle.sum(Tensor([64, 70528],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([64, 70528],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 64 / 64 (100%)
Max absolute difference among violations: 212.6
Max relative difference among violations: 257.5
ACTUAL: array([  8.71   ,   9.414  ,   0.686  ,   2.172  ,   1.829  , -25.95   ,
5.637  ,  -2.426  ,  -0.03418,  -5.48   ,  14.     ,  -6.504  ,
-1.068  ,  -0.4634 ,  -1.535  ,   8.27   , -21.5    ,   2.393  ,...
DESIRED: array([ 2.2138e+02,  3.5566e+00, -1.3912e+02,  7.3375e+01, -5.8359e+00,
-8.5875e+01, -4.4844e+00, -1.5612e+02, -3.0297e+01, -4.9531e+01,
9.2000e+01, -1.3075e+02, -3.1625e+01, -4.1969e+01,  7.4312e+01,...
2025-04-27 05:13:02.647571 test begin: paddle.sum(Tensor([64, 72960],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([64, 72960],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 64 / 64 (100%)
Max absolute difference among violations: 170.5
Max relative difference among violations: 1.936
ACTUAL: array([-14.07   ,  -2.102  ,  21.67   ,  -3.607  ,  -0.05966,  21.12   ,
-9.17   ,   5.95   , -18.69   ,  -6.055  ,  25.9    ,   2.297  ,
7.574  ,  -1.235  ,  13.805  ,   1.412  ,  34.8    ,  -1.535  ,...
DESIRED: array([-153.1  ,   34.56 ,   12.484,   53.22 ,  -67.7  ,   14.39 ,
-23.05 ,   38.44 , -189.1  ,   20.17 ,   23.38 ,  -71.06 ,
-35.47 ,   27.31 ,   72.5  ,   34.2  ,  139.5  , -112.2  ,...
2025-04-27 05:13:03.516803 test begin: paddle.sum(Tensor([64, 73984],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([64, 73984],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 64 / 64 (100%)
Max absolute difference among violations: 251.1
Max relative difference among violations: 1.907
ACTUAL: array([  6.69  , -12.67  , -30.47  ,   8.875 ,   4.797 ,   7.477 ,
1.696 , -15.05  ,   0.9746,   2.928 ,   2.926 ,  -6.64  ,
15.94  ,  -2.723 ,  14.234 , -14.48  ,  22.08  ,   7.355 ,...
DESIRED: array([  29.7  , -100.56 ,  -68.   ,   44.56 ,    6.695,  -17.25 ,
15.305,  -13.49 ,   82.4  ,    7.35 ,  -43.9  ,  -24.64 ,
36.28 ,  -49.75 ,   41.25 ,   40.06 ,  273.2  , -118.   ,...
2025-04-27 05:13:05.225178 test begin: paddle.sum(Tensor([64, 78336],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([64, 78336],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 64 / 64 (100%)
Max absolute difference among violations: 158.
Max relative difference among violations: 2.596
ACTUAL: array([ 5.7344e+00,  3.5703e+00,  1.7178e+00, -9.1562e+00, -1.7047e+01,
-1.5398e+01, -1.0420e+00, -1.4828e+01, -2.8457e+00,  4.7227e+00,
5.2422e+00,  1.1578e+01, -7.7539e+00, -1.7090e-02,  2.1924e-01,...
DESIRED: array([  50.28  ,  111.75  ,  -45.56  ,   70.75  ,   39.4   ,  -80.56  ,
3.123 ,  -42.12  ,  102.2   ,  139.1   ,   -5.492 ,   11.305 ,
-141.    ,   -0.3726,   22.8   ,  -85.9   ,  -93.8   ,  -62.12  ,...
2025-04-27 05:13:05.959239 test begin: paddle.sum(Tensor([64, 78400],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([64, 78400],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 64 / 64 (100%)
Max absolute difference among violations: 208.
Max relative difference among violations: 20.17
ACTUAL: array([  4.035 ,  -4.51  ,  10.805 ,   2.66  , -10.21  ,   1.686 ,
28.31  , -11.77  ,  -5.79  ,  -5.66  ,  -3.002 ,  -5.863 ,
0.2563,  -5.062 ,   4.73  ,  16.2   ,  -2.06  ,   9.84  ,...
DESIRED: array([ 137.1   ,  -36.88  ,   26.86  ,   70.56  ,    9.94  ,   -4.277 ,
27.92  ,   18.61  ,   59.34  ,   51.25  ,  -22.94  , -103.56  ,
108.94  , -177.1   ,  -73.7   ,   37.38  ,  181.6   ,   95.8   ,...
2025-04-27 05:13:09.525163 test begin: paddle.sum(Tensor([64, 82688],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([64, 82688],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 64 / 64 (100%)
Max absolute difference among violations: 146.4
Max relative difference among violations: 6.57
ACTUAL: array([ 11.73  ,   6.324 , -11.22  ,   7.117 , -14.87  , -15.31  ,
2.078 ,  -8.31  ,  -5.508 ,  -8.43  ,  -8.2   ,  11.1   ,
7.703 , -13.23  ,   7.734 ,  -8.    ,   8.18  ,  -0.785 ,...
DESIRED: array([-118.5  ,   79.25 ,  -10.18 , -120.8  ,  -12.67 ,  -29.53 ,
-102.6  ,   41.6  , -151.9  ,   55.3  ,   -7.59 ,   58.9  ,
123.94 ,    7.234,  109.8  ,   30.28 ,   28.92 ,  -51.47 ,...
2025-04-27 05:13:10.295551 test begin: paddle.sum(Tensor([64, 84864],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([64, 84864],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 64 / 64 (100%)
Max absolute difference among violations: 219.
Max relative difference among violations: 2.055
ACTUAL: array([  6.82  ,   0.777 ,   2.068 ,   4.355 ,  -8.99  ,  -7.727 ,
-0.654 ,  17.52  ,  -5.215 ,  -5.508 ,  -2.305 ,   0.1797,
7.9   ,  14.02  , -10.55  ,  -0.53  ,  -3.24  , -13.836 ,...
DESIRED: array([  55.62 ,  -73.9  ,   92.7  ,   40.03 , -228.   ,  -34.16 ,
-64.94 ,  128.5  ,   -9.32 ,  145.9  ,  119.94 ,  -18.53 ,
101.56 ,  -18.84 ,   77.5  ,    3.342,  154.1  ,   47.03 ,...
2025-04-27 05:13:11.066985 test begin: paddle.sum(Tensor([64, 86016],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([64, 86016],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 64 / 64 (100%)
Max absolute difference among violations: 200.8
Max relative difference among violations: 66.1
ACTUAL: array([ 1.2078e+01, -1.8057e+00, -1.4266e+01, -1.3306e-02, -1.5211e+01,
2.2422e+00,  1.4281e+01,  6.6406e+00, -1.2633e+01,  2.3418e+00,
8.5000e+00,  1.7047e+01, -2.6367e-01, -3.4521e-01, -3.9590e+00,...
DESIRED: array([ -16.5   ,   46.47  ,  -20.5   ,   84.7   ,   74.6   ,   11.69  ,
-60.94  ,  119.4   ,  -13.71  ,   85.25  ,  -96.56  ,    9.13  ,
6.867 ,    7.484 , -106.3   , -110.06  ,   23.4   ,  -23.52  ,...
2025-04-27 05:13:11.975936 test begin: paddle.sum(Tensor([64, 87552],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([64, 87552],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 64 / 64 (100%)
Max absolute difference among violations: 202.
Max relative difference among violations: 5.45
ACTUAL: array([ -1.296 ,  22.25  ,   5.906 , -12.55  ,   1.681 , -11.08  ,
18.72  ,   3.326 ,   6.133 ,  -9.91  , -13.66  ,   8.81  ,
-7.777 ,   6.992 ,   4.914 ,   7.97  ,  -3.215 ,  -0.5625,...
DESIRED: array([-121.94 ,  -18.31 ,  -79.7  ,  189.5  ,   26.1  ,  129.1  ,
105.06 , -120.3  ,  -37.66 ,    2.227,  -53.9  ,  -26.92 ,
100.94 ,  -37.4  ,  -10.44 ,   71.56 ,   68.3  ,    4.562,...
2025-04-27 05:13:12.791390 test begin: paddle.sum(Tensor([64, 89216],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([64, 89216],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 64 / 64 (100%)
Max absolute difference among violations: 237.8
Max relative difference among violations: 11.83
ACTUAL: array([-14.1   ,   0.5825,  18.39  ,  -8.336 ,  22.89  ,   4.42  ,
4.188 , -12.    ,   5.61  ,  19.23  ,  -3.947 ,  -7.    ,
-5.855 ,  -1.902 ,  17.97  ,  28.6   ,  -7.664 ,   9.6   ,...
DESIRED: array([ -39.4   ,   75.7   ,  165.8   ,   29.42  ,   80.3   ,  226.2   ,
-46.1   ,  -81.3   ,  -81.6   ,  257.    ,    5.992 ,  -64.06  ,
-71.6   , -100.25  ,  -98.25  ,  169.8   ,   -2.379 ,   75.6   ,...
2025-04-27 05:13:13.665568 test begin: paddle.sum(Tensor([64, 89984],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([64, 89984],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 64 / 64 (100%)
Max absolute difference among violations: 244.1
Max relative difference among violations: 1.808
ACTUAL: array([-12.81  ,   1.    ,  -1.696 , -36.2   ,  -6.094 , -15.66  ,
4.695 ,   1.668 ,  12.37  ,  12.86  ,  21.6   ,   2.568 ,
7.582 ,  -6.387 ,  -3.635 ,  -6.543 ,  -5.96  ,  -9.64  ,...
DESIRED: array([-131.8  , -117.5  ,   42.78 , -184.5  ,  -36.25 ,   -7.156,
120.7  ,   58.12 , -152.1  ,   48.8  ,   53.2  ,  -69.6  ,
-62.97 , -161.2  ,  -23.27 ,   18.67 ,  -27.52 , -253.8  ,...
2025-04-27 05:13:14.521420 test begin: paddle.sum(Tensor([64, 91392],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([64, 91392],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 64 / 64 (100%)
Max absolute difference among violations: 246.5
Max relative difference among violations: 5.59
ACTUAL: array([ -7.62  ,  15.28  ,  -1.914 ,   8.63  ,  22.47  ,   7.797 ,
-6.848 ,   2.45  ,  -3.484 ,  -2.486 ,  11.33  ,   3.178 ,
11.44  ,  -9.164 ,   2.455 ,  -5.406 ,  -1.266 , -13.195 ,...
DESIRED: array([ -16.11 ,  147.   ,   -5.03 ,  -19.11 ,  -77.06 ,   74.06 ,
-49.1  ,  -71.2  ,   37.28 ,   31.75 ,    4.78 ,  -61.84 ,
250.2  , -104.4  ,   66.8  , -163.5  ,   97.4  ,  -17.45 ,...
2025-04-27 05:13:15.366455 test begin: paddle.sum(Tensor([64, 92352],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([64, 92352],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 64 / 64 (100%)
Max absolute difference among violations: 198.
Max relative difference among violations: 7.36
ACTUAL: array([  3.777 ,   8.32  ,  -2.854 ,   1.446 , -13.67  ,  13.016 ,
3.812 ,  -0.6265,  14.57  , -13.58  ,  17.2   ,   8.27  ,
3.012 ,   1.128 , -14.45  , -15.94  ,   6.69  , -16.48  ,...
DESIRED: array([ -41.2  ,  105.25 ,   96.75 ,   57.03 ,  -77.56 ,   50.88 ,
192.4  ,  101.1  ,   91.06 ,    4.98 ,  126.25 ,  131.5  ,
-5.41 ,  -51.38 ,  -10.125,  -47.84 ,  -49.28 ,  -24.72 ,...
2025-04-27 05:13:16.201699 test begin: paddle.sum(Tensor([64, 92416],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([64, 92416],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 64 / 64 (100%)
Max absolute difference among violations: 266.8
Max relative difference among violations: 4.46
ACTUAL: array([ 11.09   , -10.11   , -16.23   ,   7.996  ,   9.805  , -14.805  ,
-4.117  ,   0.986  ,  -7.957  ,   2.2    ,  15.805  ,  11.12   ,
20.28   ,   6.95   ,  -3.271  ,  -8.64   ,  20.33   ,   9.62   ,...
DESIRED: array([-118.5   ,  163.    ,  -89.8   ,  -66.9   ,  -75.7   , -140.2   ,
-47.8   ,   28.34  ,  103.5   ,  -52.53  ,   36.7   ,  -35.5   ,
287.    ,    5.895 ,   -0.7104,  -12.94  ,   49.22  ,  175.    ,...
2025-04-27 05:13:17.054633 test begin: paddle.sum(Tensor([64, 94080],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([64, 94080],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 64 / 64 (100%)
Max absolute difference among violations: 246.8
Max relative difference among violations: 166.5
ACTUAL: array([-7.668e+00, -1.181e+01,  5.957e+00,  5.426e+00, -2.188e+01,
-1.134e+01, -6.461e+00,  1.427e+01,  9.438e+00,  4.055e+00,
9.541e-01, -2.490e+00,  1.573e+01, -1.538e+01,  1.795e+00,...
DESIRED: array([-2.6016e+01, -1.8734e+01,  1.9375e+02, -6.8250e+01, -1.0141e+01,
5.7969e+01,  6.8438e+01,  7.8938e+01,  1.3612e+02,  3.3031e+01,
4.4727e+00, -6.6000e+01,  5.4875e+01,  7.3438e+01, -8.7625e+01,...
2025-04-27 05:13:17.882003 test begin: paddle.sum(Tensor([64, 97280],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([64, 97280],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 64 / 64 (100%)
Max absolute difference among violations: 185.9
Max relative difference among violations: 19.23
ACTUAL: array([ -2.783  ,  -5.918  ,  10.31   ,   0.3828 ,   8.77   , -25.39   ,
-28.6    ,   6.332  , -16.11   ,  -8.945  ,   7.066  , -14.79   ,
-6.76   ,  16.     , -10.03   ,  -0.8667 , -15.41   ,  -0.8315 ,...
DESIRED: array([ -85.44 ,   70.9  , -125.56 , -156.9  ,  -30.11 ,  -24.77 ,
-114.2  ,   59.97 , -107.7  ,    7.902,  -25.88 , -173.   ,
-46.38 ,  190.8  ,  -88.75 ,  126.25 , -100.8  ,    3.07 ,...
2025-04-27 05:13:18.795308 test begin: paddle.sum(Tensor([64, 99712],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([64, 99712],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 64 / 64 (100%)
Max absolute difference among violations: 255.6
Max relative difference among violations: 14.96
ACTUAL: array([ -5.82   ,  -6.36   ,  -2.17   ,  18.72   ,  17.06   ,  12.99   ,
4.82   ,  -1.07   ,  -5.875  , -14.195  ,  -3.996  ,  -0.856  ,
5.99   ,  -4.48   , -11.42   ,  -3.164  , -11.21   ,   4.84   ,...
DESIRED: array([ 195.4   ,   38.97  ,   53.16  ,   88.2   ,  173.4   ,   16.73  ,
36.88  ,   54.8   ,   23.31  ,   89.7   ,  -71.4   ,   26.58  ,
1.643 , -145.    ,  -64.2   , -202.9   , -105.06  ,  110.44  ,...
2025-04-27 05:13:19.664151 test begin: paddle.sum(Tensor([640, 1000],"float16"), axis=-1, )
[accuracy error] paddle.sum(Tensor([640, 1000],"float16"), axis=-1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 629 / 640 (98.3%)
Max absolute difference among violations: 5.125
Max relative difference among violations: 86.
ACTUAL: array([ 2.2441e+00, -3.8809e+00,  2.6816e+00, -1.0719e+01,  6.4922e+00,
8.6328e+00,  1.4328e+01,  5.4492e-01,  2.2109e+00, -9.1641e+00,
-1.6602e+00, -2.5137e+00, -2.1738e+00,  6.5547e+00, -2.3047e+00,...
DESIRED: array([ 2.6641e+00, -3.9863e+00,  2.1445e+00, -1.1836e+01,  6.7383e+00,
1.0305e+01,  1.6016e+01,  4.2163e-01,  4.3984e+00, -1.1219e+01,
-2.1836e+00, -3.8164e+00, -2.5957e+00,  7.8086e+00, -2.6270e+00,...
2025-04-27 05:13:30.900467 test begin: paddle.sum(Tensor([68, 102144],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([68, 102144],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 68 / 68 (100%)
Max absolute difference among violations: 220.1
Max relative difference among violations: 19.9
ACTUAL: array([-13.805 ,   2.453 ,   3.932 ,  -5.56  ,  -3.537 ,   2.176 ,
10.32  ,  -9.51  ,  -6.684 ,  11.336 ,   4.76  , -10.83  ,
-2.275 , -16.31  ,   5.105 ,  26.28  , -16.53  , -19.36  ,...
DESIRED: array([ -63.34  ,   13.64  ,  -52.8   , -119.94  ,   53.4   ,   53.12  ,
18.25  ,   47.84  ,  -93.7   ,  -62.22  ,   -9.52  ,   54.53  ,
108.94  ,  -34.38  ,   43.56  ,   -1.39  ,   36.66  ,  -80.3   ,...
2025-04-27 05:13:31.825555 test begin: paddle.sum(Tensor([68, 112896],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([68, 112896],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 68 / 68 (100%)
Max absolute difference among violations: 261.
Max relative difference among violations: 6.277
ACTUAL: array([ -3.52   ,   4.137  ,  -0.49   ,  16.97   ,   1.232  ,   0.3801 ,
-2.531  ,   1.046  ,  13.555  ,   7.246  ,  -5.914  ,  30.69   ,
13.91   ,   0.2009 ,  -7.785  , -15.445  ,  -3.664  ,  -6.15   ,...
DESIRED: array([  -4.34 ,   18.86 ,   77.5  ,  -28.3  ,   41.84 ,  -82.5  ,
-79.56 ,   18.12 ,  128.8  , -115.7  ,  -68.4  ,   64.75 ,
-67.25 ,   80.44 , -155.2  , -114.06 ,   14.17 ,   20.47 ,...
2025-04-27 05:13:47.903572 test begin: paddle.sum(Tensor([68, 54400],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([68, 54400],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 68 / 68 (100%)
Max absolute difference among violations: 191.1
Max relative difference among violations: 5.152
ACTUAL: array([ -7.77  ,  -0.6255,  -8.63  ,  -5.58  ,   6.848 ,   0.9785,
-5.44  ,  -6.832 ,  -4.98  ,  -2.451 ,  17.45  ,   2.412 ,
-2.793 ,   8.07  ,   0.68  ,  -6.383 ,   3.432 , -12.4   ,...
DESIRED: array([ -17.66  ,   31.39  ,    2.078 ,   36.53  ,   34.1   ,  192.1   ,
16.48  ,  -64.4   ,  -35.34  ,   -1.462 ,  113.3   , -134.4   ,
24.92  ,   65.4   ,    0.247 ,   62.66  ,    3.363 ,   12.94  ,...
2025-04-27 05:13:48.544075 test begin: paddle.sum(Tensor([68, 60800],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([68, 60800],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 68 / 68 (100%)
Max absolute difference among violations: 167.
Max relative difference among violations: 5.42
ACTUAL: array([ 6.8652e-01, -4.4570e+00,  7.2617e+00, -5.5820e+00, -1.8062e+01,
2.4316e+00,  1.2148e+00,  2.8984e+01,  1.6297e+01,  8.9531e+00,
-2.4844e+01, -8.0703e+00, -1.3359e+01,  4.3115e-01,  8.8359e+00,...
DESIRED: array([  -6.72  ,    2.57  ,  114.25  ,  -57.2   ,  -49.03  ,   40.16  ,
101.5   ,  -10.16  ,   44.25  ,  -38.72  ,  -65.94  ,    6.098 ,
-8.63  ,  -57.3   ,  109.5   ,   39.06  ,  -64.5   ,   21.1   ,...
2025-04-27 05:13:49.278560 test begin: paddle.sum(Tensor([68, 63232],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([68, 63232],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 68 / 68 (100%)
Max absolute difference among violations: 169.5
Max relative difference among violations: 3.188
ACTUAL: array([  5.418  ,   7.45   ,  -6.836  ,  -0.10693,  11.305  ,  13.3    ,
8.125  ,  -1.884  ,  -6.2    ,   3.63   , -14.84   ,   5.723  ,
11.02   ,  -1.739  ,  11.78   ,   7.676  ,   1.759  ,  -0.7173 ,...
DESIRED: array([  61.38 ,   80.7  ,   42.44 ,   12.78 ,  104.6  ,  -61.88 ,
106.8  ,   47.34 ,   -8.13 , -118.94 ,  -82.6  ,  -30.27 ,
24.08 ,   54.62 ,   44.72 ,  100.2  ,   -2.748,  -70.75 ,...
2025-04-27 05:13:50.001809 test begin: paddle.sum(Tensor([68, 64000],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([68, 64000],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 67 / 68 (98.5%)
Max absolute difference among violations: 164.4
Max relative difference among violations: 20.
ACTUAL: array([  6.926  ,   8.89   ,   6.918  ,  -1.306  , -12.266  ,   1.154  ,
18.19   , -11.67   ,   3.55   ,  23.78   ,  -5.01   ,   4.34   ,
-16.73   ,   4.13   ,  -3.623  , -15.625  ,  14.055  ,  -5.95   ,...
DESIRED: array([ -10.234, -143.8  ,   89.6  ,   27.53 , -115.25 ,  -37.53 ,
123.44 , -134.1  ,   15.4  ,   35.34 ,   59.88 ,   -7.67 ,
-149.4  ,  -49.4  ,  -33.06 ,  -26.64 ,   74.9  ,   38.5  ,...
2025-04-27 05:13:50.636712 test begin: paddle.sum(Tensor([68, 65600],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([68, 65600],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 68 / 68 (100%)
Max absolute difference among violations: 158.
Max relative difference among violations: 8.14
ACTUAL: array([ 1.4062e+01, -1.4492e+01, -5.2812e+00, -2.5605e+00,  1.1145e-01,
1.1234e+01, -8.5781e+00,  5.5586e+00, -3.9102e+00, -6.0430e+00,
3.2324e+00, -4.3867e+00,  6.8711e+00,  1.6885e+00, -2.2281e+01,...
DESIRED: array([  20.95  ,  138.5   ,    0.7397,  -27.67  ,  103.75  , -116.3   ,
-35.38  ,    8.93  ,  -52.    ,  -61.38  ,   60.7   ,   64.1   ,
-38.34  ,  -35.28  ,   -7.562 ,  114.44  ,   59.94  ,  -38.    ,...
2025-04-27 05:13:51.378682 test begin: paddle.sum(Tensor([68, 67200],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([68, 67200],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 68 / 68 (100%)
Max absolute difference among violations: 203.6
Max relative difference among violations: 5.395
ACTUAL: array([-2.0156e+00,  3.7441e+00, -1.4562e+01, -9.4297e+00, -7.5928e-02,
1.6016e+01, -3.5703e+00,  6.4141e+00, -1.8760e+00,  1.0203e+01,
4.5703e+00,  7.2344e+00, -3.7031e+00, -3.5703e+00,  9.8672e+00,...
DESIRED: array([-146.   ,  -54.28 ,  -47.5  ,  -35.75 ,   -5.266,  -19.2  ,
-53.75 ,  -12.08 ,   76.25 , -108.75 ,  130.8  , -131.   ,
65.   ,   24.17 ,  -56.94 ,   22.31 ,  -74.44 ,  -86.9  ,...
2025-04-27 05:13:52.097140 test begin: paddle.sum(Tensor([68, 72960],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([68, 72960],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 68 / 68 (100%)
Max absolute difference among violations: 166.
Max relative difference among violations: 9.27
ACTUAL: array([ 11.91  ,   2.523 ,   5.656 ,  -5.03  ,  -2.904 ,  19.39  ,
1.372 ,  -1.94  ,   1.72  ,  -9.83  ,   9.67  ,  -5.414 ,
-7.098 , -14.56  ,  -3.033 ,   1.579 , -16.    ,  -0.7188,...
DESIRED: array([ 131.5  ,   29.81 ,  -11.75 ,   78.75 ,  144.5  ,   68.5  ,
-3.396,   44.1  ,  -27.28 ,   41.8  ,   68.25 ,  160.6  ,
-48.3  ,   35.62 ,   71.8  ,   -6.062,  -21.81 ,  -30.53 ,...
2025-04-27 05:13:52.892916 test begin: paddle.sum(Tensor([68, 73984],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([68, 73984],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 68 / 68 (100%)
Max absolute difference among violations: 203.8
Max relative difference among violations: 13.87
ACTUAL: array([  3.264 ,   7.53  ,  -1.94  ,   2.262 ,  -2.13  , -16.56  ,
1.142 ,   1.596 ,  27.06  ,  -2.742 ,  14.99  , -13.84  ,
9.64  , -25.23  ,   4.152 , -13.664 ,  -8.234 ,   2.443 ,...
DESIRED: array([ 2.1960e-01,  5.2938e+01, -1.4388e+02,  2.9672e+01, -2.5672e+01,
-5.4312e+01, -6.6875e+01, -1.1781e+02,  2.3075e+02,  9.9188e+01,
-4.4281e+01, -1.2719e+02,  6.2500e+01,  6.3406e+01,  1.9888e+02,...
2025-04-27 05:13:53.638967 test begin: paddle.sum(Tensor([68, 76160],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([68, 76160],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 68 / 68 (100%)
Max absolute difference among violations: 207.
Max relative difference among violations: 5.39
ACTUAL: array([  0.758 ,  -0.1558,  11.26  ,  -6.336 ,   4.133 ,  -7.547 ,
-16.08  ,   3.725 ,   7.465 ,  -0.8843,  12.96  ,   0.5444,
-16.38  ,  23.47  ,   2.219 , -11.53  ,  -0.2976, -11.5   ,...
DESIRED: array([  -2.76 ,  -56.   ,    5.17 ,   78.4  ,  -46.53 ,  -36.28 ,
-27.84 ,   -4.035,  -10.34 ,   40.3  ,   82.2  ,   47.9  ,
36.   ,  -69.25 ,    4.17 ,   -8.84 ,  -31.69 ,    9.836,...
2025-04-27 05:13:54.439447 test begin: paddle.sum(Tensor([68, 77824],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([68, 77824],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 68 / 68 (100%)
Max absolute difference among violations: 280.8
Max relative difference among violations: 12.54
ACTUAL: array([  1.041 , -19.7   ,  15.766 ,  11.24  , -19.2   ,  -2.396 ,
5.273 ,  16.06  ,   2.527 ,   5.79  ,  21.4   ,  -9.18  ,
7.176 ,  -5.69  ,  10.02  ,   7.625 ,  14.48  ,  -0.874 ,...
DESIRED: array([  22.19  ,  -93.8   ,   74.06  ,  -60.28  ,  -33.16  ,  -31.1   ,
16.61  ,  -28.84  ,   43.7   ,    8.375 ,   76.56  ,  -40.72  ,
45.97  , -168.9   ,   45.25  ,  -13.766 ,  -42.5   ,   30.92  ,...
2025-04-27 05:13:55.279004 test begin: paddle.sum(Tensor([68, 78336],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([68, 78336],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 68 / 68 (100%)
Max absolute difference among violations: 171.5
Max relative difference among violations: 3.377
ACTUAL: array([ -4.668  ,   1.134  ,   4.727  ,  15.45   ,  -2.03   , -23.11   ,
3.045  ,  13.33   ,  20.31   ,  -1.4795 ,   8.63   ,  13.37   ,
22.92   , -11.4    , -18.88   , -16.61   ,   4.28   ,   1.205  ,...
DESIRED: array([ 162.8  ,  -87.75 ,   41.   ,   96.   ,  -47.3  ,  -29.03 ,
115.25 ,  161.1  ,   46.28 ,  -51.88 ,  -92.44 ,   22.4  ,
52.56 ,   -4.465,  -42.97 ,  -41.25 ,  129.2  ,  -77.44 ,...
2025-04-27 05:13:56.118504 test begin: paddle.sum(Tensor([68, 80256],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([68, 80256],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 68 / 68 (100%)
Max absolute difference among violations: 245.4
Max relative difference among violations: 3.42
ACTUAL: array([ -4.043 ,  -6.59  , -19.9   ,  16.67  ,  20.25  ,  19.73  ,
-16.53  ,  -2.338 ,  -8.375 ,   6.33  , -10.414 ,  -7.945 ,
-10.21  ,  -5.418 ,   1.752 , -14.414 ,  17.81  ,   2.523 ,...
DESIRED: array([  34.    , -168.1   ,  -93.56  ,   40.    ,   72.8   ,  231.5   ,
31.05  ,  -26.8   ,  -40.6   ,  -77.1   ,  -83.44  ,   -4.375 ,
20.86  ,   19.4   ,   93.2   , -175.5   ,  -24.27  ,  -48.47  ,...
2025-04-27 05:13:56.879947 test begin: paddle.sum(Tensor([68, 82688],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([68, 82688],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 68 / 68 (100%)
Max absolute difference among violations: 171.4
Max relative difference among violations: 21.19
ACTUAL: array([ -1.929 ,   8.45  ,   4.26  ,  15.83  , -18.38  , -11.484 ,
-16.89  ,   4.375 ,  -8.195 ,  12.3   ,   2.668 ,   3.5   ,
11.13  ,  14.79  ,  -1.664 ,  11.305 ,   1.243 ,  11.67  ,...
DESIRED: array([ -37.1   ,  -47.56  ,  -33.44  ,  -36.12  ,  -90.9   ,  -97.    ,
27.97  ,   23.45  ,   34.22  ,   55.84  ,   36.3   ,   17.94  ,
108.94  ,  154.9   ,    6.746 ,   92.3   ,    0.8467,   32.53  ,...
2025-04-27 05:13:57.691846 test begin: paddle.sum(Tensor([68, 89216],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([68, 89216],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 68 / 68 (100%)
Max absolute difference among violations: 237.1
Max relative difference among violations: 29.22
ACTUAL: array([  6.625 ,   7.613 ,   7.105 ,  13.82  ,   3.398 ,  -1.659 ,
-11.16  ,   8.625 ,  -6.42  ,  -3.344 ,  -1.474 ,   5.824 ,
8.84  ,  -2.357 , -21.44  ,  22.39  ,   9.55  ,  -4.227 ,...
DESIRED: array([-9.8750e+00,  4.0344e+01, -3.9492e+00,  1.5500e+02,  1.0569e+02,
1.2988e+02, -1.3362e+02,  4.0062e+01, -1.2038e+02, -2.6672e+01,
6.9875e+01, -1.0475e+02,  4.1781e+01, -7.9875e+01, -1.5262e+02,...
2025-04-27 05:13:58.560633 test begin: paddle.sum(Tensor([68, 89984],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([68, 89984],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 68 / 68 (100%)
Max absolute difference among violations: 206.6
Max relative difference among violations: 5.496
ACTUAL: array([ 10.766 ,   5.027 ,   6.594 ,  22.08  ,   1.585 ,  -0.979 ,
9.15  ,  -1.381 ,  -1.335 , -13.54  ,  20.12  ,  13.28  ,
7.555 ,  -2.256 ,  -9.81  ,   3.41  ,  -8.32  , -14.63  ,...
DESIRED: array([-112.8  ,   -8.73 ,   34.75 ,  157.6  ,    6.46 ,  148.1  ,
49.12 ,   -9.84 ,    6.113,   24.88 ,  -79.3  ,   66.2  ,
-22.78 ,   20.19 ,  -51.53 ,   -9.6  ,  -88.75 , -221.2  ,...
2025-04-27 05:13:59.400263 test begin: paddle.sum(Tensor([68, 91392],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([68, 91392],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 68 / 68 (100%)
Max absolute difference among violations: 219.9
Max relative difference among violations: 14.55
ACTUAL: array([  9.555  , -16.45   ,  -2.266  ,   7.656  , -16.52   ,  16.97   ,
5.68   ,  10.35   ,  -8.93   , -22.17   ,   4.887  ,   3.35   ,
-9.45   ,   4.65   , -18.94   ,   7.855  , -27.52   , -15.75   ,...
DESIRED: array([-207.4  ,   68.56 ,  -11.92 ,  101.2  ,   31.47 ,   59.97 ,
-36.34 ,   52.56 ,  -64.94 ,   57.22 ,   92.9  ,  -72.9  ,
-126.3  ,   11.72 ,  -99.56 ,    8.53 , -174.8  , -166.5  ,...
2025-04-27 05:14:00.245882 test begin: paddle.sum(Tensor([68, 92352],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([68, 92352],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 68 / 68 (100%)
Max absolute difference among violations: 185.5
Max relative difference among violations: 49.78
ACTUAL: array([ -1.996, -10.36 , -21.14 , -11.26 ,   3.393,  -6.938,  -6.11 ,
-10.18 ,  10.82 ,  13.79 ,  19.55 , -13.055, -17.36 ,  15.17 ,
-11.06 , -13.21 ,  -7.1  ,   6.13 ,   6.24 ,   2.396,   4.453,...
DESIRED: array([  17.19 ,   14.54 , -195.1  , -123.94 ,  107.3  ,   72.6  ,
-59.2  ,   11.71 ,  161.2  ,   51.75 ,   40.28 ,   -0.257,
-131.2  ,   -5.543,    8.11 , -125.75 ,  -24.05 ,   73.5  ,...
2025-04-27 05:14:01.049255 test begin: paddle.sum(Tensor([68, 92416],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([68, 92416],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 68 / 68 (100%)
Max absolute difference among violations: 233.4
Max relative difference among violations: 16.22
ACTUAL: array([ 11.06   ,   3.482  ,  10.38   ,  -6.74   ,   2.17   , -10.414  ,
-4.594  , -10.445  , -12.02   ,   2.873  ,   3.977  ,   0.10864,
-5.676  ,  -3.162  ,   7.645  ,  -4.66   ,  20.94   ,  -9.98   ,...
DESIRED: array([-114.4  ,  112.06 ,   77.   ,   -7.785,  114.56 ,  -60.34 ,
34.16 ,  -73.8  ,   59.44 ,  -20.66 ,   46.1  ,  -86.   ,
6.41 ,  -72.7  ,   13.15 ,   56.8  ,   -1.376,  -55.6  ,...
2025-04-27 05:14:01.873778 test begin: paddle.sum(Tensor([68, 94080],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([68, 94080],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 68 / 68 (100%)
Max absolute difference among violations: 287.
Max relative difference among violations: 1.992
ACTUAL: array([ -0.9683,   1.789 ,  -7.438 ,  -2.025 , -12.78  ,  -1.071 ,
-2.512 ,   7.793 , -10.95  , -12.55  ,  -4.902 ,   1.83  ,
10.4   ,   4.727 ,   0.636 ,  -6.94  ,   3.654 , -14.3   ,...
DESIRED: array([   9.53 , -285.2  ,  -50.25 ,  -18.31 ,  -58.16 ,   18.98 ,
-26.61 ,  136.5  ,   94.6  ,   12.64 ,  -20.66 ,  -12.89 ,
-90.06 ,  -79.06 ,   18.62 ,   30.   ,  -93.   , -181.2  ,...
2025-04-27 05:14:02.675653 test begin: paddle.sum(Tensor([68, 94848],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([68, 94848],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 67 / 68 (98.5%)
Max absolute difference among violations: 201.4
Max relative difference among violations: 3.44
ACTUAL: array([ -8.516 , -13.49  ,   3.086 , -15.336 ,   0.5854, -11.04  ,
14.86  ,  14.88  ,  -0.3452,  -4.24  ,  14.03  ,   0.4114,
12.88  ,  -1.419 ,   2.295 ,   0.953 ,   5.56  ,  24.31  ,...
DESIRED: array([ 142.6  ,    9.8  ,   82.9  ,   -8.57 ,   36.66 ,  -41.78 ,
-127.9  ,   17.73 ,   61.03 ,   88.4  ,   33.78 , -145.2  ,
46.97 ,  102.94 ,  -80.3  ,  110.1  ,  180.6  ,   36.88 ,...
2025-04-27 05:14:03.479426 test begin: paddle.sum(Tensor([68, 97280],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([68, 97280],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 68 / 68 (100%)
Max absolute difference among violations: 244.2
Max relative difference among violations: 32.2
ACTUAL: array([ 17.97  , -18.28  ,  14.305 ,  16.86  ,   4.746 ,  19.75  ,
15.41  , -17.58  ,   8.59  ,   0.8203,  13.266 ,  -3.158 ,
-10.49  ,  -1.706 ,  -0.32  ,  -5.773 , -10.8   ,   2.037 ,...
DESIRED: array([ 1.2148e+01,  1.6650e+02, -3.5215e+00,  6.7500e+01,  4.6812e+01,
-3.0750e+01,  4.8781e+01,  3.2344e+01, -1.3875e+02,  1.4188e+02,
-1.5112e+02, -1.6350e+02, -1.9719e+01,  6.2375e+01,  4.7562e+01,...
2025-04-27 05:14:04.401197 test begin: paddle.sum(Tensor([68, 99712],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([68, 99712],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 68 / 68 (100%)
Max absolute difference among violations: 236.1
Max relative difference among violations: 11.7
ACTUAL: array([  9.25  ,  12.72  ,  11.77  ,  10.664 ,  -0.6025,   6.367 ,
5.54  ,  33.    ,   9.01  ,  -7.04  ,   9.41  ,  -7.055 ,
-1.494 , -13.305 , -10.51  ,  -6.9   , -18.14  ,   1.537 ,...
DESIRED: array([ 229.1  ,   59.72 ,   14.76 ,  -43.1  ,  -86.7  ,   50.47 ,
37.2  ,  140.2  ,   60.03 ,  -38.78 , -212.8  ,   -4.36 ,
-132.   ,  -58.44 ,  -87.25 ,  199.6  ,   20.62 ,   85.06 ,...
2025-04-27 05:14:45.592690 test begin: paddle.sum(Tensor([72, 102144],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([72, 102144],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 72 / 72 (100%)
Max absolute difference among violations: 291.5
Max relative difference among violations: 20.36
ACTUAL: array([ -4.85  ,  -9.84  ,  20.8   ,  -0.3967,   1.947 ,  -0.9536,
10.734 ,  -2.412 ,  -6.227 , -15.82  ,   8.88  , -11.03  ,
-6.08  ,   1.105 ,  -1.458 ,  -3.629 ,  19.42  ,   0.1194,...
DESIRED: array([ -41.53 ,   35.03 ,   65.9  ,  126.6  ,  199.   ,    1.304,
79.94 ,  -56.12 ,  -55.8  ,  -50.72 ,  -37.   , -199.8  ,
-58.34 ,   90.6  , -121.75 ,    4.76 ,  131.9  , -111.25 ,...
2025-04-27 05:14:46.676330 test begin: paddle.sum(Tensor([72, 112896],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([72, 112896],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 72 / 72 (100%)
Max absolute difference among violations: 190.2
Max relative difference among violations: 843.5
ACTUAL: array([-24.9  ,   3.107,   6.82 ,  18.47 ,   4.117,  12.16 ,   6.527,
12.914,  -3.896, -15.39 ,   2.982,   1.266,  13.53 , -13.586,
23.92 , -12.04 ,   6.973,   5.902,  -0.77 ,  -2.006, -15.53 ,...
DESIRED: array([-1.5200e+02, -4.0531e+01,  1.0969e+02, -4.4906e+01,  5.6344e+01,
8.6250e+01,  3.3219e+01,  1.0756e+02, -4.0406e+01, -5.5312e+01,
1.1297e+01,  9.1172e+00,  3.6344e+01, -1.3338e+02,  2.1412e+02,...
2025-04-27 05:15:04.069831 test begin: paddle.sum(Tensor([72, 54400],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([72, 54400],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 72 / 72 (100%)
Max absolute difference among violations: 211.9
Max relative difference among violations: 4.33
ACTUAL: array([  6.566,   3.953, -23.31 ,   3.094,   5.05 , -15.01 ,   1.965,
2.055,   9.43 ,  -0.27 ,   3.979, -18.05 ,  -4.83 , -20.5  ,
21.06 ,  -4.855,   8.39 ,  -2.633,   0.667,  -4.79 , -20.17 ,...
DESIRED: array([-105.3  ,    6.027,  -90.7  ,   -4.36 ,  -25.69 ,    6.73 ,
-35.78 ,  -58.53 ,  -26.48 ,   32.3  ,  -59.3  ,  -42.   ,
-17.67 ,  -44.97 ,  -54.25 ,  -47.9  ,   61.3  ,   42.47 ,...
2025-04-27 05:15:05.198438 test begin: paddle.sum(Tensor([72, 57600],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([72, 57600],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 72 / 72 (100%)
Max absolute difference among violations: 183.1
Max relative difference among violations: 7.566
ACTUAL: array([  9.84   ,  -3.182  ,   2.674  ,  12.85   ,   7.76   ,   2.035  ,
3.35   , -16.5    ,   8.54   ,  14.2    ,  -8.57   ,   7.54   ,
-2.596  ,  10.125  ,  -2.602  ,   3.809  ,   3.271  ,  21.89   ,...
DESIRED: array([  62.75 ,   12.18 ,  -24.86 ,   15.02 ,  -14.01 ,   53.03 ,
-72.1  ,  -36.88 ,  -28.92 ,   24.31 ,  -57.4  ,   -4.207,
-128.4  ,   69.06 ,  -75.5  ,   66.3  ,   13.95 ,   69.1  ,...
2025-04-27 05:15:05.948214 test begin: paddle.sum(Tensor([72, 58752],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([72, 58752],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 72 / 72 (100%)
Max absolute difference among violations: 153.
Max relative difference among violations: 107.56
ACTUAL: array([ 15.164 ,  -8.875 ,   0.855 ,   3.01  ,  27.86  ,  -0.9736,
20.06  ,  13.38  ,  14.4   ,  13.65  ,   5.637 ,  -7.625 ,
1.539 ,  21.47  ,  -2.193 ,   1.251 ,  -3.51  ,  -6.844 ,...
DESIRED: array([ 4.3469e+01,  5.6719e+01,  1.0219e+02,  6.7062e+01,  2.3391e+01,
5.9594e+01,  1.5425e+02,  2.4703e+01,  1.2631e+02,  7.7750e+01,
-1.2325e+02,  2.3625e+01, -4.1812e+01, -1.3484e+01, -6.3906e+00,...
2025-04-27 05:15:06.761910 test begin: paddle.sum(Tensor([72, 60800],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([72, 60800],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 72 / 72 (100%)
Max absolute difference among violations: 164.2
Max relative difference among violations: 57.8
ACTUAL: array([  7.227 , -21.2   ,   3.28  ,  -0.2693,   1.814 ,   1.305 ,
-13.88  ,  17.33  , -11.87  ,  -1.016 ,   5.57  ,   5.746 ,
-6.42  , -17.73  , -11.336 ,   1.358 ,  -7.977 ,   3.848 ,...
DESIRED: array([   4.668 ,  -81.8   ,   -3.2   ,  -12.62  ,  -81.94  ,   42.38  ,
2.137 ,   26.36  ,  -91.75  ,   60.06  ,  -48.9   ,   72.25  ,
21.92  ,  -38.78  ,   -0.1927,    5.31  , -120.06  ,   25.    ,...
2025-04-27 05:15:07.725508 test begin: paddle.sum(Tensor([72, 62400],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([72, 62400],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 72 / 72 (100%)
Max absolute difference among violations: 196.6
Max relative difference among violations: 3.068
ACTUAL: array([  7.594 ,  -6.99  ,   8.24  ,  17.25  , -18.61  ,   8.33  ,
15.586 ,   8.06  ,  20.06  ,  -1.728 ,  -6.29  ,  11.37  ,
-11.37  ,   2.084 ,   8.77  ,   6.355 , -12.48  ,  -2.803 ,...
DESIRED: array([   8.36 ,   57.34 ,  -27.56 ,   84.44 ,  -65.4  ,    9.34 ,
-161.6  , -129.1  ,   45.78 ,  160.   ,  -84.9  ,  208.   ,
24.39 ,    1.546,   63.53 ,   19.56 ,  -16.16 ,   80.9  ,...
2025-04-27 05:15:08.525981 test begin: paddle.sum(Tensor([72, 63936],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([72, 63936],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 72 / 72 (100%)
Max absolute difference among violations: 182.
Max relative difference among violations: 4.617
ACTUAL: array([ -0.4905,  20.45  ,   9.96  , -18.19  , -17.34  ,   8.73  ,
8.2   ,   6.22  ,   1.067 ,  12.33  ,  -2.986 ,   4.28  ,
-16.28  ,  -0.902 ,  -7.89  ,   2.53  ,   0.5503,   5.21  ,...
DESIRED: array([  12.   ,   31.73 ,  113.94 ,  160.9  ,  -66.44 ,  179.9  ,
-127.4  ,   87.3  ,   25.81 ,    6.07 ,   69.56 ,  -21.69 ,
50.88 ,   15.52 , -146.4  ,   74.7  ,  128.9  ,  -45.38 ,...
2025-04-27 05:15:09.338260 test begin: paddle.sum(Tensor([72, 64000],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([72, 64000],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 72 / 72 (100%)
Max absolute difference among violations: 197.9
Max relative difference among violations: 11.52
ACTUAL: array([ -6.883 ,  -8.06  ,  10.92  , -15.414 ,  34.75  ,   8.94  ,
-7.63  ,   6.54  ,  11.17  ,  -2.512 , -29.    ,   0.694 ,
-11.49  ,  -0.9834,  -2.535 ,  -8.76  ,   4.707 ,   9.11  ,...
DESIRED: array([-199.1   ,  -61.7   ,  -31.52  ,  -71.4   ,  103.6   ,  -47.16  ,
72.44  ,  115.56  ,   62.06  ,  104.8   ,  -65.8   , -127.1   ,
-23.66  ,   -7.297 , -114.7   ,   43.8   ,    8.78  ,    6.824 ,...
2025-04-27 05:15:10.068895 test begin: paddle.sum(Tensor([72, 65600],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([72, 65600],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 72 / 72 (100%)
Max absolute difference among violations: 225.4
Max relative difference among violations: 6.668
ACTUAL: array([  6.785 ,   5.68  ,  -8.64  ,  11.58  ,  18.98  ,  25.97  ,
-4.258 ,  -8.695 ,   6.023 ,  -1.712 ,   1.674 ,  14.32  ,
-0.1377,   2.875 ,  -0.4077,  -3.264 ,  11.82  , -33.62  ,...
DESIRED: array([  31.86  ,    4.38  ,  -11.516 , -109.94  ,  131.2   ,  112.5   ,
-123.8   ,   85.6   ,    0.7856,   70.    ,  161.4   ,  -59.94  ,
-35.78  ,   -2.58  ,  -38.78  ,   69.9   ,   52.03  ,  -31.6   ,...
2025-04-27 05:15:10.730343 test begin: paddle.sum(Tensor([72, 65664],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([72, 65664],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 72 / 72 (100%)
Max absolute difference among violations: 182.4
Max relative difference among violations: 22.52
ACTUAL: array([ -5.055 ,  -2.99  , -12.64  , -12.58  ,  15.12  , -11.34  ,
-4.477 ,  -1.573 , -11.96  ,  -0.1001,  -4.598 ,   6.914 ,
7.844 ,  16.61  ,  10.875 ,  -4.63  ,   5.086 ,  -3.049 ,...
DESIRED: array([  77.25 ,  170.2  ,  169.8  ,  -11.86 ,  103.6  , -102.56 ,
31.52 ,    7.12 ,   84.75 ,    1.67 ,   30.8  ,  -55.97 ,
106.9  ,    1.323,  107.56 ,   61.   ,  -46.16 ,   26.06 ,...
2025-04-27 05:15:11.692989 test begin: paddle.sum(Tensor([72, 67200],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([72, 67200],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 71 / 72 (98.6%)
Max absolute difference among violations: 158.
Max relative difference among violations: 3.541
ACTUAL: array([ 17.53   ,  14.22   ,   9.06   ,   5.92   ,  -5.88   ,  -9.89   ,
-10.06   ,   3.27   ,  -0.86   ,  20.97   , -17.62   ,   1.472  ,
-22.58   ,  10.39   ,   5.227  , -17.69   ,   3.932  , -17.83   ,...
DESIRED: array([   8.266,   64.94 ,  -41.03 ,  -71.94 ,   49.97 ,  -73.7  ,
20.7  ,    3.305,  -64.2  ,   26.06 ,  -30.17 ,  -36.03 ,
-17.17 ,   27.06 ,  -44.12 ,    8.74 ,  -99.56 ,  -58.72 ,...
2025-04-27 05:15:13.010664 test begin: paddle.sum(Tensor([72, 70528],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([72, 70528],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 72 / 72 (100%)
Max absolute difference among violations: 204.5
Max relative difference among violations: 7.566
ACTUAL: array([ -5.71  ,  -1.748 ,   4.47  ,  -0.2627, -15.74  ,   6.65  ,
6.73  ,   3.465 , -12.086 ,  -1.988 ,   4.668 , -11.805 ,
-10.83  , -14.23  ,   9.555 ,   8.56  ,  20.56  , -11.96  ,...
DESIRED: array([  27.5  ,   30.72 ,   99.2  ,  -17.8  , -120.3  ,   26.12 ,
-158.   ,  -68.6  ,  -70.94 ,  -24.45 ,   16.11 , -109.44 ,
-16.44 , -154.8  ,  214.   ,  -15.9  ,   40.25 ,   -3.4  ,...
2025-04-27 05:15:13.970623 test begin: paddle.sum(Tensor([72, 73984],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([72, 73984],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 72 / 72 (100%)
Max absolute difference among violations: 172.
Max relative difference among violations: 10.62
ACTUAL: array([  7.12  ,   5.316 ,   0.4404, -34.53  , -16.81  , -15.875 ,
10.4   ,   2.914 ,  -1.098 , -14.27  , -15.055 ,   1.809 ,
2.502 , -10.44  ,  12.2   ,  -9.31  ,   5.184 ,  12.15  ,...
DESIRED: array([ -18.38 ,   20.19 ,   81.56 , -119.   ,  -88.44 ,   26.14 ,
112.6  ,   25.17 ,   11.445,  -47.34 ,   27.7  ,   -9.52 ,
24.48 ,   37.88 ,   52.47 ,   -4.52 ,   87.9  ,   -7.133,...
2025-04-27 05:15:14.789905 test begin: paddle.sum(Tensor([72, 74240],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([72, 74240],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 72 / 72 (100%)
Max absolute difference among violations: 197.9
Max relative difference among violations: 32.56
ACTUAL: array([ 2.1172e+01,  3.9062e-03,  5.7773e+00, -5.5430e+00,  3.7871e+00,
5.7695e+00, -9.0625e+00,  2.1984e+01, -1.2922e+01, -6.2422e+00,
3.1158e-02, -5.7891e+00, -2.2953e+01,  1.1562e+00,  3.7637e+00,...
DESIRED: array([ 170.4   ,   99.    ,   14.875 ,  113.    ,  133.9   ,  -26.02  ,
-36.75  ,  -94.4   ,  -67.5   ,   -2.818 ,  -45.7   ,    6.637 ,
-0.6836, -196.    ,  -37.2   , -108.56  ,    4.316 ,   31.5   ,...
2025-04-27 05:15:15.661280 test begin: paddle.sum(Tensor([72, 76160],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([72, 76160],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 72 / 72 (100%)
Max absolute difference among violations: 191.9
Max relative difference among violations: 7.094
ACTUAL: array([ -0.2307,  -9.914 ,  -9.37  ,  -9.05  , -15.984 ,  -1.761 ,
-6.52  ,   2.553 ,   1.692 ,  -0.8657,  -1.726 ,  -0.7637,
13.05  ,  17.36  ,  15.55  ,   4.844 ,  -9.31  ,  -6.492 ,...
DESIRED: array([-172.1  ,  -69.3  ,   34.53 ,   20.97 ,  -75.75 ,   22.11 ,
-137.4  ,  113.44 , -124.56 ,   83.3  ,  -65.94 ,  -30.89 ,
-2.14 ,   -6.805,   30.81 ,  121.44 ,   76.2  ,  -19.36 ,...
2025-04-27 05:15:16.529404 test begin: paddle.sum(Tensor([72, 78400],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([72, 78400],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 72 / 72 (100%)
Max absolute difference among violations: 196.8
Max relative difference among violations: 15.86
ACTUAL: array([ 2.6203e+01, -1.1000e+01, -4.0942e-01,  7.9004e-01,  7.6680e+00,
-2.2644e-01,  6.2344e+00,  7.5352e+00, -1.3031e+01,  4.1641e+00,
8.4688e+00, -2.1426e+00,  1.2305e+01,  7.5469e+00, -4.8125e+00,...
DESIRED: array([ 9.5375e+01, -1.4391e+01,  1.7175e-01, -3.7094e+01, -1.2094e+02,
-5.7539e+00, -4.2938e+01,  2.9719e+01,  3.7812e+01,  6.5000e+01,
-7.5375e+01,  2.2234e+01, -1.8375e+01, -1.9562e+01, -8.5312e+01,...
2025-04-27 05:15:17.259031 test begin: paddle.sum(Tensor([72, 82688],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([72, 82688],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 72 / 72 (100%)
Max absolute difference among violations: 210.8
Max relative difference among violations: 5.67
ACTUAL: array([  5.293 ,   4.566 ,  10.67  ,  -2.88  ,   2.762 ,   9.79  ,
2.617 , -18.61  ,  -0.882 ,   9.234 ,  27.12  ,  -2.074 ,
-37.25  ,   9.82  ,  -7.805 ,  -7.098 ,   9.734 ,  -0.0398,...
DESIRED: array([  50.72 , -206.1  ,   38.94 ,   38.25 ,  160.9  ,  -19.53 ,
-30.2  ,   53.56 ,   57.22 ,   -2.166,   55.22 ,   -1.854,
31.56 ,   -7.703,   26.61 ,   -6.125,  -30.94 ,   77.4  ,...
2025-04-27 05:15:18.172950 test begin: paddle.sum(Tensor([72, 84864],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([72, 84864],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 72 / 72 (100%)
Max absolute difference among violations: 196.8
Max relative difference among violations: 4.12
ACTUAL: array([ -3.1   ,   0.476 , -10.93  ,  -3.488 , -11.6   ,   6.63  ,
-1.115 , -24.58  ,   2.725 ,   6.9   , -11.7   ,  -4.1   ,
-7.016 ,   5.96  , -14.836 ,   4.113 ,   9.62  ,   8.62  ,...
DESIRED: array([ -70.4  ,  -83.3  ,  -95.4  ,   65.25 ,    8.83 ,  196.2  ,
62.25 , -109.94 ,  134.4  ,   -9.28 ,  -30.81 ,  -77.5  ,
-85.56 ,  -58.2  ,  -61.7  ,   -9.13 ,  102.1  ,  103.75 ,...
2025-04-27 05:15:19.090606 test begin: paddle.sum(Tensor([72, 89984],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([72, 89984],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 72 / 72 (100%)
Max absolute difference among violations: 212.
Max relative difference among violations: 10.76
ACTUAL: array([-27.52  ,   3.967 ,  10.52  ,   1.342 , -13.06  ,   7.8   ,
-3.965 ,  -6.453 ,   1.198 ,  -3.365 ,   0.1938,  -2.379 ,
9.32  ,  -2.238 ,  12.58  ,  -6.586 , -12.875 ,   9.766 ,...
DESIRED: array([ -13.32 ,  136.1  ,   27.16 , -124.6  ,  -22.9  ,  -77.44 ,
-85.4  ,  -96.2  ,   96.7  ,  -17.7  ,  -99.   ,   39.3  ,
37.44 ,  120.94 ,   27.08 ,   49.62 ,    6.234, -125.06 ,...
2025-04-27 05:15:19.998343 test begin: paddle.sum(Tensor([72, 91392],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([72, 91392],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 72 / 72 (100%)
Max absolute difference among violations: 197.5
Max relative difference among violations: 19.31
ACTUAL: array([ -5.273 ,  -2.834 ,   4.918 ,   5.453 ,   5.195 , -12.8   ,
-19.22  ,  12.11  ,   0.346 ,  -0.2367,  36.1   ,  -0.1993,
-1.233 ,   3.633 ,   4.715 ,  10.266 ,  -6.617 ,  13.92  ,...
DESIRED: array([  19.06  ,  -15.37  ,   -8.39  ,   42.34  ,   39.6   , -116.    ,
3.568 ,   34.53  ,    8.32  ,  114.7   ,  178.    ,   60.3   ,
-31.72  ,   47.1   ,   46.7   ,   73.4   ,   49.28  ,  154.4   ,...
2025-04-27 05:15:20.956020 test begin: paddle.sum(Tensor([72, 92416],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([72, 92416],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 72 / 72 (100%)
Max absolute difference among violations: 256.8
Max relative difference among violations: 16.17
ACTUAL: array([-9.2422e+00, -1.2570e+01,  7.2539e+00, -1.5172e+01, -1.5469e+01,
-3.4180e+00,  4.9062e+00, -1.1398e+01, -2.8062e+01, -2.1797e+01,
2.5996e+00,  5.8477e+00, -3.4746e+00,  1.1156e+01, -2.4609e+00,...
DESIRED: array([  72.06 ,  -35.03 , -123.6  ,  -19.22 ,   31.06 ,   -6.668,
213.6  ,    4.484, -102.1  ,  -60.4  ,  -89.75 ,  109.44 ,
-33.78 ,  -76.2  , -228.9  , -195.1  ,   53.5  ,   63.06 ,...
2025-04-27 05:15:21.883258 test begin: paddle.sum(Tensor([72, 94080],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([72, 94080],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 72 / 72 (100%)
Max absolute difference among violations: 265.5
Max relative difference among violations: 10.35
ACTUAL: array([  3.264 ,  -8.914 ,  -6.082 ,   0.817 ,  -7.625 ,  -5.582 ,
4.895 ,   3.916 ,  -4.15  ,  13.75  ,   7.47  ,  -2.205 ,
6.203 ,  -1.434 ,  20.5   ,  -2.146 ,   2.594 ,  -1.263 ,...
DESIRED: array([ -31.56  ,  -64.1   ,   99.3   ,   62.22  , -173.1   ,  168.1   ,
-84.7   ,  -41.6   ,  -27.31  ,   84.1   ,  235.6   ,   10.21  ,
-124.1   ,   23.86  ,  145.6   ,  -26.53  ,   30.58  ,  -63.75  ,...
2025-04-27 05:15:22.828557 test begin: paddle.sum(Tensor([72, 94848],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([72, 94848],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 72 / 72 (100%)
Max absolute difference among violations: 204.
Max relative difference among violations: 1700.
ACTUAL: array([ 11.805 ,  -4.688 ,  16.2   ,   5.363 ,  -7.29  ,  25.64  ,
-9.766 ,   2.14  , -12.8   ,  16.97  ,  -7.844 ,   4.95  ,
3.97  ,  -5.055 ,  -8.03  ,  -1.95  ,  -9.64  ,  25.06  ,...
DESIRED: array([ 2.5062e+01,  1.9938e+02,  4.9562e+01,  2.2156e+01, -1.2612e+02,
2.3125e+01,  5.8969e+01, -2.2754e+00, -5.9594e+01,  3.4031e+01,
-4.0562e+01, -9.6062e+01, -1.0881e+02, -6.1844e+01,  6.2938e+01,...
2025-04-27 05:15:23.738983 test begin: paddle.sum(Tensor([72, 97280],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([72, 97280],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 72 / 72 (100%)
Max absolute difference among violations: 205.5
Max relative difference among violations: 4.707
ACTUAL: array([ -4.273 ,  -5.457 ,   5.395 ,  -6.63  ,  -7.34  ,   7.395 ,
3.496 , -10.44  ,   2.648 ,   0.4531,  -1.506 ,  -7.39  ,
-4.18  ,   3.023 , -21.5   , -10.71  ,  -6.31  ,  -6.8   ,...
DESIRED: array([  -0.7544,  -18.1   ,  -87.3   ,   10.82  , -183.4   ,   -9.78  ,
3.61  ,   86.75  ,   38.72  ,   47.12  , -119.44  ,  -24.23  ,
1.717 ,  -57.2   , -154.6   ,  -93.6   ,   11.75  ,  117.94  ,...
2025-04-27 05:15:24.612079 test begin: paddle.sum(Tensor([72, 99712],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([72, 99712],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 72 / 72 (100%)
Max absolute difference among violations: 171.5
Max relative difference among violations: 4.38
ACTUAL: array([  8.94  ,   1.042 ,  -3.246 ,  11.38  ,  13.28  ,   1.793 ,
1.851 ,  -3.566 ,  11.086 ,  -1.724 ,   3.322 ,  -2.11  ,
-2.016 ,  -1.191 , -11.22  ,  11.33  ,   6.516 ,  14.52  ,...
DESIRED: array([ 160.   ,   24.77 ,   19.86 ,  -96.56 ,   26.33 ,  142.5  ,
-34.1  ,   33.8  ,   75.6  ,   43.94 ,   12.36 ,  -25.28 ,
36.7  ,   59.2  ,  -81.94 ,   48.97 ,  104.56 ,  -54.03 ,...
2025-04-27 05:15:35.101513 test begin: paddle.sum(Tensor([76, 102144],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([76, 102144],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 76 / 76 (100%)
Max absolute difference among violations: 206.8
Max relative difference among violations: 35.
ACTUAL: array([ 23.7    ,  -0.5396 ,  -6.47   ,   1.909  , -13.03   ,  11.86   ,
-0.4941 ,  -4.258  ,  12.75   ,   4.73   , -18.88   ,   0.04663,
-12.375  ,  -5.76   ,   0.2888 ,   8.18   , -14.39   ,  20.1    ,...
DESIRED: array([  73.8   ,   47.47  ,   28.06  ,  -28.69  ,   58.66  , -148.1   ,
13.34  ,  -14.87  ,  -93.    , -133.4   , -207.    ,   60.9   ,
-92.44  ,  -99.5   ,    2.623 ,   -0.2407,   95.56  , -167.4   ,...
2025-04-27 05:15:46.132090 test begin: paddle.sum(Tensor([76, 54400],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([76, 54400],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 76 / 76 (100%)
Max absolute difference among violations: 168.2
Max relative difference among violations: 37.12
ACTUAL: array([-1.0947e+00, -9.7500e+00, -9.4531e+00, -1.5539e+01,  1.6734e+01,
2.9941e+00,  8.7500e+00,  1.7250e+01, -1.9531e-02,  2.5625e+00,
5.6914e+00, -4.5625e+00,  1.3367e+01, -4.7461e+00, -4.6641e+00,...
DESIRED: array([ -91.8  ,  -97.94 ,   -2.896,  -53.72 ,  113.6  ,   50.7  ,
85.2  ,  -37.16 ,   21.73 ,  129.2  ,  128.2  ,  -69.1  ,
2.072,  -82.94 ,   67.75 ,   95.94 ,   74.8  ,   16.16 ,...
2025-04-27 05:15:46.717498 test begin: paddle.sum(Tensor([76, 60800],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([76, 60800],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 76 / 76 (100%)
Max absolute difference among violations: 190.
Max relative difference among violations: 17.69
ACTUAL: array([ 17.48  ,  17.72  ,   2.918 ,   8.8   , -14.52  ,   1.109 ,
1.85  ,   3.81  ,   4.39  ,  -3.912 ,  -7.62  ,  -5.03  ,
-3.965 , -14.305 , -11.695 ,  13.55  ,  -8.04  , -25.06  ,...
DESIRED: array([ -15.   ,  -25.06 ,   41.3  , -100.25 , -204.5  ,   18.66 ,
-50.6  ,  -88.44 ,  157.1  , -111.5  , -102.2  ,  -93.1  ,
-156.6  ,   31.38 ,  -64.8  ,   85.44 ,  -19.03 ,   -4.777,...
2025-04-27 05:15:47.455676 test begin: paddle.sum(Tensor([76, 62400],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([76, 62400],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 76 / 76 (100%)
Max absolute difference among violations: 191.4
Max relative difference among violations: 12.836
ACTUAL: array([  0.671  ,   2.156  ,  25.66   ,  -4.72   , -16.3    ,   2.64   ,
-3.904  , -12.26   ,  19.31   , -15.195  , -23.     ,   0.1746 ,
15.125  , -10.59   , -16.98   ,   4.836  ,  -8.54   ,   1.7    ,...
DESIRED: array([-1.6992e+00, -5.4844e+01,  6.4812e+01,  7.0375e+01, -3.0391e+01,
4.0406e+01, -1.1394e+02, -1.1000e+02,  1.9781e+01, -2.3859e+01,
-5.8250e+01, -7.5664e+00,  4.6758e+00,  3.3656e+01, -6.5688e+01,...
2025-04-27 05:15:48.079158 test begin: paddle.sum(Tensor([76, 65664],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([76, 65664],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 76 / 76 (100%)
Max absolute difference among violations: 219.2
Max relative difference among violations: 31.89
ACTUAL: array([  4.742  ,  -0.579  ,   4.33   ,   0.4216 , -15.73   ,   3.496  ,
3.66   ,  24.55   ,  -3.562  ,   0.361  ,  -2.906  , -22.03   ,
-8.62   ,   9.445  ,  16.72   ,  -6.13   ,   8.81   ,  11.85   ,...
DESIRED: array([  73.6   ,  -38.8   ,   29.31  ,  -42.7   ,   -4.637 ,  143.1   ,
-150.6   ,   69.7   ,   51.75  ,   -4.21  ,   -6.746 , -119.8   ,
60.    ,    7.043 ,  115.9   ,  -36.56  ,    4.547 ,   64.06  ,...
2025-04-27 05:15:48.715229 test begin: paddle.sum(Tensor([76, 67200],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([76, 67200],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 76 / 76 (100%)
Max absolute difference among violations: 226.2
Max relative difference among violations: 16.7
ACTUAL: array([ 11.75   ,   1.543  , -17.72   , -12.016  ,   0.8276 ,   4.746  ,
-5.906  ,   4.336  ,  16.83   , -14.32   ,  15.45   ,   7.66   ,
0.52   ,   0.908  ,  -3.566  ,   8.08   ,  -1.651  ,   7.656  ,...
DESIRED: array([  -0.7485,  167.    ,   -7.26  ,  -11.32  ,   80.94  ,  -58.94  ,
11.35  ,   18.11  ,  125.5   , -172.    ,   59.66  ,   51.25  ,
25.83  ,   47.03  ,  -34.38  ,   90.75  , -126.1   ,   69.25  ,...
2025-04-27 05:15:49.542951 test begin: paddle.sum(Tensor([76, 67392],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([76, 67392],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 76 / 76 (100%)
Max absolute difference among violations: 185.2
Max relative difference among violations: 14.46
ACTUAL: array([  1.213  ,   0.3743 ,  -4.13   ,  -8.4    ,   4.543  ,  17.14   ,
-7.57   , -10.04   , -29.27   , -21.62   ,   1.338  ,  14.86   ,
-15.2    ,  16.5    ,  14.78   ,   0.921  , -10.02   ,  15.66   ,...
DESIRED: array([  -2.38 ,  101.5  ,  -25.48 ,   23.75 ,    6.613,  -83.56 ,
69.94 ,   -6.15 ,  -34.47 ,  -11.19 , -137.8  ,   63.4  ,
17.06 ,   49.12 ,  -41.12 ,   97.56 ,   60.38 ,  -15.57 ,...
2025-04-27 05:15:50.269792 test begin: paddle.sum(Tensor([76, 73984],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([76, 73984],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 76 / 76 (100%)
Max absolute difference among violations: 247.
Max relative difference among violations: 40.06
ACTUAL: array([  3.309  ,   3.195  ,  20.11   ,   2.549  ,   1.679  ,   1.058  ,
-3.44   ,   1.247  ,   7.39   ,  -8.31   ,   6.59   ,  -3.35   ,
-13.555  ,  -4.02   ,   3.912  , -16.8    ,   5.754  ,   0.1906 ,...
DESIRED: array([ 4.397e+01,  9.956e+01,  1.925e+01,  6.612e+01, -1.288e+02,
8.612e+01,  8.481e+01,  5.366e+01, -2.645e+01, -2.554e+02,
-8.194e+01, -9.388e+01, -2.996e+00,  6.612e+01,  1.960e+02,...
2025-04-27 05:15:50.950045 test begin: paddle.sum(Tensor([76, 78336],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([76, 78336],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 76 / 76 (100%)
Max absolute difference among violations: 178.5
Max relative difference among violations: 13.9
ACTUAL: array([ -0.04102,   1.226  ,   0.1821 ,   8.13   ,  -5.703  ,  -1.232  ,
-0.2874 ,  -6.375  ,   4.312  ,  -9.17   ,  12.27   ,  20.56   ,
1.991  ,   6.586  ,   5.     , -14.914  ,  -6.305  ,  -1.183  ,...
DESIRED: array([  15.08  ,  -58.5   , -172.1   ,  128.2   ,  -58.8   ,  -21.2   ,
-29.14  ,  -26.22  ,  -68.8   ,    8.82  ,  190.8   , -111.06  ,
-16.8   ,    8.07  ,   38.12  , -140.8   , -127.3   ,  177.2   ,...
2025-04-27 05:15:51.774013 test begin: paddle.sum(Tensor([76, 82688],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([76, 82688],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 76 / 76 (100%)
Max absolute difference among violations: 186.2
Max relative difference among violations: 27.45
ACTUAL: array([ 1.6297e+01,  1.3695e+01, -1.7000e+01, -3.5430e+00, -9.5312e+00,
-5.1758e+00, -2.6621e+00, -9.1719e+00,  1.0734e+01, -1.5289e+01,
1.5711e+01, -1.1172e+01,  2.4031e+01, -8.4531e+00, -2.7402e+00,...
DESIRED: array([ 7.9141e+00,  5.8219e+01,  1.7438e+01,  9.5312e+01, -6.1375e+01,
-2.9641e+01,  3.3938e+01, -5.4188e+01, -7.0938e+01, -9.6062e+01,
2.2812e+00,  1.6900e+02, -2.4797e+01, -6.5438e+01,  4.1844e+01,...
2025-04-27 05:15:52.492951 test begin: paddle.sum(Tensor([76, 85120],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([76, 85120],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 76 / 76 (100%)
Max absolute difference among violations: 219.6
Max relative difference among violations: 3.44
ACTUAL: array([  9.234  ,   7.004  ,   8.     , -12.29   ,  11.01   ,  12.62   ,
-15.14   ,  -9.18   ,  23.62   ,  15.97   ,   5.13   ,   1.827  ,
12.38   ,  25.98   ,  -4.383  , -11.38   ,   3.867  ,  19.98   ,...
DESIRED: array([ -30.66 ,   10.74 ,  -28.72 ,  141.   ,  108.1  ,  151.1  ,
66.06 ,  -25.17 ,   12.94 ,   90.1  ,   26.81 ,   17.9  ,
-5.58 ,  177.9  ,  104.44 ,  -15.21 ,   62.3  ,   80.5  ,...
2025-04-27 05:15:53.362053 test begin: paddle.sum(Tensor([76, 87552],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([76, 87552],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 76 / 76 (100%)
Max absolute difference among violations: 198.6
Max relative difference among violations: 5.387
ACTUAL: array([ -1.146  ,   1.674  ,  -0.2485 ,   8.29   ,  12.62   ,  -9.47   ,
-3.111  ,  -2.184  ,  10.56   ,  -4.777  ,   2.826  ,  -6.375  ,
-10.086  ,  -3.473  ,   2.004  ,   3.764  ,   9.984  , -10.914  ,...
DESIRED: array([ -60.66 ,  -56.47 , -115.1  ,   60.22 ,   -2.877,   -2.674,
32.34 , -108.06 ,  119.9  ,    3.303,   79.6  ,  -73.44 ,
-24.69 ,  156.4  ,  -58.12 ,   45.03 ,   14.62 ,  -31.11 ,...
2025-04-27 05:15:54.227210 test begin: paddle.sum(Tensor([76, 89216],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([76, 89216],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 76 / 76 (100%)
Max absolute difference among violations: 279.
Max relative difference among violations: 3.795
ACTUAL: array([ -0.878 ,  -8.24  ,   8.62  ,   5.594 ,  -1.864 ,  -1.537 ,
-5.92  , -14.69  ,   8.95  ,   2.387 ,   8.28  ,  12.195 ,
2.9   ,  -6.17  , -10.08  , -16.31  ,   4.098 ,  -6.293 ,...
DESIRED: array([ -10.78 ,   16.31 ,  -50.2  ,  -97.3  ,  -53.5  ,   -2.826,
-125.75 ,  -44.3  ,  217.6  ,  -24.56 ,   99.3  ,  -40.88 ,
104.94 ,  -99.94 ,   65.6  ,  109.   ,   41.62 ,  -32.6  ,...
2025-04-27 05:15:55.189157 test begin: paddle.sum(Tensor([76, 89984],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([76, 89984],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 76 / 76 (100%)
Max absolute difference among violations: 233.2
Max relative difference among violations: 8.47
ACTUAL: array([  7.27  ,  18.78  ,  -5.51  ,   7.89  ,   1.004 ,   0.1311,
10.4   ,  -3.418 , -20.88  , -20.95  ,  18.27  , -19.92  ,
-12.625 ,   9.79  ,  -6.273 ,   3.465 , -21.02  ,  -1.922 ,...
DESIRED: array([  11.13 ,    8.53 ,  -45.5  ,  -71.25 ,  -31.86 , -124.06 ,
98.7  ,  112.4  ,   42.38 ,  -21.72 ,  128.2  ,   19.9  ,
-45.94 ,  104.9  , -117.9  ,  118.56 ,  -24.64 , -235.1  ,...
2025-04-27 05:15:56.163853 test begin: paddle.sum(Tensor([76, 92416],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([76, 92416],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 76 / 76 (100%)
Max absolute difference among violations: 214.5
Max relative difference among violations: 2.121
ACTUAL: array([  7.137 ,  26.84  ,   9.04  ,   3.213 , -29.7   ,  -8.375 ,
-0.561 ,  13.91  , -17.95  , -18.81  ,  -9.76  ,  -2.352 ,
-3.346 ,   8.02  ,   6.406 ,  16.78  ,  -5.266 ,  -6.465 ,...
DESIRED: array([ -75.3  ,   24.39 ,    4.258,   83.94 , -145.9  ,   50.9  ,
21.89 ,  -13.49 , -199.2  ,  -20.61 , -194.   ,   -1.941,
126.44 , -175.2  ,    8.23 ,  170.5  ,   58.75 ,  105.3  ,...
2025-04-27 05:15:57.145198 test begin: paddle.sum(Tensor([76, 94080],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([76, 94080],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 76 / 76 (100%)
Max absolute difference among violations: 237.8
Max relative difference among violations: 26.31
ACTUAL: array([ 17.11  ,   8.64  ,  -4.984 , -11.266 , -13.15  ,  -4.58  ,
-0.6895,  13.305 ,   4.24  ,  22.6   ,  -9.46  , -13.56  ,
3.28  ,  -8.734 , -12.79  ,  -4.89  ,  17.52  ,   3.29  ,...
DESIRED: array([ 4.0281e+01,  1.3300e+02,  4.1531e+01,  8.7875e+01, -7.8750e+01,
-1.0650e+02,  2.1766e+01, -7.5875e+01,  7.8812e+01, -5.3656e+01,
6.8672e+00, -8.8500e+01, -8.0562e+01, -4.6469e+01,  2.5664e+00,...
2025-04-27 05:15:58.176905 test begin: paddle.sum(Tensor([76, 94848],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([76, 94848],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 76 / 76 (100%)
Max absolute difference among violations: 212.4
Max relative difference among violations: 8.52
ACTUAL: array([-12.51  , -17.45  , -17.27  ,   2.035 , -14.336 ,  17.2   ,
3.838 ,   9.13  ,  24.7   ,  -9.9   ,   6.79  ,  -7.773 ,
-2.625 ,  -9.09  ,  -3.768 ,  -5.9   ,  -0.063 , -18.94  ,...
DESIRED: array([-157.9  , -110.94 ,   72.3  ,   83.4  ,  147.1  ,  -56.72 ,
67.9  ,  -33.97 ,  -55.97 , -135.5  ,  101.9  ,  -37.16 ,
-45.06 ,  183.8  ,  -92.   ,  -87.6  ,   13.96 ,  -60.16 ,...
2025-04-27 05:15:59.202134 test begin: paddle.sum(Tensor([76, 97280],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([76, 97280],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 76 / 76 (100%)
Max absolute difference among violations: 229.6
Max relative difference among violations: 69.8
ACTUAL: array([-13.89  ,   7.81  ,   0.905 ,  -2.207 ,   2.227 ,  -8.53  ,
14.63  ,  -6.348 ,   0.4778,   7.418 ,   3.605 , -10.29  ,
17.47  ,   7.97  , -10.84  ,  13.64  ,   8.516 ,   7.773 ,...
DESIRED: array([ 7.7250e+01,  3.0766e+01, -2.3734e+01, -1.6950e+02, -1.1992e+01,
-2.3922e+01, -2.1500e+02, -1.6812e+01,  4.8844e+01,  1.0781e+02,
-4.7719e+01, -1.1138e+02,  1.4200e+02,  1.2644e+02,  6.8312e+01,...
2025-04-27 05:16:00.272964 test begin: paddle.sum(Tensor([76, 99712],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([76, 99712],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 76 / 76 (100%)
Max absolute difference among violations: 211.6
Max relative difference among violations: 3.973
ACTUAL: array([ -3.498 ,  -0.9136,  -3.723 ,   5.645 ,  -6.973 ,   4.152 ,
17.16  ,   1.346 , -18.36  ,   6.47  ,   5.535 ,   3.61  ,
-0.4546,  19.7   ,  18.27  ,  -1.768 , -10.35  , -19.72  ,...
DESIRED: array([ 109.5  ,  103.75 ,   -6.844,  -75.   ,   35.7  ,  214.6  ,
28.28 ,  -79.8  ,   66.4  ,  -87.6  , -142.5  ,   57.8  ,
72.6  ,   43.47 , -104.06 ,  106.56 ,   90.9  , -105.56 ,...
2025-04-27 05:16:15.292312 test begin: paddle.sum(Tensor([8, 100, 100],"float16"), )
[accuracy error] paddle.sum(Tensor([8, 100, 100],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 6.28
Max relative difference among violations: 0.09814
ACTUAL: array(57.72, dtype=float16)
DESIRED: array(64., dtype=float16)
2025-04-27 05:16:15.900554 test begin: paddle.sum(Tensor([8, 102144],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([8, 102144],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 8 / 8 (100%)
Max absolute difference among violations: 108.3
Max relative difference among violations: 2.662
ACTUAL: array([-16.33  ,  -6.773 ,   2.232 ,  -1.541 , -10.87  ,  12.35  ,
20.17  ,  -0.6816], dtype=float16)
DESIRED: array([-23.14, -87.44,  51.25, -15.06,  79.56, -52.03, -12.14, 107.6 ],
dtype=float16)
2025-04-27 05:16:16.268743 test begin: paddle.sum(Tensor([8, 102400],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([8, 102400],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 8 / 8 (100%)
Max absolute difference among violations: 171.5
Max relative difference among violations: 1.191
ACTUAL: array([ -7.844,   5.914,  -0.642, -17.52 ,   0.238,   6.31 , -10.77 ,
-6.992], dtype=float16)
DESIRED: array([-125.7 , -161.9 , -149.6 ,  -56.97, -171.2 ,   63.22,   56.06,
-43.34], dtype=float16)
2025-04-27 05:16:16.940996 test begin: paddle.sum(Tensor([8, 107520],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([8, 107520],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 8 / 8 (100%)
Max absolute difference among violations: 228.6
Max relative difference among violations: 3.875
ACTUAL: array([ -1.472  ,   7.457  ,  -4.406  ,  -0.03784,   3.73   ,  22.47   ,
-11.086  ,  10.04   ], dtype=float16)
DESIRED: array([-152.4  ,  -88.56 ,   -0.904,  -77.7  ,  143.1  ,   13.484,
-133.6  , -218.6  ], dtype=float16)
2025-04-27 05:16:25.369309 test begin: paddle.sum(Tensor([8, 16, 32],"float16"), )
[accuracy error] paddle.sum(Tensor([8, 16, 32],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 2.96
Max relative difference among violations: 0.16
ACTUAL: array(-15.54, dtype=float16)
DESIRED: array(-18.5, dtype=float16)
2025-04-27 05:16:49.027392 test begin: paddle.sum(Tensor([8, 60800],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([8, 60800],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 8 / 8 (100%)
Max absolute difference among violations: 123.7
Max relative difference among violations: 14.734
ACTUAL: array([ 4.85  , -8.06  , -1.66  ,  6.035 , -7.945 ,  1.919 , -6.42  ,
-0.2808], dtype=float16)
DESIRED: array([-1.308e+01, -1.318e+02, -1.055e-01,  4.578e+01, -6.434e+00,
1.094e+01,  4.112e+01,  5.306e+01], dtype=float16)
2025-04-27 05:16:49.807793 test begin: paddle.sum(Tensor([8, 67200],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([8, 67200],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 8 / 8 (100%)
Max absolute difference among violations: 105.56
Max relative difference among violations: 1.971
ACTUAL: array([-3.4238e+00, -2.5547e+00,  1.0828e+01,  1.2695e+01, -1.2172e+01,
1.1758e+01, -6.2539e+00, -6.4697e-03], dtype=float16)
DESIRED: array([ 36.   ,  18.14 , -11.164,  98.2  ,  34.1  , 106.75 , -31.2  ,
105.56 ], dtype=float16)
2025-04-27 05:16:50.287543 test begin: paddle.sum(Tensor([8, 73984],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([8, 73984],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 8 / 8 (100%)
Max absolute difference among violations: 113.1
Max relative difference among violations: 1.057
ACTUAL: array([-6.844,  6.645, -7.633,  7.297, -3.166,  4.895, -9.01 ,  5.68 ],
dtype=float16)
DESIRED: array([-119.94,   69.75,  -84.  ,   26.05,  -16.06,  -96.4 , -108.4 ,
-101.06], dtype=float16)
2025-04-27 05:16:50.606135 test begin: paddle.sum(Tensor([8, 76160],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([8, 76160],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 8 / 8 (100%)
Max absolute difference among violations: 89.
Max relative difference among violations: 3.957
ACTUAL: array([-3.197 , -1.359 ,  8.    , -0.4248,  0.569 ,  3.256 , -4.082 ,
-9.16  ], dtype=float16)
DESIRED: array([-65.2  , -90.4  ,  60.   ,  15.79 , -38.1  , -27.81 , -52.2  ,
3.096], dtype=float16)
2025-04-27 05:16:51.798698 test begin: paddle.sum(Tensor([8, 82688],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([8, 82688],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 8 / 8 (100%)
Max absolute difference among violations: 172.1
Max relative difference among violations: 2.035
ACTUAL: array([-13.16 ,  -4.566,   8.95 , -25.1  , -11.42 ,   4.688,   3.24 ,
-6.934], dtype=float16)
DESIRED: array([-125.1 ,   20.83, -134.  , -154.5 , -117.4 , -124.8 ,   -3.13,
165.2 ], dtype=float16)
2025-04-27 05:16:52.203918 test begin: paddle.sum(Tensor([8, 84864],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([8, 84864],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 8 / 8 (100%)
Max absolute difference among violations: 131.9
Max relative difference among violations: 1.429
ACTUAL: array([ -2.371, -10.516,  10.3  ,  -2.27 , -16.47 , -22.84 ,   4.77 ,
-20.77 ], dtype=float16)
DESIRED: array([  55.78,  -85.06,  -64.94, -122.9 ,   38.38,  -63.25,   82.1 ,
-152.6 ], dtype=float16)
2025-04-27 05:16:52.825268 test begin: paddle.sum(Tensor([8, 85120],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([8, 85120],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 8 / 8 (100%)
Max absolute difference among violations: 101.5
Max relative difference among violations: 1.279
ACTUAL: array([ 6.684 ,  3.875 ,  7.33  , -0.4478, 11.484 ,  2.734 , -5.562 ,
5.125 ], dtype=float16)
DESIRED: array([ 97.5  ,   2.75 ,   3.215,  18.58 , -90.   ,  11.03 ,  31.84 ,
3.752], dtype=float16)
2025-04-27 05:16:53.263532 test begin: paddle.sum(Tensor([8, 87040],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([8, 87040],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 8 / 8 (100%)
Max absolute difference among violations: 173.6
Max relative difference among violations: 1.078
ACTUAL: array([-1.562 , -4.777 , 11.2   ,  8.03  , 11.45  , 10.54  , -0.1373,
-0.927 ], dtype=float16)
DESIRED: array([-169.6 ,   61.1 ,   14.88,  181.6 ,   73.8 ,   30.62,  121.25,
-95.06], dtype=float16)
2025-04-27 05:16:53.805805 test begin: paddle.sum(Tensor([8, 89216],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([8, 89216],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 8 / 8 (100%)
Max absolute difference among violations: 191.1
Max relative difference among violations: 1.329
ACTUAL: array([  1.679,  -6.383,   9.14 , -12.305, -20.16 ,   1.912,  11.09 ,
-3.404], dtype=float16)
DESIRED: array([  17.33, -117.5 ,   67.56,   45.7 ,  171.  ,  -48.12,  -33.72,
147.2 ], dtype=float16)
2025-04-27 05:16:54.544862 test begin: paddle.sum(Tensor([8, 92416],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([8, 92416],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 8 / 8 (100%)
Max absolute difference among violations: 171.4
Max relative difference among violations: 23.08
ACTUAL: array([ -9.4  ,  17.17 , -18.95 , -10.57 ,  -9.734,  -2.66 , -16.03 ,
10.125], dtype=float16)
DESIRED: array([  10.25 , -154.2  ,  -61.03 ,   -2.887,  -65.3  ,    9.71 ,
-0.666,  -68.1  ], dtype=float16)
2025-04-27 05:16:54.908602 test begin: paddle.sum(Tensor([8, 94080],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([8, 94080],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 8 / 8 (100%)
Max absolute difference among violations: 169.8
Max relative difference among violations: 1.358
ACTUAL: array([ 4.57  ,  3.31  , 11.08  , 19.17  ,  3.176 , 22.39  , -0.2637,
18.36  ], dtype=float16)
DESIRED: array([  92.6 ,   40.22,  168.1 ,  -53.4 ,   19.14,   23.58,  -25.53,
-151.4 ], dtype=float16)
2025-04-27 05:16:55.240842 test begin: paddle.sum(Tensor([8, 94848],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([8, 94848],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 8 / 8 (100%)
Max absolute difference among violations: 176.
Max relative difference among violations: 2.389
ACTUAL: array([ -8.85 ,  -6.055, -10.56 , -21.7  ,   8.68 ,   9.38 ,   4.156,
-15.734], dtype=float16)
DESIRED: array([157.4 , -28.75, -11.92, -78.1 ,  -6.25, 185.4 , -20.48, -89.2 ],
dtype=float16)
2025-04-27 05:16:56.679927 test begin: paddle.sum(Tensor([8, 97088],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([8, 97088],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 8 / 8 (100%)
Max absolute difference among violations: 160.4
Max relative difference among violations: 1.935
ACTUAL: array([  0.3613,  11.15  ,   8.76  , -14.766 ,   0.644 ,   1.818 ,
-0.6597,   6.785 ], dtype=float16)
DESIRED: array([  46.47 , -149.2  ,  107.   , -100.8  ,  -80.2  ,  118.9  ,
59.16 ,    2.312], dtype=float16)
2025-04-27 05:16:57.259089 test begin: paddle.sum(Tensor([8, 99712],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([8, 99712],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 8 / 8 (100%)
Max absolute difference among violations: 183.9
Max relative difference among violations: 2.39
ACTUAL: array([-12.36 ,   7.207,  -8.69 ,   9.234,  -9.   ,   5.652, -22.03 ,
17.   ], dtype=float16)
DESIRED: array([ -22.39 ,    2.125,   14.625,  120.7  , -192.9  ,  -15.88 ,
-99.44 ,  128.8  ], dtype=float16)
2025-04-27 05:16:57.608906 test begin: paddle.sum(Tensor([80, 102144],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([80, 102144],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 80 / 80 (100%)
Max absolute difference among violations: 208.9
Max relative difference among violations: 13.305
ACTUAL: array([-16.47  ,  13.7   ,   2.205 ,   5.227 ,  -1.368 , -11.22  ,
12.04  ,  -5.824 ,  -4.61  ,   0.0735,  -3.225 , -27.97  ,
8.56  ,   7.58  ,  -0.8066,   9.836 , -15.23  ,  11.69  ,...
DESIRED: array([  67.06 ,    9.44 ,   59.34 ,  171.4  ,  -77.94 ,  -36.62 ,
-38.1  ,  -85.5  , -142.8  , -205.8  ,  -45.9  ,  -51.8  ,
-137.1  , -156.8  ,  -69.2  ,  -10.35 ,   -5.13 ,  119.6  ,...
2025-04-27 05:17:15.684511 test begin: paddle.sum(Tensor([80, 54400],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([80, 54400],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 80 / 80 (100%)
Max absolute difference among violations: 176.9
Max relative difference among violations: 7.613
ACTUAL: array([ -1.599 ,   7.688 ,  -3.61  ,   9.516 ,   5.254 ,  14.23  ,
10.27  ,   8.11  ,   4.973 ,   7.57  ,   5.3   ,   0.115 ,
-10.42  ,  -3.432 , -19.92  ,  15.71  ,  -3.725 , -10.77  ,...
DESIRED: array([ -27.45  ,   96.6   ,   15.266 ,  110.4   ,   11.625 ,  -23.75  ,
1.192 ,  -30.22  ,   12.95  ,   53.38  ,   48.3   ,   32.7   ,
84.44  ,   64.75  ,  -64.2   ,  116.56  ,   11.47  ,  -32.25  ,...
2025-04-27 05:17:17.539450 test begin: paddle.sum(Tensor([80, 60800],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([80, 60800],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 80 / 80 (100%)
Max absolute difference among violations: 162.2
Max relative difference among violations: 23.47
ACTUAL: array([ -1.718  ,  -4.953  ,   7.375  ,  12.77   ,   9.41   , -10.36   ,
2.812  ,   6.45   , -13.61   ,  12.54   ,  13.04   ,   4.527  ,
-18.17   ,  -4.21   , -22.61   ,  -9.9    ,  16.94   ,   0.1448 ,...
DESIRED: array([-106.56  ,  -27.28  ,   16.62  ,  102.    ,  -11.664 ,  -73.3   ,
-3.889 ,   80.44  ,  102.06  ,  -90.7   ,  108.75  ,   24.42  ,
62.53  ,  -67.56  ,    7.312 ,   35.84  ,  101.75  ,  -77.6   ,...
2025-04-27 05:17:18.595530 test begin: paddle.sum(Tensor([80, 62400],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([80, 62400],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 80 / 80 (100%)
Max absolute difference among violations: 215.4
Max relative difference among violations: 4.676
ACTUAL: array([ 18.    , -17.56  ,  -7.734 , -16.05  , -11.79  ,   6.72  ,
-4.71  ,   3.814 , -15.15  ,  -4.92  ,  -2.055 , -13.99  ,
-7.42  ,   7.12  ,   6.047 ,   3.182 , -30.58  ,   7.414 ,...
DESIRED: array([  12.15 , -201.9  ,   -7.535,  101.75 , -116.7  , -103.9  ,
-56.44 ,   72.6  , -155.4  , -116.2  ,  124.06 ,  -71.25 ,
-129.9  ,  -39.44 ,   64.25 ,   37.62 , -246.   ,   22.73 ,...
2025-04-27 05:17:19.340058 test begin: paddle.sum(Tensor([80, 63232],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([80, 63232],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 80 / 80 (100%)
Max absolute difference among violations: 171.6
Max relative difference among violations: 15.1
ACTUAL: array([-26.97   ,   9.805  ,  -4.004  ,  23.17   , -16.31   ,   3.918  ,
0.1456 ,  -4.906  ,  -8.87   ,  -1.161  , -18.94   ,   5.44   ,
2.045  ,   8.03   ,   6.777  ,  -0.10785,  -3.113  ,  -6.812  ,...
DESIRED: array([-112.7   ,   33.5   ,  -17.64  ,  140.8   ,   52.7   ,  -16.66  ,
-62.97  ,  -61.06  , -104.44  , -115.1   ,  -44.72  ,  -24.27  ,
-20.03  ,  109.4   ,   99.9   ,   70.    ,  -35.2   ,  -10.414 ,...
2025-04-27 05:17:20.157944 test begin: paddle.sum(Tensor([80, 64000],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([80, 64000],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 80 / 80 (100%)
Max absolute difference among violations: 226.4
Max relative difference among violations: 19.28
ACTUAL: array([ 24.08  ,  -5.5   ,  15.    ,   4.004 ,  -0.1439,  -3.86  ,
-0.757 ,   4.19  ,  14.57  ,  -7.863 ,   9.8   ,   4.305 ,
-9.94  ,  11.28  ,  25.11  ,  -7.223 ,  13.05  ,   4.15  ,...
DESIRED: array([ 8.5312e+00,  1.0523e+01,  9.5562e+01,  2.8375e+01, -1.0388e+02,
-2.3242e-01, -5.8750e+00, -3.2500e+01, -2.5672e+01, -2.8047e+01,
1.2188e+01, -3.3875e+01, -1.0150e+02,  2.5641e+01, -4.8438e+00,...
2025-04-27 05:17:20.935383 test begin: paddle.sum(Tensor([80, 65664],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([80, 65664],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 80 / 80 (100%)
Max absolute difference among violations: 190.2
Max relative difference among violations: 10.43
ACTUAL: array([-19.19  ,  -7.164 ,  11.25  ,  14.516 ,   8.516 , -10.64  ,
-2.908 ,  -7.824 ,  -7.01  ,  -8.13  ,  11.31  ,  15.85  ,
12.164 ,  10.836 , -13.03  ,   8.09  ,  -6.074 ,  -4.906 ,...
DESIRED: array([   2.035,  -54.1  ,   41.9  ,   11.05 ,  -55.66 ,  -25.45 ,
-15.52 ,  -38.1  ,  -58.8  ,  -16.55 ,   74.   ,   57.56 ,
32.03 ,   93.25 ,  -51.   ,   74.3  , -107.2  ,    2.049,...
2025-04-27 05:17:21.686320 test begin: paddle.sum(Tensor([80, 67200],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([80, 67200],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 80 / 80 (100%)
Max absolute difference among violations: 181.6
Max relative difference among violations: 22.69
ACTUAL: array([-10.78  ,  -4.863 ,  -2.09  ,  -5.08  , -13.56  ,   3.828 ,
-7.26  ,  -0.708 , -25.95  ,  -1.63  ,  10.45  ,   3.436 ,
-12.1   ,   5.72  ,  -8.664 ,   4.785 ,   1.28  ,   0.244 ,...
DESIRED: array([-7.2875e+01, -2.3453e+01,  3.6844e+01,  6.8625e+01, -6.6875e+00,
1.5430e+01, -6.6895e-01, -5.2531e+01, -8.0312e+01, -3.4746e+00,
-1.6975e+02, -1.0956e+02,  2.7297e+01,  3.2438e+01, -9.5375e+01,...
2025-04-27 05:17:22.369364 test begin: paddle.sum(Tensor([80, 69888],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([80, 69888],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 80 / 80 (100%)
Max absolute difference among violations: 243.5
Max relative difference among violations: 6.63
ACTUAL: array([ 10.45  ,   0.279 , -14.79  ,  16.2   ,  14.35  ,   8.55  ,
-5.438 ,   4.85  ,  13.17  ,  -6.973 , -17.4   ,   3.443 ,
12.414 ,  26.22  ,  10.08  ,   1.975 ,  -8.625 , -10.64  ,...
DESIRED: array([  31.47 ,   -8.16 ,   52.   ,   39.4  ,   -9.055,  -37.97 ,
52.3  ,   15.875,    7.555,  -67.25 , -164.5  ,   10.555,
58.53 ,  186.6  ,   64.7  ,   31.48 ,  -10.375,   44.2  ,...
2025-04-27 05:17:23.204486 test begin: paddle.sum(Tensor([80, 73984],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([80, 73984],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 80 / 80 (100%)
Max absolute difference among violations: 190.2
Max relative difference among violations: 5.215
ACTUAL: array([ 1.0008e+01,  1.4531e+01, -1.6891e+01, -7.9062e+00,  9.7705e-01,
1.1188e+01,  2.6855e+00, -2.2234e+01, -4.7363e-01,  1.1031e+01,
-3.5234e+00, -2.0422e+01, -1.8750e+01,  2.7988e+00, -1.1455e+00,...
DESIRED: array([ -35.88 ,   30.81 , -107.   , -113.6  ,   53.4  ,   21.4  ,
12.94 , -101.56 ,  126.3  ,  -40.78 ,   38.28 ,  -96.5  ,
-80.94 ,   62.66 ,    1.933,  -49.84 ,  -58.28 ,   22.88 ,...
2025-04-27 05:17:23.988652 test begin: paddle.sum(Tensor([80, 76160],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([80, 76160],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 79 / 80 (98.8%)
Max absolute difference among violations: 263.5
Max relative difference among violations: 11.13
ACTUAL: array([  9.12  ,  23.7   ,   8.94  ,  -7.008 ,   1.127 ,  -3.418 ,
4.79  ,  -3.092 ,  -8.36  , -17.7   , -11.16  ,  -6.53  ,
15.055 ,  -6.934 ,  -0.8887,  -8.22  ,  -8.89  ,  -7.727 ,...
DESIRED: array([  43.66  ,   64.3   , -150.    , -101.8   , -155.2   ,  113.1   ,
0.3948,   62.3   ,  -26.44  ,   28.19  ,  -81.5   ,   88.2   ,
11.13  ,   64.44  ,   99.4   ,   35.5   ,   27.39  , -133.9   ,...
2025-04-27 05:17:24.794244 test begin: paddle.sum(Tensor([80, 82688],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([80, 82688],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 80 / 80 (100%)
Max absolute difference among violations: 221.
Max relative difference among violations: 35.2
ACTUAL: array([ -9.11  ,  13.15  ,  -8.836 ,  -0.4417, -20.11  ,   1.347 ,
-14.05  ,  -0.8555,  11.99  ,  -4.46  , -13.484 ,  -6.984 ,
5.91  ,   1.677 , -15.64  ,   0.744 ,   6.316 ,  -3.344 ,...
DESIRED: array([ 4.8500e+01,  8.5875e+01,  1.2227e+01,  1.3138e+02, -1.0956e+02,
8.7875e+01,  1.7662e+02, -1.1328e+00, -6.8438e+01, -1.6350e+02,
-9.9125e+01,  9.9812e+01,  6.6992e+00, -7.6438e+01, -2.8875e+01,...
2025-04-27 05:17:25.567859 test begin: paddle.sum(Tensor([80, 84864],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([80, 84864],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 80 / 80 (100%)
Max absolute difference among violations: 192.6
Max relative difference among violations: 262.5
ACTUAL: array([ 11.85   ,   3.219  ,   8.42   ,   6.5    , -10.22   ,  13.85   ,
-0.4336 ,  -2.264  ,   9.92   ,   7.29   ,   9.03   ,   0.739  ,
-4.227  ,   5.68   ,  -7.91   ,  14.26   , -12.26   ,  10.32   ,...
DESIRED: array([-2.0109e+01, -4.8969e+01, -3.8750e+01,  4.0844e+01, -5.9969e+01,
7.0375e+01, -5.2938e+01, -7.1938e+01, -1.3812e+02,  2.7578e+01,
1.2156e+01,  1.9338e+02,  6.5125e+01,  6.0938e+01, -5.8219e+01,...
2025-04-27 05:17:26.328721 test begin: paddle.sum(Tensor([80, 85120],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([80, 85120],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 80 / 80 (100%)
Max absolute difference among violations: 160.8
Max relative difference among violations: 3.906
ACTUAL: array([  4.09  ,  17.42  ,   5.418 ,   2.654 ,  13.48  ,  -0.4387,
-3.467 ,   4.945 ,  17.58  , -14.914 ,  -1.734 , -16.25  ,
17.31  , -12.766 ,   0.815 ,  -6.61  ,  -9.87  , -20.72  ,...
DESIRED: array([ 105.6  ,  -93.4  ,   71.56 ,   19.12 ,  -30.36 ,   63.84 ,
108.7  ,   23.67 ,  131.   ,   26.81 , -107.3  ,   28.36 ,
-71.44 ,  -73.2  ,   45.56 ,  130.2  ,  -15.04 ,    7.13 ,...
2025-04-27 05:17:27.158239 test begin: paddle.sum(Tensor([80, 86016],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([80, 86016],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 80 / 80 (100%)
Max absolute difference among violations: 259.5
Max relative difference among violations: 3.213
ACTUAL: array([  1.483 ,   1.201 ,  15.47  ,  -7.28  ,  -4.574 ,   9.1   ,
-16.14  ,  -5.53  , -17.44  ,  16.08  ,  -1.132 ,  -2.223 ,
3.697 ,   8.81  , -20.69  , -26.03  , -12.22  ,   0.7534,...
DESIRED: array([  98.4  ,   12.38 ,   68.6  ,   70.06 ,  -59.38 ,  113.3  ,
-42.8  ,   36.66 ,   64.3  ,   53.97 ,   -5.92 ,  -47.3  ,
-47.12 ,   66.9  ,  -92.75 ,  -21.9  ,   30.31 ,   82.44 ,...
2025-04-27 05:17:28.076967 test begin: paddle.sum(Tensor([80, 89984],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([80, 89984],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 80 / 80 (100%)
Max absolute difference among violations: 194.2
Max relative difference among violations: 888.5
ACTUAL: array([-10.61  , -11.1   ,   1.903 ,  -3.213 , -21.3   ,  -0.7344,
-18.52  ,   4.426 ,  -7.746 ,  -3.016 ,   3.652 ,   6.31  ,
-17.7   , -12.9   ,  11.35  ,  -6.34  ,   7.66  ,  17.56  ,...
DESIRED: array([ 7.8250e+01,  8.9438e+01, -1.6188e+02, -1.2675e+02,  2.3066e+00,
3.1578e+01, -7.4688e+01,  4.1469e+01, -1.5156e+01,  4.7375e+01,
7.7000e+01,  2.0050e+02,  3.2375e+01, -6.6188e+01,  4.4625e+01,...
2025-04-27 05:17:29.014828 test begin: paddle.sum(Tensor([80, 91392],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([80, 91392],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 80 / 80 (100%)
Max absolute difference among violations: 255.8
Max relative difference among violations: 2.71
ACTUAL: array([  4.75   ,  -8.57   ,   2.242  ,   2.52   , -13.92   ,   7.523  ,
17.38   ,  -4.742  ,  -4.91   , -10.8    ,   6.63   ,  -8.23   ,
-25.83   ,   5.02   ,   8.48   ,  -8.32   , -13.86   , -17.92   ,...
DESIRED: array([-251.   ,  -80.1  , -105.2  ,   73.06 ,   30.22 ,   78.7  ,
11.945,  -48.25 , -107.44 ,  -39.   ,   37.62 ,   99.6  ,
-164.1  ,  -22.17 ,   45.56 ,  -74.   ,  -58.8  , -100.2  ,...
2025-04-27 05:17:29.979509 test begin: paddle.sum(Tensor([80, 92352],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([80, 92352],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 80 / 80 (100%)
Max absolute difference among violations: 211.5
Max relative difference among violations: 4.598
ACTUAL: array([-25.34   ,   9.09   ,   0.6655 , -11.766  , -13.59   , -25.22   ,
-24.22   ,  -3.23   ,   5.438  ,  12.01   ,  -1.78   ,   0.779  ,
1.529  ,  -6.87   ,  -2.81   ,  -8.58   ,   1.313  ,  14.38   ,...
DESIRED: array([ -86.3   ,  -20.02  ,  -66.25  ,    9.06  ,  -44.9   ,  -25.92  ,
-137.9   ,   68.56  ,  154.4   ,  -72.44  ,   12.67  ,   91.2   ,
-51.62  ,   33.78  , -107.94  ,  -22.2   ,  -56.72  ,   67.2   ,...
2025-04-27 05:17:31.006047 test begin: paddle.sum(Tensor([80, 92416],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([80, 92416],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 80 / 80 (100%)
Max absolute difference among violations: 196.9
Max relative difference among violations: 3.824
ACTUAL: array([ 12.89  , -13.88  , -12.57  , -10.336 , -19.83  ,  -3.207 ,
5.797 , -12.695 ,   9.73  ,   3.895 ,   2.238 , -10.055 ,
-8.37  ,  -4.38  ,   0.5195, -17.84  ,  -1.499 , -10.695 ,...
DESIRED: array([ 127.44 ,  -12.66 ,  -43.12 ,  -45.7  ,  155.6  ,   61.62 ,
-63.6  , -101.06 ,   -9.875,  -47.   ,   70.25 ,  -72.4  ,
-47.1  ,   71.   ,   68.6  ,  -18.73 , -139.   ,    4.242,...
2025-04-27 05:17:31.997514 test begin: paddle.sum(Tensor([80, 94080],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([80, 94080],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 80 / 80 (100%)
Max absolute difference among violations: 179.6
Max relative difference among violations: 32.38
ACTUAL: array([ 11.18  ,  10.3   ,  10.66  ,  -3.992 ,   3.023 ,  -9.32  ,
-8.766 ,   9.86  ,   9.36  ,  -0.3506,  -4.75  ,   8.57  ,
-11.41  ,   3.85  ,   2.158 ,  -2.943 , -10.01  ,  -0.793 ,...
DESIRED: array([ -29.77 ,  -38.66 ,   17.55 ,  -58.9  ,   15.22 ,   26.6  ,
-71.   ,   26.61 ,  -10.23 ,   51.56 ,  -36.44 ,    9.42 ,
-17.45 ,   26.75 ,  111.   ,  -54.56 ,   89.44 ,   85.56 ,...
2025-04-27 05:17:32.869337 test begin: paddle.sum(Tensor([80, 97088],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([80, 97088],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 80 / 80 (100%)
Max absolute difference among violations: 233.1
Max relative difference among violations: 10.914
ACTUAL: array([-14.3   ,  -2.994 ,   7.992 ,   9.47  ,  22.03  ,   8.53  ,
6.754 ,  -1.105 ,  -3.967 ,   7.426 ,   1.733 ,  -0.5186,
7.65  ,  -1.76  ,  -7.438 ,  -7.48  ,  -7.76  ,  -9.266 ,...
DESIRED: array([-247.4   ,  -32.47  , -155.1   ,  -61.34  ,  169.    ,   89.94  ,
-82.25  ,  150.    ,  122.5   ,   60.75  ,  158.2   ,  169.9   ,
-104.56  ,  -85.2   ,   44.3   ,  -78.56  ,  -28.17  ,   22.33  ,...
2025-04-27 05:17:33.879862 test begin: paddle.sum(Tensor([80, 97280],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([80, 97280],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 80 / 80 (100%)
Max absolute difference among violations: 279.5
Max relative difference among violations: 55.38
ACTUAL: array([ -2.904 ,   6.84  , -16.98  ,  17.52  ,  10.25  ,  -2.738 ,
-7.05  ,  -3.734 ,   1.818 ,  -8.38  ,  -6.477 ,  -2.82  ,
1.178 ,   9.42  , -18.28  ,  -0.0974,  -3.516 ,  -2.398 ,...
DESIRED: array([ 184.2  ,   -1.366, -155.4  ,  -46.16 ,  -35.4  , -120.5  ,
-17.52 ,  113.44 ,  -35.2  ,   24.77 ,  -46.6  ,  -25.02 ,
7.883,  -39.53 ,  -31.19 ,  -75.8  ,   -3.672,  -66.25 ,...
2025-04-27 05:17:35.030996 test begin: paddle.sum(Tensor([800],"float16"), )
[accuracy error] paddle.sum(Tensor([800],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 1.086
Max relative difference among violations: 0.1184
ACTUAL: array(8.086, dtype=float16)
DESIRED: array(9.17, dtype=float16)
2025-04-27 05:17:49.792915 test begin: paddle.sum(Tensor([84, 102144],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([84, 102144],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 84 / 84 (100%)
Max absolute difference among violations: 249.9
Max relative difference among violations: 709.
ACTUAL: array([ 1.1055e+01,  1.7047e+01,  2.3625e+01,  1.4883e+01, -7.9141e+00,
-3.2324e+00,  1.4617e+01,  1.0672e+01,  6.1328e+00,  1.4111e+00,
6.6992e+00, -1.0420e+00, -1.4541e+00, -7.7109e+00,  1.2609e+01,...
DESIRED: array([ 5.2250e+01,  2.5219e+01,  1.3225e+02, -1.3388e+02, -1.3812e+02,
1.0188e+02, -6.1312e+01,  2.6050e+02, -7.2500e+01, -1.2738e+02,
1.1938e+02,  6.6562e+01, -1.4862e+02,  1.0895e-02,  4.5430e+00,...
2025-04-27 05:17:50.894107 test begin: paddle.sum(Tensor([84, 104832],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([84, 104832],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 84 / 84 (100%)
Max absolute difference among violations: 260.5
Max relative difference among violations: 2.77
ACTUAL: array([-16.64   ,   7.344  ,  10.44   ,  -1.821  , -11.74   ,  -5.27   ,
9.21   ,  -1.766  ,  -2.559  ,   9.34   ,   5.55   ,  -5.055  ,
0.09033,   1.836  ,  -5.82   ,   7.465  ,   1.544  , -17.66   ,...
DESIRED: array([ -78.   ,   59.2  ,  -48.8  ,  -78.7  ,   47.5  , -107.3  ,
-50.25 ,  -41.   ,  -23.3  ,  -67.7  ,   13.41 ,  -47.38 ,
101.3  ,  -82.94 ,   55.   ,   77.3  , -160.6  ,   52.84 ,...
2025-04-27 05:18:03.791765 test begin: paddle.sum(Tensor([84, 54400],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([84, 54400],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 84 / 84 (100%)
Max absolute difference among violations: 199.8
Max relative difference among violations: 5.836
ACTUAL: array([ -8.58  , -14.85  ,  -9.336 ,   2.334 ,   0.4043,   0.726 ,
-1.833 , -10.58  ,   1.588 , -15.4   , -13.15  ,   7.465 ,
-1.198 , -10.67  ,  11.72  , -17.77  ,  10.59  , -14.42  ,...
DESIRED: array([ -70.06 ,   21.39 ,  -22.62 ,   22.38 ,    7.363, -100.8  ,
-86.44 ,  -54.3  ,  -69.25 ,  -51.47 ,    8.64 ,  -55.2  ,
-61.9  ,  -86.25 ,  -24.23 ,  -59.4  ,   66.56 ,   -5.547,...
2025-04-27 05:18:04.595914 test begin: paddle.sum(Tensor([84, 57600],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([84, 57600],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 84 / 84 (100%)
Max absolute difference among violations: 137.2
Max relative difference among violations: 3.896
ACTUAL: array([ -7.9   ,  -8.73  ,   9.65  ,  -6.96  ,  15.195 , -19.73  ,
11.484 ,   0.2494,  -8.59  ,  10.03  , -12.75  , -19.97  ,
0.2915,  -3.37  ,  -6.47  ,   2.26  ,  12.266 ,  -6.348 ,...
DESIRED: array([-101.3  ,    8.66 ,    4.508,   54.94 ,   87.2  ,   47.66 ,
3.465,  -21.92 ,  -53.16 ,  -10.805,  101.7  ,  -16.8  ,
-9.07 ,  -38.94 ,  -88.3  ,   80.06 ,  -55.44 ,   11.3  ,...
2025-04-27 05:18:05.377597 test begin: paddle.sum(Tensor([84, 60800],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([84, 60800],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 84 / 84 (100%)
Max absolute difference among violations: 139.6
Max relative difference among violations: 84.
ACTUAL: array([ 15.3   ,  10.766 ,  -3.705 ,  10.484 ,   4.355 ,  -0.8984,
3.455 , -12.22  ,   9.12  ,  -0.2856,   3.33  ,  -4.97  ,
-1.178 ,  18.89  ,   8.984 ,   8.2   ,  -2.26  ,   6.617 ,...
DESIRED: array([  57.5   ,   53.25  ,  -66.94  ,    6.797 ,   15.16  ,   61.03  ,
62.16  ,  -77.7   ,  -14.63  ,   58.4   ,  -22.84  ,    4.453 ,
-18.25  ,  -51.06  ,   45.06  ,   32.53  ,   -3.135 ,  -49.25  ,...
2025-04-27 05:18:06.099690 test begin: paddle.sum(Tensor([84, 62400],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([84, 62400],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 84 / 84 (100%)
Max absolute difference among violations: 181.8
Max relative difference among violations: 40.
ACTUAL: array([ 10.125 ,  -8.77  ,  -4.527 ,   2.55  ,   9.71  ,   8.86  ,
14.04  ,  13.04  ,  -7.438 , -13.    ,  -5.586 ,   4.84  ,
4.043 ,  -5.94  ,  15.4   ,  10.8   ,  15.734 ,  -0.1915,...
DESIRED: array([ -30.44  ,  -51.84  , -160.1   ,  -66.56  ,  -24.81  ,  115.7   ,
50.56  ,  112.44  ,   19.14  ,    0.4932,  -86.    ,  104.94  ,
34.44  ,   69.2   ,  125.8   ,   54.16  ,   23.86  ,  -74.25  ,...
2025-04-27 05:18:06.841620 test begin: paddle.sum(Tensor([84, 67200],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([84, 67200],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 84 / 84 (100%)
Max absolute difference among violations: 206.1
Max relative difference among violations: 5.23
ACTUAL: array([ -0.5967,  -1.503 ,   6.594 ,   9.16  ,   5.586 ,  -7.41  ,
3.51  ,   8.75  ,  -7.69  ,   3.934 ,   0.418 ,   9.29  ,
-2.334 ,   4.61  , -13.27  ,  18.06  ,  -2.633 ,  -0.1426,...
DESIRED: array([-7.8438e+01,  1.6138e+02, -4.3562e+01,  4.3750e+01, -3.6094e+01,
-1.5883e+01, -1.9000e+02,  3.6875e+01,  6.0781e+01, -3.0031e+01,
1.4988e+02, -2.5609e+01,  1.6828e+01, -1.8266e+01, -5.6594e+01,...
2025-04-27 05:18:07.590332 test begin: paddle.sum(Tensor([84, 69888],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([84, 69888],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 84 / 84 (100%)
Max absolute difference among violations: 157.4
Max relative difference among violations: 9.85
ACTUAL: array([  0.791 ,   5.652 ,  -2.043 ,  -1.422 ,  12.72  , -17.03  ,
12.58  ,   9.11  ,   0.794 ,  13.8   ,  -8.35  ,   2.18  ,
5.727 ,  -0.189 ,   3.904 ,   3.863 ,  -1.193 ,  18.64  ,...
DESIRED: array([  55.8   ,  -41.62  ,  -24.11  ,  -17.8   ,  -38.34  ,  -72.1   ,
1.491 ,  -70.4   ,  -47.84  ,    3.986 ,   -0.8022,  -40.66  ,
-30.4   ,   13.51  ,   -9.14  ,  -57.66  , -123.94  ,   54.72  ,...
2025-04-27 05:18:08.444926 test begin: paddle.sum(Tensor([84, 72960],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([84, 72960],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 84 / 84 (100%)
Max absolute difference among violations: 157.1
Max relative difference among violations: 5.086
ACTUAL: array([  0.3743,  -5.574 , -20.1   ,   0.7456,   5.297 ,   5.96  ,
23.1   , -16.55  ,   8.414 ,   7.844 ,  31.81  ,  14.89  ,
3.29  ,  -0.333 ,  14.54  ,   3.152 ,   7.754 ,  -3.562 ,...
DESIRED: array([ -68.75 ,  -37.3  ,   43.28 ,  -12.5  ,   18.3  ,  127.56 ,
36.94 , -123.8  ,  -73.3  ,   39.1  ,   37.12 , -122.2  ,
68.7  ,   93.44 ,   -3.559,   28.48 ,  -95.4  ,   91.25 ,...
2025-04-27 05:18:09.371742 test begin: paddle.sum(Tensor([84, 73984],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([84, 73984],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 84 / 84 (100%)
Max absolute difference among violations: 233.9
Max relative difference among violations: 23.55
ACTUAL: array([ 24.81  ,  27.55  ,   8.64  ,   5.84  ,   5.973 , -23.05  ,
17.39  ,   1.3125,   9.2   ,   7.734 ,   7.543 ,   2.926 ,
-11.836 ,   1.17  ,  12.85  ,  10.61  , -18.62  ,  -5.5   ,...
DESIRED: array([  69.7   ,   45.3   ,   41.38  ,   91.94  ,  -23.34  ,  -48.2   ,
126.2   ,   55.47  ,  109.9   ,  -61.66  ,  -42.72  ,   -7.094 ,
-50.56  , -227.6   ,   40.62  ,   14.805 ,  -16.31  ,  -45.38  ,...
2025-04-27 05:18:10.093954 test begin: paddle.sum(Tensor([84, 75392],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([84, 75392],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 84 / 84 (100%)
Max absolute difference among violations: 187.1
Max relative difference among violations: 4.207
ACTUAL: array([ 4.1523e+00, -1.3859e+01,  5.8906e+00,  1.3844e+01,  5.6250e+00,
1.6016e+01,  2.3703e+01, -3.5859e+00, -9.1094e+00, -1.2898e+01,
-1.3414e+01, -2.4961e+00,  5.1133e+00,  1.1891e+01, -1.4180e+01,...
DESIRED: array([  11.586,  -96.25 ,  -11.9  ,   88.6  ,  189.5  ,   81.06 ,
-13.45 ,   15.56 ,  -85.56 ,  115.7  ,   11.516,   29.84 ,
-52.22 ,   18.25 ,  -34.94 ,   41.5  ,   38.66 ,   64.75 ,...
2025-04-27 05:18:10.854016 test begin: paddle.sum(Tensor([84, 78336],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([84, 78336],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 84 / 84 (100%)
Max absolute difference among violations: 260.2
Max relative difference among violations: 17.3
ACTUAL: array([-22.08   ,  13.96   , -15.11   ,  17.25   , -11.15   ,  -8.52   ,
-21.67   ,  -7.13   ,   4.207  ,   0.754  ,   9.23   ,   0.04858,
-8.43   ,  -6.246  , -10.89   ,  -9.15   ,  -2.5    ,  11.32   ,...
DESIRED: array([-110.44 ,  103.7  ,  -28.77 ,   57.6  ,  198.8  ,  -23.69 ,
-82.44 ,   88.7  ,  -84.25 ,   93.7  ,  -23.02 ,  -28.72 ,
-89.8  ,  -97.7  ,  -73.7  ,    6.27 ,  187.1  ,   51.   ,...
2025-04-27 05:18:11.786810 test begin: paddle.sum(Tensor([84, 78400],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([84, 78400],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 84 / 84 (100%)
Max absolute difference among violations: 234.5
Max relative difference among violations: 311.8
ACTUAL: array([ 20.95  ,  -2.156 ,   4.9   , -11.78  ,  14.69  ,   9.74  ,
5.895 , -11.68  ,  -4.863 ,  19.66  , -14.28  , -17.39  ,
-2.047 ,   9.86  ,   2.844 , -11.88  ,   9.95  ,   9.85  ,...
DESIRED: array([ 1.9112e+02, -3.7344e+01,  1.2975e+02, -2.8828e+01,  9.5500e+01,
-1.3289e+01,  8.5062e+01, -3.6836e+00,  6.9188e+01,  8.4312e+01,
4.3031e+01, -5.5603e-02,  1.3800e+02, -3.0312e+01,  1.0725e+02,...
2025-04-27 05:18:12.601664 test begin: paddle.sum(Tensor([84, 82688],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([84, 82688],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 84 / 84 (100%)
Max absolute difference among violations: 219.1
Max relative difference among violations: 8.65
ACTUAL: array([  8.57   ,  18.81   ,   6.84   , -10.92   ,  -5.41   ,  15.52   ,
5.926  ,  -5.406  , -35.53   ,  -1.633  , -25.22   ,  10.5    ,
15.53   ,  -8.664  ,  -3.29   ,   2.885  ,   3.088  ,   5.324  ,...
DESIRED: array([ -11.055,  156.9  ,   72.5  ,    4.51 ,  104.4  ,  105.9  ,
77.7  , -134.8  ,  -28.6  ,   -4.984,   69.1  ,   24.9  ,
-66.06 ,  -60.62 ,  -52.34 ,   28.42 ,   29.23 ,   82.6  ,...
2025-04-27 05:18:13.694809 test begin: paddle.sum(Tensor([84, 84480],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([84, 84480],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 84 / 84 (100%)
Max absolute difference among violations: 261.2
Max relative difference among violations: 128.
ACTUAL: array([-4.5166e-01,  2.3511e-01,  9.6250e+00,  2.2547e+01,  9.9062e+00,
4.2617e+00,  4.5273e+00,  7.7500e+00,  1.5039e+01,  1.4320e+01,
-2.9500e+01,  5.4961e+00,  3.2676e+00,  2.5016e+01,  5.3945e+00,...
DESIRED: array([ 5.1844e+01,  1.9836e-01,  6.7375e+01,  1.2381e+02,  7.7875e+01,
7.3562e+01, -3.1547e+01,  4.5594e+01,  7.9312e+01, -9.5438e+01,
-6.1719e+01, -1.5425e+02,  7.4500e+01,  1.1081e+02,  2.6675e+02,...
2025-04-27 05:18:14.628679 test begin: paddle.sum(Tensor([84, 84864],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([84, 84864],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 84 / 84 (100%)
Max absolute difference among violations: 182.6
Max relative difference among violations: 12.02
ACTUAL: array([ 7.1289e+00,  5.3672e+00, -1.3883e+01, -6.0498e-01, -1.0328e+01,
9.7607e-01,  4.9492e+00,  9.6719e+00,  5.4541e-01, -1.5195e+00,
-1.0086e+01,  7.4258e+00,  1.6156e+01, -1.2578e+00,  1.4541e+00,...
DESIRED: array([ 132.4  ,   31.11 ,   76.8  ,  -46.7  ,   87.9  ,  -19.5  ,
34.5  ,   19.72 ,  116.4  , -110.2  ,   10.68 ,  -40.56 ,
35.28 ,   42.34 ,  -30.4  ,   85.   ,   95.06 ,   92.5  ,...
2025-04-27 05:18:15.573568 test begin: paddle.sum(Tensor([84, 91392],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([84, 91392],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 84 / 84 (100%)
Max absolute difference among violations: 230.1
Max relative difference among violations: 3.3
ACTUAL: array([ -2.027 ,   7.66  ,  21.11  ,  -6.914 , -11.65  ,   0.2466,
6.074 , -16.47  ,  14.58  ,   2.545 , -23.53  ,  13.016 ,
-0.2483,  12.836 ,  -6.91  ,   3.838 ,   7.098 ,  -2.52  ,...
DESIRED: array([  77.6  ,   39.94 ,   40.72 ,   17.44 ,    9.1  ,   55.34 ,
36.06 ,  -99.2  ,    3.617,   69.   ,  -70.8  ,   87.94 ,
-78.25 ,   -5.582, -153.9  ,  131.1  ,   96.   ,  -45.2  ,...
2025-04-27 05:18:16.605114 test begin: paddle.sum(Tensor([84, 92416],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([84, 92416],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 84 / 84 (100%)
Max absolute difference among violations: 204.5
Max relative difference among violations: 345.5
ACTUAL: array([  2.3   ,  -1.014 ,   2.389 ,  -8.58  ,   3.41  ,  -4.723 ,
2.541 ,  -4.062 ,  14.01  , -10.79  ,  -4.082 , -10.63  ,
-0.2666,   4.676 ,  -3.266 ,   2.502 ,  -1.952 ,   3.373 ,...
DESIRED: array([-8.8875e+01,  5.9357e-02,  2.8516e+01,  6.3969e+01, -6.9188e+01,
-4.5531e+01, -2.9625e+01,  1.3538e+02, -7.3500e+01, -1.2156e+02,
-1.1650e+02, -4.1969e+01,  1.5906e+01, -4.7062e+01, -2.2109e+01,...
2025-04-27 05:18:17.600599 test begin: paddle.sum(Tensor([84, 97280],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([84, 97280],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 84 / 84 (100%)
Max absolute difference among violations: 223.
Max relative difference among violations: 3.412
ACTUAL: array([-22.64  ,  -1.271 , -13.66  ,  10.54  ,  -3.56  , -10.74  ,
-3.107 , -17.84  ,  18.27  ,   4.63  , -16.58  ,  10.51  ,
14.35  ,  -6.504 ,   6.312 ,   4.938 ,  -4.863 ,  -2.93  ,...
DESIRED: array([-105.25 ,  -81.2  ,  191.8  , -107.7  ,   64.44 ,   41.88 ,
-97.4  , -191.4  ,  -18.72 ,  110.9  ,  -43.75 ,   -4.355,
28.78 ,   -5.75 ,   64.8  ,  -53.2  , -111.3  ,   23.56 ,...
2025-04-27 05:18:37.791311 test begin: paddle.sum(Tensor([88, 102144],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([88, 102144],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 88 / 88 (100%)
Max absolute difference among violations: 262.8
Max relative difference among violations: 2.93
ACTUAL: array([ 1.8109e+01, -2.0684e+00, -1.7625e+01,  3.6289e+00,  1.4836e+01,
1.1000e+01,  4.2930e+00,  2.5000e+00,  4.4727e+00,  1.1133e+01,
4.5166e-03, -6.5195e+00, -9.2812e+00, -9.6777e-01,  7.1211e+00,...
DESIRED: array([ 161.5  ,   41.44 ,   41.7  ,   54.1  , -103.   ,   -5.703,
-21.52 , -105.7  ,   44.62 ,    7.4  ,  171.5  , -112.8  ,
76.4  ,   98.9  ,  -11.68 ,   95.8  ,  -60.28 ,   34.56 ,...
2025-04-27 05:19:00.446357 test begin: paddle.sum(Tensor([88, 54400],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([88, 54400],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 87 / 88 (98.9%)
Max absolute difference among violations: 172.9
Max relative difference among violations: 7.44
ACTUAL: array([ 17.22  , -13.305 , -14.53  ,  -4.516 ,  -6.004 , -11.8   ,
3.076 ,  -8.63  ,   8.484 ,  -5.004 ,  11.836 ,   3.771 ,
-7.305 ,   8.3   ,   4.43  , -22.55  ,  15.25  ,  -4.918 ,...
DESIRED: array([  58.75 ,  -78.2  ,   41.   ,  -19.69 ,   38.72 ,   38.12 ,
68.6  ,  146.2  ,  -83.7  ,  107.75 ,   45.66 ,   29.3  ,
-50.34 ,   79.75 ,   39.6  ,   22.77 ,  -33.44 ,  -75.5  ,...
2025-04-27 05:19:01.544912 test begin: paddle.sum(Tensor([88, 56000],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([88, 56000],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 88 / 88 (100%)
Max absolute difference among violations: 156.1
Max relative difference among violations: 5.15
ACTUAL: array([ 6.3594e+00,  2.5812e+01,  6.9453e+00,  1.3422e+01, -1.4391e+01,
-1.9000e+01,  2.8086e+00,  3.2598e+00,  1.1836e+01,  6.5977e+00,
-3.6289e+00, -5.6172e+00,  2.2797e+01, -6.2500e+00, -3.4082e+00,...
DESIRED: array([  14.61 ,   67.5  ,  -83.44 ,   32.94 , -153.5  ,   30.7  ,
-17.4  ,  -49.44 ,  -61.97 ,   14.586,   -3.51 , -138.5  ,
26.48 ,  -15.33 , -109.25 ,  -78.2  ,  -78.75 ,  -33.44 ,...
2025-04-27 05:19:02.508489 test begin: paddle.sum(Tensor([88, 57600],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([88, 57600],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 88 / 88 (100%)
Max absolute difference among violations: 164.5
Max relative difference among violations: 23.
ACTUAL: array([  0.0979,   2.64  ,   3.13  ,  14.37  ,  -1.555 ,   9.99  ,
4.1   ,   3.877 ,   6.76  ,  -5.086 ,  -3.459 ,  -0.646 ,
-3.496 ,  20.83  ,  14.17  , -17.81  ,   3.697 ,   9.38  ,...
DESIRED: array([  55.75  ,  -28.4   ,   16.97  ,   -0.6533,  -82.4   ,  147.1   ,
42.    ,   31.12  ,  -51.25  ,  -97.6   ,  -97.4   ,   83.8   ,
-21.28  ,   73.2   ,  -38.22  , -182.2   ,   50.75  ,  -59.22  ,...
2025-04-27 05:19:03.466260 test begin: paddle.sum(Tensor([88, 59200],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([88, 59200],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 88 / 88 (100%)
Max absolute difference among violations: 215.8
Max relative difference among violations: 3.02
ACTUAL: array([-16.62  , -12.836 ,  -8.086 ,   7.848 ,  16.28  ,   7.477 ,
-8.68  ,  -1.201 ,  -5.996 ,  -3.133 ,   0.8276,   6.582 ,
2.305 ,  11.95  ,   9.66  ,  11.47  ,   8.914 ,  -6.99  ,...
DESIRED: array([-119.4  ,  -89.8  ,   47.56 ,   72.1  ,  116.75 ,  -12.1  ,
-23.14 ,  -57.47 ,  -49.66 ,   -4.79 ,  -13.24 ,   56.84 ,
-17.53 ,   41.78 ,  137.   ,  227.2  ,   42.94 ,   14.66 ,...
2025-04-27 05:19:04.137523 test begin: paddle.sum(Tensor([88, 60800],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([88, 60800],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 88 / 88 (100%)
Max absolute difference among violations: 172.4
Max relative difference among violations: 35.12
ACTUAL: array([ -0.8223 ,   3.719  ,  -2.984  , -17.98   ,  -6.56   , -16.36   ,
-15.45   ,  -5.06   ,  -9.27   ,   5.293  ,  17.7    ,   3.215  ,
14.16   ,  -0.493  ,  -3.691  ,   2.6    ,  13.81   ,   5.285  ,...
DESIRED: array([-1.2706e+02, -9.6250e+01,  7.4750e+01, -2.8672e+01, -6.1219e+01,
6.2031e+01,  2.5953e+01, -5.8875e+01, -1.3938e+02,  4.3875e+01,
-2.2484e+01, -2.8781e+01,  4.3344e+01,  9.5000e+01, -8.0125e+01,...
2025-04-27 05:19:04.864646 test begin: paddle.sum(Tensor([88, 62400],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([88, 62400],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 88 / 88 (100%)
Max absolute difference among violations: 251.2
Max relative difference among violations: 24.23
ACTUAL: array([ -9.19   ,  -9.12   ,  12.14   ,   3.646  ,  -0.06726,  -8.55   ,
15.945  ,   7.094  ,   4.47   ,  -6.168  ,  -9.164  ,   5.137  ,
-7.77   ,   0.4126 ,  -1.86   ,  11.55   ,  24.9    , -19.34   ,...
DESIRED: array([ -32.2   , -100.25  ,  139.4   ,  -28.88  ,  -53.6   ,   -2.703 ,
87.56  ,  -17.84  ,  -79.8   ,  -26.08  ,    8.75  ,  -87.7   ,
55.2   ,    7.7   ,  -65.75  ,   28.02  ,  174.    ,   39.2   ,...
2025-04-27 05:19:05.678801 test begin: paddle.sum(Tensor([88, 63232],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([88, 63232],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 88 / 88 (100%)
Max absolute difference among violations: 205.
Max relative difference among violations: 21.47
ACTUAL: array([-11.73  ,  -6.023 ,  -0.7334,   5.19  ,  -7.31  , -23.64  ,
-12.68  ,  19.73  ,   4.96  ,  -0.271 ,  21.34  ,   7.38  ,
17.16  ,  13.27  ,  14.81  , -11.266 ,   1.766 ,  -4.387 ,...
DESIRED: array([  14.67  , -108.8   ,  -28.86  ,   92.25  ,  -63.75  ,  -55.44  ,
-29.36  ,  135.9   ,  -72.    ,   66.56  ,   54.34  ,  -36.66  ,
-6.793 ,   87.4   ,  202.9   ,   27.28  ,  -14.66  ,  -38.84  ,...
2025-04-27 05:19:06.470266 test begin: paddle.sum(Tensor([88, 65664],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([88, 65664],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 88 / 88 (100%)
Max absolute difference among violations: 198.1
Max relative difference among violations: 43.88
ACTUAL: array([  2.1   ,  12.24  ,   0.271 ,  10.05  ,   9.97  ,   6.984 ,
-1.072 ,  17.97  ,  14.61  ,  13.875 ,   1.721 ,   4.453 ,
-12.766 ,   3.385 ,  -4.31  , -10.56  ,  -3.215 ,  -5.99  ,...
DESIRED: array([ -59.12  ,  170.2   ,   -1.199 ,   79.6   ,  -38.3   ,   58.97  ,
-17.98  ,   34.75  ,   61.75  ,  -33.94  ,   37.06  , -137.    ,
43.16  ,  175.9   ,  -72.44  ,  156.9   ,   15.35  ,  -50.28  ,...
2025-04-27 05:19:07.322062 test begin: paddle.sum(Tensor([88, 67200],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([88, 67200],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 88 / 88 (100%)
Max absolute difference among violations: 184.
Max relative difference among violations: 39.47
ACTUAL: array([  4.035 ,  -4.86  ,  -7.137 ,   2.86  ,   5.23  ,  10.164 ,
-0.3562,  23.77  ,   4.938 , -13.65  ,  -7.074 , -12.72  ,
16.58  ,   2.994 ,  -4.56  ,  -4.86  ,   0.6045,  -6.312 ,...
DESIRED: array([ 3.5938e+01, -5.3656e+01,  3.9469e+01,  5.4938e+01, -6.1094e+01,
1.1445e+01, -8.1562e+01, -2.0047e+01,  1.2672e+01, -2.7953e+01,
4.4141e+00,  1.0498e+00,  1.2844e+01,  1.1331e+02,  5.7812e+00,...
2025-04-27 05:19:08.264627 test begin: paddle.sum(Tensor([88, 69632],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([88, 69632],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 88 / 88 (100%)
Max absolute difference among violations: 223.8
Max relative difference among violations: 9.16
ACTUAL: array([ -3.426 ,  -8.805 ,  -0.8364,  24.5   ,   0.525 ,  12.12  ,
-7.008 ,  -4.176 ,   4.977 , -10.086 ,  11.35  ,   3.863 ,
6.406 ,  16.    ,  -4.008 , -13.62  ,  -7.51  ,  12.63  ,...
DESIRED: array([ -23.34  , -127.9   , -126.3   ,   15.375 , -174.2   ,   64.4   ,
-69.94  ,  -10.01  ,  202.5   ,   52.2   ,   76.7   ,   64.44  ,
14.47  ,   97.06  ,    6.59  , -101.1   ,    8.06  ,  -62.66  ,...
2025-04-27 05:19:09.182049 test begin: paddle.sum(Tensor([88, 73984],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([88, 73984],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 88 / 88 (100%)
Max absolute difference among violations: 146.2
Max relative difference among violations: 10.94
ACTUAL: array([  1.064 , -15.39  ,  -1.712 ,  17.33  ,  -0.231 ,   4.957 ,
-5.83  ,   2.94  , -17.17  ,  -5.945 ,   2.531 ,  -1.722 ,
-4.67  ,  -3.068 ,   7.52  ,  25.95  ,   8.234 ,  -4.59  ,...
DESIRED: array([  23.9  ,  -28.55 ,  144.5  ,   -3.021,   86.94 ,  -66.94 ,
-93.75 ,   -1.49 ,  -53.72 ,  -16.36 ,    4.59 ,  -20.58 ,
-96.4  ,   13.86 ,   93.94 ,   97.94 ,  -78.75 ,   29.23 ,...
2025-04-27 05:19:10.065310 test begin: paddle.sum(Tensor([88, 77824],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([88, 77824],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 88 / 88 (100%)
Max absolute difference among violations: 183.2
Max relative difference among violations: 5.883
ACTUAL: array([-15.24  ,  -1.415 ,   3.25  ,  -3.832 ,   7.92  ,   6.39  ,
-5.87  ,   0.1329, -12.82  , -20.75  ,  -7.05  ,   6.31  ,
-4.684 ,  13.2   , -12.47  ,  -9.44  ,  -5.496 ,  -0.5728,...
DESIRED: array([  36.2  ,   -8.93 ,   60.06 ,  -38.66 ,   20.6  ,  -62.9  ,
86.2  ,   49.78 ,    8.6  ,  -63.72 ,  -86.75 ,  -55.53 ,
-50.6  ,   47.12 ,   65.1  , -115.6  ,   -8.984,    2.639,...
2025-04-27 05:19:10.851183 test begin: paddle.sum(Tensor([88, 78400],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([88, 78400],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 88 / 88 (100%)
Max absolute difference among violations: 213.2
Max relative difference among violations: 34.88
ACTUAL: array([-1.9861e-01, -1.8234e+01,  8.7500e-01, -1.4805e+00, -1.6344e+01,
-1.4492e+01, -5.5391e+00,  4.3750e+00, -1.0367e+01, -1.5094e+01,
1.7609e+01,  1.4516e+01, -1.0254e-01, -3.5137e+00, -6.0547e+00,...
DESIRED: array([ -45.8   ,  -78.2   ,   42.28  ,   -9.04  ,  -39.62  ,    0.4277,
-28.3   ,  176.2   ,   41.88  , -165.4   ,   19.69  ,  125.44  ,
88.75  ,  -20.22  ,    5.2   ,  122.75  ,  -96.7   ,  137.2   ,...
2025-04-27 05:19:11.665249 test begin: paddle.sum(Tensor([88, 80512],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([88, 80512],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 88 / 88 (100%)
Max absolute difference among violations: 210.4
Max relative difference among violations: 19.
ACTUAL: array([ -8.78  ,  -5.746 , -11.56  ,  -3.236 ,  12.94  ,  -2.24  ,
6.18  ,   1.405 , -11.31  ,   3.328 ,  -0.2634,   8.266 ,
10.41  , -12.54  ,  -3.578 ,   9.97  ,  10.02  ,  15.21  ,...
DESIRED: array([ -74.9   , -122.4   ,   19.08  ,  -40.62  ,   10.84  ,  -14.19  ,
-42.34  ,   90.3   , -183.6   ,   25.69  ,   51.56  ,  -95.94  ,
93.94  ,  -92.75  ,   14.94  ,  111.1   ,   45.16  ,  -43.94  ,...
2025-04-27 05:19:12.527512 test begin: paddle.sum(Tensor([88, 82688],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([88, 82688],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 88 / 88 (100%)
Max absolute difference among violations: 181.1
Max relative difference among violations: 77.
ACTUAL: array([-15.266 , -11.95  ,   2.814 ,   6.113 , -12.96  , -10.67  ,
-14.46  ,   1.142 ,   9.3   ,   8.93  ,  11.086 ,   8.4   ,
-2.76  ,  -1.898 , -17.6   ,  12.234 ,  -4.16  , -19.73  ,...
DESIRED: array([  71.9   , -102.4   ,   50.5   ,    8.56  , -102.94  ,   -6.938 ,
24.88  ,   54.75  ,    7.227 ,    7.547 ,    9.41  ,  -11.54  ,
-4.492 ,   -9.86  ,   57.16  ,  -51.3   ,  -47.53  ,   74.6   ,...
2025-04-27 05:19:13.491353 test begin: paddle.sum(Tensor([88, 83328],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([88, 83328],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 88 / 88 (100%)
Max absolute difference among violations: 226.1
Max relative difference among violations: 4.824
ACTUAL: array([-17.34  ,  14.016 ,   0.976 ,   3.54  ,   9.46  ,   3.553 ,
1.38  ,  18.14  ,   1.258 , -14.44  , -19.83  ,   5.855 ,
7.566 ,  -2.557 ,  -3.527 ,   4.57  ,  17.    , -11.69  ,...
DESIRED: array([ 126.4  ,  162.1  ,  -89.9  ,  -47.25 , -102.2  ,  -47.   ,
49.94 ,  -99.8  ,  -50.5  ,  -40.16 ,  -19.05 ,  -89.5  ,
8.555,   51.84 ,   74.75 ,  -25.   ,   62.53 ,    7.73 ,...
2025-04-27 05:19:14.414061 test begin: paddle.sum(Tensor([88, 84480],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([88, 84480],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 88 / 88 (100%)
Max absolute difference among violations: 219.6
Max relative difference among violations: 4.684
ACTUAL: array([ -8.81  ,  -5.207 ,  12.75  ,   0.3174, -14.85  , -28.03  ,
-14.87  ,   4.684 ,   0.344 ,  -9.86  ,  -5.15  ,  14.734 ,
4.49  ,   2.11  , -16.66  ,  -0.2354,   3.988 ,   3.09  ,...
DESIRED: array([  44.8   ,   81.44  ,  154.9   ,   18.97  ,  -62.62  ,  -14.46  ,
-123.4   ,   -1.411 ,  -56.1   ,   21.89  ,   55.3   ,   20.81  ,
-53.7   ,   65.9   ,  -65.5   ,  219.4   ,  -54.    ,   51.12  ,...
2025-04-27 05:19:15.337944 test begin: paddle.sum(Tensor([88, 86016],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([88, 86016],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 87 / 88 (98.9%)
Max absolute difference among violations: 211.5
Max relative difference among violations: 5.234
ACTUAL: array([ 20.56  ,  16.69  ,   9.42  ,  -5.023 ,   9.82  ,  -0.5635,
-11.82  ,   0.5386,  10.41  ,  29.61  ,  12.75  ,  11.36  ,
-5.133 ,   1.881 ,   9.73  ,  13.39  ,  12.016 ,  25.86  ,...
DESIRED: array([  78.5  ,  -60.38 ,  -20.83 ,   -5.38 ,   64.7  ,  210.9  ,
-65.   ,  -33.5  ,   55.88 ,   18.03 ,   10.19 ,   98.4  ,
-18.23 ,  -69.94 ,   28.92 ,   81.7  ,  133.1  ,    6.906,...
2025-04-27 05:19:16.385104 test begin: paddle.sum(Tensor([88, 87040],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([88, 87040],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 88 / 88 (100%)
Max absolute difference among violations: 244.1
Max relative difference among violations: 4.836
ACTUAL: array([ -0.8794,   8.734 ,  -8.46  ,   8.43  ,   1.402 ,  -5.184 ,
2.646 , -20.92  ,   3.14  ,  -2.818 ,  14.08  ,  -8.99  ,
-17.44  ,  -7.453 ,  -5.08  , -25.11  , -21.38  ,   5.75  ,...
DESIRED: array([ -78.44 ,  -16.84 ,  -26.73 ,   35.94 ,   15.125,  -93.7  ,
66.4  ,  -22.64 ,    6.53 ,  -34.5  ,   80.6  ,  112.25 ,
-49.78 ,  -51.75 , -118.4  , -120.9  ,  -59.16 , -134.8  ,...
2025-04-27 05:19:17.399829 test begin: paddle.sum(Tensor([88, 87552],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([88, 87552],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 88 / 88 (100%)
Max absolute difference among violations: 233.2
Max relative difference among violations: 14.79
ACTUAL: array([  5.758 ,   2.588 ,   7.184 ,   8.49  ,   7.047 ,   2.336 ,
-9.57  ,   6.004 ,  16.23  ,  -0.3857,  -5.71  ,  -2.861 ,
-7.51  ,   1.69  , -12.44  , -23.6   ,   6.28  ,  -6.83  ,...
DESIRED: array([-106.1  ,  -19.66 ,  -44.16 ,   83.1  ,   54.84 ,   25.03 ,
-103.3  ,   52.56 ,   41.6  ,    2.854,  133.4  ,  -53.72 ,
-92.9  ,  131.9  ,  -38.22 ,  -42.   ,  104.6  ,  -35.47 ,...
2025-04-27 05:19:18.266569 test begin: paddle.sum(Tensor([88, 88704],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([88, 88704],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 88 / 88 (100%)
Max absolute difference among violations: 237.8
Max relative difference among violations: 22.8
ACTUAL: array([-3.9282e-01,  1.3422e+01, -1.5283e+00, -1.3555e+00,  4.9453e+00,
-9.8125e+00, -6.5742e+00,  2.1172e+01, -1.3375e+01, -2.6234e+01,
3.1953e+00,  6.9062e+00,  9.0469e+00, -8.3125e+00, -1.0922e+01,...
DESIRED: array([  69.3   ,   74.25  ,  -57.25  ,  192.8   , -137.8   ,   91.94  ,
26.    ,   -3.443 ,    1.591 , -101.75  ,   -3.223 ,  -37.34  ,
65.7   ,   -1.227 , -248.6   ,  111.9   ,  118.75  ,  -47.94  ,...
2025-04-27 05:19:19.167147 test begin: paddle.sum(Tensor([88, 89216],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([88, 89216],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 88 / 88 (100%)
Max absolute difference among violations: 247.
Max relative difference among violations: 10.39
ACTUAL: array([ -3.566 ,   1.539 ,  -3.424 ,  13.02  ,  -6.348 ,  -9.24  ,
-22.5   ,   2.635 ,  13.13  ,  -5.38  ,   2.15  ,  -0.7236,
-12.75  ,  -8.46  ,  12.125 , -16.62  ,   1.506 ,   0.2479,...
DESIRED: array([ -21.97 ,  193.   ,  -91.56 , -234.   , -119.44 ,   25.8  ,
157.5  ,   83.1  ,  135.8  ,   13.27 ,  -24.72 ,  -21.38 ,
-22.38 ,   63.53 ,   37.   ,  128.4  ,  -56.44 ,   28.94 ,...
2025-04-27 05:19:20.072660 test begin: paddle.sum(Tensor([88, 91392],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([88, 91392],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 88 / 88 (100%)
Max absolute difference among violations: 200.2
Max relative difference among violations: 4.023
ACTUAL: array([ 12.95   ,   2.742  ,  18.12   , -15.51   ,  19.27   ,  -7.92   ,
5.938  ,   0.538  ,  -7.996  ,   0.12317,  24.89   , -16.1    ,
-9.34   ,  -6.37   , -16.2    ,  -6.94   ,   0.0526 ,  -1.318  ,...
DESIRED: array([  15.83 ,  -26.14 ,  149.6  ,  -54.44 ,  112.94 ,   27.36 ,
-70.5  ,  -77.3  , -174.4  ,  -12.88 ,   93.06 ,  -20.78 ,
49.38 ,   50.03 ,  -49.44 ,  -77.9  ,  -22.06 ,   21.28 ,...
2025-04-27 05:19:20.978588 test begin: paddle.sum(Tensor([88, 92416],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([88, 92416],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 88 / 88 (100%)
Max absolute difference among violations: 191.2
Max relative difference among violations: 230.
ACTUAL: array([  5.285 ,  -7.652 ,  -3.504 , -12.21  ,  14.96  ,  -2.51  ,
-4.062 ,  14.51  ,   2.033 , -10.09  ,   3.01  ,  -2.822 ,
-20.12  ,   1.426 ,  -2.955 , -23.02  ,   3.61  , -12.01  ,...
DESIRED: array([-1.0206e+02, -1.1800e+02, -6.4062e+01, -3.3156e+01,  1.1906e+02,
1.5812e+02,  8.3562e+01,  7.6438e+01, -1.0469e+01, -1.3850e+02,
-1.5328e+01,  3.6406e+01, -2.2719e+01, -7.0250e+01, -5.6500e+01,...
2025-04-27 05:19:21.879832 test begin: paddle.sum(Tensor([88, 94080],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([88, 94080],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 88 / 88 (100%)
Max absolute difference among violations: 217.5
Max relative difference among violations: 3.666
ACTUAL: array([-16.33   ,   6.625  ,  11.695  , -17.34   ,  -5.06   , -20.94   ,
-13.33   ,  -3.166  ,   4.01   ,  -1.741  ,   7.707  ,   2.05   ,
-9.91   ,   8.164  ,  28.39   ,   0.5093 ,  10.875  ,  -5.156  ,...
DESIRED: array([-136.6  ,   47.4  ,    5.93 ,   87.7  ,   79.9  ,   10.8  ,
46.56 ,   66.44 ,   14.69 , -111.06 ,   10.234,  -21.16 ,
-51.1  , -198.2  , -127.44 ,    4.766,  -52.34 ,   47.03 ,...
2025-04-27 05:19:22.838308 test begin: paddle.sum(Tensor([88, 94848],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([88, 94848],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 88 / 88 (100%)
Max absolute difference among violations: 172.9
Max relative difference among violations: 14.37
ACTUAL: array([ -7.133 ,  -7.473 ,   3.803 ,  28.11  ,   0.4746,  37.44  ,
1.049 ,  13.16  , -11.87  ,  -8.52  ,  -4.332 ,  19.03  ,
15.74  ,  -8.516 , -30.    , -16.9   , -15.74  ,   9.125 ,...
DESIRED: array([-135.6  ,  113.9  ,  -99.75 ,   77.5  ,   76.25 ,    6.918,
4.992, -111.75 ,  -39.25 ,   27.83 ,  164.2  ,  -52.94 ,
166.   ,   -3.205,  -29.25 ,   75.5  ,  128.6  ,  -37.12 ,...
2025-04-27 05:19:23.836082 test begin: paddle.sum(Tensor([88, 97280],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([88, 97280],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 88 / 88 (100%)
Max absolute difference among violations: 226.6
Max relative difference among violations: 28.02
ACTUAL: array([  0.2727,  13.29  ,   0.8105,  12.42  , -12.67  ,  12.61  ,
4.97  ,  -6.383 ,  -8.26  ,   9.95  ,  18.5   ,  -3.092 ,
2.984 ,  -9.57  ,  -0.5073, -24.16  ,  -7.137 ,  10.555 ,...
DESIRED: array([ 131.1   , -102.56  , -153.5   ,   49.94  ,   29.42  ,   56.22  ,
0.7646, -130.5   ,  -64.75  ,   12.58  ,   19.22  ,  -22.06  ,
73.5   ,   75.94  , -120.5   ,  -16.67  ,  -49.28  , -118.9   ,...
2025-04-27 05:19:51.013328 test begin: paddle.sum(Tensor([92, 102144],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([92, 102144],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 92 / 92 (100%)
Max absolute difference among violations: 214.4
Max relative difference among violations: 8.11
ACTUAL: array([ -6.332  ,  15.16   ,  10.625  ,  -5.754  ,  23.81   ,  -7.324  ,
4.492  ,   5.406  ,   1.739  ,   4.375  , -11.9    ,   4.99   ,
4.05   , -17.69   ,  -9.25   ,   3.486  , -12.69   ,  -0.621  ,...
DESIRED: array([ -62.1  , -163.4  ,  129.2  ,  121.25 ,   37.94 ,  -27.53 ,
-81.8  ,   47.6  ,  -81.44 ,  -84.56 ,   -2.184,  -30.39 ,
-99.6  ,  122.25 ,  100.6  ,  114.94 ,   66.1  ,  187.2  ,...
2025-04-27 05:19:52.257102 test begin: paddle.sum(Tensor([92, 104832],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([92, 104832],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 92 / 92 (100%)
Max absolute difference among violations: 234.5
Max relative difference among violations: 10.445
ACTUAL: array([  6.188 , -11.77  ,  -3.615 , -10.34  ,   3.605 ,   9.805 ,
21.61  , -12.195 , -13.21  , -18.94  ,  13.    ,  -0.7144,
3.684 , -15.57  ,  13.18  ,  -4.277 ,  20.38  ,  -5.457 ,...
DESIRED: array([  61.56 ,   29.7  ,   54.66 ,   72.9  ,  -74.06 ,  -14.6  ,
190.8  ,    3.168,  -81.3  ,   70.8  ,  -97.2  ,  116.56 ,
50.8  ,   48.25 ,  -41.   ,   23.78 , -126.2  ,   56.94 ,...
2025-04-27 05:20:04.227680 test begin: paddle.sum(Tensor([92, 54400],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([92, 54400],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 92 / 92 (100%)
Max absolute difference among violations: 165.2
Max relative difference among violations: 88.6
ACTUAL: array([  4.35  , -23.86  , -11.6   ,  -2.21  ,   6.727 , -12.1   ,
-3.682 ,  -2.764 ,   1.592 ,   9.66  ,   1.038 , -10.09  ,
-1.709 ,   5.746 ,   4.844 ,  -7.89  , -17.12  ,  -1.437 ,...
DESIRED: array([  17.73  , -131.9   ,   23.17  ,   73.94  ,   65.1   ,  -52.72  ,
47.    ,   59.1   ,  136.4   ,  -13.02  ,   -4.414 ,  -37.6   ,
18.72  ,   78.44  ,  -16.2   , -149.5   ,   64.25  ,   50.22  ,...
2025-04-27 05:20:05.031817 test begin: paddle.sum(Tensor([92, 57600],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([92, 57600],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 92 / 92 (100%)
Max absolute difference among violations: 194.8
Max relative difference among violations: 4.19
ACTUAL: array([ 17.4   , -22.75  ,   0.6953, -22.56  ,   8.52  ,  24.08  ,
-6.848 ,   1.325 ,  10.18  ,   2.629 ,  -6.027 ,   7.87  ,
-26.02  ,  20.08  ,  -3.896 ,  -9.37  ,  -1.763 ,  -2.785 ,...
DESIRED: array([ 100.8  , -118.94 ,  105.8  ,  -78.44 ,   64.56 ,  -68.94 ,
-55.7  ,   -4.426,  -47.38 , -192.1  ,   77.8  ,   44.88 ,
9.66 ,   66.3  ,  128.4  ,   83.56 ,   65.44 , -148.1  ,...
2025-04-27 05:20:05.809760 test begin: paddle.sum(Tensor([92, 59200],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([92, 59200],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 92 / 92 (100%)
Max absolute difference among violations: 219.5
Max relative difference among violations: 6.66
ACTUAL: array([-2.0938e+00, -7.9414e+00, -8.9062e+00,  8.6953e+00, -7.1484e+00,
-5.3750e+00, -5.6406e+00,  2.2852e+00,  2.2266e+00,  8.0781e+00,
-1.7656e+01, -1.1039e+01,  1.6125e+01, -1.1664e+01, -1.4180e+01,...
DESIRED: array([ -94.56 ,  -25.38 ,  -84.3  ,   44.8  ,  -19.31 , -139.6  ,
-134.   ,   -4.344,  -31.9  , -111.2  ,   69.75 ,  -73.   ,
29.72 ,   -3.293, -150.8  ,  -63.75 ,  -37.1  ,   38.97 ,...
2025-04-27 05:20:06.552351 test begin: paddle.sum(Tensor([92, 60800],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([92, 60800],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 92 / 92 (100%)
Max absolute difference among violations: 199.8
Max relative difference among violations: 35.44
ACTUAL: array([-14.53  ,  -3.732 ,  10.55  , -11.1   ,  -9.016 ,  -9.27  ,
2.783 , -11.26  ,   3.125 ,   5.34  ,  -3.572 ,  10.37  ,
-0.959 ,   5.055 , -13.305 ,  -4.816 ,  16.38  ,   7.195 ,...
DESIRED: array([-1.1912e+02,  1.8575e+02, -4.4062e+01, -8.4438e+01, -2.1125e+01,
-7.4062e+01,  1.0056e+02,  1.4038e+02,  4.4938e+01,  1.5781e+01,
-4.3562e+01,  4.1344e+01,  3.1828e+01,  9.8828e+00, -3.3812e+01,...
2025-04-27 05:20:07.391988 test begin: paddle.sum(Tensor([92, 67200],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([92, 67200],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 91 / 92 (98.9%)
Max absolute difference among violations: 194.2
Max relative difference among violations: 5.28
ACTUAL: array([-11.664 ,  -3.707 , -17.73  ,   9.586 , -11.77  ,   2.463 ,
3.812 ,   0.1212,   7.68  , -27.27  ,  12.23  ,  -4.64  ,
-8.75  ,  -2.58  ,  -3.348 ,   6.547 ,   1.302 ,   9.24  ,...
DESIRED: array([ -86.4  , -163.1  ,  -26.3  ,  -80.7  ,  -81.7  ,   41.88 ,
-51.6  ,   61.1  ,  -32.1  ,    6.367,  150.8  ,  -62.88 ,
-138.4  ,   28.2  ,   40.1  ,   12.7  ,  -33.7  ,   -6.566,...
2025-04-27 05:20:08.168146 test begin: paddle.sum(Tensor([92, 76160],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([92, 76160],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 92 / 92 (100%)
Max absolute difference among violations: 251.1
Max relative difference among violations: 3.28
ACTUAL: array([  0.2277,  -7.355 ,  14.48  , -16.34  ,  -2.625 ,  17.44  ,
7.18  ,  -4.15  , -11.01  ,   5.03  ,  12.96  ,   3.934 ,
-5.562 , -10.34  ,  14.766 ,  -1.077 ,  -9.35  ,   9.64  ,...
DESIRED: array([  68.7  , -101.94 ,  -39.28 ,  -46.28 ,   12.93 ,   31.62 ,
-5.566,   -5.3  , -100.2  ,   32.75 ,   22.33 ,  -74.44 ,
-109.44 ,   83.7  , -106.44 ,   38.2  , -110.3  ,   40.3  ,...
2025-04-27 05:20:08.985871 test begin: paddle.sum(Tensor([92, 82688],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([92, 82688],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 92 / 92 (100%)
Max absolute difference among violations: 249.2
Max relative difference among violations: 16.4
ACTUAL: array([ -6.934  ,  13.21   ,  -7.574  ,  -9.12   ,   3.502  ,  13.516  ,
18.89   ,   4.19   ,   3.945  ,   8.84   , -12.79   ,  15.73   ,
3.83   ,   0.08545,  -2.574  ,   9.625  ,  17.66   ,   7.676  ,...
DESIRED: array([-112.1  ,  124.25 ,    7.9  ,  -64.   ,   74.9  ,   97.75 ,
76.2  ,   23.27 ,  -13.1  ,    4.445,  -71.06 ,  138.4  ,
-19.48 ,  133.1  ,   49.62 ,   25.61 ,  159.2  ,   69.25 ,...
2025-04-27 05:20:09.929083 test begin: paddle.sum(Tensor([92, 84864],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([92, 84864],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 92 / 92 (100%)
Max absolute difference among violations: 196.
Max relative difference among violations: 50.16
ACTUAL: array([-10.08  ,  -4.617 ,  -0.2188,  -9.445 ,  -4.805 , -14.89  ,
2.69  ,  -5.12  ,  14.945 , -21.2   ,   1.601 ,   6.258 ,
9.88  ,  -9.94  ,  -4.89  ,   7.89  ,   8.5   ,  -2.006 ,...
DESIRED: array([  81.25  ,   28.39  ,   11.016 ,   84.8   ,  -11.79  , -113.25  ,
-65.7   ,  -71.4   ,   84.5   ,   -0.4143,    5.316 ,  -25.62  ,
-29.9   ,    5.52  ,   65.7   ,   34.34  ,   87.1   ,  -63.03  ,...
2025-04-27 05:20:10.900702 test begin: paddle.sum(Tensor([92, 89216],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([92, 89216],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 92 / 92 (100%)
Max absolute difference among violations: 274.8
Max relative difference among violations: 7.633
ACTUAL: array([-16.8    ,  -3.56   ,  -6.832  ,  -2.004  ,  -6.402  ,   7.348  ,
1.426  ,  -9.836  ,  17.28   ,  10.016  ,  -4.49   ,   8.96   ,
4.758  ,  10.586  ,   2.639  ,  -3.045  ,   5.67   ,   0.2411 ,...
DESIRED: array([-117.06 ,   43.5  ,    1.609,    6.113,  -49.88 ,  -29.17 ,
191.6  ,   46.38 ,  -53.03 ,  136.4  ,   48.8  ,   53.1  ,
-55.25 ,   43.3  ,  211.   ,   94.4  ,   56.38 ,   83.56 ,...
2025-04-27 05:20:11.883811 test begin: paddle.sum(Tensor([92, 91392],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([92, 91392],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 92 / 92 (100%)
Max absolute difference among violations: 154.1
Max relative difference among violations: 8.19
ACTUAL: array([ -5.824 , -11.45  , -14.47  ,  -5.59  , -14.67  ,  -9.945 ,
17.3   ,  -6.65  , -16.06  , -11.39  ,   9.9   ,  -7.105 ,
9.24  ,   9.97  ,  -0.3018,   1.682 ,  -4.26  ,  -5.04  ,...
DESIRED: array([ -41.1  ,   55.94 , -118.   ,   43.56 ,  -24.5  ,    9.76 ,
16.52 ,   15.555, -111.06 ,   41.12 ,  -15.7  , -152.2  ,
-54.28 ,   93.7  ,   -9.56 ,  -54.7  , -146.   ,   65.75 ,...
2025-04-27 05:20:12.958257 test begin: paddle.sum(Tensor([92, 91840],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([92, 91840],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 92 / 92 (100%)
Max absolute difference among violations: 180.8
Max relative difference among violations: 28.84
ACTUAL: array([ -5.516  , -11.82   ,   9.875  ,  -1.644  ,   5.773  ,   0.11255,
16.33   ,  11.086  ,  -0.747  ,  14.06   ,  -3.58   ,  17.31   ,
-14.54   ,   6.316  ,   6.375  ,   2.459  ,   3.217  ,   3.91   ,...
DESIRED: array([ -49.88 ,  -11.57 ,    0.331,   98.8  ,   -5.81 ,   18.97 ,
-7.8  ,  133.9  ,  164.1  ,   78.94 ,   45.94 ,   84.7  ,
116.75 ,   -3.877,  -26.4  , -109.44 ,   83.1  ,  -75.06 ,...
2025-04-27 05:20:13.969340 test begin: paddle.sum(Tensor([92, 92416],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([92, 92416],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 92 / 92 (100%)
Max absolute difference among violations: 239.6
Max relative difference among violations: 8.62
ACTUAL: array([-10.27  ,   0.2883,   9.62  ,  -7.344 ,   3.924 ,  10.84  ,
5.727 , -11.91  ,  -4.312 ,  -6.723 ,  -2.646 , -16.9   ,
-7.62  ,  10.7   ,   9.17  , -14.17  ,   2.865 ,  -7.81  ,...
DESIRED: array([ -61.5  ,  -31.14 ,   73.75 ,   36.5  ,  177.6  ,  130.4  ,
-149.2  ,   30.98 ,   41.6  ,  -67.56 ,   -4.51 ,  -65.   ,
-73.3  ,  -91.25 ,   23.77 ,  -93.44 ,  156.5  ,  142.2  ,...
2025-04-27 05:20:15.078642 test begin: paddle.sum(Tensor([92, 94848],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([92, 94848],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 92 / 92 (100%)
Max absolute difference among violations: 251.1
Max relative difference among violations: 42.38
ACTUAL: array([-15.85  ,   7.957 ,  -7.285 ,  -1.179 ,   7.375 ,   3.795 ,
4.56  , -16.94  ,  -6.25  ,  -5.42  ,   6.305 ,   5.195 ,
1.143 ,  -0.7964, -18.11  ,  26.03  ,  -9.24  ,  18.53  ,...
DESIRED: array([-4.4062e+01, -2.7328e+01,  7.6062e+01,  5.0156e+01,  1.8038e+02,
-2.9266e+01,  1.3109e+01,  2.3379e+00,  6.0312e+01,  8.3250e+01,
1.4406e+01, -1.6594e+01,  6.3281e+01,  1.1075e+02,  6.1406e+01,...
2025-04-27 05:20:16.118509 test begin: paddle.sum(Tensor([92, 99712],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([92, 99712],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 92 / 92 (100%)
Max absolute difference among violations: 196.5
Max relative difference among violations: 12.47
ACTUAL: array([-12.625  , -13.16   ,   5.64   ,  -6.414  ,  15.695  ,   0.9785 ,
-11.24   ,   4.35   , -27.19   ,  11.586  ,  10.766  ,   8.46   ,
1.951  ,   5.297  ,  -5.26   ,  -0.958  ,  -6.035  , -10.56   ,...
DESIRED: array([   9.45 ,   15.17 ,   29.53 ,   36.5  ,   71.25 ,   19.53 ,
58.44 ,   51.4  , -142.5  ,  -70.4  ,   63.3  ,  -73.5  ,
86.9  ,  -86.5  , -196.6  ,    5.03 ,   28.2  ,   13.2  ,...
2025-04-27 05:20:38.750419 test begin: paddle.sum(Tensor([96, 102144],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([96, 102144],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 96 / 96 (100%)
Max absolute difference among violations: 258.8
Max relative difference among violations: 25.97
ACTUAL: array([  3.363 ,   7.418 ,  -7.844 ,  -3.701 , -13.61  ,  11.016 ,
3.672 ,  11.32  , -14.93  ,   0.5513,  -2.666 ,  -5.223 ,
-2.027 ,  -5.555 , -18.9   , -12.76  ,  12.44  ,   4.12  ,...
DESIRED: array([  -7.566 , -155.8   ,  -45.44  ,  -59.88  ,   46.47  ,    7.086 ,
-43.78  ,  -90.6   , -149.8   ,   -0.4856,   -0.4385,  -74.44  ,
-29.55  ,  -56.47  , -110.7   ,  -92.4   ,   -0.4983,  -17.08  ,...
2025-04-27 05:20:39.898566 test begin: paddle.sum(Tensor([96, 112896],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([96, 112896],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 96 / 96 (100%)
Max absolute difference among violations: 268.8
Max relative difference among violations: 45.97
ACTUAL: array([  2.531 ,  -1.181 ,   3.436 ,  -2.535 , -16.08  ,  -8.016 ,
24.62  , -25.56  ,   5.83  ,  -0.953 ,  -8.25  , -13.71  ,
10.81  ,   2.477 , -15.234 , -21.7   ,   4.547 ,  -9.32  ,...
DESIRED: array([ 5.3469e+01, -2.3406e+01,  1.4662e+02,  7.0000e+01,  8.3281e+00,
-9.6562e+01,  6.9312e+01,  1.3289e+01,  8.9312e+01, -1.5383e+01,
-1.7578e-01, -3.1781e+01, -6.6688e+01, -8.7625e+01, -6.5750e+01,...
2025-04-27 05:21:01.939818 test begin: paddle.sum(Tensor([96, 54400],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([96, 54400],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 96 / 96 (100%)
Max absolute difference among violations: 170.9
Max relative difference among violations: 5.77
ACTUAL: array([-15.01  ,   0.328 ,   0.841 , -13.69  ,  -9.85  ,   9.21  ,
-18.05  ,  -0.5107,  -2.482 ,  14.66  ,  -8.2   , -18.    ,
5.27  , -19.23  ,   2.775 ,  -3.027 ,   9.33  ,  -9.984 ,...
DESIRED: array([ 106.4  ,  -83.8  , -109.   ,    2.871, -180.8  ,  134.2  ,
29.17 , -122.8  ,  -14.52 ,  -53.9  ,  -70.5  ,   11.29 ,
-30.6  ,    7.336,   99.06 ,   57.44 ,  -39.56 ,  -57.22 ,...
2025-04-27 05:21:02.677476 test begin: paddle.sum(Tensor([96, 58752],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([96, 58752],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 95 / 96 (99%)
Max absolute difference among violations: 262.8
Max relative difference among violations: 151.2
ACTUAL: array([-12.7   ,   3.037 ,  -3.13  ,  -5.195 ,   7.45  ,  -6.36  ,
-19.72  ,  12.945 ,  16.17  , -10.54  , -10.11  ,  -1.8   ,
13.14  ,  -7.105 ,   6.79  ,  12.4   ,  19.19  ,  -2.197 ,...
DESIRED: array([-1.1325e+02, -5.6719e+01, -2.6750e+01,  1.2419e+02, -2.3734e+01,
-4.0500e+01, -2.4375e+01, -2.6625e+01, -1.0156e+01, -6.6062e+01,
-3.6094e+01, -7.6062e+01,  2.0562e+01, -9.8047e+00, -6.6289e+00,...
2025-04-27 05:21:03.441173 test begin: paddle.sum(Tensor([96, 59200],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([96, 59200],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 96 / 96 (100%)
Max absolute difference among violations: 164.2
Max relative difference among violations: 6.14
ACTUAL: array([ 1.1141e+01, -3.0996e+00, -6.1602e+00,  1.4945e+01, -5.2188e+00,
-4.8945e+00, -3.7988e+00, -1.2266e+01, -1.0633e+01, -1.2586e+01,
9.7803e-01, -1.2373e+00,  1.5445e+01, -6.6367e+00,  1.3291e+00,...
DESIRED: array([ -61.44 ,  -21.36 ,  -67.   ,  -40.8  ,  -70.56 ,  -79.56 ,
8.33 ,  -51.03 ,  -10.15 ,    7.438,  110.75 ,   20.   ,
72.94 ,  -59.75 ,  -12.87 ,  -21.56 , -107.6  ,   66.   ,...
2025-04-27 05:21:04.249235 test begin: paddle.sum(Tensor([96, 60800],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([96, 60800],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 96 / 96 (100%)
Max absolute difference among violations: 159.8
Max relative difference among violations: 56.38
ACTUAL: array([ -7.164 ,  23.73  ,  -5.76  ,  -7.66  ,   0.788 ,  -8.305 ,
-4.953 ,  -8.164 ,   9.62  , -15.3   ,   6.246 ,   5.906 ,
5.7   ,   1.161 , -10.11  , -10.07  ,  13.805 ,  13.79  ,...
DESIRED: array([  50.97  ,   -5.004 ,   53.22  ,   15.43  ,  110.56  ,  -35.03  ,
-72.75  ,  -77.94  ,   43.16  ,  -82.5   ,  -30.48  ,   37.16  ,
19.19  ,  -88.06  ,  -55.84  ,   90.    ,   97.3   ,  162.5   ,...
2025-04-27 05:21:05.060905 test begin: paddle.sum(Tensor([96, 62400],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([96, 62400],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 96 / 96 (100%)
Max absolute difference among violations: 218.5
Max relative difference among violations: 2.918
ACTUAL: array([-10.95   ,   2.127  ,   5.848  ,  -3.996  ,  -0.296  ,  -0.1753 ,
-13.     ,  -6.81   ,   2.395  ,  20.45   ,   8.45   ,  18.22   ,
4.176  ,  18.5    , -17.11   ,  14.26   , -12.1    ,  12.805  ,...
DESIRED: array([-113.56 ,  -32.47 ,   46.97 ,  -83.4  ,  -43.   ,   96.56 ,
41.03 ,  206.2  , -150.1  ,  206.2  ,   37.06 ,   34.78 ,
-11.41 ,   71.25 ,  -78.56 ,  -82.4  , -139.5  ,    8.88 ,...
2025-04-27 05:21:05.777287 test begin: paddle.sum(Tensor([96, 63232],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([96, 63232],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 96 / 96 (100%)
Max absolute difference among violations: 162.4
Max relative difference among violations: 4.992
ACTUAL: array([ -6.555 , -13.375 ,  12.98  , -10.78  ,  15.25  ,  -3.045 ,
10.4   ,  -1.03  ,   9.85  ,  12.58  , -12.11  ,  -2.977 ,
-4.62  ,   5.01  , -10.57  ,   3.768 ,   4.406 , -10.99  ,...
DESIRED: array([-112.6  ,   34.34 ,   -7.562,  -39.2  ,   21.62 ,   25.94 ,
30.83 ,   97.7  ,  172.2  ,   12.734,  -79.   ,  104.   ,
58.06 ,   82.8  ,  -12.69 ,  -25.47 ,   65.   ,  -98.56 ,...
2025-04-27 05:21:06.627640 test begin: paddle.sum(Tensor([96, 65664],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([96, 65664],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 96 / 96 (100%)
Max absolute difference among violations: 215.9
Max relative difference among violations: 6.863
ACTUAL: array([-21.31   ,  -5.2    ,   2.275  ,  12.19   ,   3.395  ,  -9.4    ,
7.87   ,  -4.293  ,  11.01   ,   6.656  , -19.48   , -15.18   ,
15.75   ,  -0.3174 , -17.47   ,   5.242  ,  -8.805  , -10.8    ,...
DESIRED: array([-4.8875e+01,  5.9648e+00, -4.6875e+01,  1.3188e+02,  8.6875e+01,
-2.0312e+01,  1.1425e+02, -3.3344e+01, -3.7250e+01,  4.2812e+01,
-1.9450e+02, -6.7250e+01, -5.2719e+01, -5.2539e+00, -1.0088e+02,...
2025-04-27 05:21:07.482443 test begin: paddle.sum(Tensor([96, 67200],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([96, 67200],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 95 / 96 (99%)
Max absolute difference among violations: 171.2
Max relative difference among violations: 4.617
ACTUAL: array([-9.8516e+00, -5.2305e+00, -5.4453e+00, -1.9328e+01, -4.3984e+00,
7.0625e+00,  8.1250e+00, -5.1133e+00,  2.3719e+01, -1.4867e+01,
-9.9141e+00,  1.4258e+01, -4.7852e+00,  5.0938e+00,  4.3789e+00,...
DESIRED: array([ -56.5  ,    8.48 ,  -70.44 ,   75.06 ,   -2.148,  -13.836,
-90.3  , -176.4  ,  -37.3  , -166.1  ,   43.72 ,   10.336,
9.86 ,    4.54 ,   -5.26 ,  144.9  , -147.1  ,   90.94 ,...
2025-04-27 05:21:08.230247 test begin: paddle.sum(Tensor([96, 67456],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([96, 67456],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 96 / 96 (100%)
Max absolute difference among violations: 182.9
Max relative difference among violations: 8.98
ACTUAL: array([  6.89   ,  -1.315  ,  25.5    ,  -7.95   ,   2.078  ,  13.87   ,
16.62   ,  -9.195  ,   5.3    , -11.38   ,  -7.996  ,   3.135  ,
15.71   ,   1.685  ,  -8.805  ,  -0.2612 ,  -4.59   ,   1.306  ,...
DESIRED: array([  24.86 ,    8.28 ,  -30.64 ,    5.246,   -6.965, -116.4  ,
52.2  ,  -63.2  , -115.3  ,  -41.75 ,  -63.44 ,   -6.137,
52.8  ,  -35.34 ,  102.25 ,   10.06 ,  -76.2  , -148.   ,...
2025-04-27 05:21:09.058390 test begin: paddle.sum(Tensor([96, 72960],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([96, 72960],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 96 / 96 (100%)
Max absolute difference among violations: 194.4
Max relative difference among violations: 1186.
ACTUAL: array([  3.367  ,  -1.56   ,  -4.87   ,  15.67   ,  -9.17   ,   2.326  ,
-0.2014 ,  19.86   ,  -2.566  ,  -9.37   ,   3.64   ,   3.47   ,
2.38   ,  -4.836  ,   6.26   ,  14.68   ,  -3.92   ,  -8.305  ,...
DESIRED: array([ 1.5445e+01,  9.1125e+01,  4.3312e+01, -6.0938e+01, -1.7725e+02,
-2.6828e+01,  1.2129e+00,  4.9406e+01,  7.6000e+01,  7.9041e-03,
-3.7031e+01, -9.5156e+00,  5.3562e+01, -1.2305e+01,  5.2062e+01,...
2025-04-27 05:21:09.919396 test begin: paddle.sum(Tensor([96, 76160],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([96, 76160],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 96 / 96 (100%)
Max absolute difference among violations: 239.8
Max relative difference among violations: 298.5
ACTUAL: array([  6.613 ,  -3.566 ,   7.676 ,  13.164 ,   1.137 ,  -8.92  ,
3.168 ,   5.844 ,   9.76  ,   0.904 , -18.78  ,   4.63  ,
-7.695 ,  19.42  ,  -0.766 ,  -8.82  , -21.27  , -10.17  ,...
DESIRED: array([ 3.3719e+01, -1.2375e+01,  8.8000e+01, -1.0450e+02,  6.3750e+01,
5.8969e+01,  1.5275e+02,  7.2312e+01,  1.3203e+01,  7.8562e+01,
-1.9266e+01,  9.4500e+01, -1.9250e+01,  2.8297e+01,  4.4156e+01,...
2025-04-27 05:21:10.782040 test begin: paddle.sum(Tensor([96, 77824],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([96, 77824],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 95 / 96 (99%)
Max absolute difference among violations: 208.4
Max relative difference among violations: 7.406
ACTUAL: array([  3.273 ,   5.617 ,   4.21  ,  17.86  ,  -8.1   ,  -0.1727,
-2.074 ,  -7.445 , -14.586 ,  15.945 ,  -6.383 , -11.375 ,
4.305 ,  -3.164 ,  -3.633 , -12.91  , -24.62  ,   8.84  ,...
DESIRED: array([  44.9   ,  109.06  , -112.9   ,  108.75  ,  -58.56  ,  -69.5   ,
51.7   , -102.75  , -178.9   , -111.44  ,    0.996 ,   89.06  ,
77.1   ,   42.    ,   62.44  , -187.    ,  -60.25  ,   10.7   ,...
2025-04-27 05:21:11.691113 test begin: paddle.sum(Tensor([96, 78336],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([96, 78336],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 95 / 96 (99%)
Max absolute difference among violations: 272.8
Max relative difference among violations: 9.44
ACTUAL: array([ 4.5156e+00, -2.5344e+01, -1.0844e+01, -4.2461e+00,  1.5625e+01,
7.2383e+00,  8.1797e+00,  3.6992e+00,  5.1211e+00,  7.8164e+00,
1.3289e+01,  5.4297e+00, -3.8281e+00,  1.7438e+01, -8.6250e+00,...
DESIRED: array([ -53.2  ,  -25.39 , -167.4  ,   21.2  , -111.3  ,  -18.83 ,
-3.426,  -24.61 ,   34.78 ,    5.69 ,   51.62 ,   24.53 ,
-61.06 ,  -43.03 ,  -98.6  ,  -29.73 ,  228.4  ,    6.137,...
2025-04-27 05:21:12.586350 test begin: paddle.sum(Tensor([96, 80256],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([96, 80256],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 96 / 96 (100%)
Max absolute difference among violations: 175.8
Max relative difference among violations: 6.223
ACTUAL: array([  3.283 ,  -2.387 ,   4.414 , -16.1   ,   9.57  ,  -5.9   ,
4.617 ,   5.508 ,   0.2744,  -7.145 ,  -5.54  , -16.67  ,
3.414 , -12.055 ,  12.04  ,   5.65  ,  -1.331 ,  26.4   ,...
DESIRED: array([  39.84 ,  -86.2  ,   16.38 ,  -44.72 ,   42.47 ,   30.66 ,
28.31 ,  -81.5  ,   57.75 ,  -90.25 ,   41.   ,  -36.8  ,
-70.4  ,  -47.7  ,   78.7  ,  -58.22 , -153.4  ,   52.22 ,...
2025-04-27 05:21:13.451024 test begin: paddle.sum(Tensor([96, 82688],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([96, 82688],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 96 / 96 (100%)
Max absolute difference among violations: 202.6
Max relative difference among violations: 15.62
ACTUAL: array([ -0.2676 ,   6.637  ,   3.742  ,  -7.438  , -18.25   ,  -4.367  ,
-9.26   ,   8.97   ,  -5.02   , -10.     , -15.83   ,  -3.53   ,
-5.35   ,   9.36   ,   6.26   ,  32.3    ,  -3.693  ,  -4.695  ,...
DESIRED: array([  -9.81  ,  -15.89  , -198.9   ,  -49.53  ,  -56.5   ,   13.21  ,
-96.2   ,  -54.56  ,  -66.9   ,  -64.06  ,  -21.94  ,  -30.52  ,
-78.25  ,   -4.566 ,   -9.7   ,  121.56  ,    3.12  , -160.8   ,...
2025-04-27 05:21:14.390328 test begin: paddle.sum(Tensor([96, 85120],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([96, 85120],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 96 / 96 (100%)
Max absolute difference among violations: 192.5
Max relative difference among violations: 6.36
ACTUAL: array([ 1.8109e+01,  9.5703e+00, -1.3242e+01,  1.1922e+01, -1.0648e+01,
-9.2734e+00, -1.3367e+01,  6.2793e-01, -1.9521e+00,  5.1416e-01,
-3.9473e+00, -3.4531e+00, -1.0078e+01, -4.8516e+00, -5.2422e+00,...
DESIRED: array([ -29.1  ,  -71.9  ,   17.42 ,   13.41 ,   94.44 ,   37.6  ,
84.3  ,  107.6  ,  -38.44 , -136.1  ,   -8.445,   -2.447,
-144.4  ,    8.14 ,  127.7  ,    9.195,  118.2  ,  146.9  ,...
2025-04-27 05:21:15.335769 test begin: paddle.sum(Tensor([96, 89984],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([96, 89984],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 96 / 96 (100%)
Max absolute difference among violations: 201.9
Max relative difference among violations: 36.53
ACTUAL: array([-13.695 ,   7.27  ,  -2.324 ,   4.684 ,  -7.656 ,  -1.716 ,
15.22  , -10.    ,  20.02  , -20.97  ,  -7.53  ,   2.723 ,
-27.48  , -20.34  ,   3.691 ,   3.053 ,  14.164 ,   1.149 ,...
DESIRED: array([  78.25 ,  -15.34 ,    4.316,  -22.33 ,  148.8  ,   25.31 ,
104.4  ,  -79.44 ,  -67.9  ,  -45.94 , -111.75 ,  -81.   ,
113.56 ,   12.69 ,  -40.03 ,   31.97 ,   25.27 ,   31.73 ,...
2025-04-27 05:21:16.440104 test begin: paddle.sum(Tensor([96, 91392],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([96, 91392],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 96 / 96 (100%)
Max absolute difference among violations: 238.
Max relative difference among violations: 9.25
ACTUAL: array([-10.59   ,  -2.367  ,  15.15   ,  17.25   ,   3.64   ,  15.76   ,
7.902  ,   6.86   ,  -5.746  , -19.97   , -16.39   ,   8.87   ,
-14.38   ,   1.577  ,   4.664  ,  16.8    ,  14.92   ,  -3.549  ,...
DESIRED: array([ 109.   ,   26.28 ,   -8.37 ,   96.   , -177.6  ,   67.1  ,
32.47 ,  -29.23 , -123.25 ,    4.31 , -157.5  , -223.4  ,
19.69 ,  -33.78 ,  -98.94 ,  -34.9  ,  193.2  ,  -56.88 ,...
2025-04-27 05:21:17.458705 test begin: paddle.sum(Tensor([96, 92416],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([96, 92416],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 96 / 96 (100%)
Max absolute difference among violations: 269.5
Max relative difference among violations: 11.05
ACTUAL: array([ 2.7844e+01,  9.1562e+00, -1.2320e+01,  7.8164e+00,  4.4453e+00,
3.7354e-01, -2.0371e+00,  2.2363e+00,  6.2891e+00, -2.2705e-02,
-2.1328e+01,  6.9102e+00,  3.6504e+00, -8.1016e+00, -6.0205e-01,...
DESIRED: array([  39.34 ,   88.75 , -191.9  ,    6.367,   81.06 ,  158.8  ,
166.5  ,  112.5  ,   72.25 ,   31.48 , -227.4  ,  -14.5  ,
82.75 , -139.6  ,   51.94 ,  -61.44 ,   25.03 ,  -82.3  ,...
2025-04-27 05:21:18.741384 test begin: paddle.sum(Tensor([96, 97280],"float16"), axis=1, )
[accuracy error] paddle.sum(Tensor([96, 97280],"float16"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 96 / 96 (100%)
Max absolute difference among violations: 197.8
Max relative difference among violations: 18.69
ACTUAL: array([-15.625  , -18.14   ,  -1.397  ,  33.1    ,  -3.06   ,   0.747  ,
13.87   ,  -5.848  ,   2.543  , -10.734  ,   1.694  ,   6.543  ,
-39.7    ,  -8.875  , -14.1    ,  12.66   ,   0.1892 ,  18.94   ,...
DESIRED: array([ -36.16 ,   15.67 ,  101.1  ,  169.6  ,  -49.84 ,  -38.03 ,
153.9  ,   56.4  ,  -61.38 , -167.   ,   45.38 ,  161.4  ,
-119.4  ,   87.3  ,  -96.7  ,  -33.03 ,   21.16 ,  164.8  ,...
2025-04-27 05:32:16.981293 test begin: paddle.trace(x=Tensor([3, 4],"float64"), offset=-1, axis1=0, axis2=1, )
[accuracy error] paddle.trace(x=Tensor([3, 4],"float64"), offset=-1, axis1=0, axis2=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 1.09330976
Max relative difference among violations: 2.261538
ACTUAL: array(0.609873)
DESIRED: array(-0.483436)
2025-04-27 05:32:17.962063 test begin: paddle.trace(x=Tensor([3, 4],"float64"), offset=1, axis1=0, axis2=1, )
[accuracy error] paddle.trace(x=Tensor([3, 4],"float64"), offset=1, axis1=0, axis2=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 0.39107639
Max relative difference among violations: 1.72259414
ACTUAL: array(-0.164049)
DESIRED: array(0.227028)
2025-04-27 07:06:33.955801 test begin: paddle.unique(Tensor([120],"int64"), return_index=True, return_inverse=True, return_counts=True, dtype="int32", )
[accuracy error] paddle.unique(Tensor([120],"int64"), return_index=True, return_inverse=True, return_counts=True, dtype="int32", )
[output type diff error2],  4 3
2025-04-27 07:06:38.853977 test begin: paddle.unique(Tensor([3, 5, 5],"float32"), return_index=True, return_inverse=True, return_counts=True, axis=0, )
[accuracy error] paddle.unique(Tensor([3, 5, 5],"float32"), return_index=True, return_inverse=True, return_counts=True, axis=0, )
[output type diff error2],  4 3
2025-04-27 07:06:42.095406 test begin: paddle.unique(Tensor([],"float32"), return_index=True, return_inverse=True, return_counts=True, )
[accuracy error] paddle.unique(Tensor([],"float32"), return_index=True, return_inverse=True, return_counts=True, )
[output type diff error2],  4 3
2025-04-27 07:06:49.599366 test begin: paddle.unique_consecutive(x=Tensor([4, 1],"float32"), return_inverse=True, )
[accuracy error] paddle.unique_consecutive(x=Tensor([4, 1],"float32"), return_inverse=True, )
Not equal to tolerance rtol=0.01, atol=0.01
(shapes (4,), (4, 1) mismatch)
ACTUAL: array([0, 1, 2, 3])
DESIRED: array([[0],
[1],
[2],
[3]])
2025-04-27 07:06:50.848073 test begin: paddle.unique_consecutive(x=Tensor([6, 1],"float32"), return_inverse=True, return_counts=True, )
[accuracy error] paddle.unique_consecutive(x=Tensor([6, 1],"float32"), return_inverse=True, return_counts=True, )
Not equal to tolerance rtol=0.01, atol=0.01
(shapes (6,), (6, 1) mismatch)
ACTUAL: array([0, 1, 2, 3, 4, 5])
DESIRED: array([[0],
[1],
[2],...
2025-04-27 07:29:21.967134 test begin: paddle.var(Tensor([],"float32"), )
/root/anaconda3/envs/test2/lib/python3.9/site-packages/torch/utils/_device.py:104: UserWarning: var(): degrees of freedom is <= 0. Correction should be strictly less than the reduction factor (input numel divided by output numel). (Triggered internally at /pytorch/aten/src/ATen/native/ReduceOps.cpp:1831.)
return func(*args, **kwargs)
[accuracy error] paddle.var(Tensor([],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
nan location mismatch:
ACTUAL: array(0., dtype=float32)
DESIRED: array(nan, dtype=float32)
2025-04-27 07:29:22.527399 test begin: paddle.var(Tensor([],"float32"), list[], )
[accuracy error] paddle.var(Tensor([],"float32"), list[], )
Not equal to tolerance rtol=0.01, atol=0.01
nan location mismatch:
ACTUAL: array(0., dtype=float32)
DESIRED: array(nan, dtype=float32)
2025-04-26 23:48:21.554378 test begin: paddle.sum(x=Tensor([2, 2],"float64"), axis=Tensor([1],"int64"), )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.sum(x=Tensor([2, 2],"float64"), axis=Tensor([1],"int64"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2 / 2 (100%)
Max absolute difference among violations: 0.2664391
Max relative difference among violations: 0.82789883
ACTUAL: array([0.266439, 0.055387])
DESIRED: array(0.321826)
2025-04-26 23:48:32.815122 test begin: paddle.Tensor.put_along_axis(Tensor([2, 60],"float32"), Tensor([2, 4],"int64"), Tensor([2, 4],"float32"), axis=1, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.Tensor.put_along_axis(Tensor([2, 60],"float32"), Tensor([2, 4],"int64"), Tensor([2, 4],"float32"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 120 (0.833%)
Max absolute difference among violations: 1.0270227e+38
Max relative difference among violations: 1.0556403
ACTUAL: array([[ 1.379649e+38,  2.655063e-02,  1.177490e+38, -4.207416e-01,
3.432311e-01,  2.654865e-01,  3.452641e-01,  4.896451e-01,
-2.351393e-01, -2.663211e-01,  1.333010e-01,  3.627378e-01,...
DESIRED: array([[ 1.379649e+38,  2.655063e-02,  1.177490e+38, -4.207416e-01,
3.432311e-01,  2.654865e-01,  3.452641e-01,  4.896451e-01,
-2.351393e-01, -2.663211e-01,  1.333010e-01,  3.627378e-01,...
2025-04-26 23:48:33.505768 test begin: paddle.Tensor.put_along_axis(Tensor([30, 60],"float32"), Tensor([30, 4],"int64"), Tensor([30, 4],"float32"), axis=1, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.Tensor.put_along_axis(Tensor([30, 60],"float32"), Tensor([30, 4],"int64"), Tensor([30, 4],"float32"), axis=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1800 (0.0556%)
Max absolute difference among violations: 1.395684e+38
Max relative difference among violations: 1.1759425
ACTUAL: array([[ 4.740265e+36,  3.939801e-01,  1.045514e-01, ...,  4.182658e-02,
1.287840e-01,  1.948308e-01],
[ 3.785228e-02,  2.414059e-01, -2.544464e-01, ...,  2.162670e-02,...
DESIRED: array([[ 4.740265e+36,  3.939801e-01,  1.045514e-01, ...,  4.182658e-02,
1.287840e-01,  1.948308e-01],
[ 3.785228e-02,  2.414059e-01, -2.544464e-01, ...,  2.162670e-02,...
2025-04-28 13:55:24.549766 test begin: paddle.put_along_axis(Tensor([3, 5],"float32"), Tensor([2, 3],"int64"), Tensor([2, 5],"float32"), 1, "assign", True, False, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.put_along_axis(Tensor([3, 5],"float32"), Tensor([2, 3],"int64"), Tensor([2, 5],"float32"), 1, "assign", True, False, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 15 (6.67%)
Max absolute difference among violations: 2.7348712e+38
Max relative difference among violations: 2.4703434
ACTUAL: array([[-8.573462e+37,  1.286989e+38,  1.288361e-01, -4.765928e+37,
3.778146e-01],
[ 1.246768e+38, -2.352264e-01,  1.413494e-01, -2.866344e-01,...
DESIRED: array([[-8.573462e+37,  1.286989e+38,  1.288361e-01, -4.765928e+37,
3.778146e-01],
[ 1.246768e+38, -2.352264e-01,  1.413494e-01, -2.866344e-01,...
2025-04-28 13:55:35.693929 test begin: paddle.tensordot(Tensor([3, 4, 4],"float32"), Tensor([4, 4, 5],"float32"), Tensor([1],"int64"), )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.tensordot(Tensor([3, 4, 4],"float32"), Tensor([4, 4, 5],"float32"), Tensor([1],"int64"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 220 / 240 (91.7%)
Max absolute difference among violations: 0.5790238
Max relative difference among violations: 345.84235
ACTUAL: array([[[[ 0.179637, -0.01087 , -0.105141, -0.08155 ,  0.082123],
[-0.143015, -0.03129 ,  0.165518, -0.00761 ,  0.259362],
[-0.032811,  0.064813, -0.067243,  0.066973,  0.037216],...
DESIRED: array([[[[ 0.093257, -0.057145,  0.25836 ,  0.047193, -0.154925],
[ 0.168524,  0.198107,  0.084858, -0.156797, -0.008122],
[ 0.112303, -0.046366, -0.180061, -0.04884 , -0.138087],...
2025-04-28 13:55:36.393414 test begin: paddle.tensordot(Tensor([3, 4, 4],"float64"), Tensor([4, 4, 5],"float64"), Tensor([1],"int64"), )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.tensordot(Tensor([3, 4, 4],"float64"), Tensor([4, 4, 5],"float64"), Tensor([1],"int64"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 229 / 240 (95.4%)
Max absolute difference among violations: 0.72701918
Max relative difference among violations: 387.22418489
ACTUAL: array([[[[-0.02451 ,  0.070541,  0.056558, -0.016383,  0.070026],
[-0.007213, -0.062384, -0.004188,  0.109976,  0.10217 ],
[-0.005368, -0.179429,  0.067833,  0.002473, -0.054845],...
DESIRED: array([[[[ 2.178609e-02,  4.954240e-02,  3.083888e-02,  8.684230e-03,
1.148670e-01],
[-4.110482e-02,  1.087032e-01,  3.920391e-03, -2.361974e-02,...
2025-04-26 23:48:28.939347 test begin: paddle.Tensor.expand(Tensor([1, 1, 1, 4096],"float16"), list[2,1,4096,4096,], )
[accuracy error] backward  paddle.Tensor.expand(Tensor([1, 1, 1, 4096],"float16"), list[2,1,4096,4096,], )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 4084 / 4096 (99.7%)
Max absolute difference among violations: 68.
Max relative difference among violations: 882.
ACTUAL: array([[[[ -2.295 ,   4.35  ,   8.77  , ..., -15.91  ,  -0.2861,
-8.805 ]]]], dtype=float16)
DESIRED: array([[[[  5.11,  20.08,  40.2 , ..., -31.31,  28.6 , -12.31]]]],
dtype=float16)
2025-04-26 23:48:57.155026 test begin: paddle.Tensor.expand(Tensor([1, 1, 192],"float16"), tuple(128,-1,-1,), )
[accuracy error] backward  paddle.Tensor.expand(Tensor([1, 1, 192],"float16"), tuple(128,-1,-1,), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 141 / 192 (73.4%)
Max absolute difference among violations: 0.2422
Max relative difference among violations: 1.407
ACTUAL: array([[[-0.2384 , -1.162  ,  2.447  ,  4.125  , -2.68   ,  5.363  ,
-1.922  ,  7.97   , -3.398  ,  0.3044 ,  1.219  ,  2.783  ,
3.984  ,  2.316  ,  1.818  , -0.5063 ,  1.714  ,  1.467  ,...
DESIRED: array([[[-0.2458 , -1.21   ,  2.594  ,  4.266  , -2.729  ,  5.52   ,
-1.958  ,  8.19   , -3.54   ,  0.285  ,  1.194  ,  2.832  ,
4.11   ,  2.324  ,  2.01   , -0.4592 ,  1.742  ,  1.527  ,...
2025-04-26 23:49:10.105778 test begin: paddle.Tensor.expand(Tensor([1, 1, 384],"float16"), tuple(64,-1,-1,), )
[accuracy error] backward  paddle.Tensor.expand(Tensor([1, 1, 384],"float16"), tuple(64,-1,-1,), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 83 / 384 (21.6%)
Max absolute difference among violations: 0.08594
Max relative difference among violations: 97.7
ACTUAL: array([[[-1.1426e+00,  1.3213e+00,  1.2207e+00,  3.8330e-01,
3.2344e+00,  2.3223e+00, -1.4346e+00, -2.8184e+00,
2.6367e+00, -3.1934e+00,  3.2461e+00,  4.7852e-02,...
DESIRED: array([[[-1.1367e+00,  1.3193e+00,  1.2373e+00,  3.8208e-01,
3.2676e+00,  2.3691e+00, -1.4414e+00, -2.8398e+00,
2.6660e+00, -3.2285e+00,  3.2617e+00,  5.3375e-02,...
2025-04-26 23:49:15.644778 test begin: paddle.Tensor.expand(Tensor([1, 1, 768],"float16"), tuple(112,-1,-1,), )
[accuracy error] backward  paddle.Tensor.expand(Tensor([1, 1, 768],"float16"), tuple(112,-1,-1,), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 507 / 768 (66%)
Max absolute difference among violations: 0.2188
Max relative difference among violations: 7.777
ACTUAL: array([[[-6.2266e+00,  2.7266e+00,  3.2578e+00, -5.5625e+00,
4.8320e+00, -1.5283e+00,  1.7266e+00,  1.4160e+00,
2.6484e+00, -1.3154e+00,  8.5889e-01, -9.2734e+00,...
DESIRED: array([[[-6.3789e+00,  2.7559e+00,  3.3164e+00, -5.7148e+00,
4.9609e+00, -1.5586e+00,  1.7539e+00,  1.3975e+00,
2.6953e+00, -1.3604e+00,  8.9502e-01, -9.4297e+00,...
2025-04-26 23:49:15.823300 test begin: paddle.Tensor.expand(Tensor([1, 1, 768],"float16"), tuple(128,-1,-1,), )
[accuracy error] backward  paddle.Tensor.expand(Tensor([1, 1, 768],"float16"), tuple(128,-1,-1,), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 557 / 768 (72.5%)
Max absolute difference among violations: 0.2969
Max relative difference among violations: 11.016
ACTUAL: array([[[ 2.4072e-01,  6.2451e-01, -6.5898e+00,  2.3496e+00,
-6.7500e+00, -1.3818e+00,  4.5625e+00, -5.3164e+00,
5.4492e+00,  1.8799e+00,  1.3262e+00,  1.0625e+00,...
DESIRED: array([[[ 2.9492e-01,  5.8984e-01, -6.7031e+00,  2.4473e+00,
-6.8789e+00, -1.4023e+00,  4.6328e+00, -5.3633e+00,
5.5898e+00,  1.9072e+00,  1.3945e+00,  9.9756e-01,...
2025-04-26 23:49:16.039937 test begin: paddle.Tensor.expand(Tensor([1, 1, 768],"float16"), tuple(64,-1,-1,), )
[accuracy error] backward  paddle.Tensor.expand(Tensor([1, 1, 768],"float16"), tuple(64,-1,-1,), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 183 / 768 (23.8%)
Max absolute difference among violations: 0.08984
Max relative difference among violations: 3.465
ACTUAL: array([[[ 1.3574e+00, -1.9629e+00, -2.4634e-01,  4.3311e-01,
-4.1992e-02,  9.4385e-01,  1.4951e+00, -3.9648e-01,
-9.8389e-01, -2.1309e+00, -1.4619e+00,  2.1655e-01,...
DESIRED: array([[[ 1.3662e+00, -1.9600e+00, -2.4597e-01,  4.3604e-01,
-3.8483e-02,  9.5361e-01,  1.5010e+00, -4.2163e-01,
-1.0029e+00, -2.1484e+00, -1.4951e+00,  2.3230e-01,...
2025-04-26 23:49:24.805024 test begin: paddle.Tensor.expand(Tensor([1, 2048, 1, 1],"float16"), list[1,2048,1,64,], )
[accuracy error] backward  paddle.Tensor.expand(Tensor([1, 2048, 1, 1],"float16"), list[1,2048,1,64,], )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 463 / 2048 (22.6%)
Max absolute difference among violations: 0.10156
Max relative difference among violations: 4.27
ACTUAL: array([[[[ 2.008]],
[[-1.288]],...
DESIRED: array([[[[ 2.023 ]],
[[-1.3125]],...
2025-04-26 23:49:28.426851 test begin: paddle.Tensor.expand(Tensor([1, 35, 1, 1],"float16"), list[2,35,1,64,], )
[accuracy error] backward  paddle.Tensor.expand(Tensor([1, 35, 1, 1],"float16"), list[2,35,1,64,], )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 22 / 35 (62.9%)
Max absolute difference among violations: 0.1758
Max relative difference among violations: 0.324
ACTUAL: array([[[[ 0.6904]],
[[ 4.906 ]],...
DESIRED: array([[[[ 0.681 ]],
[[ 4.94  ]],...
2025-04-26 23:49:28.751169 test begin: paddle.Tensor.expand(Tensor([1, 37, 1, 1],"float16"), list[2,37,1,64,], )
[accuracy error] backward  paddle.Tensor.expand(Tensor([1, 37, 1, 1],"float16"), list[2,37,1,64,], )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 28 / 37 (75.7%)
Max absolute difference among violations: 0.2227
Max relative difference among violations: 0.08997
ACTUAL: array([[[[-2.141e+00]],
[[ 4.867e+00]],...
DESIRED: array([[[[-2.203  ]],
[[ 4.973  ]],...
2025-04-26 23:49:28.898353 test begin: paddle.Tensor.expand(Tensor([1, 38, 1, 1],"float16"), list[2,38,1,64,], )
[accuracy error] backward  paddle.Tensor.expand(Tensor([1, 38, 1, 1],"float16"), list[2,38,1,64,], )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 25 / 38 (65.8%)
Max absolute difference among violations: 0.1836
Max relative difference among violations: 0.317
ACTUAL: array([[[[-2.4   ]],
[[-0.9385]],...
DESIRED: array([[[[-2.416 ]],
[[-0.903 ]],...
2025-04-26 23:49:29.054008 test begin: paddle.Tensor.expand(Tensor([1, 39, 1, 1],"float16"), list[2,39,1,64,], )
[accuracy error] backward  paddle.Tensor.expand(Tensor([1, 39, 1, 1],"float16"), list[2,39,1,64,], )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 25 / 39 (64.1%)
Max absolute difference among violations: 0.1797
Max relative difference among violations: 0.0859
ACTUAL: array([[[[-5.875 ]],
[[ 0.2854]],...
DESIRED: array([[[[-5.95  ]],
[[ 0.2842]],...
2025-04-26 23:49:30.159747 test begin: paddle.Tensor.expand(Tensor([1, 45, 1, 1],"float16"), list[2,45,1,64,], )
[accuracy error] backward  paddle.Tensor.expand(Tensor([1, 45, 1, 1],"float16"), list[2,45,1,64,], )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 33 / 45 (73.3%)
Max absolute difference among violations: 0.336
Max relative difference among violations: 0.3787
ACTUAL: array([[[[ 5.895  ]],
[[10.35   ]],...
DESIRED: array([[[[ 6.098  ]],
[[10.69   ]],...
2025-04-26 23:49:30.690140 test begin: paddle.Tensor.expand(Tensor([1, 50, 1, 1],"float16"), list[2,50,1,64,], )
[accuracy error] backward  paddle.Tensor.expand(Tensor([1, 50, 1, 1],"float16"), list[2,50,1,64,], )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 36 / 50 (72%)
Max absolute difference among violations: 0.207
Max relative difference among violations: 2.73
ACTUAL: array([[[[ 1.149  ]],
[[ 1.954  ]],...
DESIRED: array([[[[ 1.113 ]],
[[ 1.95  ]],...
2025-04-26 23:49:31.247657 test begin: paddle.Tensor.expand(Tensor([1, 51, 1, 1],"float16"), list[2,51,1,64,], )
[accuracy error] backward  paddle.Tensor.expand(Tensor([1, 51, 1, 1],"float16"), list[2,51,1,64,], )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 36 / 51 (70.6%)
Max absolute difference among violations: 0.1836
Max relative difference among violations: 0.8853
ACTUAL: array([[[[ 6.631e-01]],
[[ 2.205e+00]],...
DESIRED: array([[[[ 0.661  ]],
[[ 2.223  ]],...
2025-04-26 23:49:31.407051 test begin: paddle.Tensor.expand(Tensor([1, 52, 1, 1],"float16"), list[2,52,1,64,], )
[accuracy error] backward  paddle.Tensor.expand(Tensor([1, 52, 1, 1],"float16"), list[2,52,1,64,], )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 38 / 52 (73.1%)
Max absolute difference among violations: 0.1562
Max relative difference among violations: 0.2302
ACTUAL: array([[[[ 0.876  ]],
[[-1.876  ]],...
DESIRED: array([[[[ 0.8833 ]],
[[-1.916  ]],...
2025-04-26 23:49:31.605872 test begin: paddle.Tensor.expand(Tensor([1, 57, 1, 1],"float16"), list[2,57,1,64,], )
[accuracy error] backward  paddle.Tensor.expand(Tensor([1, 57, 1, 1],"float16"), list[2,57,1,64,], )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 36 / 57 (63.2%)
Max absolute difference among violations: 0.1875
Max relative difference among violations: 0.6934
ACTUAL: array([[[[-2.264 ]],
[[-1.503 ]],...
DESIRED: array([[[[-2.34   ]],
[[-1.504  ]],...
2025-04-26 23:59:56.462174 test begin: paddle.expand(Tensor([3, 2],"float16"), shape=list[512,3,2,], )
[accuracy error] backward  paddle.expand(Tensor([3, 2],"float16"), shape=list[512,3,2,], )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 5 / 6 (83.3%)
Max absolute difference among violations: 0.992
Max relative difference among violations: 0.2676
ACTUAL: array([[  4.266,  -3.83 ],
[ -9.3  ,   2.   ],
[  2.738, -14.22 ]], dtype=float16)
DESIRED: array([[  4.844,  -4.113],
[ -9.35 ,   2.73 ],
[  2.83 , -15.21 ]], dtype=float16)
2025-04-27 00:17:11.705589 test begin: paddle.nn.functional.grid_sample(Tensor([4, 128, 128, 128],"float16"), Tensor([4, 128, 128, 2],"float16"), )
/root/anaconda3/envs/test2/lib/python3.9/site-packages/torch/nn/functional.py:5015: UserWarning: Default grid_sample and affine_grid behavior has changed to align_corners=False since 1.3.0. Please specify align_corners=True if the old behavior is desired. See the documentation of grid_sample for details.
warnings.warn(
[accuracy error] paddle.nn.functional.grid_sample(Tensor([4, 128, 128, 128],"float16"), Tensor([4, 128, 128, 2],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 7331201 / 8388608 (87.4%)
Max absolute difference among violations: 0.67912304
Max relative difference among violations: 233.48265
ACTUAL: array([[[[0.570302, 0.479065, 0.270975, ..., 0.404235, 0.428822,
0.649283],
[0.347647, 0.302563, 0.382997, ..., 0.504775, 0.597903,...
DESIRED: array([[[[0.526506, 0.664458, 0.403294, ..., 0.285139, 0.215553,
0.778387],
[0.244677, 0.356264, 0.520001, ..., 0.497348, 0.474091,...
2025-04-27 00:17:13.396839 test begin: paddle.nn.functional.grid_sample(Tensor([4, 128, 128, 128],"float16"), Tensor([4, 256, 256, 2],"float16"), )
[accuracy error] paddle.nn.functional.grid_sample(Tensor([4, 128, 128, 128],"float16"), Tensor([4, 256, 256, 2],"float16"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 29343982 / 33554432 (87.5%)
Max absolute difference among violations: 0.7074014
Max relative difference among violations: 1198.6698
ACTUAL: array([[[[0.777451, 0.534726, 0.579282, ..., 0.471133, 0.641199,
0.571191],
[0.438676, 0.755269, 0.260213, ..., 0.418261, 0.765527,...
DESIRED: array([[[[0.750096, 0.561366, 0.640969, ..., 0.591777, 0.599744,
0.766274],
[0.409366, 0.716665, 0.360341, ..., 0.282902, 0.678968,...
2025-04-26 23:49:42.929718 test begin: paddle.nn.functional.embedding(Tensor([1, 300, 4096],"int64"), Tensor([10, 3],"float32"), padding_idx=1, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.nn.functional.embedding(Tensor([1, 300, 4096],"int64"), Tensor([10, 3],"float32"), padding_idx=1, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 370281 / 3686400 (10%)
Max absolute difference among violations: 0.8134429
Max relative difference among violations: 1.
ACTUAL: array([[[[0.635269, 0.066954, 0.340147],
[0.045997, 0.221293, 0.616964],
[0.95137 , 0.647415, 0.890736],...
DESIRED: array([[[[0.635269, 0.066954, 0.340147],
[0.045997, 0.221293, 0.616964],
[0.95137 , 0.647415, 0.890736],...
2025-04-26 23:51:45.857712 test begin: paddle.nn.functional.embedding(Tensor([112, 28],"int64"), weight=Tensor([33712, 512],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.nn.functional.embedding(Tensor([112, 28],"int64"), weight=Tensor([33712, 512],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 505 / 1605632 (0.0315%)
Max absolute difference among violations: 0.99844605
Max relative difference among violations: 1.
ACTUAL: array([[[0.481729, 0.432083, 0.746242, ..., 0.149715, 0.451749,
0.678908],
[0.887531, 0.564417, 0.420026, ..., 0.730704, 0.398868,...
DESIRED: array([[[0.481729, 0.432083, 0.746242, ..., 0.149715, 0.451749,
0.678908],
[0.887531, 0.564417, 0.420026, ..., 0.730704, 0.398868,...
2025-04-26 23:52:15.610125 test begin: paddle.nn.functional.embedding(Tensor([12, 7],"int32"), weight=Tensor([84, 32],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.nn.functional.embedding(Tensor([12, 7],"int32"), weight=Tensor([84, 32],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 32 / 2688 (1.19%)
Max absolute difference among violations: 0.947369
Max relative difference among violations: 1.
ACTUAL: array([[[0.590832, 0.219614, 0.180467, ..., 0.728848, 0.828059,
0.53574 ],
[0.022388, 0.627436, 0.878296, ..., 0.220594, 0.22443 ,...
DESIRED: array([[[0.590832, 0.219614, 0.180467, ..., 0.728848, 0.828059,
0.53574 ],
[0.022388, 0.627436, 0.878296, ..., 0.220594, 0.22443 ,...
2025-04-26 23:52:15.958466 test begin: paddle.nn.functional.embedding(Tensor([12, 7],"int32"), weight=Tensor([99, 32],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.nn.functional.embedding(Tensor([12, 7],"int32"), weight=Tensor([99, 32],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 64 / 2688 (2.38%)
Max absolute difference among violations: 0.9843736
Max relative difference among violations: 1.
ACTUAL: array([[[0.507639, 0.304032, 0.280262, ..., 0.216207, 0.029235,
0.472487],
[0.502277, 0.839155, 0.556129, ..., 0.752776, 0.60829 ,...
DESIRED: array([[[0.507639, 0.304032, 0.280262, ..., 0.216207, 0.029235,
0.472487],
[0.502277, 0.839155, 0.556129, ..., 0.752776, 0.60829 ,...
2025-04-26 23:52:23.424627 test begin: paddle.nn.functional.embedding(Tensor([120, 25],"int64"), weight=Tensor([33712, 512],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.nn.functional.embedding(Tensor([120, 25],"int64"), weight=Tensor([33712, 512],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 510 / 1536000 (0.0332%)
Max absolute difference among violations: 0.99986523
Max relative difference among violations: 1.
ACTUAL: array([[[0.440838, 0.148506, 0.907342, ..., 0.530883, 0.876141,
0.180132],
[0.026683, 0.051275, 0.500779, ..., 0.969725, 0.457624,...
DESIRED: array([[[0.440838, 0.148506, 0.907342, ..., 0.530883, 0.876141,
0.180132],
[0.026683, 0.051275, 0.500779, ..., 0.969725, 0.457624,...
2025-04-26 23:52:28.314957 test begin: paddle.nn.functional.embedding(Tensor([120, 28],"int64"), weight=Tensor([33712, 512],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.nn.functional.embedding(Tensor([120, 28],"int64"), weight=Tensor([33712, 512],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 509 / 1720320 (0.0296%)
Max absolute difference among violations: 0.9997371
Max relative difference among violations: 1.
ACTUAL: array([[[4.006312e-02, 4.261212e-01, 4.159548e-01, ..., 4.095965e-01,
8.348489e-02, 2.100575e-01],
[7.429371e-01, 7.837518e-01, 6.852752e-01, ..., 3.957388e-01,...
DESIRED: array([[[4.006312e-02, 4.261212e-01, 4.159548e-01, ..., 4.095965e-01,
8.348489e-02, 2.100575e-01],
[7.429371e-01, 7.837518e-01, 6.852752e-01, ..., 3.957388e-01,...
2025-04-26 23:52:32.203399 test begin: paddle.nn.functional.embedding(Tensor([120, 31],"int64"), weight=Tensor([33712, 512],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.nn.functional.embedding(Tensor([120, 31],"int64"), weight=Tensor([33712, 512],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 506 / 1904640 (0.0266%)
Max absolute difference among violations: 0.9991635
Max relative difference among violations: 1.
ACTUAL: array([[[0.453473, 0.531229, 0.644471, ..., 0.93087 , 0.971934,
0.203918],
[0.249661, 0.524845, 0.590514, ..., 0.315402, 0.716624,...
DESIRED: array([[[0.453473, 0.531229, 0.644471, ..., 0.93087 , 0.971934,
0.203918],
[0.249661, 0.524845, 0.590514, ..., 0.315402, 0.716624,...
2025-04-26 23:53:11.641328 test begin: paddle.nn.functional.embedding(Tensor([128, 29],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.nn.functional.embedding(Tensor([128, 29],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1012 / 3801088 (0.0266%)
Max absolute difference among violations: 0.9989742
Max relative difference among violations: 1.
ACTUAL: array([[[0.524968, 0.049706, 0.246197, ..., 0.566872, 0.688113,
0.930796],
[0.074024, 0.440249, 0.989407, ..., 0.06718 , 0.537087,...
DESIRED: array([[[0.524968, 0.049706, 0.246197, ..., 0.566872, 0.688113,
0.930796],
[0.074024, 0.440249, 0.989407, ..., 0.06718 , 0.537087,...
2025-04-26 23:53:31.274422 test begin: paddle.nn.functional.embedding(Tensor([13, 10],"int32"), weight=Tensor([81, 24],"float32"), padding_idx=1, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.nn.functional.embedding(Tensor([13, 10],"int32"), weight=Tensor([81, 24],"float32"), padding_idx=1, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 48 / 3120 (1.54%)
Max absolute difference among violations: 0.9703602
Max relative difference among violations: 1.
ACTUAL: array([[[0.207724, 0.529369, 0.122722, ..., 0.339955, 0.937874,
0.005663],
[0.488668, 0.434343, 0.777028, ..., 0.575514, 0.618067,...
DESIRED: array([[[0.207724, 0.529369, 0.122722, ..., 0.339955, 0.937874,
0.005663],
[0.488668, 0.434343, 0.777028, ..., 0.575514, 0.618067,...
2025-04-26 23:53:31.440799 test begin: paddle.nn.functional.embedding(Tensor([13, 10],"int32"), weight=Tensor([99, 32],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.nn.functional.embedding(Tensor([13, 10],"int32"), weight=Tensor([99, 32],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 64 / 4160 (1.54%)
Max absolute difference among violations: 0.9478954
Max relative difference among violations: 1.
ACTUAL: array([[[7.840863e-01, 2.049668e-01, 6.390587e-01, ..., 1.232416e-01,
3.953505e-01, 6.082975e-01],
[1.250642e-01, 9.674246e-01, 5.233051e-01, ..., 9.524573e-01,...
DESIRED: array([[[7.840863e-01, 2.049668e-01, 6.390587e-01, ..., 1.232416e-01,
3.953505e-01, 6.082975e-01],
[1.250642e-01, 9.674246e-01, 5.233051e-01, ..., 9.524573e-01,...
2025-04-26 23:53:35.433845 test begin: paddle.nn.functional.embedding(Tensor([13, 3],"int32"), weight=Tensor([81, 24],"float32"), padding_idx=1, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.nn.functional.embedding(Tensor([13, 3],"int32"), weight=Tensor([81, 24],"float32"), padding_idx=1, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 24 / 936 (2.56%)
Max absolute difference among violations: 0.963405
Max relative difference among violations: 1.
ACTUAL: array([[[1.457363e-01, 6.405656e-01, 9.934666e-01, 5.450964e-01,
5.911953e-01, 1.108135e-01, 6.796776e-01, 7.253906e-01,
9.252642e-01, 4.468551e-01, 9.426809e-01, 5.563508e-01,...
DESIRED: array([[[1.457363e-01, 6.405656e-01, 9.934666e-01, 5.450964e-01,
5.911953e-01, 1.108135e-01, 6.796776e-01, 7.253906e-01,
9.252642e-01, 4.468551e-01, 9.426809e-01, 5.563508e-01,...
2025-04-26 23:53:35.631933 test begin: paddle.nn.functional.embedding(Tensor([13, 3],"int32"), weight=Tensor([99, 32],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.nn.functional.embedding(Tensor([13, 3],"int32"), weight=Tensor([99, 32],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 32 / 1248 (2.56%)
Max absolute difference among violations: 0.991781
Max relative difference among violations: 1.
ACTUAL: array([[[0.495216, 0.271567, 0.544135, ..., 0.511803, 0.591471,
0.121909],
[0.307466, 0.524557, 0.668234, ..., 0.615932, 0.950777,...
DESIRED: array([[[0.495216, 0.271567, 0.544135, ..., 0.511803, 0.591471,
0.121909],
[0.307466, 0.524557, 0.668234, ..., 0.615932, 0.950777,...
2025-04-26 23:53:36.966580 test begin: paddle.nn.functional.embedding(Tensor([13, 4, 7],"int32"), weight=Tensor([99, 16],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.nn.functional.embedding(Tensor([13, 4, 7],"int32"), weight=Tensor([99, 16],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 32 / 5824 (0.549%)
Max absolute difference among violations: 0.99234045
Max relative difference among violations: 1.
ACTUAL: array([[[[0.680765, 0.778618, 0.173999, ..., 0.916271, 0.809193,
0.715331],
[0.020753, 0.532758, 0.278641, ..., 0.717403, 0.285824,...
DESIRED: array([[[[0.680765, 0.778618, 0.173999, ..., 0.916271, 0.809193,
0.715331],
[0.020753, 0.532758, 0.278641, ..., 0.717403, 0.285824,...
2025-04-26 23:53:37.167359 test begin: paddle.nn.functional.embedding(Tensor([13, 4, 7],"int32"), weight=Tensor([99, 32],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.nn.functional.embedding(Tensor([13, 4, 7],"int32"), weight=Tensor([99, 32],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 62 / 11648 (0.532%)
Max absolute difference among violations: 0.99771
Max relative difference among violations: 1.
ACTUAL: array([[[[6.206357e-02, 9.549281e-01, 1.939052e-01, ..., 7.541746e-01,
4.932741e-01, 6.691884e-01],
[2.539307e-01, 1.379230e-01, 9.432981e-03, ..., 7.845622e-01,...
DESIRED: array([[[[6.206357e-02, 9.549281e-01, 1.939052e-01, ..., 7.541746e-01,
4.932741e-01, 6.691884e-01],
[2.539307e-01, 1.379230e-01, 9.432981e-03, ..., 7.845622e-01,...
2025-04-26 23:53:38.726426 test begin: paddle.nn.functional.embedding(Tensor([13, 7],"int32"), weight=Tensor([100, 16],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.nn.functional.embedding(Tensor([13, 7],"int32"), weight=Tensor([100, 16],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 32 / 1456 (2.2%)
Max absolute difference among violations: 0.99370533
Max relative difference among violations: 1.
ACTUAL: array([[[0.021703, 0.239387, 0.772603, ..., 0.08855 , 0.143526,
0.726825],
[0.54345 , 0.35919 , 0.284874, ..., 0.356768, 0.46736 ,...
DESIRED: array([[[0.021703, 0.239387, 0.772603, ..., 0.08855 , 0.143526,
0.726825],
[0.54345 , 0.35919 , 0.284874, ..., 0.356768, 0.46736 ,...
2025-04-26 23:53:39.148829 test begin: paddle.nn.functional.embedding(Tensor([13, 7],"int32"), weight=Tensor([103, 24],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.nn.functional.embedding(Tensor([13, 7],"int32"), weight=Tensor([103, 24],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 24 / 2184 (1.1%)
Max absolute difference among violations: 0.98160106
Max relative difference among violations: 1.
ACTUAL: array([[[0.113439, 0.089387, 0.627718, ..., 0.020161, 0.865117,
0.023072],
[0.835719, 0.26473 , 0.498557, ..., 0.639295, 0.514006,...
DESIRED: array([[[0.113439, 0.089387, 0.627718, ..., 0.020161, 0.865117,
0.023072],
[0.835719, 0.26473 , 0.498557, ..., 0.639295, 0.514006,...
2025-04-26 23:53:39.305482 test begin: paddle.nn.functional.embedding(Tensor([13, 7],"int32"), weight=Tensor([109, 128],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.nn.functional.embedding(Tensor([13, 7],"int32"), weight=Tensor([109, 128],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 126 / 11648 (1.08%)
Max absolute difference among violations: 0.99085516
Max relative difference among violations: 1.
ACTUAL: array([[[0.330051, 0.863845, 0.032727, ..., 0.925918, 0.861307,
0.833454],
[0.10735 , 0.337879, 0.259517, ..., 0.469987, 0.628003,...
DESIRED: array([[[0.330051, 0.863845, 0.032727, ..., 0.925918, 0.861307,
0.833454],
[0.10735 , 0.337879, 0.259517, ..., 0.469987, 0.628003,...
2025-04-26 23:53:39.639968 test begin: paddle.nn.functional.embedding(Tensor([13, 7],"int32"), weight=Tensor([109, 32],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.nn.functional.embedding(Tensor([13, 7],"int32"), weight=Tensor([109, 32],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 31 / 2912 (1.06%)
Max absolute difference among violations: 0.9882536
Max relative difference among violations: 1.
ACTUAL: array([[[5.199986e-01, 8.976721e-01, 9.869463e-01, ..., 8.487754e-01,
5.257785e-02, 1.782166e-01],
[4.517483e-01, 5.187247e-01, 8.961871e-01, ..., 3.851457e-01,...
DESIRED: array([[[5.199986e-01, 8.976721e-01, 9.869463e-01, ..., 8.487754e-01,
5.257785e-02, 1.782166e-01],
[4.517483e-01, 5.187247e-01, 8.961871e-01, ..., 3.851457e-01,...
2025-04-26 23:53:39.867704 test begin: paddle.nn.functional.embedding(Tensor([13, 7],"int32"), weight=Tensor([109, 32],"float32"), padding_idx=1, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.nn.functional.embedding(Tensor([13, 7],"int32"), weight=Tensor([109, 32],"float32"), padding_idx=1, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 32 / 2912 (1.1%)
Max absolute difference among violations: 0.987893
Max relative difference among violations: 1.
ACTUAL: array([[[0.712954, 0.371909, 0.316365, ..., 0.363045, 0.842127,
0.450317],
[0.803277, 0.003723, 0.663968, ..., 0.024821, 0.644207,...
DESIRED: array([[[0.712954, 0.371909, 0.316365, ..., 0.363045, 0.842127,
0.450317],
[0.803277, 0.003723, 0.663968, ..., 0.024821, 0.644207,...
2025-04-26 23:53:40.098896 test begin: paddle.nn.functional.embedding(Tensor([13, 7],"int32"), weight=Tensor([109, 32],"float32"), padding_idx=3, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.nn.functional.embedding(Tensor([13, 7],"int32"), weight=Tensor([109, 32],"float32"), padding_idx=3, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 64 / 2912 (2.2%)
Max absolute difference among violations: 0.9927573
Max relative difference among violations: 1.
ACTUAL: array([[[0.979946, 0.228214, 0.465882, ..., 0.163241, 0.81745 ,
0.302507],
[0.433697, 0.491353, 0.433786, ..., 0.252765, 0.05968 ,...
DESIRED: array([[[0.979946, 0.228214, 0.465882, ..., 0.163241, 0.81745 ,
0.302507],
[0.433697, 0.491353, 0.433786, ..., 0.252765, 0.05968 ,...
2025-04-26 23:53:40.435467 test begin: paddle.nn.functional.embedding(Tensor([13, 7],"int32"), weight=Tensor([109, 64],"float32"), padding_idx=1, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.nn.functional.embedding(Tensor([13, 7],"int32"), weight=Tensor([109, 64],"float32"), padding_idx=1, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 63 / 5824 (1.08%)
Max absolute difference among violations: 0.9952691
Max relative difference among violations: 1.
ACTUAL: array([[[9.624611e-01, 4.300906e-01, 4.890254e-01, ..., 8.526269e-01,
3.795662e-01, 8.772743e-01],
[2.523337e-01, 8.808040e-01, 5.546370e-01, ..., 3.681710e-02,...
DESIRED: array([[[9.624611e-01, 4.300906e-01, 4.890254e-01, ..., 8.526269e-01,
3.795662e-01, 8.772743e-01],
[2.523337e-01, 8.808040e-01, 5.546370e-01, ..., 3.681710e-02,...
2025-04-26 23:53:40.760634 test begin: paddle.nn.functional.embedding(Tensor([13, 7],"int32"), weight=Tensor([110, 16],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.nn.functional.embedding(Tensor([13, 7],"int32"), weight=Tensor([110, 16],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 15 / 1456 (1.03%)
Max absolute difference among violations: 0.90966684
Max relative difference among violations: 1.
ACTUAL: array([[[5.946340e-01, 3.353469e-01, 4.989664e-01, ..., 2.032534e-01,
7.000020e-01, 6.270993e-01],
[4.705539e-01, 5.884353e-01, 5.593539e-01, ..., 7.111616e-02,...
DESIRED: array([[[5.946340e-01, 3.353469e-01, 4.989664e-01, ..., 2.032534e-01,
7.000020e-01, 6.270993e-01],
[4.705539e-01, 5.884353e-01, 5.593539e-01, ..., 7.111616e-02,...
2025-04-26 23:53:43.265628 test begin: paddle.nn.functional.embedding(Tensor([13, 7],"int32"), weight=Tensor([81, 24],"float32"), padding_idx=1, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.nn.functional.embedding(Tensor([13, 7],"int32"), weight=Tensor([81, 24],"float32"), padding_idx=1, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 24 / 2184 (1.1%)
Max absolute difference among violations: 0.9944457
Max relative difference among violations: 1.
ACTUAL: array([[[0.10036 , 0.201594, 0.863786, ..., 0.008553, 0.72289 ,
0.420381],
[0.188942, 0.894131, 0.740162, ..., 0.687216, 0.174346,...
DESIRED: array([[[0.10036 , 0.201594, 0.863786, ..., 0.008553, 0.72289 ,
0.420381],
[0.188942, 0.894131, 0.740162, ..., 0.687216, 0.174346,...
2025-04-26 23:53:43.620680 test begin: paddle.nn.functional.embedding(Tensor([13, 7],"int32"), weight=Tensor([84, 128],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.nn.functional.embedding(Tensor([13, 7],"int32"), weight=Tensor([84, 128],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 256 / 11648 (2.2%)
Max absolute difference among violations: 0.98837805
Max relative difference among violations: 1.
ACTUAL: array([[[0.431337, 0.034581, 0.576535, ..., 0.195679, 0.933535,
0.112483],
[0.96597 , 0.846849, 0.382237, ..., 0.234949, 0.919213,...
DESIRED: array([[[0.431337, 0.034581, 0.576535, ..., 0.195679, 0.933535,
0.112483],
[0.96597 , 0.846849, 0.382237, ..., 0.234949, 0.919213,...
2025-04-26 23:53:44.022459 test begin: paddle.nn.functional.embedding(Tensor([13, 7],"int32"), weight=Tensor([84, 32],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.nn.functional.embedding(Tensor([13, 7],"int32"), weight=Tensor([84, 32],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 32 / 2912 (1.1%)
Max absolute difference among violations: 0.9438687
Max relative difference among violations: 1.
ACTUAL: array([[[0.602039, 0.886574, 0.996213, ..., 0.075117, 0.119818,
0.542181],
[0.787927, 0.097209, 0.77284 , ..., 0.441436, 0.431435,...
DESIRED: array([[[0.602039, 0.886574, 0.996213, ..., 0.075117, 0.119818,
0.542181],
[0.787927, 0.097209, 0.77284 , ..., 0.441436, 0.431435,...
2025-04-26 23:53:44.451035 test begin: paddle.nn.functional.embedding(Tensor([13, 7],"int32"), weight=Tensor([84, 32],"float32"), padding_idx=3, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.nn.functional.embedding(Tensor([13, 7],"int32"), weight=Tensor([84, 32],"float32"), padding_idx=3, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 32 / 2912 (1.1%)
Max absolute difference among violations: 0.98791593
Max relative difference among violations: 1.
ACTUAL: array([[[5.343742e-01, 4.877318e-01, 4.559451e-01, ..., 5.863490e-01,
6.861247e-01, 9.358647e-01],
[8.698458e-01, 2.888617e-01, 1.189797e-01, ..., 3.917152e-01,...
DESIRED: array([[[5.343742e-01, 4.877318e-01, 4.559451e-01, ..., 5.863490e-01,
6.861247e-01, 9.358647e-01],
[8.698458e-01, 2.888617e-01, 1.189797e-01, ..., 3.917152e-01,...
2025-04-26 23:53:45.556996 test begin: paddle.nn.functional.embedding(Tensor([13, 7],"int32"), weight=Tensor([99, 128],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.nn.functional.embedding(Tensor([13, 7],"int32"), weight=Tensor([99, 128],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 125 / 11648 (1.07%)
Max absolute difference among violations: 0.9857557
Max relative difference among violations: 1.
ACTUAL: array([[[0.126914, 0.391609, 0.307854, ..., 0.272976, 0.31425 ,
0.799017],
[0.520418, 0.60955 , 0.115824, ..., 0.629287, 0.848164,...
DESIRED: array([[[0.126914, 0.391609, 0.307854, ..., 0.272976, 0.31425 ,
0.799017],
[0.520418, 0.60955 , 0.115824, ..., 0.629287, 0.848164,...
2025-04-26 23:53:45.750228 test begin: paddle.nn.functional.embedding(Tensor([13, 7],"int32"), weight=Tensor([99, 16],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.nn.functional.embedding(Tensor([13, 7],"int32"), weight=Tensor([99, 16],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 15 / 1456 (1.03%)
Max absolute difference among violations: 0.9965675
Max relative difference among violations: 1.
ACTUAL: array([[[0.491346, 0.609374, 0.218867, ..., 0.817506, 0.726635,
0.78228 ],
[0.047579, 0.659936, 0.13377 , ..., 0.459794, 0.677337,...
DESIRED: array([[[0.491346, 0.609374, 0.218867, ..., 0.817506, 0.726635,
0.78228 ],
[0.047579, 0.659936, 0.13377 , ..., 0.459794, 0.677337,...
2025-04-26 23:53:46.714736 test begin: paddle.nn.functional.embedding(Tensor([13, 7],"int32"), weight=Tensor([99, 32],"float32"), padding_idx=3, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.nn.functional.embedding(Tensor([13, 7],"int32"), weight=Tensor([99, 32],"float32"), padding_idx=3, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 32 / 2912 (1.1%)
Max absolute difference among violations: 0.9755897
Max relative difference among violations: 1.
ACTUAL: array([[[0.390302, 0.009162, 0.222434, ..., 0.172306, 0.284359,
0.117756],
[0.37712 , 0.57488 , 0.488798, ..., 0.552611, 0.763352,...
DESIRED: array([[[0.390302, 0.009162, 0.222434, ..., 0.172306, 0.284359,
0.117756],
[0.37712 , 0.57488 , 0.488798, ..., 0.552611, 0.763352,...
2025-04-26 23:53:48.170704 test begin: paddle.nn.functional.embedding(Tensor([13, 7],"int64"), weight=Tensor([128, 32],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.nn.functional.embedding(Tensor([13, 7],"int64"), weight=Tensor([128, 32],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 32 / 2912 (1.1%)
Max absolute difference among violations: 0.9859413
Max relative difference among violations: 1.
ACTUAL: array([[[0.672057, 0.853914, 0.41375 , ..., 0.938558, 0.970912,
0.289433],
[0.214264, 0.685194, 0.917426, ..., 0.005781, 0.710222,...
DESIRED: array([[[0.672057, 0.853914, 0.41375 , ..., 0.938558, 0.970912,
0.289433],
[0.214264, 0.685194, 0.917426, ..., 0.005781, 0.710222,...
2025-04-26 23:53:51.717084 test begin: paddle.nn.functional.embedding(Tensor([13, 8],"int32"), weight=Tensor([84, 32],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.nn.functional.embedding(Tensor([13, 8],"int32"), weight=Tensor([84, 32],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 31 / 3328 (0.931%)
Max absolute difference among violations: 0.96395904
Max relative difference among violations: 1.
ACTUAL: array([[[0.69614 , 0.158591, 0.396249, ..., 0.512039, 0.648526,
0.086445],
[0.889695, 0.583925, 0.580741, ..., 0.585443, 0.981334,...
DESIRED: array([[[0.69614 , 0.158591, 0.396249, ..., 0.512039, 0.648526,
0.086445],
[0.889695, 0.583925, 0.580741, ..., 0.585443, 0.981334,...
2025-04-26 23:54:12.698535 test begin: paddle.nn.functional.embedding(Tensor([136, 30],"int64"), weight=Tensor([33712, 512],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.nn.functional.embedding(Tensor([136, 30],"int64"), weight=Tensor([33712, 512],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 507 / 2088960 (0.0243%)
Max absolute difference among violations: 0.99944115
Max relative difference among violations: 1.
ACTUAL: array([[[0.651481, 0.702555, 0.841589, ..., 0.412191, 0.308551,
0.357844],
[0.804894, 0.721753, 0.741668, ..., 0.002887, 0.867557,...
DESIRED: array([[[0.651481, 0.702555, 0.841589, ..., 0.412191, 0.308551,
0.357844],
[0.804894, 0.721753, 0.741668, ..., 0.002887, 0.867557,...
2025-04-26 23:54:45.606853 test begin: paddle.nn.functional.embedding(Tensor([144, 25],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.nn.functional.embedding(Tensor([144, 25],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1017 / 3686400 (0.0276%)
Max absolute difference among violations: 0.999876
Max relative difference among violations: 1.
ACTUAL: array([[[0.339134, 0.503604, 0.66516 , ..., 0.533407, 0.797402,
0.376591],
[0.047621, 0.246468, 0.545035, ..., 0.001638, 0.306256,...
DESIRED: array([[[0.339134, 0.503604, 0.66516 , ..., 0.533407, 0.797402,
0.376591],
[0.047621, 0.246468, 0.545035, ..., 0.001638, 0.306256,...
2025-04-26 23:54:46.554693 test begin: paddle.nn.functional.embedding(Tensor([144, 25],"int64"), weight=Tensor([33712, 512],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.nn.functional.embedding(Tensor([144, 25],"int64"), weight=Tensor([33712, 512],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 505 / 1843200 (0.0274%)
Max absolute difference among violations: 0.9993274
Max relative difference among violations: 1.
ACTUAL: array([[[0.691279, 0.611099, 0.716752, ..., 0.22578 , 0.728573,
0.736045],
[0.401699, 0.381116, 0.947918, ..., 0.274267, 0.190584,...
DESIRED: array([[[0.691279, 0.611099, 0.716752, ..., 0.22578 , 0.728573,
0.736045],
[0.401699, 0.381116, 0.947918, ..., 0.274267, 0.190584,...
2025-04-26 23:55:26.199709 test begin: paddle.nn.functional.embedding(Tensor([152, 33],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.nn.functional.embedding(Tensor([152, 33],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2038 / 5136384 (0.0397%)
Max absolute difference among violations: 0.9999301
Max relative difference among violations: 1.
ACTUAL: array([[[0.246087, 0.823008, 0.995531, ..., 0.397085, 0.951116,
0.015849],
[0.916709, 0.341667, 0.127418, ..., 0.688192, 0.957438,...
DESIRED: array([[[0.246087, 0.823008, 0.995531, ..., 0.397085, 0.951116,
0.015849],
[0.916709, 0.341667, 0.127418, ..., 0.688192, 0.957438,...
2025-04-26 23:55:35.144790 test begin: paddle.nn.functional.embedding(Tensor([16, 109],"int64"), weight=Tensor([33712, 512],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.nn.functional.embedding(Tensor([16, 109],"int64"), weight=Tensor([33712, 512],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 502 / 892928 (0.0562%)
Max absolute difference among violations: 0.99731994
Max relative difference among violations: 1.
ACTUAL: array([[[0.009301, 0.937887, 0.892535, ..., 0.445689, 0.787179,
0.668349],
[0.250517, 0.435767, 0.446256, ..., 0.075435, 0.631436,...
DESIRED: array([[[0.009301, 0.937887, 0.892535, ..., 0.445689, 0.787179,
0.668349],
[0.250517, 0.435767, 0.446256, ..., 0.075435, 0.631436,...
2025-04-26 23:55:39.375204 test begin: paddle.nn.functional.embedding(Tensor([16, 149],"int64"), weight=Tensor([33712, 512],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.nn.functional.embedding(Tensor([16, 149],"int64"), weight=Tensor([33712, 512],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 506 / 1220608 (0.0415%)
Max absolute difference among violations: 0.99985135
Max relative difference among violations: 1.
ACTUAL: array([[[0.452261, 0.92804 , 0.85967 , ..., 0.876691, 0.544874,
0.370462],
[0.748017, 0.003264, 0.741036, ..., 0.320345, 0.301194,...
DESIRED: array([[[0.452261, 0.92804 , 0.85967 , ..., 0.876691, 0.544874,
0.370462],
[0.748017, 0.003264, 0.741036, ..., 0.320345, 0.301194,...
2025-04-26 23:55:43.667773 test begin: paddle.nn.functional.embedding(Tensor([16, 173],"int64"), weight=Tensor([33712, 512],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.nn.functional.embedding(Tensor([16, 173],"int64"), weight=Tensor([33712, 512],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 506 / 1417216 (0.0357%)
Max absolute difference among violations: 0.99709374
Max relative difference among violations: 1.
ACTUAL: array([[[0.372377, 0.242131, 0.320684, ..., 0.25745 , 0.700287,
0.665828],
[0.985941, 0.963294, 0.883178, ..., 0.392369, 0.444991,...
DESIRED: array([[[0.372377, 0.242131, 0.320684, ..., 0.25745 , 0.700287,
0.665828],
[0.985941, 0.963294, 0.883178, ..., 0.392369, 0.444991,...
2025-04-26 23:55:57.016756 test begin: paddle.nn.functional.embedding(Tensor([16, 62],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.nn.functional.embedding(Tensor([16, 62],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1013 / 1015808 (0.0997%)
Max absolute difference among violations: 0.9989649
Max relative difference among violations: 1.
ACTUAL: array([[[0.810456, 0.036154, 0.568056, ..., 0.710227, 0.647724,
0.432951],
[0.773446, 0.98778 , 0.400579, ..., 0.734411, 0.995181,...
DESIRED: array([[[0.810456, 0.036154, 0.568056, ..., 0.710227, 0.647724,
0.432951],
[0.773446, 0.98778 , 0.400579, ..., 0.734411, 0.995181,...
2025-04-26 23:56:12.715817 test begin: paddle.nn.functional.embedding(Tensor([160, 24],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.nn.functional.embedding(Tensor([160, 24],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1015 / 3932160 (0.0258%)
Max absolute difference among violations: 0.99979085
Max relative difference among violations: 1.
ACTUAL: array([[[0.856571, 0.561088, 0.466917, ..., 0.033266, 0.379006,
0.199509],
[0.186751, 0.002751, 0.312365, ..., 0.458895, 0.10218 ,...
DESIRED: array([[[0.856571, 0.561088, 0.466917, ..., 0.033266, 0.379006,
0.199509],
[0.186751, 0.002751, 0.312365, ..., 0.458895, 0.10218 ,...
2025-04-26 23:56:19.201289 test begin: paddle.nn.functional.embedding(Tensor([160, 28],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.nn.functional.embedding(Tensor([160, 28],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1015 / 4587520 (0.0221%)
Max absolute difference among violations: 0.99811685
Max relative difference among violations: 1.
ACTUAL: array([[[0.153033, 0.758231, 0.223528, ..., 0.414116, 0.010764,
0.192926],
[0.855626, 0.454354, 0.22615 , ..., 0.428105, 0.945774,...
DESIRED: array([[[0.153033, 0.758231, 0.223528, ..., 0.414116, 0.010764,
0.192926],
[0.855626, 0.454354, 0.22615 , ..., 0.428105, 0.945774,...
2025-04-26 23:56:20.640394 test begin: paddle.nn.functional.embedding(Tensor([160, 29],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.nn.functional.embedding(Tensor([160, 29],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1012 / 4751360 (0.0213%)
Max absolute difference among violations: 0.9999717
Max relative difference among violations: 1.
ACTUAL: array([[[0.971733, 0.485192, 0.210739, ..., 0.121882, 0.984377,
0.497529],
[0.244042, 0.943715, 0.500235, ..., 0.362903, 0.842301,...
DESIRED: array([[[0.971733, 0.485192, 0.210739, ..., 0.121882, 0.984377,
0.497529],
[0.244042, 0.943715, 0.500235, ..., 0.362903, 0.842301,...
2025-04-26 23:56:37.345785 test begin: paddle.nn.functional.embedding(Tensor([168, 23],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.nn.functional.embedding(Tensor([168, 23],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1015 / 3956736 (0.0257%)
Max absolute difference among violations: 0.99967396
Max relative difference among violations: 1.
ACTUAL: array([[[0.192912, 0.743451, 0.484209, ..., 0.667483, 0.57509 ,
0.261606],
[0.407947, 0.958693, 0.658375, ..., 0.365295, 0.830524,...
DESIRED: array([[[0.192912, 0.743451, 0.484209, ..., 0.667483, 0.57509 ,
0.261606],
[0.407947, 0.958693, 0.658375, ..., 0.365295, 0.830524,...
2025-04-26 23:56:40.224927 test begin: paddle.nn.functional.embedding(Tensor([168, 24],"int64"), weight=Tensor([33712, 512],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.nn.functional.embedding(Tensor([168, 24],"int64"), weight=Tensor([33712, 512],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 510 / 2064384 (0.0247%)
Max absolute difference among violations: 0.99967307
Max relative difference among violations: 1.
ACTUAL: array([[[0.311033, 0.975611, 0.900944, ..., 0.771819, 0.352886,
0.851194],
[0.635068, 0.262866, 0.572486, ..., 0.696669, 0.130188,...
DESIRED: array([[[0.311033, 0.975611, 0.900944, ..., 0.771819, 0.352886,
0.851194],
[0.635068, 0.262866, 0.572486, ..., 0.696669, 0.130188,...
2025-04-26 23:56:42.330554 test begin: paddle.nn.functional.embedding(Tensor([168, 26],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.nn.functional.embedding(Tensor([168, 26],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1016 / 4472832 (0.0227%)
Max absolute difference among violations: 0.9982791
Max relative difference among violations: 1.
ACTUAL: array([[[0.573294, 0.481145, 0.32831 , ..., 0.335704, 0.045933,
0.716419],
[0.384774, 0.149923, 0.282167, ..., 0.894575, 0.719819,...
DESIRED: array([[[0.573294, 0.481145, 0.32831 , ..., 0.335704, 0.045933,
0.716419],
[0.384774, 0.149923, 0.282167, ..., 0.894575, 0.719819,...
2025-04-26 23:56:51.841596 test begin: paddle.nn.functional.embedding(Tensor([176, 16],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.nn.functional.embedding(Tensor([176, 16],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1010 / 2883584 (0.035%)
Max absolute difference among violations: 0.9981849
Max relative difference among violations: 1.
ACTUAL: array([[[0.946368, 0.074522, 0.179433, ..., 0.714265, 0.484949,
0.184613],
[0.085753, 0.484834, 0.262315, ..., 0.668126, 0.631538,...
DESIRED: array([[[0.946368, 0.074522, 0.179433, ..., 0.714265, 0.484949,
0.184613],
[0.085753, 0.484834, 0.262315, ..., 0.668126, 0.631538,...
2025-04-26 23:56:59.719469 test begin: paddle.nn.functional.embedding(Tensor([176, 21],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.nn.functional.embedding(Tensor([176, 21],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1014 / 3784704 (0.0268%)
Max absolute difference among violations: 0.9991564
Max relative difference among violations: 1.
ACTUAL: array([[[0.854802, 0.075345, 0.308247, ..., 0.830791, 0.543406,
0.229147],
[0.349695, 0.783701, 0.779603, ..., 0.393953, 0.891878,...
DESIRED: array([[[0.854802, 0.075345, 0.308247, ..., 0.830791, 0.543406,
0.229147],
[0.349695, 0.783701, 0.779603, ..., 0.393953, 0.891878,...
2025-04-26 23:57:02.667907 test begin: paddle.nn.functional.embedding(Tensor([176, 22],"int64"), weight=Tensor([33712, 512],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.nn.functional.embedding(Tensor([176, 22],"int64"), weight=Tensor([33712, 512],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 508 / 1982464 (0.0256%)
Max absolute difference among violations: 0.99756473
Max relative difference among violations: 1.
ACTUAL: array([[[0.8546  , 0.379962, 0.877975, ..., 0.929584, 0.793588,
0.555349],
[0.083191, 0.054215, 0.2165  , ..., 0.991434, 0.081726,...
DESIRED: array([[[0.8546  , 0.379962, 0.877975, ..., 0.929584, 0.793588,
0.555349],
[0.083191, 0.054215, 0.2165  , ..., 0.991434, 0.081726,...
2025-04-26 23:57:04.799413 test begin: paddle.nn.functional.embedding(Tensor([176, 23],"int64"), weight=Tensor([33712, 512],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.nn.functional.embedding(Tensor([176, 23],"int64"), weight=Tensor([33712, 512],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 507 / 2072576 (0.0245%)
Max absolute difference among violations: 0.99957454
Max relative difference among violations: 1.
ACTUAL: array([[[6.617978e-01, 7.810212e-01, 1.496794e-01, ..., 6.184449e-01,
5.710447e-01, 6.405841e-01],
[9.091551e-01, 8.249507e-01, 9.595907e-02, ..., 2.370590e-02,...
DESIRED: array([[[6.617978e-01, 7.810212e-01, 1.496794e-01, ..., 6.184449e-01,
5.710447e-01, 6.405841e-01],
[9.091551e-01, 8.249507e-01, 9.595907e-02, ..., 2.370590e-02,...
2025-04-26 23:57:09.511307 test begin: paddle.nn.functional.embedding(Tensor([176, 27],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.nn.functional.embedding(Tensor([176, 27],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1012 / 4866048 (0.0208%)
Max absolute difference among violations: 0.9995299
Max relative difference among violations: 1.
ACTUAL: array([[[0.743167, 0.185403, 0.795643, ..., 0.625748, 0.728543,
0.680609],
[0.287059, 0.611639, 0.230992, ..., 0.504013, 0.014147,...
DESIRED: array([[[0.743167, 0.185403, 0.795643, ..., 0.625748, 0.728543,
0.680609],
[0.287059, 0.611639, 0.230992, ..., 0.504013, 0.014147,...
2025-04-26 23:57:12.400125 test begin: paddle.nn.functional.embedding(Tensor([176, 29],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.nn.functional.embedding(Tensor([176, 29],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1013 / 5226496 (0.0194%)
Max absolute difference among violations: 0.99997234
Max relative difference among violations: 1.
ACTUAL: array([[[0.467786, 0.464409, 0.576947, ..., 0.972625, 0.123608,
0.499578],
[0.088624, 0.111399, 0.146204, ..., 0.174938, 0.818764,...
DESIRED: array([[[0.467786, 0.464409, 0.576947, ..., 0.972625, 0.123608,
0.499578],
[0.088624, 0.111399, 0.146204, ..., 0.174938, 0.818764,...
2025-04-26 23:57:24.843311 test begin: paddle.nn.functional.embedding(Tensor([184, 21],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.nn.functional.embedding(Tensor([184, 21],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1012 / 3956736 (0.0256%)
Max absolute difference among violations: 0.99954176
Max relative difference among violations: 1.
ACTUAL: array([[[2.159272e-01, 6.053550e-01, 4.589810e-01, ..., 3.052964e-01,
3.706427e-02, 2.728301e-01],
[6.697494e-01, 2.294616e-01, 5.758817e-01, ..., 6.157489e-01,...
DESIRED: array([[[2.159272e-01, 6.053550e-01, 4.589810e-01, ..., 3.052964e-01,
3.706427e-02, 2.728301e-01],
[6.697494e-01, 2.294616e-01, 5.758817e-01, ..., 6.157489e-01,...
2025-04-26 23:57:28.764572 test begin: paddle.nn.functional.embedding(Tensor([184, 23],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.nn.functional.embedding(Tensor([184, 23],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1013 / 4333568 (0.0234%)
Max absolute difference among violations: 0.9997141
Max relative difference among violations: 1.
ACTUAL: array([[[0.740733, 0.479197, 0.561536, ..., 0.263085, 0.167789,
0.772566],
[0.357868, 0.295272, 0.21345 , ..., 0.266812, 0.036929,...
DESIRED: array([[[0.740733, 0.479197, 0.561536, ..., 0.263085, 0.167789,
0.772566],
[0.357868, 0.295272, 0.21345 , ..., 0.266812, 0.036929,...
2025-04-26 23:57:39.218739 test begin: paddle.nn.functional.embedding(Tensor([192, 15],"int64"), weight=Tensor([33712, 512],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.nn.functional.embedding(Tensor([192, 15],"int64"), weight=Tensor([33712, 512],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 507 / 1474560 (0.0344%)
Max absolute difference among violations: 0.9949937
Max relative difference among violations: 1.
ACTUAL: array([[[0.277495, 0.881149, 0.643543, ..., 0.770784, 0.978195,
0.077966],
[0.573225, 0.247085, 0.440882, ..., 0.398035, 0.71704 ,...
DESIRED: array([[[0.277495, 0.881149, 0.643543, ..., 0.770784, 0.978195,
0.077966],
[0.573225, 0.247085, 0.440882, ..., 0.398035, 0.71704 ,...
2025-04-26 23:57:49.613058 test begin: paddle.nn.functional.embedding(Tensor([192, 22],"int64"), weight=Tensor([6629, 384],"float16"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.nn.functional.embedding(Tensor([192, 22],"int64"), weight=Tensor([6629, 384],"float16"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 379 / 1622016 (0.0234%)
Max absolute difference among violations: 0.995
Max relative difference among violations: 1.
ACTUAL: array([[[0.1401 , 0.5327 , 0.0325 , ..., 0.129  , 0.2096 , 0.787  ],
[0.7715 , 0.9336 , 0.422  , ..., 0.6157 , 0.2396 , 0.6313 ],
[0.7896 , 0.9766 , 0.5522 , ..., 0.9927 , 0.556  , 0.359  ],...
DESIRED: array([[[0.1401 , 0.5327 , 0.0325 , ..., 0.129  , 0.2096 , 0.787  ],
[0.7715 , 0.9336 , 0.422  , ..., 0.6157 , 0.2396 , 0.6313 ],
[0.7896 , 0.9766 , 0.5522 , ..., 0.9927 , 0.556  , 0.359  ],...
2025-04-26 23:59:00.611541 test begin: paddle.nn.functional.embedding(Tensor([2, 4],"int64"), Tensor([10, 4],"float32"), padding_idx=2, scale_grad_by_freq=False, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.nn.functional.embedding(Tensor([2, 4],"int64"), Tensor([10, 4],"float32"), padding_idx=2, scale_grad_by_freq=False, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 4 / 32 (12.5%)
Max absolute difference among violations: 0.9327156
Max relative difference among violations: 1.
ACTUAL: array([[[0.596128, 0.613557, 0.684284, 0.788186],
[0.53548 , 0.281176, 0.994701, 0.34367 ],
[0.049806, 0.079219, 0.291397, 0.085369],...
DESIRED: array([[[0.596128, 0.613557, 0.684284, 0.788186],
[0.53548 , 0.281176, 0.994701, 0.34367 ],
[0.049806, 0.079219, 0.291397, 0.085369],...
2025-04-26 23:59:00.792684 test begin: paddle.nn.functional.embedding(Tensor([2, 4],"int64"), Tensor([10, 4],"float32"), padding_idx=2, scale_grad_by_freq=True, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.nn.functional.embedding(Tensor([2, 4],"int64"), Tensor([10, 4],"float32"), padding_idx=2, scale_grad_by_freq=True, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 8 / 32 (25%)
Max absolute difference among violations: 0.48819122
Max relative difference among violations: 1.
ACTUAL: array([[[0.      , 0.      , 0.      , 0.      ],
[0.432523, 0.494093, 0.63887 , 0.723288],
[0.301828, 0.771537, 0.965272, 0.588479],...
DESIRED: array([[[0.488191, 0.451937, 0.349654, 0.331218],
[0.432523, 0.494093, 0.63887 , 0.723288],
[0.301828, 0.771537, 0.965272, 0.588479],...
2025-04-26 23:59:42.232593 test begin: paddle.nn.functional.embedding(Tensor([200, 20],"int64"), weight=Tensor([33712, 512],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.nn.functional.embedding(Tensor([200, 20],"int64"), weight=Tensor([33712, 512],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 509 / 2048000 (0.0249%)
Max absolute difference among violations: 0.9998443
Max relative difference among violations: 1.
ACTUAL: array([[[0.429139, 0.634092, 0.250271, ..., 0.623181, 0.291507,
0.587265],
[0.034574, 0.300189, 0.008706, ..., 0.85578 , 0.931843,...
DESIRED: array([[[0.429139, 0.634092, 0.250271, ..., 0.623181, 0.291507,
0.587265],
[0.034574, 0.300189, 0.008706, ..., 0.85578 , 0.931843,...
2025-04-26 23:59:57.330901 test begin: paddle.nn.functional.embedding(Tensor([208, 18],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.nn.functional.embedding(Tensor([208, 18],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1008 / 3833856 (0.0263%)
Max absolute difference among violations: 0.99995536
Max relative difference among violations: 1.
ACTUAL: array([[[0.008553, 0.715815, 0.132072, ..., 0.784129, 0.522274,
0.531151],
[0.958076, 0.475299, 0.664248, ..., 0.366289, 0.561079,...
DESIRED: array([[[0.008553, 0.715815, 0.132072, ..., 0.784129, 0.522274,
0.531151],
[0.958076, 0.475299, 0.664248, ..., 0.366289, 0.561079,...
2025-04-27 00:00:24.335918 test begin: paddle.nn.functional.embedding(Tensor([224, 14],"int64"), weight=Tensor([33712, 512],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.nn.functional.embedding(Tensor([224, 14],"int64"), weight=Tensor([33712, 512],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 504 / 1605632 (0.0314%)
Max absolute difference among violations: 0.99930483
Max relative difference among violations: 1.
ACTUAL: array([[[1.276320e-02, 8.298149e-01, 1.730825e-01, ..., 7.345409e-01,
8.102190e-02, 1.592899e-01],
[6.524920e-01, 5.961697e-01, 7.842149e-01, ..., 9.468279e-01,...
DESIRED: array([[[1.276320e-02, 8.298149e-01, 1.730825e-01, ..., 7.345409e-01,
8.102190e-02, 1.592899e-01],
[6.524920e-01, 5.961697e-01, 7.842149e-01, ..., 9.468279e-01,...
2025-04-27 00:00:43.881068 test begin: paddle.nn.functional.embedding(Tensor([24, 104],"int64"), weight=Tensor([33712, 512],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.nn.functional.embedding(Tensor([24, 104],"int64"), weight=Tensor([33712, 512],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 510 / 1277952 (0.0399%)
Max absolute difference among violations: 0.9985137
Max relative difference among violations: 1.
ACTUAL: array([[[0.834645, 0.664748, 0.935509, ..., 0.572794, 0.872974,
0.359492],
[0.779307, 0.23258 , 0.488485, ..., 0.373368, 0.522237,...
DESIRED: array([[[0.834645, 0.664748, 0.935509, ..., 0.572794, 0.872974,
0.359492],
[0.779307, 0.23258 , 0.488485, ..., 0.373368, 0.522237,...
2025-04-27 00:01:05.300190 test begin: paddle.nn.functional.embedding(Tensor([24, 132],"int64"), weight=Tensor([33712, 512],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.nn.functional.embedding(Tensor([24, 132],"int64"), weight=Tensor([33712, 512],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 506 / 1622016 (0.0312%)
Max absolute difference among violations: 0.9967786
Max relative difference among violations: 1.
ACTUAL: array([[[0.147418, 0.340826, 0.793957, ..., 0.931794, 0.195881,
0.847185],
[0.942464, 0.557511, 0.074207, ..., 0.079217, 0.457807,...
DESIRED: array([[[0.147418, 0.340826, 0.793957, ..., 0.931794, 0.195881,
0.847185],
[0.942464, 0.557511, 0.074207, ..., 0.079217, 0.457807,...
2025-04-27 00:01:08.371871 test begin: paddle.nn.functional.embedding(Tensor([24, 137],"int64"), weight=Tensor([33712, 512],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.nn.functional.embedding(Tensor([24, 137],"int64"), weight=Tensor([33712, 512],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 505 / 1683456 (0.03%)
Max absolute difference among violations: 0.99867356
Max relative difference among violations: 1.
ACTUAL: array([[[6.716180e-01, 9.137917e-01, 8.360735e-01, ..., 2.029623e-01,
4.900628e-01, 6.744091e-01],
[8.113346e-01, 4.291154e-01, 4.940139e-01, ..., 7.896430e-01,...
DESIRED: array([[[6.716180e-01, 9.137917e-01, 8.360735e-01, ..., 2.029623e-01,
4.900628e-01, 6.744091e-01],
[8.113346e-01, 4.291154e-01, 4.940139e-01, ..., 7.896430e-01,...
2025-04-27 00:01:09.151955 test begin: paddle.nn.functional.embedding(Tensor([24, 139],"int64"), weight=Tensor([33712, 512],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.nn.functional.embedding(Tensor([24, 139],"int64"), weight=Tensor([33712, 512],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 508 / 1708032 (0.0297%)
Max absolute difference among violations: 0.9970084
Max relative difference among violations: 1.
ACTUAL: array([[[0.127449, 0.716794, 0.516254, ..., 0.248417, 0.912792,
0.089297],
[0.356914, 0.206688, 0.821357, ..., 0.041328, 0.640507,...
DESIRED: array([[[0.127449, 0.716794, 0.516254, ..., 0.248417, 0.912792,
0.089297],
[0.356914, 0.206688, 0.821357, ..., 0.041328, 0.640507,...
2025-04-27 00:01:16.437008 test begin: paddle.nn.functional.embedding(Tensor([24, 149],"int64"), weight=Tensor([33712, 512],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.nn.functional.embedding(Tensor([24, 149],"int64"), weight=Tensor([33712, 512],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 509 / 1830912 (0.0278%)
Max absolute difference among violations: 0.99874043
Max relative difference among violations: 1.
ACTUAL: array([[[0.061643, 0.53845 , 0.038665, ..., 0.699191, 0.108191,
0.920907],
[0.568475, 0.475141, 0.691935, ..., 0.701261, 0.010212,...
DESIRED: array([[[0.061643, 0.53845 , 0.038665, ..., 0.699191, 0.108191,
0.920907],
[0.568475, 0.475141, 0.691935, ..., 0.701261, 0.010212,...
2025-04-27 00:01:22.711451 test begin: paddle.nn.functional.embedding(Tensor([24, 160],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.nn.functional.embedding(Tensor([24, 160],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1014 / 3932160 (0.0258%)
Max absolute difference among violations: 0.99992365
Max relative difference among violations: 1.
ACTUAL: array([[[0.48371 , 0.075778, 0.372336, ..., 0.289713, 0.244061,
0.306283],
[0.61332 , 0.476622, 0.305079, ..., 0.786189, 0.019544,...
DESIRED: array([[[0.48371 , 0.075778, 0.372336, ..., 0.289713, 0.244061,
0.306283],
[0.61332 , 0.476622, 0.305079, ..., 0.786189, 0.019544,...
2025-04-27 00:01:30.687570 test begin: paddle.nn.functional.embedding(Tensor([24, 174],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.nn.functional.embedding(Tensor([24, 174],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1018 / 4276224 (0.0238%)
Max absolute difference among violations: 0.99906784
Max relative difference among violations: 1.
ACTUAL: array([[[0.395194, 0.055213, 0.535213, ..., 0.239975, 0.197435,
0.381843],
[0.766895, 0.385681, 0.945599, ..., 0.969444, 0.206228,...
DESIRED: array([[[0.395194, 0.055213, 0.535213, ..., 0.239975, 0.197435,
0.381843],
[0.766895, 0.385681, 0.945599, ..., 0.969444, 0.206228,...
2025-04-27 00:01:55.658989 test begin: paddle.nn.functional.embedding(Tensor([240, 14],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.nn.functional.embedding(Tensor([240, 14],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1017 / 3440640 (0.0296%)
Max absolute difference among violations: 0.9981868
Max relative difference among violations: 1.
ACTUAL: array([[[4.435532e-01, 7.681682e-01, 5.176981e-01, ..., 4.198998e-02,
1.816613e-01, 2.869995e-02],
[4.853419e-01, 8.695151e-01, 1.312522e-01, ..., 7.912961e-01,...
DESIRED: array([[[4.435532e-01, 7.681682e-01, 5.176981e-01, ..., 4.198998e-02,
1.816613e-01, 2.869995e-02],
[4.853419e-01, 8.695151e-01, 1.312522e-01, ..., 7.912961e-01,...
2025-04-27 00:02:10.834545 test begin: paddle.nn.functional.embedding(Tensor([240, 9],"int64"), weight=Tensor([33712, 512],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.nn.functional.embedding(Tensor([240, 9],"int64"), weight=Tensor([33712, 512],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 498 / 1105920 (0.045%)
Max absolute difference among violations: 0.9997811
Max relative difference among violations: 1.
ACTUAL: array([[[5.716161e-01, 3.794149e-01, 9.071626e-01, ..., 1.208594e-01,
2.147585e-02, 2.122050e-02],
[9.109752e-01, 2.569220e-01, 6.974880e-01, ..., 9.151434e-01,...
DESIRED: array([[[5.716161e-01, 3.794149e-01, 9.071626e-01, ..., 1.208594e-01,
2.147585e-02, 2.122050e-02],
[9.109752e-01, 2.569220e-01, 6.974880e-01, ..., 9.151434e-01,...
2025-04-27 00:02:17.758587 test begin: paddle.nn.functional.embedding(Tensor([256, 15],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.nn.functional.embedding(Tensor([256, 15],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1013 / 3932160 (0.0258%)
Max absolute difference among violations: 0.99975425
Max relative difference among violations: 1.
ACTUAL: array([[[0.908291, 0.599747, 0.15883 , ..., 0.561315, 0.197738,
0.543149],
[0.160652, 0.219819, 0.012789, ..., 0.320677, 0.701208,...
DESIRED: array([[[0.908291, 0.599747, 0.15883 , ..., 0.561315, 0.197738,
0.543149],
[0.160652, 0.219819, 0.012789, ..., 0.320677, 0.701208,...
2025-04-27 00:02:29.865754 test begin: paddle.nn.functional.embedding(Tensor([264, 12],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.nn.functional.embedding(Tensor([264, 12],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1011 / 3244032 (0.0312%)
Max absolute difference among violations: 0.9998083
Max relative difference among violations: 1.
ACTUAL: array([[[0.698151, 0.089788, 0.480528, ..., 0.659692, 0.17419 ,
0.417063],
[0.479923, 0.881325, 0.47024 , ..., 0.922087, 0.640388,...
DESIRED: array([[[0.698151, 0.089788, 0.480528, ..., 0.659692, 0.17419 ,
0.417063],
[0.479923, 0.881325, 0.47024 , ..., 0.922087, 0.640388,...
2025-04-27 00:02:42.001916 test begin: paddle.nn.functional.embedding(Tensor([272, 11],"int64"), weight=Tensor([33712, 512],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.nn.functional.embedding(Tensor([272, 11],"int64"), weight=Tensor([33712, 512],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 511 / 1531904 (0.0334%)
Max absolute difference among violations: 0.9996675
Max relative difference among violations: 1.
ACTUAL: array([[[8.576530e-01, 8.008979e-01, 2.298282e-01, ..., 8.034117e-01,
4.054390e-02, 1.429255e-01],
[2.890769e-01, 5.654342e-01, 4.508799e-01, ..., 3.335510e-01,...
DESIRED: array([[[8.576530e-01, 8.008979e-01, 2.298282e-01, ..., 8.034117e-01,
4.054390e-02, 1.429255e-01],
[2.890769e-01, 5.654342e-01, 4.508799e-01, ..., 3.335510e-01,...
2025-04-27 00:03:05.352084 test begin: paddle.nn.functional.embedding(Tensor([296, 14],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.nn.functional.embedding(Tensor([296, 14],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1014 / 4243456 (0.0239%)
Max absolute difference among violations: 0.99960333
Max relative difference among violations: 1.
ACTUAL: array([[[0.265309, 0.845387, 0.957425, ..., 0.245236, 0.82874 ,
0.756747],
[0.550891, 0.848244, 0.336194, ..., 0.530565, 0.357689,...
DESIRED: array([[[0.265309, 0.845387, 0.957425, ..., 0.245236, 0.82874 ,
0.756747],
[0.550891, 0.848244, 0.336194, ..., 0.530565, 0.357689,...
2025-04-27 00:03:27.744694 test begin: paddle.nn.functional.embedding(Tensor([3, 1],"int64"), weight=Tensor([10, 3],"float32"), padding_idx=9, max_norm=0.5, norm_type=3.0, sparse=True, scale_grad_by_freq=False, name=None, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.nn.functional.embedding(Tensor([3, 1],"int64"), weight=Tensor([10, 3],"float32"), padding_idx=9, max_norm=0.5, norm_type=3.0, sparse=True, scale_grad_by_freq=False, name=None, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 3 / 9 (33.3%)
Max absolute difference among violations: 0.45701748
Max relative difference among violations: 1.
ACTUAL: array([[[0.      , 0.      , 0.      ]],
[[0.173006, 0.183375, 0.484392]],...
DESIRED: array([[[0.182872, 0.286146, 0.457017]],
[[0.173006, 0.183375, 0.484392]],...
2025-04-27 00:03:27.960830 test begin: paddle.nn.functional.embedding(Tensor([3, 1],"int64"), weight=Tensor([10, 3],"float32"), padding_idx=9, max_norm=None, norm_type=2.0, sparse=True, scale_grad_by_freq=False, name=None, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.nn.functional.embedding(Tensor([3, 1],"int64"), weight=Tensor([10, 3],"float32"), padding_idx=9, max_norm=None, norm_type=2.0, sparse=True, scale_grad_by_freq=False, name=None, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 3 / 9 (33.3%)
Max absolute difference among violations: 0.9120871
Max relative difference among violations: 1.
ACTUAL: array([[[0.774997, 0.46424 , 0.106239]],
[[0.456438, 0.017718, 0.647254]],...
DESIRED: array([[[0.774997, 0.46424 , 0.106239]],
[[0.456438, 0.017718, 0.647254]],...
2025-04-27 00:03:35.323792 test begin: paddle.nn.functional.embedding(Tensor([3, 4],"int64"), Tensor([10, 4],"float64"), padding_idx=-4, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.nn.functional.embedding(Tensor([3, 4],"int64"), Tensor([10, 4],"float64"), padding_idx=-4, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 4 / 48 (8.33%)
Max absolute difference among violations: 0.9906167
Max relative difference among violations: 1.
ACTUAL: array([[[0.976484, 0.954864, 0.70475 , 0.805641],
[0.539811, 0.220032, 0.366301, 0.111034],
[0.14073 , 0.093208, 0.750444, 0.300118],...
DESIRED: array([[[0.976484, 0.954864, 0.70475 , 0.805641],
[0.539811, 0.220032, 0.366301, 0.111034],
[0.14073 , 0.093208, 0.750444, 0.300118],...
2025-04-27 00:03:35.517909 test begin: paddle.nn.functional.embedding(Tensor([3, 4],"int64"), Tensor([10, 4],"float64"), padding_idx=9, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.nn.functional.embedding(Tensor([3, 4],"int64"), Tensor([10, 4],"float64"), padding_idx=9, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 4 / 48 (8.33%)
Max absolute difference among violations: 0.68978046
Max relative difference among violations: 1.
ACTUAL: array([[[0.227584, 0.545661, 0.933892, 0.307698],
[0.578083, 0.962439, 0.891886, 0.719864],
[0.547778, 0.548165, 0.815409, 0.017378],...
DESIRED: array([[[0.227584, 0.545661, 0.933892, 0.307698],
[0.578083, 0.962439, 0.891886, 0.719864],
[0.547778, 0.548165, 0.815409, 0.017378],...
2025-04-27 00:04:37.375411 test begin: paddle.nn.functional.embedding(Tensor([32, 100],"int64"), weight=Tensor([33712, 512],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.nn.functional.embedding(Tensor([32, 100],"int64"), weight=Tensor([33712, 512],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 504 / 1638400 (0.0308%)
Max absolute difference among violations: 0.999874
Max relative difference among violations: 1.
ACTUAL: array([[[0.678627, 0.074226, 0.930395, ..., 0.252146, 0.518735,
0.23324 ],
[0.157727, 0.232255, 0.920447, ..., 0.16178 , 0.479648,...
DESIRED: array([[[0.678627, 0.074226, 0.930395, ..., 0.252146, 0.518735,
0.23324 ],
[0.157727, 0.232255, 0.920447, ..., 0.16178 , 0.479648,...
2025-04-27 00:04:38.534302 test begin: paddle.nn.functional.embedding(Tensor([32, 101],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.nn.functional.embedding(Tensor([32, 101],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1015 / 3309568 (0.0307%)
Max absolute difference among violations: 0.99823743
Max relative difference among violations: 1.
ACTUAL: array([[[0.191719, 0.293209, 0.586552, ..., 0.881998, 0.111231,
0.90083 ],
[0.836244, 0.964943, 0.868773, ..., 0.940416, 0.432307,...
DESIRED: array([[[0.191719, 0.293209, 0.586552, ..., 0.881998, 0.111231,
0.90083 ],
[0.836244, 0.964943, 0.868773, ..., 0.940416, 0.432307,...
2025-04-27 00:04:54.251709 test begin: paddle.nn.functional.embedding(Tensor([32, 110],"int64"), weight=Tensor([33712, 512],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.nn.functional.embedding(Tensor([32, 110],"int64"), weight=Tensor([33712, 512],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 502 / 1802240 (0.0279%)
Max absolute difference among violations: 0.9928907
Max relative difference among violations: 1.
ACTUAL: array([[[0.541138, 0.318078, 0.51715 , ..., 0.392268, 0.754429,
0.139677],
[0.708734, 0.987683, 0.649065, ..., 0.501141, 0.006079,...
DESIRED: array([[[0.541138, 0.318078, 0.51715 , ..., 0.392268, 0.754429,
0.139677],
[0.708734, 0.987683, 0.649065, ..., 0.501141, 0.006079,...
2025-04-27 00:05:06.775958 test begin: paddle.nn.functional.embedding(Tensor([32, 117],"int64"), weight=Tensor([33712, 512],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.nn.functional.embedding(Tensor([32, 117],"int64"), weight=Tensor([33712, 512],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 507 / 1916928 (0.0264%)
Max absolute difference among violations: 0.995962
Max relative difference among violations: 1.
ACTUAL: array([[[0.433646, 0.026782, 0.601618, ..., 0.722675, 0.522706,
0.823138],
[0.248119, 0.912174, 0.489961, ..., 0.24713 , 0.049687,...
DESIRED: array([[[0.433646, 0.026782, 0.601618, ..., 0.722675, 0.522706,
0.823138],
[0.248119, 0.912174, 0.489961, ..., 0.24713 , 0.049687,...
2025-04-27 00:05:26.778207 test begin: paddle.nn.functional.embedding(Tensor([32, 131],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.nn.functional.embedding(Tensor([32, 131],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1015 / 4292608 (0.0236%)
Max absolute difference among violations: 0.9996879
Max relative difference among violations: 1.
ACTUAL: array([[[3.674863e-01, 2.439779e-01, 1.688286e-01, ..., 2.924185e-01,
1.122187e-01, 9.809018e-01],
[7.596333e-01, 6.136165e-01, 3.676386e-01, ..., 7.599619e-01,...
DESIRED: array([[[3.674863e-01, 2.439779e-01, 1.688286e-01, ..., 2.924185e-01,
1.122187e-01, 9.809018e-01],
[7.596333e-01, 6.136165e-01, 3.676386e-01, ..., 7.599619e-01,...
2025-04-27 00:05:28.150296 test begin: paddle.nn.functional.embedding(Tensor([32, 132],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.nn.functional.embedding(Tensor([32, 132],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1011 / 4325376 (0.0234%)
Max absolute difference among violations: 0.99947405
Max relative difference among violations: 1.
ACTUAL: array([[[0.387267, 0.494071, 0.443618, ..., 0.485779, 0.690319,
0.880464],
[0.651875, 0.170058, 0.188937, ..., 0.22543 , 0.683221,...
DESIRED: array([[[0.387267, 0.494071, 0.443618, ..., 0.485779, 0.690319,
0.880464],
[0.651875, 0.170058, 0.188937, ..., 0.22543 , 0.683221,...
2025-04-27 00:05:42.583715 test begin: paddle.nn.functional.embedding(Tensor([32, 150],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.nn.functional.embedding(Tensor([32, 150],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1014 / 4915200 (0.0206%)
Max absolute difference among violations: 0.9997486
Max relative difference among violations: 1.
ACTUAL: array([[[0.767156, 0.174952, 0.361335, ..., 0.92047 , 0.751607,
0.969178],
[0.577172, 0.325835, 0.550361, ..., 0.800699, 0.594825,...
DESIRED: array([[[0.767156, 0.174952, 0.361335, ..., 0.92047 , 0.751607,
0.969178],
[0.577172, 0.325835, 0.550361, ..., 0.800699, 0.594825,...
2025-04-27 00:05:46.511445 test begin: paddle.nn.functional.embedding(Tensor([32, 154],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.nn.functional.embedding(Tensor([32, 154],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1016 / 5046272 (0.0201%)
Max absolute difference among violations: 0.9999537
Max relative difference among violations: 1.
ACTUAL: array([[[0.213291, 0.00259 , 0.381636, ..., 0.06782 , 0.659815,
0.964389],
[0.967775, 0.381414, 0.679569, ..., 0.8914  , 0.415926,...
DESIRED: array([[[0.213291, 0.00259 , 0.381636, ..., 0.06782 , 0.659815,
0.964389],
[0.967775, 0.381414, 0.679569, ..., 0.8914  , 0.415926,...
2025-04-27 00:05:50.584154 test begin: paddle.nn.functional.embedding(Tensor([32, 159],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.nn.functional.embedding(Tensor([32, 159],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1017 / 5210112 (0.0195%)
Max absolute difference among violations: 0.99815404
Max relative difference among violations: 1.
ACTUAL: array([[[0.262631, 0.201066, 0.860383, ..., 0.381282, 0.960315,
0.850081],
[0.269178, 0.593508, 0.565638, ..., 0.997375, 0.86134 ,...
DESIRED: array([[[0.262631, 0.201066, 0.860383, ..., 0.381282, 0.960315,
0.850081],
[0.269178, 0.593508, 0.565638, ..., 0.997375, 0.86134 ,...
2025-04-27 00:06:09.916693 test begin: paddle.nn.functional.embedding(Tensor([32, 512],"int64"), weight=Tensor([40000, 768],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.nn.functional.embedding(Tensor([32, 512],"int64"), weight=Tensor([40000, 768],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 755 / 12582912 (0.006%)
Max absolute difference among violations: 0.9988126
Max relative difference among violations: 1.
ACTUAL: array([[[2.657812e-01, 4.183890e-01, 8.855063e-01, ..., 7.632821e-01,
9.891747e-01, 1.947751e-01],
[4.738602e-01, 8.299746e-02, 5.871941e-01, ..., 1.546147e-02,...
DESIRED: array([[[2.657812e-01, 4.183890e-01, 8.855063e-01, ..., 7.632821e-01,
9.891747e-01, 1.947751e-01],
[4.738602e-01, 8.299746e-02, 5.871941e-01, ..., 1.546147e-02,...
2025-04-27 00:06:23.530453 test begin: paddle.nn.functional.embedding(Tensor([32, 71],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.nn.functional.embedding(Tensor([32, 71],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1013 / 2326528 (0.0435%)
Max absolute difference among violations: 0.9989448
Max relative difference among violations: 1.
ACTUAL: array([[[8.238289e-01, 4.308950e-01, 1.876877e-01, ..., 2.923694e-01,
8.102000e-01, 7.381668e-01],
[5.284271e-01, 8.680965e-03, 9.518154e-01, ..., 1.383964e-02,...
DESIRED: array([[[8.238289e-01, 4.308950e-01, 1.876877e-01, ..., 2.923694e-01,
8.102000e-01, 7.381668e-01],
[5.284271e-01, 8.680965e-03, 9.518154e-01, ..., 1.383964e-02,...
2025-04-27 00:06:26.713607 test begin: paddle.nn.functional.embedding(Tensor([32, 74],"int64"), weight=Tensor([33712, 512],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.nn.functional.embedding(Tensor([32, 74],"int64"), weight=Tensor([33712, 512],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 508 / 1212416 (0.0419%)
Max absolute difference among violations: 0.9936356
Max relative difference among violations: 1.
ACTUAL: array([[[0.212386, 0.740241, 0.187566, ..., 0.956753, 0.699375,
0.766537],
[0.464005, 0.057134, 0.780814, ..., 0.930024, 0.737859,...
DESIRED: array([[[0.212386, 0.740241, 0.187566, ..., 0.956753, 0.699375,
0.766537],
[0.464005, 0.057134, 0.780814, ..., 0.930024, 0.737859,...
2025-04-27 00:06:32.177929 test begin: paddle.nn.functional.embedding(Tensor([32, 80],"int64"), weight=Tensor([33712, 512],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.nn.functional.embedding(Tensor([32, 80],"int64"), weight=Tensor([33712, 512],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 508 / 1310720 (0.0388%)
Max absolute difference among violations: 0.9999627
Max relative difference among violations: 1.
ACTUAL: array([[[0.378788, 0.778696, 0.404176, ..., 0.876956, 0.470862,
0.142917],
[0.133158, 0.433209, 0.09465 , ..., 0.532216, 0.389685,...
DESIRED: array([[[0.378788, 0.778696, 0.404176, ..., 0.876956, 0.470862,
0.142917],
[0.133158, 0.433209, 0.09465 , ..., 0.532216, 0.389685,...
2025-04-27 00:06:35.446598 test begin: paddle.nn.functional.embedding(Tensor([32, 83],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.nn.functional.embedding(Tensor([32, 83],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1007 / 2719744 (0.037%)
Max absolute difference among violations: 0.99965966
Max relative difference among violations: 1.
ACTUAL: array([[[0.588642, 0.861588, 0.153908, ..., 0.933689, 0.413842,
0.358536],
[0.899744, 0.733187, 0.783129, ..., 0.190619, 0.720533,...
DESIRED: array([[[0.588642, 0.861588, 0.153908, ..., 0.933689, 0.413842,
0.358536],
[0.899744, 0.733187, 0.783129, ..., 0.190619, 0.720533,...
2025-04-27 00:06:43.063866 test begin: paddle.nn.functional.embedding(Tensor([32, 89],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.nn.functional.embedding(Tensor([32, 89],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1012 / 2916352 (0.0347%)
Max absolute difference among violations: 0.9992417
Max relative difference among violations: 1.
ACTUAL: array([[[0.528987, 0.197308, 0.109372, ..., 0.232935, 0.528035,
0.314852],
[0.500616, 0.020844, 0.325156, ..., 0.203792, 0.121547,...
DESIRED: array([[[0.528987, 0.197308, 0.109372, ..., 0.232935, 0.528035,
0.314852],
[0.500616, 0.020844, 0.325156, ..., 0.203792, 0.121547,...
2025-04-27 00:06:44.660416 test begin: paddle.nn.functional.embedding(Tensor([32, 90],"int64"), weight=Tensor([33712, 512],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.nn.functional.embedding(Tensor([32, 90],"int64"), weight=Tensor([33712, 512],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 506 / 1474560 (0.0343%)
Max absolute difference among violations: 0.9958362
Max relative difference among violations: 1.
ACTUAL: array([[[0.248695, 0.400009, 0.72173 , ..., 0.529287, 0.315782,
0.438778],
[0.97899 , 0.740393, 0.756023, ..., 0.347834, 0.221167,...
DESIRED: array([[[0.248695, 0.400009, 0.72173 , ..., 0.529287, 0.315782,
0.438778],
[0.97899 , 0.740393, 0.756023, ..., 0.347834, 0.221167,...
2025-04-27 00:06:49.631434 test begin: paddle.nn.functional.embedding(Tensor([32, 93],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.nn.functional.embedding(Tensor([32, 93],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1015 / 3047424 (0.0333%)
Max absolute difference among violations: 0.9990997
Max relative difference among violations: 1.
ACTUAL: array([[[0.236775, 0.95345 , 0.629547, ..., 0.105014, 0.283296,
0.188097],
[0.04086 , 0.807535, 0.440575, ..., 0.713339, 0.343225,...
DESIRED: array([[[0.236775, 0.95345 , 0.629547, ..., 0.105014, 0.283296,
0.188097],
[0.04086 , 0.807535, 0.440575, ..., 0.713339, 0.343225,...
2025-04-27 00:06:52.391874 test begin: paddle.nn.functional.embedding(Tensor([32, 95],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.nn.functional.embedding(Tensor([32, 95],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1017 / 3112960 (0.0327%)
Max absolute difference among violations: 0.99956626
Max relative difference among violations: 1.
ACTUAL: array([[[0.62388 , 0.578391, 0.222641, ..., 0.665809, 0.573601,
0.872209],
[0.708247, 0.076197, 0.833394, ..., 0.921144, 0.596426,...
DESIRED: array([[[0.62388 , 0.578391, 0.222641, ..., 0.665809, 0.573601,
0.872209],
[0.708247, 0.076197, 0.833394, ..., 0.921144, 0.596426,...
2025-04-27 00:07:08.101232 test begin: paddle.nn.functional.embedding(Tensor([336, 10],"int64"), weight=Tensor([33712, 512],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.nn.functional.embedding(Tensor([336, 10],"int64"), weight=Tensor([33712, 512],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 507 / 1720320 (0.0295%)
Max absolute difference among violations: 0.99799544
Max relative difference among violations: 1.
ACTUAL: array([[[0.838835, 0.858023, 0.681831, ..., 0.416855, 0.048926,
0.633959],
[0.403616, 0.66614 , 0.449666, ..., 0.023592, 0.653187,...
DESIRED: array([[[0.838835, 0.858023, 0.681831, ..., 0.416855, 0.048926,
0.633959],
[0.403616, 0.66614 , 0.449666, ..., 0.023592, 0.653187,...
2025-04-27 00:07:20.541504 test begin: paddle.nn.functional.embedding(Tensor([352, 11],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.nn.functional.embedding(Tensor([352, 11],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1012 / 3964928 (0.0255%)
Max absolute difference among violations: 0.9993372
Max relative difference among violations: 1.
ACTUAL: array([[[0.964377, 0.549292, 0.673386, ..., 0.100127, 0.953888,
0.362738],
[0.704294, 0.618955, 0.462637, ..., 0.331133, 0.614594,...
DESIRED: array([[[0.964377, 0.549292, 0.673386, ..., 0.100127, 0.953888,
0.362738],
[0.704294, 0.618955, 0.462637, ..., 0.331133, 0.614594,...
2025-04-27 00:07:27.079352 test begin: paddle.nn.functional.embedding(Tensor([360, 12],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.nn.functional.embedding(Tensor([360, 12],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1004 / 4423680 (0.0227%)
Max absolute difference among violations: 0.99889326
Max relative difference among violations: 1.
ACTUAL: array([[[8.612248e-01, 5.941999e-01, 9.886237e-01, ..., 9.405929e-01,
8.654469e-01, 3.805555e-01],
[1.906578e-02, 5.736474e-01, 3.197528e-01, ..., 2.373488e-01,...
DESIRED: array([[[8.612248e-01, 5.941999e-01, 9.886237e-01, ..., 9.405929e-01,
8.654469e-01, 3.805555e-01],
[1.906578e-02, 5.736474e-01, 3.197528e-01, ..., 2.373488e-01,...
2025-04-27 00:07:28.432829 test begin: paddle.nn.functional.embedding(Tensor([360, 13],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.nn.functional.embedding(Tensor([360, 13],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1013 / 4792320 (0.0211%)
Max absolute difference among violations: 0.99812776
Max relative difference among violations: 1.
ACTUAL: array([[[0.911175, 0.087478, 0.823571, ..., 0.555099, 0.024876,
0.907788],
[0.124308, 0.082376, 0.544869, ..., 0.814222, 0.871771,...
DESIRED: array([[[0.911175, 0.087478, 0.823571, ..., 0.555099, 0.024876,
0.907788],
[0.124308, 0.082376, 0.544869, ..., 0.814222, 0.871771,...
2025-04-27 00:07:38.240546 test begin: paddle.nn.functional.embedding(Tensor([39, 7],"int32"), weight=Tensor([99, 32],"float32"), padding_idx=3, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.nn.functional.embedding(Tensor([39, 7],"int32"), weight=Tensor([99, 32],"float32"), padding_idx=3, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 160 / 8736 (1.83%)
Max absolute difference among violations: 0.948068
Max relative difference among violations: 1.
ACTUAL: array([[[0.909412, 0.308805, 0.568056, ..., 0.954225, 0.124113,
0.262701],
[0.795776, 0.432245, 0.56011 , ..., 0.227399, 0.435724,...
DESIRED: array([[[0.909412, 0.308805, 0.568056, ..., 0.954225, 0.124113,
0.262701],
[0.795776, 0.432245, 0.56011 , ..., 0.227399, 0.435724,...
2025-04-27 00:08:57.369171 test begin: paddle.nn.functional.embedding(Tensor([40, 108],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.nn.functional.embedding(Tensor([40, 108],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1020 / 4423680 (0.0231%)
Max absolute difference among violations: 0.9991038
Max relative difference among violations: 1.
ACTUAL: array([[[0.994471, 0.877158, 0.580001, ..., 0.456647, 0.507544,
0.160604],
[0.163832, 0.656572, 0.177013, ..., 0.147168, 0.935828,...
DESIRED: array([[[0.994471, 0.877158, 0.580001, ..., 0.456647, 0.507544,
0.160604],
[0.163832, 0.656572, 0.177013, ..., 0.147168, 0.935828,...
2025-04-27 00:09:04.219649 test begin: paddle.nn.functional.embedding(Tensor([40, 115],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.nn.functional.embedding(Tensor([40, 115],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2024 / 4710400 (0.043%)
Max absolute difference among violations: 0.99788916
Max relative difference among violations: 1.
ACTUAL: array([[[0.885113, 0.8435  , 0.21911 , ..., 0.629169, 0.586813,
0.669325],
[0.23522 , 0.891379, 0.299325, ..., 0.735775, 0.874261,...
DESIRED: array([[[0.885113, 0.8435  , 0.21911 , ..., 0.629169, 0.586813,
0.669325],
[0.23522 , 0.891379, 0.299325, ..., 0.735775, 0.874261,...
2025-04-27 00:09:07.161136 test begin: paddle.nn.functional.embedding(Tensor([40, 118],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.nn.functional.embedding(Tensor([40, 118],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1013 / 4833280 (0.021%)
Max absolute difference among violations: 0.994316
Max relative difference among violations: 1.
ACTUAL: array([[[0.707572, 0.220981, 0.00483 , ..., 0.101876, 0.200644,
0.821642],
[0.490023, 0.946426, 0.363965, ..., 0.751626, 0.794069,...
DESIRED: array([[[0.707572, 0.220981, 0.00483 , ..., 0.101876, 0.200644,
0.821642],
[0.490023, 0.946426, 0.363965, ..., 0.751626, 0.794069,...
2025-04-27 00:09:08.725833 test begin: paddle.nn.functional.embedding(Tensor([40, 122],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.nn.functional.embedding(Tensor([40, 122],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2032 / 4997120 (0.0407%)
Max absolute difference among violations: 0.99991
Max relative difference among violations: 1.
ACTUAL: array([[[0.20305 , 0.890402, 0.616691, ..., 0.568188, 0.668674,
0.877685],
[0.853454, 0.775432, 0.971382, ..., 0.228713, 0.569538,...
DESIRED: array([[[0.20305 , 0.890402, 0.616691, ..., 0.568188, 0.668674,
0.877685],
[0.853454, 0.775432, 0.971382, ..., 0.228713, 0.569538,...
2025-04-27 00:10:10.701046 test begin: paddle.nn.functional.embedding(Tensor([40, 89],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.nn.functional.embedding(Tensor([40, 89],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1020 / 3645440 (0.028%)
Max absolute difference among violations: 0.99989194
Max relative difference among violations: 1.
ACTUAL: array([[[0.08561 , 0.99524 , 0.86633 , ..., 0.723767, 0.752951,
0.974104],
[0.855431, 0.418797, 0.613908, ..., 0.305981, 0.062521,...
DESIRED: array([[[0.08561 , 0.99524 , 0.86633 , ..., 0.723767, 0.752951,
0.974104],
[0.855431, 0.418797, 0.613908, ..., 0.305981, 0.062521,...
2025-04-27 00:10:20.707109 test begin: paddle.nn.functional.embedding(Tensor([40, 94],"int64"), weight=Tensor([33712, 512],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.nn.functional.embedding(Tensor([40, 94],"int64"), weight=Tensor([33712, 512],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 505 / 1925120 (0.0262%)
Max absolute difference among violations: 0.9977676
Max relative difference among violations: 1.
ACTUAL: array([[[0.735426, 0.232123, 0.02421 , ..., 0.618722, 0.682678,
0.421906],
[0.035937, 0.710345, 0.50134 , ..., 0.373792, 0.632307,...
DESIRED: array([[[0.735426, 0.232123, 0.02421 , ..., 0.618722, 0.682678,
0.421906],
[0.035937, 0.710345, 0.50134 , ..., 0.373792, 0.632307,...
2025-04-27 00:10:22.801624 test begin: paddle.nn.functional.embedding(Tensor([40, 95],"int64"), weight=Tensor([33712, 512],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.nn.functional.embedding(Tensor([40, 95],"int64"), weight=Tensor([33712, 512],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 504 / 1945600 (0.0259%)
Max absolute difference among violations: 0.99727523
Max relative difference among violations: 1.
ACTUAL: array([[[0.506197, 0.789714, 0.159231, ..., 0.234917, 0.727003,
0.025784],
[0.734806, 0.437096, 0.002824, ..., 0.983847, 0.520395,...
DESIRED: array([[[0.506197, 0.789714, 0.159231, ..., 0.234917, 0.727003,
0.025784],
[0.734806, 0.437096, 0.002824, ..., 0.983847, 0.520395,...
2025-04-27 00:10:28.937440 test begin: paddle.nn.functional.embedding(Tensor([408, 12],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.nn.functional.embedding(Tensor([408, 12],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1018 / 5013504 (0.0203%)
Max absolute difference among violations: 0.99947613
Max relative difference among violations: 1.
ACTUAL: array([[[0.614808, 0.465246, 0.436491, ..., 0.308756, 0.469146,
0.418097],
[0.464148, 0.568834, 0.467992, ..., 0.08235 , 0.582296,...
DESIRED: array([[[0.614808, 0.465246, 0.436491, ..., 0.308756, 0.469146,
0.418097],
[0.464148, 0.568834, 0.467992, ..., 0.08235 , 0.582296,...
2025-04-27 00:10:35.904587 test begin: paddle.nn.functional.embedding(Tensor([424, 12],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.nn.functional.embedding(Tensor([424, 12],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1009 / 5210112 (0.0194%)
Max absolute difference among violations: 0.9996753
Max relative difference among violations: 1.
ACTUAL: array([[[0.004881, 0.265627, 0.021682, ..., 0.064792, 0.691946,
0.787952],
[0.096752, 0.075226, 0.024524, ..., 0.553252, 0.924314,...
DESIRED: array([[[0.004881, 0.265627, 0.021682, ..., 0.064792, 0.691946,
0.787952],
[0.096752, 0.075226, 0.024524, ..., 0.553252, 0.924314,...
2025-04-27 00:10:46.869681 test begin: paddle.nn.functional.embedding(Tensor([464, 8],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.nn.functional.embedding(Tensor([464, 8],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1020 / 3801088 (0.0268%)
Max absolute difference among violations: 0.9997477
Max relative difference among violations: 1.
ACTUAL: array([[[0.103695, 0.30384 , 0.937962, ..., 0.445262, 0.494364,
0.613444],
[0.0519  , 0.906201, 0.647731, ..., 0.474331, 0.755296,...
DESIRED: array([[[0.103695, 0.30384 , 0.937962, ..., 0.445262, 0.494364,
0.613444],
[0.0519  , 0.906201, 0.647731, ..., 0.474331, 0.755296,...
2025-04-27 00:11:01.967135 test begin: paddle.nn.functional.embedding(Tensor([48, 32],"int64"), weight=Tensor([33712, 512],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.nn.functional.embedding(Tensor([48, 32],"int64"), weight=Tensor([33712, 512],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 509 / 786432 (0.0647%)
Max absolute difference among violations: 0.999724
Max relative difference among violations: 1.
ACTUAL: array([[[0.468869, 0.614174, 0.759892, ..., 0.73379 , 0.453769,
0.810612],
[0.130559, 0.276683, 0.656069, ..., 0.590067, 0.723357,...
DESIRED: array([[[0.468869, 0.614174, 0.759892, ..., 0.73379 , 0.453769,
0.810612],
[0.130559, 0.276683, 0.656069, ..., 0.590067, 0.723357,...
2025-04-27 00:11:17.185113 test begin: paddle.nn.functional.embedding(Tensor([48, 54],"int64"), weight=Tensor([33712, 512],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.nn.functional.embedding(Tensor([48, 54],"int64"), weight=Tensor([33712, 512],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1016 / 1327104 (0.0766%)
Max absolute difference among violations: 0.99999195
Max relative difference among violations: 1.
ACTUAL: array([[[0.840954, 0.057206, 0.164676, ..., 0.056742, 0.032978,
0.193352],
[0.503207, 0.715588, 0.417296, ..., 0.151828, 0.569171,...
DESIRED: array([[[0.840954, 0.057206, 0.164676, ..., 0.056742, 0.032978,
0.193352],
[0.503207, 0.715588, 0.417296, ..., 0.151828, 0.569171,...
2025-04-27 00:11:27.245112 test begin: paddle.nn.functional.embedding(Tensor([48, 64],"int64"), weight=Tensor([33712, 512],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.nn.functional.embedding(Tensor([48, 64],"int64"), weight=Tensor([33712, 512],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 511 / 1572864 (0.0325%)
Max absolute difference among violations: 0.99810797
Max relative difference among violations: 1.
ACTUAL: array([[[0.949299, 0.910935, 0.650999, ..., 0.442353, 0.086184,
0.388177],
[0.214976, 0.747432, 0.766207, ..., 0.598702, 0.138017,...
DESIRED: array([[[0.949299, 0.910935, 0.650999, ..., 0.442353, 0.086184,
0.388177],
[0.214976, 0.747432, 0.766207, ..., 0.598702, 0.138017,...
2025-04-27 00:11:50.395570 test begin: paddle.nn.functional.embedding(Tensor([48, 78],"int64"), weight=Tensor([33712, 512],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.nn.functional.embedding(Tensor([48, 78],"int64"), weight=Tensor([33712, 512],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 507 / 1916928 (0.0264%)
Max absolute difference among violations: 0.9992388
Max relative difference among violations: 1.
ACTUAL: array([[[0.947268, 0.531037, 0.728261, ..., 0.708145, 0.550912,
0.990522],
[0.261275, 0.539248, 0.043832, ..., 0.88374 , 0.547804,...
DESIRED: array([[[0.947268, 0.531037, 0.728261, ..., 0.708145, 0.550912,
0.990522],
[0.261275, 0.539248, 0.043832, ..., 0.88374 , 0.547804,...
2025-04-27 00:12:16.209775 test begin: paddle.nn.functional.embedding(Tensor([48, 95],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.nn.functional.embedding(Tensor([48, 95],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1009 / 4669440 (0.0216%)
Max absolute difference among violations: 0.9996207
Max relative difference among violations: 1.
ACTUAL: array([[[0.820203, 0.714898, 0.152872, ..., 0.968151, 0.64234 ,
0.638174],
[0.491652, 0.450982, 0.335064, ..., 0.700435, 0.20699 ,...
DESIRED: array([[[0.820203, 0.714898, 0.152872, ..., 0.968151, 0.64234 ,
0.638174],
[0.491652, 0.450982, 0.335064, ..., 0.700435, 0.20699 ,...
2025-04-27 00:13:09.121260 test begin: paddle.nn.functional.embedding(Tensor([512, 7],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.nn.functional.embedding(Tensor([512, 7],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1014 / 3670016 (0.0276%)
Max absolute difference among violations: 0.99896944
Max relative difference among violations: 1.
ACTUAL: array([[[0.553039, 0.091067, 0.297854, ..., 0.557353, 0.915308,
0.302656],
[0.895284, 0.627073, 0.650819, ..., 0.698295, 0.640658,...
DESIRED: array([[[0.553039, 0.091067, 0.297854, ..., 0.557353, 0.915308,
0.302656],
[0.895284, 0.627073, 0.650819, ..., 0.698295, 0.640658,...
2025-04-27 00:13:14.354735 test begin: paddle.nn.functional.embedding(Tensor([52, 7],"int32"), weight=Tensor([109, 32],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.nn.functional.embedding(Tensor([52, 7],"int32"), weight=Tensor([109, 32],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 96 / 11648 (0.824%)
Max absolute difference among violations: 0.9488476
Max relative difference among violations: 1.
ACTUAL: array([[[0.194048, 0.590213, 0.130536, ..., 0.796991, 0.870504,
0.106719],
[0.111984, 0.56007 , 0.099525, ..., 0.198178, 0.143696,...
DESIRED: array([[[0.194048, 0.590213, 0.130536, ..., 0.796991, 0.870504,
0.106719],
[0.111984, 0.56007 , 0.099525, ..., 0.198178, 0.143696,...
2025-04-27 00:13:14.745889 test begin: paddle.nn.functional.embedding(Tensor([52, 7],"int32"), weight=Tensor([109, 64],"float32"), padding_idx=1, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.nn.functional.embedding(Tensor([52, 7],"int32"), weight=Tensor([109, 64],"float32"), padding_idx=1, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 128 / 23296 (0.549%)
Max absolute difference among violations: 0.98880374
Max relative difference among violations: 1.
ACTUAL: array([[[0.523251, 0.266017, 0.473849, ..., 0.3794  , 0.353691,
0.99103 ],
[0.505184, 0.473859, 0.181068, ..., 0.125203, 0.541778,...
DESIRED: array([[[0.523251, 0.266017, 0.473849, ..., 0.3794  , 0.353691,
0.99103 ],
[0.505184, 0.473859, 0.181068, ..., 0.125203, 0.541778,...
2025-04-27 00:13:15.779403 test begin: paddle.nn.functional.embedding(Tensor([52, 7],"int32"), weight=Tensor([84, 32],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.nn.functional.embedding(Tensor([52, 7],"int32"), weight=Tensor([84, 32],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 186 / 11648 (1.6%)
Max absolute difference among violations: 0.98268265
Max relative difference among violations: 1.
ACTUAL: array([[[0.668615, 0.995957, 0.546335, ..., 0.8536  , 0.713446,
0.223686],
[0.581328, 0.397884, 0.206506, ..., 0.114795, 0.792538,...
DESIRED: array([[[0.668615, 0.995957, 0.546335, ..., 0.8536  , 0.713446,
0.223686],
[0.581328, 0.397884, 0.206506, ..., 0.114795, 0.792538,...
2025-04-27 00:13:16.118342 test begin: paddle.nn.functional.embedding(Tensor([52, 7],"int32"), weight=Tensor([84, 64],"float32"), padding_idx=1, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.nn.functional.embedding(Tensor([52, 7],"int32"), weight=Tensor([84, 64],"float32"), padding_idx=1, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 256 / 23296 (1.1%)
Max absolute difference among violations: 0.9769059
Max relative difference among violations: 1.
ACTUAL: array([[[0.96409 , 0.227042, 0.958748, ..., 0.266606, 0.93356 ,
0.88976 ],
[0.492626, 0.030441, 0.70947 , ..., 0.261279, 0.634512,...
DESIRED: array([[[0.96409 , 0.227042, 0.958748, ..., 0.266606, 0.93356 ,
0.88976 ],
[0.492626, 0.030441, 0.70947 , ..., 0.261279, 0.634512,...
2025-04-27 00:13:16.321903 test begin: paddle.nn.functional.embedding(Tensor([52, 7],"int32"), weight=Tensor([99, 128],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.nn.functional.embedding(Tensor([52, 7],"int32"), weight=Tensor([99, 128],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 378 / 46592 (0.811%)
Max absolute difference among violations: 0.9984266
Max relative difference among violations: 1.
ACTUAL: array([[[0.180324, 0.435136, 0.140447, ..., 0.259456, 0.695776,
0.289205],
[0.857671, 0.920742, 0.847615, ..., 0.686493, 0.980637,...
DESIRED: array([[[0.180324, 0.435136, 0.140447, ..., 0.259456, 0.695776,
0.289205],
[0.857671, 0.920742, 0.847615, ..., 0.686493, 0.980637,...
2025-04-27 00:13:16.529218 test begin: paddle.nn.functional.embedding(Tensor([52, 7],"int32"), weight=Tensor([99, 16],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.nn.functional.embedding(Tensor([52, 7],"int32"), weight=Tensor([99, 16],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 16 / 5824 (0.275%)
Max absolute difference among violations: 0.9189108
Max relative difference among violations: 1.
ACTUAL: array([[[0.221244, 0.992812, 0.151383, ..., 0.686432, 0.52326 ,
0.546579],
[0.819312, 0.105977, 0.201405, ..., 0.610019, 0.58028 ,...
DESIRED: array([[[0.221244, 0.992812, 0.151383, ..., 0.686432, 0.52326 ,
0.546579],
[0.819312, 0.105977, 0.201405, ..., 0.610019, 0.58028 ,...
2025-04-27 00:13:16.960336 test begin: paddle.nn.functional.embedding(Tensor([52, 7],"int32"), weight=Tensor([99, 32],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.nn.functional.embedding(Tensor([52, 7],"int32"), weight=Tensor([99, 32],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 128 / 11648 (1.1%)
Max absolute difference among violations: 0.9905266
Max relative difference among violations: 1.
ACTUAL: array([[[3.878211e-01, 6.674619e-01, 8.814500e-01, ..., 4.144109e-01,
7.182314e-02, 4.117895e-01],
[7.375521e-04, 3.932129e-01, 1.679276e-01, ..., 2.167980e-02,...
DESIRED: array([[[3.878211e-01, 6.674619e-01, 8.814500e-01, ..., 4.144109e-01,
7.182314e-02, 4.117895e-01],
[7.375521e-04, 3.932129e-01, 1.679276e-01, ..., 2.167980e-02,...
2025-04-27 00:13:17.374871 test begin: paddle.nn.functional.embedding(Tensor([52, 7],"int32"), weight=Tensor([99, 64],"float32"), padding_idx=1, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.nn.functional.embedding(Tensor([52, 7],"int32"), weight=Tensor([99, 64],"float32"), padding_idx=1, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 192 / 23296 (0.824%)
Max absolute difference among violations: 0.9983712
Max relative difference among violations: 1.
ACTUAL: array([[[0.570072, 0.538763, 0.117564, ..., 0.759607, 0.802229,
0.091963],
[0.074339, 0.150225, 0.10417 , ..., 0.686958, 0.872988,...
DESIRED: array([[[0.570072, 0.538763, 0.117564, ..., 0.759607, 0.802229,
0.091963],
[0.074339, 0.150225, 0.10417 , ..., 0.686958, 0.872988,...
2025-04-27 00:13:18.468214 test begin: paddle.nn.functional.embedding(Tensor([52, 8],"int32"), weight=Tensor([99, 32],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.nn.functional.embedding(Tensor([52, 8],"int32"), weight=Tensor([99, 32],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 93 / 13312 (0.699%)
Max absolute difference among violations: 0.9609391
Max relative difference among violations: 1.
ACTUAL: array([[[0.008407, 0.6866  , 0.808507, ..., 0.40732 , 0.762218,
0.772209],
[0.394883, 0.0798  , 0.239718, ..., 0.153321, 0.187024,...
DESIRED: array([[[0.008407, 0.6866  , 0.808507, ..., 0.40732 , 0.762218,
0.772209],
[0.394883, 0.0798  , 0.239718, ..., 0.153321, 0.187024,...
2025-04-27 00:13:23.796454 test begin: paddle.nn.functional.embedding(Tensor([56, 28],"int64"), weight=Tensor([33712, 512],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.nn.functional.embedding(Tensor([56, 28],"int64"), weight=Tensor([33712, 512],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 504 / 802816 (0.0628%)
Max absolute difference among violations: 0.9951306
Max relative difference among violations: 1.
ACTUAL: array([[[0.537768, 0.638699, 0.915012, ..., 0.540956, 0.319213,
0.631019],
[0.857672, 0.107373, 0.880557, ..., 0.624008, 0.217541,...
DESIRED: array([[[0.537768, 0.638699, 0.915012, ..., 0.540956, 0.319213,
0.631019],
[0.857672, 0.107373, 0.880557, ..., 0.624008, 0.217541,...
2025-04-27 00:13:37.856085 test begin: paddle.nn.functional.embedding(Tensor([56, 53],"int64"), weight=Tensor([33712, 512],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.nn.functional.embedding(Tensor([56, 53],"int64"), weight=Tensor([33712, 512],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 504 / 1519616 (0.0332%)
Max absolute difference among violations: 0.99783105
Max relative difference among violations: 1.
ACTUAL: array([[[3.680947e-01, 6.478087e-01, 7.341831e-01, ..., 9.449119e-01,
9.618156e-01, 9.013817e-01],
[3.054739e-02, 1.345188e-01, 6.121598e-01, ..., 5.548319e-01,...
DESIRED: array([[[3.680947e-01, 6.478087e-01, 7.341831e-01, ..., 9.449119e-01,
9.618156e-01, 9.013817e-01],
[3.054739e-02, 1.345188e-01, 6.121598e-01, ..., 5.548319e-01,...
2025-04-27 00:13:41.315823 test begin: paddle.nn.functional.embedding(Tensor([56, 56],"int64"), weight=Tensor([33712, 512],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.nn.functional.embedding(Tensor([56, 56],"int64"), weight=Tensor([33712, 512],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1008 / 1605632 (0.0628%)
Max absolute difference among violations: 0.99723965
Max relative difference among violations: 1.
ACTUAL: array([[[0.211708, 0.609655, 0.194827, ..., 0.941601, 0.729541,
0.421685],
[0.088512, 0.325818, 0.436047, ..., 0.023509, 0.057261,...
DESIRED: array([[[0.211708, 0.609655, 0.194827, ..., 0.941601, 0.729541,
0.421685],
[0.088512, 0.325818, 0.436047, ..., 0.023509, 0.057261,...
2025-04-27 00:13:47.604810 test begin: paddle.nn.functional.embedding(Tensor([56, 62],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.nn.functional.embedding(Tensor([56, 62],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1008 / 3555328 (0.0284%)
Max absolute difference among violations: 0.9990308
Max relative difference among violations: 1.
ACTUAL: array([[[0.900391, 0.512375, 0.85442 , ..., 0.36538 , 0.440933,
0.893046],
[0.821963, 0.850938, 0.080549, ..., 0.853881, 0.710377,...
DESIRED: array([[[0.900391, 0.512375, 0.85442 , ..., 0.36538 , 0.440933,
0.893046],
[0.821963, 0.850938, 0.080549, ..., 0.853881, 0.710377,...
2025-04-27 00:14:10.084901 test begin: paddle.nn.functional.embedding(Tensor([56, 78],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.nn.functional.embedding(Tensor([56, 78],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1016 / 4472832 (0.0227%)
Max absolute difference among violations: 0.99930495
Max relative difference among violations: 1.
ACTUAL: array([[[0.239637, 0.302595, 0.395918, ..., 0.330823, 0.40413 ,
0.848563],
[0.485554, 0.387885, 0.547541, ..., 0.296737, 0.452871,...
DESIRED: array([[[0.239637, 0.302595, 0.395918, ..., 0.330823, 0.40413 ,
0.848563],
[0.485554, 0.387885, 0.547541, ..., 0.296737, 0.452871,...
2025-04-27 00:14:25.911354 test begin: paddle.nn.functional.embedding(Tensor([56, 89],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.nn.functional.embedding(Tensor([56, 89],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2022 / 5103616 (0.0396%)
Max absolute difference among violations: 0.9998334
Max relative difference among violations: 1.
ACTUAL: array([[[0.517672, 0.962967, 0.485101, ..., 0.016473, 0.956012,
0.110137],
[0.634203, 0.965966, 0.737057, ..., 0.790697, 0.436473,...
DESIRED: array([[[0.517672, 0.962967, 0.485101, ..., 0.016473, 0.956012,
0.110137],
[0.634203, 0.965966, 0.737057, ..., 0.790697, 0.436473,...
2025-04-27 00:14:27.439178 test begin: paddle.nn.functional.embedding(Tensor([56, 90],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.nn.functional.embedding(Tensor([56, 90],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1018 / 5160960 (0.0197%)
Max absolute difference among violations: 0.9981634
Max relative difference among violations: 1.
ACTUAL: array([[[0.499954, 0.212821, 0.061706, ..., 0.799865, 0.974871,
0.855905],
[0.193371, 0.944649, 0.858436, ..., 0.088278, 0.342646,...
DESIRED: array([[[0.499954, 0.212821, 0.061706, ..., 0.799865, 0.974871,
0.855905],
[0.193371, 0.944649, 0.858436, ..., 0.088278, 0.342646,...
2025-04-27 00:15:05.626269 test begin: paddle.nn.functional.embedding(Tensor([6, 3],"int32"), Tensor([10, 4],"float32"), padding_idx=5, scale_grad_by_freq=False, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.nn.functional.embedding(Tensor([6, 3],"int32"), Tensor([10, 4],"float32"), padding_idx=5, scale_grad_by_freq=False, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 16 / 72 (22.2%)
Max absolute difference among violations: 0.8203074
Max relative difference among violations: 1.
ACTUAL: array([[[0.475775, 0.057461, 0.051652, 0.90955 ],
[0.629774, 0.551385, 0.585979, 0.444916],
[0.624424, 0.070337, 0.744173, 0.184423]],...
DESIRED: array([[[0.475775, 0.057461, 0.051652, 0.90955 ],
[0.629774, 0.551385, 0.585979, 0.444916],
[0.624424, 0.070337, 0.744173, 0.184423]],...
2025-04-27 00:15:05.785110 test begin: paddle.nn.functional.embedding(Tensor([6, 3],"int32"), Tensor([10, 4],"float32"), padding_idx=5, scale_grad_by_freq=True, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.nn.functional.embedding(Tensor([6, 3],"int32"), Tensor([10, 4],"float32"), padding_idx=5, scale_grad_by_freq=True, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 8 / 72 (11.1%)
Max absolute difference among violations: 0.8733038
Max relative difference among violations: 1.
ACTUAL: array([[[0.16571 , 0.417978, 0.637338, 0.442586],
[0.      , 0.      , 0.      , 0.      ],
[0.832121, 0.705409, 0.004112, 0.923012]],...
DESIRED: array([[[0.16571 , 0.417978, 0.637338, 0.442586],
[0.19603 , 0.873304, 0.405128, 0.055978],
[0.832121, 0.705409, 0.004112, 0.923012]],...
2025-04-27 00:15:25.693781 test begin: paddle.nn.functional.embedding(Tensor([624, 8],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.nn.functional.embedding(Tensor([624, 8],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1013 / 5111808 (0.0198%)
Max absolute difference among violations: 0.99845666
Max relative difference among violations: 1.
ACTUAL: array([[[0.214424, 0.422825, 0.849248, ..., 0.381574, 0.139667,
0.715468],
[0.856333, 0.551549, 0.724701, ..., 0.713485, 0.265078,...
DESIRED: array([[[0.214424, 0.422825, 0.849248, ..., 0.381574, 0.139667,
0.715468],
[0.856333, 0.551549, 0.724701, ..., 0.713485, 0.265078,...
2025-04-27 00:15:37.938609 test begin: paddle.nn.functional.embedding(Tensor([64, 30],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.nn.functional.embedding(Tensor([64, 30],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1011 / 1966080 (0.0514%)
Max absolute difference among violations: 0.99965745
Max relative difference among violations: 1.
ACTUAL: array([[[0.780988, 0.656759, 0.094384, ..., 0.102555, 0.933955,
0.393035],
[0.368387, 0.087829, 0.060429, ..., 0.880898, 0.167617,...
DESIRED: array([[[0.780988, 0.656759, 0.094384, ..., 0.102555, 0.933955,
0.393035],
[0.368387, 0.087829, 0.060429, ..., 0.880898, 0.167617,...
2025-04-27 00:15:59.086591 test begin: paddle.nn.functional.embedding(Tensor([64, 48],"int64"), weight=Tensor([33712, 512],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.nn.functional.embedding(Tensor([64, 48],"int64"), weight=Tensor([33712, 512],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 508 / 1572864 (0.0323%)
Max absolute difference among violations: 0.99615586
Max relative difference among violations: 1.
ACTUAL: array([[[0.751155, 0.866768, 0.979156, ..., 0.27329 , 0.47582 ,
0.46591 ],
[0.213263, 0.449799, 0.918427, ..., 0.511294, 0.556945,...
DESIRED: array([[[0.751155, 0.866768, 0.979156, ..., 0.27329 , 0.47582 ,
0.46591 ],
[0.213263, 0.449799, 0.918427, ..., 0.511294, 0.556945,...
2025-04-27 00:16:04.103708 test begin: paddle.nn.functional.embedding(Tensor([64, 53],"int64"), weight=Tensor([33712, 512],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.nn.functional.embedding(Tensor([64, 53],"int64"), weight=Tensor([33712, 512],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 506 / 1736704 (0.0291%)
Max absolute difference among violations: 0.9982722
Max relative difference among violations: 1.
ACTUAL: array([[[0.385536, 0.931502, 0.390716, ..., 0.059907, 0.321743,
0.097006],
[0.16779 , 0.106266, 0.566257, ..., 0.237213, 0.280688,...
DESIRED: array([[[0.385536, 0.931502, 0.390716, ..., 0.059907, 0.321743,
0.097006],
[0.16779 , 0.106266, 0.566257, ..., 0.237213, 0.280688,...
2025-04-27 00:16:08.104774 test begin: paddle.nn.functional.embedding(Tensor([64, 55],"int64"), weight=Tensor([33712, 512],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.nn.functional.embedding(Tensor([64, 55],"int64"), weight=Tensor([33712, 512],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 507 / 1802240 (0.0281%)
Max absolute difference among violations: 0.9998927
Max relative difference among violations: 1.
ACTUAL: array([[[0.331457, 0.819574, 0.109682, ..., 0.852429, 0.16492 ,
0.332734],
[0.895608, 0.212089, 0.362845, ..., 0.726673, 0.399375,...
DESIRED: array([[[0.331457, 0.819574, 0.109682, ..., 0.852429, 0.16492 ,
0.332734],
[0.895608, 0.212089, 0.362845, ..., 0.726673, 0.399375,...
2025-04-27 00:16:14.913629 test begin: paddle.nn.functional.embedding(Tensor([64, 60],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.nn.functional.embedding(Tensor([64, 60],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1014 / 3932160 (0.0258%)
Max absolute difference among violations: 0.99828404
Max relative difference among violations: 1.
ACTUAL: array([[[0.202379, 0.793825, 0.328411, ..., 0.874469, 0.939145,
0.59478 ],
[0.90902 , 0.677391, 0.692459, ..., 0.580016, 0.451922,...
DESIRED: array([[[0.202379, 0.793825, 0.328411, ..., 0.874469, 0.939145,
0.59478 ],
[0.90902 , 0.677391, 0.692459, ..., 0.580016, 0.451922,...
2025-04-27 00:16:16.932352 test begin: paddle.nn.functional.embedding(Tensor([64, 61],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.nn.functional.embedding(Tensor([64, 61],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2028 / 3997696 (0.0507%)
Max absolute difference among violations: 0.9999722
Max relative difference among violations: 1.
ACTUAL: array([[[0.001104, 0.229749, 0.145048, ..., 0.5244  , 0.651525,
0.006399],
[0.768806, 0.804545, 0.699212, ..., 0.792052, 0.845922,...
DESIRED: array([[[0.001104, 0.229749, 0.145048, ..., 0.5244  , 0.651525,
0.006399],
[0.768806, 0.804545, 0.699212, ..., 0.792052, 0.845922,...
2025-04-27 00:16:20.026835 test begin: paddle.nn.functional.embedding(Tensor([64, 62],"int64"), weight=Tensor([33712, 512],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.nn.functional.embedding(Tensor([64, 62],"int64"), weight=Tensor([33712, 512],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 508 / 2031616 (0.025%)
Max absolute difference among violations: 0.99426526
Max relative difference among violations: 1.
ACTUAL: array([[[0.119013, 0.71223 , 0.900708, ..., 0.363409, 0.735943,
0.623931],
[0.473691, 0.238763, 0.149903, ..., 0.68254 , 0.952381,...
DESIRED: array([[[0.119013, 0.71223 , 0.900708, ..., 0.363409, 0.735943,
0.623931],
[0.473691, 0.238763, 0.149903, ..., 0.68254 , 0.952381,...
2025-04-27 00:16:32.176817 test begin: paddle.nn.functional.embedding(Tensor([64, 70],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.nn.functional.embedding(Tensor([64, 70],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1009 / 4587520 (0.022%)
Max absolute difference among violations: 0.9988506
Max relative difference among violations: 1.
ACTUAL: array([[[1.923752e-01, 2.427599e-01, 3.878309e-01, ..., 7.977709e-01,
3.647161e-01, 2.844858e-01],
[4.198631e-01, 9.520828e-01, 4.731152e-01, ..., 1.775859e-01,...
DESIRED: array([[[1.923752e-01, 2.427599e-01, 3.878309e-01, ..., 7.977709e-01,
3.647161e-01, 2.844858e-01],
[4.198631e-01, 9.520828e-01, 4.731152e-01, ..., 1.775859e-01,...
2025-04-27 00:16:43.771318 test begin: paddle.nn.functional.embedding(Tensor([64, 78],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.nn.functional.embedding(Tensor([64, 78],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1013 / 5111808 (0.0198%)
Max absolute difference among violations: 0.99907166
Max relative difference among violations: 1.
ACTUAL: array([[[0.796592, 0.036922, 0.358699, ..., 0.95837 , 0.519354,
0.242573],
[0.141284, 0.525344, 0.044701, ..., 0.936383, 0.086828,...
DESIRED: array([[[0.796592, 0.036922, 0.358699, ..., 0.95837 , 0.519354,
0.242573],
[0.141284, 0.525344, 0.044701, ..., 0.936383, 0.086828,...
2025-04-27 00:16:46.779841 test begin: paddle.nn.functional.embedding(Tensor([64, 80],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.nn.functional.embedding(Tensor([64, 80],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1012 / 5242880 (0.0193%)
Max absolute difference among violations: 0.9989308
Max relative difference among violations: 1.
ACTUAL: array([[[5.743799e-01, 5.255025e-01, 8.719196e-01, ..., 1.898592e-01,
8.470245e-02, 9.780322e-01],
[1.648435e-01, 1.246243e-01, 6.705745e-02, ..., 6.471173e-02,...
DESIRED: array([[[5.743799e-01, 5.255025e-01, 8.719196e-01, ..., 1.898592e-01,
8.470245e-02, 9.780322e-01],
[1.648435e-01, 1.246243e-01, 6.705745e-02, ..., 6.471173e-02,...
2025-04-27 00:17:52.382216 test begin: paddle.nn.functional.embedding(Tensor([72, 28],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.nn.functional.embedding(Tensor([72, 28],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1019 / 2064384 (0.0494%)
Max absolute difference among violations: 0.99902964
Max relative difference among violations: 1.
ACTUAL: array([[[0.035877, 0.957246, 0.205586, ..., 0.578952, 0.906243,
0.103916],
[0.036782, 0.551673, 0.783084, ..., 0.841817, 0.521445,...
DESIRED: array([[[0.035877, 0.957246, 0.205586, ..., 0.578952, 0.906243,
0.103916],
[0.036782, 0.551673, 0.783084, ..., 0.841817, 0.521445,...
2025-04-27 00:18:05.633667 test begin: paddle.nn.functional.embedding(Tensor([72, 48],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.nn.functional.embedding(Tensor([72, 48],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1012 / 3538944 (0.0286%)
Max absolute difference among violations: 0.9982116
Max relative difference among violations: 1.
ACTUAL: array([[[0.207384, 0.867485, 0.669834, ..., 0.62234 , 0.428522,
0.154978],
[0.854599, 0.465166, 0.404364, ..., 0.940631, 0.372002,...
DESIRED: array([[[0.207384, 0.867485, 0.669834, ..., 0.62234 , 0.428522,
0.154978],
[0.854599, 0.465166, 0.404364, ..., 0.940631, 0.372002,...
2025-04-27 00:18:06.590156 test begin: paddle.nn.functional.embedding(Tensor([72, 48],"int64"), weight=Tensor([33712, 512],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.nn.functional.embedding(Tensor([72, 48],"int64"), weight=Tensor([33712, 512],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 502 / 1769472 (0.0284%)
Max absolute difference among violations: 0.9956837
Max relative difference among violations: 1.
ACTUAL: array([[[0.468587, 0.31713 , 0.495434, ..., 0.897173, 0.735524,
0.220541],
[0.348758, 0.2414  , 0.167652, ..., 0.826124, 0.326229,...
DESIRED: array([[[0.468587, 0.31713 , 0.495434, ..., 0.897173, 0.735524,
0.220541],
[0.348758, 0.2414  , 0.167652, ..., 0.826124, 0.326229,...
2025-04-27 00:18:10.614314 test begin: paddle.nn.functional.embedding(Tensor([72, 50],"int64"), weight=Tensor([33712, 512],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.nn.functional.embedding(Tensor([72, 50],"int64"), weight=Tensor([33712, 512],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 503 / 1843200 (0.0273%)
Max absolute difference among violations: 0.9979903
Max relative difference among violations: 1.
ACTUAL: array([[[0.625675, 0.19311 , 0.164484, ..., 0.369339, 0.321431,
0.813177],
[0.278192, 0.503318, 0.67047 , ..., 0.341611, 0.84282 ,...
DESIRED: array([[[0.625675, 0.19311 , 0.164484, ..., 0.369339, 0.321431,
0.813177],
[0.278192, 0.503318, 0.67047 , ..., 0.341611, 0.84282 ,...
2025-04-27 00:18:11.716064 test begin: paddle.nn.functional.embedding(Tensor([72, 51],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.nn.functional.embedding(Tensor([72, 51],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1010 / 3760128 (0.0269%)
Max absolute difference among violations: 0.9998907
Max relative difference among violations: 1.
ACTUAL: array([[[0.261725, 0.776902, 0.252717, ..., 0.780245, 0.437805,
0.349582],
[0.001935, 0.375113, 0.100989, ..., 0.605516, 0.21866 ,...
DESIRED: array([[[0.261725, 0.776902, 0.252717, ..., 0.780245, 0.437805,
0.349582],
[0.001935, 0.375113, 0.100989, ..., 0.605516, 0.21866 ,...
2025-04-27 00:18:16.771662 test begin: paddle.nn.functional.embedding(Tensor([72, 53],"int64"), weight=Tensor([33712, 512],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.nn.functional.embedding(Tensor([72, 53],"int64"), weight=Tensor([33712, 512],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 507 / 1953792 (0.0259%)
Max absolute difference among violations: 0.99939454
Max relative difference among violations: 1.
ACTUAL: array([[[0.816299, 0.513501, 0.893259, ..., 0.095066, 0.175744,
0.635069],
[0.089152, 0.73152 , 0.413698, ..., 0.85063 , 0.041059,...
DESIRED: array([[[0.816299, 0.513501, 0.893259, ..., 0.095066, 0.175744,
0.635069],
[0.089152, 0.73152 , 0.413698, ..., 0.85063 , 0.041059,...
2025-04-27 00:18:41.135200 test begin: paddle.nn.functional.embedding(Tensor([72, 70],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.nn.functional.embedding(Tensor([72, 70],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1008 / 5160960 (0.0195%)
Max absolute difference among violations: 0.99846226
Max relative difference among violations: 1.
ACTUAL: array([[[0.39002 , 0.497594, 0.492358, ..., 0.856415, 0.229502,
0.858141],
[0.182389, 0.931458, 0.841288, ..., 0.890526, 0.502167,...
DESIRED: array([[[0.39002 , 0.497594, 0.492358, ..., 0.856415, 0.229502,
0.858141],
[0.182389, 0.931458, 0.841288, ..., 0.890526, 0.502167,...
2025-04-27 00:18:43.934657 test begin: paddle.nn.functional.embedding(Tensor([728, 7],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.nn.functional.embedding(Tensor([728, 7],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1016 / 5218304 (0.0195%)
Max absolute difference among violations: 0.9994126
Max relative difference among violations: 1.
ACTUAL: array([[[0.377942, 0.341769, 0.190345, ..., 0.388014, 0.386012,
0.303022],
[0.37251 , 0.236257, 0.521182, ..., 0.909317, 0.530495,...
DESIRED: array([[[0.377942, 0.341769, 0.190345, ..., 0.388014, 0.386012,
0.303022],
[0.37251 , 0.236257, 0.521182, ..., 0.909317, 0.530495,...
2025-04-27 00:20:47.861535 test begin: paddle.nn.functional.embedding(Tensor([80, 42],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.nn.functional.embedding(Tensor([80, 42],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1012 / 3440640 (0.0294%)
Max absolute difference among violations: 0.9980625
Max relative difference among violations: 1.
ACTUAL: array([[[0.940252, 0.31679 , 0.68643 , ..., 0.199333, 0.624188,
0.456033],
[0.318641, 0.078498, 0.255582, ..., 0.009837, 0.764147,...
DESIRED: array([[[0.940252, 0.31679 , 0.68643 , ..., 0.199333, 0.624188,
0.456033],
[0.318641, 0.078498, 0.255582, ..., 0.009837, 0.764147,...
2025-04-27 00:20:52.296240 test begin: paddle.nn.functional.embedding(Tensor([80, 45],"int64"), weight=Tensor([33712, 512],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.nn.functional.embedding(Tensor([80, 45],"int64"), weight=Tensor([33712, 512],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 503 / 1843200 (0.0273%)
Max absolute difference among violations: 0.9998888
Max relative difference among violations: 1.
ACTUAL: array([[[1.858409e-01, 6.880916e-01, 5.028725e-01, ..., 6.211346e-01,
2.578770e-01, 6.800413e-01],
[1.428845e-01, 8.628114e-01, 7.302015e-01, ..., 8.656215e-02,...
DESIRED: array([[[1.858409e-01, 6.880916e-01, 5.028725e-01, ..., 6.211346e-01,
2.578770e-01, 6.800413e-01],
[1.428845e-01, 8.628114e-01, 7.302015e-01, ..., 8.656215e-02,...
2025-04-27 00:21:04.805516 test begin: paddle.nn.functional.embedding(Tensor([80, 51],"int64"), weight=Tensor([33712, 512],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.nn.functional.embedding(Tensor([80, 51],"int64"), weight=Tensor([33712, 512],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 503 / 2088960 (0.0241%)
Max absolute difference among violations: 0.99910647
Max relative difference among violations: 1.
ACTUAL: array([[[0.458117, 0.519054, 0.167351, ..., 0.827987, 0.93755 ,
0.953234],
[0.415873, 0.100011, 0.258922, ..., 0.070544, 0.333715,...
DESIRED: array([[[0.458117, 0.519054, 0.167351, ..., 0.827987, 0.93755 ,
0.953234],
[0.415873, 0.100011, 0.258922, ..., 0.070544, 0.333715,...
2025-04-27 00:21:05.738815 test begin: paddle.nn.functional.embedding(Tensor([80, 52],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.nn.functional.embedding(Tensor([80, 52],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1014 / 4259840 (0.0238%)
Max absolute difference among violations: 0.99776083
Max relative difference among violations: 1.
ACTUAL: array([[[0.610151, 0.10777 , 0.610613, ..., 0.632773, 0.319879,
0.456593],
[0.831703, 0.063354, 0.828493, ..., 0.132483, 0.435279,...
DESIRED: array([[[0.610151, 0.10777 , 0.610613, ..., 0.632773, 0.319879,
0.456593],
[0.831703, 0.063354, 0.828493, ..., 0.132483, 0.435279,...
2025-04-27 00:21:08.367904 test begin: paddle.nn.functional.embedding(Tensor([80, 54],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.nn.functional.embedding(Tensor([80, 54],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1006 / 4423680 (0.0227%)
Max absolute difference among violations: 0.99692625
Max relative difference among violations: 1.
ACTUAL: array([[[0.742737, 0.817829, 0.937416, ..., 0.960661, 0.707667,
0.80583 ],
[0.823933, 0.700363, 0.800452, ..., 0.447117, 0.858253,...
DESIRED: array([[[0.742737, 0.817829, 0.937416, ..., 0.960661, 0.707667,
0.80583 ],
[0.823933, 0.700363, 0.800452, ..., 0.447117, 0.858253,...
2025-04-27 00:21:28.423657 test begin: paddle.nn.functional.embedding(Tensor([88, 14],"int64"), weight=Tensor([33712, 512],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.nn.functional.embedding(Tensor([88, 14],"int64"), weight=Tensor([33712, 512],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 508 / 630784 (0.0805%)
Max absolute difference among violations: 0.99765587
Max relative difference among violations: 1.
ACTUAL: array([[[0.387329, 0.018975, 0.198097, ..., 0.931893, 0.594937,
0.399618],
[0.924934, 0.553486, 0.430055, ..., 0.529671, 0.835026,...
DESIRED: array([[[0.387329, 0.018975, 0.198097, ..., 0.931893, 0.594937,
0.399618],
[0.924934, 0.553486, 0.430055, ..., 0.529671, 0.835026,...
2025-04-27 00:21:34.194168 test begin: paddle.nn.functional.embedding(Tensor([88, 31],"int64"), weight=Tensor([33712, 512],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.nn.functional.embedding(Tensor([88, 31],"int64"), weight=Tensor([33712, 512],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 505 / 1396736 (0.0362%)
Max absolute difference among violations: 0.99716216
Max relative difference among violations: 1.
ACTUAL: array([[[0.053242, 0.696997, 0.779712, ..., 0.900674, 0.12666 ,
0.584702],
[0.817573, 0.564356, 0.348219, ..., 0.226622, 0.838054,...
DESIRED: array([[[0.053242, 0.696997, 0.779712, ..., 0.900674, 0.12666 ,
0.584702],
[0.817573, 0.564356, 0.348219, ..., 0.226622, 0.838054,...
2025-04-27 00:21:35.682283 test begin: paddle.nn.functional.embedding(Tensor([88, 33],"int64"), weight=Tensor([33712, 512],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.nn.functional.embedding(Tensor([88, 33],"int64"), weight=Tensor([33712, 512],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 505 / 1486848 (0.034%)
Max absolute difference among violations: 0.9996202
Max relative difference among violations: 1.
ACTUAL: array([[[7.831531e-01, 2.853482e-01, 9.680997e-01, ..., 6.580543e-02,
7.051842e-01, 9.686162e-01],
[1.511951e-01, 4.678457e-01, 9.922184e-01, ..., 2.690542e-01,...
DESIRED: array([[[7.831531e-01, 2.853482e-01, 9.680997e-01, ..., 6.580543e-02,
7.051842e-01, 9.686162e-01],
[1.511951e-01, 4.678457e-01, 9.922184e-01, ..., 2.690542e-01,...
2025-04-27 00:21:36.702316 test begin: paddle.nn.functional.embedding(Tensor([88, 34],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.nn.functional.embedding(Tensor([88, 34],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2026 / 3063808 (0.0661%)
Max absolute difference among violations: 0.9999801
Max relative difference among violations: 1.
ACTUAL: array([[[0.326532, 0.364608, 0.363338, ..., 0.771853, 0.118126,
0.029804],
[0.448013, 0.64038 , 0.265296, ..., 0.157977, 0.382855,...
DESIRED: array([[[0.326532, 0.364608, 0.363338, ..., 0.771853, 0.118126,
0.029804],
[0.448013, 0.64038 , 0.265296, ..., 0.157977, 0.382855,...
2025-04-27 00:22:04.231777 test begin: paddle.nn.functional.embedding(Tensor([88, 50],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.nn.functional.embedding(Tensor([88, 50],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1014 / 4505600 (0.0225%)
Max absolute difference among violations: 0.9989627
Max relative difference among violations: 1.
ACTUAL: array([[[0.449241, 0.974899, 0.9745  , ..., 0.168399, 0.733435,
0.729216],
[0.903067, 0.614765, 0.55154 , ..., 0.382481, 0.204992,...
DESIRED: array([[[0.449241, 0.974899, 0.9745  , ..., 0.168399, 0.733435,
0.729216],
[0.903067, 0.614765, 0.55154 , ..., 0.382481, 0.204992,...
2025-04-27 00:22:56.394386 test begin: paddle.nn.functional.embedding(Tensor([96, 22],"int64"), weight=Tensor([6629, 384],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.nn.functional.embedding(Tensor([96, 22],"int64"), weight=Tensor([6629, 384],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 382 / 811008 (0.0471%)
Max absolute difference among violations: 0.999606
Max relative difference among violations: 1.
ACTUAL: array([[[0.138404, 0.088045, 0.546839, ..., 0.276418, 0.10804 ,
0.568786],
[0.737975, 0.558877, 0.026369, ..., 0.620665, 0.857073,...
DESIRED: array([[[0.138404, 0.088045, 0.546839, ..., 0.276418, 0.10804 ,
0.568786],
[0.737975, 0.558877, 0.026369, ..., 0.620665, 0.857073,...
2025-04-27 00:23:08.833735 test begin: paddle.nn.functional.embedding(Tensor([96, 37],"int64"), weight=Tensor([33712, 512],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.nn.functional.embedding(Tensor([96, 37],"int64"), weight=Tensor([33712, 512],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 508 / 1818624 (0.0279%)
Max absolute difference among violations: 0.9984958
Max relative difference among violations: 1.
ACTUAL: array([[[0.56464 , 0.281858, 0.485308, ..., 0.888075, 0.604084,
0.314362],
[0.211559, 0.530452, 0.407449, ..., 0.23636 , 0.754559,...
DESIRED: array([[[0.56464 , 0.281858, 0.485308, ..., 0.888075, 0.604084,
0.314362],
[0.211559, 0.530452, 0.407449, ..., 0.23636 , 0.754559,...
2025-04-27 00:23:29.291095 test begin: paddle.nn.functional.embedding(Tensor([96, 48],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.nn.functional.embedding(Tensor([96, 48],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1016 / 4718592 (0.0215%)
Max absolute difference among violations: 0.99997044
Max relative difference among violations: 1.
ACTUAL: array([[[0.58834 , 0.399124, 0.970185, ..., 0.564663, 0.172627,
0.728001],
[0.79582 , 0.254854, 0.553871, ..., 0.611936, 0.215192,...
DESIRED: array([[[0.58834 , 0.399124, 0.970185, ..., 0.564663, 0.172627,
0.728001],
[0.79582 , 0.254854, 0.553871, ..., 0.611936, 0.215192,...
2025-04-27 00:23:35.312851 test begin: paddle.nn.functional.embedding(Tensor([96, 52],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.nn.functional.embedding(Tensor([96, 52],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1014 / 5111808 (0.0198%)
Max absolute difference among violations: 0.9995561
Max relative difference among violations: 1.
ACTUAL: array([[[0.933464, 0.676091, 0.796762, ..., 0.159619, 0.480629,
0.172064],
[0.538519, 0.377551, 0.321876, ..., 0.15798 , 0.343429,...
DESIRED: array([[[0.933464, 0.676091, 0.796762, ..., 0.159619, 0.480629,
0.172064],
[0.538519, 0.377551, 0.321876, ..., 0.15798 , 0.343429,...
2025-04-26 23:48:18.437904 test begin: paddle.clip(x=Tensor([3, 3],"float64"), min=Tensor([1],"float64"), max=None, )
[accuracy error] paddle.clip(x=Tensor([3, 3],"float64"), min=Tensor([1],"float64"), max=None, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 7 / 9 (77.8%)
Max absolute difference among violations: 8.43235537e+307
Max relative difference among violations: 1.
ACTUAL: array([[3.402823e+38, 3.402823e+38, 3.402823e+38],
[3.402823e+38, 3.402823e+38, 3.478288e-01],
[3.402823e+38, 3.478288e-01, 3.402823e+38]])
DESIRED: array([[3.535274e+307, 6.023437e+307, 6.310357e+306],
[3.768644e+307, 5.418407e+307, 3.478288e-001],
[8.432355e+307, 3.478288e-001, 1.080402e+307]])
2025-04-26 23:48:20.058239 test begin: paddle.signal.istft(Tensor([257, 471],"complex128"), 512, None, None, Tensor([512],"float64"), True, False, True, None, False, )
W0426 23:48:20.443878 15022 backward.cc:437] While running Node (DivideGradNode) raises an EnforceNotMet exception
[paddle error] paddle.signal.istft(Tensor([257, 471],"complex128"), 512, None, None, Tensor([512],"float64"), True, False, True, None, False, )
(PermissionDenied) Tensor '' used in gradient computation has been modified by an inplace operation. Its version is 1 but the expected version is 0. Please fix your code to void calling an inplace operator after using the Tensor which will used in gradient computation.
[Hint: Expected tensor_version == wrapper_version_snapshot, but received tensor_version:1 != wrapper_version_snapshot:0.] (at /paddle/paddle/fluid/eager/tensor_wrapper.h:246)
2025-04-27 05:00:23.837588 test begin: paddle.sum(Tensor([8, 128, 64, 64],"float16"), name=None, )
[accuracy error] paddle.sum(Tensor([8, 128, 64, 64],"float16"), name=None, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 191.
Max relative difference among violations: 0.1517
ACTUAL: array(1068., dtype=float16)
DESIRED: array(1259., dtype=float16)
2025-04-27 05:00:24.195799 test begin: paddle.sum(Tensor([8, 256, 64, 64],"float16"), name=None, )
[accuracy error] paddle.sum(Tensor([8, 256, 64, 64],"float16"), name=None, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 131.5
Max relative difference among violations: 0.2827
ACTUAL: array(333.5, dtype=float16)
DESIRED: array(465., dtype=float16)
2025-04-27 05:00:24.600889 test begin: paddle.sum(Tensor([8, 32, 256, 256],"float16"), name=None, )
[accuracy error] paddle.sum(Tensor([8, 32, 256, 256],"float16"), name=None, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 280.2
Max relative difference among violations: 0.7974
ACTUAL: array(71.25, dtype=float16)
DESIRED: array(351.5, dtype=float16)
2025-04-27 05:00:25.356561 test begin: paddle.sum(Tensor([8, 64, 128, 128],"float16"), name=None, )
[accuracy error] paddle.sum(Tensor([8, 64, 128, 128],"float16"), name=None, )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 1 (100%)
Max absolute difference among violations: 7.125
Max relative difference among violations: 0.03223
ACTUAL: array(213.9, dtype=float16)
DESIRED: array(221., dtype=float16)
2025-04-26 23:48:17.676654 test begin: paddle.add_n(list[Tensor([],"float32"),Tensor([],"float32"),Tensor([],"float16"),Tensor([],"float32"),], )
[paddle error] paddle.add_n(list[Tensor([],"float32"),Tensor([],"float32"),Tensor([],"float16"),Tensor([],"float32"),], )
(InvalidArgument) The type of data we are trying to retrieve (float32) does not match the type of data (float16) currently contained in the container.
[Hint: Expected dtype() == phi::CppTypeToDataType<T>::Type(), but received dtype():15 != phi::CppTypeToDataType<T>::Type():10.] (at /paddle/paddle/phi/core/dense_tensor.cc:153)
2025-04-26 23:48:17.821462 test begin: paddle.add_n(list[Tensor([],"float32"),Tensor([],"float32"),Tensor([],"float32"),Tensor([],"float16"),Tensor([],"float32"),], )
[paddle error] paddle.add_n(list[Tensor([],"float32"),Tensor([],"float32"),Tensor([],"float32"),Tensor([],"float16"),Tensor([],"float32"),], )
(InvalidArgument) The type of data we are trying to retrieve (float32) does not match the type of data (float16) currently contained in the container.
[Hint: Expected dtype() == phi::CppTypeToDataType<T>::Type(), but received dtype():15 != phi::CppTypeToDataType<T>::Type():10.] (at /paddle/paddle/phi/core/dense_tensor.cc:153)
2025-04-26 23:48:19.479244 test begin: paddle.concat(list[Tensor([1, 256, 128, 128],"float32"),Tensor([1, 48, 128, 128],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([1, 256, 128, 128],"float32"),Tensor([1, 48, 128, 128],"float16"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:48:19.837628 test begin: paddle.concat(list[Tensor([1, 256, 64, 64],"float16"),Tensor([1, 256, 64, 64],"float16"),Tensor([1, 256, 64, 64],"float16"),Tensor([1, 256, 64, 64],"float16"),Tensor([1, 256, 64, 64],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([1, 256, 64, 64],"float16"),Tensor([1, 256, 64, 64],"float16"),Tensor([1, 256, 64, 64],"float16"),Tensor([1, 256, 64, 64],"float16"),Tensor([1, 256, 64, 64],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 4th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:48:20.357472 test begin: paddle.concat(list[Tensor([12, 128, 76, 136],"float32"),Tensor([12, 256, 76, 136],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([12, 128, 76, 136],"float32"),Tensor([12, 256, 76, 136],"float16"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:48:22.385055 test begin: paddle.concat(list[Tensor([12, 256, 38, 68],"float32"),Tensor([12, 512, 38, 68],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([12, 256, 38, 68],"float32"),Tensor([12, 512, 38, 68],"float16"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:48:23.512468 test begin: paddle.concat(list[Tensor([12, 256, 40, 40],"float32"),Tensor([12, 512, 40, 40],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([12, 256, 40, 40],"float32"),Tensor([12, 512, 40, 40],"float16"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:48:24.260252 test begin: paddle.concat(list[Tensor([12, 512, 20, 20],"float32"),Tensor([12, 1024, 20, 20],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([12, 512, 20, 20],"float32"),Tensor([12, 1024, 20, 20],"float16"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:48:24.710916 test begin: paddle.concat(list[Tensor([16, 1024, 40, 40],"float16"),Tensor([16, 192, 40, 40],"float32"),Tensor([16, 192, 40, 40],"float32"),Tensor([16, 192, 40, 40],"float32"),Tensor([16, 192, 40, 40],"float32"),Tensor([16, 192, 40, 40],"float32"),Tensor([16, 192, 40, 40],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 1024, 40, 40],"float16"),Tensor([16, 192, 40, 40],"float32"),Tensor([16, 192, 40, 40],"float32"),Tensor([16, 192, 40, 40],"float32"),Tensor([16, 192, 40, 40],"float32"),Tensor([16, 192, 40, 40],"float32"),Tensor([16, 192, 40, 40],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:48:26.992147 test begin: paddle.concat(list[Tensor([16, 128, 80, 80],"float32"),Tensor([16, 96, 80, 80],"float16"),Tensor([16, 96, 80, 80],"float16"),Tensor([16, 96, 80, 80],"float16"),Tensor([16, 96, 80, 80],"float16"),Tensor([16, 96, 80, 80],"float16"),Tensor([16, 96, 80, 80],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 128, 80, 80],"float32"),Tensor([16, 96, 80, 80],"float16"),Tensor([16, 96, 80, 80],"float16"),Tensor([16, 96, 80, 80],"float16"),Tensor([16, 96, 80, 80],"float16"),Tensor([16, 96, 80, 80],"float16"),Tensor([16, 96, 80, 80],"float16"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:48:29.933903 test begin: paddle.concat(list[Tensor([16, 192, 20, 20],"float16"),Tensor([16, 192, 20, 20],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 192, 20, 20],"float16"),Tensor([16, 192, 20, 20],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:48:30.211270 test begin: paddle.concat(list[Tensor([16, 192, 22, 22],"float16"),Tensor([16, 192, 22, 22],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 192, 22, 22],"float16"),Tensor([16, 192, 22, 22],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:48:30.500338 test begin: paddle.concat(list[Tensor([16, 192, 24, 24],"float16"),Tensor([16, 192, 24, 24],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 192, 24, 24],"float16"),Tensor([16, 192, 24, 24],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:48:30.791878 test begin: paddle.concat(list[Tensor([16, 192, 26, 26],"float16"),Tensor([16, 192, 26, 26],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 192, 26, 26],"float16"),Tensor([16, 192, 26, 26],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:48:31.108674 test begin: paddle.concat(list[Tensor([16, 192, 28, 28],"float16"),Tensor([16, 192, 28, 28],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 192, 28, 28],"float16"),Tensor([16, 192, 28, 28],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:48:31.426753 test begin: paddle.concat(list[Tensor([16, 192, 30, 30],"float16"),Tensor([16, 192, 30, 30],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 192, 30, 30],"float16"),Tensor([16, 192, 30, 30],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:48:31.801436 test begin: paddle.concat(list[Tensor([16, 192, 32, 32],"float16"),Tensor([16, 192, 32, 32],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 192, 32, 32],"float16"),Tensor([16, 192, 32, 32],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:48:32.222898 test begin: paddle.concat(list[Tensor([16, 192, 34, 34],"float16"),Tensor([16, 192, 34, 34],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 192, 34, 34],"float16"),Tensor([16, 192, 34, 34],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:48:32.610240 test begin: paddle.concat(list[Tensor([16, 192, 36, 36],"float16"),Tensor([16, 192, 36, 36],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 192, 36, 36],"float16"),Tensor([16, 192, 36, 36],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:48:33.085257 test begin: paddle.concat(list[Tensor([16, 192, 38, 38],"float16"),Tensor([16, 192, 38, 38],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 192, 38, 38],"float16"),Tensor([16, 192, 38, 38],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:48:33.546629 test begin: paddle.concat(list[Tensor([16, 192, 40, 40],"float16"),Tensor([16, 192, 40, 40],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 192, 40, 40],"float16"),Tensor([16, 192, 40, 40],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:48:34.115062 test begin: paddle.concat(list[Tensor([16, 192, 40, 40],"float32"),Tensor([16, 256, 40, 40],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 192, 40, 40],"float32"),Tensor([16, 256, 40, 40],"float16"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:48:34.686523 test begin: paddle.concat(list[Tensor([16, 192, 42, 42],"float16"),Tensor([16, 192, 42, 42],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 192, 42, 42],"float16"),Tensor([16, 192, 42, 42],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:48:35.338590 test begin: paddle.concat(list[Tensor([16, 192, 44, 44],"float16"),Tensor([16, 192, 44, 44],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 192, 44, 44],"float16"),Tensor([16, 192, 44, 44],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:48:35.909476 test begin: paddle.concat(list[Tensor([16, 192, 44, 44],"float32"),Tensor([16, 256, 44, 44],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 192, 44, 44],"float32"),Tensor([16, 256, 44, 44],"float16"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:48:36.620611 test begin: paddle.concat(list[Tensor([16, 192, 46, 46],"float16"),Tensor([16, 192, 46, 46],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 192, 46, 46],"float16"),Tensor([16, 192, 46, 46],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:48:37.312895 test begin: paddle.concat(list[Tensor([16, 192, 48, 48],"float16"),Tensor([16, 192, 48, 48],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 192, 48, 48],"float16"),Tensor([16, 192, 48, 48],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:48:38.050995 test begin: paddle.concat(list[Tensor([16, 192, 48, 48],"float32"),Tensor([16, 256, 48, 48],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 192, 48, 48],"float32"),Tensor([16, 256, 48, 48],"float16"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:48:38.858284 test begin: paddle.concat(list[Tensor([16, 192, 52, 52],"float32"),Tensor([16, 256, 52, 52],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 192, 52, 52],"float32"),Tensor([16, 256, 52, 52],"float16"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:48:39.870907 test begin: paddle.concat(list[Tensor([16, 192, 56, 56],"float32"),Tensor([16, 256, 56, 56],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 192, 56, 56],"float32"),Tensor([16, 256, 56, 56],"float16"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:48:41.023041 test begin: paddle.concat(list[Tensor([16, 192, 60, 60],"float32"),Tensor([16, 256, 60, 60],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 192, 60, 60],"float32"),Tensor([16, 256, 60, 60],"float16"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:48:42.228414 test begin: paddle.concat(list[Tensor([16, 192, 64, 64],"float32"),Tensor([16, 256, 64, 64],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 192, 64, 64],"float32"),Tensor([16, 256, 64, 64],"float16"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:48:43.748623 test begin: paddle.concat(list[Tensor([16, 192, 68, 68],"float32"),Tensor([16, 256, 68, 68],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 192, 68, 68],"float32"),Tensor([16, 256, 68, 68],"float16"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:48:45.259646 test begin: paddle.concat(list[Tensor([16, 192, 72, 72],"float32"),Tensor([16, 256, 72, 72],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 192, 72, 72],"float32"),Tensor([16, 256, 72, 72],"float16"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:48:46.967900 test begin: paddle.concat(list[Tensor([16, 192, 76, 76],"float32"),Tensor([16, 256, 76, 76],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 192, 76, 76],"float32"),Tensor([16, 256, 76, 76],"float16"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:48:48.857956 test begin: paddle.concat(list[Tensor([16, 192, 80, 80],"float32"),Tensor([16, 256, 80, 80],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 192, 80, 80],"float32"),Tensor([16, 256, 80, 80],"float16"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:48:50.762386 test begin: paddle.concat(list[Tensor([16, 192, 84, 84],"float32"),Tensor([16, 256, 84, 84],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 192, 84, 84],"float32"),Tensor([16, 256, 84, 84],"float16"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:48:52.954231 test begin: paddle.concat(list[Tensor([16, 192, 88, 88],"float32"),Tensor([16, 256, 88, 88],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 192, 88, 88],"float32"),Tensor([16, 256, 88, 88],"float16"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:48:55.239943 test begin: paddle.concat(list[Tensor([16, 192, 92, 92],"float32"),Tensor([16, 256, 92, 92],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 192, 92, 92],"float32"),Tensor([16, 256, 92, 92],"float16"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:48:57.806078 test begin: paddle.concat(list[Tensor([16, 192, 96, 96],"float32"),Tensor([16, 256, 96, 96],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 192, 96, 96],"float32"),Tensor([16, 256, 96, 96],"float16"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:49:00.782595 test begin: paddle.concat(list[Tensor([16, 256, 40, 40],"float32"),Tensor([16, 256, 40, 40],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 256, 40, 40],"float32"),Tensor([16, 256, 40, 40],"float16"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:49:01.512410 test begin: paddle.concat(list[Tensor([16, 256, 80, 80],"float32"),Tensor([16, 256, 80, 80],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 256, 80, 80],"float32"),Tensor([16, 256, 80, 80],"float16"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:49:03.949160 test begin: paddle.concat(list[Tensor([16, 384, 10, 10],"float16"),Tensor([16, 384, 10, 10],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 384, 10, 10],"float16"),Tensor([16, 384, 10, 10],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:49:04.174220 test begin: paddle.concat(list[Tensor([16, 384, 11, 11],"float16"),Tensor([16, 384, 11, 11],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 384, 11, 11],"float16"),Tensor([16, 384, 11, 11],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:49:04.412634 test begin: paddle.concat(list[Tensor([16, 384, 12, 12],"float16"),Tensor([16, 384, 12, 12],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 384, 12, 12],"float16"),Tensor([16, 384, 12, 12],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:49:04.584121 test begin: paddle.concat(list[Tensor([16, 384, 13, 13],"float16"),Tensor([16, 384, 13, 13],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 384, 13, 13],"float16"),Tensor([16, 384, 13, 13],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:49:04.838789 test begin: paddle.concat(list[Tensor([16, 384, 14, 14],"float16"),Tensor([16, 384, 14, 14],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 384, 14, 14],"float16"),Tensor([16, 384, 14, 14],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:49:05.103280 test begin: paddle.concat(list[Tensor([16, 384, 15, 15],"float16"),Tensor([16, 384, 15, 15],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 384, 15, 15],"float16"),Tensor([16, 384, 15, 15],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:49:05.423131 test begin: paddle.concat(list[Tensor([16, 384, 16, 16],"float16"),Tensor([16, 384, 16, 16],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 384, 16, 16],"float16"),Tensor([16, 384, 16, 16],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:49:05.711920 test begin: paddle.concat(list[Tensor([16, 384, 17, 17],"float16"),Tensor([16, 384, 17, 17],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 384, 17, 17],"float16"),Tensor([16, 384, 17, 17],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:49:06.094197 test begin: paddle.concat(list[Tensor([16, 384, 18, 18],"float16"),Tensor([16, 384, 18, 18],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 384, 18, 18],"float16"),Tensor([16, 384, 18, 18],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:49:06.413661 test begin: paddle.concat(list[Tensor([16, 384, 19, 19],"float16"),Tensor([16, 384, 19, 19],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 384, 19, 19],"float16"),Tensor([16, 384, 19, 19],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:49:06.773877 test begin: paddle.concat(list[Tensor([16, 384, 20, 20],"float16"),Tensor([16, 384, 20, 20],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 384, 20, 20],"float16"),Tensor([16, 384, 20, 20],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:49:07.149584 test begin: paddle.concat(list[Tensor([16, 384, 20, 20],"float32"),Tensor([16, 512, 20, 20],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 384, 20, 20],"float32"),Tensor([16, 512, 20, 20],"float16"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:49:07.504362 test begin: paddle.concat(list[Tensor([16, 384, 21, 21],"float16"),Tensor([16, 384, 21, 21],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 384, 21, 21],"float16"),Tensor([16, 384, 21, 21],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:49:07.904485 test begin: paddle.concat(list[Tensor([16, 384, 22, 22],"float16"),Tensor([16, 384, 22, 22],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 384, 22, 22],"float16"),Tensor([16, 384, 22, 22],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:49:08.309979 test begin: paddle.concat(list[Tensor([16, 384, 22, 22],"float32"),Tensor([16, 512, 22, 22],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 384, 22, 22],"float32"),Tensor([16, 512, 22, 22],"float16"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:49:08.679228 test begin: paddle.concat(list[Tensor([16, 384, 23, 23],"float16"),Tensor([16, 384, 23, 23],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 384, 23, 23],"float16"),Tensor([16, 384, 23, 23],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:49:09.069651 test begin: paddle.concat(list[Tensor([16, 384, 24, 24],"float16"),Tensor([16, 384, 24, 24],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 384, 24, 24],"float16"),Tensor([16, 384, 24, 24],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:49:09.511809 test begin: paddle.concat(list[Tensor([16, 384, 24, 24],"float32"),Tensor([16, 512, 24, 24],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 384, 24, 24],"float32"),Tensor([16, 512, 24, 24],"float16"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:49:10.005127 test begin: paddle.concat(list[Tensor([16, 384, 26, 26],"float32"),Tensor([16, 512, 26, 26],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 384, 26, 26],"float32"),Tensor([16, 512, 26, 26],"float16"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:49:10.557487 test begin: paddle.concat(list[Tensor([16, 384, 28, 28],"float32"),Tensor([16, 512, 28, 28],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 384, 28, 28],"float32"),Tensor([16, 512, 28, 28],"float16"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:49:11.206627 test begin: paddle.concat(list[Tensor([16, 384, 30, 30],"float32"),Tensor([16, 512, 30, 30],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 384, 30, 30],"float32"),Tensor([16, 512, 30, 30],"float16"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:49:11.901464 test begin: paddle.concat(list[Tensor([16, 384, 32, 32],"float32"),Tensor([16, 512, 32, 32],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 384, 32, 32],"float32"),Tensor([16, 512, 32, 32],"float16"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:49:12.704669 test begin: paddle.concat(list[Tensor([16, 384, 34, 34],"float32"),Tensor([16, 512, 34, 34],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 384, 34, 34],"float32"),Tensor([16, 512, 34, 34],"float16"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:49:13.526113 test begin: paddle.concat(list[Tensor([16, 384, 36, 36],"float32"),Tensor([16, 512, 36, 36],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 384, 36, 36],"float32"),Tensor([16, 512, 36, 36],"float16"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:49:14.469987 test begin: paddle.concat(list[Tensor([16, 384, 38, 38],"float32"),Tensor([16, 512, 38, 38],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 384, 38, 38],"float32"),Tensor([16, 512, 38, 38],"float16"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:49:15.551349 test begin: paddle.concat(list[Tensor([16, 384, 40, 40],"float32"),Tensor([16, 512, 40, 40],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 384, 40, 40],"float32"),Tensor([16, 512, 40, 40],"float16"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:49:16.602250 test begin: paddle.concat(list[Tensor([16, 384, 42, 42],"float32"),Tensor([16, 512, 42, 42],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 384, 42, 42],"float32"),Tensor([16, 512, 42, 42],"float16"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:49:17.819786 test begin: paddle.concat(list[Tensor([16, 384, 44, 44],"float32"),Tensor([16, 512, 44, 44],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 384, 44, 44],"float32"),Tensor([16, 512, 44, 44],"float16"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:49:19.082004 test begin: paddle.concat(list[Tensor([16, 384, 46, 46],"float32"),Tensor([16, 512, 46, 46],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 384, 46, 46],"float32"),Tensor([16, 512, 46, 46],"float16"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:49:20.590727 test begin: paddle.concat(list[Tensor([16, 384, 48, 48],"float32"),Tensor([16, 512, 48, 48],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 384, 48, 48],"float32"),Tensor([16, 512, 48, 48],"float16"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:49:22.082894 test begin: paddle.concat(list[Tensor([16, 48, 104, 104],"float16"),Tensor([16, 48, 104, 104],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 48, 104, 104],"float16"),Tensor([16, 48, 104, 104],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:49:22.928800 test begin: paddle.concat(list[Tensor([16, 48, 112, 112],"float16"),Tensor([16, 48, 112, 112],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 48, 112, 112],"float16"),Tensor([16, 48, 112, 112],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:49:23.797208 test begin: paddle.concat(list[Tensor([16, 48, 120, 120],"float16"),Tensor([16, 48, 120, 120],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 48, 120, 120],"float16"),Tensor([16, 48, 120, 120],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:49:24.918741 test begin: paddle.concat(list[Tensor([16, 48, 128, 128],"float16"),Tensor([16, 48, 128, 128],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 48, 128, 128],"float16"),Tensor([16, 48, 128, 128],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:49:26.107077 test begin: paddle.concat(list[Tensor([16, 48, 136, 136],"float16"),Tensor([16, 48, 136, 136],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 48, 136, 136],"float16"),Tensor([16, 48, 136, 136],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:49:27.532804 test begin: paddle.concat(list[Tensor([16, 48, 144, 144],"float16"),Tensor([16, 48, 144, 144],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 48, 144, 144],"float16"),Tensor([16, 48, 144, 144],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:49:28.991081 test begin: paddle.concat(list[Tensor([16, 48, 152, 152],"float16"),Tensor([16, 48, 152, 152],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 48, 152, 152],"float16"),Tensor([16, 48, 152, 152],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:49:30.793514 test begin: paddle.concat(list[Tensor([16, 48, 160, 160],"float16"),Tensor([16, 48, 160, 160],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 48, 160, 160],"float16"),Tensor([16, 48, 160, 160],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:49:32.483031 test begin: paddle.concat(list[Tensor([16, 48, 168, 168],"float16"),Tensor([16, 48, 168, 168],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 48, 168, 168],"float16"),Tensor([16, 48, 168, 168],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:49:34.558836 test begin: paddle.concat(list[Tensor([16, 48, 176, 176],"float16"),Tensor([16, 48, 176, 176],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 48, 176, 176],"float16"),Tensor([16, 48, 176, 176],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:49:36.649973 test begin: paddle.concat(list[Tensor([16, 48, 184, 184],"float16"),Tensor([16, 48, 184, 184],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 48, 184, 184],"float16"),Tensor([16, 48, 184, 184],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:49:39.538511 test begin: paddle.concat(list[Tensor([16, 48, 192, 192],"float16"),Tensor([16, 48, 192, 192],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 48, 192, 192],"float16"),Tensor([16, 48, 192, 192],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:49:42.633255 test begin: paddle.concat(list[Tensor([16, 48, 80, 80],"float16"),Tensor([16, 48, 80, 80],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 48, 80, 80],"float16"),Tensor([16, 48, 80, 80],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:49:43.262504 test begin: paddle.concat(list[Tensor([16, 48, 88, 88],"float16"),Tensor([16, 48, 88, 88],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 48, 88, 88],"float16"),Tensor([16, 48, 88, 88],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:49:43.834424 test begin: paddle.concat(list[Tensor([16, 48, 96, 96],"float16"),Tensor([16, 48, 96, 96],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 48, 96, 96],"float16"),Tensor([16, 48, 96, 96],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:49:44.527252 test begin: paddle.concat(list[Tensor([16, 512, 40, 40],"float32"),Tensor([16, 512, 40, 40],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 512, 40, 40],"float32"),Tensor([16, 512, 40, 40],"float16"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:49:45.773792 test begin: paddle.concat(list[Tensor([16, 64, 160, 160],"float32"),Tensor([16, 64, 160, 160],"float32"),Tensor([16, 64, 160, 160],"float32"),Tensor([16, 64, 160, 160],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 64, 160, 160],"float32"),Tensor([16, 64, 160, 160],"float32"),Tensor([16, 64, 160, 160],"float32"),Tensor([16, 64, 160, 160],"float16"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 3th tensor is float16. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:49:50.042403 test begin: paddle.concat(list[Tensor([16, 96, 40, 40],"float16"),Tensor([16, 96, 40, 40],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 96, 40, 40],"float16"),Tensor([16, 96, 40, 40],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:49:50.329985 test begin: paddle.concat(list[Tensor([16, 96, 44, 44],"float16"),Tensor([16, 96, 44, 44],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 96, 44, 44],"float16"),Tensor([16, 96, 44, 44],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:49:50.715349 test begin: paddle.concat(list[Tensor([16, 96, 48, 48],"float16"),Tensor([16, 96, 48, 48],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 96, 48, 48],"float16"),Tensor([16, 96, 48, 48],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:49:51.200679 test begin: paddle.concat(list[Tensor([16, 96, 52, 52],"float16"),Tensor([16, 96, 52, 52],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 96, 52, 52],"float16"),Tensor([16, 96, 52, 52],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:49:51.748646 test begin: paddle.concat(list[Tensor([16, 96, 56, 56],"float16"),Tensor([16, 96, 56, 56],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 96, 56, 56],"float16"),Tensor([16, 96, 56, 56],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:49:52.277002 test begin: paddle.concat(list[Tensor([16, 96, 60, 60],"float16"),Tensor([16, 96, 60, 60],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 96, 60, 60],"float16"),Tensor([16, 96, 60, 60],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:49:52.835577 test begin: paddle.concat(list[Tensor([16, 96, 64, 64],"float16"),Tensor([16, 96, 64, 64],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 96, 64, 64],"float16"),Tensor([16, 96, 64, 64],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:49:53.530287 test begin: paddle.concat(list[Tensor([16, 96, 68, 68],"float16"),Tensor([16, 96, 68, 68],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 96, 68, 68],"float16"),Tensor([16, 96, 68, 68],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:49:54.315762 test begin: paddle.concat(list[Tensor([16, 96, 72, 72],"float16"),Tensor([16, 96, 72, 72],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 96, 72, 72],"float16"),Tensor([16, 96, 72, 72],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:49:55.174304 test begin: paddle.concat(list[Tensor([16, 96, 76, 76],"float16"),Tensor([16, 96, 76, 76],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 96, 76, 76],"float16"),Tensor([16, 96, 76, 76],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:49:56.134134 test begin: paddle.concat(list[Tensor([16, 96, 80, 80],"float16"),Tensor([16, 96, 80, 80],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 96, 80, 80],"float16"),Tensor([16, 96, 80, 80],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:49:57.062001 test begin: paddle.concat(list[Tensor([16, 96, 84, 84],"float16"),Tensor([16, 96, 84, 84],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 96, 84, 84],"float16"),Tensor([16, 96, 84, 84],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:49:58.067064 test begin: paddle.concat(list[Tensor([16, 96, 88, 88],"float16"),Tensor([16, 96, 88, 88],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 96, 88, 88],"float16"),Tensor([16, 96, 88, 88],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:49:59.221828 test begin: paddle.concat(list[Tensor([16, 96, 92, 92],"float16"),Tensor([16, 96, 92, 92],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 96, 92, 92],"float16"),Tensor([16, 96, 92, 92],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:50:00.411587 test begin: paddle.concat(list[Tensor([16, 96, 96, 96],"float16"),Tensor([16, 96, 96, 96],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([16, 96, 96, 96],"float16"),Tensor([16, 96, 96, 96],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:50:01.829673 test begin: paddle.concat(list[Tensor([2, 256, 128, 128],"float32"),Tensor([2, 48, 128, 128],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([2, 256, 128, 128],"float32"),Tensor([2, 48, 128, 128],"float16"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:50:02.439454 test begin: paddle.concat(list[Tensor([2, 256, 64, 64],"float16"),Tensor([2, 256, 64, 64],"float16"),Tensor([2, 256, 64, 64],"float16"),Tensor([2, 256, 64, 64],"float16"),Tensor([2, 256, 64, 64],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([2, 256, 64, 64],"float16"),Tensor([2, 256, 64, 64],"float16"),Tensor([2, 256, 64, 64],"float16"),Tensor([2, 256, 64, 64],"float16"),Tensor([2, 256, 64, 64],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 4th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:50:03.314450 test begin: paddle.concat(list[Tensor([3, 1, 512, 512],"float32"),Tensor([3, 1, 512, 512],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([3, 1, 512, 512],"float32"),Tensor([3, 1, 512, 512],"float16"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:50:03.596132 test begin: paddle.concat(list[Tensor([4, 1, 640, 640],"float16"),Tensor([4, 64, 640, 640],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 1, 640, 640],"float16"),Tensor([4, 64, 640, 640],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:50:08.738347 test begin: paddle.concat(list[Tensor([4, 128, 248, 216],"float16"),Tensor([4, 128, 248, 216],"float16"),Tensor([4, 128, 248, 216],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 128, 248, 216],"float16"),Tensor([4, 128, 248, 216],"float16"),Tensor([4, 128, 248, 216],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 2th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:50:12.346952 test begin: paddle.concat(list[Tensor([4, 128, 256, 256],"float16"),Tensor([4, 128, 256, 256],"float32"),Tensor([4, 128, 256, 256],"float32"),Tensor([4, 128, 256, 256],"float32"),], 1, )
[paddle error] paddle.concat(list[Tensor([4, 128, 256, 256],"float16"),Tensor([4, 128, 256, 256],"float32"),Tensor([4, 128, 256, 256],"float32"),Tensor([4, 128, 256, 256],"float32"),], 1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:50:18.138786 test begin: paddle.concat(list[Tensor([4, 128, 32, 32],"float16"),Tensor([4, 32, 32, 32],"float32"),Tensor([4, 32, 32, 32],"float32"),Tensor([4, 32, 32, 32],"float32"),Tensor([4, 32, 32, 32],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 128, 32, 32],"float16"),Tensor([4, 32, 32, 32],"float32"),Tensor([4, 32, 32, 32],"float32"),Tensor([4, 32, 32, 32],"float32"),Tensor([4, 32, 32, 32],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:50:18.302810 test begin: paddle.concat(list[Tensor([4, 256, 100, 136],"float16"),Tensor([4, 2, 100, 136],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 100, 136],"float16"),Tensor([4, 2, 100, 136],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:50:19.038757 test begin: paddle.concat(list[Tensor([4, 256, 100, 140],"float16"),Tensor([4, 2, 100, 140],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 100, 140],"float16"),Tensor([4, 2, 100, 140],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:50:19.736836 test begin: paddle.concat(list[Tensor([4, 256, 100, 144],"float16"),Tensor([4, 2, 100, 144],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 100, 144],"float16"),Tensor([4, 2, 100, 144],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:50:20.469080 test begin: paddle.concat(list[Tensor([4, 256, 100, 148],"float16"),Tensor([4, 2, 100, 148],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 100, 148],"float16"),Tensor([4, 2, 100, 148],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:50:21.277990 test begin: paddle.concat(list[Tensor([4, 256, 100, 152],"float16"),Tensor([4, 2, 100, 152],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 100, 152],"float16"),Tensor([4, 2, 100, 152],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:50:22.082499 test begin: paddle.concat(list[Tensor([4, 256, 100, 156],"float16"),Tensor([4, 2, 100, 156],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 100, 156],"float16"),Tensor([4, 2, 100, 156],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:50:22.966308 test begin: paddle.concat(list[Tensor([4, 256, 100, 160],"float16"),Tensor([4, 2, 100, 160],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 100, 160],"float16"),Tensor([4, 2, 100, 160],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:50:23.750105 test begin: paddle.concat(list[Tensor([4, 256, 100, 164],"float16"),Tensor([4, 2, 100, 164],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 100, 164],"float16"),Tensor([4, 2, 100, 164],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:50:24.509797 test begin: paddle.concat(list[Tensor([4, 256, 100, 168],"float16"),Tensor([4, 2, 100, 168],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 100, 168],"float16"),Tensor([4, 2, 100, 168],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:50:25.390438 test begin: paddle.concat(list[Tensor([4, 256, 104, 136],"float16"),Tensor([4, 2, 104, 136],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 104, 136],"float16"),Tensor([4, 2, 104, 136],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:50:26.121644 test begin: paddle.concat(list[Tensor([4, 256, 104, 152],"float16"),Tensor([4, 2, 104, 152],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 104, 152],"float16"),Tensor([4, 2, 104, 152],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:50:27.061756 test begin: paddle.concat(list[Tensor([4, 256, 104, 164],"float16"),Tensor([4, 2, 104, 164],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 104, 164],"float16"),Tensor([4, 2, 104, 164],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:50:27.975707 test begin: paddle.concat(list[Tensor([4, 256, 104, 168],"float16"),Tensor([4, 2, 104, 168],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 104, 168],"float16"),Tensor([4, 2, 104, 168],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:50:28.894250 test begin: paddle.concat(list[Tensor([4, 256, 108, 148],"float16"),Tensor([4, 2, 108, 148],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 108, 148],"float16"),Tensor([4, 2, 108, 148],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:50:29.801162 test begin: paddle.concat(list[Tensor([4, 256, 108, 152],"float16"),Tensor([4, 2, 108, 152],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 108, 152],"float16"),Tensor([4, 2, 108, 152],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:50:30.628392 test begin: paddle.concat(list[Tensor([4, 256, 108, 156],"float16"),Tensor([4, 2, 108, 156],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 108, 156],"float16"),Tensor([4, 2, 108, 156],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:50:31.429721 test begin: paddle.concat(list[Tensor([4, 256, 112, 152],"float16"),Tensor([4, 2, 112, 152],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 112, 152],"float16"),Tensor([4, 2, 112, 152],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:50:32.340382 test begin: paddle.concat(list[Tensor([4, 256, 116, 152],"float16"),Tensor([4, 2, 116, 152],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 116, 152],"float16"),Tensor([4, 2, 116, 152],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:50:33.236741 test begin: paddle.concat(list[Tensor([4, 256, 116, 160],"float16"),Tensor([4, 2, 116, 160],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 116, 160],"float16"),Tensor([4, 2, 116, 160],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:50:34.212657 test begin: paddle.concat(list[Tensor([4, 256, 120, 152],"float16"),Tensor([4, 2, 120, 152],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 120, 152],"float16"),Tensor([4, 2, 120, 152],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:50:35.170292 test begin: paddle.concat(list[Tensor([4, 256, 124, 136],"float16"),Tensor([4, 2, 124, 136],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 124, 136],"float16"),Tensor([4, 2, 124, 136],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:50:36.054963 test begin: paddle.concat(list[Tensor([4, 256, 124, 152],"float16"),Tensor([4, 2, 124, 152],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 124, 152],"float16"),Tensor([4, 2, 124, 152],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:50:37.064965 test begin: paddle.concat(list[Tensor([4, 256, 124, 168],"float16"),Tensor([4, 2, 124, 168],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 124, 168],"float16"),Tensor([4, 2, 124, 168],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:50:38.096070 test begin: paddle.concat(list[Tensor([4, 256, 128, 128],"float32"),Tensor([4, 48, 128, 128],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 128, 128],"float32"),Tensor([4, 48, 128, 128],"float16"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:50:39.165131 test begin: paddle.concat(list[Tensor([4, 256, 128, 136],"float16"),Tensor([4, 2, 128, 136],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 128, 136],"float16"),Tensor([4, 2, 128, 136],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:50:39.999029 test begin: paddle.concat(list[Tensor([4, 256, 128, 152],"float16"),Tensor([4, 2, 128, 152],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 128, 152],"float16"),Tensor([4, 2, 128, 152],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:50:41.004408 test begin: paddle.concat(list[Tensor([4, 256, 128, 168],"float16"),Tensor([4, 2, 128, 168],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 128, 168],"float16"),Tensor([4, 2, 128, 168],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:50:42.172895 test begin: paddle.concat(list[Tensor([4, 256, 128, 256],"float32"),Tensor([4, 48, 128, 256],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 128, 256],"float32"),Tensor([4, 48, 128, 256],"float16"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:50:44.005415 test begin: paddle.concat(list[Tensor([4, 256, 132, 144],"float16"),Tensor([4, 2, 132, 144],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 132, 144],"float16"),Tensor([4, 2, 132, 144],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:50:45.114453 test begin: paddle.concat(list[Tensor([4, 256, 132, 148],"float16"),Tensor([4, 2, 132, 148],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 132, 148],"float16"),Tensor([4, 2, 132, 148],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:50:46.173665 test begin: paddle.concat(list[Tensor([4, 256, 132, 152],"float16"),Tensor([4, 2, 132, 152],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 132, 152],"float16"),Tensor([4, 2, 132, 152],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:50:47.290043 test begin: paddle.concat(list[Tensor([4, 256, 132, 160],"float16"),Tensor([4, 2, 132, 160],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 132, 160],"float16"),Tensor([4, 2, 132, 160],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:50:48.316508 test begin: paddle.concat(list[Tensor([4, 256, 132, 168],"float16"),Tensor([4, 2, 132, 168],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 132, 168],"float16"),Tensor([4, 2, 132, 168],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:50:49.325450 test begin: paddle.concat(list[Tensor([4, 256, 136, 100],"float16"),Tensor([4, 2, 136, 100],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 136, 100],"float16"),Tensor([4, 2, 136, 100],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:50:50.101708 test begin: paddle.concat(list[Tensor([4, 256, 136, 108],"float16"),Tensor([4, 2, 136, 108],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 136, 108],"float16"),Tensor([4, 2, 136, 108],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:50:50.922676 test begin: paddle.concat(list[Tensor([4, 256, 136, 136],"float16"),Tensor([4, 2, 136, 136],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 136, 136],"float16"),Tensor([4, 2, 136, 136],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:50:51.819680 test begin: paddle.concat(list[Tensor([4, 256, 136, 140],"float16"),Tensor([4, 2, 136, 140],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 136, 140],"float16"),Tensor([4, 2, 136, 140],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:50:52.700962 test begin: paddle.concat(list[Tensor([4, 256, 136, 148],"float16"),Tensor([4, 2, 136, 148],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 136, 148],"float16"),Tensor([4, 2, 136, 148],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:50:53.836464 test begin: paddle.concat(list[Tensor([4, 256, 136, 152],"float16"),Tensor([4, 2, 136, 152],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 136, 152],"float16"),Tensor([4, 2, 136, 152],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:50:54.864363 test begin: paddle.concat(list[Tensor([4, 256, 136, 156],"float16"),Tensor([4, 2, 136, 156],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 136, 156],"float16"),Tensor([4, 2, 136, 156],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:50:55.966399 test begin: paddle.concat(list[Tensor([4, 256, 136, 160],"float16"),Tensor([4, 2, 136, 160],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 136, 160],"float16"),Tensor([4, 2, 136, 160],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:50:57.036433 test begin: paddle.concat(list[Tensor([4, 256, 136, 164],"float16"),Tensor([4, 2, 136, 164],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 136, 164],"float16"),Tensor([4, 2, 136, 164],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:50:58.220607 test begin: paddle.concat(list[Tensor([4, 256, 136, 168],"float16"),Tensor([4, 2, 136, 168],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 136, 168],"float16"),Tensor([4, 2, 136, 168],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:50:59.376097 test begin: paddle.concat(list[Tensor([4, 256, 140, 136],"float16"),Tensor([4, 2, 140, 136],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 140, 136],"float16"),Tensor([4, 2, 140, 136],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:51:00.351094 test begin: paddle.concat(list[Tensor([4, 256, 140, 140],"float16"),Tensor([4, 2, 140, 140],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 140, 140],"float16"),Tensor([4, 2, 140, 140],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:51:01.354953 test begin: paddle.concat(list[Tensor([4, 256, 140, 152],"float16"),Tensor([4, 2, 140, 152],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 140, 152],"float16"),Tensor([4, 2, 140, 152],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:51:02.344843 test begin: paddle.concat(list[Tensor([4, 256, 140, 156],"float16"),Tensor([4, 2, 140, 156],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 140, 156],"float16"),Tensor([4, 2, 140, 156],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:51:03.359039 test begin: paddle.concat(list[Tensor([4, 256, 140, 164],"float16"),Tensor([4, 2, 140, 164],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 140, 164],"float16"),Tensor([4, 2, 140, 164],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:51:04.557350 test begin: paddle.concat(list[Tensor([4, 256, 140, 168],"float16"),Tensor([4, 2, 140, 168],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 140, 168],"float16"),Tensor([4, 2, 140, 168],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:51:05.699692 test begin: paddle.concat(list[Tensor([4, 256, 144, 136],"float16"),Tensor([4, 2, 144, 136],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 144, 136],"float16"),Tensor([4, 2, 144, 136],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:51:06.599481 test begin: paddle.concat(list[Tensor([4, 256, 144, 152],"float16"),Tensor([4, 2, 144, 152],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 144, 152],"float16"),Tensor([4, 2, 144, 152],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:51:07.666362 test begin: paddle.concat(list[Tensor([4, 256, 144, 168],"float16"),Tensor([4, 2, 144, 168],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 144, 168],"float16"),Tensor([4, 2, 144, 168],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:51:08.879561 test begin: paddle.concat(list[Tensor([4, 256, 148, 136],"float16"),Tensor([4, 2, 148, 136],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 148, 136],"float16"),Tensor([4, 2, 148, 136],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:51:09.913887 test begin: paddle.concat(list[Tensor([4, 256, 148, 152],"float16"),Tensor([4, 2, 148, 152],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 148, 152],"float16"),Tensor([4, 2, 148, 152],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:51:10.959721 test begin: paddle.concat(list[Tensor([4, 256, 148, 164],"float16"),Tensor([4, 2, 148, 164],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 148, 164],"float16"),Tensor([4, 2, 148, 164],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:51:12.206473 test begin: paddle.concat(list[Tensor([4, 256, 148, 168],"float16"),Tensor([4, 2, 148, 168],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 148, 168],"float16"),Tensor([4, 2, 148, 168],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:51:13.383512 test begin: paddle.concat(list[Tensor([4, 256, 152, 100],"float16"),Tensor([4, 2, 152, 100],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 152, 100],"float16"),Tensor([4, 2, 152, 100],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:51:14.169863 test begin: paddle.concat(list[Tensor([4, 256, 152, 108],"float16"),Tensor([4, 2, 152, 108],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 152, 108],"float16"),Tensor([4, 2, 152, 108],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:51:15.175755 test begin: paddle.concat(list[Tensor([4, 256, 152, 132],"float16"),Tensor([4, 2, 152, 132],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 152, 132],"float16"),Tensor([4, 2, 152, 132],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:51:16.091232 test begin: paddle.concat(list[Tensor([4, 256, 152, 136],"float16"),Tensor([4, 2, 152, 136],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 152, 136],"float16"),Tensor([4, 2, 152, 136],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:51:17.082744 test begin: paddle.concat(list[Tensor([4, 256, 152, 140],"float16"),Tensor([4, 2, 152, 140],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 152, 140],"float16"),Tensor([4, 2, 152, 140],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:51:18.240345 test begin: paddle.concat(list[Tensor([4, 256, 152, 144],"float16"),Tensor([4, 2, 152, 144],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 152, 144],"float16"),Tensor([4, 2, 152, 144],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:51:19.367924 test begin: paddle.concat(list[Tensor([4, 256, 152, 148],"float16"),Tensor([4, 2, 152, 148],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 152, 148],"float16"),Tensor([4, 2, 152, 148],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:51:20.560147 test begin: paddle.concat(list[Tensor([4, 256, 152, 152],"float16"),Tensor([4, 2, 152, 152],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 152, 152],"float16"),Tensor([4, 2, 152, 152],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:51:21.688395 test begin: paddle.concat(list[Tensor([4, 256, 152, 156],"float16"),Tensor([4, 2, 152, 156],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 152, 156],"float16"),Tensor([4, 2, 152, 156],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:51:23.014295 test begin: paddle.concat(list[Tensor([4, 256, 152, 160],"float16"),Tensor([4, 2, 152, 160],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 152, 160],"float16"),Tensor([4, 2, 152, 160],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:51:24.204485 test begin: paddle.concat(list[Tensor([4, 256, 152, 164],"float16"),Tensor([4, 2, 152, 164],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 152, 164],"float16"),Tensor([4, 2, 152, 164],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:51:25.355045 test begin: paddle.concat(list[Tensor([4, 256, 152, 168],"float16"),Tensor([4, 2, 152, 168],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 152, 168],"float16"),Tensor([4, 2, 152, 168],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:51:26.715120 test begin: paddle.concat(list[Tensor([4, 256, 156, 136],"float16"),Tensor([4, 2, 156, 136],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 156, 136],"float16"),Tensor([4, 2, 156, 136],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:51:27.765991 test begin: paddle.concat(list[Tensor([4, 256, 156, 148],"float16"),Tensor([4, 2, 156, 148],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 156, 148],"float16"),Tensor([4, 2, 156, 148],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:51:29.065433 test begin: paddle.concat(list[Tensor([4, 256, 156, 152],"float16"),Tensor([4, 2, 156, 152],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 156, 152],"float16"),Tensor([4, 2, 156, 152],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:51:30.234477 test begin: paddle.concat(list[Tensor([4, 256, 156, 168],"float16"),Tensor([4, 2, 156, 168],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 156, 168],"float16"),Tensor([4, 2, 156, 168],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:51:31.663560 test begin: paddle.concat(list[Tensor([4, 256, 160, 136],"float16"),Tensor([4, 2, 160, 136],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 160, 136],"float16"),Tensor([4, 2, 160, 136],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:51:32.728692 test begin: paddle.concat(list[Tensor([4, 256, 160, 152],"float16"),Tensor([4, 2, 160, 152],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 160, 152],"float16"),Tensor([4, 2, 160, 152],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:51:34.049054 test begin: paddle.concat(list[Tensor([4, 256, 160, 160],"float16"),Tensor([4, 2, 160, 160],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 160, 160],"float16"),Tensor([4, 2, 160, 160],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:51:35.375823 test begin: paddle.concat(list[Tensor([4, 256, 164, 100],"float16"),Tensor([4, 2, 164, 100],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 164, 100],"float16"),Tensor([4, 2, 164, 100],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:51:36.285253 test begin: paddle.concat(list[Tensor([4, 256, 164, 136],"float16"),Tensor([4, 2, 164, 136],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 164, 136],"float16"),Tensor([4, 2, 164, 136],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:51:37.352535 test begin: paddle.concat(list[Tensor([4, 256, 164, 148],"float16"),Tensor([4, 2, 164, 148],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 164, 148],"float16"),Tensor([4, 2, 164, 148],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:51:38.649769 test begin: paddle.concat(list[Tensor([4, 256, 164, 152],"float16"),Tensor([4, 2, 164, 152],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 164, 152],"float16"),Tensor([4, 2, 164, 152],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:51:39.800317 test begin: paddle.concat(list[Tensor([4, 256, 168, 100],"float16"),Tensor([4, 2, 168, 100],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 168, 100],"float16"),Tensor([4, 2, 168, 100],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:51:40.678126 test begin: paddle.concat(list[Tensor([4, 256, 168, 136],"float16"),Tensor([4, 2, 168, 136],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 168, 136],"float16"),Tensor([4, 2, 168, 136],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:51:41.785522 test begin: paddle.concat(list[Tensor([4, 256, 168, 140],"float16"),Tensor([4, 2, 168, 140],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 168, 140],"float16"),Tensor([4, 2, 168, 140],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:51:42.972384 test begin: paddle.concat(list[Tensor([4, 256, 168, 152],"float16"),Tensor([4, 2, 168, 152],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 168, 152],"float16"),Tensor([4, 2, 168, 152],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:51:44.302512 test begin: paddle.concat(list[Tensor([4, 256, 168, 156],"float16"),Tensor([4, 2, 168, 156],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 168, 156],"float16"),Tensor([4, 2, 168, 156],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:51:45.645030 test begin: paddle.concat(list[Tensor([4, 256, 168, 160],"float16"),Tensor([4, 2, 168, 160],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 168, 160],"float16"),Tensor([4, 2, 168, 160],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:51:46.960057 test begin: paddle.concat(list[Tensor([4, 256, 168, 168],"float16"),Tensor([4, 2, 168, 168],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 168, 168],"float16"),Tensor([4, 2, 168, 168],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:51:48.328647 test begin: paddle.concat(list[Tensor([4, 256, 25, 34],"float16"),Tensor([4, 2, 25, 34],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 25, 34],"float16"),Tensor([4, 2, 25, 34],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:51:48.541938 test begin: paddle.concat(list[Tensor([4, 256, 25, 35],"float16"),Tensor([4, 2, 25, 35],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 25, 35],"float16"),Tensor([4, 2, 25, 35],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:51:48.740327 test begin: paddle.concat(list[Tensor([4, 256, 25, 36],"float16"),Tensor([4, 2, 25, 36],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 25, 36],"float16"),Tensor([4, 2, 25, 36],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:51:48.962516 test begin: paddle.concat(list[Tensor([4, 256, 25, 37],"float16"),Tensor([4, 2, 25, 37],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 25, 37],"float16"),Tensor([4, 2, 25, 37],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:51:49.181775 test begin: paddle.concat(list[Tensor([4, 256, 25, 38],"float16"),Tensor([4, 2, 25, 38],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 25, 38],"float16"),Tensor([4, 2, 25, 38],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:51:49.345412 test begin: paddle.concat(list[Tensor([4, 256, 25, 39],"float16"),Tensor([4, 2, 25, 39],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 25, 39],"float16"),Tensor([4, 2, 25, 39],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:51:49.532165 test begin: paddle.concat(list[Tensor([4, 256, 25, 40],"float16"),Tensor([4, 2, 25, 40],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 25, 40],"float16"),Tensor([4, 2, 25, 40],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:51:49.738095 test begin: paddle.concat(list[Tensor([4, 256, 25, 41],"float16"),Tensor([4, 2, 25, 41],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 25, 41],"float16"),Tensor([4, 2, 25, 41],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:51:49.960202 test begin: paddle.concat(list[Tensor([4, 256, 25, 42],"float16"),Tensor([4, 2, 25, 42],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 25, 42],"float16"),Tensor([4, 2, 25, 42],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:51:50.118558 test begin: paddle.concat(list[Tensor([4, 256, 256, 256],"float32"),Tensor([4, 256, 256, 256],"float32"),Tensor([4, 256, 256, 256],"float32"),Tensor([4, 256, 256, 256],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 256, 256],"float32"),Tensor([4, 256, 256, 256],"float32"),Tensor([4, 256, 256, 256],"float32"),Tensor([4, 256, 256, 256],"float16"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 3th tensor is float16. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:52:00.577072 test begin: paddle.concat(list[Tensor([4, 256, 26, 34],"float16"),Tensor([4, 2, 26, 34],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 26, 34],"float16"),Tensor([4, 2, 26, 34],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:52:00.813783 test begin: paddle.concat(list[Tensor([4, 256, 26, 38],"float16"),Tensor([4, 2, 26, 38],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 26, 38],"float16"),Tensor([4, 2, 26, 38],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:52:01.038944 test begin: paddle.concat(list[Tensor([4, 256, 26, 41],"float16"),Tensor([4, 2, 26, 41],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 26, 41],"float16"),Tensor([4, 2, 26, 41],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:52:01.278535 test begin: paddle.concat(list[Tensor([4, 256, 26, 42],"float16"),Tensor([4, 2, 26, 42],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 26, 42],"float16"),Tensor([4, 2, 26, 42],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:52:01.535542 test begin: paddle.concat(list[Tensor([4, 256, 27, 37],"float16"),Tensor([4, 2, 27, 37],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 27, 37],"float16"),Tensor([4, 2, 27, 37],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:52:01.798850 test begin: paddle.concat(list[Tensor([4, 256, 27, 38],"float16"),Tensor([4, 2, 27, 38],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 27, 38],"float16"),Tensor([4, 2, 27, 38],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:52:02.031454 test begin: paddle.concat(list[Tensor([4, 256, 27, 39],"float16"),Tensor([4, 2, 27, 39],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 27, 39],"float16"),Tensor([4, 2, 27, 39],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:52:02.266277 test begin: paddle.concat(list[Tensor([4, 256, 28, 38],"float16"),Tensor([4, 2, 28, 38],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 28, 38],"float16"),Tensor([4, 2, 28, 38],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:52:02.523697 test begin: paddle.concat(list[Tensor([4, 256, 29, 38],"float16"),Tensor([4, 2, 29, 38],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 29, 38],"float16"),Tensor([4, 2, 29, 38],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:52:02.752968 test begin: paddle.concat(list[Tensor([4, 256, 29, 40],"float16"),Tensor([4, 2, 29, 40],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 29, 40],"float16"),Tensor([4, 2, 29, 40],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:52:03.009196 test begin: paddle.concat(list[Tensor([4, 256, 30, 38],"float16"),Tensor([4, 2, 30, 38],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 30, 38],"float16"),Tensor([4, 2, 30, 38],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:52:03.276528 test begin: paddle.concat(list[Tensor([4, 256, 31, 34],"float16"),Tensor([4, 2, 31, 34],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 31, 34],"float16"),Tensor([4, 2, 31, 34],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:52:03.437317 test begin: paddle.concat(list[Tensor([4, 256, 31, 38],"float16"),Tensor([4, 2, 31, 38],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 31, 38],"float16"),Tensor([4, 2, 31, 38],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:52:03.588407 test begin: paddle.concat(list[Tensor([4, 256, 31, 42],"float16"),Tensor([4, 2, 31, 42],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 31, 42],"float16"),Tensor([4, 2, 31, 42],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:52:03.865334 test begin: paddle.concat(list[Tensor([4, 256, 32, 34],"float16"),Tensor([4, 2, 32, 34],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 32, 34],"float16"),Tensor([4, 2, 32, 34],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:52:04.122683 test begin: paddle.concat(list[Tensor([4, 256, 32, 38],"float16"),Tensor([4, 2, 32, 38],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 32, 38],"float16"),Tensor([4, 2, 32, 38],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:52:04.355509 test begin: paddle.concat(list[Tensor([4, 256, 32, 42],"float16"),Tensor([4, 2, 32, 42],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 32, 42],"float16"),Tensor([4, 2, 32, 42],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:52:04.599364 test begin: paddle.concat(list[Tensor([4, 256, 33, 36],"float16"),Tensor([4, 2, 33, 36],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 33, 36],"float16"),Tensor([4, 2, 33, 36],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:52:04.829943 test begin: paddle.concat(list[Tensor([4, 256, 33, 37],"float16"),Tensor([4, 2, 33, 37],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 33, 37],"float16"),Tensor([4, 2, 33, 37],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:52:05.057005 test begin: paddle.concat(list[Tensor([4, 256, 33, 38],"float16"),Tensor([4, 2, 33, 38],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 33, 38],"float16"),Tensor([4, 2, 33, 38],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:52:05.306216 test begin: paddle.concat(list[Tensor([4, 256, 33, 40],"float16"),Tensor([4, 2, 33, 40],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 33, 40],"float16"),Tensor([4, 2, 33, 40],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:52:05.567620 test begin: paddle.concat(list[Tensor([4, 256, 33, 42],"float16"),Tensor([4, 2, 33, 42],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 33, 42],"float16"),Tensor([4, 2, 33, 42],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:52:05.808727 test begin: paddle.concat(list[Tensor([4, 256, 34, 25],"float16"),Tensor([4, 2, 34, 25],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 34, 25],"float16"),Tensor([4, 2, 34, 25],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:52:06.038043 test begin: paddle.concat(list[Tensor([4, 256, 34, 27],"float16"),Tensor([4, 2, 34, 27],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 34, 27],"float16"),Tensor([4, 2, 34, 27],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:52:06.278001 test begin: paddle.concat(list[Tensor([4, 256, 34, 34],"float16"),Tensor([4, 2, 34, 34],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 34, 34],"float16"),Tensor([4, 2, 34, 34],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:52:06.505078 test begin: paddle.concat(list[Tensor([4, 256, 34, 35],"float16"),Tensor([4, 2, 34, 35],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 34, 35],"float16"),Tensor([4, 2, 34, 35],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:52:06.731402 test begin: paddle.concat(list[Tensor([4, 256, 34, 37],"float16"),Tensor([4, 2, 34, 37],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 34, 37],"float16"),Tensor([4, 2, 34, 37],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:52:06.994465 test begin: paddle.concat(list[Tensor([4, 256, 34, 38],"float16"),Tensor([4, 2, 34, 38],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 34, 38],"float16"),Tensor([4, 2, 34, 38],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:52:07.261341 test begin: paddle.concat(list[Tensor([4, 256, 34, 39],"float16"),Tensor([4, 2, 34, 39],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 34, 39],"float16"),Tensor([4, 2, 34, 39],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:52:07.495229 test begin: paddle.concat(list[Tensor([4, 256, 34, 40],"float16"),Tensor([4, 2, 34, 40],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 34, 40],"float16"),Tensor([4, 2, 34, 40],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:52:07.804788 test begin: paddle.concat(list[Tensor([4, 256, 34, 41],"float16"),Tensor([4, 2, 34, 41],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 34, 41],"float16"),Tensor([4, 2, 34, 41],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:52:08.049145 test begin: paddle.concat(list[Tensor([4, 256, 34, 42],"float16"),Tensor([4, 2, 34, 42],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 34, 42],"float16"),Tensor([4, 2, 34, 42],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:52:08.289568 test begin: paddle.concat(list[Tensor([4, 256, 35, 34],"float16"),Tensor([4, 2, 35, 34],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 35, 34],"float16"),Tensor([4, 2, 35, 34],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:52:08.519695 test begin: paddle.concat(list[Tensor([4, 256, 35, 35],"float16"),Tensor([4, 2, 35, 35],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 35, 35],"float16"),Tensor([4, 2, 35, 35],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:52:08.754176 test begin: paddle.concat(list[Tensor([4, 256, 35, 38],"float16"),Tensor([4, 2, 35, 38],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 35, 38],"float16"),Tensor([4, 2, 35, 38],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:52:08.993623 test begin: paddle.concat(list[Tensor([4, 256, 35, 39],"float16"),Tensor([4, 2, 35, 39],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 35, 39],"float16"),Tensor([4, 2, 35, 39],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:52:09.231140 test begin: paddle.concat(list[Tensor([4, 256, 35, 41],"float16"),Tensor([4, 2, 35, 41],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 35, 41],"float16"),Tensor([4, 2, 35, 41],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:52:09.386849 test begin: paddle.concat(list[Tensor([4, 256, 35, 42],"float16"),Tensor([4, 2, 35, 42],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 35, 42],"float16"),Tensor([4, 2, 35, 42],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:52:09.547615 test begin: paddle.concat(list[Tensor([4, 256, 36, 34],"float16"),Tensor([4, 2, 36, 34],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 36, 34],"float16"),Tensor([4, 2, 36, 34],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:52:09.698466 test begin: paddle.concat(list[Tensor([4, 256, 36, 38],"float16"),Tensor([4, 2, 36, 38],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 36, 38],"float16"),Tensor([4, 2, 36, 38],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:52:09.857489 test begin: paddle.concat(list[Tensor([4, 256, 36, 42],"float16"),Tensor([4, 2, 36, 42],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 36, 42],"float16"),Tensor([4, 2, 36, 42],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:52:10.143041 test begin: paddle.concat(list[Tensor([4, 256, 37, 34],"float16"),Tensor([4, 2, 37, 34],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 37, 34],"float16"),Tensor([4, 2, 37, 34],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:52:10.325724 test begin: paddle.concat(list[Tensor([4, 256, 37, 38],"float16"),Tensor([4, 2, 37, 38],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 37, 38],"float16"),Tensor([4, 2, 37, 38],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:52:10.494017 test begin: paddle.concat(list[Tensor([4, 256, 37, 41],"float16"),Tensor([4, 2, 37, 41],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 37, 41],"float16"),Tensor([4, 2, 37, 41],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:52:10.688396 test begin: paddle.concat(list[Tensor([4, 256, 37, 42],"float16"),Tensor([4, 2, 37, 42],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 37, 42],"float16"),Tensor([4, 2, 37, 42],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:52:10.874531 test begin: paddle.concat(list[Tensor([4, 256, 38, 25],"float16"),Tensor([4, 2, 38, 25],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 38, 25],"float16"),Tensor([4, 2, 38, 25],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:52:11.046129 test begin: paddle.concat(list[Tensor([4, 256, 38, 27],"float16"),Tensor([4, 2, 38, 27],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 38, 27],"float16"),Tensor([4, 2, 38, 27],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:52:11.245907 test begin: paddle.concat(list[Tensor([4, 256, 38, 33],"float16"),Tensor([4, 2, 38, 33],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 38, 33],"float16"),Tensor([4, 2, 38, 33],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:52:11.469579 test begin: paddle.concat(list[Tensor([4, 256, 38, 34],"float16"),Tensor([4, 2, 38, 34],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 38, 34],"float16"),Tensor([4, 2, 38, 34],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:52:11.701774 test begin: paddle.concat(list[Tensor([4, 256, 38, 35],"float16"),Tensor([4, 2, 38, 35],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 38, 35],"float16"),Tensor([4, 2, 38, 35],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:52:11.903589 test begin: paddle.concat(list[Tensor([4, 256, 38, 36],"float16"),Tensor([4, 2, 38, 36],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 38, 36],"float16"),Tensor([4, 2, 38, 36],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:52:12.189384 test begin: paddle.concat(list[Tensor([4, 256, 38, 37],"float16"),Tensor([4, 2, 38, 37],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 38, 37],"float16"),Tensor([4, 2, 38, 37],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:52:12.440827 test begin: paddle.concat(list[Tensor([4, 256, 38, 38],"float16"),Tensor([4, 2, 38, 38],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 38, 38],"float16"),Tensor([4, 2, 38, 38],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:52:12.651329 test begin: paddle.concat(list[Tensor([4, 256, 38, 39],"float16"),Tensor([4, 2, 38, 39],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 38, 39],"float16"),Tensor([4, 2, 38, 39],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:52:12.894777 test begin: paddle.concat(list[Tensor([4, 256, 38, 40],"float16"),Tensor([4, 2, 38, 40],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 38, 40],"float16"),Tensor([4, 2, 38, 40],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:52:13.089054 test begin: paddle.concat(list[Tensor([4, 256, 38, 41],"float16"),Tensor([4, 2, 38, 41],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 38, 41],"float16"),Tensor([4, 2, 38, 41],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:52:13.369621 test begin: paddle.concat(list[Tensor([4, 256, 38, 42],"float16"),Tensor([4, 2, 38, 42],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 38, 42],"float16"),Tensor([4, 2, 38, 42],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:52:13.598616 test begin: paddle.concat(list[Tensor([4, 256, 39, 34],"float16"),Tensor([4, 2, 39, 34],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 39, 34],"float16"),Tensor([4, 2, 39, 34],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:52:13.848643 test begin: paddle.concat(list[Tensor([4, 256, 39, 37],"float16"),Tensor([4, 2, 39, 37],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 39, 37],"float16"),Tensor([4, 2, 39, 37],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:52:14.061752 test begin: paddle.concat(list[Tensor([4, 256, 39, 38],"float16"),Tensor([4, 2, 39, 38],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 39, 38],"float16"),Tensor([4, 2, 39, 38],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:52:14.297027 test begin: paddle.concat(list[Tensor([4, 256, 39, 42],"float16"),Tensor([4, 2, 39, 42],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 39, 42],"float16"),Tensor([4, 2, 39, 42],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:52:14.521254 test begin: paddle.concat(list[Tensor([4, 256, 40, 34],"float16"),Tensor([4, 2, 40, 34],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 40, 34],"float16"),Tensor([4, 2, 40, 34],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:52:14.751134 test begin: paddle.concat(list[Tensor([4, 256, 40, 38],"float16"),Tensor([4, 2, 40, 38],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 40, 38],"float16"),Tensor([4, 2, 40, 38],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:52:15.003806 test begin: paddle.concat(list[Tensor([4, 256, 40, 40],"float16"),Tensor([4, 2, 40, 40],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 40, 40],"float16"),Tensor([4, 2, 40, 40],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:52:15.234760 test begin: paddle.concat(list[Tensor([4, 256, 41, 25],"float16"),Tensor([4, 2, 41, 25],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 41, 25],"float16"),Tensor([4, 2, 41, 25],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:52:15.437988 test begin: paddle.concat(list[Tensor([4, 256, 41, 34],"float16"),Tensor([4, 2, 41, 34],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 41, 34],"float16"),Tensor([4, 2, 41, 34],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:52:15.647197 test begin: paddle.concat(list[Tensor([4, 256, 41, 37],"float16"),Tensor([4, 2, 41, 37],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 41, 37],"float16"),Tensor([4, 2, 41, 37],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:52:15.880811 test begin: paddle.concat(list[Tensor([4, 256, 41, 38],"float16"),Tensor([4, 2, 41, 38],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 41, 38],"float16"),Tensor([4, 2, 41, 38],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:52:16.105409 test begin: paddle.concat(list[Tensor([4, 256, 42, 25],"float16"),Tensor([4, 2, 42, 25],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 42, 25],"float16"),Tensor([4, 2, 42, 25],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:52:16.359240 test begin: paddle.concat(list[Tensor([4, 256, 42, 34],"float16"),Tensor([4, 2, 42, 34],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 42, 34],"float16"),Tensor([4, 2, 42, 34],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:52:16.610536 test begin: paddle.concat(list[Tensor([4, 256, 42, 35],"float16"),Tensor([4, 2, 42, 35],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 42, 35],"float16"),Tensor([4, 2, 42, 35],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:52:16.847661 test begin: paddle.concat(list[Tensor([4, 256, 42, 38],"float16"),Tensor([4, 2, 42, 38],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 42, 38],"float16"),Tensor([4, 2, 42, 38],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:52:17.082287 test begin: paddle.concat(list[Tensor([4, 256, 42, 39],"float16"),Tensor([4, 2, 42, 39],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 42, 39],"float16"),Tensor([4, 2, 42, 39],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:52:17.312103 test begin: paddle.concat(list[Tensor([4, 256, 42, 40],"float16"),Tensor([4, 2, 42, 40],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 42, 40],"float16"),Tensor([4, 2, 42, 40],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:52:17.554303 test begin: paddle.concat(list[Tensor([4, 256, 42, 42],"float16"),Tensor([4, 2, 42, 42],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 42, 42],"float16"),Tensor([4, 2, 42, 42],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:52:17.795303 test begin: paddle.concat(list[Tensor([4, 256, 50, 68],"float16"),Tensor([4, 2, 50, 68],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 50, 68],"float16"),Tensor([4, 2, 50, 68],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:52:18.087879 test begin: paddle.concat(list[Tensor([4, 256, 50, 70],"float16"),Tensor([4, 2, 50, 70],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 50, 70],"float16"),Tensor([4, 2, 50, 70],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:52:18.370490 test begin: paddle.concat(list[Tensor([4, 256, 50, 72],"float16"),Tensor([4, 2, 50, 72],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 50, 72],"float16"),Tensor([4, 2, 50, 72],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:52:18.661548 test begin: paddle.concat(list[Tensor([4, 256, 50, 74],"float16"),Tensor([4, 2, 50, 74],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 50, 74],"float16"),Tensor([4, 2, 50, 74],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:52:18.975561 test begin: paddle.concat(list[Tensor([4, 256, 50, 76],"float16"),Tensor([4, 2, 50, 76],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 50, 76],"float16"),Tensor([4, 2, 50, 76],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:52:19.242283 test begin: paddle.concat(list[Tensor([4, 256, 50, 78],"float16"),Tensor([4, 2, 50, 78],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 50, 78],"float16"),Tensor([4, 2, 50, 78],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:52:19.529768 test begin: paddle.concat(list[Tensor([4, 256, 50, 80],"float16"),Tensor([4, 2, 50, 80],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 50, 80],"float16"),Tensor([4, 2, 50, 80],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:52:19.862038 test begin: paddle.concat(list[Tensor([4, 256, 50, 82],"float16"),Tensor([4, 2, 50, 82],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 50, 82],"float16"),Tensor([4, 2, 50, 82],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:52:20.172113 test begin: paddle.concat(list[Tensor([4, 256, 50, 84],"float16"),Tensor([4, 2, 50, 84],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 50, 84],"float16"),Tensor([4, 2, 50, 84],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:52:20.500658 test begin: paddle.concat(list[Tensor([4, 256, 52, 68],"float16"),Tensor([4, 2, 52, 68],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 52, 68],"float16"),Tensor([4, 2, 52, 68],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:52:20.845122 test begin: paddle.concat(list[Tensor([4, 256, 52, 76],"float16"),Tensor([4, 2, 52, 76],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 52, 76],"float16"),Tensor([4, 2, 52, 76],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:52:21.158756 test begin: paddle.concat(list[Tensor([4, 256, 52, 82],"float16"),Tensor([4, 2, 52, 82],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 52, 82],"float16"),Tensor([4, 2, 52, 82],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:52:21.539096 test begin: paddle.concat(list[Tensor([4, 256, 52, 84],"float16"),Tensor([4, 2, 52, 84],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 52, 84],"float16"),Tensor([4, 2, 52, 84],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:52:21.894904 test begin: paddle.concat(list[Tensor([4, 256, 54, 74],"float16"),Tensor([4, 2, 54, 74],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 54, 74],"float16"),Tensor([4, 2, 54, 74],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:52:22.244878 test begin: paddle.concat(list[Tensor([4, 256, 54, 76],"float16"),Tensor([4, 2, 54, 76],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 54, 76],"float16"),Tensor([4, 2, 54, 76],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:52:22.571354 test begin: paddle.concat(list[Tensor([4, 256, 54, 78],"float16"),Tensor([4, 2, 54, 78],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 54, 78],"float16"),Tensor([4, 2, 54, 78],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:52:22.838959 test begin: paddle.concat(list[Tensor([4, 256, 56, 76],"float16"),Tensor([4, 2, 56, 76],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 56, 76],"float16"),Tensor([4, 2, 56, 76],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:52:23.170610 test begin: paddle.concat(list[Tensor([4, 256, 58, 76],"float16"),Tensor([4, 2, 58, 76],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 58, 76],"float16"),Tensor([4, 2, 58, 76],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:52:23.587081 test begin: paddle.concat(list[Tensor([4, 256, 58, 80],"float16"),Tensor([4, 2, 58, 80],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 58, 80],"float16"),Tensor([4, 2, 58, 80],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:52:23.945533 test begin: paddle.concat(list[Tensor([4, 256, 60, 76],"float16"),Tensor([4, 2, 60, 76],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 60, 76],"float16"),Tensor([4, 2, 60, 76],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:52:24.331720 test begin: paddle.concat(list[Tensor([4, 256, 62, 68],"float16"),Tensor([4, 2, 62, 68],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 62, 68],"float16"),Tensor([4, 2, 62, 68],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:52:24.679405 test begin: paddle.concat(list[Tensor([4, 256, 62, 76],"float16"),Tensor([4, 2, 62, 76],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 62, 76],"float16"),Tensor([4, 2, 62, 76],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:52:25.049046 test begin: paddle.concat(list[Tensor([4, 256, 62, 84],"float16"),Tensor([4, 2, 62, 84],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 62, 84],"float16"),Tensor([4, 2, 62, 84],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:52:25.439514 test begin: paddle.concat(list[Tensor([4, 256, 64, 128],"float16"),Tensor([4, 256, 64, 128],"float16"),Tensor([4, 256, 64, 128],"float16"),Tensor([4, 256, 64, 128],"float16"),Tensor([4, 256, 64, 128],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 64, 128],"float16"),Tensor([4, 256, 64, 128],"float16"),Tensor([4, 256, 64, 128],"float16"),Tensor([4, 256, 64, 128],"float16"),Tensor([4, 256, 64, 128],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 4th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:52:27.223503 test begin: paddle.concat(list[Tensor([4, 256, 64, 64],"float16"),Tensor([4, 256, 64, 64],"float16"),Tensor([4, 256, 64, 64],"float16"),Tensor([4, 256, 64, 64],"float16"),Tensor([4, 256, 64, 64],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 64, 64],"float16"),Tensor([4, 256, 64, 64],"float16"),Tensor([4, 256, 64, 64],"float16"),Tensor([4, 256, 64, 64],"float16"),Tensor([4, 256, 64, 64],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 4th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:52:28.322685 test begin: paddle.concat(list[Tensor([4, 256, 64, 68],"float16"),Tensor([4, 2, 64, 68],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 64, 68],"float16"),Tensor([4, 2, 64, 68],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:52:28.687967 test begin: paddle.concat(list[Tensor([4, 256, 64, 76],"float16"),Tensor([4, 2, 64, 76],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 64, 76],"float16"),Tensor([4, 2, 64, 76],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:52:29.066716 test begin: paddle.concat(list[Tensor([4, 256, 64, 84],"float16"),Tensor([4, 2, 64, 84],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 64, 84],"float16"),Tensor([4, 2, 64, 84],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:52:29.529987 test begin: paddle.concat(list[Tensor([4, 256, 66, 72],"float16"),Tensor([4, 2, 66, 72],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 66, 72],"float16"),Tensor([4, 2, 66, 72],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:52:29.942092 test begin: paddle.concat(list[Tensor([4, 256, 66, 74],"float16"),Tensor([4, 2, 66, 74],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 66, 74],"float16"),Tensor([4, 2, 66, 74],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:52:30.305389 test begin: paddle.concat(list[Tensor([4, 256, 66, 76],"float16"),Tensor([4, 2, 66, 76],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 66, 76],"float16"),Tensor([4, 2, 66, 76],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:52:30.707711 test begin: paddle.concat(list[Tensor([4, 256, 66, 80],"float16"),Tensor([4, 2, 66, 80],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 66, 80],"float16"),Tensor([4, 2, 66, 80],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:52:31.129164 test begin: paddle.concat(list[Tensor([4, 256, 66, 84],"float16"),Tensor([4, 2, 66, 84],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 66, 84],"float16"),Tensor([4, 2, 66, 84],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:52:31.522468 test begin: paddle.concat(list[Tensor([4, 256, 68, 50],"float16"),Tensor([4, 2, 68, 50],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 68, 50],"float16"),Tensor([4, 2, 68, 50],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:52:31.858899 test begin: paddle.concat(list[Tensor([4, 256, 68, 54],"float16"),Tensor([4, 2, 68, 54],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 68, 54],"float16"),Tensor([4, 2, 68, 54],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:52:32.154977 test begin: paddle.concat(list[Tensor([4, 256, 68, 68],"float16"),Tensor([4, 2, 68, 68],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 68, 68],"float16"),Tensor([4, 2, 68, 68],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:52:32.502357 test begin: paddle.concat(list[Tensor([4, 256, 68, 70],"float16"),Tensor([4, 2, 68, 70],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 68, 70],"float16"),Tensor([4, 2, 68, 70],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:52:32.852682 test begin: paddle.concat(list[Tensor([4, 256, 68, 74],"float16"),Tensor([4, 2, 68, 74],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 68, 74],"float16"),Tensor([4, 2, 68, 74],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:52:33.196403 test begin: paddle.concat(list[Tensor([4, 256, 68, 76],"float16"),Tensor([4, 2, 68, 76],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 68, 76],"float16"),Tensor([4, 2, 68, 76],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:52:33.586140 test begin: paddle.concat(list[Tensor([4, 256, 68, 78],"float16"),Tensor([4, 2, 68, 78],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 68, 78],"float16"),Tensor([4, 2, 68, 78],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:52:33.942496 test begin: paddle.concat(list[Tensor([4, 256, 68, 80],"float16"),Tensor([4, 2, 68, 80],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 68, 80],"float16"),Tensor([4, 2, 68, 80],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:52:34.327289 test begin: paddle.concat(list[Tensor([4, 256, 68, 82],"float16"),Tensor([4, 2, 68, 82],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 68, 82],"float16"),Tensor([4, 2, 68, 82],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:52:34.727525 test begin: paddle.concat(list[Tensor([4, 256, 68, 84],"float16"),Tensor([4, 2, 68, 84],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 68, 84],"float16"),Tensor([4, 2, 68, 84],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:52:35.091465 test begin: paddle.concat(list[Tensor([4, 256, 70, 68],"float16"),Tensor([4, 2, 70, 68],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 70, 68],"float16"),Tensor([4, 2, 70, 68],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:52:35.427153 test begin: paddle.concat(list[Tensor([4, 256, 70, 70],"float16"),Tensor([4, 2, 70, 70],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 70, 70],"float16"),Tensor([4, 2, 70, 70],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:52:35.900609 test begin: paddle.concat(list[Tensor([4, 256, 70, 76],"float16"),Tensor([4, 2, 70, 76],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 70, 76],"float16"),Tensor([4, 2, 70, 76],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:52:36.265453 test begin: paddle.concat(list[Tensor([4, 256, 70, 78],"float16"),Tensor([4, 2, 70, 78],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 70, 78],"float16"),Tensor([4, 2, 70, 78],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:52:36.633625 test begin: paddle.concat(list[Tensor([4, 256, 70, 82],"float16"),Tensor([4, 2, 70, 82],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 70, 82],"float16"),Tensor([4, 2, 70, 82],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:52:37.042404 test begin: paddle.concat(list[Tensor([4, 256, 70, 84],"float16"),Tensor([4, 2, 70, 84],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 70, 84],"float16"),Tensor([4, 2, 70, 84],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:52:37.430946 test begin: paddle.concat(list[Tensor([4, 256, 72, 68],"float16"),Tensor([4, 2, 72, 68],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 72, 68],"float16"),Tensor([4, 2, 72, 68],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:52:37.798268 test begin: paddle.concat(list[Tensor([4, 256, 72, 76],"float16"),Tensor([4, 2, 72, 76],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 72, 76],"float16"),Tensor([4, 2, 72, 76],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:52:38.128806 test begin: paddle.concat(list[Tensor([4, 256, 72, 84],"float16"),Tensor([4, 2, 72, 84],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 72, 84],"float16"),Tensor([4, 2, 72, 84],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:52:38.527272 test begin: paddle.concat(list[Tensor([4, 256, 74, 68],"float16"),Tensor([4, 2, 74, 68],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 74, 68],"float16"),Tensor([4, 2, 74, 68],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:52:38.907628 test begin: paddle.concat(list[Tensor([4, 256, 74, 76],"float16"),Tensor([4, 2, 74, 76],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 74, 76],"float16"),Tensor([4, 2, 74, 76],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:52:39.275845 test begin: paddle.concat(list[Tensor([4, 256, 74, 82],"float16"),Tensor([4, 2, 74, 82],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 74, 82],"float16"),Tensor([4, 2, 74, 82],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:52:39.758463 test begin: paddle.concat(list[Tensor([4, 256, 74, 84],"float16"),Tensor([4, 2, 74, 84],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 74, 84],"float16"),Tensor([4, 2, 74, 84],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:52:40.185636 test begin: paddle.concat(list[Tensor([4, 256, 76, 50],"float16"),Tensor([4, 2, 76, 50],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 76, 50],"float16"),Tensor([4, 2, 76, 50],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:52:40.409934 test begin: paddle.concat(list[Tensor([4, 256, 76, 54],"float16"),Tensor([4, 2, 76, 54],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 76, 54],"float16"),Tensor([4, 2, 76, 54],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:52:40.652348 test begin: paddle.concat(list[Tensor([4, 256, 76, 66],"float16"),Tensor([4, 2, 76, 66],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 76, 66],"float16"),Tensor([4, 2, 76, 66],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:52:40.980089 test begin: paddle.concat(list[Tensor([4, 256, 76, 68],"float16"),Tensor([4, 2, 76, 68],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 76, 68],"float16"),Tensor([4, 2, 76, 68],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:52:41.344307 test begin: paddle.concat(list[Tensor([4, 256, 76, 70],"float16"),Tensor([4, 2, 76, 70],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 76, 70],"float16"),Tensor([4, 2, 76, 70],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:52:41.735108 test begin: paddle.concat(list[Tensor([4, 256, 76, 72],"float16"),Tensor([4, 2, 76, 72],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 76, 72],"float16"),Tensor([4, 2, 76, 72],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:52:42.114168 test begin: paddle.concat(list[Tensor([4, 256, 76, 74],"float16"),Tensor([4, 2, 76, 74],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 76, 74],"float16"),Tensor([4, 2, 76, 74],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:52:42.476243 test begin: paddle.concat(list[Tensor([4, 256, 76, 76],"float16"),Tensor([4, 2, 76, 76],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 76, 76],"float16"),Tensor([4, 2, 76, 76],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:52:42.836150 test begin: paddle.concat(list[Tensor([4, 256, 76, 78],"float16"),Tensor([4, 2, 76, 78],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 76, 78],"float16"),Tensor([4, 2, 76, 78],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:52:43.270555 test begin: paddle.concat(list[Tensor([4, 256, 76, 80],"float16"),Tensor([4, 2, 76, 80],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 76, 80],"float16"),Tensor([4, 2, 76, 80],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:52:43.676604 test begin: paddle.concat(list[Tensor([4, 256, 76, 82],"float16"),Tensor([4, 2, 76, 82],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 76, 82],"float16"),Tensor([4, 2, 76, 82],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:52:44.046819 test begin: paddle.concat(list[Tensor([4, 256, 76, 84],"float16"),Tensor([4, 2, 76, 84],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 76, 84],"float16"),Tensor([4, 2, 76, 84],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:52:44.431149 test begin: paddle.concat(list[Tensor([4, 256, 78, 68],"float16"),Tensor([4, 2, 78, 68],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 78, 68],"float16"),Tensor([4, 2, 78, 68],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:52:44.769650 test begin: paddle.concat(list[Tensor([4, 256, 78, 74],"float16"),Tensor([4, 2, 78, 74],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 78, 74],"float16"),Tensor([4, 2, 78, 74],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:52:45.172970 test begin: paddle.concat(list[Tensor([4, 256, 78, 76],"float16"),Tensor([4, 2, 78, 76],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 78, 76],"float16"),Tensor([4, 2, 78, 76],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:52:45.596443 test begin: paddle.concat(list[Tensor([4, 256, 78, 84],"float16"),Tensor([4, 2, 78, 84],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 78, 84],"float16"),Tensor([4, 2, 78, 84],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:52:46.044762 test begin: paddle.concat(list[Tensor([4, 256, 80, 68],"float16"),Tensor([4, 2, 80, 68],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 80, 68],"float16"),Tensor([4, 2, 80, 68],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:52:46.431638 test begin: paddle.concat(list[Tensor([4, 256, 80, 76],"float16"),Tensor([4, 2, 80, 76],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 80, 76],"float16"),Tensor([4, 2, 80, 76],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:52:46.860610 test begin: paddle.concat(list[Tensor([4, 256, 80, 80],"float16"),Tensor([4, 2, 80, 80],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 80, 80],"float16"),Tensor([4, 2, 80, 80],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:52:47.394921 test begin: paddle.concat(list[Tensor([4, 256, 82, 50],"float16"),Tensor([4, 2, 82, 50],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 82, 50],"float16"),Tensor([4, 2, 82, 50],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:52:47.802195 test begin: paddle.concat(list[Tensor([4, 256, 82, 68],"float16"),Tensor([4, 2, 82, 68],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 82, 68],"float16"),Tensor([4, 2, 82, 68],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:52:48.213433 test begin: paddle.concat(list[Tensor([4, 256, 82, 74],"float16"),Tensor([4, 2, 82, 74],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 82, 74],"float16"),Tensor([4, 2, 82, 74],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:52:48.649724 test begin: paddle.concat(list[Tensor([4, 256, 82, 76],"float16"),Tensor([4, 2, 82, 76],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 82, 76],"float16"),Tensor([4, 2, 82, 76],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:52:49.122578 test begin: paddle.concat(list[Tensor([4, 256, 84, 50],"float16"),Tensor([4, 2, 84, 50],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 84, 50],"float16"),Tensor([4, 2, 84, 50],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:52:49.404848 test begin: paddle.concat(list[Tensor([4, 256, 84, 68],"float16"),Tensor([4, 2, 84, 68],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 84, 68],"float16"),Tensor([4, 2, 84, 68],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:52:49.882808 test begin: paddle.concat(list[Tensor([4, 256, 84, 70],"float16"),Tensor([4, 2, 84, 70],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 84, 70],"float16"),Tensor([4, 2, 84, 70],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:52:50.315514 test begin: paddle.concat(list[Tensor([4, 256, 84, 76],"float16"),Tensor([4, 2, 84, 76],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 84, 76],"float16"),Tensor([4, 2, 84, 76],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:52:50.800497 test begin: paddle.concat(list[Tensor([4, 256, 84, 78],"float16"),Tensor([4, 2, 84, 78],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 84, 78],"float16"),Tensor([4, 2, 84, 78],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:52:51.241422 test begin: paddle.concat(list[Tensor([4, 256, 84, 80],"float16"),Tensor([4, 2, 84, 80],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 84, 80],"float16"),Tensor([4, 2, 84, 80],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:52:51.697768 test begin: paddle.concat(list[Tensor([4, 256, 84, 84],"float16"),Tensor([4, 2, 84, 84],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 256, 84, 84],"float16"),Tensor([4, 2, 84, 84],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:52:52.108473 test begin: paddle.concat(list[Tensor([4, 3, 256, 256],"float32"),Tensor([4, 32, 256, 256],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 3, 256, 256],"float32"),Tensor([4, 32, 256, 256],"float16"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:52:52.563846 test begin: paddle.concat(list[Tensor([4, 32, 64, 64],"float16"),Tensor([4, 32, 64, 64],"float32"),Tensor([4, 32, 64, 64],"float32"),Tensor([4, 32, 64, 64],"float32"),Tensor([4, 32, 64, 64],"float32"),Tensor([4, 32, 64, 64],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 32, 64, 64],"float16"),Tensor([4, 32, 64, 64],"float32"),Tensor([4, 32, 64, 64],"float32"),Tensor([4, 32, 64, 64],"float32"),Tensor([4, 32, 64, 64],"float32"),Tensor([4, 32, 64, 64],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:52:52.886706 test begin: paddle.concat(list[Tensor([4, 32, 64, 64],"float16"),Tensor([4, 32, 64, 64],"float32"),Tensor([4, 32, 64, 64],"float32"),Tensor([4, 32, 64, 64],"float32"),Tensor([4, 32, 64, 64],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 32, 64, 64],"float16"),Tensor([4, 32, 64, 64],"float32"),Tensor([4, 32, 64, 64],"float32"),Tensor([4, 32, 64, 64],"float32"),Tensor([4, 32, 64, 64],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:52:53.153663 test begin: paddle.concat(list[Tensor([4, 32, 64, 64],"float16"),Tensor([4, 32, 64, 64],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 32, 64, 64],"float16"),Tensor([4, 32, 64, 64],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:52:53.448225 test begin: paddle.concat(list[Tensor([4, 32, 64, 64],"float32"),Tensor([4, 32, 64, 64],"float16"),Tensor([4, 2, 64, 64],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 32, 64, 64],"float32"),Tensor([4, 32, 64, 64],"float16"),Tensor([4, 2, 64, 64],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:52:53.666985 test begin: paddle.concat(list[Tensor([4, 32, 64, 64],"float32"),Tensor([4, 32, 64, 64],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 32, 64, 64],"float32"),Tensor([4, 32, 64, 64],"float16"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:52:53.919350 test begin: paddle.concat(list[Tensor([4, 512, 128, 128],"float16"),Tensor([4, 128, 128, 128],"float32"),Tensor([4, 128, 128, 128],"float32"),Tensor([4, 128, 128, 128],"float32"),Tensor([4, 128, 128, 128],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 512, 128, 128],"float16"),Tensor([4, 128, 128, 128],"float32"),Tensor([4, 128, 128, 128],"float32"),Tensor([4, 128, 128, 128],"float32"),Tensor([4, 128, 128, 128],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:52:56.647305 test begin: paddle.concat(list[Tensor([4, 64, 128, 128],"float32"),Tensor([4, 64, 128, 128],"float16"),], 1, )
[paddle error] paddle.concat(list[Tensor([4, 64, 128, 128],"float32"),Tensor([4, 64, 128, 128],"float16"),], 1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:52:57.063175 test begin: paddle.concat(list[Tensor([4, 64, 160, 160],"float32"),Tensor([4, 64, 160, 160],"float32"),Tensor([4, 64, 160, 160],"float32"),Tensor([4, 64, 160, 160],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([4, 64, 160, 160],"float32"),Tensor([4, 64, 160, 160],"float32"),Tensor([4, 64, 160, 160],"float32"),Tensor([4, 64, 160, 160],"float16"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 3th tensor is float16. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:52:58.312270 test begin: paddle.concat(list[Tensor([4, 64, 256, 256],"float32"),Tensor([4, 64, 256, 256],"float16"),], 1, )
[paddle error] paddle.concat(list[Tensor([4, 64, 256, 256],"float32"),Tensor([4, 64, 256, 256],"float16"),], 1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:52:59.800856 test begin: paddle.concat(list[Tensor([48, 128, 22, 22],"float32"),Tensor([48, 128, 22, 22],"float16"),], 1, )
[paddle error] paddle.concat(list[Tensor([48, 128, 22, 22],"float32"),Tensor([48, 128, 22, 22],"float16"),], 1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:53:00.222187 test begin: paddle.concat(list[Tensor([48, 128, 24, 24],"float32"),Tensor([48, 128, 24, 24],"float16"),], 1, )
[paddle error] paddle.concat(list[Tensor([48, 128, 24, 24],"float32"),Tensor([48, 128, 24, 24],"float16"),], 1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:53:00.593520 test begin: paddle.concat(list[Tensor([48, 128, 26, 26],"float32"),Tensor([48, 128, 26, 26],"float16"),], 1, )
[paddle error] paddle.concat(list[Tensor([48, 128, 26, 26],"float32"),Tensor([48, 128, 26, 26],"float16"),], 1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:53:01.049367 test begin: paddle.concat(list[Tensor([48, 128, 28, 28],"float32"),Tensor([48, 128, 28, 28],"float16"),], 1, )
[paddle error] paddle.concat(list[Tensor([48, 128, 28, 28],"float32"),Tensor([48, 128, 28, 28],"float16"),], 1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:53:01.518481 test begin: paddle.concat(list[Tensor([48, 128, 30, 30],"float32"),Tensor([48, 128, 30, 30],"float16"),], 1, )
[paddle error] paddle.concat(list[Tensor([48, 128, 30, 30],"float32"),Tensor([48, 128, 30, 30],"float16"),], 1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:53:02.064981 test begin: paddle.concat(list[Tensor([48, 128, 44, 44],"float32"),Tensor([48, 128, 44, 44],"float16"),], 1, )
[paddle error] paddle.concat(list[Tensor([48, 128, 44, 44],"float32"),Tensor([48, 128, 44, 44],"float16"),], 1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:53:03.257796 test begin: paddle.concat(list[Tensor([48, 128, 48, 48],"float32"),Tensor([48, 128, 48, 48],"float16"),], 1, )
[paddle error] paddle.concat(list[Tensor([48, 128, 48, 48],"float32"),Tensor([48, 128, 48, 48],"float16"),], 1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:53:04.511120 test begin: paddle.concat(list[Tensor([48, 128, 52, 52],"float32"),Tensor([48, 128, 52, 52],"float16"),], 1, )
[paddle error] paddle.concat(list[Tensor([48, 128, 52, 52],"float32"),Tensor([48, 128, 52, 52],"float16"),], 1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:53:05.882792 test begin: paddle.concat(list[Tensor([48, 128, 56, 56],"float32"),Tensor([48, 128, 56, 56],"float16"),], 1, )
[paddle error] paddle.concat(list[Tensor([48, 128, 56, 56],"float32"),Tensor([48, 128, 56, 56],"float16"),], 1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:53:07.577700 test begin: paddle.concat(list[Tensor([48, 128, 60, 60],"float32"),Tensor([48, 128, 60, 60],"float16"),], 1, )
[paddle error] paddle.concat(list[Tensor([48, 128, 60, 60],"float32"),Tensor([48, 128, 60, 60],"float16"),], 1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:53:09.616837 test begin: paddle.concat(list[Tensor([512, 20, 32, 24],"float32"),Tensor([512, 20, 32, 24],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([512, 20, 32, 24],"float32"),Tensor([512, 20, 32, 24],"float16"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:53:10.428064 test begin: paddle.concat(list[Tensor([512, 40, 16, 12],"float32"),Tensor([512, 40, 16, 12],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([512, 40, 16, 12],"float32"),Tensor([512, 40, 16, 12],"float16"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:53:10.915118 test begin: paddle.concat(list[Tensor([512, 80, 8, 6],"float32"),Tensor([512, 80, 8, 6],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([512, 80, 8, 6],"float32"),Tensor([512, 80, 8, 6],"float16"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:53:11.247949 test begin: paddle.concat(list[Tensor([6, 1, 512, 512],"float32"),Tensor([6, 1, 512, 512],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([6, 1, 512, 512],"float32"),Tensor([6, 1, 512, 512],"float16"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:53:11.521665 test begin: paddle.concat(list[Tensor([64, 24, 32, 32],"float16"),Tensor([64, 24, 32, 32],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([64, 24, 32, 32],"float16"),Tensor([64, 24, 32, 32],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:53:11.822498 test begin: paddle.concat(list[Tensor([64, 24, 36, 36],"float16"),Tensor([64, 24, 36, 36],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([64, 24, 36, 36],"float16"),Tensor([64, 24, 36, 36],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:53:12.127898 test begin: paddle.concat(list[Tensor([64, 24, 40, 40],"float16"),Tensor([64, 24, 40, 40],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([64, 24, 40, 40],"float16"),Tensor([64, 24, 40, 40],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:53:12.461168 test begin: paddle.concat(list[Tensor([64, 24, 44, 44],"float16"),Tensor([64, 24, 44, 44],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([64, 24, 44, 44],"float16"),Tensor([64, 24, 44, 44],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:53:12.921361 test begin: paddle.concat(list[Tensor([64, 24, 48, 48],"float16"),Tensor([64, 24, 48, 48],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([64, 24, 48, 48],"float16"),Tensor([64, 24, 48, 48],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:53:13.365689 test begin: paddle.concat(list[Tensor([64, 48, 16, 16],"float16"),Tensor([64, 48, 16, 16],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([64, 48, 16, 16],"float16"),Tensor([64, 48, 16, 16],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:53:13.596536 test begin: paddle.concat(list[Tensor([64, 48, 18, 18],"float16"),Tensor([64, 48, 18, 18],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([64, 48, 18, 18],"float16"),Tensor([64, 48, 18, 18],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:53:13.841899 test begin: paddle.concat(list[Tensor([64, 48, 20, 20],"float16"),Tensor([64, 48, 20, 20],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([64, 48, 20, 20],"float16"),Tensor([64, 48, 20, 20],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:53:14.102805 test begin: paddle.concat(list[Tensor([64, 48, 22, 22],"float16"),Tensor([64, 48, 22, 22],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([64, 48, 22, 22],"float16"),Tensor([64, 48, 22, 22],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:53:14.359486 test begin: paddle.concat(list[Tensor([64, 48, 24, 24],"float16"),Tensor([64, 48, 24, 24],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([64, 48, 24, 24],"float16"),Tensor([64, 48, 24, 24],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:53:14.668101 test begin: paddle.concat(list[Tensor([64, 60, 16, 16],"float16"),Tensor([64, 60, 16, 16],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([64, 60, 16, 16],"float16"),Tensor([64, 60, 16, 16],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:53:14.837431 test begin: paddle.concat(list[Tensor([64, 60, 18, 18],"float16"),Tensor([64, 60, 18, 18],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([64, 60, 18, 18],"float16"),Tensor([64, 60, 18, 18],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:53:15.136061 test begin: paddle.concat(list[Tensor([64, 60, 20, 20],"float16"),Tensor([64, 60, 20, 20],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([64, 60, 20, 20],"float16"),Tensor([64, 60, 20, 20],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:53:15.415458 test begin: paddle.concat(list[Tensor([64, 60, 22, 22],"float16"),Tensor([64, 60, 22, 22],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([64, 60, 22, 22],"float16"),Tensor([64, 60, 22, 22],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:53:15.723938 test begin: paddle.concat(list[Tensor([64, 60, 24, 24],"float16"),Tensor([64, 60, 24, 24],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([64, 60, 24, 24],"float16"),Tensor([64, 60, 24, 24],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:53:16.066874 test begin: paddle.concat(list[Tensor([64, 64, 32, 32],"float16"),Tensor([64, 64, 32, 32],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([64, 64, 32, 32],"float16"),Tensor([64, 64, 32, 32],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:53:16.551741 test begin: paddle.concat(list[Tensor([64, 64, 64, 64],"float16"),Tensor([64, 64, 64, 64],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([64, 64, 64, 64],"float16"),Tensor([64, 64, 64, 64],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:53:18.063664 test begin: paddle.concat(list[Tensor([64, 96, 10, 10],"float16"),Tensor([64, 96, 10, 10],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([64, 96, 10, 10],"float16"),Tensor([64, 96, 10, 10],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:53:18.329052 test begin: paddle.concat(list[Tensor([64, 96, 11, 11],"float16"),Tensor([64, 96, 11, 11],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([64, 96, 11, 11],"float16"),Tensor([64, 96, 11, 11],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:53:18.590206 test begin: paddle.concat(list[Tensor([64, 96, 12, 12],"float16"),Tensor([64, 96, 12, 12],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([64, 96, 12, 12],"float16"),Tensor([64, 96, 12, 12],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:53:18.831536 test begin: paddle.concat(list[Tensor([64, 96, 122, 122],"float32"),Tensor([64, 96, 122, 122],"float16"),], 1, )
[paddle error] paddle.concat(list[Tensor([64, 96, 122, 122],"float32"),Tensor([64, 96, 122, 122],"float16"),], 1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:53:25.958182 test begin: paddle.concat(list[Tensor([64, 96, 16, 16],"float32"),Tensor([64, 96, 16, 16],"float16"),], 1, )
[paddle error] paddle.concat(list[Tensor([64, 96, 16, 16],"float32"),Tensor([64, 96, 16, 16],"float16"),], 1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:53:26.245793 test begin: paddle.concat(list[Tensor([64, 96, 18, 18],"float32"),Tensor([64, 96, 18, 18],"float16"),], 1, )
[paddle error] paddle.concat(list[Tensor([64, 96, 18, 18],"float32"),Tensor([64, 96, 18, 18],"float16"),], 1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:53:26.579493 test begin: paddle.concat(list[Tensor([64, 96, 20, 20],"float32"),Tensor([64, 96, 20, 20],"float16"),], 1, )
[paddle error] paddle.concat(list[Tensor([64, 96, 20, 20],"float32"),Tensor([64, 96, 20, 20],"float16"),], 1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:53:26.948361 test begin: paddle.concat(list[Tensor([64, 96, 22, 22],"float32"),Tensor([64, 96, 22, 22],"float16"),], 1, )
[paddle error] paddle.concat(list[Tensor([64, 96, 22, 22],"float32"),Tensor([64, 96, 22, 22],"float16"),], 1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:53:27.379131 test begin: paddle.concat(list[Tensor([64, 96, 24, 24],"float32"),Tensor([64, 96, 24, 24],"float16"),], 1, )
[paddle error] paddle.concat(list[Tensor([64, 96, 24, 24],"float32"),Tensor([64, 96, 24, 24],"float16"),], 1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:53:27.841119 test begin: paddle.concat(list[Tensor([64, 96, 31, 31],"float32"),Tensor([64, 96, 31, 31],"float16"),], 1, )
[paddle error] paddle.concat(list[Tensor([64, 96, 31, 31],"float32"),Tensor([64, 96, 31, 31],"float16"),], 1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:53:28.496818 test begin: paddle.concat(list[Tensor([64, 96, 32, 32],"float32"),Tensor([64, 96, 32, 32],"float16"),], 1, )
[paddle error] paddle.concat(list[Tensor([64, 96, 32, 32],"float32"),Tensor([64, 96, 32, 32],"float16"),], 1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:53:29.193968 test begin: paddle.concat(list[Tensor([64, 96, 36, 36],"float32"),Tensor([64, 96, 36, 36],"float16"),], 1, )
[paddle error] paddle.concat(list[Tensor([64, 96, 36, 36],"float32"),Tensor([64, 96, 36, 36],"float16"),], 1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:53:30.079095 test begin: paddle.concat(list[Tensor([64, 96, 40, 40],"float32"),Tensor([64, 96, 40, 40],"float16"),], 1, )
[paddle error] paddle.concat(list[Tensor([64, 96, 40, 40],"float32"),Tensor([64, 96, 40, 40],"float16"),], 1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:53:31.016067 test begin: paddle.concat(list[Tensor([64, 96, 44, 44],"float32"),Tensor([64, 96, 44, 44],"float16"),], 1, )
[paddle error] paddle.concat(list[Tensor([64, 96, 44, 44],"float32"),Tensor([64, 96, 44, 44],"float16"),], 1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:53:32.132440 test begin: paddle.concat(list[Tensor([64, 96, 48, 48],"float32"),Tensor([64, 96, 48, 48],"float16"),], 1, )
[paddle error] paddle.concat(list[Tensor([64, 96, 48, 48],"float32"),Tensor([64, 96, 48, 48],"float16"),], 1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:53:33.496443 test begin: paddle.concat(list[Tensor([64, 96, 61, 61],"float32"),Tensor([64, 96, 61, 61],"float16"),], 1, )
[paddle error] paddle.concat(list[Tensor([64, 96, 61, 61],"float32"),Tensor([64, 96, 61, 61],"float16"),], 1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:53:35.575578 test begin: paddle.concat(list[Tensor([64, 96, 8, 8],"float16"),Tensor([64, 96, 8, 8],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([64, 96, 8, 8],"float16"),Tensor([64, 96, 8, 8],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:53:35.807992 test begin: paddle.concat(list[Tensor([64, 96, 9, 9],"float16"),Tensor([64, 96, 9, 9],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([64, 96, 9, 9],"float16"),Tensor([64, 96, 9, 9],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:53:35.951031 test begin: paddle.concat(list[Tensor([64, 96],"float16"),Tensor([64, 50],"float32"),], 1, )
[paddle error] paddle.concat(list[Tensor([64, 96],"float16"),Tensor([64, 50],"float32"),], 1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:53:36.113202 test begin: paddle.concat(list[Tensor([8, 1, 512, 512],"float32"),Tensor([8, 1, 512, 512],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([8, 1, 512, 512],"float32"),Tensor([8, 1, 512, 512],"float16"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:53:36.434661 test begin: paddle.concat(list[Tensor([8, 128, 128, 128],"float16"),Tensor([8, 128, 128, 128],"float16"),Tensor([8, 128, 128, 128],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([8, 128, 128, 128],"float16"),Tensor([8, 128, 128, 128],"float16"),Tensor([8, 128, 128, 128],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 2th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:53:38.552566 test begin: paddle.concat(list[Tensor([8, 128, 40, 40],"float16"),Tensor([8, 128, 40, 40],"float32"),], 1, )
[paddle error] paddle.concat(list[Tensor([8, 128, 40, 40],"float16"),Tensor([8, 128, 40, 40],"float32"),], 1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:53:38.880568 test begin: paddle.concat(list[Tensor([8, 128, 40, 40],"float32"),Tensor([8, 256, 40, 40],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([8, 128, 40, 40],"float32"),Tensor([8, 256, 40, 40],"float16"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:53:39.257245 test begin: paddle.concat(list[Tensor([8, 128, 44, 44],"float32"),Tensor([8, 256, 44, 44],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([8, 128, 44, 44],"float32"),Tensor([8, 256, 44, 44],"float16"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:53:39.629194 test begin: paddle.concat(list[Tensor([8, 128, 48, 48],"float32"),Tensor([8, 256, 48, 48],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([8, 128, 48, 48],"float32"),Tensor([8, 256, 48, 48],"float16"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:53:40.056070 test begin: paddle.concat(list[Tensor([8, 128, 52, 52],"float32"),Tensor([8, 256, 52, 52],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([8, 128, 52, 52],"float32"),Tensor([8, 256, 52, 52],"float16"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:53:40.575759 test begin: paddle.concat(list[Tensor([8, 128, 56, 56],"float32"),Tensor([8, 256, 56, 56],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([8, 128, 56, 56],"float32"),Tensor([8, 256, 56, 56],"float16"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:53:41.126675 test begin: paddle.concat(list[Tensor([8, 128, 60, 60],"float32"),Tensor([8, 256, 60, 60],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([8, 128, 60, 60],"float32"),Tensor([8, 256, 60, 60],"float16"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:53:41.793323 test begin: paddle.concat(list[Tensor([8, 128, 64, 64],"float32"),Tensor([8, 256, 64, 64],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([8, 128, 64, 64],"float32"),Tensor([8, 256, 64, 64],"float16"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:53:42.507946 test begin: paddle.concat(list[Tensor([8, 128, 68, 68],"float32"),Tensor([8, 256, 68, 68],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([8, 128, 68, 68],"float32"),Tensor([8, 256, 68, 68],"float16"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:53:43.303670 test begin: paddle.concat(list[Tensor([8, 128, 72, 72],"float32"),Tensor([8, 256, 72, 72],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([8, 128, 72, 72],"float32"),Tensor([8, 256, 72, 72],"float16"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:53:44.019723 test begin: paddle.concat(list[Tensor([8, 128, 76, 76],"float32"),Tensor([8, 256, 76, 76],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([8, 128, 76, 76],"float32"),Tensor([8, 256, 76, 76],"float16"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:53:44.811244 test begin: paddle.concat(list[Tensor([8, 128, 80, 80],"float16"),Tensor([8, 128, 80, 80],"float32"),], 1, )
[paddle error] paddle.concat(list[Tensor([8, 128, 80, 80],"float16"),Tensor([8, 128, 80, 80],"float32"),], 1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:53:45.459041 test begin: paddle.concat(list[Tensor([8, 128, 80, 80],"float32"),Tensor([8, 128, 80, 80],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([8, 128, 80, 80],"float32"),Tensor([8, 128, 80, 80],"float16"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:53:46.156157 test begin: paddle.concat(list[Tensor([8, 192, 20, 20],"float32"),Tensor([8, 256, 20, 20],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([8, 192, 20, 20],"float32"),Tensor([8, 256, 20, 20],"float16"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:53:46.384703 test begin: paddle.concat(list[Tensor([8, 192, 22, 22],"float32"),Tensor([8, 256, 22, 22],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([8, 192, 22, 22],"float32"),Tensor([8, 256, 22, 22],"float16"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:53:46.634513 test begin: paddle.concat(list[Tensor([8, 192, 24, 24],"float32"),Tensor([8, 256, 24, 24],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([8, 192, 24, 24],"float32"),Tensor([8, 256, 24, 24],"float16"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:53:46.877933 test begin: paddle.concat(list[Tensor([8, 192, 26, 26],"float32"),Tensor([8, 256, 26, 26],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([8, 192, 26, 26],"float32"),Tensor([8, 256, 26, 26],"float16"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:53:47.157419 test begin: paddle.concat(list[Tensor([8, 192, 28, 28],"float32"),Tensor([8, 256, 28, 28],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([8, 192, 28, 28],"float32"),Tensor([8, 256, 28, 28],"float16"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:53:47.433648 test begin: paddle.concat(list[Tensor([8, 192, 30, 30],"float32"),Tensor([8, 256, 30, 30],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([8, 192, 30, 30],"float32"),Tensor([8, 256, 30, 30],"float16"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:53:47.717324 test begin: paddle.concat(list[Tensor([8, 192, 32, 32],"float32"),Tensor([8, 256, 32, 32],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([8, 192, 32, 32],"float32"),Tensor([8, 256, 32, 32],"float16"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:53:47.988914 test begin: paddle.concat(list[Tensor([8, 192, 34, 34],"float32"),Tensor([8, 256, 34, 34],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([8, 192, 34, 34],"float32"),Tensor([8, 256, 34, 34],"float16"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:53:48.322583 test begin: paddle.concat(list[Tensor([8, 192, 36, 36],"float32"),Tensor([8, 256, 36, 36],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([8, 192, 36, 36],"float32"),Tensor([8, 256, 36, 36],"float16"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:53:48.721362 test begin: paddle.concat(list[Tensor([8, 192, 38, 38],"float32"),Tensor([8, 256, 38, 38],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([8, 192, 38, 38],"float32"),Tensor([8, 256, 38, 38],"float16"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:53:49.044951 test begin: paddle.concat(list[Tensor([8, 192, 40, 40],"float32"),Tensor([8, 256, 40, 40],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([8, 192, 40, 40],"float32"),Tensor([8, 256, 40, 40],"float16"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:53:49.391286 test begin: paddle.concat(list[Tensor([8, 192, 42, 42],"float32"),Tensor([8, 256, 42, 42],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([8, 192, 42, 42],"float32"),Tensor([8, 256, 42, 42],"float16"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:53:49.754409 test begin: paddle.concat(list[Tensor([8, 192, 44, 44],"float32"),Tensor([8, 256, 44, 44],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([8, 192, 44, 44],"float32"),Tensor([8, 256, 44, 44],"float16"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:53:50.175783 test begin: paddle.concat(list[Tensor([8, 192, 46, 46],"float32"),Tensor([8, 256, 46, 46],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([8, 192, 46, 46],"float32"),Tensor([8, 256, 46, 46],"float16"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:53:50.607168 test begin: paddle.concat(list[Tensor([8, 192, 48, 48],"float32"),Tensor([8, 256, 48, 48],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([8, 192, 48, 48],"float32"),Tensor([8, 256, 48, 48],"float16"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:53:51.096233 test begin: paddle.concat(list[Tensor([8, 24, 160, 160],"float32"),Tensor([8, 24, 160, 160],"float32"),Tensor([8, 24, 160, 160],"float32"),Tensor([8, 24, 160, 160],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([8, 24, 160, 160],"float32"),Tensor([8, 24, 160, 160],"float32"),Tensor([8, 24, 160, 160],"float32"),Tensor([8, 24, 160, 160],"float16"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 3th tensor is float16. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:53:52.045491 test begin: paddle.concat(list[Tensor([8, 24, 240, 240],"float32"),Tensor([8, 24, 240, 240],"float32"),Tensor([8, 24, 240, 240],"float32"),Tensor([8, 24, 240, 240],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([8, 24, 240, 240],"float32"),Tensor([8, 24, 240, 240],"float32"),Tensor([8, 24, 240, 240],"float32"),Tensor([8, 24, 240, 240],"float16"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 3th tensor is float16. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:53:53.899200 test begin: paddle.concat(list[Tensor([8, 256, 160, 160],"float16"),Tensor([8, 256, 160, 160],"float32"),Tensor([8, 256, 160, 160],"float32"),Tensor([8, 256, 160, 160],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([8, 256, 160, 160],"float16"),Tensor([8, 256, 160, 160],"float32"),Tensor([8, 256, 160, 160],"float32"),Tensor([8, 256, 160, 160],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:54:02.246433 test begin: paddle.concat(list[Tensor([8, 256, 20, 20],"float32"),Tensor([8, 512, 20, 20],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([8, 256, 20, 20],"float32"),Tensor([8, 512, 20, 20],"float16"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:54:02.509364 test begin: paddle.concat(list[Tensor([8, 256, 22, 22],"float32"),Tensor([8, 512, 22, 22],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([8, 256, 22, 22],"float32"),Tensor([8, 512, 22, 22],"float16"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:54:02.786187 test begin: paddle.concat(list[Tensor([8, 256, 24, 24],"float32"),Tensor([8, 512, 24, 24],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([8, 256, 24, 24],"float32"),Tensor([8, 512, 24, 24],"float16"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:54:03.079683 test begin: paddle.concat(list[Tensor([8, 256, 26, 26],"float32"),Tensor([8, 512, 26, 26],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([8, 256, 26, 26],"float32"),Tensor([8, 512, 26, 26],"float16"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:54:03.396341 test begin: paddle.concat(list[Tensor([8, 256, 28, 28],"float32"),Tensor([8, 512, 28, 28],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([8, 256, 28, 28],"float32"),Tensor([8, 512, 28, 28],"float16"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:54:03.827137 test begin: paddle.concat(list[Tensor([8, 256, 30, 30],"float32"),Tensor([8, 512, 30, 30],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([8, 256, 30, 30],"float32"),Tensor([8, 512, 30, 30],"float16"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:54:04.190504 test begin: paddle.concat(list[Tensor([8, 256, 32, 32],"float32"),Tensor([8, 512, 32, 32],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([8, 256, 32, 32],"float32"),Tensor([8, 512, 32, 32],"float16"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:54:04.591798 test begin: paddle.concat(list[Tensor([8, 256, 34, 34],"float32"),Tensor([8, 512, 34, 34],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([8, 256, 34, 34],"float32"),Tensor([8, 512, 34, 34],"float16"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:54:05.031159 test begin: paddle.concat(list[Tensor([8, 256, 36, 36],"float32"),Tensor([8, 512, 36, 36],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([8, 256, 36, 36],"float32"),Tensor([8, 512, 36, 36],"float16"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:54:05.575915 test begin: paddle.concat(list[Tensor([8, 256, 38, 38],"float32"),Tensor([8, 512, 38, 38],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([8, 256, 38, 38],"float32"),Tensor([8, 512, 38, 38],"float16"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:54:06.090075 test begin: paddle.concat(list[Tensor([8, 256, 40, 40],"float16"),Tensor([8, 256, 40, 40],"float32"),], 1, )
[paddle error] paddle.concat(list[Tensor([8, 256, 40, 40],"float16"),Tensor([8, 256, 40, 40],"float32"),], 1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:54:06.488605 test begin: paddle.concat(list[Tensor([8, 256, 40, 40],"float32"),Tensor([8, 256, 40, 40],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([8, 256, 40, 40],"float32"),Tensor([8, 256, 40, 40],"float16"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:54:06.863687 test begin: paddle.concat(list[Tensor([8, 64, 160, 160],"float16"),Tensor([8, 64, 160, 160],"float32"),Tensor([8, 64, 160, 160],"float32"),Tensor([8, 64, 160, 160],"float32"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([8, 64, 160, 160],"float16"),Tensor([8, 64, 160, 160],"float32"),Tensor([8, 64, 160, 160],"float32"),Tensor([8, 64, 160, 160],"float32"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:54:09.140312 test begin: paddle.concat(list[Tensor([8, 64, 160, 160],"float32"),Tensor([8, 64, 160, 160],"float32"),Tensor([8, 64, 160, 160],"float32"),Tensor([8, 64, 160, 160],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([8, 64, 160, 160],"float32"),Tensor([8, 64, 160, 160],"float32"),Tensor([8, 64, 160, 160],"float32"),Tensor([8, 64, 160, 160],"float16"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 3th tensor is float16. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:54:11.309093 test begin: paddle.concat(list[Tensor([8, 64, 80, 80],"float16"),Tensor([8, 64, 80, 80],"float32"),], 1, )
[paddle error] paddle.concat(list[Tensor([8, 64, 80, 80],"float16"),Tensor([8, 64, 80, 80],"float32"),], 1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:54:11.745673 test begin: paddle.concat(list[Tensor([8, 96, 40, 40],"float32"),Tensor([8, 128, 40, 40],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([8, 96, 40, 40],"float32"),Tensor([8, 128, 40, 40],"float16"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:54:12.014544 test begin: paddle.concat(list[Tensor([8, 96, 44, 44],"float32"),Tensor([8, 128, 44, 44],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([8, 96, 44, 44],"float32"),Tensor([8, 128, 44, 44],"float16"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:54:12.300973 test begin: paddle.concat(list[Tensor([8, 96, 48, 48],"float32"),Tensor([8, 128, 48, 48],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([8, 96, 48, 48],"float32"),Tensor([8, 128, 48, 48],"float16"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:54:12.612129 test begin: paddle.concat(list[Tensor([8, 96, 52, 52],"float32"),Tensor([8, 128, 52, 52],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([8, 96, 52, 52],"float32"),Tensor([8, 128, 52, 52],"float16"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:54:13.011089 test begin: paddle.concat(list[Tensor([8, 96, 56, 56],"float32"),Tensor([8, 128, 56, 56],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([8, 96, 56, 56],"float32"),Tensor([8, 128, 56, 56],"float16"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:54:13.397640 test begin: paddle.concat(list[Tensor([8, 96, 60, 60],"float32"),Tensor([8, 128, 60, 60],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([8, 96, 60, 60],"float32"),Tensor([8, 128, 60, 60],"float16"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:54:13.819036 test begin: paddle.concat(list[Tensor([8, 96, 64, 64],"float32"),Tensor([8, 128, 64, 64],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([8, 96, 64, 64],"float32"),Tensor([8, 128, 64, 64],"float16"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:54:14.233255 test begin: paddle.concat(list[Tensor([8, 96, 68, 68],"float32"),Tensor([8, 128, 68, 68],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([8, 96, 68, 68],"float32"),Tensor([8, 128, 68, 68],"float16"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:54:14.688293 test begin: paddle.concat(list[Tensor([8, 96, 72, 72],"float32"),Tensor([8, 128, 72, 72],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([8, 96, 72, 72],"float32"),Tensor([8, 128, 72, 72],"float16"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:54:15.204045 test begin: paddle.concat(list[Tensor([8, 96, 76, 76],"float32"),Tensor([8, 128, 76, 76],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([8, 96, 76, 76],"float32"),Tensor([8, 128, 76, 76],"float16"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:54:15.685158 test begin: paddle.concat(list[Tensor([8, 96, 80, 80],"float32"),Tensor([8, 128, 80, 80],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([8, 96, 80, 80],"float32"),Tensor([8, 128, 80, 80],"float16"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:54:16.317585 test begin: paddle.concat(list[Tensor([8, 96, 84, 84],"float32"),Tensor([8, 128, 84, 84],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([8, 96, 84, 84],"float32"),Tensor([8, 128, 84, 84],"float16"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:54:16.969326 test begin: paddle.concat(list[Tensor([8, 96, 88, 88],"float32"),Tensor([8, 128, 88, 88],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([8, 96, 88, 88],"float32"),Tensor([8, 128, 88, 88],"float16"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:54:17.703723 test begin: paddle.concat(list[Tensor([8, 96, 92, 92],"float32"),Tensor([8, 128, 92, 92],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([8, 96, 92, 92],"float32"),Tensor([8, 128, 92, 92],"float16"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:54:18.446682 test begin: paddle.concat(list[Tensor([8, 96, 96, 96],"float32"),Tensor([8, 128, 96, 96],"float16"),], axis=1, )
[paddle error] paddle.concat(list[Tensor([8, 96, 96, 96],"float32"),Tensor([8, 128, 96, 96],"float16"),], axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:54:19.284070 test begin: paddle.concat(list[Tensor([90, 128, 22, 22],"float32"),Tensor([90, 128, 22, 22],"float16"),], 1, )
[paddle error] paddle.concat(list[Tensor([90, 128, 22, 22],"float32"),Tensor([90, 128, 22, 22],"float16"),], 1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:54:19.905312 test begin: paddle.concat(list[Tensor([90, 128, 24, 24],"float32"),Tensor([90, 128, 24, 24],"float16"),], 1, )
[paddle error] paddle.concat(list[Tensor([90, 128, 24, 24],"float32"),Tensor([90, 128, 24, 24],"float16"),], 1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:54:20.582213 test begin: paddle.concat(list[Tensor([90, 128, 26, 26],"float32"),Tensor([90, 128, 26, 26],"float16"),], 1, )
[paddle error] paddle.concat(list[Tensor([90, 128, 26, 26],"float32"),Tensor([90, 128, 26, 26],"float16"),], 1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:54:21.386208 test begin: paddle.concat(list[Tensor([90, 128, 28, 28],"float32"),Tensor([90, 128, 28, 28],"float16"),], 1, )
[paddle error] paddle.concat(list[Tensor([90, 128, 28, 28],"float32"),Tensor([90, 128, 28, 28],"float16"),], 1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:54:22.303492 test begin: paddle.concat(list[Tensor([90, 128, 30, 30],"float32"),Tensor([90, 128, 30, 30],"float16"),], 1, )
[paddle error] paddle.concat(list[Tensor([90, 128, 30, 30],"float32"),Tensor([90, 128, 30, 30],"float16"),], 1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:54:23.347799 test begin: paddle.concat(list[Tensor([90, 128, 44, 44],"float32"),Tensor([90, 128, 44, 44],"float16"),], 1, )
[paddle error] paddle.concat(list[Tensor([90, 128, 44, 44],"float32"),Tensor([90, 128, 44, 44],"float16"),], 1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:54:25.260185 test begin: paddle.concat(list[Tensor([90, 128, 48, 48],"float32"),Tensor([90, 128, 48, 48],"float16"),], 1, )
[paddle error] paddle.concat(list[Tensor([90, 128, 48, 48],"float32"),Tensor([90, 128, 48, 48],"float16"),], 1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:54:27.529620 test begin: paddle.concat(list[Tensor([90, 128, 52, 52],"float32"),Tensor([90, 128, 52, 52],"float16"),], 1, )
[paddle error] paddle.concat(list[Tensor([90, 128, 52, 52],"float32"),Tensor([90, 128, 52, 52],"float16"),], 1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:54:30.314716 test begin: paddle.concat(list[Tensor([90, 128, 56, 56],"float32"),Tensor([90, 128, 56, 56],"float16"),], 1, )
[paddle error] paddle.concat(list[Tensor([90, 128, 56, 56],"float32"),Tensor([90, 128, 56, 56],"float16"),], 1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:54:33.292293 test begin: paddle.concat(list[Tensor([90, 128, 60, 60],"float32"),Tensor([90, 128, 60, 60],"float16"),], 1, )
[paddle error] paddle.concat(list[Tensor([90, 128, 60, 60],"float32"),Tensor([90, 128, 60, 60],"float16"),], 1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:54:36.713004 test begin: paddle.concat(tuple(Tensor([128, 1, 768],"float32"),Tensor([128, 196, 768],"float16"),), axis=1, )
[paddle error] paddle.concat(tuple(Tensor([128, 1, 768],"float32"),Tensor([128, 196, 768],"float16"),), axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:54:37.696344 test begin: paddle.concat(tuple(Tensor([14, 1, 768],"float32"),Tensor([14, 1568, 768],"float16"),), axis=1, )
[paddle error] paddle.concat(tuple(Tensor([14, 1, 768],"float32"),Tensor([14, 1568, 768],"float16"),), axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:54:38.494702 test begin: paddle.concat(tuple(Tensor([24, 32, 128, 128],"float32"),Tensor([24, 34, 128, 128],"float16"),), axis=1, )
[paddle error] paddle.concat(tuple(Tensor([24, 32, 128, 128],"float32"),Tensor([24, 34, 128, 128],"float16"),), axis=1, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float32, but 1th tensor is float16. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-04-26 23:54:39.803613 test begin: paddle.concat(x=tuple(Tensor([2, 3, 1, 64],"float16"),Tensor([2, 3, 256, 64],"float32"),), axis=-2, )
[paddle error] paddle.concat(x=tuple(Tensor([2, 3, 1, 64],"float16"),Tensor([2, 3, 256, 64],"float32"),), axis=-2, )
(InvalidArgument) The data_type of input tensor in list isn't consistent, the first tensor is float16, but 1th tensor is float32. (at /paddle/paddle/phi/api/lib/kernel_dispatch.cc:128)
2025-05-04 09:08:53.700802 test begin: paddle.Tensor.__getitem__(Tensor([6, 5, 4],"int64"), list[list[0,2,0,1,3,],list[0,0,1,2,0,],], )
[accuracy error] paddle.Tensor.__getitem__(Tensor([6, 5, 4],"int64"), list[list[0,2,0,1,3,],list[0,0,1,2,0,],], )
Not equal to tolerance rtol=0.01, atol=0.01
(shapes (2, 5, 5, 4), (5, 4) mismatch)
ACTUAL: array([[[[-26847,  57167,  57652, -19216],
[ 18158, -34145,  64619, -63900],
[  5242, -25569,  35810, -54127],...
DESIRED: array([[-26847,  57167,  57652, -19216],
[  5191,  16593,  35825,  38279],
[ 18158, -34145,  64619, -63900],...
2025-05-04 01:34:37.705010 test begin: paddle.Tensor.__getitem__(Tensor([6, 5, 4],"int64"), list[Tensor([5],"int64"),Tensor([5],"int64"),], )
[accuracy error] paddle.Tensor.__getitem__(Tensor([6, 5, 4],"int64"), list[Tensor([5],"int64"),Tensor([5],"int64"),], )
Not equal to tolerance rtol=0.01, atol=0.01
(shapes (2, 5, 5, 4), (5, 4) mismatch)
ACTUAL: array([[[[ 41063, -62829,  62731, -63134],
[-14309, -13952, -23215,  65404],
[-40902,  33227,  11407, -65276],...
DESIRED: array([[ 41063, -62829,  62731, -63134],
[-43177,  60131, -36502, -10020],
[ 34134,  36452,   4154,  11421],...
2025-05-04 03:11:53.843809 test begin: paddle.Tensor.__setitem__(Tensor([200, 4],"float32"), Tensor([100],"int64"), Tensor([100, 4],"float32"), )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.Tensor.__setitem__(Tensor([200, 4],"float32"), Tensor([100],"int64"), Tensor([100, 4],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 6 / 800 (0.75%)
Max absolute difference among violations: 2.
Max relative difference among violations: 1.
ACTUAL: array([[ 0.000000e+00,  2.000000e+00,  2.000000e+00,  3.000000e+00],
[ 2.000000e+00,  0.000000e+00,  1.000000e+00,  2.000000e+00],
[ 0.000000e+00,  0.000000e+00,  1.000000e+00,  3.000000e+00],...
DESIRED: array([[ 0.000000e+00,  0.000000e+00,  3.000000e+00,  2.000000e+00],
[ 1.000000e+00,  2.000000e+00,  3.000000e+00,  2.000000e+00],
[ 0.000000e+00,  0.000000e+00,  1.000000e+00,  3.000000e+00],...
2025-05-04 03:11:54.348233 test begin: paddle.Tensor.__setitem__(Tensor([200],"int64"), Tensor([100],"int64"), Tensor([100],"int64"), )
element 0 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.__setitem__(Tensor([200],"int64"), Tensor([100],"int64"), Tensor([100],"int64"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 5 / 200 (2.5%)
Max absolute difference among violations: 114
Max relative difference among violations: 1.83870968
ACTUAL: array([    54,     33,     31,     65,     26, -64986,  20139,     17,
90, -38524, -28887,     96,  27315,    136,    163,  58522,
-52704, -47709, -45362,  -3796,    146,     23,    147,  54683,...
DESIRED: array([    54,     33,     31,     65,     26, -64986,  20139,     17,
90, -38524, -28887,     96,  27315,    136,    163,  58522,
-52704, -47709, -45362,  -3796,    146,     23,    147,  54683,...
2025-05-04 03:13:04.050617 test begin: paddle.Tensor.__setitem__(Tensor([3, 3, 5],"float32"), Tensor([3],"int64"), Tensor([3, 3, 1],"float32"), )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.Tensor.__setitem__(Tensor([3, 3, 5],"float32"), Tensor([3],"int64"), Tensor([3, 3, 1],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 2 / 45 (4.44%)
Max absolute difference among violations: 1.
Max relative difference among violations: 1.
ACTUAL: array([[[-0.142444, -0.431725,  0.122944,  0.304467,  0.293337],
[-0.192258, -0.474809, -0.343436,  0.217491, -0.431284],
[-0.081457, -0.331211,  0.117439, -0.086468,  0.402458]],...
DESIRED: array([[[-0.142444, -0.431725,  0.122944,  0.304467,  0.293337],
[-0.192258, -0.474809, -0.343436,  0.217491, -0.431284],
[-0.081457, -0.331211,  0.117439, -0.086468,  0.402458]],...
2025-05-04 03:18:04.077262 test begin: paddle.Tensor.__setitem__(Tensor([4, 8, 16, 32],"float32"), Tensor([2],"int64"), Tensor([2, 8, 16, 32],"float32"), )
One of the differentiated Tensors does not require grad
[accuracy error] paddle.Tensor.__setitem__(Tensor([4, 8, 16, 32],"float32"), Tensor([2],"int64"), Tensor([2, 8, 16, 32],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 872 / 16384 (5.32%)
Max absolute difference among violations: 3.
Max relative difference among violations: 2.
ACTUAL: array([[[[-3.766463e-01,  1.665981e-01,  4.036773e-01, ...,
1.391638e-01, -1.738789e-01, -2.631164e-01],
[ 9.319185e-02, -4.213132e-01,  4.856414e-01, ...,...
DESIRED: array([[[[-3.766463e-01,  1.665981e-01,  4.036773e-01, ...,
1.391638e-01, -1.738789e-01, -2.631164e-01],
[ 9.319185e-02, -4.213132e-01,  4.856414e-01, ...,...
2025-05-04 03:18:22.210125 test begin: paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([100],"int64"),slice(None,None,None),), Tensor([100, 7],"float32"), )
[accuracy error] paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([100],"int64"),slice(None,None,None),), Tensor([100, 7],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 40 / 368480 (0.0109%)
Max absolute difference among violations: 6.
Max relative difference among violations: 3.
ACTUAL: array([[ 2.      ,  1.      ,  5.      , ...,  4.      ,  2.      ,
0.      ],
[ 2.      ,  0.      ,  6.      , ...,  2.      ,  2.      ,...
DESIRED: array([[ 1.      ,  1.      ,  4.      , ...,  5.      ,  0.      ,
6.      ],
[ 5.      ,  4.      ,  5.      , ...,  6.      ,  4.      ,...
2025-05-04 03:18:22.406324 test begin: paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([103],"int64"),slice(None,None,None),), Tensor([103, 7],"float32"), )
[accuracy error] paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([103],"int64"),slice(None,None,None),), Tensor([103, 7],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 39 / 368480 (0.0106%)
Max absolute difference among violations: 6.
Max relative difference among violations: 5.
ACTUAL: array([[ 2.      ,  6.      ,  5.      , ...,  6.      ,  1.      ,
0.      ],
[ 3.      ,  5.      ,  0.      , ...,  6.      ,  3.      ,...
DESIRED: array([[ 0.      ,  1.      ,  5.      , ...,  0.      ,  3.      ,
5.      ],
[ 0.      ,  1.      ,  0.      , ...,  6.      ,  6.      ,...
2025-05-04 03:18:22.603220 test begin: paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([108],"int64"),slice(None,None,None),), Tensor([108, 7],"float32"), )
[accuracy error] paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([108],"int64"),slice(None,None,None),), Tensor([108, 7],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 40 / 368480 (0.0109%)
Max absolute difference among violations: 6.
Max relative difference among violations: 4.
ACTUAL: array([[ 4.      ,  4.      ,  0.      , ...,  3.      ,  6.      ,
3.      ],
[ 5.      ,  0.      ,  1.      , ...,  1.      ,  0.      ,...
DESIRED: array([[ 4.      ,  4.      ,  5.      , ...,  3.      ,  3.      ,
2.      ],
[ 4.      ,  0.      ,  6.      , ...,  5.      ,  6.      ,...
2025-05-04 03:18:22.798568 test begin: paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([10],"int64"),slice(None,None,None),), Tensor([10, 7],"float32"), )
[accuracy error] paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([10],"int64"),slice(None,None,None),), Tensor([10, 7],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 13 / 368480 (0.00353%)
Max absolute difference among violations: 6.
Max relative difference among violations: 2.
ACTUAL: array([[ 1.000000e+00,  1.000000e+00,  6.000000e+00, ...,  3.000000e+00,
0.000000e+00,  1.000000e+00],
[ 3.820147e-01,  3.090889e-01, -3.013190e-01, ...,  2.643481e-02,...
DESIRED: array([[ 3.000000e+00,  1.000000e+00,  6.000000e+00, ...,  3.000000e+00,
0.000000e+00,  1.000000e+00],
[ 3.820147e-01,  3.090889e-01, -3.013190e-01, ...,  2.643481e-02,...
2025-05-04 03:18:22.994387 test begin: paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([111],"int64"),slice(None,None,None),), Tensor([111, 7],"float32"), )
[accuracy error] paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([111],"int64"),slice(None,None,None),), Tensor([111, 7],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 43 / 368480 (0.0117%)
Max absolute difference among violations: 6.
Max relative difference among violations: 5.
ACTUAL: array([[ 6.      ,  6.      ,  0.      , ...,  4.      ,  6.      ,
1.      ],
[ 3.      ,  6.      ,  5.      , ...,  5.      ,  5.      ,...
DESIRED: array([[ 1.      ,  1.      ,  2.      , ...,  2.      ,  2.      ,
2.      ],
[ 1.      ,  6.      ,  3.      , ...,  2.      ,  2.      ,...
2025-05-04 03:18:23.188427 test begin: paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([11],"int64"),slice(None,None,None),), Tensor([11, 7],"float32"), )
[accuracy error] paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([11],"int64"),slice(None,None,None),), Tensor([11, 7],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 7 / 368480 (0.0019%)
Max absolute difference among violations: 6.
Max relative difference among violations: 1.
ACTUAL: array([[ 5.      ,  0.      ,  0.      , ...,  5.      ,  2.      ,
5.      ],
[ 6.      ,  5.      ,  2.      , ...,  1.      ,  1.      ,...
DESIRED: array([[ 6.      ,  6.      ,  5.      , ...,  6.      ,  1.      ,
3.      ],
[ 6.      ,  5.      ,  2.      , ...,  1.      ,  1.      ,...
2025-05-04 03:18:23.567856 test begin: paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([13],"int64"),slice(None,None,None),), Tensor([13, 7],"float32"), )
[accuracy error] paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([13],"int64"),slice(None,None,None),), Tensor([13, 7],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 22 / 368480 (0.00597%)
Max absolute difference among violations: 5.
Max relative difference among violations: 5.
ACTUAL: array([[ 1.      ,  6.      ,  4.      , ...,  5.      ,  5.      ,
5.      ],
[ 0.      ,  4.      ,  3.      , ...,  6.      ,  0.      ,...
DESIRED: array([[ 4.      ,  1.      ,  4.      , ...,  0.      ,  1.      ,
3.      ],
[ 0.      ,  1.      ,  4.      , ...,  3.      ,  1.      ,...
2025-05-04 03:18:23.757754 test begin: paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([14],"int64"),slice(None,None,None),), Tensor([14, 7],"float32"), )
[accuracy error] paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([14],"int64"),slice(None,None,None),), Tensor([14, 7],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 5 / 368480 (0.00136%)
Max absolute difference among violations: 4.
Max relative difference among violations: 1.
ACTUAL: array([[ 2.000000e+00,  6.000000e+00,  5.000000e+00, ...,  1.000000e+00,
5.000000e+00,  3.000000e+00],
[ 4.000000e+00,  4.000000e+00,  0.000000e+00, ...,  3.000000e+00,...
DESIRED: array([[ 2.000000e+00,  6.000000e+00,  5.000000e+00, ...,  1.000000e+00,
5.000000e+00,  3.000000e+00],
[ 4.000000e+00,  4.000000e+00,  0.000000e+00, ...,  3.000000e+00,...
2025-05-04 03:18:23.948052 test begin: paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([15],"int64"),slice(None,None,None),), Tensor([15, 7],"float32"), )
[accuracy error] paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([15],"int64"),slice(None,None,None),), Tensor([15, 7],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 7 / 368480 (0.0019%)
Max absolute difference among violations: 6.
Max relative difference among violations: 1.5
ACTUAL: array([[ 0.      ,  6.      ,  6.      , ...,  4.      ,  3.      ,
0.      ],
[ 4.      ,  0.      ,  2.      , ...,  2.      ,  1.      ,...
DESIRED: array([[ 0.      ,  6.      ,  6.      , ...,  5.      ,  3.      ,
2.      ],
[ 4.      ,  0.      ,  2.      , ...,  2.      ,  1.      ,...
2025-05-04 03:18:24.140820 test begin: paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([16],"int64"),slice(None,None,None),), Tensor([16, 7],"float32"), )
[accuracy error] paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([16],"int64"),slice(None,None,None),), Tensor([16, 7],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 24 / 368480 (0.00651%)
Max absolute difference among violations: 6.
Max relative difference among violations: 5.
ACTUAL: array([[ 6.      ,  4.      ,  3.      , ...,  3.      ,  0.      ,
4.      ],
[ 0.341356, -0.17101 ,  0.047919, ...,  0.335381,  0.408037,...
DESIRED: array([[ 6.      ,  4.      ,  3.      , ...,  3.      ,  0.      ,
4.      ],
[ 0.341356, -0.17101 ,  0.047919, ...,  0.335381,  0.408037,...
2025-05-04 03:18:24.255521 test begin: paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([17],"int64"),slice(None,None,None),), Tensor([17, 7],"float32"), )
[accuracy error] paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([17],"int64"),slice(None,None,None),), Tensor([17, 7],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 8 / 368480 (0.00217%)
Max absolute difference among violations: 6.
Max relative difference among violations: 5.
ACTUAL: array([[ 6.000000e+00,  4.000000e+00,  0.000000e+00, ...,  2.000000e+00,
2.000000e+00,  2.000000e+00],
[ 0.000000e+00,  6.000000e+00,  6.000000e+00, ...,  2.000000e+00,...
DESIRED: array([[ 4.000000e+00,  0.000000e+00,  0.000000e+00, ...,  0.000000e+00,
2.000000e+00,  2.000000e+00],
[ 5.000000e+00,  1.000000e+00,  2.000000e+00, ...,  5.000000e+00,...
2025-05-04 03:18:24.440576 test begin: paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([18],"int64"),slice(None,None,None),), Tensor([18, 7],"float32"), )
[accuracy error] paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([18],"int64"),slice(None,None,None),), Tensor([18, 7],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 9 / 368480 (0.00244%)
Max absolute difference among violations: 5.
Max relative difference among violations: 1.
ACTUAL: array([[ 3.      ,  1.      ,  0.      , ...,  0.      ,  3.      ,
4.      ],
[ 1.      ,  5.      ,  6.      , ...,  2.      ,  3.      ,...
DESIRED: array([[ 3.      ,  1.      ,  0.      , ...,  0.      ,  3.      ,
4.      ],
[ 1.      ,  5.      ,  6.      , ...,  2.      ,  3.      ,...
2025-05-04 03:18:24.627852 test begin: paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([19],"int64"),slice(None,None,None),), Tensor([19, 7],"float32"), )
[accuracy error] paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([19],"int64"),slice(None,None,None),), Tensor([19, 7],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 24 / 368480 (0.00651%)
Max absolute difference among violations: 6.
Max relative difference among violations: 5.
ACTUAL: array([[ 3.      ,  5.      ,  4.      , ...,  1.      ,  4.      ,
4.      ],
[ 0.      ,  0.      ,  5.      , ...,  6.      ,  2.      ,...
DESIRED: array([[ 4.      ,  1.      ,  4.      , ...,  1.      ,  4.      ,
4.      ],
[ 0.      ,  0.      ,  5.      , ...,  6.      ,  2.      ,...
2025-05-04 03:18:24.989589 test begin: paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([21],"int64"),slice(None,None,None),), Tensor([21, 7],"float32"), )
[accuracy error] paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([21],"int64"),slice(None,None,None),), Tensor([21, 7],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 15 / 368480 (0.00407%)
Max absolute difference among violations: 5.
Max relative difference among violations: 1.
ACTUAL: array([[ 4.      ,  2.      ,  6.      , ...,  2.      ,  2.      ,
0.      ],
[ 5.      ,  6.      ,  0.      , ...,  0.      ,  3.      ,...
DESIRED: array([[ 4.      ,  2.      ,  4.      , ...,  1.      ,  5.      ,
5.      ],
[ 4.      ,  6.      ,  0.      , ...,  0.      ,  3.      ,...
2025-05-04 03:18:25.171994 test begin: paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([22],"int64"),slice(None,None,None),), Tensor([22, 7],"float32"), )
[accuracy error] paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([22],"int64"),slice(None,None,None),), Tensor([22, 7],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 25 / 368480 (0.00678%)
Max absolute difference among violations: 6.
Max relative difference among violations: 5.
ACTUAL: array([[ 1.      ,  6.      ,  1.      , ...,  2.      ,  2.      ,
2.      ],
[ 3.      ,  4.      ,  5.      , ...,  4.      ,  6.      ,...
DESIRED: array([[ 3.      ,  0.      ,  1.      , ...,  2.      ,  2.      ,
2.      ],
[ 4.      ,  3.      ,  5.      , ...,  5.      ,  6.      ,...
2025-05-04 03:18:25.360631 test begin: paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([23],"int64"),slice(None,None,None),), Tensor([23, 7],"float32"), )
[accuracy error] paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([23],"int64"),slice(None,None,None),), Tensor([23, 7],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 31 / 368480 (0.00841%)
Max absolute difference among violations: 6.
Max relative difference among violations: 5.
ACTUAL: array([[ 1.000000e+00,  4.000000e+00,  6.000000e+00, ...,  3.000000e+00,
6.000000e+00,  2.000000e+00],
[ 6.000000e+00,  0.000000e+00,  3.000000e+00, ...,  2.000000e+00,...
DESIRED: array([[ 2.000000e+00,  0.000000e+00,  2.000000e+00, ...,  3.000000e+00,
6.000000e+00,  3.000000e+00],
[ 6.000000e+00,  0.000000e+00,  6.000000e+00, ...,  0.000000e+00,...
2025-05-04 03:18:25.550616 test begin: paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([24],"int64"),slice(None,None,None),), Tensor([24, 7],"float32"), )
[accuracy error] paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([24],"int64"),slice(None,None,None),), Tensor([24, 7],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 27 / 368480 (0.00733%)
Max absolute difference among violations: 6.
Max relative difference among violations: 4.
ACTUAL: array([[ 2.      ,  5.      ,  3.      , ...,  0.      ,  4.      ,
5.      ],
[ 5.      ,  0.      ,  0.      , ...,  5.      ,  0.      ,...
DESIRED: array([[ 0.000000e+00,  3.000000e+00,  6.000000e+00, ...,  1.000000e+00,
3.000000e+00,  3.000000e+00],
[ 4.000000e+00,  5.000000e+00,  2.000000e+00, ...,  4.000000e+00,...
2025-05-04 03:18:25.748597 test begin: paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([25],"int64"),slice(None,None,None),), Tensor([25, 7],"float32"), )
[accuracy error] paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([25],"int64"),slice(None,None,None),), Tensor([25, 7],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 16 / 368480 (0.00434%)
Max absolute difference among violations: 6.
Max relative difference among violations: 4.
ACTUAL: array([[ 5.      ,  4.      ,  0.      , ...,  5.      ,  0.      ,
1.      ],
[ 4.      ,  4.      ,  2.      , ...,  2.      ,  5.      ,...
DESIRED: array([[ 5.      ,  6.      ,  6.      , ...,  1.      ,  3.      ,
2.      ],
[ 4.      ,  4.      ,  2.      , ...,  2.      ,  5.      ,...
2025-05-04 03:18:25.943574 test begin: paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([26],"int64"),slice(None,None,None),), Tensor([26, 7],"float32"), )
[accuracy error] paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([26],"int64"),slice(None,None,None),), Tensor([26, 7],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 21 / 368480 (0.0057%)
Max absolute difference among violations: 6.
Max relative difference among violations: 1.5
ACTUAL: array([[ 3.000000e+00,  2.000000e+00,  4.000000e+00, ...,  4.000000e+00,
6.000000e+00,  3.000000e+00],
[ 0.000000e+00,  5.000000e+00,  4.000000e+00, ...,  6.000000e+00,...
DESIRED: array([[ 2.000000e+00,  6.000000e+00,  2.000000e+00, ...,  5.000000e+00,
5.000000e+00,  0.000000e+00],
[ 5.000000e+00,  2.000000e+00,  2.000000e+00, ...,  0.000000e+00,...
2025-05-04 03:18:26.143119 test begin: paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([27],"int64"),slice(None,None,None),), Tensor([27, 7],"float32"), )
[accuracy error] paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([27],"int64"),slice(None,None,None),), Tensor([27, 7],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 11 / 368480 (0.00299%)
Max absolute difference among violations: 6.
Max relative difference among violations: 4.
ACTUAL: array([[ 2.      ,  5.      ,  6.      , ...,  2.      ,  6.      ,
2.      ],
[ 1.      ,  0.      ,  2.      , ...,  4.      ,  2.      ,...
DESIRED: array([[ 2.      ,  5.      ,  6.      , ...,  2.      ,  6.      ,
2.      ],
[ 1.      ,  0.      ,  2.      , ...,  4.      ,  2.      ,...
2025-05-04 03:18:26.338060 test begin: paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([28],"int64"),slice(None,None,None),), Tensor([28, 7],"float32"), )
[accuracy error] paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([28],"int64"),slice(None,None,None),), Tensor([28, 7],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 12 / 368480 (0.00326%)
Max absolute difference among violations: 4.
Max relative difference among violations: 4.
ACTUAL: array([[ 6.      ,  5.      ,  4.      , ...,  2.      ,  0.      ,
6.      ],
[ 0.      ,  6.      ,  5.      , ...,  1.      ,  4.      ,...
DESIRED: array([[ 6.      ,  1.      ,  3.      , ...,  1.      ,  0.      ,
4.      ],
[ 0.      ,  6.      ,  5.      , ...,  1.      ,  4.      ,...
2025-05-04 03:18:26.530171 test begin: paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([29],"int64"),slice(None,None,None),), Tensor([29, 7],"float32"), )
[accuracy error] paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([29],"int64"),slice(None,None,None),), Tensor([29, 7],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 13 / 368480 (0.00353%)
Max absolute difference among violations: 5.
Max relative difference among violations: 5.
ACTUAL: array([[ 0.      ,  5.      ,  3.      , ...,  4.      ,  1.      ,
5.      ],
[ 1.      ,  5.      ,  0.      , ...,  0.      ,  5.      ,...
DESIRED: array([[ 0.      ,  5.      ,  3.      , ...,  4.      ,  1.      ,
5.      ],
[ 1.      ,  5.      ,  0.      , ...,  0.      ,  5.      ,...
2025-05-04 03:18:26.917038 test begin: paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([30],"int64"),slice(None,None,None),), Tensor([30, 7],"float32"), )
[accuracy error] paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([30],"int64"),slice(None,None,None),), Tensor([30, 7],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 21 / 368480 (0.0057%)
Max absolute difference among violations: 5.
Max relative difference among violations: 2.
ACTUAL: array([[ 2.      ,  4.      ,  2.      , ...,  2.      ,  0.      ,
2.      ],
[ 5.      ,  1.      ,  6.      , ...,  3.      ,  5.      ,...
DESIRED: array([[ 5.      ,  2.      ,  4.      , ...,  1.      ,  1.      ,
5.      ],
[ 5.      ,  1.      ,  6.      , ...,  3.      ,  5.      ,...
2025-05-04 03:18:27.152732 test begin: paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([31],"int64"),slice(None,None,None),), Tensor([31, 7],"float32"), )
[accuracy error] paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([31],"int64"),slice(None,None,None),), Tensor([31, 7],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 28 / 368480 (0.0076%)
Max absolute difference among violations: 6.
Max relative difference among violations: 2.
ACTUAL: array([[ 4.      ,  1.      ,  4.      , ...,  3.      ,  0.      ,
2.      ],
[ 2.      ,  6.      ,  3.      , ...,  3.      ,  0.      ,...
DESIRED: array([[ 4.      ,  1.      ,  4.      , ...,  3.      ,  0.      ,
2.      ],
[ 5.      ,  3.      ,  4.      , ...,  3.      ,  1.      ,...
2025-05-04 03:18:27.349915 test begin: paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([32],"int64"),slice(None,None,None),), Tensor([32, 7],"float32"), )
[accuracy error] paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([32],"int64"),slice(None,None,None),), Tensor([32, 7],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 27 / 368480 (0.00733%)
Max absolute difference among violations: 6.
Max relative difference among violations: 5.
ACTUAL: array([[ 5.      ,  5.      ,  6.      , ...,  1.      ,  6.      ,
2.      ],
[ 2.      ,  1.      ,  2.      , ...,  6.      ,  5.      ,...
DESIRED: array([[ 5.      ,  5.      ,  1.      , ...,  2.      ,  2.      ,
0.      ],
[ 2.      ,  1.      ,  2.      , ...,  6.      ,  5.      ,...
2025-05-04 03:18:27.549273 test begin: paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([33],"int64"),slice(None,None,None),), Tensor([33, 7],"float32"), )
[accuracy error] paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([33],"int64"),slice(None,None,None),), Tensor([33, 7],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 11 / 368480 (0.00299%)
Max absolute difference among violations: 5.
Max relative difference among violations: 5.
ACTUAL: array([[ 3.      ,  1.      ,  2.      , ...,  0.      ,  3.      ,
3.      ],
[ 6.      ,  2.      ,  5.      , ...,  0.      ,  6.      ,...
DESIRED: array([[ 3.      ,  1.      ,  2.      , ...,  0.      ,  3.      ,
3.      ],
[ 6.      ,  2.      ,  5.      , ...,  3.      ,  1.      ,...
2025-05-04 03:18:27.937548 test begin: paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([35],"int64"),slice(None,None,None),), Tensor([35, 7],"float32"), )
[accuracy error] paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([35],"int64"),slice(None,None,None),), Tensor([35, 7],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 12 / 368480 (0.00326%)
Max absolute difference among violations: 4.
Max relative difference among violations: 3.
ACTUAL: array([[ 1.000000e+00,  3.000000e+00,  5.000000e+00, ...,  2.000000e+00,
4.000000e+00,  4.000000e+00],
[ 5.000000e+00,  5.000000e+00,  3.000000e+00, ...,  2.000000e+00,...
DESIRED: array([[ 0.000000e+00,  3.000000e+00,  5.000000e+00, ...,  0.000000e+00,
1.000000e+00,  3.000000e+00],
[ 5.000000e+00,  5.000000e+00,  3.000000e+00, ...,  2.000000e+00,...
2025-05-04 03:18:28.121740 test begin: paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([36],"int64"),slice(None,None,None),), Tensor([36, 7],"float32"), )
[accuracy error] paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([36],"int64"),slice(None,None,None),), Tensor([36, 7],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 7 / 368480 (0.0019%)
Max absolute difference among violations: 6.
Max relative difference among violations: 1.
ACTUAL: array([[ 4.000000e+00,  4.000000e+00,  0.000000e+00, ...,  6.000000e+00,
3.000000e+00,  5.000000e+00],
[ 6.000000e+00,  1.000000e+00,  6.000000e+00, ...,  4.000000e+00,...
DESIRED: array([[ 4.000000e+00,  4.000000e+00,  0.000000e+00, ...,  6.000000e+00,
3.000000e+00,  5.000000e+00],
[ 6.000000e+00,  1.000000e+00,  6.000000e+00, ...,  4.000000e+00,...
2025-05-04 03:18:28.307470 test begin: paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([37],"int64"),slice(None,None,None),), Tensor([37, 7],"float32"), )
[accuracy error] paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([37],"int64"),slice(None,None,None),), Tensor([37, 7],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 11 / 368480 (0.00299%)
Max absolute difference among violations: 6.
Max relative difference among violations: 3.
ACTUAL: array([[ 3.      ,  4.      ,  6.      , ...,  6.      ,  0.      ,
5.      ],
[ 5.      ,  1.      ,  3.      , ...,  3.      ,  5.      ,...
DESIRED: array([[ 3.      ,  4.      ,  6.      , ...,  6.      ,  0.      ,
5.      ],
[ 5.      ,  1.      ,  3.      , ...,  3.      ,  5.      ,...
2025-05-04 03:18:28.493988 test begin: paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([38],"int64"),slice(None,None,None),), Tensor([38, 7],"float32"), )
[accuracy error] paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([38],"int64"),slice(None,None,None),), Tensor([38, 7],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 12 / 368480 (0.00326%)
Max absolute difference among violations: 5.
Max relative difference among violations: 1.
ACTUAL: array([[ 5.000000e+00,  6.000000e+00,  1.000000e+00, ...,  1.000000e+00,
6.000000e+00,  4.000000e+00],
[ 4.000000e+00,  1.000000e+00,  6.000000e+00, ...,  4.000000e+00,...
DESIRED: array([[ 6.000000e+00,  6.000000e+00,  2.000000e+00, ...,  6.000000e+00,
3.000000e+00,  0.000000e+00],
[ 6.000000e+00,  6.000000e+00,  5.000000e+00, ...,  2.000000e+00,...
2025-05-04 03:18:28.685164 test begin: paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([39],"int64"),slice(None,None,None),), Tensor([39, 7],"float32"), )
[accuracy error] paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([39],"int64"),slice(None,None,None),), Tensor([39, 7],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 12 / 368480 (0.00326%)
Max absolute difference among violations: 6.
Max relative difference among violations: 4.
ACTUAL: array([[ 6.000000e+00,  5.000000e+00,  0.000000e+00, ...,  6.000000e+00,
0.000000e+00,  5.000000e+00],
[ 3.000000e+00,  1.000000e+00,  6.000000e+00, ...,  2.000000e+00,...
DESIRED: array([[ 6.000000e+00,  5.000000e+00,  0.000000e+00, ...,  6.000000e+00,
0.000000e+00,  5.000000e+00],
[ 3.000000e+00,  2.000000e+00,  4.000000e+00, ...,  1.000000e+00,...
2025-05-04 03:18:29.073711 test begin: paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([40],"int64"),slice(None,None,None),), Tensor([40, 7],"float32"), )
[accuracy error] paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([40],"int64"),slice(None,None,None),), Tensor([40, 7],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 17 / 368480 (0.00461%)
Max absolute difference among violations: 6.
Max relative difference among violations: 1.5
ACTUAL: array([[ 0.      ,  1.      ,  0.      , ...,  6.      ,  3.      ,
5.      ],
[ 3.      ,  0.      ,  5.      , ...,  4.      ,  3.      ,...
DESIRED: array([[ 6.      ,  5.      ,  1.      , ...,  0.      ,  0.      ,
2.      ],
[ 3.      ,  0.      ,  5.      , ...,  0.      ,  2.      ,...
2025-05-04 03:18:29.251878 test begin: paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([41],"int64"),slice(None,None,None),), Tensor([41, 7],"float32"), )
[accuracy error] paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([41],"int64"),slice(None,None,None),), Tensor([41, 7],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 7 / 368480 (0.0019%)
Max absolute difference among violations: 4.
Max relative difference among violations: 1.5
ACTUAL: array([[ 6.      ,  6.      ,  3.      , ...,  4.      ,  5.      ,
2.      ],
[ 2.      ,  2.      ,  0.      , ...,  2.      ,  0.      ,...
DESIRED: array([[ 6.      ,  6.      ,  3.      , ...,  4.      ,  5.      ,
2.      ],
[ 2.      ,  2.      ,  0.      , ...,  2.      ,  0.      ,...
2025-05-04 03:18:29.444749 test begin: paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([42],"int64"),slice(None,None,None),), Tensor([42, 7],"float32"), )
[accuracy error] paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([42],"int64"),slice(None,None,None),), Tensor([42, 7],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 15 / 368480 (0.00407%)
Max absolute difference among violations: 6.
Max relative difference among violations: 5.
ACTUAL: array([[ 5.      ,  6.      ,  4.      , ...,  1.      ,  3.      ,
6.      ],
[ 6.      ,  3.      ,  6.      , ...,  0.      ,  6.      ,...
DESIRED: array([[ 5.      ,  6.      ,  4.      , ...,  1.      ,  3.      ,
1.      ],
[ 6.      ,  3.      ,  6.      , ...,  0.      ,  6.      ,...
2025-05-04 03:18:29.622752 test begin: paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([43],"int64"),slice(None,None,None),), Tensor([43, 7],"float32"), )
[accuracy error] paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([43],"int64"),slice(None,None,None),), Tensor([43, 7],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 12 / 368480 (0.00326%)
Max absolute difference among violations: 5.
Max relative difference among violations: 1.5
ACTUAL: array([[ 5.      ,  3.      ,  1.      , ...,  3.      ,  3.      ,
4.      ],
[ 1.      ,  6.      ,  0.      , ...,  3.      ,  0.      ,...
DESIRED: array([[ 5.      ,  5.      ,  5.      , ...,  4.      ,  0.      ,
6.      ],
[ 1.      ,  6.      ,  0.      , ...,  3.      ,  0.      ,...
2025-05-04 03:18:29.786539 test begin: paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([44],"int64"),slice(None,None,None),), Tensor([44, 7],"float32"), )
[accuracy error] paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([44],"int64"),slice(None,None,None),), Tensor([44, 7],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 11 / 368480 (0.00299%)
Max absolute difference among violations: 4.
Max relative difference among violations: 4.
ACTUAL: array([[ 0.000000e+00,  1.000000e+00,  5.000000e+00, ...,  3.000000e+00,
5.000000e+00,  5.000000e+00],
[ 2.000000e+00,  0.000000e+00,  4.000000e+00, ...,  5.000000e+00,...
DESIRED: array([[ 0.000000e+00,  1.000000e+00,  5.000000e+00, ...,  3.000000e+00,
5.000000e+00,  5.000000e+00],
[ 5.000000e+00,  1.000000e+00,  0.000000e+00, ...,  1.000000e+00,...
2025-05-04 03:18:29.983104 test begin: paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([45],"int64"),slice(None,None,None),), Tensor([45, 7],"float32"), )
[accuracy error] paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([45],"int64"),slice(None,None,None),), Tensor([45, 7],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 11 / 368480 (0.00299%)
Max absolute difference among violations: 5.
Max relative difference among violations: 5.
ACTUAL: array([[ 3.      ,  3.      ,  2.      , ...,  1.      ,  1.      ,
4.      ],
[ 2.      ,  4.      ,  4.      , ...,  2.      ,  6.      ,...
DESIRED: array([[ 3.      ,  3.      ,  2.      , ...,  1.      ,  1.      ,
4.      ],
[ 2.      ,  4.      ,  4.      , ...,  2.      ,  6.      ,...
2025-05-04 03:18:30.169530 test begin: paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([46],"int64"),slice(None,None,None),), Tensor([46, 7],"float32"), )
[accuracy error] paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([46],"int64"),slice(None,None,None),), Tensor([46, 7],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 10 / 368480 (0.00271%)
Max absolute difference among violations: 5.
Max relative difference among violations: 4.
ACTUAL: array([[ 0.      ,  6.      ,  5.      , ...,  2.      ,  4.      ,
0.      ],
[ 4.      ,  2.      ,  5.      , ...,  4.      ,  4.      ,...
DESIRED: array([[ 0.      ,  6.      ,  5.      , ...,  2.      ,  4.      ,
0.      ],
[ 1.      ,  1.      ,  5.      , ...,  4.      ,  4.      ,...
2025-05-04 03:18:30.368836 test begin: paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([47],"int64"),slice(None,None,None),), Tensor([47, 7],"float32"), )
[accuracy error] paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([47],"int64"),slice(None,None,None),), Tensor([47, 7],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 17 / 368480 (0.00461%)
Max absolute difference among violations: 5.
Max relative difference among violations: 5.
ACTUAL: array([[ 3.      ,  1.      ,  0.      , ...,  2.      ,  6.      ,
6.      ],
[ 4.      ,  2.      ,  1.      , ...,  5.      ,  6.      ,...
DESIRED: array([[ 0.      ,  3.      ,  5.      , ...,  4.      ,  1.      ,
3.      ],
[ 4.      ,  2.      ,  1.      , ...,  1.      ,  3.      ,...
2025-05-04 03:18:30.729278 test begin: paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([49],"int64"),slice(None,None,None),), Tensor([49, 7],"float32"), )
[accuracy error] paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([49],"int64"),slice(None,None,None),), Tensor([49, 7],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 17 / 368480 (0.00461%)
Max absolute difference among violations: 5.
Max relative difference among violations: 5.
ACTUAL: array([[ 2.      ,  6.      ,  1.      , ...,  6.      ,  0.      ,
5.      ],
[ 6.      ,  3.      ,  0.      , ...,  6.      ,  4.      ,...
DESIRED: array([[ 1.      ,  3.      ,  0.      , ...,  5.      ,  4.      ,
0.      ],
[ 2.      ,  1.      ,  1.      , ...,  4.      ,  4.      ,...
2025-05-04 03:18:31.108727 test begin: paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([50],"int64"),slice(None,None,None),), Tensor([50, 7],"float32"), )
[accuracy error] paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([50],"int64"),slice(None,None,None),), Tensor([50, 7],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 11 / 368480 (0.00299%)
Max absolute difference among violations: 6.
Max relative difference among violations: 4.
ACTUAL: array([[ 1.000000e+00,  2.000000e+00,  0.000000e+00, ...,  2.000000e+00,
4.000000e+00,  2.000000e+00],
[ 0.000000e+00,  2.000000e+00,  0.000000e+00, ...,  1.000000e+00,...
DESIRED: array([[ 1.000000e+00,  2.000000e+00,  0.000000e+00, ...,  2.000000e+00,
4.000000e+00,  2.000000e+00],
[ 0.000000e+00,  2.000000e+00,  0.000000e+00, ...,  1.000000e+00,...
2025-05-04 03:18:31.283246 test begin: paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([51],"int64"),slice(None,None,None),), Tensor([51, 7],"float32"), )
[accuracy error] paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([51],"int64"),slice(None,None,None),), Tensor([51, 7],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 25 / 368480 (0.00678%)
Max absolute difference among violations: 6.
Max relative difference among violations: 5.
ACTUAL: array([[ 6.      ,  6.      ,  0.      , ...,  5.      ,  4.      ,
5.      ],
[ 6.      ,  5.      ,  6.      , ...,  1.      ,  6.      ,...
DESIRED: array([[ 6.      ,  6.      ,  0.      , ...,  4.      ,  0.      ,
2.      ],
[ 6.      ,  5.      ,  6.      , ...,  1.      ,  6.      ,...
2025-05-04 03:18:31.477436 test begin: paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([52],"int64"),slice(None,None,None),), Tensor([52, 7],"float32"), )
[accuracy error] paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([52],"int64"),slice(None,None,None),), Tensor([52, 7],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 25 / 368480 (0.00678%)
Max absolute difference among violations: 6.
Max relative difference among violations: 4.
ACTUAL: array([[ 5.      ,  6.      ,  2.      , ...,  2.      ,  1.      ,
2.      ],
[ 3.      ,  0.      ,  2.      , ...,  3.      ,  5.      ,...
DESIRED: array([[ 1.      ,  2.      ,  3.      , ...,  6.      ,  0.      ,
4.      ],
[ 3.      ,  5.      ,  6.      , ...,  0.      ,  4.      ,...
2025-05-04 03:18:31.645812 test begin: paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([54],"int64"),slice(None,None,None),), Tensor([54, 7],"float32"), )
[accuracy error] paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([54],"int64"),slice(None,None,None),), Tensor([54, 7],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 24 / 368480 (0.00651%)
Max absolute difference among violations: 6.
Max relative difference among violations: 3.
ACTUAL: array([[ 5.      ,  4.      ,  2.      , ...,  1.      ,  3.      ,
1.      ],
[ 0.      ,  2.      ,  5.      , ...,  1.      ,  0.      ,...
DESIRED: array([[ 2.      ,  4.      ,  1.      , ...,  0.      ,  6.      ,
4.      ],
[ 6.      ,  5.      ,  5.      , ...,  4.      ,  5.      ,...
2025-05-04 03:18:31.806139 test begin: paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([55],"int64"),slice(None,None,None),), Tensor([55, 7],"float32"), )
[accuracy error] paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([55],"int64"),slice(None,None,None),), Tensor([55, 7],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 18 / 368480 (0.00488%)
Max absolute difference among violations: 5.
Max relative difference among violations: 4.
ACTUAL: array([[ 3.      ,  2.      ,  5.      , ...,  1.      ,  6.      ,
5.      ],
[ 5.      ,  3.      ,  5.      , ...,  3.      ,  2.      ,...
DESIRED: array([[ 1.      ,  1.      ,  4.      , ...,  2.      ,  3.      ,
5.      ],
[ 5.      ,  3.      ,  5.      , ...,  1.      ,  2.      ,...
2025-05-04 03:18:31.993145 test begin: paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([56],"int64"),slice(None,None,None),), Tensor([56, 7],"float32"), )
[accuracy error] paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([56],"int64"),slice(None,None,None),), Tensor([56, 7],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 3 / 368480 (0.000814%)
Max absolute difference among violations: 5.
Max relative difference among violations: 1.
ACTUAL: array([[ 4.      ,  1.      ,  5.      , ...,  6.      ,  3.      ,
1.      ],
[ 2.      ,  4.      ,  5.      , ...,  3.      ,  0.      ,...
DESIRED: array([[ 4.      ,  1.      ,  5.      , ...,  6.      ,  3.      ,
1.      ],
[ 2.      ,  4.      ,  5.      , ...,  3.      ,  0.      ,...
2025-05-04 03:18:32.186560 test begin: paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([57],"int64"),slice(None,None,None),), Tensor([57, 7],"float32"), )
[accuracy error] paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([57],"int64"),slice(None,None,None),), Tensor([57, 7],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 30 / 368480 (0.00814%)
Max absolute difference among violations: 6.
Max relative difference among violations: 5.
ACTUAL: array([[ 3.      ,  1.      ,  2.      , ...,  5.      ,  6.      ,
2.      ],
[ 5.      ,  5.      ,  6.      , ...,  5.      ,  3.      ,...
DESIRED: array([[ 3.      ,  1.      ,  2.      , ...,  5.      ,  6.      ,
2.      ],
[ 6.      ,  4.      ,  0.      , ...,  5.      ,  6.      ,...
2025-05-04 03:18:32.387061 test begin: paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([59],"int64"),slice(None,None,None),), Tensor([59, 7],"float32"), )
[accuracy error] paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([59],"int64"),slice(None,None,None),), Tensor([59, 7],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 3 / 368480 (0.000814%)
Max absolute difference among violations: 4.
Max relative difference among violations: 2.
ACTUAL: array([[ 4.      ,  4.      ,  3.      , ...,  5.      ,  3.      ,
1.      ],
[ 3.      ,  4.      ,  3.      , ...,  1.      ,  6.      ,...
DESIRED: array([[ 2.      ,  6.      ,  3.      , ...,  5.      ,  3.      ,
1.      ],
[ 3.      ,  4.      ,  3.      , ...,  1.      ,  6.      ,...
2025-05-04 03:18:32.582594 test begin: paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([5],"int64"),slice(None,None,None),), Tensor([5, 7],"float32"), )
[accuracy error] paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([5],"int64"),slice(None,None,None),), Tensor([5, 7],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 6 / 368480 (0.00163%)
Max absolute difference among violations: 5.
Max relative difference among violations: 4.
ACTUAL: array([[ 2.      ,  1.      ,  2.      , ...,  6.      ,  0.      ,
3.      ],
[ 0.052434, -0.459873, -0.487341, ...,  0.399922, -0.321179,...
DESIRED: array([[ 2.      ,  1.      ,  2.      , ...,  6.      ,  0.      ,
3.      ],
[ 0.052434, -0.459873, -0.487341, ...,  0.399922, -0.321179,...
2025-05-04 03:18:32.781559 test begin: paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([60],"int64"),slice(None,None,None),), Tensor([60, 7],"float32"), )
[accuracy error] paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([60],"int64"),slice(None,None,None),), Tensor([60, 7],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 30 / 368480 (0.00814%)
Max absolute difference among violations: 6.
Max relative difference among violations: 5.
ACTUAL: array([[ 5.      ,  0.      ,  6.      , ...,  1.      ,  6.      ,
0.      ],
[ 3.      ,  5.      ,  3.      , ...,  6.      ,  3.      ,...
DESIRED: array([[ 5.      ,  0.      ,  6.      , ...,  1.      ,  6.      ,
0.      ],
[ 3.      ,  5.      ,  3.      , ...,  6.      ,  3.      ,...
2025-05-04 03:18:32.977148 test begin: paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([62],"int64"),slice(None,None,None),), Tensor([62, 7],"float32"), )
[accuracy error] paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([62],"int64"),slice(None,None,None),), Tensor([62, 7],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 6 / 368480 (0.00163%)
Max absolute difference among violations: 5.
Max relative difference among violations: 2.
ACTUAL: array([[ 4.      ,  2.      ,  5.      , ...,  3.      ,  3.      ,
2.      ],
[ 2.      ,  1.      ,  2.      , ...,  1.      ,  2.      ,...
DESIRED: array([[ 4.      ,  2.      ,  5.      , ...,  3.      ,  3.      ,
2.      ],
[ 2.      ,  1.      ,  2.      , ...,  1.      ,  2.      ,...
2025-05-04 03:18:33.164824 test begin: paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([63],"int64"),slice(None,None,None),), Tensor([63, 7],"float32"), )
[accuracy error] paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([63],"int64"),slice(None,None,None),), Tensor([63, 7],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 13 / 368480 (0.00353%)
Max absolute difference among violations: 6.
Max relative difference among violations: 1.5
ACTUAL: array([[ 0.      ,  5.      ,  4.      , ...,  1.      ,  5.      ,
6.      ],
[ 4.      ,  4.      ,  1.      , ...,  1.      ,  5.      ,...
DESIRED: array([[ 0.      ,  5.      ,  4.      , ...,  1.      ,  5.      ,
6.      ],
[ 2.      ,  0.      ,  4.      , ...,  4.      ,  2.      ,...
2025-05-04 03:18:33.360975 test begin: paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([64],"int64"),slice(None,None,None),), Tensor([64, 7],"float32"), )
[accuracy error] paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([64],"int64"),slice(None,None,None),), Tensor([64, 7],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 13 / 368480 (0.00353%)
Max absolute difference among violations: 5.
Max relative difference among violations: 2.
ACTUAL: array([[ 0.      ,  6.      ,  2.      , ...,  1.      ,  3.      ,
6.      ],
[ 6.      ,  6.      ,  4.      , ...,  6.      ,  0.      ,...
DESIRED: array([[ 5.      ,  3.      ,  4.      , ...,  4.      ,  6.      ,
2.      ],
[ 6.      ,  6.      ,  4.      , ...,  6.      ,  0.      ,...
2025-05-04 03:18:33.558563 test begin: paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([65],"int64"),slice(None,None,None),), Tensor([65, 7],"float32"), )
[accuracy error] paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([65],"int64"),slice(None,None,None),), Tensor([65, 7],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 10 / 368480 (0.00271%)
Max absolute difference among violations: 5.
Max relative difference among violations: 3.
ACTUAL: array([[ 6.      ,  0.      ,  2.      , ...,  2.      ,  5.      ,
1.      ],
[ 4.      ,  1.      ,  1.      , ...,  3.      ,  3.      ,...
DESIRED: array([[ 6.      ,  0.      ,  2.      , ...,  2.      ,  5.      ,
1.      ],
[ 1.      ,  1.      ,  4.      , ...,  6.      ,  2.      ,...
2025-05-04 03:18:33.755340 test begin: paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([66],"int64"),slice(None,None,None),), Tensor([66, 7],"float32"), )
[accuracy error] paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([66],"int64"),slice(None,None,None),), Tensor([66, 7],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 6 / 368480 (0.00163%)
Max absolute difference among violations: 6.
Max relative difference among violations: 1.5
ACTUAL: array([[ 2.      ,  5.      ,  4.      , ...,  0.      ,  5.      ,
6.      ],
[ 1.      ,  0.      ,  4.      , ...,  0.      ,  1.      ,...
DESIRED: array([[ 2.      ,  5.      ,  4.      , ...,  0.      ,  5.      ,
6.      ],
[ 1.      ,  0.      ,  4.      , ...,  0.      ,  1.      ,...
2025-05-04 03:18:33.952352 test begin: paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([67],"int64"),slice(None,None,None),), Tensor([67, 7],"float32"), )
[accuracy error] paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([67],"int64"),slice(None,None,None),), Tensor([67, 7],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 6 / 368480 (0.00163%)
Max absolute difference among violations: 5.
Max relative difference among violations: 2.
ACTUAL: array([[ 6.000000e+00,  0.000000e+00,  2.000000e+00, ...,  1.000000e+00,
1.000000e+00,  0.000000e+00],
[ 6.000000e+00,  2.000000e+00,  3.000000e+00, ...,  4.000000e+00,...
DESIRED: array([[ 6.000000e+00,  0.000000e+00,  2.000000e+00, ...,  1.000000e+00,
1.000000e+00,  0.000000e+00],
[ 6.000000e+00,  2.000000e+00,  1.000000e+00, ...,  4.000000e+00,...
2025-05-04 03:18:34.137345 test begin: paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([68],"int64"),slice(None,None,None),), Tensor([68, 7],"float32"), )
[accuracy error] paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([68],"int64"),slice(None,None,None),), Tensor([68, 7],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 20 / 368480 (0.00543%)
Max absolute difference among violations: 5.
Max relative difference among violations: 4.
ACTUAL: array([[ 0.000000e+00,  0.000000e+00,  0.000000e+00, ...,  5.000000e+00,
4.000000e+00,  5.000000e+00],
[ 0.000000e+00,  4.000000e+00,  6.000000e+00, ...,  3.000000e+00,...
DESIRED: array([[ 4.000000e+00,  1.000000e+00,  0.000000e+00, ...,  0.000000e+00,
4.000000e+00,  1.000000e+00],
[ 1.000000e+00,  2.000000e+00,  6.000000e+00, ...,  6.000000e+00,...
2025-05-04 03:18:34.337316 test begin: paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([69],"int64"),slice(None,None,None),), Tensor([69, 7],"float32"), )
[accuracy error] paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([69],"int64"),slice(None,None,None),), Tensor([69, 7],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 13 / 368480 (0.00353%)
Max absolute difference among violations: 6.
Max relative difference among violations: 1.5
ACTUAL: array([[ 0.      ,  1.      ,  1.      , ...,  0.      ,  5.      ,
6.      ],
[ 2.      ,  0.      ,  2.      , ...,  6.      ,  0.      ,...
DESIRED: array([[ 5.      ,  0.      ,  3.      , ...,  6.      ,  2.      ,
5.      ],
[ 2.      ,  0.      ,  2.      , ...,  6.      ,  0.      ,...
2025-05-04 03:18:34.528134 test begin: paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([6],"int64"),slice(None,None,None),), Tensor([6, 7],"float32"), )
[accuracy error] paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([6],"int64"),slice(None,None,None),), Tensor([6, 7],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 12 / 368480 (0.00326%)
Max absolute difference among violations: 5.
Max relative difference among violations: 1.
ACTUAL: array([[-0.008693,  0.088026,  0.382328, ..., -0.232696, -0.379885,
-0.095901],
[ 5.      ,  0.      ,  5.      , ...,  2.      ,  6.      ,...
DESIRED: array([[-0.008693,  0.088026,  0.382328, ..., -0.232696, -0.379885,
-0.095901],
[ 0.      ,  2.      ,  3.      , ...,  2.      ,  5.      ,...
2025-05-04 03:18:34.715784 test begin: paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([72],"int64"),slice(None,None,None),), Tensor([72, 7],"float32"), )
[accuracy error] paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([72],"int64"),slice(None,None,None),), Tensor([72, 7],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 19 / 368480 (0.00516%)
Max absolute difference among violations: 6.
Max relative difference among violations: 5.
ACTUAL: array([[ 6.      ,  4.      ,  3.      , ...,  4.      ,  5.      ,
6.      ],
[ 2.      ,  6.      ,  1.      , ...,  6.      ,  5.      ,...
DESIRED: array([[ 6.      ,  4.      ,  3.      , ...,  4.      ,  5.      ,
6.      ],
[ 3.      ,  2.      ,  4.      , ...,  2.      ,  1.      ,...
2025-05-04 03:18:34.828079 test begin: paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([74],"int64"),slice(None,None,None),), Tensor([74, 7],"float32"), )
[accuracy error] paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([74],"int64"),slice(None,None,None),), Tensor([74, 7],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 32 / 368480 (0.00868%)
Max absolute difference among violations: 6.
Max relative difference among violations: 5.
ACTUAL: array([[ 1.000000e+00,  5.000000e+00,  5.000000e+00, ...,  6.000000e+00,
0.000000e+00,  4.000000e+00],
[ 2.000000e+00,  0.000000e+00,  4.000000e+00, ...,  4.000000e+00,...
DESIRED: array([[ 4.000000e+00,  1.000000e+00,  2.000000e+00, ...,  4.000000e+00,
5.000000e+00,  5.000000e+00],
[ 2.000000e+00,  0.000000e+00,  4.000000e+00, ...,  4.000000e+00,...
2025-05-04 03:18:34.920862 test begin: paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([75],"int64"),slice(None,None,None),), Tensor([75, 7],"float32"), )
[accuracy error] paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([75],"int64"),slice(None,None,None),), Tensor([75, 7],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 22 / 368480 (0.00597%)
Max absolute difference among violations: 6.
Max relative difference among violations: 5.
ACTUAL: array([[ 1.000000e+00,  1.000000e+00,  3.000000e+00, ...,  1.000000e+00,
5.000000e+00,  4.000000e+00],
[ 1.000000e+00,  2.000000e+00,  0.000000e+00, ...,  3.000000e+00,...
DESIRED: array([[ 1.000000e+00,  6.000000e+00,  0.000000e+00, ...,  5.000000e+00,
2.000000e+00,  4.000000e+00],
[ 1.000000e+00,  6.000000e+00,  0.000000e+00, ...,  1.000000e+00,...
2025-05-04 03:18:35.020462 test begin: paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([76],"int64"),slice(None,None,None),), Tensor([76, 7],"float32"), )
[accuracy error] paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([76],"int64"),slice(None,None,None),), Tensor([76, 7],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 29 / 368480 (0.00787%)
Max absolute difference among violations: 6.
Max relative difference among violations: 5.
ACTUAL: array([[ 2.      ,  4.      ,  5.      , ...,  6.      ,  6.      ,
0.      ],
[ 2.      ,  1.      ,  1.      , ...,  6.      ,  3.      ,...
DESIRED: array([[ 4.      ,  5.      ,  5.      , ...,  2.      ,  0.      ,
6.      ],
[ 5.      ,  3.      ,  4.      , ...,  1.      ,  1.      ,...
2025-05-04 03:18:35.127098 test begin: paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([77],"int64"),slice(None,None,None),), Tensor([77, 7],"float32"), )
[accuracy error] paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([77],"int64"),slice(None,None,None),), Tensor([77, 7],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 31 / 368480 (0.00841%)
Max absolute difference among violations: 6.
Max relative difference among violations: 5.
ACTUAL: array([[ 5.      ,  5.      ,  0.      , ...,  2.      ,  6.      ,
6.      ],
[ 0.      ,  6.      ,  0.      , ...,  5.      ,  4.      ,...
DESIRED: array([[ 3.      ,  5.      ,  0.      , ...,  1.      ,  5.      ,
2.      ],
[ 5.      ,  1.      ,  4.      , ...,  5.      ,  6.      ,...
2025-05-04 03:18:35.276851 test begin: paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([78],"int64"),slice(None,None,None),), Tensor([78, 7],"float32"), )
[accuracy error] paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([78],"int64"),slice(None,None,None),), Tensor([78, 7],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 31 / 368480 (0.00841%)
Max absolute difference among violations: 5.
Max relative difference among violations: 5.
ACTUAL: array([[ 3.      ,  6.      ,  4.      , ...,  2.      ,  6.      ,
6.      ],
[ 0.      ,  4.      ,  6.      , ...,  6.      ,  3.      ,...
DESIRED: array([[ 3.      ,  6.      ,  4.      , ...,  2.      ,  6.      ,
6.      ],
[ 1.      ,  4.      ,  1.      , ...,  4.      ,  1.      ,...
2025-05-04 03:18:35.457933 test begin: paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([79],"int64"),slice(None,None,None),), Tensor([79, 7],"float32"), )
[accuracy error] paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([79],"int64"),slice(None,None,None),), Tensor([79, 7],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 30 / 368480 (0.00814%)
Max absolute difference among violations: 5.
Max relative difference among violations: 3.
ACTUAL: array([[ 4.000000e+00,  5.000000e+00,  0.000000e+00, ...,  5.000000e+00,
4.000000e+00,  0.000000e+00],
[ 3.000000e+00,  0.000000e+00,  0.000000e+00, ...,  0.000000e+00,...
DESIRED: array([[ 5.000000e+00,  0.000000e+00,  0.000000e+00, ...,  4.000000e+00,
5.000000e+00,  5.000000e+00],
[ 3.000000e+00,  0.000000e+00,  0.000000e+00, ...,  0.000000e+00,...
2025-05-04 03:18:35.835234 test begin: paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([81],"int64"),slice(None,None,None),), Tensor([81, 7],"float32"), )
[accuracy error] paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([81],"int64"),slice(None,None,None),), Tensor([81, 7],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 31 / 368480 (0.00841%)
Max absolute difference among violations: 6.
Max relative difference among violations: 4.
ACTUAL: array([[ 3.      ,  6.      ,  1.      , ...,  0.      ,  0.      ,
2.      ],
[ 4.      ,  2.      ,  5.      , ...,  6.      ,  0.      ,...
DESIRED: array([[ 4.      ,  3.      ,  4.      , ...,  4.      ,  3.      ,
6.      ],
[ 3.      ,  6.      ,  3.      , ...,  4.      ,  4.      ,...
2025-05-04 03:18:36.014849 test begin: paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([83],"int64"),slice(None,None,None),), Tensor([83, 7],"float32"), )
[accuracy error] paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([83],"int64"),slice(None,None,None),), Tensor([83, 7],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 44 / 368480 (0.0119%)
Max absolute difference among violations: 6.
Max relative difference among violations: 5.
ACTUAL: array([[ 6.      ,  4.      ,  6.      , ...,  5.      ,  5.      ,
4.      ],
[ 6.      ,  4.      ,  0.      , ...,  4.      ,  4.      ,...
DESIRED: array([[ 3.      ,  3.      ,  0.      , ...,  1.      ,  5.      ,
5.      ],
[ 4.      ,  3.      ,  4.      , ...,  6.      ,  3.      ,...
2025-05-04 03:18:36.212319 test begin: paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([84],"int64"),slice(None,None,None),), Tensor([84, 7],"float32"), )
[accuracy error] paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([84],"int64"),slice(None,None,None),), Tensor([84, 7],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 44 / 368480 (0.0119%)
Max absolute difference among violations: 6.
Max relative difference among violations: 5.
ACTUAL: array([[ 6.      ,  2.      ,  3.      , ...,  3.      ,  3.      ,
6.      ],
[ 0.      ,  1.      ,  6.      , ...,  5.      ,  0.      ,...
DESIRED: array([[ 1.      ,  1.      ,  1.      , ...,  4.      ,  2.      ,
1.      ],
[ 5.      ,  5.      ,  0.      , ...,  2.      ,  5.      ,...
2025-05-04 03:18:36.399713 test begin: paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([85],"int64"),slice(None,None,None),), Tensor([85, 7],"float32"), )
[accuracy error] paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([85],"int64"),slice(None,None,None),), Tensor([85, 7],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 45 / 368480 (0.0122%)
Max absolute difference among violations: 6.
Max relative difference among violations: 5.
ACTUAL: array([[ 5.000000e+00,  1.000000e+00,  5.000000e+00, ...,  3.000000e+00,
5.000000e+00,  3.000000e+00],
[ 5.000000e+00,  6.000000e+00,  1.000000e+00, ...,  0.000000e+00,...
DESIRED: array([[ 4.000000e+00,  5.000000e+00,  5.000000e+00, ...,  1.000000e+00,
1.000000e+00,  0.000000e+00],
[ 4.000000e+00,  1.000000e+00,  3.000000e+00, ...,  2.000000e+00,...
2025-05-04 03:18:36.583112 test begin: paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([87],"int64"),slice(None,None,None),), Tensor([87, 7],"float32"), )
[accuracy error] paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([87],"int64"),slice(None,None,None),), Tensor([87, 7],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 34 / 368480 (0.00923%)
Max absolute difference among violations: 6.
Max relative difference among violations: 4.
ACTUAL: array([[ 5.      ,  4.      ,  5.      , ...,  5.      ,  4.      ,
5.      ],
[ 5.      ,  0.      ,  3.      , ...,  5.      ,  6.      ,...
DESIRED: array([[ 2.      ,  4.      ,  4.      , ...,  6.      ,  5.      ,
6.      ],
[ 2.      ,  3.      ,  2.      , ...,  1.      ,  4.      ,...
2025-05-04 03:18:36.770006 test begin: paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([88],"int64"),slice(None,None,None),), Tensor([88, 7],"float32"), )
[accuracy error] paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([88],"int64"),slice(None,None,None),), Tensor([88, 7],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 44 / 368480 (0.0119%)
Max absolute difference among violations: 6.
Max relative difference among violations: 5.
ACTUAL: array([[ 3.      ,  1.      ,  2.      , ...,  3.      ,  6.      ,
0.      ],
[ 0.      ,  4.      ,  2.      , ...,  5.      ,  2.      ,...
DESIRED: array([[ 3.      ,  1.      ,  3.      , ...,  5.      ,  0.      ,
1.      ],
[ 3.      ,  4.      ,  3.      , ...,  6.      ,  0.      ,...
2025-05-04 03:18:36.960031 test begin: paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([89],"int64"),slice(None,None,None),), Tensor([89, 7],"float32"), )
[accuracy error] paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([89],"int64"),slice(None,None,None),), Tensor([89, 7],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 41 / 368480 (0.0111%)
Max absolute difference among violations: 6.
Max relative difference among violations: 5.
ACTUAL: array([[ 4.      ,  3.      ,  6.      , ...,  2.      ,  0.      ,
4.      ],
[ 2.      ,  2.      ,  6.      , ...,  2.      ,  1.      ,...
DESIRED: array([[ 4.      ,  1.      ,  0.      , ...,  6.      ,  0.      ,
5.      ],
[ 2.      ,  5.      ,  3.      , ...,  5.      ,  1.      ,...
2025-05-04 03:18:37.081161 test begin: paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([8],"int64"),slice(None,None,None),), Tensor([8, 7],"float32"), )
[accuracy error] paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([8],"int64"),slice(None,None,None),), Tensor([8, 7],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 3 / 368480 (0.000814%)
Max absolute difference among violations: 5.
Max relative difference among violations: 5.
ACTUAL: array([[ 2.      ,  4.      ,  6.      , ...,  6.      ,  3.      ,
2.      ],
[ 0.      ,  1.      ,  6.      , ...,  4.      ,  0.      ,...
DESIRED: array([[ 2.      ,  4.      ,  6.      , ...,  6.      ,  3.      ,
2.      ],
[ 0.      ,  1.      ,  6.      , ...,  4.      ,  0.      ,...
2025-05-04 03:18:37.251188 test begin: paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([90],"int64"),slice(None,None,None),), Tensor([90, 7],"float32"), )
[accuracy error] paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([90],"int64"),slice(None,None,None),), Tensor([90, 7],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 40 / 368480 (0.0109%)
Max absolute difference among violations: 6.
Max relative difference among violations: 3.
ACTUAL: array([[ 5.000000e+00,  6.000000e+00,  5.000000e+00, ...,  4.000000e+00,
5.000000e+00,  1.000000e+00],
[ 5.000000e+00,  0.000000e+00,  5.000000e+00, ...,  3.000000e+00,...
DESIRED: array([[ 4.000000e+00,  2.000000e+00,  6.000000e+00, ...,  5.000000e+00,
6.000000e+00,  2.000000e+00],
[ 6.000000e+00,  6.000000e+00,  0.000000e+00, ...,  6.000000e+00,...
2025-05-04 03:18:37.447949 test begin: paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([91],"int64"),slice(None,None,None),), Tensor([91, 7],"float32"), )
[accuracy error] paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([91],"int64"),slice(None,None,None),), Tensor([91, 7],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 42 / 368480 (0.0114%)
Max absolute difference among violations: 5.
Max relative difference among violations: 5.
ACTUAL: array([[ 2.      ,  4.      ,  2.      , ...,  6.      ,  2.      ,
6.      ],
[ 5.      ,  5.      ,  1.      , ...,  4.      ,  0.      ,...
DESIRED: array([[ 3.      ,  2.      ,  6.      , ...,  5.      ,  4.      ,
3.      ],
[ 3.      ,  2.      ,  1.      , ...,  2.      ,  4.      ,...
2025-05-04 03:18:37.641647 test begin: paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([94],"int64"),slice(None,None,None),), Tensor([94, 7],"float32"), )
[accuracy error] paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([94],"int64"),slice(None,None,None),), Tensor([94, 7],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 44 / 368480 (0.0119%)
Max absolute difference among violations: 6.
Max relative difference among violations: 1.5
ACTUAL: array([[ 6.      ,  6.      ,  4.      , ...,  2.      ,  6.      ,
4.      ],
[ 3.      ,  1.      ,  0.      , ...,  6.      ,  0.      ,...
DESIRED: array([[ 4.      ,  5.      ,  6.      , ...,  5.      ,  6.      ,
0.      ],
[ 6.      ,  5.      ,  2.      , ...,  4.      ,  1.      ,...
2025-05-04 03:18:37.838132 test begin: paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([95],"int64"),slice(None,None,None),), Tensor([95, 7],"float32"), )
[accuracy error] paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([95],"int64"),slice(None,None,None),), Tensor([95, 7],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 44 / 368480 (0.0119%)
Max absolute difference among violations: 6.
Max relative difference among violations: 5.
ACTUAL: array([[ 0.      ,  1.      ,  2.      , ...,  4.      ,  6.      ,
1.      ],
[ 0.      ,  4.      ,  0.      , ...,  1.      ,  3.      ,...
DESIRED: array([[ 3.      ,  6.      ,  0.      , ...,  2.      ,  1.      ,
4.      ],
[ 4.      ,  2.      ,  6.      , ...,  3.      ,  2.      ,...
2025-05-04 03:18:38.037731 test begin: paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([96],"int64"),slice(None,None,None),), Tensor([96, 7],"float32"), )
[accuracy error] paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([96],"int64"),slice(None,None,None),), Tensor([96, 7],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 41 / 368480 (0.0111%)
Max absolute difference among violations: 6.
Max relative difference among violations: 3.
ACTUAL: array([[ 1.      ,  0.      ,  2.      , ...,  2.      ,  0.      ,
4.      ],
[ 4.      ,  0.      ,  4.      , ...,  6.      ,  6.      ,...
DESIRED: array([[ 1.      ,  6.      ,  2.      , ...,  0.      ,  5.      ,
1.      ],
[ 2.      ,  1.      ,  2.      , ...,  0.      ,  6.      ,...
2025-05-04 03:18:38.237841 test begin: paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([98],"int64"),slice(None,None,None),), Tensor([98, 7],"float32"), )
[accuracy error] paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([98],"int64"),slice(None,None,None),), Tensor([98, 7],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 43 / 368480 (0.0117%)
Max absolute difference among violations: 6.
Max relative difference among violations: 5.
ACTUAL: array([[ 0.      ,  1.      ,  5.      , ...,  4.      ,  0.      ,
4.      ],
[ 2.      ,  3.      ,  2.      , ...,  3.      ,  3.      ,...
DESIRED: array([[ 3.      ,  3.      ,  1.      , ...,  6.      ,  1.      ,
2.      ],
[ 6.      ,  5.      ,  4.      , ...,  4.      ,  3.      ,...
2025-05-04 03:18:38.435153 test begin: paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([9],"int64"),slice(None,None,None),), Tensor([9, 7],"float32"), )
[accuracy error] paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([9],"int64"),slice(None,None,None),), Tensor([9, 7],"float32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 15 / 368480 (0.00407%)
Max absolute difference among violations: 5.
Max relative difference among violations: 2.
ACTUAL: array([[ 1.      ,  5.      ,  5.      , ...,  1.      ,  3.      ,
5.      ],
[ 6.      ,  5.      ,  1.      , ...,  1.      ,  0.      ,...
DESIRED: array([[ 1.      ,  5.      ,  5.      , ...,  1.      ,  3.      ,
5.      ],
[ 3.      ,  6.      ,  6.      , ...,  3.      ,  3.      ,...
2025-05-04 03:18:39.158084 test begin: paddle.Tensor.__setitem__(Tensor([52640],"int32"), Tensor([103, 1],"int64"), Tensor([103, 1],"int32"), )
element 0 of tensors does not require grad and does not have a grad_fn
[accuracy error] paddle.Tensor.__setitem__(Tensor([52640],"int32"), Tensor([103, 1],"int64"), Tensor([103, 1],"int32"), )
Not equal to tolerance rtol=0.01, atol=0.01
Mismatched elements: 1 / 52640 (0.0019%)
Max absolute difference among violations: 3401
Max relative difference among violations: 0.0698472
ACTUAL: array([-31574,  34307, -47665, ...,  -9159,  31897,    895], dtype=int32)
DESIRED: array([-31574,  34307, -47665, ...,  -9159,  31897,    895], dtype=int32)
