paddle.Tensor.__getitem__(Tensor([6, 5, 4],"int64"), list[Tensor([5],"int64"),Tensor([5],"int64"),], )
paddle.Tensor.__getitem__(Tensor([6, 5, 4],"int64"), list[list[0,2,0,1,3,],list[0,0,1,2,0,],], )
paddle.Tensor.__matmul__(Tensor([1, 20, 2, 16],"float32"), Tensor([16, 16],"float16"), )
paddle.Tensor.__matmul__(Tensor([1, 20, 32],"float32"), Tensor([32, 4],"float16"), )
paddle.Tensor.__matmul__(Tensor([1, 20, 4],"float32"), Tensor([4, 32],"float16"), )
paddle.Tensor.__mul__(Tensor([1, 1024, 32, 128],"bfloat16"), Tensor([1, 1024, 1, 128],"bfloat16"), )
paddle.Tensor.__mul__(Tensor([8, 8],"float16"), 1000000.0, )
paddle.Tensor.__setitem__(Tensor([200, 4],"float32"), Tensor([100],"int64"), Tensor([100, 4],"float32"), )
paddle.Tensor.__setitem__(Tensor([200],"int64"), Tensor([100],"int64"), Tensor([100],"int64"), )
paddle.Tensor.__setitem__(Tensor([3, 3, 5],"float32"), Tensor([3],"int64"), Tensor([3, 3, 1],"float32"), )
paddle.Tensor.__setitem__(Tensor([4, 8, 16, 32],"float32"), Tensor([2],"int64"), Tensor([2, 8, 16, 32],"float32"), )
paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([100],"int64"),slice(None,None,None),), Tensor([100, 7],"float32"), )
paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([103],"int64"),slice(None,None,None),), Tensor([103, 7],"float32"), )
paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([108],"int64"),slice(None,None,None),), Tensor([108, 7],"float32"), )
paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([10],"int64"),slice(None,None,None),), Tensor([10, 7],"float32"), )
paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([111],"int64"),slice(None,None,None),), Tensor([111, 7],"float32"), )
paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([11],"int64"),slice(None,None,None),), Tensor([11, 7],"float32"), )
paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([13],"int64"),slice(None,None,None),), Tensor([13, 7],"float32"), )
paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([14],"int64"),slice(None,None,None),), Tensor([14, 7],"float32"), )
paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([15],"int64"),slice(None,None,None),), Tensor([15, 7],"float32"), )
paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([16],"int64"),slice(None,None,None),), Tensor([16, 7],"float32"), )
paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([17],"int64"),slice(None,None,None),), Tensor([17, 7],"float32"), )
paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([18],"int64"),slice(None,None,None),), Tensor([18, 7],"float32"), )
paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([19],"int64"),slice(None,None,None),), Tensor([19, 7],"float32"), )
paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([21],"int64"),slice(None,None,None),), Tensor([21, 7],"float32"), )
paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([22],"int64"),slice(None,None,None),), Tensor([22, 7],"float32"), )
paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([23],"int64"),slice(None,None,None),), Tensor([23, 7],"float32"), )
paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([24],"int64"),slice(None,None,None),), Tensor([24, 7],"float32"), )
paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([25],"int64"),slice(None,None,None),), Tensor([25, 7],"float32"), )
paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([26],"int64"),slice(None,None,None),), Tensor([26, 7],"float32"), )
paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([27],"int64"),slice(None,None,None),), Tensor([27, 7],"float32"), )
paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([28],"int64"),slice(None,None,None),), Tensor([28, 7],"float32"), )
paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([29],"int64"),slice(None,None,None),), Tensor([29, 7],"float32"), )
paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([30],"int64"),slice(None,None,None),), Tensor([30, 7],"float32"), )
paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([31],"int64"),slice(None,None,None),), Tensor([31, 7],"float32"), )
paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([32],"int64"),slice(None,None,None),), Tensor([32, 7],"float32"), )
paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([33],"int64"),slice(None,None,None),), Tensor([33, 7],"float32"), )
paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([35],"int64"),slice(None,None,None),), Tensor([35, 7],"float32"), )
paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([36],"int64"),slice(None,None,None),), Tensor([36, 7],"float32"), )
paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([37],"int64"),slice(None,None,None),), Tensor([37, 7],"float32"), )
paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([38],"int64"),slice(None,None,None),), Tensor([38, 7],"float32"), )
paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([39],"int64"),slice(None,None,None),), Tensor([39, 7],"float32"), )
paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([40],"int64"),slice(None,None,None),), Tensor([40, 7],"float32"), )
paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([41],"int64"),slice(None,None,None),), Tensor([41, 7],"float32"), )
paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([42],"int64"),slice(None,None,None),), Tensor([42, 7],"float32"), )
paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([43],"int64"),slice(None,None,None),), Tensor([43, 7],"float32"), )
paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([44],"int64"),slice(None,None,None),), Tensor([44, 7],"float32"), )
paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([45],"int64"),slice(None,None,None),), Tensor([45, 7],"float32"), )
paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([46],"int64"),slice(None,None,None),), Tensor([46, 7],"float32"), )
paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([47],"int64"),slice(None,None,None),), Tensor([47, 7],"float32"), )
paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([49],"int64"),slice(None,None,None),), Tensor([49, 7],"float32"), )
paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([50],"int64"),slice(None,None,None),), Tensor([50, 7],"float32"), )
paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([51],"int64"),slice(None,None,None),), Tensor([51, 7],"float32"), )
paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([52],"int64"),slice(None,None,None),), Tensor([52, 7],"float32"), )
paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([54],"int64"),slice(None,None,None),), Tensor([54, 7],"float32"), )
paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([55],"int64"),slice(None,None,None),), Tensor([55, 7],"float32"), )
paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([56],"int64"),slice(None,None,None),), Tensor([56, 7],"float32"), )
paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([57],"int64"),slice(None,None,None),), Tensor([57, 7],"float32"), )
paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([59],"int64"),slice(None,None,None),), Tensor([59, 7],"float32"), )
paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([5],"int64"),slice(None,None,None),), Tensor([5, 7],"float32"), )
paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([60],"int64"),slice(None,None,None),), Tensor([60, 7],"float32"), )
paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([62],"int64"),slice(None,None,None),), Tensor([62, 7],"float32"), )
paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([63],"int64"),slice(None,None,None),), Tensor([63, 7],"float32"), )
paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([64],"int64"),slice(None,None,None),), Tensor([64, 7],"float32"), )
paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([65],"int64"),slice(None,None,None),), Tensor([65, 7],"float32"), )
paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([66],"int64"),slice(None,None,None),), Tensor([66, 7],"float32"), )
paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([67],"int64"),slice(None,None,None),), Tensor([67, 7],"float32"), )
paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([68],"int64"),slice(None,None,None),), Tensor([68, 7],"float32"), )
paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([69],"int64"),slice(None,None,None),), Tensor([69, 7],"float32"), )
paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([6],"int64"),slice(None,None,None),), Tensor([6, 7],"float32"), )
paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([72],"int64"),slice(None,None,None),), Tensor([72, 7],"float32"), )
paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([74],"int64"),slice(None,None,None),), Tensor([74, 7],"float32"), )
paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([75],"int64"),slice(None,None,None),), Tensor([75, 7],"float32"), )
paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([76],"int64"),slice(None,None,None),), Tensor([76, 7],"float32"), )
paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([77],"int64"),slice(None,None,None),), Tensor([77, 7],"float32"), )
paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([78],"int64"),slice(None,None,None),), Tensor([78, 7],"float32"), )
paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([79],"int64"),slice(None,None,None),), Tensor([79, 7],"float32"), )
paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([81],"int64"),slice(None,None,None),), Tensor([81, 7],"float32"), )
paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([83],"int64"),slice(None,None,None),), Tensor([83, 7],"float32"), )
paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([84],"int64"),slice(None,None,None),), Tensor([84, 7],"float32"), )
paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([85],"int64"),slice(None,None,None),), Tensor([85, 7],"float32"), )
paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([87],"int64"),slice(None,None,None),), Tensor([87, 7],"float32"), )
paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([88],"int64"),slice(None,None,None),), Tensor([88, 7],"float32"), )
paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([89],"int64"),slice(None,None,None),), Tensor([89, 7],"float32"), )
paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([8],"int64"),slice(None,None,None),), Tensor([8, 7],"float32"), )
paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([90],"int64"),slice(None,None,None),), Tensor([90, 7],"float32"), )
paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([91],"int64"),slice(None,None,None),), Tensor([91, 7],"float32"), )
paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([94],"int64"),slice(None,None,None),), Tensor([94, 7],"float32"), )
paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([95],"int64"),slice(None,None,None),), Tensor([95, 7],"float32"), )
paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([96],"int64"),slice(None,None,None),), Tensor([96, 7],"float32"), )
paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([98],"int64"),slice(None,None,None),), Tensor([98, 7],"float32"), )
paddle.Tensor.__setitem__(Tensor([52640, 7],"float32"), tuple(Tensor([9],"int64"),slice(None,None,None),), Tensor([9, 7],"float32"), )
paddle.Tensor.__setitem__(Tensor([52640],"int32"), Tensor([103, 1],"int64"), Tensor([103, 1],"int32"), )
paddle.Tensor.argsort(Tensor([2097152],"float32"), )
paddle.Tensor.argsort(Tensor([4, 22400],"float32"), axis=1, descending=True, )
paddle.Tensor.argsort(Tensor([4, 22400],"int64"), axis=1, )
paddle.Tensor.argsort(Tensor([4194304],"float32"), )
paddle.Tensor.astype(Tensor([32, 128],"int64"), Dtype(float16), )
paddle.Tensor.astype(Tensor([32, 16, 1024],"int64"), Dtype(float16), )
paddle.Tensor.astype(Tensor([32, 3, 1024],"int64"), Dtype(float16), )
paddle.Tensor.cast(Tensor([2, 3, 32, 128],"int32"), Dtype(float16), )
paddle.Tensor.cholesky_solve(x=Tensor([4, 1],"float32"), y=Tensor([4, 4],"float32"), )
paddle.Tensor.cholesky_solve(x=Tensor([4, 1],"float64"), y=Tensor([4, 4],"float64"), )
paddle.Tensor.cholesky_solve(x=Tensor([4, 3],"float64"), y=Tensor([4, 4],"float64"), )
paddle.Tensor.cholesky_solve(x=Tensor([5, 2, 4, 3],"float64"), y=Tensor([5, 2, 4, 4],"float64"), )
paddle.Tensor.cholesky_solve(x=Tensor([5, 2, 4, 3],"float64"), y=Tensor([5, 2, 4, 4],"float64"), upper=True, )
paddle.Tensor.cholesky_solve(x=Tensor([5, 4, 3],"float64"), y=Tensor([5, 4, 4],"float64"), )
paddle.Tensor.expand(Tensor([1, 1, 1, 4096],"float16"), list[2,1,4096,4096,], )
paddle.Tensor.expand(Tensor([1, 1, 192],"float16"), tuple(128,-1,-1,), )
paddle.Tensor.expand(Tensor([1, 1, 384],"float16"), tuple(64,-1,-1,), )
paddle.Tensor.expand(Tensor([1, 1, 768],"float16"), tuple(112,-1,-1,), )
paddle.Tensor.expand(Tensor([1, 1, 768],"float16"), tuple(128,-1,-1,), )
paddle.Tensor.expand(Tensor([1, 1, 768],"float16"), tuple(64,-1,-1,), )
paddle.Tensor.expand(Tensor([1, 2048, 1, 1],"float16"), list[1,2048,1,64,], )
paddle.Tensor.expand(Tensor([1, 35, 1, 1],"float16"), list[2,35,1,64,], )
paddle.Tensor.expand(Tensor([1, 37, 1, 1],"float16"), list[2,37,1,64,], )
paddle.Tensor.expand(Tensor([1, 38, 1, 1],"float16"), list[2,38,1,64,], )
paddle.Tensor.expand(Tensor([1, 39, 1, 1],"float16"), list[2,39,1,64,], )
paddle.Tensor.expand(Tensor([1, 45, 1, 1],"float16"), list[2,45,1,64,], )
paddle.Tensor.expand(Tensor([1, 50, 1, 1],"float16"), list[2,50,1,64,], )
paddle.Tensor.expand(Tensor([1, 51, 1, 1],"float16"), list[2,51,1,64,], )
paddle.Tensor.expand(Tensor([1, 52, 1, 1],"float16"), list[2,52,1,64,], )
paddle.Tensor.expand(Tensor([1, 57, 1, 1],"float16"), list[2,57,1,64,], )
paddle.Tensor.fill_diagonal_(Tensor([3, 3],"float32"), 1, offset=2, wrap=True, )
paddle.Tensor.fill_diagonal_(Tensor([3, 3],"float32"), 4, 1, False, )
paddle.Tensor.fill_diagonal_(Tensor([3, 3],"float64"), 1, offset=2, wrap=True, )
paddle.Tensor.fill_diagonal_(Tensor([3, 3],"float64"), 4, 1, False, )
paddle.Tensor.fill_diagonal_(Tensor([3, 3],"int32"), 1, offset=2, wrap=True, )
paddle.Tensor.fill_diagonal_(Tensor([3, 3],"int32"), 4, 1, False, )
paddle.Tensor.fill_diagonal_(Tensor([3, 3],"int64"), 1, offset=2, wrap=True, )
paddle.Tensor.fill_diagonal_(Tensor([3, 3],"int64"), 4, 1, False, )
paddle.Tensor.logit(x=Tensor([4, 2],"float64"), )
paddle.Tensor.logit(x=Tensor([4, 3, 2, 5],"float64"), )
paddle.Tensor.logit(x=Tensor([4, 3, 2],"float64"), )
paddle.Tensor.logit(x=Tensor([4],"float32"), )
paddle.Tensor.logit(x=Tensor([4],"float64"), )
paddle.Tensor.median(Tensor([1000, 784],"float32"), )
paddle.Tensor.put_along_axis(Tensor([2, 60],"float32"), Tensor([2, 4],"int64"), Tensor([2, 4],"float32"), axis=1, )
paddle.Tensor.put_along_axis(Tensor([30, 60],"float32"), Tensor([30, 4],"int64"), Tensor([30, 4],"float32"), axis=1, )
paddle.Tensor.set_(Tensor([3, 8],"float16"), Tensor([6, 3],"float16"), list[3,8,], list[2,2,], 0, )
paddle.Tensor.sum(Tensor([104, 1],"float16"), )
paddle.Tensor.sum(Tensor([105, 1],"float16"), )
paddle.Tensor.sum(Tensor([108, 1],"float16"), )
paddle.Tensor.sum(Tensor([110, 1],"float16"), )
paddle.Tensor.sum(Tensor([111, 1],"float16"), )
paddle.Tensor.sum(Tensor([112, 1],"float16"), )
paddle.Tensor.sum(Tensor([115, 1],"float16"), )
paddle.Tensor.sum(Tensor([116, 1],"float16"), )
paddle.Tensor.sum(Tensor([117, 1],"float16"), )
paddle.Tensor.sum(Tensor([119, 1],"float16"), )
paddle.Tensor.sum(Tensor([120, 1],"float16"), )
paddle.Tensor.sum(Tensor([122, 1],"float16"), )
paddle.Tensor.sum(Tensor([124, 1],"float16"), )
paddle.Tensor.sum(Tensor([129, 1],"float16"), )
paddle.Tensor.sum(Tensor([132, 1],"float16"), )
paddle.Tensor.sum(Tensor([134, 1],"float16"), )
paddle.Tensor.sum(Tensor([135, 1],"float16"), )
paddle.Tensor.sum(Tensor([136, 1],"float16"), )
paddle.Tensor.sum(Tensor([137, 1],"float16"), )
paddle.Tensor.sum(Tensor([140, 1],"float16"), )
paddle.Tensor.sum(Tensor([142, 1],"float16"), )
paddle.Tensor.sum(Tensor([143, 1],"float16"), )
paddle.Tensor.sum(Tensor([145, 1],"float16"), )
paddle.Tensor.sum(Tensor([147, 1],"float16"), )
paddle.Tensor.sum(Tensor([148, 1],"float16"), )
paddle.Tensor.sum(Tensor([150, 1],"float16"), )
paddle.Tensor.sum(Tensor([151, 1],"float16"), )
paddle.Tensor.sum(Tensor([152, 1],"float16"), )
paddle.Tensor.sum(Tensor([153, 1],"float16"), )
paddle.Tensor.sum(Tensor([155, 1],"float16"), )
paddle.Tensor.sum(Tensor([156, 1],"float16"), )
paddle.Tensor.sum(Tensor([157, 1],"float16"), )
paddle.Tensor.sum(Tensor([158, 1],"float16"), )
paddle.Tensor.sum(Tensor([159, 1],"float16"), )
paddle.Tensor.sum(Tensor([160, 1],"float16"), )
paddle.Tensor.sum(Tensor([161, 1],"float16"), )
paddle.Tensor.sum(Tensor([162, 1],"float16"), )
paddle.Tensor.sum(Tensor([163, 1],"float16"), )
paddle.Tensor.sum(Tensor([164, 1],"float16"), )
paddle.Tensor.sum(Tensor([165, 1],"float16"), )
paddle.Tensor.sum(Tensor([166, 1],"float16"), )
paddle.Tensor.sum(Tensor([167, 1],"float16"), )
paddle.Tensor.sum(Tensor([168, 1],"float16"), )
paddle.Tensor.sum(Tensor([169, 1],"float16"), )
paddle.Tensor.sum(Tensor([170, 1],"float16"), )
paddle.Tensor.sum(Tensor([171, 1],"float16"), )
paddle.Tensor.sum(Tensor([172, 1],"float16"), )
paddle.Tensor.sum(Tensor([173, 1],"float16"), )
paddle.Tensor.sum(Tensor([174, 1],"float16"), )
paddle.Tensor.sum(Tensor([175, 1],"float16"), )
paddle.Tensor.sum(Tensor([176, 1],"float16"), )
paddle.Tensor.sum(Tensor([178, 1],"float16"), )
paddle.Tensor.sum(Tensor([179, 1],"float16"), )
paddle.Tensor.sum(Tensor([180, 1],"float16"), )
paddle.Tensor.sum(Tensor([181, 1],"float16"), )
paddle.Tensor.sum(Tensor([182, 1],"float16"), )
paddle.Tensor.sum(Tensor([184, 1],"float16"), )
paddle.Tensor.sum(Tensor([184832, 68],"float16"), )
paddle.Tensor.sum(Tensor([185, 1],"float16"), )
paddle.Tensor.sum(Tensor([187, 1],"float16"), )
paddle.Tensor.sum(Tensor([188, 1],"float16"), )
paddle.Tensor.sum(Tensor([189, 1],"float16"), )
paddle.Tensor.sum(Tensor([190, 1],"float16"), )
paddle.Tensor.sum(Tensor([191, 1],"float16"), )
paddle.Tensor.sum(Tensor([193, 1],"float16"), )
paddle.Tensor.sum(Tensor([194, 1],"float16"), )
paddle.Tensor.sum(Tensor([195, 1],"float16"), )
paddle.Tensor.sum(Tensor([196, 1],"float16"), )
paddle.Tensor.sum(Tensor([197, 1],"float16"), )
paddle.Tensor.sum(Tensor([199, 1],"float16"), )
paddle.Tensor.sum(Tensor([2, 64, 768],"float16"), )
paddle.Tensor.sum(Tensor([20, 500, 2],"float16"), )
paddle.Tensor.sum(Tensor([20, 500, 4],"float16"), )
paddle.Tensor.sum(Tensor([200, 1],"float16"), )
paddle.Tensor.sum(Tensor([201, 1],"float16"), )
paddle.Tensor.sum(Tensor([202, 1],"float16"), )
paddle.Tensor.sum(Tensor([203, 1],"float16"), )
paddle.Tensor.sum(Tensor([204, 1],"float16"), )
paddle.Tensor.sum(Tensor([205, 1],"float16"), )
paddle.Tensor.sum(Tensor([206, 1],"float16"), )
paddle.Tensor.sum(Tensor([207, 1],"float16"), )
paddle.Tensor.sum(Tensor([208, 1],"float16"), )
paddle.Tensor.sum(Tensor([209, 1],"float16"), )
paddle.Tensor.sum(Tensor([210, 1],"float16"), )
paddle.Tensor.sum(Tensor([212, 1],"float16"), )
paddle.Tensor.sum(Tensor([213, 1],"float16"), )
paddle.Tensor.sum(Tensor([214, 1],"float16"), )
paddle.Tensor.sum(Tensor([215, 1],"float16"), )
paddle.Tensor.sum(Tensor([217, 1],"float16"), )
paddle.Tensor.sum(Tensor([219, 1],"float16"), )
paddle.Tensor.sum(Tensor([220, 1],"float16"), )
paddle.Tensor.sum(Tensor([221, 1],"float16"), )
paddle.Tensor.sum(Tensor([222, 1],"float16"), )
paddle.Tensor.sum(Tensor([223, 1],"float16"), )
paddle.Tensor.sum(Tensor([224, 1],"float16"), )
paddle.Tensor.sum(Tensor([225, 1],"float16"), )
paddle.Tensor.sum(Tensor([229, 1],"float16"), )
paddle.Tensor.sum(Tensor([230, 1],"float16"), )
paddle.Tensor.sum(Tensor([231, 1],"float16"), )
paddle.Tensor.sum(Tensor([232, 1],"float16"), )
paddle.Tensor.sum(Tensor([233, 1],"float16"), )
paddle.Tensor.sum(Tensor([234, 1],"float16"), )
paddle.Tensor.sum(Tensor([235, 1],"float16"), )
paddle.Tensor.sum(Tensor([236, 1],"float16"), )
paddle.Tensor.sum(Tensor([238, 1],"float16"), )
paddle.Tensor.sum(Tensor([239, 1],"float16"), )
paddle.Tensor.sum(Tensor([240, 1],"float16"), )
paddle.Tensor.sum(Tensor([241, 1],"float16"), )
paddle.Tensor.sum(Tensor([242, 1],"float16"), )
paddle.Tensor.sum(Tensor([243, 1],"float16"), )
paddle.Tensor.sum(Tensor([244, 1],"float16"), )
paddle.Tensor.sum(Tensor([245, 1],"float16"), )
paddle.Tensor.sum(Tensor([246, 1],"float16"), )
paddle.Tensor.sum(Tensor([248, 1],"float16"), )
paddle.Tensor.sum(Tensor([249, 1],"float16"), )
paddle.Tensor.sum(Tensor([251, 1],"float16"), )
paddle.Tensor.sum(Tensor([252, 1],"float16"), )
paddle.Tensor.sum(Tensor([253, 1],"float16"), )
paddle.Tensor.sum(Tensor([254, 1],"float16"), )
paddle.Tensor.sum(Tensor([255, 1],"float16"), )
paddle.Tensor.sum(Tensor([256, 1],"float16"), )
paddle.Tensor.sum(Tensor([257, 1],"float16"), )
paddle.Tensor.sum(Tensor([258, 1],"float16"), )
paddle.Tensor.sum(Tensor([259, 1],"float16"), )
paddle.Tensor.sum(Tensor([264, 1],"float16"), )
paddle.Tensor.sum(Tensor([265, 1],"float16"), )
paddle.Tensor.sum(Tensor([266, 1],"float16"), )
paddle.Tensor.sum(Tensor([267, 1],"float16"), )
paddle.Tensor.sum(Tensor([268, 1],"float16"), )
paddle.Tensor.sum(Tensor([269, 1],"float16"), )
paddle.Tensor.sum(Tensor([270, 1],"float16"), )
paddle.Tensor.sum(Tensor([272, 1],"float16"), )
paddle.Tensor.sum(Tensor([274, 1],"float16"), )
paddle.Tensor.sum(Tensor([275, 1],"float16"), )
paddle.Tensor.sum(Tensor([276, 1],"float16"), )
paddle.Tensor.sum(Tensor([279, 1],"float16"), )
paddle.Tensor.sum(Tensor([280, 1],"float16"), )
paddle.Tensor.sum(Tensor([282, 1],"float16"), )
paddle.Tensor.sum(Tensor([283, 1],"float16"), )
paddle.Tensor.sum(Tensor([284, 1],"float16"), )
paddle.Tensor.sum(Tensor([285, 1],"float16"), )
paddle.Tensor.sum(Tensor([286, 1],"float16"), )
paddle.Tensor.sum(Tensor([287, 1],"float16"), )
paddle.Tensor.sum(Tensor([288, 1],"float16"), )
paddle.Tensor.sum(Tensor([289, 1],"float16"), )
paddle.Tensor.sum(Tensor([290, 1],"float16"), )
paddle.Tensor.sum(Tensor([293, 1],"float16"), )
paddle.Tensor.sum(Tensor([294, 1],"float16"), )
paddle.Tensor.sum(Tensor([295, 1],"float16"), )
paddle.Tensor.sum(Tensor([297, 1],"float16"), )
paddle.Tensor.sum(Tensor([299, 1],"float16"), )
paddle.Tensor.sum(Tensor([300, 1],"float16"), )
paddle.Tensor.sum(Tensor([301, 1],"float16"), )
paddle.Tensor.sum(Tensor([302, 1],"float16"), )
paddle.Tensor.sum(Tensor([304, 1],"float16"), )
paddle.Tensor.sum(Tensor([305, 1],"float16"), )
paddle.Tensor.sum(Tensor([306, 1],"float16"), )
paddle.Tensor.sum(Tensor([307, 1],"float16"), )
paddle.Tensor.sum(Tensor([309, 1],"float16"), )
paddle.Tensor.sum(Tensor([310, 1],"float16"), )
paddle.Tensor.sum(Tensor([313, 1],"float16"), )
paddle.Tensor.sum(Tensor([314, 1],"float16"), )
paddle.Tensor.sum(Tensor([315, 1],"float16"), )
paddle.Tensor.sum(Tensor([316, 1],"float16"), )
paddle.Tensor.sum(Tensor([317, 1],"float16"), )
paddle.Tensor.sum(Tensor([319, 1],"float16"), )
paddle.Tensor.sum(Tensor([322, 1],"float16"), )
paddle.Tensor.sum(Tensor([323, 1],"float16"), )
paddle.Tensor.sum(Tensor([324, 1],"float16"), )
paddle.Tensor.sum(Tensor([325, 1],"float16"), )
paddle.Tensor.sum(Tensor([326, 1],"float16"), )
paddle.Tensor.sum(Tensor([328, 1],"float16"), )
paddle.Tensor.sum(Tensor([332, 1],"float16"), )
paddle.Tensor.sum(Tensor([333, 1],"float16"), )
paddle.Tensor.sum(Tensor([337, 1],"float16"), )
paddle.Tensor.sum(Tensor([339, 1],"float16"), )
paddle.Tensor.sum(Tensor([342, 1],"float16"), )
paddle.Tensor.sum(Tensor([343, 1],"float16"), )
paddle.Tensor.sum(Tensor([345, 1],"float16"), )
paddle.Tensor.sum(Tensor([346, 1],"float16"), )
paddle.Tensor.sum(Tensor([347, 1],"float16"), )
paddle.Tensor.sum(Tensor([351, 1],"float16"), )
paddle.Tensor.sum(Tensor([355, 1],"float16"), )
paddle.Tensor.sum(Tensor([357, 1],"float16"), )
paddle.Tensor.sum(Tensor([359, 1],"float16"), )
paddle.Tensor.sum(Tensor([361, 1],"float16"), )
paddle.Tensor.sum(Tensor([363, 1],"float16"), )
paddle.Tensor.sum(Tensor([365, 1],"float16"), )
paddle.Tensor.sum(Tensor([368, 1],"float16"), )
paddle.Tensor.sum(Tensor([369, 1],"float16"), )
paddle.Tensor.sum(Tensor([371, 1],"float16"), )
paddle.Tensor.sum(Tensor([372, 1],"float16"), )
paddle.Tensor.sum(Tensor([378, 1],"float16"), )
paddle.Tensor.sum(Tensor([379, 1],"float16"), )
paddle.Tensor.sum(Tensor([382, 1],"float16"), )
paddle.Tensor.sum(Tensor([384, 1],"float16"), )
paddle.Tensor.sum(Tensor([387, 1],"float16"), )
paddle.Tensor.sum(Tensor([391, 1],"float16"), )
paddle.Tensor.sum(Tensor([392, 1],"float16"), )
paddle.Tensor.sum(Tensor([393, 1],"float16"), )
paddle.Tensor.sum(Tensor([394, 1],"float16"), )
paddle.Tensor.sum(Tensor([395, 1],"float16"), )
paddle.Tensor.sum(Tensor([399, 1],"float16"), )
paddle.Tensor.sum(Tensor([40, 1],"float16"), )
paddle.Tensor.sum(Tensor([400, 1],"float16"), )
paddle.Tensor.sum(Tensor([404, 1],"float16"), )
paddle.Tensor.sum(Tensor([405, 1],"float16"), )
paddle.Tensor.sum(Tensor([425, 1],"float16"), )
paddle.Tensor.sum(Tensor([426, 1],"float16"), )
paddle.Tensor.sum(Tensor([429, 1],"float16"), )
paddle.Tensor.sum(Tensor([432, 1],"float16"), )
paddle.Tensor.sum(Tensor([462, 1],"float16"), )
paddle.Tensor.sum(Tensor([46208, 68],"float16"), )
paddle.Tensor.sum(Tensor([477, 1],"float16"), )
paddle.Tensor.sum(Tensor([482, 1],"float16"), )
paddle.Tensor.sum(Tensor([493, 1],"float16"), )
paddle.Tensor.sum(Tensor([494, 1],"float16"), )
paddle.Tensor.sum(Tensor([519, 1],"float16"), )
paddle.Tensor.sum(Tensor([52, 1],"float16"), )
paddle.Tensor.sum(Tensor([521, 1],"float16"), )
paddle.Tensor.sum(Tensor([529, 1],"float16"), )
paddle.Tensor.sum(Tensor([532, 1],"float16"), )
paddle.Tensor.sum(Tensor([547, 1],"float16"), )
paddle.Tensor.sum(Tensor([550, 1],"float16"), )
paddle.Tensor.sum(Tensor([560, 68],"float16"), )
paddle.Tensor.sum(Tensor([561, 1],"float16"), )
paddle.Tensor.sum(Tensor([578, 1],"float16"), )
paddle.Tensor.sum(Tensor([579, 1],"float16"), )
paddle.Tensor.sum(Tensor([584, 1],"float16"), )
paddle.Tensor.sum(Tensor([610, 1],"float16"), )
paddle.Tensor.sum(Tensor([616, 68],"float16"), )
paddle.Tensor.sum(Tensor([62, 1],"float16"), )
paddle.Tensor.sum(Tensor([636, 1],"float16"), )
paddle.Tensor.sum(Tensor([64, 1],"float16"), )
paddle.Tensor.sum(Tensor([640, 68],"float16"), )
paddle.Tensor.sum(Tensor([65, 1],"float16"), )
paddle.Tensor.sum(Tensor([652, 1],"float16"), )
paddle.Tensor.sum(Tensor([68, 1],"float16"), )
paddle.Tensor.sum(Tensor([69, 1],"float16"), )
paddle.Tensor.sum(Tensor([70, 1],"float16"), )
paddle.Tensor.sum(Tensor([704, 68],"float16"), )
paddle.Tensor.sum(Tensor([72, 1],"float16"), )
paddle.Tensor.sum(Tensor([720, 68],"float16"), )
paddle.Tensor.sum(Tensor([73, 1],"float16"), )
paddle.Tensor.sum(Tensor([77, 1],"float16"), )
paddle.Tensor.sum(Tensor([78, 1],"float16"), )
paddle.Tensor.sum(Tensor([792, 68],"float16"), )
paddle.Tensor.sum(Tensor([80, 128, 128],"bfloat16"), )
paddle.Tensor.sum(Tensor([80, 128, 128],"float16"), )
paddle.Tensor.sum(Tensor([800, 68],"float16"), )
paddle.Tensor.sum(Tensor([802, 1],"float16"), )
paddle.Tensor.sum(Tensor([82, 1],"float16"), )
paddle.Tensor.sum(Tensor([83, 1],"float16"), )
paddle.Tensor.sum(Tensor([88, 1],"float16"), )
paddle.Tensor.sum(Tensor([880, 68],"float16"), )
paddle.Tensor.sum(Tensor([89, 1],"float16"), )
paddle.Tensor.sum(Tensor([91, 1],"float16"), )
paddle.Tensor.sum(Tensor([93, 1],"float16"), )
paddle.Tensor.sum(Tensor([94, 1],"float16"), )
paddle.Tensor.sum(Tensor([96, 1],"float16"), )
paddle.Tensor.sum(Tensor([968, 68],"float16"), )
paddle.Tensor.sum(Tensor([99, 1],"float16"), )
paddle.Tensor.topk(Tensor([3276800],"float32"), 100083, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 10173, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 101931, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 101946, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 102327, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 102396, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 104598, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 104646, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 104883, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 105876, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 107739, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 108291, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 108540, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 110289, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 110832, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 111645, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 112293, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 113463, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 113676, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 113790, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 114213, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 114261, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 114330, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 114561, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 114750, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 115383, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 115494, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 115920, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 116010, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 116085, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 120090, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 120693, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 120765, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 121008, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 121383, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 121500, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 121539, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 121758, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 122073, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 122982, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 123516, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 124155, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 124257, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 129726, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 131643, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 131952, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 131961, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 132105, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 132522, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 134115, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 136164, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 137484, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 138210, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 138852, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 145707, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 146148, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 147111, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 147315, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 150507, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 150945, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 151971, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 158844, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 160434, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 16623, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 16704, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 173505, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 17520, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 17526, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 175965, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 17598, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 17601, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 176061, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 178701, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 17988, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 18054, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 18081, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 182052, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 18795, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 18969, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 192987, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 19461, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 195024, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 206889, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 20913, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 21504, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 21621, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 21639, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 22047, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 222156, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 22458, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 22485, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 22938, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 23199, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 23337, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 234837, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 23964, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 24081, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 24285, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 24426, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 24729, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 24861, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 24891, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 25389, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 25449, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 25653, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 25665, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 25707, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 26028, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 26037, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 26064, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 26340, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 26358, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 26721, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 26763, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 26820, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 27378, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 27540, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 27789, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 28236, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 28269, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 28776, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 28779, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 28836, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 28848, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 29025, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 29103, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 29124, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 29274, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 29724, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 29847, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 29865, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 30033, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 30063, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 30096, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 30141, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 30144, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 30231, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 30297, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 30339, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 30528, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 30624, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 30690, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 30852, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 30912, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 30981, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 31110, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 31170, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 31368, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 31698, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 31800, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 32778, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 32892, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 32937, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 33039, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 33102, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 33111, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 33132, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 33333, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 33336, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 33636, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 33642, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 33762, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 33873, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 33909, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 33984, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 34158, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 34533, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 35178, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 35379, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 35391, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 35412, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 35559, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 35565, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 35616, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 35811, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 36585, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 36780, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 36963, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 37524, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 37749, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 37920, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 37986, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 37998, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 38208, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 38250, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 38253, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 38301, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 38430, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 38682, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 38772, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 38958, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 39411, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 39684, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 39831, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 39897, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 39918, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 39921, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 40053, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 40095, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 40149, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 40275, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 40650, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 40686, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 40767, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 41334, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 41421, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 41532, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 41553, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 42129, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 42345, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 42774, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 43290, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 43299, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 43455, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 43542, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 43629, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 43770, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 43803, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 43809, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 43920, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 43950, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 43986, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 44064, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 44106, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 44193, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 44355, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 44373, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 44409, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 44598, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 44754, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 44793, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 45291, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 45354, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 45390, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 45423, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 45564, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 46104, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 46344, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 46404, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 46431, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 46722, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 46812, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 46848, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 46929, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 46959, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 47199, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 47625, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 47640, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 47715, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 47904, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 48150, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 48177, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 48282, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 48336, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 48465, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 48504, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 48636, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 48759, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 48978, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 49089, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 49614, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 49929, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 49986, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 50169, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 50184, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 50247, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 50400, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 50424, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 50604, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 50712, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 51051, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 51150, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 51171, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 51213, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 51357, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 51444, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 51459, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 51555, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 51558, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 51633, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 51639, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 51753, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 51912, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 52089, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 52191, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 52236, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 52518, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 52530, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 52980, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 53001, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 53010, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 53040, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 53190, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 53301, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 53778, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 53829, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 53901, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 54171, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 54249, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 54756, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 54873, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 54954, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 54999, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 55089, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 55194, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 55548, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 55572, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 55722, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 55821, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 55917, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 55974, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 56211, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 56316, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 56376, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 56559, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 56577, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 56886, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 56910, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 56925, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 57108, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 57147, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 57291, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 57471, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 57564, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 57576, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 57648, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 57708, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 58017, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 58056, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 58143, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 58221, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 58260, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 58677, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 59277, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 59442, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 59547, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 59736, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 59802, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 59841, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 59844, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 59994, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 60099, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 60102, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 60261, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 60366, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 60396, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 60483, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 60606, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 60630, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 60681, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 60720, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 60804, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 60849, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 60963, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 61149, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 61197, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 61251, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 61338, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 61608, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 61749, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 61776, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 61998, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 62004, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 62109, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 62199, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 62229, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 62421, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 62445, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 62481, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 62544, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 62910, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 62967, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 63618, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 63759, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 63786, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 63798, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 63855, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 64239, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 64314, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 64389, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 64866, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 65013, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 65382, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 65421, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 65778, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 65871, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 66123, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 66195, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 66234, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 66324, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 66501, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 67125, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 67434, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 67440, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 67491, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 67635, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 67641, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 67680, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 68058, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 68109, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 68373, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 68604, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 68985, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 69009, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 69075, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 69132, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 69147, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 69168, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 69384, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 69429, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 69450, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 69582, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 69993, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 70152, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 70311, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 70338, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 70395, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 70446, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 70503, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 70704, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 70998, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 71139, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 71175, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 71655, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 71886, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 71889, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 71895, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 72033, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 72054, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 73086, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 73167, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 73416, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 73707, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 73848, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 74232, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 74310, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 74502, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 74796, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 75063, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 75546, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 75975, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 75978, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 76713, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 76914, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 77040, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 77478, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 77481, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 77610, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 77745, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 78177, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 78426, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 78570, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 78801, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 78942, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 79038, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 79812, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 80262, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 80370, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 80526, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 80535, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 80781, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 81294, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 81633, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 81687, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 81873, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 82131, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 82152, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 82398, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 82482, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 82647, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 82944, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 83031, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 83259, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 83439, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 83523, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 83919, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 83922, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 84111, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 84552, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 84789, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 85515, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 85977, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 86346, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 86835, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 87768, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 87798, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 88182, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 88404, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 88719, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 88755, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 89019, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 89715, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 90303, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 90414, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 90771, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 90849, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 91281, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 91317, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 91515, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 91554, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 92397, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 92409, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 92916, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 93366, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 93528, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 93792, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 94272, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 94842, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 95037, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 95178, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 95928, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 96321, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 98148, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 98550, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 98760, )
paddle.Tensor.topk(Tensor([3276800],"float32"), 99432, )
paddle.add_n(list[Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),], )
paddle.add_n(list[Tensor([16, 256],"float32"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),Tensor([16, 256],"float16"),], )
paddle.add_n(list[Tensor([],"float32"),Tensor([],"float32"),Tensor([],"float16"),Tensor([],"float32"),], )
paddle.add_n(list[Tensor([],"float32"),Tensor([],"float32"),Tensor([],"float32"),Tensor([],"float16"),Tensor([],"float32"),], )
paddle.all(Tensor([1, 0, 2],"bool"), axis=tuple(), keepdim=True, )
paddle.all(Tensor([1, 0, 2],"complex128"), axis=tuple(), keepdim=True, )
paddle.all(Tensor([1, 0, 2],"complex64"), axis=tuple(), keepdim=True, )
paddle.all(Tensor([1, 0, 2],"float32"), axis=tuple(), keepdim=True, )
paddle.all(Tensor([1, 0, 2],"float64"), axis=tuple(), keepdim=True, )
paddle.all(Tensor([1, 0, 2],"int32"), axis=tuple(), keepdim=True, )
paddle.any(Tensor([1, 0, 2],"bool"), axis=tuple(), keepdim=True, )
paddle.any(Tensor([1, 0, 2],"complex128"), axis=tuple(), keepdim=True, )
paddle.any(Tensor([1, 0, 2],"complex64"), axis=tuple(), keepdim=True, )
paddle.any(Tensor([1, 0, 2],"float32"), axis=tuple(), keepdim=True, )
paddle.any(Tensor([1, 0, 2],"float64"), axis=tuple(), keepdim=True, )
paddle.any(Tensor([1, 0, 2],"int32"), axis=tuple(), keepdim=True, )
paddle.argsort(Tensor([1, 30000],"float32"), descending=True, )
paddle.argsort(Tensor([1, 50304],"float32"), descending=True, )
paddle.argsort(Tensor([16384],"float32"), )
paddle.argsort(Tensor([35968],"float32"), )
paddle.argsort(Tensor([5, 12000],"float32"), descending=True, )
paddle.bitwise_right_shift(Tensor([1],"int8"), Tensor([1],"int8"), False, )
paddle.bitwise_right_shift(Tensor([200, 300],"int16"), Tensor([200, 300],"int16"), False, )
paddle.bitwise_right_shift(Tensor([200, 300],"int16"), Tensor([300],"int16"), False, )
paddle.bitwise_right_shift(Tensor([200, 300],"int32"), Tensor([200, 300],"int32"), False, )
paddle.bitwise_right_shift(Tensor([200, 300],"int32"), Tensor([300],"int32"), False, )
paddle.bitwise_right_shift(Tensor([200, 300],"int64"), Tensor([200, 300],"int64"), False, )
paddle.bitwise_right_shift(Tensor([200, 300],"int64"), Tensor([300],"int64"), False, )
paddle.bitwise_right_shift(Tensor([200, 300],"int8"), Tensor([200, 300],"int8"), False, )
paddle.bitwise_right_shift(Tensor([200, 300],"int8"), Tensor([300],"int8"), False, )
paddle.bitwise_right_shift(Tensor([300],"int16"), Tensor([200, 300],"int16"), False, )
paddle.bitwise_right_shift(Tensor([300],"int32"), Tensor([200, 300],"int32"), False, )
paddle.bitwise_right_shift(Tensor([300],"int64"), Tensor([200, 300],"int64"), False, )
paddle.bitwise_right_shift(Tensor([300],"int8"), Tensor([200, 300],"int8"), False, )
paddle.broadcast_to(Tensor([0],"float64"), list[0,0,0,], )
paddle.broadcast_to(Tensor([0],"float64"), list[0,0,], )
paddle.broadcast_to(Tensor([1],"float16"), list[168,], )
paddle.broadcast_to(Tensor([1],"float16"), list[3,40,], )
paddle.broadcast_to(Tensor([1],"float16"), list[300,40,], )
paddle.broadcast_to(Tensor([1],"float16"), list[6,8,9,18,], )
paddle.broadcast_to(Tensor([300, 1],"float16"), list[300,40,], )
paddle.broadcast_to(Tensor([],"float16"), list[11008,], )
paddle.broadcast_to(Tensor([],"float16"), list[168,], )
paddle.broadcast_to(Tensor([],"float16"), list[300,40,], )
paddle.cast(Tensor([20, 500, 2],"int32"), dtype=Dtype(float16), )
paddle.cast(Tensor([20, 500, 4],"int32"), dtype=Dtype(float16), )
paddle.clip(Tensor([10, 2],"float64"), min=1e-06, )
paddle.clip(Tensor([5, 2],"float64"), min=0.0, )
paddle.clip(Tensor([5],"float64"), min=0, )
paddle.clip(Tensor([5],"float64"), min=0.0, )
paddle.clip(x=Tensor([1, 2, 3],"float64"), min=None, max=1, )
paddle.clip(x=Tensor([3, 3, 3],"float64"), min=None, max=5, )
paddle.clip(x=Tensor([3, 3],"float64"), min=1.0, max=None, )
paddle.clip(x=Tensor([3, 3],"float64"), min=5, max=None, )
paddle.clip(x=Tensor([3, 3],"float64"), min=Tensor([1],"float64"), max=None, )
paddle.clip(x=Tensor([3],"float64"), min=None, max=-1, )
paddle.concat(list[Tensor([1, 256, 128, 128],"float32"),Tensor([1, 48, 128, 128],"float16"),], axis=1, )
paddle.concat(list[Tensor([1, 256, 64, 64],"float16"),Tensor([1, 256, 64, 64],"float16"),Tensor([1, 256, 64, 64],"float16"),Tensor([1, 256, 64, 64],"float16"),Tensor([1, 256, 64, 64],"float32"),], axis=1, )
paddle.concat(list[Tensor([12, 128, 76, 136],"float32"),Tensor([12, 256, 76, 136],"float16"),], axis=1, )
paddle.concat(list[Tensor([12, 256, 38, 68],"float32"),Tensor([12, 512, 38, 68],"float16"),], axis=1, )
paddle.concat(list[Tensor([12, 256, 40, 40],"float32"),Tensor([12, 512, 40, 40],"float16"),], axis=1, )
paddle.concat(list[Tensor([12, 512, 20, 20],"float32"),Tensor([12, 1024, 20, 20],"float16"),], axis=1, )
paddle.concat(list[Tensor([16, 1024, 40, 40],"float16"),Tensor([16, 192, 40, 40],"float32"),Tensor([16, 192, 40, 40],"float32"),Tensor([16, 192, 40, 40],"float32"),Tensor([16, 192, 40, 40],"float32"),Tensor([16, 192, 40, 40],"float32"),Tensor([16, 192, 40, 40],"float32"),], axis=1, )
paddle.concat(list[Tensor([16, 128, 80, 80],"float32"),Tensor([16, 96, 80, 80],"float16"),Tensor([16, 96, 80, 80],"float16"),Tensor([16, 96, 80, 80],"float16"),Tensor([16, 96, 80, 80],"float16"),Tensor([16, 96, 80, 80],"float16"),Tensor([16, 96, 80, 80],"float16"),], axis=1, )
paddle.concat(list[Tensor([16, 192, 20, 20],"float16"),Tensor([16, 192, 20, 20],"float32"),], axis=1, )
paddle.concat(list[Tensor([16, 192, 22, 22],"float16"),Tensor([16, 192, 22, 22],"float32"),], axis=1, )
paddle.concat(list[Tensor([16, 192, 24, 24],"float16"),Tensor([16, 192, 24, 24],"float32"),], axis=1, )
paddle.concat(list[Tensor([16, 192, 26, 26],"float16"),Tensor([16, 192, 26, 26],"float32"),], axis=1, )
paddle.concat(list[Tensor([16, 192, 28, 28],"float16"),Tensor([16, 192, 28, 28],"float32"),], axis=1, )
paddle.concat(list[Tensor([16, 192, 30, 30],"float16"),Tensor([16, 192, 30, 30],"float32"),], axis=1, )
paddle.concat(list[Tensor([16, 192, 32, 32],"float16"),Tensor([16, 192, 32, 32],"float32"),], axis=1, )
paddle.concat(list[Tensor([16, 192, 34, 34],"float16"),Tensor([16, 192, 34, 34],"float32"),], axis=1, )
paddle.concat(list[Tensor([16, 192, 36, 36],"float16"),Tensor([16, 192, 36, 36],"float32"),], axis=1, )
paddle.concat(list[Tensor([16, 192, 38, 38],"float16"),Tensor([16, 192, 38, 38],"float32"),], axis=1, )
paddle.concat(list[Tensor([16, 192, 40, 40],"float16"),Tensor([16, 192, 40, 40],"float32"),], axis=1, )
paddle.concat(list[Tensor([16, 192, 40, 40],"float32"),Tensor([16, 256, 40, 40],"float16"),], axis=1, )
paddle.concat(list[Tensor([16, 192, 42, 42],"float16"),Tensor([16, 192, 42, 42],"float32"),], axis=1, )
paddle.concat(list[Tensor([16, 192, 44, 44],"float16"),Tensor([16, 192, 44, 44],"float32"),], axis=1, )
paddle.concat(list[Tensor([16, 192, 44, 44],"float32"),Tensor([16, 256, 44, 44],"float16"),], axis=1, )
paddle.concat(list[Tensor([16, 192, 46, 46],"float16"),Tensor([16, 192, 46, 46],"float32"),], axis=1, )
paddle.concat(list[Tensor([16, 192, 48, 48],"float16"),Tensor([16, 192, 48, 48],"float32"),], axis=1, )
paddle.concat(list[Tensor([16, 192, 48, 48],"float32"),Tensor([16, 256, 48, 48],"float16"),], axis=1, )
paddle.concat(list[Tensor([16, 192, 52, 52],"float32"),Tensor([16, 256, 52, 52],"float16"),], axis=1, )
paddle.concat(list[Tensor([16, 192, 56, 56],"float32"),Tensor([16, 256, 56, 56],"float16"),], axis=1, )
paddle.concat(list[Tensor([16, 192, 60, 60],"float32"),Tensor([16, 256, 60, 60],"float16"),], axis=1, )
paddle.concat(list[Tensor([16, 192, 64, 64],"float32"),Tensor([16, 256, 64, 64],"float16"),], axis=1, )
paddle.concat(list[Tensor([16, 192, 68, 68],"float32"),Tensor([16, 256, 68, 68],"float16"),], axis=1, )
paddle.concat(list[Tensor([16, 192, 72, 72],"float32"),Tensor([16, 256, 72, 72],"float16"),], axis=1, )
paddle.concat(list[Tensor([16, 192, 76, 76],"float32"),Tensor([16, 256, 76, 76],"float16"),], axis=1, )
paddle.concat(list[Tensor([16, 192, 80, 80],"float32"),Tensor([16, 256, 80, 80],"float16"),], axis=1, )
paddle.concat(list[Tensor([16, 192, 84, 84],"float32"),Tensor([16, 256, 84, 84],"float16"),], axis=1, )
paddle.concat(list[Tensor([16, 192, 88, 88],"float32"),Tensor([16, 256, 88, 88],"float16"),], axis=1, )
paddle.concat(list[Tensor([16, 192, 92, 92],"float32"),Tensor([16, 256, 92, 92],"float16"),], axis=1, )
paddle.concat(list[Tensor([16, 192, 96, 96],"float32"),Tensor([16, 256, 96, 96],"float16"),], axis=1, )
paddle.concat(list[Tensor([16, 256, 40, 40],"float32"),Tensor([16, 256, 40, 40],"float16"),], axis=1, )
paddle.concat(list[Tensor([16, 256, 80, 80],"float32"),Tensor([16, 256, 80, 80],"float16"),], axis=1, )
paddle.concat(list[Tensor([16, 384, 10, 10],"float16"),Tensor([16, 384, 10, 10],"float32"),], axis=1, )
paddle.concat(list[Tensor([16, 384, 11, 11],"float16"),Tensor([16, 384, 11, 11],"float32"),], axis=1, )
paddle.concat(list[Tensor([16, 384, 12, 12],"float16"),Tensor([16, 384, 12, 12],"float32"),], axis=1, )
paddle.concat(list[Tensor([16, 384, 13, 13],"float16"),Tensor([16, 384, 13, 13],"float32"),], axis=1, )
paddle.concat(list[Tensor([16, 384, 14, 14],"float16"),Tensor([16, 384, 14, 14],"float32"),], axis=1, )
paddle.concat(list[Tensor([16, 384, 15, 15],"float16"),Tensor([16, 384, 15, 15],"float32"),], axis=1, )
paddle.concat(list[Tensor([16, 384, 16, 16],"float16"),Tensor([16, 384, 16, 16],"float32"),], axis=1, )
paddle.concat(list[Tensor([16, 384, 17, 17],"float16"),Tensor([16, 384, 17, 17],"float32"),], axis=1, )
paddle.concat(list[Tensor([16, 384, 18, 18],"float16"),Tensor([16, 384, 18, 18],"float32"),], axis=1, )
paddle.concat(list[Tensor([16, 384, 19, 19],"float16"),Tensor([16, 384, 19, 19],"float32"),], axis=1, )
paddle.concat(list[Tensor([16, 384, 20, 20],"float16"),Tensor([16, 384, 20, 20],"float32"),], axis=1, )
paddle.concat(list[Tensor([16, 384, 20, 20],"float32"),Tensor([16, 512, 20, 20],"float16"),], axis=1, )
paddle.concat(list[Tensor([16, 384, 21, 21],"float16"),Tensor([16, 384, 21, 21],"float32"),], axis=1, )
paddle.concat(list[Tensor([16, 384, 22, 22],"float16"),Tensor([16, 384, 22, 22],"float32"),], axis=1, )
paddle.concat(list[Tensor([16, 384, 22, 22],"float32"),Tensor([16, 512, 22, 22],"float16"),], axis=1, )
paddle.concat(list[Tensor([16, 384, 23, 23],"float16"),Tensor([16, 384, 23, 23],"float32"),], axis=1, )
paddle.concat(list[Tensor([16, 384, 24, 24],"float16"),Tensor([16, 384, 24, 24],"float32"),], axis=1, )
paddle.concat(list[Tensor([16, 384, 24, 24],"float32"),Tensor([16, 512, 24, 24],"float16"),], axis=1, )
paddle.concat(list[Tensor([16, 384, 26, 26],"float32"),Tensor([16, 512, 26, 26],"float16"),], axis=1, )
paddle.concat(list[Tensor([16, 384, 28, 28],"float32"),Tensor([16, 512, 28, 28],"float16"),], axis=1, )
paddle.concat(list[Tensor([16, 384, 30, 30],"float32"),Tensor([16, 512, 30, 30],"float16"),], axis=1, )
paddle.concat(list[Tensor([16, 384, 32, 32],"float32"),Tensor([16, 512, 32, 32],"float16"),], axis=1, )
paddle.concat(list[Tensor([16, 384, 34, 34],"float32"),Tensor([16, 512, 34, 34],"float16"),], axis=1, )
paddle.concat(list[Tensor([16, 384, 36, 36],"float32"),Tensor([16, 512, 36, 36],"float16"),], axis=1, )
paddle.concat(list[Tensor([16, 384, 38, 38],"float32"),Tensor([16, 512, 38, 38],"float16"),], axis=1, )
paddle.concat(list[Tensor([16, 384, 40, 40],"float32"),Tensor([16, 512, 40, 40],"float16"),], axis=1, )
paddle.concat(list[Tensor([16, 384, 42, 42],"float32"),Tensor([16, 512, 42, 42],"float16"),], axis=1, )
paddle.concat(list[Tensor([16, 384, 44, 44],"float32"),Tensor([16, 512, 44, 44],"float16"),], axis=1, )
paddle.concat(list[Tensor([16, 384, 46, 46],"float32"),Tensor([16, 512, 46, 46],"float16"),], axis=1, )
paddle.concat(list[Tensor([16, 384, 48, 48],"float32"),Tensor([16, 512, 48, 48],"float16"),], axis=1, )
paddle.concat(list[Tensor([16, 48, 104, 104],"float16"),Tensor([16, 48, 104, 104],"float32"),], axis=1, )
paddle.concat(list[Tensor([16, 48, 112, 112],"float16"),Tensor([16, 48, 112, 112],"float32"),], axis=1, )
paddle.concat(list[Tensor([16, 48, 120, 120],"float16"),Tensor([16, 48, 120, 120],"float32"),], axis=1, )
paddle.concat(list[Tensor([16, 48, 128, 128],"float16"),Tensor([16, 48, 128, 128],"float32"),], axis=1, )
paddle.concat(list[Tensor([16, 48, 136, 136],"float16"),Tensor([16, 48, 136, 136],"float32"),], axis=1, )
paddle.concat(list[Tensor([16, 48, 144, 144],"float16"),Tensor([16, 48, 144, 144],"float32"),], axis=1, )
paddle.concat(list[Tensor([16, 48, 152, 152],"float16"),Tensor([16, 48, 152, 152],"float32"),], axis=1, )
paddle.concat(list[Tensor([16, 48, 160, 160],"float16"),Tensor([16, 48, 160, 160],"float32"),], axis=1, )
paddle.concat(list[Tensor([16, 48, 168, 168],"float16"),Tensor([16, 48, 168, 168],"float32"),], axis=1, )
paddle.concat(list[Tensor([16, 48, 176, 176],"float16"),Tensor([16, 48, 176, 176],"float32"),], axis=1, )
paddle.concat(list[Tensor([16, 48, 184, 184],"float16"),Tensor([16, 48, 184, 184],"float32"),], axis=1, )
paddle.concat(list[Tensor([16, 48, 192, 192],"float16"),Tensor([16, 48, 192, 192],"float32"),], axis=1, )
paddle.concat(list[Tensor([16, 48, 80, 80],"float16"),Tensor([16, 48, 80, 80],"float32"),], axis=1, )
paddle.concat(list[Tensor([16, 48, 88, 88],"float16"),Tensor([16, 48, 88, 88],"float32"),], axis=1, )
paddle.concat(list[Tensor([16, 48, 96, 96],"float16"),Tensor([16, 48, 96, 96],"float32"),], axis=1, )
paddle.concat(list[Tensor([16, 512, 40, 40],"float32"),Tensor([16, 512, 40, 40],"float16"),], axis=1, )
paddle.concat(list[Tensor([16, 64, 160, 160],"float32"),Tensor([16, 64, 160, 160],"float32"),Tensor([16, 64, 160, 160],"float32"),Tensor([16, 64, 160, 160],"float16"),], axis=1, )
paddle.concat(list[Tensor([16, 96, 40, 40],"float16"),Tensor([16, 96, 40, 40],"float32"),], axis=1, )
paddle.concat(list[Tensor([16, 96, 44, 44],"float16"),Tensor([16, 96, 44, 44],"float32"),], axis=1, )
paddle.concat(list[Tensor([16, 96, 48, 48],"float16"),Tensor([16, 96, 48, 48],"float32"),], axis=1, )
paddle.concat(list[Tensor([16, 96, 52, 52],"float16"),Tensor([16, 96, 52, 52],"float32"),], axis=1, )
paddle.concat(list[Tensor([16, 96, 56, 56],"float16"),Tensor([16, 96, 56, 56],"float32"),], axis=1, )
paddle.concat(list[Tensor([16, 96, 60, 60],"float16"),Tensor([16, 96, 60, 60],"float32"),], axis=1, )
paddle.concat(list[Tensor([16, 96, 64, 64],"float16"),Tensor([16, 96, 64, 64],"float32"),], axis=1, )
paddle.concat(list[Tensor([16, 96, 68, 68],"float16"),Tensor([16, 96, 68, 68],"float32"),], axis=1, )
paddle.concat(list[Tensor([16, 96, 72, 72],"float16"),Tensor([16, 96, 72, 72],"float32"),], axis=1, )
paddle.concat(list[Tensor([16, 96, 76, 76],"float16"),Tensor([16, 96, 76, 76],"float32"),], axis=1, )
paddle.concat(list[Tensor([16, 96, 80, 80],"float16"),Tensor([16, 96, 80, 80],"float32"),], axis=1, )
paddle.concat(list[Tensor([16, 96, 84, 84],"float16"),Tensor([16, 96, 84, 84],"float32"),], axis=1, )
paddle.concat(list[Tensor([16, 96, 88, 88],"float16"),Tensor([16, 96, 88, 88],"float32"),], axis=1, )
paddle.concat(list[Tensor([16, 96, 92, 92],"float16"),Tensor([16, 96, 92, 92],"float32"),], axis=1, )
paddle.concat(list[Tensor([16, 96, 96, 96],"float16"),Tensor([16, 96, 96, 96],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 256, 128, 128],"float32"),Tensor([2, 48, 128, 128],"float16"),], axis=1, )
paddle.concat(list[Tensor([2, 256, 64, 64],"float16"),Tensor([2, 256, 64, 64],"float16"),Tensor([2, 256, 64, 64],"float16"),Tensor([2, 256, 64, 64],"float16"),Tensor([2, 256, 64, 64],"float32"),], axis=1, )
paddle.concat(list[Tensor([3, 1, 512, 512],"float32"),Tensor([3, 1, 512, 512],"float16"),], axis=1, )
paddle.concat(list[Tensor([4, 1, 640, 640],"float16"),Tensor([4, 64, 640, 640],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 128, 248, 216],"float16"),Tensor([4, 128, 248, 216],"float16"),Tensor([4, 128, 248, 216],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 128, 256, 256],"float16"),Tensor([4, 128, 256, 256],"float32"),Tensor([4, 128, 256, 256],"float32"),Tensor([4, 128, 256, 256],"float32"),], 1, )
paddle.concat(list[Tensor([4, 128, 32, 32],"float16"),Tensor([4, 32, 32, 32],"float32"),Tensor([4, 32, 32, 32],"float32"),Tensor([4, 32, 32, 32],"float32"),Tensor([4, 32, 32, 32],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 100, 136],"float16"),Tensor([4, 2, 100, 136],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 100, 140],"float16"),Tensor([4, 2, 100, 140],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 100, 144],"float16"),Tensor([4, 2, 100, 144],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 100, 148],"float16"),Tensor([4, 2, 100, 148],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 100, 152],"float16"),Tensor([4, 2, 100, 152],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 100, 156],"float16"),Tensor([4, 2, 100, 156],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 100, 160],"float16"),Tensor([4, 2, 100, 160],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 100, 164],"float16"),Tensor([4, 2, 100, 164],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 100, 168],"float16"),Tensor([4, 2, 100, 168],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 104, 136],"float16"),Tensor([4, 2, 104, 136],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 104, 152],"float16"),Tensor([4, 2, 104, 152],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 104, 164],"float16"),Tensor([4, 2, 104, 164],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 104, 168],"float16"),Tensor([4, 2, 104, 168],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 108, 148],"float16"),Tensor([4, 2, 108, 148],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 108, 152],"float16"),Tensor([4, 2, 108, 152],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 108, 156],"float16"),Tensor([4, 2, 108, 156],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 112, 152],"float16"),Tensor([4, 2, 112, 152],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 116, 152],"float16"),Tensor([4, 2, 116, 152],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 116, 160],"float16"),Tensor([4, 2, 116, 160],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 120, 152],"float16"),Tensor([4, 2, 120, 152],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 124, 136],"float16"),Tensor([4, 2, 124, 136],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 124, 152],"float16"),Tensor([4, 2, 124, 152],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 124, 168],"float16"),Tensor([4, 2, 124, 168],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 128, 128],"float32"),Tensor([4, 48, 128, 128],"float16"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 128, 136],"float16"),Tensor([4, 2, 128, 136],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 128, 152],"float16"),Tensor([4, 2, 128, 152],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 128, 168],"float16"),Tensor([4, 2, 128, 168],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 128, 256],"float32"),Tensor([4, 48, 128, 256],"float16"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 132, 144],"float16"),Tensor([4, 2, 132, 144],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 132, 148],"float16"),Tensor([4, 2, 132, 148],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 132, 152],"float16"),Tensor([4, 2, 132, 152],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 132, 160],"float16"),Tensor([4, 2, 132, 160],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 132, 168],"float16"),Tensor([4, 2, 132, 168],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 136, 100],"float16"),Tensor([4, 2, 136, 100],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 136, 108],"float16"),Tensor([4, 2, 136, 108],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 136, 136],"float16"),Tensor([4, 2, 136, 136],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 136, 140],"float16"),Tensor([4, 2, 136, 140],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 136, 148],"float16"),Tensor([4, 2, 136, 148],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 136, 152],"float16"),Tensor([4, 2, 136, 152],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 136, 156],"float16"),Tensor([4, 2, 136, 156],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 136, 160],"float16"),Tensor([4, 2, 136, 160],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 136, 164],"float16"),Tensor([4, 2, 136, 164],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 136, 168],"float16"),Tensor([4, 2, 136, 168],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 140, 136],"float16"),Tensor([4, 2, 140, 136],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 140, 140],"float16"),Tensor([4, 2, 140, 140],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 140, 152],"float16"),Tensor([4, 2, 140, 152],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 140, 156],"float16"),Tensor([4, 2, 140, 156],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 140, 164],"float16"),Tensor([4, 2, 140, 164],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 140, 168],"float16"),Tensor([4, 2, 140, 168],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 144, 136],"float16"),Tensor([4, 2, 144, 136],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 144, 152],"float16"),Tensor([4, 2, 144, 152],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 144, 168],"float16"),Tensor([4, 2, 144, 168],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 148, 136],"float16"),Tensor([4, 2, 148, 136],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 148, 152],"float16"),Tensor([4, 2, 148, 152],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 148, 164],"float16"),Tensor([4, 2, 148, 164],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 148, 168],"float16"),Tensor([4, 2, 148, 168],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 152, 100],"float16"),Tensor([4, 2, 152, 100],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 152, 108],"float16"),Tensor([4, 2, 152, 108],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 152, 132],"float16"),Tensor([4, 2, 152, 132],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 152, 136],"float16"),Tensor([4, 2, 152, 136],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 152, 140],"float16"),Tensor([4, 2, 152, 140],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 152, 144],"float16"),Tensor([4, 2, 152, 144],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 152, 148],"float16"),Tensor([4, 2, 152, 148],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 152, 152],"float16"),Tensor([4, 2, 152, 152],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 152, 156],"float16"),Tensor([4, 2, 152, 156],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 152, 160],"float16"),Tensor([4, 2, 152, 160],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 152, 164],"float16"),Tensor([4, 2, 152, 164],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 152, 168],"float16"),Tensor([4, 2, 152, 168],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 156, 136],"float16"),Tensor([4, 2, 156, 136],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 156, 148],"float16"),Tensor([4, 2, 156, 148],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 156, 152],"float16"),Tensor([4, 2, 156, 152],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 156, 168],"float16"),Tensor([4, 2, 156, 168],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 160, 136],"float16"),Tensor([4, 2, 160, 136],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 160, 152],"float16"),Tensor([4, 2, 160, 152],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 160, 160],"float16"),Tensor([4, 2, 160, 160],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 164, 100],"float16"),Tensor([4, 2, 164, 100],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 164, 136],"float16"),Tensor([4, 2, 164, 136],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 164, 148],"float16"),Tensor([4, 2, 164, 148],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 164, 152],"float16"),Tensor([4, 2, 164, 152],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 168, 100],"float16"),Tensor([4, 2, 168, 100],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 168, 136],"float16"),Tensor([4, 2, 168, 136],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 168, 140],"float16"),Tensor([4, 2, 168, 140],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 168, 152],"float16"),Tensor([4, 2, 168, 152],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 168, 156],"float16"),Tensor([4, 2, 168, 156],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 168, 160],"float16"),Tensor([4, 2, 168, 160],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 168, 168],"float16"),Tensor([4, 2, 168, 168],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 25, 34],"float16"),Tensor([4, 2, 25, 34],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 25, 35],"float16"),Tensor([4, 2, 25, 35],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 25, 36],"float16"),Tensor([4, 2, 25, 36],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 25, 37],"float16"),Tensor([4, 2, 25, 37],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 25, 38],"float16"),Tensor([4, 2, 25, 38],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 25, 39],"float16"),Tensor([4, 2, 25, 39],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 25, 40],"float16"),Tensor([4, 2, 25, 40],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 25, 41],"float16"),Tensor([4, 2, 25, 41],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 25, 42],"float16"),Tensor([4, 2, 25, 42],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 256, 256],"float32"),Tensor([4, 256, 256, 256],"float32"),Tensor([4, 256, 256, 256],"float32"),Tensor([4, 256, 256, 256],"float16"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 26, 34],"float16"),Tensor([4, 2, 26, 34],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 26, 38],"float16"),Tensor([4, 2, 26, 38],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 26, 41],"float16"),Tensor([4, 2, 26, 41],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 26, 42],"float16"),Tensor([4, 2, 26, 42],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 27, 37],"float16"),Tensor([4, 2, 27, 37],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 27, 38],"float16"),Tensor([4, 2, 27, 38],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 27, 39],"float16"),Tensor([4, 2, 27, 39],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 28, 38],"float16"),Tensor([4, 2, 28, 38],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 29, 38],"float16"),Tensor([4, 2, 29, 38],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 29, 40],"float16"),Tensor([4, 2, 29, 40],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 30, 38],"float16"),Tensor([4, 2, 30, 38],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 31, 34],"float16"),Tensor([4, 2, 31, 34],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 31, 38],"float16"),Tensor([4, 2, 31, 38],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 31, 42],"float16"),Tensor([4, 2, 31, 42],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 32, 34],"float16"),Tensor([4, 2, 32, 34],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 32, 38],"float16"),Tensor([4, 2, 32, 38],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 32, 42],"float16"),Tensor([4, 2, 32, 42],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 33, 36],"float16"),Tensor([4, 2, 33, 36],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 33, 37],"float16"),Tensor([4, 2, 33, 37],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 33, 38],"float16"),Tensor([4, 2, 33, 38],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 33, 40],"float16"),Tensor([4, 2, 33, 40],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 33, 42],"float16"),Tensor([4, 2, 33, 42],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 34, 25],"float16"),Tensor([4, 2, 34, 25],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 34, 27],"float16"),Tensor([4, 2, 34, 27],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 34, 34],"float16"),Tensor([4, 2, 34, 34],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 34, 35],"float16"),Tensor([4, 2, 34, 35],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 34, 37],"float16"),Tensor([4, 2, 34, 37],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 34, 38],"float16"),Tensor([4, 2, 34, 38],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 34, 39],"float16"),Tensor([4, 2, 34, 39],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 34, 40],"float16"),Tensor([4, 2, 34, 40],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 34, 41],"float16"),Tensor([4, 2, 34, 41],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 34, 42],"float16"),Tensor([4, 2, 34, 42],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 35, 34],"float16"),Tensor([4, 2, 35, 34],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 35, 35],"float16"),Tensor([4, 2, 35, 35],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 35, 38],"float16"),Tensor([4, 2, 35, 38],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 35, 39],"float16"),Tensor([4, 2, 35, 39],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 35, 41],"float16"),Tensor([4, 2, 35, 41],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 35, 42],"float16"),Tensor([4, 2, 35, 42],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 36, 34],"float16"),Tensor([4, 2, 36, 34],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 36, 38],"float16"),Tensor([4, 2, 36, 38],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 36, 42],"float16"),Tensor([4, 2, 36, 42],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 37, 34],"float16"),Tensor([4, 2, 37, 34],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 37, 38],"float16"),Tensor([4, 2, 37, 38],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 37, 41],"float16"),Tensor([4, 2, 37, 41],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 37, 42],"float16"),Tensor([4, 2, 37, 42],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 38, 25],"float16"),Tensor([4, 2, 38, 25],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 38, 27],"float16"),Tensor([4, 2, 38, 27],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 38, 33],"float16"),Tensor([4, 2, 38, 33],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 38, 34],"float16"),Tensor([4, 2, 38, 34],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 38, 35],"float16"),Tensor([4, 2, 38, 35],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 38, 36],"float16"),Tensor([4, 2, 38, 36],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 38, 37],"float16"),Tensor([4, 2, 38, 37],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 38, 38],"float16"),Tensor([4, 2, 38, 38],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 38, 39],"float16"),Tensor([4, 2, 38, 39],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 38, 40],"float16"),Tensor([4, 2, 38, 40],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 38, 41],"float16"),Tensor([4, 2, 38, 41],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 38, 42],"float16"),Tensor([4, 2, 38, 42],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 39, 34],"float16"),Tensor([4, 2, 39, 34],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 39, 37],"float16"),Tensor([4, 2, 39, 37],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 39, 38],"float16"),Tensor([4, 2, 39, 38],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 39, 42],"float16"),Tensor([4, 2, 39, 42],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 40, 34],"float16"),Tensor([4, 2, 40, 34],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 40, 38],"float16"),Tensor([4, 2, 40, 38],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 40, 40],"float16"),Tensor([4, 2, 40, 40],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 41, 25],"float16"),Tensor([4, 2, 41, 25],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 41, 34],"float16"),Tensor([4, 2, 41, 34],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 41, 37],"float16"),Tensor([4, 2, 41, 37],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 41, 38],"float16"),Tensor([4, 2, 41, 38],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 42, 25],"float16"),Tensor([4, 2, 42, 25],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 42, 34],"float16"),Tensor([4, 2, 42, 34],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 42, 35],"float16"),Tensor([4, 2, 42, 35],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 42, 38],"float16"),Tensor([4, 2, 42, 38],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 42, 39],"float16"),Tensor([4, 2, 42, 39],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 42, 40],"float16"),Tensor([4, 2, 42, 40],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 42, 42],"float16"),Tensor([4, 2, 42, 42],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 50, 68],"float16"),Tensor([4, 2, 50, 68],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 50, 70],"float16"),Tensor([4, 2, 50, 70],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 50, 72],"float16"),Tensor([4, 2, 50, 72],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 50, 74],"float16"),Tensor([4, 2, 50, 74],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 50, 76],"float16"),Tensor([4, 2, 50, 76],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 50, 78],"float16"),Tensor([4, 2, 50, 78],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 50, 80],"float16"),Tensor([4, 2, 50, 80],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 50, 82],"float16"),Tensor([4, 2, 50, 82],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 50, 84],"float16"),Tensor([4, 2, 50, 84],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 52, 68],"float16"),Tensor([4, 2, 52, 68],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 52, 76],"float16"),Tensor([4, 2, 52, 76],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 52, 82],"float16"),Tensor([4, 2, 52, 82],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 52, 84],"float16"),Tensor([4, 2, 52, 84],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 54, 74],"float16"),Tensor([4, 2, 54, 74],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 54, 76],"float16"),Tensor([4, 2, 54, 76],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 54, 78],"float16"),Tensor([4, 2, 54, 78],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 56, 76],"float16"),Tensor([4, 2, 56, 76],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 58, 76],"float16"),Tensor([4, 2, 58, 76],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 58, 80],"float16"),Tensor([4, 2, 58, 80],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 60, 76],"float16"),Tensor([4, 2, 60, 76],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 62, 68],"float16"),Tensor([4, 2, 62, 68],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 62, 76],"float16"),Tensor([4, 2, 62, 76],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 62, 84],"float16"),Tensor([4, 2, 62, 84],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 64, 128],"float16"),Tensor([4, 256, 64, 128],"float16"),Tensor([4, 256, 64, 128],"float16"),Tensor([4, 256, 64, 128],"float16"),Tensor([4, 256, 64, 128],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 64, 64],"float16"),Tensor([4, 256, 64, 64],"float16"),Tensor([4, 256, 64, 64],"float16"),Tensor([4, 256, 64, 64],"float16"),Tensor([4, 256, 64, 64],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 64, 68],"float16"),Tensor([4, 2, 64, 68],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 64, 76],"float16"),Tensor([4, 2, 64, 76],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 64, 84],"float16"),Tensor([4, 2, 64, 84],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 66, 72],"float16"),Tensor([4, 2, 66, 72],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 66, 74],"float16"),Tensor([4, 2, 66, 74],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 66, 76],"float16"),Tensor([4, 2, 66, 76],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 66, 80],"float16"),Tensor([4, 2, 66, 80],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 66, 84],"float16"),Tensor([4, 2, 66, 84],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 68, 50],"float16"),Tensor([4, 2, 68, 50],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 68, 54],"float16"),Tensor([4, 2, 68, 54],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 68, 68],"float16"),Tensor([4, 2, 68, 68],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 68, 70],"float16"),Tensor([4, 2, 68, 70],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 68, 74],"float16"),Tensor([4, 2, 68, 74],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 68, 76],"float16"),Tensor([4, 2, 68, 76],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 68, 78],"float16"),Tensor([4, 2, 68, 78],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 68, 80],"float16"),Tensor([4, 2, 68, 80],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 68, 82],"float16"),Tensor([4, 2, 68, 82],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 68, 84],"float16"),Tensor([4, 2, 68, 84],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 70, 68],"float16"),Tensor([4, 2, 70, 68],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 70, 70],"float16"),Tensor([4, 2, 70, 70],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 70, 76],"float16"),Tensor([4, 2, 70, 76],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 70, 78],"float16"),Tensor([4, 2, 70, 78],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 70, 82],"float16"),Tensor([4, 2, 70, 82],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 70, 84],"float16"),Tensor([4, 2, 70, 84],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 72, 68],"float16"),Tensor([4, 2, 72, 68],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 72, 76],"float16"),Tensor([4, 2, 72, 76],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 72, 84],"float16"),Tensor([4, 2, 72, 84],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 74, 68],"float16"),Tensor([4, 2, 74, 68],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 74, 76],"float16"),Tensor([4, 2, 74, 76],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 74, 82],"float16"),Tensor([4, 2, 74, 82],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 74, 84],"float16"),Tensor([4, 2, 74, 84],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 76, 50],"float16"),Tensor([4, 2, 76, 50],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 76, 54],"float16"),Tensor([4, 2, 76, 54],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 76, 66],"float16"),Tensor([4, 2, 76, 66],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 76, 68],"float16"),Tensor([4, 2, 76, 68],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 76, 70],"float16"),Tensor([4, 2, 76, 70],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 76, 72],"float16"),Tensor([4, 2, 76, 72],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 76, 74],"float16"),Tensor([4, 2, 76, 74],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 76, 76],"float16"),Tensor([4, 2, 76, 76],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 76, 78],"float16"),Tensor([4, 2, 76, 78],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 76, 80],"float16"),Tensor([4, 2, 76, 80],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 76, 82],"float16"),Tensor([4, 2, 76, 82],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 76, 84],"float16"),Tensor([4, 2, 76, 84],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 78, 68],"float16"),Tensor([4, 2, 78, 68],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 78, 74],"float16"),Tensor([4, 2, 78, 74],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 78, 76],"float16"),Tensor([4, 2, 78, 76],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 78, 84],"float16"),Tensor([4, 2, 78, 84],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 80, 68],"float16"),Tensor([4, 2, 80, 68],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 80, 76],"float16"),Tensor([4, 2, 80, 76],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 80, 80],"float16"),Tensor([4, 2, 80, 80],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 82, 50],"float16"),Tensor([4, 2, 82, 50],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 82, 68],"float16"),Tensor([4, 2, 82, 68],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 82, 74],"float16"),Tensor([4, 2, 82, 74],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 82, 76],"float16"),Tensor([4, 2, 82, 76],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 84, 50],"float16"),Tensor([4, 2, 84, 50],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 84, 68],"float16"),Tensor([4, 2, 84, 68],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 84, 70],"float16"),Tensor([4, 2, 84, 70],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 84, 76],"float16"),Tensor([4, 2, 84, 76],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 84, 78],"float16"),Tensor([4, 2, 84, 78],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 84, 80],"float16"),Tensor([4, 2, 84, 80],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 256, 84, 84],"float16"),Tensor([4, 2, 84, 84],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 3, 256, 256],"float32"),Tensor([4, 32, 256, 256],"float16"),], axis=1, )
paddle.concat(list[Tensor([4, 32, 64, 64],"float16"),Tensor([4, 32, 64, 64],"float32"),Tensor([4, 32, 64, 64],"float32"),Tensor([4, 32, 64, 64],"float32"),Tensor([4, 32, 64, 64],"float32"),Tensor([4, 32, 64, 64],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 32, 64, 64],"float16"),Tensor([4, 32, 64, 64],"float32"),Tensor([4, 32, 64, 64],"float32"),Tensor([4, 32, 64, 64],"float32"),Tensor([4, 32, 64, 64],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 32, 64, 64],"float16"),Tensor([4, 32, 64, 64],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 32, 64, 64],"float32"),Tensor([4, 32, 64, 64],"float16"),Tensor([4, 2, 64, 64],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 32, 64, 64],"float32"),Tensor([4, 32, 64, 64],"float16"),], axis=1, )
paddle.concat(list[Tensor([4, 512, 128, 128],"float16"),Tensor([4, 128, 128, 128],"float32"),Tensor([4, 128, 128, 128],"float32"),Tensor([4, 128, 128, 128],"float32"),Tensor([4, 128, 128, 128],"float32"),], axis=1, )
paddle.concat(list[Tensor([4, 64, 128, 128],"float32"),Tensor([4, 64, 128, 128],"float16"),], 1, )
paddle.concat(list[Tensor([4, 64, 160, 160],"float32"),Tensor([4, 64, 160, 160],"float32"),Tensor([4, 64, 160, 160],"float32"),Tensor([4, 64, 160, 160],"float16"),], axis=1, )
paddle.concat(list[Tensor([4, 64, 256, 256],"float32"),Tensor([4, 64, 256, 256],"float16"),], 1, )
paddle.concat(list[Tensor([48, 128, 22, 22],"float32"),Tensor([48, 128, 22, 22],"float16"),], 1, )
paddle.concat(list[Tensor([48, 128, 24, 24],"float32"),Tensor([48, 128, 24, 24],"float16"),], 1, )
paddle.concat(list[Tensor([48, 128, 26, 26],"float32"),Tensor([48, 128, 26, 26],"float16"),], 1, )
paddle.concat(list[Tensor([48, 128, 28, 28],"float32"),Tensor([48, 128, 28, 28],"float16"),], 1, )
paddle.concat(list[Tensor([48, 128, 30, 30],"float32"),Tensor([48, 128, 30, 30],"float16"),], 1, )
paddle.concat(list[Tensor([48, 128, 44, 44],"float32"),Tensor([48, 128, 44, 44],"float16"),], 1, )
paddle.concat(list[Tensor([48, 128, 48, 48],"float32"),Tensor([48, 128, 48, 48],"float16"),], 1, )
paddle.concat(list[Tensor([48, 128, 52, 52],"float32"),Tensor([48, 128, 52, 52],"float16"),], 1, )
paddle.concat(list[Tensor([48, 128, 56, 56],"float32"),Tensor([48, 128, 56, 56],"float16"),], 1, )
paddle.concat(list[Tensor([48, 128, 60, 60],"float32"),Tensor([48, 128, 60, 60],"float16"),], 1, )
paddle.concat(list[Tensor([512, 20, 32, 24],"float32"),Tensor([512, 20, 32, 24],"float16"),], axis=1, )
paddle.concat(list[Tensor([512, 40, 16, 12],"float32"),Tensor([512, 40, 16, 12],"float16"),], axis=1, )
paddle.concat(list[Tensor([512, 80, 8, 6],"float32"),Tensor([512, 80, 8, 6],"float16"),], axis=1, )
paddle.concat(list[Tensor([6, 1, 512, 512],"float32"),Tensor([6, 1, 512, 512],"float16"),], axis=1, )
paddle.concat(list[Tensor([64, 24, 32, 32],"float16"),Tensor([64, 24, 32, 32],"float32"),], axis=1, )
paddle.concat(list[Tensor([64, 24, 36, 36],"float16"),Tensor([64, 24, 36, 36],"float32"),], axis=1, )
paddle.concat(list[Tensor([64, 24, 40, 40],"float16"),Tensor([64, 24, 40, 40],"float32"),], axis=1, )
paddle.concat(list[Tensor([64, 24, 44, 44],"float16"),Tensor([64, 24, 44, 44],"float32"),], axis=1, )
paddle.concat(list[Tensor([64, 24, 48, 48],"float16"),Tensor([64, 24, 48, 48],"float32"),], axis=1, )
paddle.concat(list[Tensor([64, 48, 16, 16],"float16"),Tensor([64, 48, 16, 16],"float32"),], axis=1, )
paddle.concat(list[Tensor([64, 48, 18, 18],"float16"),Tensor([64, 48, 18, 18],"float32"),], axis=1, )
paddle.concat(list[Tensor([64, 48, 20, 20],"float16"),Tensor([64, 48, 20, 20],"float32"),], axis=1, )
paddle.concat(list[Tensor([64, 48, 22, 22],"float16"),Tensor([64, 48, 22, 22],"float32"),], axis=1, )
paddle.concat(list[Tensor([64, 48, 24, 24],"float16"),Tensor([64, 48, 24, 24],"float32"),], axis=1, )
paddle.concat(list[Tensor([64, 60, 16, 16],"float16"),Tensor([64, 60, 16, 16],"float32"),], axis=1, )
paddle.concat(list[Tensor([64, 60, 18, 18],"float16"),Tensor([64, 60, 18, 18],"float32"),], axis=1, )
paddle.concat(list[Tensor([64, 60, 20, 20],"float16"),Tensor([64, 60, 20, 20],"float32"),], axis=1, )
paddle.concat(list[Tensor([64, 60, 22, 22],"float16"),Tensor([64, 60, 22, 22],"float32"),], axis=1, )
paddle.concat(list[Tensor([64, 60, 24, 24],"float16"),Tensor([64, 60, 24, 24],"float32"),], axis=1, )
paddle.concat(list[Tensor([64, 64, 32, 32],"float16"),Tensor([64, 64, 32, 32],"float32"),], axis=1, )
paddle.concat(list[Tensor([64, 64, 64, 64],"float16"),Tensor([64, 64, 64, 64],"float32"),], axis=1, )
paddle.concat(list[Tensor([64, 96, 10, 10],"float16"),Tensor([64, 96, 10, 10],"float32"),], axis=1, )
paddle.concat(list[Tensor([64, 96, 11, 11],"float16"),Tensor([64, 96, 11, 11],"float32"),], axis=1, )
paddle.concat(list[Tensor([64, 96, 12, 12],"float16"),Tensor([64, 96, 12, 12],"float32"),], axis=1, )
paddle.concat(list[Tensor([64, 96, 122, 122],"float32"),Tensor([64, 96, 122, 122],"float16"),], 1, )
paddle.concat(list[Tensor([64, 96, 16, 16],"float32"),Tensor([64, 96, 16, 16],"float16"),], 1, )
paddle.concat(list[Tensor([64, 96, 18, 18],"float32"),Tensor([64, 96, 18, 18],"float16"),], 1, )
paddle.concat(list[Tensor([64, 96, 20, 20],"float32"),Tensor([64, 96, 20, 20],"float16"),], 1, )
paddle.concat(list[Tensor([64, 96, 22, 22],"float32"),Tensor([64, 96, 22, 22],"float16"),], 1, )
paddle.concat(list[Tensor([64, 96, 24, 24],"float32"),Tensor([64, 96, 24, 24],"float16"),], 1, )
paddle.concat(list[Tensor([64, 96, 31, 31],"float32"),Tensor([64, 96, 31, 31],"float16"),], 1, )
paddle.concat(list[Tensor([64, 96, 32, 32],"float32"),Tensor([64, 96, 32, 32],"float16"),], 1, )
paddle.concat(list[Tensor([64, 96, 36, 36],"float32"),Tensor([64, 96, 36, 36],"float16"),], 1, )
paddle.concat(list[Tensor([64, 96, 40, 40],"float32"),Tensor([64, 96, 40, 40],"float16"),], 1, )
paddle.concat(list[Tensor([64, 96, 44, 44],"float32"),Tensor([64, 96, 44, 44],"float16"),], 1, )
paddle.concat(list[Tensor([64, 96, 48, 48],"float32"),Tensor([64, 96, 48, 48],"float16"),], 1, )
paddle.concat(list[Tensor([64, 96, 61, 61],"float32"),Tensor([64, 96, 61, 61],"float16"),], 1, )
paddle.concat(list[Tensor([64, 96, 8, 8],"float16"),Tensor([64, 96, 8, 8],"float32"),], axis=1, )
paddle.concat(list[Tensor([64, 96, 9, 9],"float16"),Tensor([64, 96, 9, 9],"float32"),], axis=1, )
paddle.concat(list[Tensor([64, 96],"float16"),Tensor([64, 50],"float32"),], 1, )
paddle.concat(list[Tensor([8, 1, 512, 512],"float32"),Tensor([8, 1, 512, 512],"float16"),], axis=1, )
paddle.concat(list[Tensor([8, 128, 128, 128],"float16"),Tensor([8, 128, 128, 128],"float16"),Tensor([8, 128, 128, 128],"float32"),], axis=1, )
paddle.concat(list[Tensor([8, 128, 40, 40],"float16"),Tensor([8, 128, 40, 40],"float32"),], 1, )
paddle.concat(list[Tensor([8, 128, 40, 40],"float32"),Tensor([8, 256, 40, 40],"float16"),], axis=1, )
paddle.concat(list[Tensor([8, 128, 44, 44],"float32"),Tensor([8, 256, 44, 44],"float16"),], axis=1, )
paddle.concat(list[Tensor([8, 128, 48, 48],"float32"),Tensor([8, 256, 48, 48],"float16"),], axis=1, )
paddle.concat(list[Tensor([8, 128, 52, 52],"float32"),Tensor([8, 256, 52, 52],"float16"),], axis=1, )
paddle.concat(list[Tensor([8, 128, 56, 56],"float32"),Tensor([8, 256, 56, 56],"float16"),], axis=1, )
paddle.concat(list[Tensor([8, 128, 60, 60],"float32"),Tensor([8, 256, 60, 60],"float16"),], axis=1, )
paddle.concat(list[Tensor([8, 128, 64, 64],"float32"),Tensor([8, 256, 64, 64],"float16"),], axis=1, )
paddle.concat(list[Tensor([8, 128, 68, 68],"float32"),Tensor([8, 256, 68, 68],"float16"),], axis=1, )
paddle.concat(list[Tensor([8, 128, 72, 72],"float32"),Tensor([8, 256, 72, 72],"float16"),], axis=1, )
paddle.concat(list[Tensor([8, 128, 76, 76],"float32"),Tensor([8, 256, 76, 76],"float16"),], axis=1, )
paddle.concat(list[Tensor([8, 128, 80, 80],"float16"),Tensor([8, 128, 80, 80],"float32"),], 1, )
paddle.concat(list[Tensor([8, 128, 80, 80],"float32"),Tensor([8, 128, 80, 80],"float16"),], axis=1, )
paddle.concat(list[Tensor([8, 192, 20, 20],"float32"),Tensor([8, 256, 20, 20],"float16"),], axis=1, )
paddle.concat(list[Tensor([8, 192, 22, 22],"float32"),Tensor([8, 256, 22, 22],"float16"),], axis=1, )
paddle.concat(list[Tensor([8, 192, 24, 24],"float32"),Tensor([8, 256, 24, 24],"float16"),], axis=1, )
paddle.concat(list[Tensor([8, 192, 26, 26],"float32"),Tensor([8, 256, 26, 26],"float16"),], axis=1, )
paddle.concat(list[Tensor([8, 192, 28, 28],"float32"),Tensor([8, 256, 28, 28],"float16"),], axis=1, )
paddle.concat(list[Tensor([8, 192, 30, 30],"float32"),Tensor([8, 256, 30, 30],"float16"),], axis=1, )
paddle.concat(list[Tensor([8, 192, 32, 32],"float32"),Tensor([8, 256, 32, 32],"float16"),], axis=1, )
paddle.concat(list[Tensor([8, 192, 34, 34],"float32"),Tensor([8, 256, 34, 34],"float16"),], axis=1, )
paddle.concat(list[Tensor([8, 192, 36, 36],"float32"),Tensor([8, 256, 36, 36],"float16"),], axis=1, )
paddle.concat(list[Tensor([8, 192, 38, 38],"float32"),Tensor([8, 256, 38, 38],"float16"),], axis=1, )
paddle.concat(list[Tensor([8, 192, 40, 40],"float32"),Tensor([8, 256, 40, 40],"float16"),], axis=1, )
paddle.concat(list[Tensor([8, 192, 42, 42],"float32"),Tensor([8, 256, 42, 42],"float16"),], axis=1, )
paddle.concat(list[Tensor([8, 192, 44, 44],"float32"),Tensor([8, 256, 44, 44],"float16"),], axis=1, )
paddle.concat(list[Tensor([8, 192, 46, 46],"float32"),Tensor([8, 256, 46, 46],"float16"),], axis=1, )
paddle.concat(list[Tensor([8, 192, 48, 48],"float32"),Tensor([8, 256, 48, 48],"float16"),], axis=1, )
paddle.concat(list[Tensor([8, 24, 160, 160],"float32"),Tensor([8, 24, 160, 160],"float32"),Tensor([8, 24, 160, 160],"float32"),Tensor([8, 24, 160, 160],"float16"),], axis=1, )
paddle.concat(list[Tensor([8, 24, 240, 240],"float32"),Tensor([8, 24, 240, 240],"float32"),Tensor([8, 24, 240, 240],"float32"),Tensor([8, 24, 240, 240],"float16"),], axis=1, )
paddle.concat(list[Tensor([8, 256, 160, 160],"float16"),Tensor([8, 256, 160, 160],"float32"),Tensor([8, 256, 160, 160],"float32"),Tensor([8, 256, 160, 160],"float32"),], axis=1, )
paddle.concat(list[Tensor([8, 256, 20, 20],"float32"),Tensor([8, 512, 20, 20],"float16"),], axis=1, )
paddle.concat(list[Tensor([8, 256, 22, 22],"float32"),Tensor([8, 512, 22, 22],"float16"),], axis=1, )
paddle.concat(list[Tensor([8, 256, 24, 24],"float32"),Tensor([8, 512, 24, 24],"float16"),], axis=1, )
paddle.concat(list[Tensor([8, 256, 26, 26],"float32"),Tensor([8, 512, 26, 26],"float16"),], axis=1, )
paddle.concat(list[Tensor([8, 256, 28, 28],"float32"),Tensor([8, 512, 28, 28],"float16"),], axis=1, )
paddle.concat(list[Tensor([8, 256, 30, 30],"float32"),Tensor([8, 512, 30, 30],"float16"),], axis=1, )
paddle.concat(list[Tensor([8, 256, 32, 32],"float32"),Tensor([8, 512, 32, 32],"float16"),], axis=1, )
paddle.concat(list[Tensor([8, 256, 34, 34],"float32"),Tensor([8, 512, 34, 34],"float16"),], axis=1, )
paddle.concat(list[Tensor([8, 256, 36, 36],"float32"),Tensor([8, 512, 36, 36],"float16"),], axis=1, )
paddle.concat(list[Tensor([8, 256, 38, 38],"float32"),Tensor([8, 512, 38, 38],"float16"),], axis=1, )
paddle.concat(list[Tensor([8, 256, 40, 40],"float16"),Tensor([8, 256, 40, 40],"float32"),], 1, )
paddle.concat(list[Tensor([8, 256, 40, 40],"float32"),Tensor([8, 256, 40, 40],"float16"),], axis=1, )
paddle.concat(list[Tensor([8, 64, 160, 160],"float16"),Tensor([8, 64, 160, 160],"float32"),Tensor([8, 64, 160, 160],"float32"),Tensor([8, 64, 160, 160],"float32"),], axis=1, )
paddle.concat(list[Tensor([8, 64, 160, 160],"float32"),Tensor([8, 64, 160, 160],"float32"),Tensor([8, 64, 160, 160],"float32"),Tensor([8, 64, 160, 160],"float16"),], axis=1, )
paddle.concat(list[Tensor([8, 64, 80, 80],"float16"),Tensor([8, 64, 80, 80],"float32"),], 1, )
paddle.concat(list[Tensor([8, 96, 40, 40],"float32"),Tensor([8, 128, 40, 40],"float16"),], axis=1, )
paddle.concat(list[Tensor([8, 96, 44, 44],"float32"),Tensor([8, 128, 44, 44],"float16"),], axis=1, )
paddle.concat(list[Tensor([8, 96, 48, 48],"float32"),Tensor([8, 128, 48, 48],"float16"),], axis=1, )
paddle.concat(list[Tensor([8, 96, 52, 52],"float32"),Tensor([8, 128, 52, 52],"float16"),], axis=1, )
paddle.concat(list[Tensor([8, 96, 56, 56],"float32"),Tensor([8, 128, 56, 56],"float16"),], axis=1, )
paddle.concat(list[Tensor([8, 96, 60, 60],"float32"),Tensor([8, 128, 60, 60],"float16"),], axis=1, )
paddle.concat(list[Tensor([8, 96, 64, 64],"float32"),Tensor([8, 128, 64, 64],"float16"),], axis=1, )
paddle.concat(list[Tensor([8, 96, 68, 68],"float32"),Tensor([8, 128, 68, 68],"float16"),], axis=1, )
paddle.concat(list[Tensor([8, 96, 72, 72],"float32"),Tensor([8, 128, 72, 72],"float16"),], axis=1, )
paddle.concat(list[Tensor([8, 96, 76, 76],"float32"),Tensor([8, 128, 76, 76],"float16"),], axis=1, )
paddle.concat(list[Tensor([8, 96, 80, 80],"float32"),Tensor([8, 128, 80, 80],"float16"),], axis=1, )
paddle.concat(list[Tensor([8, 96, 84, 84],"float32"),Tensor([8, 128, 84, 84],"float16"),], axis=1, )
paddle.concat(list[Tensor([8, 96, 88, 88],"float32"),Tensor([8, 128, 88, 88],"float16"),], axis=1, )
paddle.concat(list[Tensor([8, 96, 92, 92],"float32"),Tensor([8, 128, 92, 92],"float16"),], axis=1, )
paddle.concat(list[Tensor([8, 96, 96, 96],"float32"),Tensor([8, 128, 96, 96],"float16"),], axis=1, )
paddle.concat(list[Tensor([90, 128, 22, 22],"float32"),Tensor([90, 128, 22, 22],"float16"),], 1, )
paddle.concat(list[Tensor([90, 128, 24, 24],"float32"),Tensor([90, 128, 24, 24],"float16"),], 1, )
paddle.concat(list[Tensor([90, 128, 26, 26],"float32"),Tensor([90, 128, 26, 26],"float16"),], 1, )
paddle.concat(list[Tensor([90, 128, 28, 28],"float32"),Tensor([90, 128, 28, 28],"float16"),], 1, )
paddle.concat(list[Tensor([90, 128, 30, 30],"float32"),Tensor([90, 128, 30, 30],"float16"),], 1, )
paddle.concat(list[Tensor([90, 128, 44, 44],"float32"),Tensor([90, 128, 44, 44],"float16"),], 1, )
paddle.concat(list[Tensor([90, 128, 48, 48],"float32"),Tensor([90, 128, 48, 48],"float16"),], 1, )
paddle.concat(list[Tensor([90, 128, 52, 52],"float32"),Tensor([90, 128, 52, 52],"float16"),], 1, )
paddle.concat(list[Tensor([90, 128, 56, 56],"float32"),Tensor([90, 128, 56, 56],"float16"),], 1, )
paddle.concat(list[Tensor([90, 128, 60, 60],"float32"),Tensor([90, 128, 60, 60],"float16"),], 1, )
paddle.concat(tuple(Tensor([128, 1, 768],"float32"),Tensor([128, 196, 768],"float16"),), axis=1, )
paddle.concat(tuple(Tensor([14, 1, 768],"float32"),Tensor([14, 1568, 768],"float16"),), axis=1, )
paddle.concat(tuple(Tensor([24, 32, 128, 128],"float32"),Tensor([24, 34, 128, 128],"float16"),), axis=1, )
paddle.concat(x=tuple(Tensor([2, 3, 1, 64],"float16"),Tensor([2, 3, 256, 64],"float32"),), axis=-2, )
paddle.count_nonzero(Tensor([1, 14, 5, 14],"float64"), axis=list[1,3,], keepdim=True, name=None, )
paddle.count_nonzero(Tensor([2, 3, 4, 5],"float32"), axis=2, keepdim=True, )
paddle.cumprod(x=Tensor([3, 4],"int32"), dim=0, )
paddle.cumsum(Tensor([906698],"float32"), axis=0, )
paddle.cumulative_trapezoid(y=Tensor([2, 3],"float32"), x=None, dx=None, axis=-1, )
paddle.cumulative_trapezoid(y=Tensor([2, 3],"float32"), x=Tensor([2, 3],"float32"), dx=None, axis=-1, )
paddle.cumulative_trapezoid(y=Tensor([2, 3],"float64"), x=None, dx=None, axis=-1, )
paddle.cumulative_trapezoid(y=Tensor([2, 3],"float64"), x=Tensor([2, 3],"float64"), dx=None, axis=-1, )
paddle.cumulative_trapezoid(y=Tensor([3, 3, 4],"float32"), x=Tensor([3],"float32"), dx=None, axis=1, )
paddle.diag(Tensor([100],"float64"), padding_value=8, )
paddle.diag(Tensor([100],"int64"), padding_value=-8, )
paddle.diag(Tensor([100],"int64"), padding_value=8.0, )
paddle.diag(x=Tensor([2],"float64"), offset=1, padding_value=1.1, )
paddle.einsum("i,j->ij", Tensor([93],"float32"), Tensor([16],"float16"), )
paddle.expand(Tensor([3, 2],"float16"), shape=list[512,3,2,], )
paddle.geometric.send_ue_recv(Tensor([10, 20],"float64"), Tensor([150, 1],"float64"), Tensor([150],"int64"), Tensor([150],"int64"), "add", "max", None, None, )
paddle.geometric.send_ue_recv(Tensor([10, 20],"float64"), Tensor([150, 1],"float64"), Tensor([150],"int64"), Tensor([150],"int64"), "add", "mean", None, None, )
paddle.geometric.send_ue_recv(Tensor([10, 20],"float64"), Tensor([150, 1],"float64"), Tensor([150],"int64"), Tensor([150],"int64"), "add", "min", None, None, )
paddle.geometric.send_ue_recv(Tensor([10, 20],"float64"), Tensor([150, 1],"float64"), Tensor([150],"int64"), Tensor([150],"int64"), "add", "sum", None, None, )
paddle.geometric.send_ue_recv(Tensor([10, 20],"float64"), Tensor([150, 1],"float64"), Tensor([150],"int64"), Tensor([150],"int64"), "mul", "mean", None, None, )
paddle.geometric.send_ue_recv(Tensor([10, 20],"float64"), Tensor([150, 1],"float64"), Tensor([150],"int64"), Tensor([150],"int64"), "mul", "min", None, None, )
paddle.geometric.send_ue_recv(Tensor([10, 8, 5],"float64"), Tensor([15, 8, 1],"float64"), Tensor([15],"int64"), Tensor([15],"int64"), "add", "mean", None, None, )
paddle.geometric.send_ue_recv(Tensor([10, 8, 5],"float64"), Tensor([15, 8, 1],"float64"), Tensor([15],"int64"), Tensor([15],"int64"), "add", "sum", None, None, )
paddle.geometric.send_ue_recv(Tensor([10, 8, 5],"float64"), Tensor([15, 8, 1],"float64"), Tensor([15],"int64"), Tensor([15],"int64"), "mul", "min", None, None, )
paddle.geometric.send_ue_recv(Tensor([3, 3],"float32"), Tensor([4, 1],"float32"), Tensor([4],"int32"), Tensor([4],"int32"), "sub", "mean", )
paddle.heaviside(Tensor([1],"float32"), Tensor([300, 2048],"float32"), )
paddle.heaviside(Tensor([2048],"float32"), Tensor([300, 2048],"float32"), )
paddle.heaviside(Tensor([],"float32"), Tensor([2, 3, 4],"float32"), )
paddle.incubate.nn.functional.fused_layer_norm(Tensor([16, 256],"float32"), Tensor([256],"float32"), Tensor([256],"float32"), 1e-05, begin_norm_axis=1, bias=Tensor([256],"float32"), residual=Tensor([16, 256],"float32"), residual_alpha=0.69204696, )
paddle.kron(Tensor([12, 8],"float16"), Tensor([16, 8],"float16"), )
paddle.kron(Tensor([16, 16],"float16"), Tensor([32, 20],"float16"), )
paddle.kron(Tensor([16, 16],"float16"), Tensor([32, 32],"float16"), )
paddle.kron(Tensor([16, 8],"float16"), Tensor([16, 8],"float16"), )
paddle.kron(Tensor([20, 16],"float16"), Tensor([32, 32],"float16"), )
paddle.kron(Tensor([24, 24],"float16"), Tensor([32, 32],"float16"), )
paddle.kron(Tensor([24, 86],"float16"), Tensor([32, 128],"float16"), )
paddle.kron(Tensor([32, 16],"float16"), Tensor([32, 32],"float16"), )
paddle.kron(Tensor([4, 8],"float16"), Tensor([8, 8],"float16"), )
paddle.kron(Tensor([8, 16],"float16"), Tensor([8, 16],"float16"), )
paddle.kron(Tensor([8, 4],"float16"), Tensor([8, 8],"float16"), )
paddle.kron(Tensor([8, 8],"float16"), Tensor([8, 8],"float16"), )
paddle.kron(Tensor([86, 24],"float16"), Tensor([128, 32],"float16"), )
paddle.linalg.cholesky_solve(Tensor([1, 30, 2],"float64"), Tensor([2, 30, 30],"float64"), upper=True, )
paddle.linalg.cholesky_solve(Tensor([20, 2],"float64"), Tensor([20, 20],"float64"), upper=True, )
paddle.linalg.cholesky_solve(x=Tensor([4, 1],"float32"), y=Tensor([4, 4],"float32"), )
paddle.linalg.cholesky_solve(x=Tensor([4, 1],"float64"), y=Tensor([4, 4],"float64"), )
paddle.linalg.cholesky_solve(x=Tensor([4, 3],"float64"), y=Tensor([4, 4],"float64"), )
paddle.linalg.cholesky_solve(x=Tensor([5, 2, 4, 3],"float64"), y=Tensor([5, 2, 4, 4],"float64"), )
paddle.linalg.cholesky_solve(x=Tensor([5, 2, 4, 3],"float64"), y=Tensor([5, 2, 4, 4],"float64"), upper=True, )
paddle.linalg.cholesky_solve(x=Tensor([5, 4, 3],"float64"), y=Tensor([5, 4, 4],"float64"), )
paddle.linalg.cond(Tensor([3, 5, 4, 1],"float32"), -2, )
paddle.linalg.eigh(Tensor([2, 2],"complex128"), "L", )
paddle.linalg.eigh(Tensor([2, 2],"complex128"), "U", )
paddle.linalg.eigh(Tensor([2, 2],"complex64"), "L", )
paddle.linalg.eigh(Tensor([2, 5, 5],"complex64"), )
paddle.linalg.eigh(Tensor([32, 32],"float32"), "L", )
paddle.linalg.eigh(Tensor([4, 4],"complex128"), "L", )
paddle.linalg.eigh(Tensor([4, 4],"complex64"), "L", )
paddle.linalg.eigh(Tensor([4, 4],"complex64"), "U", )
paddle.linalg.eigh(Tensor([4, 4],"float32"), "L", )
paddle.linalg.eigh(Tensor([4, 4],"float32"), "U", )
paddle.linalg.eigh(Tensor([4, 4],"float64"), "L", )
paddle.linalg.eigh(Tensor([4, 4],"float64"), "U", )
paddle.linalg.eigh(Tensor([5, 5],"complex64"), )
paddle.linalg.eigh(Tensor([5, 5],"float32"), )
paddle.linalg.eigvals(Tensor([128, 128],"complex128"), name="large_x", )
paddle.linalg.eigvals(Tensor([128, 128],"complex64"), name="large_x", )
paddle.linalg.eigvals(Tensor([128, 128],"float32"), name="large_x", )
paddle.linalg.eigvals(Tensor([128, 128],"float64"), name="large_x", )
paddle.linalg.eigvals(Tensor([6, 6],"complex128"), name="small_x", )
paddle.linalg.eigvals(Tensor([6, 6],"complex64"), name="small_x", )
paddle.linalg.eigvals(Tensor([6, 6],"float64"), name="small_x", )
paddle.linalg.eigvals(x=Tensor([2, 4, 4],"float64"), )
paddle.linalg.eigvals(x=Tensor([4, 4],"float64"), )
paddle.linalg.eigvalsh(Tensor([0, 5, 5],"float32"), )
paddle.linalg.eigvalsh(Tensor([2, 5, 5],"complex64"), )
paddle.linalg.eigvalsh(Tensor([2, 5, 5],"float32"), )
paddle.linalg.eigvalsh(x=Tensor([4, 5, 5],"float64"), )
paddle.linalg.eigvalsh(x=Tensor([4, 5, 5],"float64"), UPLO="U", )
paddle.linalg.eigvalsh(x=Tensor([5, 10, 10],"complex128"), )
paddle.linalg.eigvalsh(x=Tensor([5, 10, 10],"complex128"), UPLO="U", )
paddle.linalg.lstsq(Tensor([2, 3, 10],"float32"), Tensor([2, 3, 4],"float32"), rcond=1e-15, driver="gelss", )
paddle.linalg.lstsq(Tensor([200, 100],"float64"), Tensor([200, 50],"float64"), rcond=1e-15, driver="gelsd", )
paddle.linalg.lstsq(Tensor([3, 2],"float64"), Tensor([3, 3],"float64"), rcond=1e-07, driver="gelsd", )
paddle.linalg.lstsq(Tensor([5, 4],"float64"), Tensor([5, 3],"float64"), rcond=1e-15, driver="gelsd", )
paddle.linalg.lstsq(Tensor([5, 5],"float64"), Tensor([5, 1],"float64"), rcond=None, driver="gelss", )
paddle.linalg.lstsq(Tensor([50, 600],"float64"), Tensor([50, 300],"float64"), rcond=1e-15, driver="gelss", )
paddle.linalg.lstsq(Tensor([8, 2],"float32"), Tensor([8, 10],"float32"), rcond=1e-15, driver="gelsy", )
paddle.linalg.matrix_rank(Tensor([1, 10],"float32"), None, False, )
paddle.linalg.matrix_rank(Tensor([1, 10],"float32"), None, False, Tensor([],"float32"), Tensor([],"float32"), )
paddle.linalg.matrix_rank(Tensor([10, 10],"float32"), )
paddle.linalg.matrix_rank(Tensor([10, 10],"float32"), hermitian=True, )
paddle.linalg.matrix_rank(Tensor([10, 10],"float32"), hermitian=True, atol=0.015, rtol=None, )
paddle.linalg.matrix_rank(Tensor([10, 10],"float32"), hermitian=True, atol=0.2, rtol=0.05, )
paddle.linalg.matrix_rank(Tensor([10, 10],"float32"), hermitian=True, atol=None, rtol=1.1, )
paddle.linalg.matrix_rank(Tensor([10, 10],"float32"), tol=0.1, )
paddle.linalg.matrix_rank(Tensor([10, 10],"float32"), tol=Tensor([2],"float32"), )
paddle.linalg.matrix_rank(Tensor([200, 200],"float64"), None, True, )
paddle.linalg.matrix_rank(Tensor([200, 200],"float64"), None, True, Tensor([200, 200],"float64"), Tensor([200, 200],"float64"), )
paddle.linalg.matrix_rank(Tensor([200, 200],"float64"), Tensor([200, 200],"float64"), True, )
paddle.linalg.matrix_rank(Tensor([3, 3],"float32"), 0.1, True, )
paddle.linalg.matrix_rank(Tensor([3, 3],"float32"), None, True, Tensor([],"float32"), Tensor([],"float32"), )
paddle.linalg.matrix_rank(Tensor([3, 3],"float64"), None, False, )
paddle.linalg.matrix_rank(Tensor([3, 4, 5, 5],"float64"), hermitian=False, atol=Tensor([3, 4],"float64"), rtol=None, )
paddle.linalg.matrix_rank(Tensor([3, 4, 5, 5],"float64"), hermitian=True, atol=0.5, rtol=None, )
paddle.linalg.matrix_rank(Tensor([3, 4, 5, 6],"float32"), None, False, )
paddle.linalg.matrix_rank(Tensor([3, 4, 5, 6],"float32"), None, False, Tensor([3, 4],"float32"), Tensor([3, 4],"float32"), )
paddle.linalg.matrix_rank(Tensor([3, 4, 5, 6],"float32"), Tensor([3, 4],"float32"), False, )
paddle.linalg.matrix_rank(Tensor([3, 4, 5],"float32"), )
paddle.linalg.matrix_rank(Tensor([3, 4, 5],"float32"), tol=0.1, )
paddle.linalg.matrix_rank(Tensor([3, 4, 7, 8],"float64"), 0.1, hermitian=False, )
paddle.linalg.matrix_rank(Tensor([3, 4, 7, 8],"float64"), Tensor([3, 4],"float32"), hermitian=False, )
paddle.linalg.matrix_rank(Tensor([3, 4, 7, 8],"float64"), hermitian=False, atol=0.01, rtol=Tensor([3, 4],"float32"), )
paddle.linalg.matrix_rank(Tensor([3, 4, 7, 8],"float64"), hermitian=False, atol=Tensor([3, 1],"float32"), rtol=Tensor([3, 1],"float32"), )
paddle.linalg.matrix_rank(Tensor([3, 4, 7, 8],"float64"), hermitian=False, atol=Tensor([3, 4],"float32"), rtol=0.01, )
paddle.linalg.matrix_rank(Tensor([3, 4, 7, 8],"float64"), hermitian=False, atol=Tensor([3, 4],"float32"), rtol=Tensor([3, 4],"float32"), )
paddle.linalg.matrix_rank(Tensor([5, 1],"float64"), None, False, Tensor([1, 4],"float64"), Tensor([1, 4],"float64"), )
paddle.linalg.matrix_rank(Tensor([5, 1],"float64"), Tensor([1, 4],"float64"), False, )
paddle.linalg.matrix_rank(x=Tensor([2, 2, 4, 4],"float64"), tol=Tensor([1, 1],"float64"), hermitian=True, )
paddle.linalg.matrix_rank(x=Tensor([2, 3, 4, 4],"float64"), tol=Tensor([1],"float64"), hermitian=True, )
paddle.linalg.matrix_rank(x=Tensor([2, 3, 4, 4],"float64"), tol=Tensor([2, 3],"float64"), hermitian=True, )
paddle.linalg.matrix_rank(x=Tensor([2, 4, 4, 4],"float64"), tol=None, hermitian=True, )
paddle.linalg.matrix_rank(x=Tensor([2, 4, 4, 4],"float64"), tol=Tensor([2, 1],"float64"), hermitian=True, )
paddle.linalg.matrix_rank(x=Tensor([2, 4, 4, 5],"float64"), tol=Tensor([2, 1],"float64"), hermitian=False, )
paddle.linalg.matrix_rank(x=Tensor([4, 4],"float64"), tol=4.4, hermitian=True, )
paddle.linalg.matrix_rank(x=Tensor([4, 4],"float64"), tol=Tensor([1],"float64"), hermitian=True, )
paddle.linalg.matrix_rank(x=Tensor([4, 5],"float32"), tol=None, hermitian=False, )
paddle.linalg.matrix_rank(x=Tensor([4, 5],"float64"), tol=4.4, hermitian=False, )
paddle.linalg.matrix_rank(x=Tensor([4, 5],"float64"), tol=None, hermitian=False, )
paddle.linalg.norm(Tensor([16, 16],"float32"), 2.0, )
paddle.linalg.norm(x=Tensor([3, 4],"float32"), p=2, axis=None, keepdim=False, )
paddle.linalg.norm(x=Tensor([3, 4],"float32"), p=2, axis=None, keepdim=True, )
paddle.linalg.pinv(Tensor([3, 5, 5],"complex128"), rcond=1e-15, hermitian=True, )
paddle.linalg.pinv(Tensor([3, 5, 5],"complex64"), rcond=1e-15, hermitian=True, )
paddle.linalg.pinv(Tensor([3, 5, 5],"float32"), rcond=1e-15, hermitian=True, )
paddle.linalg.pinv(Tensor([3, 5, 5],"float64"), rcond=1e-15, hermitian=True, )
paddle.linalg.pinv(Tensor([5, 5],"complex128"), rcond=1e-15, hermitian=True, )
paddle.linalg.pinv(Tensor([5, 5],"float64"), rcond=1e-15, hermitian=True, )
paddle.linalg.pinv(x=Tensor([2, 2],"complex128"), hermitian=True, )
paddle.linalg.pinv(x=Tensor([2, 2],"complex64"), hermitian=True, )
paddle.linalg.pinv(x=Tensor([2, 2],"float32"), hermitian=True, )
paddle.linalg.pinv(x=Tensor([2, 2],"float64"), hermitian=True, )
paddle.linalg.pinv(x=Tensor([4, 2, 2],"float64"), hermitian=True, )
paddle.linalg.svd_lowrank(Tensor([1, 100, 40],"float64"), q=12, )
paddle.linalg.svd_lowrank(Tensor([1, 100, 40],"float64"), q=6, )
paddle.linalg.svd_lowrank(Tensor([1, 100, 40],"float64"), q=8, )
paddle.linalg.svd_lowrank(Tensor([1, 17, 4],"float64"), q=2, )
paddle.linalg.svd_lowrank(Tensor([1, 17, 4],"float64"), q=4, )
paddle.linalg.svd_lowrank(Tensor([1, 4, 17],"float64"), q=2, )
paddle.linalg.svd_lowrank(Tensor([1, 40, 100],"float64"), q=12, )
paddle.linalg.svd_lowrank(Tensor([1, 40, 100],"float64"), q=6, )
paddle.linalg.svd_lowrank(Tensor([1, 40, 100],"float64"), q=8, )
paddle.linalg.svd_lowrank(Tensor([100, 40],"float64"), q=12, )
paddle.linalg.svd_lowrank(Tensor([100, 40],"float64"), q=6, )
paddle.linalg.svd_lowrank(Tensor([100, 40],"float64"), q=8, )
paddle.linalg.svd_lowrank(Tensor([17, 4],"float64"), q=2, )
paddle.linalg.svd_lowrank(Tensor([17, 4],"float64"), q=4, )
paddle.linalg.svd_lowrank(Tensor([2, 3, 100, 40],"float64"), q=12, )
paddle.linalg.svd_lowrank(Tensor([2, 3, 100, 40],"float64"), q=6, )
paddle.linalg.svd_lowrank(Tensor([2, 3, 100, 40],"float64"), q=8, )
paddle.linalg.svd_lowrank(Tensor([2, 3, 17, 4],"float64"), q=2, )
paddle.linalg.svd_lowrank(Tensor([2, 3, 17, 4],"float64"), q=4, )
paddle.linalg.svd_lowrank(Tensor([2, 3, 4, 17],"float64"), q=2, )
paddle.linalg.svd_lowrank(Tensor([2, 3, 4, 17],"float64"), q=4, )
paddle.linalg.svd_lowrank(Tensor([2, 3, 40, 100],"float64"), q=12, )
paddle.linalg.svd_lowrank(Tensor([2, 3, 40, 100],"float64"), q=6, )
paddle.linalg.svd_lowrank(Tensor([2, 3, 40, 100],"float64"), q=8, )
paddle.linalg.svd_lowrank(Tensor([3, 100, 40],"float64"), q=12, )
paddle.linalg.svd_lowrank(Tensor([3, 100, 40],"float64"), q=6, )
paddle.linalg.svd_lowrank(Tensor([3, 100, 40],"float64"), q=8, )
paddle.linalg.svd_lowrank(Tensor([3, 17, 4],"float64"), q=2, )
paddle.linalg.svd_lowrank(Tensor([3, 17, 4],"float64"), q=4, )
paddle.linalg.svd_lowrank(Tensor([3, 4, 17],"float64"), q=2, )
paddle.linalg.svd_lowrank(Tensor([3, 4, 17],"float64"), q=4, )
paddle.linalg.svd_lowrank(Tensor([3, 40, 100],"float64"), q=12, )
paddle.linalg.svd_lowrank(Tensor([3, 40, 100],"float64"), q=6, )
paddle.linalg.svd_lowrank(Tensor([3, 40, 100],"float64"), q=8, )
paddle.linalg.svd_lowrank(Tensor([4, 17],"float64"), q=2, )
paddle.linalg.svd_lowrank(Tensor([4, 17],"float64"), q=4, )
paddle.linalg.svd_lowrank(Tensor([40, 100],"float64"), q=12, )
paddle.linalg.svd_lowrank(Tensor([40, 100],"float64"), q=6, )
paddle.linalg.svd_lowrank(Tensor([40, 100],"float64"), q=8, )
paddle.linalg.svd_lowrank(Tensor([5, 5],"float64"), None, )
paddle.logit(Tensor([],"float32"), )
paddle.logit(x=Tensor([4, 2],"float64"), )
paddle.logit(x=Tensor([4, 3, 2, 5],"float64"), )
paddle.logit(x=Tensor([4, 3, 2],"float64"), )
paddle.logit(x=Tensor([4],"float32"), )
paddle.logit(x=Tensor([4],"float64"), )
paddle.max(Tensor([1, 32, 8],"float32"), axis=list[0,], )
paddle.maximum(Tensor([1, 1, 2],"float32"), Tensor([272118, 2],"float32"), )
paddle.maximum(Tensor([1, 1, 2],"float32"), Tensor([369303, 2],"float32"), )
paddle.maximum(Tensor([1, 113, 1, 2],"float32"), Tensor([1, 1, 56784, 2],"float32"), )
paddle.maximum(Tensor([1, 116, 1, 2],"float32"), Tensor([1, 1, 40656, 2],"float32"), )
paddle.maximum(Tensor([1, 117, 1, 2],"float32"), Tensor([1, 1, 30324, 2],"float32"), )
paddle.maximum(Tensor([1, 15, 1, 2],"float32"), Tensor([1, 1, 75600, 2],"float32"), )
paddle.maximum(Tensor([1, 150, 1, 2],"float32"), Tensor([1, 1, 21504, 2],"float32"), )
paddle.maximum(Tensor([1, 150, 1, 2],"float32"), Tensor([1, 1, 27216, 2],"float32"), )
paddle.maximum(Tensor([1, 16, 1, 2],"float32"), Tensor([1, 1, 52500, 2],"float32"), )
paddle.maximum(Tensor([1, 17, 1, 2],"float32"), Tensor([1, 1, 44436, 2],"float32"), )
paddle.maximum(Tensor([1, 17, 1, 2],"float32"), Tensor([1, 1, 48384, 2],"float32"), )
paddle.maximum(Tensor([1, 18, 1, 2],"float32"), Tensor([1, 1, 48384, 2],"float32"), )
paddle.maximum(Tensor([1, 21, 1, 2],"float32"), Tensor([1, 1, 61236, 2],"float32"), )
paddle.maximum(Tensor([1, 215, 1, 2],"float32"), Tensor([1, 1, 33600, 2],"float32"), )
paddle.maximum(Tensor([1, 22, 1, 2],"float32"), Tensor([1, 1, 65856, 2],"float32"), )
paddle.maximum(Tensor([1, 227, 1, 2],"float32"), Tensor([1, 1, 52500, 2],"float32"), )
paddle.maximum(Tensor([1, 24, 1, 2],"float32"), Tensor([1, 1, 33600, 2],"float32"), )
paddle.maximum(Tensor([1, 25, 1, 2],"float32"), Tensor([1, 1, 40656, 2],"float32"), )
paddle.maximum(Tensor([1, 26, 1, 2],"float32"), Tensor([1, 1, 27216, 2],"float32"), )
paddle.maximum(Tensor([1, 29, 1, 2],"float32"), Tensor([1, 1, 37044, 2],"float32"), )
paddle.maximum(Tensor([1, 29, 1, 2],"float32"), Tensor([1, 1, 48384, 2],"float32"), )
paddle.maximum(Tensor([1, 29, 1, 2],"float32"), Tensor([1, 1, 52500, 2],"float32"), )
paddle.maximum(Tensor([1, 29, 1, 2],"float32"), Tensor([1, 1, 70644, 2],"float32"), )
paddle.maximum(Tensor([1, 296, 1, 2],"float32"), Tensor([1, 1, 24276, 2],"float32"), )
paddle.maximum(Tensor([1, 30, 1, 2],"float32"), Tensor([1, 1, 44436, 2],"float32"), )
paddle.maximum(Tensor([1, 31, 1, 2],"float32"), Tensor([1, 1, 24276, 2],"float32"), )
paddle.maximum(Tensor([1, 35, 1, 2],"float32"), Tensor([1, 1, 27216, 2],"float32"), )
paddle.maximum(Tensor([1, 37, 1, 2],"float32"), Tensor([1, 1, 56784, 2],"float32"), )
paddle.maximum(Tensor([1, 37, 1, 2],"float32"), Tensor([1, 1, 70644, 2],"float32"), )
paddle.maximum(Tensor([1, 44, 1, 2],"float32"), Tensor([1, 1, 40656, 2],"float32"), )
paddle.maximum(Tensor([1, 44, 1, 2],"float32"), Tensor([1, 1, 44436, 2],"float32"), )
paddle.maximum(Tensor([1, 44, 1, 2],"float32"), Tensor([1, 1, 52500, 2],"float32"), )
paddle.maximum(Tensor([1, 46, 1, 2],"float32"), Tensor([1, 1, 48384, 2],"float32"), )
paddle.maximum(Tensor([1, 49, 1, 2],"float32"), Tensor([1, 1, 65856, 2],"float32"), )
paddle.maximum(Tensor([1, 51, 1, 2],"float32"), Tensor([1, 1, 75600, 2],"float32"), )
paddle.maximum(Tensor([1, 52, 1, 2],"float32"), Tensor([1, 1, 48384, 2],"float32"), )
paddle.maximum(Tensor([1, 52, 1, 2],"float32"), Tensor([1, 1, 65856, 2],"float32"), )
paddle.maximum(Tensor([1, 55, 1, 2],"float32"), Tensor([1, 1, 44436, 2],"float32"), )
paddle.maximum(Tensor([1, 56, 1, 2],"float32"), Tensor([1, 1, 24276, 2],"float32"), )
paddle.maximum(Tensor([1, 57, 1, 2],"float32"), Tensor([1, 1, 40656, 2],"float32"), )
paddle.maximum(Tensor([1, 59, 1, 2],"float32"), Tensor([1, 1, 27216, 2],"float32"), )
paddle.maximum(Tensor([1, 62, 1, 2],"float32"), Tensor([1, 1, 75600, 2],"float32"), )
paddle.maximum(Tensor([1, 67, 1, 2],"float32"), Tensor([1, 1, 75600, 2],"float32"), )
paddle.maximum(Tensor([1, 68, 1, 2],"float32"), Tensor([1, 1, 37044, 2],"float32"), )
paddle.maximum(Tensor([1, 72, 1, 2],"float32"), Tensor([1, 1, 48384, 2],"float32"), )
paddle.maximum(Tensor([1, 73, 1, 2],"float32"), Tensor([1, 1, 75600, 2],"float32"), )
paddle.maximum(Tensor([1, 76, 1, 2],"float32"), Tensor([1, 1, 44436, 2],"float32"), )
paddle.maximum(Tensor([1, 77, 1, 2],"float32"), Tensor([1, 1, 65856, 2],"float32"), )
paddle.maximum(Tensor([1, 80, 1, 2],"float32"), Tensor([1, 1, 48384, 2],"float32"), )
paddle.maximum(Tensor([1, 80, 1, 2],"float32"), Tensor([1, 1, 56784, 2],"float32"), )
paddle.maximum(Tensor([1, 81, 1, 2],"float32"), Tensor([1, 1, 48384, 2],"float32"), )
paddle.maximum(Tensor([1, 83, 1, 2],"float32"), Tensor([1, 1, 52500, 2],"float32"), )
paddle.maximum(Tensor([1, 83, 1, 2],"float32"), Tensor([1, 1, 65856, 2],"float32"), )
paddle.maximum(Tensor([1, 86, 1, 2],"float32"), Tensor([1, 1, 33600, 2],"float32"), )
paddle.maximum(Tensor([1, 93, 1, 2],"float32"), Tensor([1, 1, 70644, 2],"float32"), )
paddle.maximum(Tensor([10, 1, 2],"float32"), Tensor([242991, 2],"float32"), )
paddle.maximum(Tensor([10, 1, 2],"float32"), Tensor([253728, 2],"float32"), )
paddle.maximum(Tensor([10, 1, 2],"float32"), Tensor([285444, 2],"float32"), )
paddle.maximum(Tensor([10, 1, 2],"float32"), Tensor([291555, 2],"float32"), )
paddle.maximum(Tensor([10, 1, 2],"float32"), Tensor([300762, 2],"float32"), )
paddle.maximum(Tensor([10, 1, 2],"float32"), Tensor([320739, 2],"float32"), )
paddle.maximum(Tensor([10, 1, 2],"float32"), Tensor([321759, 2],"float32"), )
paddle.maximum(Tensor([10, 1, 2],"float32"), Tensor([330429, 2],"float32"), )
paddle.maximum(Tensor([10, 1, 2],"float32"), Tensor([347820, 2],"float32"), )
paddle.maximum(Tensor([10, 1, 2],"float32"), Tensor([356541, 2],"float32"), )
paddle.maximum(Tensor([1024, 1, 2],"float32"), Tensor([1, 2577, 2],"float32"), )
paddle.maximum(Tensor([1088, 1, 2],"float32"), Tensor([1, 1360, 2],"float32"), )
paddle.maximum(Tensor([11, 1, 2],"float32"), Tensor([220992, 2],"float32"), )
paddle.maximum(Tensor([11, 1, 2],"float32"), Tensor([249405, 2],"float32"), )
paddle.maximum(Tensor([11, 1, 2],"float32"), Tensor([257796, 2],"float32"), )
paddle.maximum(Tensor([11, 1, 2],"float32"), Tensor([268560, 2],"float32"), )
paddle.maximum(Tensor([11, 1, 2],"float32"), Tensor([303858, 2],"float32"), )
paddle.maximum(Tensor([11, 1, 2],"float32"), Tensor([304368, 2],"float32"), )
paddle.maximum(Tensor([11, 1, 2],"float32"), Tensor([331452, 2],"float32"), )
paddle.maximum(Tensor([11, 1, 2],"float32"), Tensor([340176, 2],"float32"), )
paddle.maximum(Tensor([1113, 1, 2],"float32"), Tensor([14, 2],"float32"), )
paddle.maximum(Tensor([112, 1, 2],"float32"), Tensor([1, 4116, 2],"float32"), )
paddle.maximum(Tensor([1155, 1, 2],"float32"), Tensor([3, 2],"float32"), )
paddle.maximum(Tensor([12, 1, 2],"float32"), Tensor([191301, 2],"float32"), )
paddle.maximum(Tensor([12, 1, 2],"float32"), Tensor([276210, 2],"float32"), )
paddle.maximum(Tensor([12, 1, 2],"float32"), Tensor([300762, 2],"float32"), )
paddle.maximum(Tensor([12, 1, 2],"float32"), Tensor([339150, 2],"float32"), )
paddle.maximum(Tensor([12, 1, 2],"float32"), Tensor([340176, 2],"float32"), )
paddle.maximum(Tensor([12, 1, 2],"float32"), Tensor([349155, 2],"float32"), )
paddle.maximum(Tensor([12, 1, 2],"float32"), Tensor([349866, 2],"float32"), )
paddle.maximum(Tensor([12, 1, 2],"float32"), Tensor([379050, 2],"float32"), )
paddle.maximum(Tensor([12, 1, 2],"float32"), Tensor([408177, 2],"float32"), )
paddle.maximum(Tensor([12, 1, 2],"float32"), Tensor([50250, 2],"float32"), )
paddle.maximum(Tensor([12, 1, 2],"float32"), Tensor([60480, 2],"float32"), )
paddle.maximum(Tensor([12, 1, 2],"float32"), Tensor([75840, 2],"float32"), )
paddle.maximum(Tensor([1285, 1, 2],"float32"), Tensor([13, 2],"float32"), )
paddle.maximum(Tensor([13, 1, 2],"float32"), Tensor([214848, 2],"float32"), )
paddle.maximum(Tensor([13, 1, 2],"float32"), Tensor([223827, 2],"float32"), )
paddle.maximum(Tensor([13, 1, 2],"float32"), Tensor([270096, 2],"float32"), )
paddle.maximum(Tensor([13, 1, 2],"float32"), Tensor([286977, 2],"float32"), )
paddle.maximum(Tensor([13, 1, 2],"float32"), Tensor([295443, 2],"float32"), )
paddle.maximum(Tensor([13, 1, 2],"float32"), Tensor([330429, 2],"float32"), )
paddle.maximum(Tensor([13, 1, 2],"float32"), Tensor([331452, 2],"float32"), )
paddle.maximum(Tensor([13, 1, 2],"float32"), Tensor([343728, 2],"float32"), )
paddle.maximum(Tensor([13, 1, 2],"float32"), Tensor([349866, 2],"float32"), )
paddle.maximum(Tensor([13, 1, 2],"float32"), Tensor([368280, 2],"float32"), )
paddle.maximum(Tensor([13, 1, 2],"float32"), Tensor([53760, 2],"float32"), )
paddle.maximum(Tensor([13, 1, 2],"float32"), Tensor([75375, 2],"float32"), )
paddle.maximum(Tensor([13, 1, 2],"float32"), Tensor([75555, 2],"float32"), )
paddle.maximum(Tensor([1332, 1, 2],"float32"), Tensor([1, 5376, 2],"float32"), )
paddle.maximum(Tensor([1386, 1, 2],"float32"), Tensor([14, 2],"float32"), )
paddle.maximum(Tensor([14, 1, 2],"float32"), Tensor([214848, 2],"float32"), )
paddle.maximum(Tensor([14, 1, 2],"float32"), Tensor([245520, 2],"float32"), )
paddle.maximum(Tensor([14, 1, 2],"float32"), Tensor([261681, 2],"float32"), )
paddle.maximum(Tensor([14, 1, 2],"float32"), Tensor([269586, 2],"float32"), )
paddle.maximum(Tensor([14, 1, 2],"float32"), Tensor([303858, 2],"float32"), )
paddle.maximum(Tensor([14, 1, 2],"float32"), Tensor([310992, 2],"float32"), )
paddle.maximum(Tensor([14, 1, 2],"float32"), Tensor([330429, 2],"float32"), )
paddle.maximum(Tensor([14, 1, 2],"float32"), Tensor([339150, 2],"float32"), )
paddle.maximum(Tensor([14, 1, 2],"float32"), Tensor([349155, 2],"float32"), )
paddle.maximum(Tensor([14, 1, 2],"float32"), Tensor([349866, 2],"float32"), )
paddle.maximum(Tensor([14, 1, 2],"float32"), Tensor([356541, 2],"float32"), )
paddle.maximum(Tensor([14, 1, 2],"float32"), Tensor([365211, 2],"float32"), )
paddle.maximum(Tensor([14, 1, 2],"float32"), Tensor([397467, 2],"float32"), )
paddle.maximum(Tensor([14, 1, 2],"float32"), Tensor([56280, 2],"float32"), )
paddle.maximum(Tensor([14, 1, 2],"float32"), Tensor([72960, 2],"float32"), )
paddle.maximum(Tensor([14, 1, 2],"float32"), Tensor([80640, 2],"float32"), )
paddle.maximum(Tensor([144, 1, 2],"float32"), Tensor([1, 10164, 2],"float32"), )
paddle.maximum(Tensor([144, 1, 2],"float32"), Tensor([1, 11109, 2],"float32"), )
paddle.maximum(Tensor([1472, 1, 2],"float32"), Tensor([1, 3060, 2],"float32"), )
paddle.maximum(Tensor([15, 1, 2],"float32"), Tensor([230175, 2],"float32"), )
paddle.maximum(Tensor([15, 1, 2],"float32"), Tensor([234804, 2],"float32"), )
paddle.maximum(Tensor([15, 1, 2],"float32"), Tensor([241731, 2],"float32"), )
paddle.maximum(Tensor([15, 1, 2],"float32"), Tensor([249405, 2],"float32"), )
paddle.maximum(Tensor([15, 1, 2],"float32"), Tensor([257796, 2],"float32"), )
paddle.maximum(Tensor([15, 1, 2],"float32"), Tensor([301302, 2],"float32"), )
paddle.maximum(Tensor([15, 1, 2],"float32"), Tensor([310992, 2],"float32"), )
paddle.maximum(Tensor([15, 1, 2],"float32"), Tensor([311535, 2],"float32"), )
paddle.maximum(Tensor([15, 1, 2],"float32"), Tensor([313038, 2],"float32"), )
paddle.maximum(Tensor([15, 1, 2],"float32"), Tensor([369105, 2],"float32"), )
paddle.maximum(Tensor([15, 1, 2],"float32"), Tensor([379050, 2],"float32"), )
paddle.maximum(Tensor([15, 1, 2],"float32"), Tensor([397467, 2],"float32"), )
paddle.maximum(Tensor([1536, 1, 2],"float32"), Tensor([1, 1726, 2],"float32"), )
paddle.maximum(Tensor([16, 1, 2],"float32"), Tensor([188256, 2],"float32"), )
paddle.maximum(Tensor([16, 1, 2],"float32"), Tensor([222012, 2],"float32"), )
paddle.maximum(Tensor([16, 1, 2],"float32"), Tensor([242991, 2],"float32"), )
paddle.maximum(Tensor([16, 1, 2],"float32"), Tensor([278562, 2],"float32"), )
paddle.maximum(Tensor([16, 1, 2],"float32"), Tensor([337620, 2],"float32"), )
paddle.maximum(Tensor([16, 1, 2],"float32"), Tensor([369303, 2],"float32"), )
paddle.maximum(Tensor([16, 1, 2],"float32"), Tensor([379050, 2],"float32"), )
paddle.maximum(Tensor([16, 1, 2],"float32"), Tensor([386694, 2],"float32"), )
paddle.maximum(Tensor([16, 1, 2],"float32"), Tensor([408177, 2],"float32"), )
paddle.maximum(Tensor([16, 1, 2],"float32"), Tensor([62730, 2],"float32"), )
paddle.maximum(Tensor([16, 11, 1, 2],"float32"), Tensor([16, 1, 8400, 2],"float32"), )
paddle.maximum(Tensor([16, 14, 1, 2],"float32"), Tensor([16, 1, 2541, 2],"float32"), )
paddle.maximum(Tensor([16, 16, 1, 2],"float32"), Tensor([16, 1, 8400, 2],"float32"), )
paddle.maximum(Tensor([16, 16, 1, 2],"float32"), Tensor([16, 1, 9261, 2],"float32"), )
paddle.maximum(Tensor([16, 17, 1, 2],"float32"), Tensor([16, 1, 7581, 2],"float32"), )
paddle.maximum(Tensor([16, 18, 1, 2],"float32"), Tensor([16, 1, 10164, 2],"float32"), )
paddle.maximum(Tensor([16, 18, 1, 2],"float32"), Tensor([16, 1, 6804, 2],"float32"), )
paddle.maximum(Tensor([16, 19, 1, 2],"float32"), Tensor([16, 1, 11109, 2],"float32"), )
paddle.maximum(Tensor([16, 21, 1, 2],"float32"), Tensor([16, 1, 7581, 2],"float32"), )
paddle.maximum(Tensor([16, 21, 1, 2],"float32"), Tensor([16, 1, 9261, 2],"float32"), )
paddle.maximum(Tensor([16, 22, 1, 2],"float32"), Tensor([16, 1, 8400, 2],"float32"), )
paddle.maximum(Tensor([16, 23, 1, 2],"float32"), Tensor([16, 1, 6804, 2],"float32"), )
paddle.maximum(Tensor([16, 23, 1, 2],"float32"), Tensor([16, 1, 7581, 2],"float32"), )
paddle.maximum(Tensor([16, 24, 1, 2],"float32"), Tensor([16, 1, 9261, 2],"float32"), )
paddle.maximum(Tensor([16, 28, 1, 2],"float32"), Tensor([16, 1, 11109, 2],"float32"), )
paddle.maximum(Tensor([16, 29, 1, 2],"float32"), Tensor([16, 1, 10164, 2],"float32"), )
paddle.maximum(Tensor([16, 30, 1, 2],"float32"), Tensor([16, 1, 9261, 2],"float32"), )
paddle.maximum(Tensor([16, 32, 1, 2],"float32"), Tensor([16, 1, 6804, 2],"float32"), )
paddle.maximum(Tensor([16, 32, 1, 2],"float32"), Tensor([16, 1, 7581, 2],"float32"), )
paddle.maximum(Tensor([16, 33, 1, 2],"float32"), Tensor([16, 1, 8400, 2],"float32"), )
paddle.maximum(Tensor([16, 35, 1, 2],"float32"), Tensor([16, 1, 11109, 2],"float32"), )
paddle.maximum(Tensor([16, 38, 1, 2],"float32"), Tensor([16, 1, 11109, 2],"float32"), )
paddle.maximum(Tensor([16, 39, 1, 2],"float32"), Tensor([16, 1, 3024, 2],"float32"), )
paddle.maximum(Tensor([16, 40, 1, 2],"float32"), Tensor([16, 1, 6804, 2],"float32"), )
paddle.maximum(Tensor([16, 40, 1, 2],"float32"), Tensor([16, 1, 8400, 2],"float32"), )
paddle.maximum(Tensor([16, 43, 1, 2],"float32"), Tensor([16, 1, 10164, 2],"float32"), )
paddle.maximum(Tensor([16, 48, 1, 2],"float32"), Tensor([16, 1, 3549, 2],"float32"), )
paddle.maximum(Tensor([16, 49, 1, 2],"float32"), Tensor([16, 1, 11109, 2],"float32"), )
paddle.maximum(Tensor([16, 55, 1, 2],"float32"), Tensor([16, 1, 8400, 2],"float32"), )
paddle.maximum(Tensor([16, 7, 1, 2],"float32"), Tensor([16, 1, 12096, 2],"float32"), )
paddle.maximum(Tensor([16121, 811],"float32"), Tensor([1],"float32"), )
paddle.maximum(Tensor([168, 1, 2],"float32"), Tensor([1, 4725, 2],"float32"), )
paddle.maximum(Tensor([168, 1, 2],"float32"), Tensor([1, 7581, 2],"float32"), )
paddle.maximum(Tensor([17, 1, 2],"float32"), Tensor([191835, 2],"float32"), )
paddle.maximum(Tensor([17, 1, 2],"float32"), Tensor([214848, 2],"float32"), )
paddle.maximum(Tensor([17, 1, 2],"float32"), Tensor([223554, 2],"float32"), )
paddle.maximum(Tensor([17, 1, 2],"float32"), Tensor([223827, 2],"float32"), )
paddle.maximum(Tensor([17, 1, 2],"float32"), Tensor([253728, 2],"float32"), )
paddle.maximum(Tensor([17, 1, 2],"float32"), Tensor([264978, 2],"float32"), )
paddle.maximum(Tensor([17, 1, 2],"float32"), Tensor([270096, 2],"float32"), )
paddle.maximum(Tensor([17, 1, 2],"float32"), Tensor([321759, 2],"float32"), )
paddle.maximum(Tensor([17, 1, 2],"float32"), Tensor([330429, 2],"float32"), )
paddle.maximum(Tensor([17, 1, 2],"float32"), Tensor([339150, 2],"float32"), )
paddle.maximum(Tensor([17, 1, 2],"float32"), Tensor([354501, 2],"float32"), )
paddle.maximum(Tensor([17, 1, 2],"float32"), Tensor([359613, 2],"float32"), )
paddle.maximum(Tensor([1728, 1, 2],"float32"), Tensor([1, 2577, 2],"float32"), )
paddle.maximum(Tensor([1770, 1, 2],"float32"), Tensor([25, 2],"float32"), )
paddle.maximum(Tensor([1792, 1, 2],"float32"), Tensor([1, 2125, 2],"float32"), )
paddle.maximum(Tensor([18, 1, 2],"float32"), Tensor([166533, 2],"float32"), )
paddle.maximum(Tensor([18, 1, 2],"float32"), Tensor([214848, 2],"float32"), )
paddle.maximum(Tensor([18, 1, 2],"float32"), Tensor([229152, 2],"float32"), )
paddle.maximum(Tensor([18, 1, 2],"float32"), Tensor([236616, 2],"float32"), )
paddle.maximum(Tensor([18, 1, 2],"float32"), Tensor([260865, 2],"float32"), )
paddle.maximum(Tensor([18, 1, 2],"float32"), Tensor([268569, 2],"float32"), )
paddle.maximum(Tensor([18, 1, 2],"float32"), Tensor([58800, 2],"float32"), )
paddle.maximum(Tensor([184, 1, 2],"float32"), Tensor([1, 10164, 2],"float32"), )
paddle.maximum(Tensor([184, 1, 2],"float32"), Tensor([1, 5376, 2],"float32"), )
paddle.maximum(Tensor([1846, 1, 2],"float32"), Tensor([20, 2],"float32"), )
paddle.maximum(Tensor([1856, 1, 2],"float32"), Tensor([1, 1360, 2],"float32"), )
paddle.maximum(Tensor([19, 1, 2],"float32"), Tensor([205923, 2],"float32"), )
paddle.maximum(Tensor([19, 1, 2],"float32"), Tensor([230175, 2],"float32"), )
paddle.maximum(Tensor([19, 1, 2],"float32"), Tensor([230202, 2],"float32"), )
paddle.maximum(Tensor([19, 1, 2],"float32"), Tensor([243474, 2],"float32"), )
paddle.maximum(Tensor([19, 1, 2],"float32"), Tensor([261681, 2],"float32"), )
paddle.maximum(Tensor([19, 1, 2],"float32"), Tensor([268569, 2],"float32"), )
paddle.maximum(Tensor([19, 1, 2],"float32"), Tensor([302832, 2],"float32"), )
paddle.maximum(Tensor([19, 1, 2],"float32"), Tensor([319200, 2],"float32"), )
paddle.maximum(Tensor([19, 1, 2],"float32"), Tensor([320739, 2],"float32"), )
paddle.maximum(Tensor([19, 1, 2],"float32"), Tensor([322272, 2],"float32"), )
paddle.maximum(Tensor([19, 1, 2],"float32"), Tensor([340176, 2],"float32"), )
paddle.maximum(Tensor([19, 1, 2],"float32"), Tensor([367059, 2],"float32"), )
paddle.maximum(Tensor([192, 1, 2],"float32"), Tensor([1, 9261, 2],"float32"), )
paddle.maximum(Tensor([1984, 1, 2],"float32"), Tensor([1, 1726, 2],"float32"), )
paddle.maximum(Tensor([2, 1, 2],"float32"), Tensor([276210, 2],"float32"), )
paddle.maximum(Tensor([2, 1, 2],"float32"), Tensor([331251, 2],"float32"), )
paddle.maximum(Tensor([2, 1, 2],"float32"), Tensor([337620, 2],"float32"), )
paddle.maximum(Tensor([2, 1, 2],"float32"), Tensor([359613, 2],"float32"), )
paddle.maximum(Tensor([2, 1, 2],"float32"), Tensor([73365, 2],"float32"), )
paddle.maximum(Tensor([2, 100, 1, 2],"float32"), Tensor([2, 1, 3024, 2],"float32"), )
paddle.maximum(Tensor([2, 108, 1, 2],"float32"), Tensor([2, 1, 6069, 2],"float32"), )
paddle.maximum(Tensor([2, 11, 1, 2],"float32"), Tensor([2, 1, 5376, 2],"float32"), )
paddle.maximum(Tensor([2, 114, 1, 2],"float32"), Tensor([2, 1, 6069, 2],"float32"), )
paddle.maximum(Tensor([2, 117, 1, 2],"float32"), Tensor([2, 1, 12096, 2],"float32"), )
paddle.maximum(Tensor([2, 120, 1, 2],"float32"), Tensor([2, 1, 6804, 2],"float32"), )
paddle.maximum(Tensor([2, 132, 1, 2],"float32"), Tensor([2, 1, 4116, 2],"float32"), )
paddle.maximum(Tensor([2, 139, 1, 2],"float32"), Tensor([2, 1, 12096, 2],"float32"), )
paddle.maximum(Tensor([2, 140, 1, 2],"float32"), Tensor([2, 1, 11109, 2],"float32"), )
paddle.maximum(Tensor([2, 145, 1, 2],"float32"), Tensor([2, 1, 7581, 2],"float32"), )
paddle.maximum(Tensor([2, 152, 1, 2],"float32"), Tensor([2, 1, 12096, 2],"float32"), )
paddle.maximum(Tensor([2, 156, 1, 2],"float32"), Tensor([2, 1, 6069, 2],"float32"), )
paddle.maximum(Tensor([2, 159, 1, 2],"float32"), Tensor([2, 1, 12096, 2],"float32"), )
paddle.maximum(Tensor([2, 163, 1, 2],"float32"), Tensor([2, 1, 11109, 2],"float32"), )
paddle.maximum(Tensor([2, 209, 1, 2],"float32"), Tensor([2, 1, 2100, 2],"float32"), )
paddle.maximum(Tensor([2, 255, 1, 2],"float32"), Tensor([2, 1, 12096, 2],"float32"), )
paddle.maximum(Tensor([2, 284, 1, 2],"float32"), Tensor([2, 1, 8400, 2],"float32"), )
paddle.maximum(Tensor([2, 293, 1, 2],"float32"), Tensor([2, 1, 10164, 2],"float32"), )
paddle.maximum(Tensor([2, 33, 1, 2],"float32"), Tensor([2, 1, 9261, 2],"float32"), )
paddle.maximum(Tensor([2, 37, 1, 2],"float32"), Tensor([2, 1, 2541, 2],"float32"), )
paddle.maximum(Tensor([2, 400, 1, 2],"float32"), Tensor([2, 1, 11109, 2],"float32"), )
paddle.maximum(Tensor([2, 51, 1, 2],"float32"), Tensor([2, 1, 2100, 2],"float32"), )
paddle.maximum(Tensor([2, 54, 1, 2],"float32"), Tensor([2, 1, 12096, 2],"float32"), )
paddle.maximum(Tensor([2, 54, 1, 2],"float32"), Tensor([2, 1, 7581, 2],"float32"), )
paddle.maximum(Tensor([2, 56, 1, 2],"float32"), Tensor([2, 1, 9261, 2],"float32"), )
paddle.maximum(Tensor([2, 65, 1, 2],"float32"), Tensor([2, 1, 9261, 2],"float32"), )
paddle.maximum(Tensor([2, 76, 1, 2],"float32"), Tensor([2, 1, 7581, 2],"float32"), )
paddle.maximum(Tensor([2, 79, 1, 2],"float32"), Tensor([2, 1, 10164, 2],"float32"), )
paddle.maximum(Tensor([2, 88, 1, 2],"float32"), Tensor([2, 1, 5376, 2],"float32"), )
paddle.maximum(Tensor([2, 89, 1, 2],"float32"), Tensor([2, 1, 2100, 2],"float32"), )
paddle.maximum(Tensor([2, 93, 1, 2],"float32"), Tensor([2, 1, 6804, 2],"float32"), )
paddle.maximum(Tensor([20, 1, 2],"float32"), Tensor([260865, 2],"float32"), )
paddle.maximum(Tensor([20, 1, 2],"float32"), Tensor([301302, 2],"float32"), )
paddle.maximum(Tensor([20, 1, 2],"float32"), Tensor([322272, 2],"float32"), )
paddle.maximum(Tensor([20, 1, 2],"float32"), Tensor([397467, 2],"float32"), )
paddle.maximum(Tensor([200, 1, 2],"float32"), Tensor([1, 11109, 2],"float32"), )
paddle.maximum(Tensor([2048, 1, 2],"float32"), Tensor([1, 2577, 2],"float32"), )
paddle.maximum(Tensor([2073, 1, 2],"float32"), Tensor([17, 2],"float32"), )
paddle.maximum(Tensor([208, 1, 2],"float32"), Tensor([1, 2541, 2],"float32"), )
paddle.maximum(Tensor([208, 1, 2],"float32"), Tensor([1, 6069, 2],"float32"), )
paddle.maximum(Tensor([208, 1, 2],"float32"), Tensor([1, 8400, 2],"float32"), )
paddle.maximum(Tensor([21, 1, 2],"float32"), Tensor([330429, 2],"float32"), )
paddle.maximum(Tensor([21, 1, 2],"float32"), Tensor([94500, 2],"float32"), )
paddle.maximum(Tensor([2100, 1, 2],"float32"), Tensor([1, 12096, 2],"float32"), )
paddle.maximum(Tensor([216, 1, 2],"float32"), Tensor([1, 11109, 2],"float32"), )
paddle.maximum(Tensor([2179, 19],"float32"), Tensor([1],"float32"), )
paddle.maximum(Tensor([22, 1, 2],"float32"), Tensor([252195, 2],"float32"), )
paddle.maximum(Tensor([22, 1, 2],"float32"), Tensor([260865, 2],"float32"), )
paddle.maximum(Tensor([22, 1, 2],"float32"), Tensor([268569, 2],"float32"), )
paddle.maximum(Tensor([22, 1, 2],"float32"), Tensor([278256, 2],"float32"), )
paddle.maximum(Tensor([22, 1, 2],"float32"), Tensor([286977, 2],"float32"), )
paddle.maximum(Tensor([22, 1, 2],"float32"), Tensor([304368, 2],"float32"), )
paddle.maximum(Tensor([22, 1, 2],"float32"), Tensor([310992, 2],"float32"), )
paddle.maximum(Tensor([2203, 1, 2],"float32"), Tensor([8, 2],"float32"), )
paddle.maximum(Tensor([224, 1, 2],"float32"), Tensor([1, 12096, 2],"float32"), )
paddle.maximum(Tensor([2240, 1, 2],"float32"), Tensor([1, 1726, 2],"float32"), )
paddle.maximum(Tensor([23, 1, 2],"float32"), Tensor([214848, 2],"float32"), )
paddle.maximum(Tensor([23, 1, 2],"float32"), Tensor([270096, 2],"float32"), )
paddle.maximum(Tensor([23, 1, 2],"float32"), Tensor([319200, 2],"float32"), )
paddle.maximum(Tensor([2368, 1, 2],"float32"), Tensor([1, 1360, 2],"float32"), )
paddle.maximum(Tensor([2368, 1, 2],"float32"), Tensor([1, 2125, 2],"float32"), )
paddle.maximum(Tensor([24, 1, 2],"float32"), Tensor([286440, 2],"float32"), )
paddle.maximum(Tensor([24, 1, 2],"float32"), Tensor([310992, 2],"float32"), )
paddle.maximum(Tensor([24, 1, 2],"float32"), Tensor([349866, 2],"float32"), )
paddle.maximum(Tensor([2449, 16],"float32"), Tensor([1],"float32"), )
paddle.maximum(Tensor([25, 1, 2],"float32"), Tensor([217413, 2],"float32"), )
paddle.maximum(Tensor([25, 1, 2],"float32"), Tensor([242991, 2],"float32"), )
paddle.maximum(Tensor([25, 1, 2],"float32"), Tensor([369303, 2],"float32"), )
paddle.maximum(Tensor([25, 1, 2],"float32"), Tensor([408177, 2],"float32"), )
paddle.maximum(Tensor([26, 1, 2],"float32"), Tensor([182391, 2],"float32"), )
paddle.maximum(Tensor([26, 1, 2],"float32"), Tensor([234804, 2],"float32"), )
paddle.maximum(Tensor([26, 1, 2],"float32"), Tensor([235320, 2],"float32"), )
paddle.maximum(Tensor([26, 1, 2],"float32"), Tensor([262194, 2],"float32"), )
paddle.maximum(Tensor([26, 1, 2],"float32"), Tensor([293397, 2],"float32"), )
paddle.maximum(Tensor([26, 1, 2],"float32"), Tensor([313347, 2],"float32"), )
paddle.maximum(Tensor([26, 1, 2],"float32"), Tensor([340176, 2],"float32"), )
paddle.maximum(Tensor([26, 1, 2],"float32"), Tensor([375984, 2],"float32"), )
paddle.maximum(Tensor([264, 1, 2],"float32"), Tensor([1, 10164, 2],"float32"), )
paddle.maximum(Tensor([2688, 1, 2],"float32"), Tensor([1, 3060, 2],"float32"), )
paddle.maximum(Tensor([27, 1, 2],"float32"), Tensor([349155, 2],"float32"), )
paddle.maximum(Tensor([272, 1, 2],"float32"), Tensor([1, 11109, 2],"float32"), )
paddle.maximum(Tensor([272, 1, 2],"float32"), Tensor([1, 12096, 2],"float32"), )
paddle.maximum(Tensor([2758, 1, 2],"float32"), Tensor([80, 2],"float32"), )
paddle.maximum(Tensor([28, 1, 2],"float32"), Tensor([188256, 2],"float32"), )
paddle.maximum(Tensor([28, 1, 2],"float32"), Tensor([242991, 2],"float32"), )
paddle.maximum(Tensor([28, 1, 2],"float32"), Tensor([257796, 2],"float32"), )
paddle.maximum(Tensor([28, 1, 2],"float32"), Tensor([291555, 2],"float32"), )
paddle.maximum(Tensor([28, 1, 2],"float32"), Tensor([306900, 2],"float32"), )
paddle.maximum(Tensor([28, 1, 2],"float32"), Tensor([343728, 2],"float32"), )
paddle.maximum(Tensor([28, 1, 2],"float32"), Tensor([349866, 2],"float32"), )
paddle.maximum(Tensor([28, 1, 2],"float32"), Tensor([66240, 2],"float32"), )
paddle.maximum(Tensor([288, 1, 2],"float32"), Tensor([1, 3024, 2],"float32"), )
paddle.maximum(Tensor([29, 1, 2],"float32"), Tensor([236616, 2],"float32"), )
paddle.maximum(Tensor([29, 1, 2],"float32"), Tensor([277539, 2],"float32"), )
paddle.maximum(Tensor([29, 1, 2],"float32"), Tensor([331452, 2],"float32"), )
paddle.maximum(Tensor([29, 1, 2],"float32"), Tensor([349866, 2],"float32"), )
paddle.maximum(Tensor([29, 1, 2],"float32"), Tensor([375984, 2],"float32"), )
paddle.maximum(Tensor([3, 1, 2],"float32"), Tensor([227124, 2],"float32"), )
paddle.maximum(Tensor([3, 1, 2],"float32"), Tensor([253728, 2],"float32"), )
paddle.maximum(Tensor([3, 1, 2],"float32"), Tensor([261888, 2],"float32"), )
paddle.maximum(Tensor([3, 1, 2],"float32"), Tensor([325113, 2],"float32"), )
paddle.maximum(Tensor([3, 1, 2],"float32"), Tensor([349866, 2],"float32"), )
paddle.maximum(Tensor([30, 1, 2],"float32"), Tensor([257796, 2],"float32"), )
paddle.maximum(Tensor([30, 1, 2],"float32"), Tensor([343728, 2],"float32"), )
paddle.maximum(Tensor([30, 1, 2],"float32"), Tensor([375984, 2],"float32"), )
paddle.maximum(Tensor([3008, 1, 2],"float32"), Tensor([1, 3060, 2],"float32"), )
paddle.maximum(Tensor([304, 1, 2],"float32"), Tensor([1, 11109, 2],"float32"), )
paddle.maximum(Tensor([3072, 1, 2],"float32"), Tensor([1, 2125, 2],"float32"), )
paddle.maximum(Tensor([3072, 1, 2],"float32"), Tensor([1, 2577, 2],"float32"), )
paddle.maximum(Tensor([31, 1, 2],"float32"), Tensor([236616, 2],"float32"), )
paddle.maximum(Tensor([31, 1, 2],"float32"), Tensor([257796, 2],"float32"), )
paddle.maximum(Tensor([31, 1, 2],"float32"), Tensor([268560, 2],"float32"), )
paddle.maximum(Tensor([31, 1, 2],"float32"), Tensor([291555, 2],"float32"), )
paddle.maximum(Tensor([31, 1, 2],"float32"), Tensor([301302, 2],"float32"), )
paddle.maximum(Tensor([31, 1, 2],"float32"), Tensor([60480, 2],"float32"), )
paddle.maximum(Tensor([312, 1, 2],"float32"), Tensor([1, 10164, 2],"float32"), )
paddle.maximum(Tensor([3140, 1, 2],"float32"), Tensor([9, 2],"float32"), )
paddle.maximum(Tensor([32, 1, 2],"float32"), Tensor([343728, 2],"float32"), )
paddle.maximum(Tensor([33, 1, 2],"float32"), Tensor([217413, 2],"float32"), )
paddle.maximum(Tensor([33, 1, 2],"float32"), Tensor([330429, 2],"float32"), )
paddle.maximum(Tensor([336, 1, 2],"float32"), Tensor([1, 4725, 2],"float32"), )
paddle.maximum(Tensor([3392, 1, 2],"float32"), Tensor([1, 1726, 2],"float32"), )
paddle.maximum(Tensor([352, 1, 2],"float32"), Tensor([1, 10164, 2],"float32"), )
paddle.maximum(Tensor([36, 1, 2],"float32"), Tensor([294624, 2],"float32"), )
paddle.maximum(Tensor([36, 1, 2],"float32"), Tensor([321759, 2],"float32"), )
paddle.maximum(Tensor([36, 1, 2],"float32"), Tensor([368280, 2],"float32"), )
paddle.maximum(Tensor([37, 1, 2],"float32"), Tensor([217413, 2],"float32"), )
paddle.maximum(Tensor([37, 1, 2],"float32"), Tensor([349866, 2],"float32"), )
paddle.maximum(Tensor([384, 1, 2],"float32"), Tensor([1, 12096, 2],"float32"), )
paddle.maximum(Tensor([384, 1, 2],"float32"), Tensor([1, 2541, 2],"float32"), )
paddle.maximum(Tensor([384, 1, 2],"float32"), Tensor([1, 4116, 2],"float32"), )
paddle.maximum(Tensor([384, 1, 2],"float32"), Tensor([1, 6069, 2],"float32"), )
paddle.maximum(Tensor([3856, 1, 2],"float32"), Tensor([39, 2],"float32"), )
paddle.maximum(Tensor([39, 1, 2],"float32"), Tensor([217413, 2],"float32"), )
paddle.maximum(Tensor([39, 1, 2],"float32"), Tensor([242991, 2],"float32"), )
paddle.maximum(Tensor([39, 1, 2],"float32"), Tensor([322272, 2],"float32"), )
paddle.maximum(Tensor([4, 1, 2],"float32"), Tensor([182391, 2],"float32"), )
paddle.maximum(Tensor([4, 1, 2],"float32"), Tensor([302832, 2],"float32"), )
paddle.maximum(Tensor([4, 1, 2],"float32"), Tensor([306900, 2],"float32"), )
paddle.maximum(Tensor([4, 1, 2],"float32"), Tensor([319200, 2],"float32"), )
paddle.maximum(Tensor([4, 130, 1, 2],"float32"), Tensor([4, 1, 4725, 2],"float32"), )
paddle.maximum(Tensor([4, 28, 1, 2],"float32"), Tensor([4, 1, 5376, 2],"float32"), )
paddle.maximum(Tensor([4, 37, 1, 2],"float32"), Tensor([4, 1, 10164, 2],"float32"), )
paddle.maximum(Tensor([4, 394, 1, 2],"float32"), Tensor([4, 1, 4116, 2],"float32"), )
paddle.maximum(Tensor([4, 465, 1, 2],"float32"), Tensor([4, 1, 6069, 2],"float32"), )
paddle.maximum(Tensor([4, 525, 1, 2],"float32"), Tensor([4, 1, 12096, 2],"float32"), )
paddle.maximum(Tensor([40, 1, 2],"float32"), Tensor([245520, 2],"float32"), )
paddle.maximum(Tensor([4121, 1, 2],"float32"), Tensor([11, 2],"float32"), )
paddle.maximum(Tensor([416, 1, 2],"float32"), Tensor([1, 10164, 2],"float32"), )
paddle.maximum(Tensor([4164, 11],"float32"), Tensor([1],"float32"), )
paddle.maximum(Tensor([4221, 11],"float32"), Tensor([1],"float32"), )
paddle.maximum(Tensor([4276, 19],"float32"), Tensor([1],"float32"), )
paddle.maximum(Tensor([432, 1, 2],"float32"), Tensor([1, 10164, 2],"float32"), )
paddle.maximum(Tensor([432, 1, 2],"float32"), Tensor([1, 7581, 2],"float32"), )
paddle.maximum(Tensor([45, 1, 2],"float32"), Tensor([331452, 2],"float32"), )
paddle.maximum(Tensor([4529, 1, 2],"float32"), Tensor([2, 2],"float32"), )
paddle.maximum(Tensor([464, 1, 2],"float32"), Tensor([1, 7581, 2],"float32"), )
paddle.maximum(Tensor([480, 1, 2],"float32"), Tensor([1, 2541, 2],"float32"), )
paddle.maximum(Tensor([49, 1, 2],"float32"), Tensor([369303, 2],"float32"), )
paddle.maximum(Tensor([5, 1, 2],"float32"), Tensor([230202, 2],"float32"), )
paddle.maximum(Tensor([5, 1, 2],"float32"), Tensor([261681, 2],"float32"), )
paddle.maximum(Tensor([5, 1, 2],"float32"), Tensor([368280, 2],"float32"), )
paddle.maximum(Tensor([5, 1, 2],"float32"), Tensor([440433, 2],"float32"), )
paddle.maximum(Tensor([5, 1, 2],"float32"), Tensor([81000, 2],"float32"), )
paddle.maximum(Tensor([50, 1, 2],"float32"), Tensor([321759, 2],"float32"), )
paddle.maximum(Tensor([51, 1, 2],"float32"), Tensor([242991, 2],"float32"), )
paddle.maximum(Tensor([51, 1, 2],"float32"), Tensor([310992, 2],"float32"), )
paddle.maximum(Tensor([542, 1, 2],"float32"), Tensor([2, 2],"float32"), )
paddle.maximum(Tensor([576, 1, 2],"float32"), Tensor([1, 3549, 2],"float32"), )
paddle.maximum(Tensor([6, 1, 2],"float32"), Tensor([191301, 2],"float32"), )
paddle.maximum(Tensor([6, 1, 2],"float32"), Tensor([236334, 2],"float32"), )
paddle.maximum(Tensor([6, 1, 2],"float32"), Tensor([261681, 2],"float32"), )
paddle.maximum(Tensor([6, 1, 2],"float32"), Tensor([291555, 2],"float32"), )
paddle.maximum(Tensor([6, 1, 2],"float32"), Tensor([301302, 2],"float32"), )
paddle.maximum(Tensor([6, 1, 2],"float32"), Tensor([320739, 2],"float32"), )
paddle.maximum(Tensor([6, 1, 2],"float32"), Tensor([343728, 2],"float32"), )
paddle.maximum(Tensor([6, 1, 2],"float32"), Tensor([388740, 2],"float32"), )
paddle.maximum(Tensor([6, 1, 2],"float32"), Tensor([58320, 2],"float32"), )
paddle.maximum(Tensor([6, 1, 2],"float32"), Tensor([68400, 2],"float32"), )
paddle.maximum(Tensor([608, 1, 2],"float32"), Tensor([1, 7581, 2],"float32"), )
paddle.maximum(Tensor([64, 15, 1, 2],"float32"), Tensor([64, 1, 1726, 2],"float32"), )
paddle.maximum(Tensor([64, 20, 1, 2],"float32"), Tensor([64, 1, 3060, 2],"float32"), )
paddle.maximum(Tensor([64, 23, 1, 2],"float32"), Tensor([64, 1, 3060, 2],"float32"), )
paddle.maximum(Tensor([64, 25, 1, 2],"float32"), Tensor([64, 1, 2125, 2],"float32"), )
paddle.maximum(Tensor([64, 26, 1, 2],"float32"), Tensor([64, 1, 2125, 2],"float32"), )
paddle.maximum(Tensor([64, 28, 1, 2],"float32"), Tensor([64, 1, 2577, 2],"float32"), )
paddle.maximum(Tensor([64, 29, 1, 2],"float32"), Tensor([64, 1, 2577, 2],"float32"), )
paddle.maximum(Tensor([64, 29, 1, 2],"float32"), Tensor([64, 1, 3060, 2],"float32"), )
paddle.maximum(Tensor([64, 31, 1, 2],"float32"), Tensor([64, 1, 3060, 2],"float32"), )
paddle.maximum(Tensor([64, 33, 1, 2],"float32"), Tensor([64, 1, 2577, 2],"float32"), )
paddle.maximum(Tensor([64, 33, 1, 2],"float32"), Tensor([64, 1, 3060, 2],"float32"), )
paddle.maximum(Tensor([64, 34, 1, 2],"float32"), Tensor([64, 1, 2125, 2],"float32"), )
paddle.maximum(Tensor([64, 34, 1, 2],"float32"), Tensor([64, 1, 3060, 2],"float32"), )
paddle.maximum(Tensor([64, 36, 1, 2],"float32"), Tensor([64, 1, 1360, 2],"float32"), )
paddle.maximum(Tensor([64, 36, 1, 2],"float32"), Tensor([64, 1, 2577, 2],"float32"), )
paddle.maximum(Tensor([64, 39, 1, 2],"float32"), Tensor([64, 1, 2125, 2],"float32"), )
paddle.maximum(Tensor([64, 39, 1, 2],"float32"), Tensor([64, 1, 2577, 2],"float32"), )
paddle.maximum(Tensor([64, 40, 1, 2],"float32"), Tensor([64, 1, 1360, 2],"float32"), )
paddle.maximum(Tensor([64, 42, 1, 2],"float32"), Tensor([64, 1, 3060, 2],"float32"), )
paddle.maximum(Tensor([64, 50, 1, 2],"float32"), Tensor([64, 1, 3060, 2],"float32"), )
paddle.maximum(Tensor([64, 53, 1, 2],"float32"), Tensor([64, 1, 1360, 2],"float32"), )
paddle.maximum(Tensor([7, 1, 2],"float32"), Tensor([294624, 2],"float32"), )
paddle.maximum(Tensor([7, 1, 2],"float32"), Tensor([295443, 2],"float32"), )
paddle.maximum(Tensor([7, 1, 2],"float32"), Tensor([320739, 2],"float32"), )
paddle.maximum(Tensor([7, 1, 2],"float32"), Tensor([378540, 2],"float32"), )
paddle.maximum(Tensor([7, 1, 2],"float32"), Tensor([62730, 2],"float32"), )
paddle.maximum(Tensor([784, 1, 2],"float32"), Tensor([1, 11109, 2],"float32"), )
paddle.maximum(Tensor([8, 1, 2],"float32"), Tensor([229152, 2],"float32"), )
paddle.maximum(Tensor([8, 1, 2],"float32"), Tensor([236334, 2],"float32"), )
paddle.maximum(Tensor([8, 1, 2],"float32"), Tensor([261681, 2],"float32"), )
paddle.maximum(Tensor([8, 1, 2],"float32"), Tensor([268560, 2],"float32"), )
paddle.maximum(Tensor([8, 1, 2],"float32"), Tensor([320739, 2],"float32"), )
paddle.maximum(Tensor([8, 1, 2],"float32"), Tensor([377514, 2],"float32"), )
paddle.maximum(Tensor([8, 1, 2],"float32"), Tensor([61500, 2],"float32"), )
paddle.maximum(Tensor([8, 1, 2],"float32"), Tensor([70350, 2],"float32"), )
paddle.maximum(Tensor([8, 1, 2],"float32"), Tensor([75375, 2],"float32"), )
paddle.maximum(Tensor([8, 17, 1, 2],"float32"), Tensor([8, 1, 12096, 2],"float32"), )
paddle.maximum(Tensor([8, 23, 1, 2],"float32"), Tensor([8, 1, 11109, 2],"float32"), )
paddle.maximum(Tensor([8, 23, 1, 2],"float32"), Tensor([8, 1, 9261, 2],"float32"), )
paddle.maximum(Tensor([8, 28, 1, 2],"float32"), Tensor([8, 1, 9261, 2],"float32"), )
paddle.maximum(Tensor([8, 33, 1, 2],"float32"), Tensor([8, 1, 10164, 2],"float32"), )
paddle.maximum(Tensor([8, 33, 1, 2],"float32"), Tensor([8, 1, 3549, 2],"float32"), )
paddle.maximum(Tensor([8, 37, 1, 2],"float32"), Tensor([8, 1, 11109, 2],"float32"), )
paddle.maximum(Tensor([8, 38, 1, 2],"float32"), Tensor([8, 1, 3549, 2],"float32"), )
paddle.maximum(Tensor([8, 44, 1, 2],"float32"), Tensor([8, 1, 8400, 2],"float32"), )
paddle.maximum(Tensor([8, 46, 1, 2],"float32"), Tensor([8, 1, 8400, 2],"float32"), )
paddle.maximum(Tensor([872, 16],"float32"), Tensor([1],"float32"), )
paddle.maximum(Tensor([88, 1, 2],"float32"), Tensor([1, 3024, 2],"float32"), )
paddle.maximum(Tensor([9, 1, 2],"float32"), Tensor([204624, 2],"float32"), )
paddle.maximum(Tensor([9, 1, 2],"float32"), Tensor([236616, 2],"float32"), )
paddle.maximum(Tensor([9, 1, 2],"float32"), Tensor([247086, 2],"float32"), )
paddle.maximum(Tensor([9, 1, 2],"float32"), Tensor([304368, 2],"float32"), )
paddle.maximum(Tensor([9, 1, 2],"float32"), Tensor([321759, 2],"float32"), )
paddle.maximum(Tensor([9, 1, 2],"float32"), Tensor([333018, 2],"float32"), )
paddle.maximum(Tensor([9, 1, 2],"float32"), Tensor([340176, 2],"float32"), )
paddle.maximum(Tensor([9, 1, 2],"float32"), Tensor([365211, 2],"float32"), )
paddle.maximum(Tensor([9, 1, 2],"float32"), Tensor([66330, 2],"float32"), )
paddle.maximum(Tensor([9, 1, 2],"float32"), Tensor([69345, 2],"float32"), )
paddle.minimum(Tensor([1, 1, 2],"float32"), Tensor([322245, 2],"float32"), )
paddle.minimum(Tensor([1, 1, 2],"float32"), Tensor([50220, 2],"float32"), )
paddle.minimum(Tensor([1, 101, 1, 2],"float32"), Tensor([1, 1, 40656, 2],"float32"), )
paddle.minimum(Tensor([1, 102, 1, 2],"float32"), Tensor([1, 1, 65856, 2],"float32"), )
paddle.minimum(Tensor([1, 105, 1, 2],"float32"), Tensor([1, 1, 61236, 2],"float32"), )
paddle.minimum(Tensor([1, 112, 1, 2],"float32"), Tensor([1, 1, 30324, 2],"float32"), )
paddle.minimum(Tensor([1, 124, 1, 2],"float32"), Tensor([1, 1, 48384, 2],"float32"), )
paddle.minimum(Tensor([1, 127, 1, 2],"float32"), Tensor([1, 1, 70644, 2],"float32"), )
paddle.minimum(Tensor([1, 13, 1, 2],"float32"), Tensor([1, 1, 75600, 2],"float32"), )
paddle.minimum(Tensor([1, 132, 1, 2],"float32"), Tensor([1, 1, 27216, 2],"float32"), )
paddle.minimum(Tensor([1, 138, 1, 2],"float32"), Tensor([1, 1, 56784, 2],"float32"), )
paddle.minimum(Tensor([1, 139, 1, 2],"float32"), Tensor([1, 1, 61236, 2],"float32"), )
paddle.minimum(Tensor([1, 14, 1, 2],"float32"), Tensor([1, 1, 27216, 2],"float32"), )
paddle.minimum(Tensor([1, 145, 1, 2],"float32"), Tensor([1, 1, 21504, 2],"float32"), )
paddle.minimum(Tensor([1, 15, 1, 2],"float32"), Tensor([1, 1, 70644, 2],"float32"), )
paddle.minimum(Tensor([1, 169, 1, 2],"float32"), Tensor([1, 1, 40656, 2],"float32"), )
paddle.minimum(Tensor([1, 19, 1, 2],"float32"), Tensor([1, 1, 48384, 2],"float32"), )
paddle.minimum(Tensor([1, 19, 1, 2],"float32"), Tensor([1, 1, 70644, 2],"float32"), )
paddle.minimum(Tensor([1, 21, 1, 2],"float32"), Tensor([1, 1, 70644, 2],"float32"), )
paddle.minimum(Tensor([1, 210, 1, 2],"float32"), Tensor([1, 1, 75600, 2],"float32"), )
paddle.minimum(Tensor([1, 218, 1, 2],"float32"), Tensor([1, 1, 70644, 2],"float32"), )
paddle.minimum(Tensor([1, 252, 1, 2],"float32"), Tensor([1, 1, 30324, 2],"float32"), )
paddle.minimum(Tensor([1, 296, 1, 2],"float32"), Tensor([1, 1, 24276, 2],"float32"), )
paddle.minimum(Tensor([1, 32, 1, 2],"float32"), Tensor([1, 1, 37044, 2],"float32"), )
paddle.minimum(Tensor([1, 32, 1, 2],"float32"), Tensor([1, 1, 75600, 2],"float32"), )
paddle.minimum(Tensor([1, 333, 1, 2],"float32"), Tensor([1, 1, 40656, 2],"float32"), )
paddle.minimum(Tensor([1, 36, 1, 2],"float32"), Tensor([1, 1, 33600, 2],"float32"), )
paddle.minimum(Tensor([1, 36, 1, 2],"float32"), Tensor([1, 1, 65856, 2],"float32"), )
paddle.minimum(Tensor([1, 37, 1, 2],"float32"), Tensor([1, 1, 65856, 2],"float32"), )
paddle.minimum(Tensor([1, 39, 1, 2],"float32"), Tensor([1, 1, 61236, 2],"float32"), )
paddle.minimum(Tensor([1, 400, 1, 2],"float32"), Tensor([1, 1, 65856, 2],"float32"), )
paddle.minimum(Tensor([1, 45, 1, 2],"float32"), Tensor([1, 1, 40656, 2],"float32"), )
paddle.minimum(Tensor([1, 46, 1, 2],"float32"), Tensor([1, 1, 48384, 2],"float32"), )
paddle.minimum(Tensor([1, 46, 1, 2],"float32"), Tensor([1, 1, 61236, 2],"float32"), )
paddle.minimum(Tensor([1, 47, 1, 2],"float32"), Tensor([1, 1, 61236, 2],"float32"), )
paddle.minimum(Tensor([1, 49, 1, 2],"float32"), Tensor([1, 1, 40656, 2],"float32"), )
paddle.minimum(Tensor([1, 50, 1, 2],"float32"), Tensor([1, 1, 70644, 2],"float32"), )
paddle.minimum(Tensor([1, 57, 1, 2],"float32"), Tensor([1, 1, 27216, 2],"float32"), )
paddle.minimum(Tensor([1, 57, 1, 2],"float32"), Tensor([1, 1, 40656, 2],"float32"), )
paddle.minimum(Tensor([1, 58, 1, 2],"float32"), Tensor([1, 1, 61236, 2],"float32"), )
paddle.minimum(Tensor([1, 59, 1, 2],"float32"), Tensor([1, 1, 37044, 2],"float32"), )
paddle.minimum(Tensor([1, 6, 1, 2],"float32"), Tensor([1, 1, 75600, 2],"float32"), )
paddle.minimum(Tensor([1, 65, 1, 2],"float32"), Tensor([1, 1, 61236, 2],"float32"), )
paddle.minimum(Tensor([1, 65, 1, 2],"float32"), Tensor([1, 1, 75600, 2],"float32"), )
paddle.minimum(Tensor([1, 68, 1, 2],"float32"), Tensor([1, 1, 56784, 2],"float32"), )
paddle.minimum(Tensor([1, 69, 1, 2],"float32"), Tensor([1, 1, 52500, 2],"float32"), )
paddle.minimum(Tensor([1, 72, 1, 2],"float32"), Tensor([1, 1, 37044, 2],"float32"), )
paddle.minimum(Tensor([1, 72, 1, 2],"float32"), Tensor([1, 1, 48384, 2],"float32"), )
paddle.minimum(Tensor([1, 73, 1, 2],"float32"), Tensor([1, 1, 70644, 2],"float32"), )
paddle.minimum(Tensor([1, 73, 1, 2],"float32"), Tensor([1, 1, 75600, 2],"float32"), )
paddle.minimum(Tensor([1, 76, 1, 2],"float32"), Tensor([1, 1, 70644, 2],"float32"), )
paddle.minimum(Tensor([1, 79, 1, 2],"float32"), Tensor([1, 1, 75600, 2],"float32"), )
paddle.minimum(Tensor([1, 80, 1, 2],"float32"), Tensor([1, 1, 21504, 2],"float32"), )
paddle.minimum(Tensor([1, 86, 1, 2],"float32"), Tensor([1, 1, 56784, 2],"float32"), )
paddle.minimum(Tensor([1, 88, 1, 2],"float32"), Tensor([1, 1, 75600, 2],"float32"), )
paddle.minimum(Tensor([10, 1, 2],"float32"), Tensor([168795, 2],"float32"), )
paddle.minimum(Tensor([10, 1, 2],"float32"), Tensor([295647, 2],"float32"), )
paddle.minimum(Tensor([10, 1, 2],"float32"), Tensor([300762, 2],"float32"), )
paddle.minimum(Tensor([10, 1, 2],"float32"), Tensor([301302, 2],"float32"), )
paddle.minimum(Tensor([10, 1, 2],"float32"), Tensor([303858, 2],"float32"), )
paddle.minimum(Tensor([10, 1, 2],"float32"), Tensor([346086, 2],"float32"), )
paddle.minimum(Tensor([10, 1, 2],"float32"), Tensor([68340, 2],"float32"), )
paddle.minimum(Tensor([1088, 1, 2],"float32"), Tensor([1, 1360, 2],"float32"), )
paddle.minimum(Tensor([1088, 1, 2],"float32"), Tensor([1, 2125, 2],"float32"), )
paddle.minimum(Tensor([11, 1, 2],"float32"), Tensor([236313, 2],"float32"), )
paddle.minimum(Tensor([11, 1, 2],"float32"), Tensor([260865, 2],"float32"), )
paddle.minimum(Tensor([11, 1, 2],"float32"), Tensor([268569, 2],"float32"), )
paddle.minimum(Tensor([11, 1, 2],"float32"), Tensor([272118, 2],"float32"), )
paddle.minimum(Tensor([11, 1, 2],"float32"), Tensor([283905, 2],"float32"), )
paddle.minimum(Tensor([11, 1, 2],"float32"), Tensor([291555, 2],"float32"), )
paddle.minimum(Tensor([11, 1, 2],"float32"), Tensor([295443, 2],"float32"), )
paddle.minimum(Tensor([11, 1, 2],"float32"), Tensor([301302, 2],"float32"), )
paddle.minimum(Tensor([11, 1, 2],"float32"), Tensor([310992, 2],"float32"), )
paddle.minimum(Tensor([11, 1, 2],"float32"), Tensor([340176, 2],"float32"), )
paddle.minimum(Tensor([11, 1, 2],"float32"), Tensor([369105, 2],"float32"), )
paddle.minimum(Tensor([12, 1, 2],"float32"), Tensor([168795, 2],"float32"), )
paddle.minimum(Tensor([12, 1, 2],"float32"), Tensor([214848, 2],"float32"), )
paddle.minimum(Tensor([12, 1, 2],"float32"), Tensor([222012, 2],"float32"), )
paddle.minimum(Tensor([12, 1, 2],"float32"), Tensor([223827, 2],"float32"), )
paddle.minimum(Tensor([12, 1, 2],"float32"), Tensor([236313, 2],"float32"), )
paddle.minimum(Tensor([12, 1, 2],"float32"), Tensor([248616, 2],"float32"), )
paddle.minimum(Tensor([12, 1, 2],"float32"), Tensor([262428, 2],"float32"), )
paddle.minimum(Tensor([12, 1, 2],"float32"), Tensor([314595, 2],"float32"), )
paddle.minimum(Tensor([12, 1, 2],"float32"), Tensor([347820, 2],"float32"), )
paddle.minimum(Tensor([12, 1, 2],"float32"), Tensor([388740, 2],"float32"), )
paddle.minimum(Tensor([12, 1, 2],"float32"), Tensor([60750, 2],"float32"), )
paddle.minimum(Tensor([12, 1, 2],"float32"), Tensor([90060, 2],"float32"), )
paddle.minimum(Tensor([120, 1, 2],"float32"), Tensor([1, 6804, 2],"float32"), )
paddle.minimum(Tensor([120, 1, 2],"float32"), Tensor([1, 9261, 2],"float32"), )
paddle.minimum(Tensor([128, 1, 2],"float32"), Tensor([1, 4116, 2],"float32"), )
paddle.minimum(Tensor([13, 1, 2],"float32"), Tensor([214107, 2],"float32"), )
paddle.minimum(Tensor([13, 1, 2],"float32"), Tensor([217413, 2],"float32"), )
paddle.minimum(Tensor([13, 1, 2],"float32"), Tensor([220992, 2],"float32"), )
paddle.minimum(Tensor([13, 1, 2],"float32"), Tensor([230202, 2],"float32"), )
paddle.minimum(Tensor([13, 1, 2],"float32"), Tensor([236616, 2],"float32"), )
paddle.minimum(Tensor([13, 1, 2],"float32"), Tensor([262428, 2],"float32"), )
paddle.minimum(Tensor([13, 1, 2],"float32"), Tensor([286977, 2],"float32"), )
paddle.minimum(Tensor([13, 1, 2],"float32"), Tensor([291555, 2],"float32"), )
paddle.minimum(Tensor([13, 1, 2],"float32"), Tensor([299250, 2],"float32"), )
paddle.minimum(Tensor([13, 1, 2],"float32"), Tensor([303858, 2],"float32"), )
paddle.minimum(Tensor([13, 1, 2],"float32"), Tensor([304368, 2],"float32"), )
paddle.minimum(Tensor([13, 1, 2],"float32"), Tensor([321759, 2],"float32"), )
paddle.minimum(Tensor([13, 1, 2],"float32"), Tensor([331452, 2],"float32"), )
paddle.minimum(Tensor([13, 1, 2],"float32"), Tensor([349866, 2],"float32"), )
paddle.minimum(Tensor([1344, 1, 2],"float32"), Tensor([1, 2577, 2],"float32"), )
paddle.minimum(Tensor([136, 1, 2],"float32"), Tensor([1, 7581, 2],"float32"), )
paddle.minimum(Tensor([14, 1, 2],"float32"), Tensor([214848, 2],"float32"), )
paddle.minimum(Tensor([14, 1, 2],"float32"), Tensor([236313, 2],"float32"), )
paddle.minimum(Tensor([14, 1, 2],"float32"), Tensor([236616, 2],"float32"), )
paddle.minimum(Tensor([14, 1, 2],"float32"), Tensor([261681, 2],"float32"), )
paddle.minimum(Tensor([14, 1, 2],"float32"), Tensor([268560, 2],"float32"), )
paddle.minimum(Tensor([14, 1, 2],"float32"), Tensor([349866, 2],"float32"), )
paddle.minimum(Tensor([14, 1, 2],"float32"), Tensor([354501, 2],"float32"), )
paddle.minimum(Tensor([14, 1, 2],"float32"), Tensor([356541, 2],"float32"), )
paddle.minimum(Tensor([14, 1, 2],"float32"), Tensor([408177, 2],"float32"), )
paddle.minimum(Tensor([14, 1, 2],"float32"), Tensor([59220, 2],"float32"), )
paddle.minimum(Tensor([14, 1, 2],"float32"), Tensor([71415, 2],"float32"), )
paddle.minimum(Tensor([1408, 1, 2],"float32"), Tensor([1, 1726, 2],"float32"), )
paddle.minimum(Tensor([1472, 1, 2],"float32"), Tensor([1, 2577, 2],"float32"), )
paddle.minimum(Tensor([15, 1, 2],"float32"), Tensor([202572, 2],"float32"), )
paddle.minimum(Tensor([15, 1, 2],"float32"), Tensor([217413, 2],"float32"), )
paddle.minimum(Tensor([15, 1, 2],"float32"), Tensor([241731, 2],"float32"), )
paddle.minimum(Tensor([15, 1, 2],"float32"), Tensor([257796, 2],"float32"), )
paddle.minimum(Tensor([15, 1, 2],"float32"), Tensor([261681, 2],"float32"), )
paddle.minimum(Tensor([15, 1, 2],"float32"), Tensor([278256, 2],"float32"), )
paddle.minimum(Tensor([15, 1, 2],"float32"), Tensor([283167, 2],"float32"), )
paddle.minimum(Tensor([15, 1, 2],"float32"), Tensor([299250, 2],"float32"), )
paddle.minimum(Tensor([15, 1, 2],"float32"), Tensor([317160, 2],"float32"), )
paddle.minimum(Tensor([15, 1, 2],"float32"), Tensor([322272, 2],"float32"), )
paddle.minimum(Tensor([15, 1, 2],"float32"), Tensor([359613, 2],"float32"), )
paddle.minimum(Tensor([15, 1, 2],"float32"), Tensor([82080, 2],"float32"), )
paddle.minimum(Tensor([152, 1, 2],"float32"), Tensor([1, 7581, 2],"float32"), )
paddle.minimum(Tensor([1579, 1, 2],"float32"), Tensor([21, 2],"float32"), )
paddle.minimum(Tensor([16, 1, 2],"float32"), Tensor([250656, 2],"float32"), )
paddle.minimum(Tensor([16, 1, 2],"float32"), Tensor([252195, 2],"float32"), )
paddle.minimum(Tensor([16, 1, 2],"float32"), Tensor([264978, 2],"float32"), )
paddle.minimum(Tensor([16, 1, 2],"float32"), Tensor([270096, 2],"float32"), )
paddle.minimum(Tensor([16, 1, 2],"float32"), Tensor([299250, 2],"float32"), )
paddle.minimum(Tensor([16, 1, 2],"float32"), Tensor([304368, 2],"float32"), )
paddle.minimum(Tensor([16, 1, 2],"float32"), Tensor([306900, 2],"float32"), )
paddle.minimum(Tensor([16, 1, 2],"float32"), Tensor([310992, 2],"float32"), )
paddle.minimum(Tensor([16, 1, 2],"float32"), Tensor([317160, 2],"float32"), )
paddle.minimum(Tensor([16, 1, 2],"float32"), Tensor([349155, 2],"float32"), )
paddle.minimum(Tensor([16, 1, 2],"float32"), Tensor([375984, 2],"float32"), )
paddle.minimum(Tensor([16, 1, 2],"float32"), Tensor([63135, 2],"float32"), )
paddle.minimum(Tensor([16, 13, 1, 2],"float32"), Tensor([16, 1, 12096, 2],"float32"), )
paddle.minimum(Tensor([16, 13, 1, 2],"float32"), Tensor([16, 1, 8400, 2],"float32"), )
paddle.minimum(Tensor([16, 14, 1, 2],"float32"), Tensor([16, 1, 8400, 2],"float32"), )
paddle.minimum(Tensor([16, 16, 1, 2],"float32"), Tensor([16, 1, 11109, 2],"float32"), )
paddle.minimum(Tensor([16, 16, 1, 2],"float32"), Tensor([16, 1, 12096, 2],"float32"), )
paddle.minimum(Tensor([16, 18, 1, 2],"float32"), Tensor([16, 1, 2541, 2],"float32"), )
paddle.minimum(Tensor([16, 19, 1, 2],"float32"), Tensor([16, 1, 12096, 2],"float32"), )
paddle.minimum(Tensor([16, 19, 1, 2],"float32"), Tensor([16, 1, 5376, 2],"float32"), )
paddle.minimum(Tensor([16, 19, 1, 2],"float32"), Tensor([16, 1, 6069, 2],"float32"), )
paddle.minimum(Tensor([16, 20, 1, 2],"float32"), Tensor([16, 1, 12096, 2],"float32"), )
paddle.minimum(Tensor([16, 21, 1, 2],"float32"), Tensor([16, 1, 7581, 2],"float32"), )
paddle.minimum(Tensor([16, 21, 1, 2],"float32"), Tensor([16, 1, 8400, 2],"float32"), )
paddle.minimum(Tensor([16, 22, 1, 2],"float32"), Tensor([16, 1, 9261, 2],"float32"), )
paddle.minimum(Tensor([16, 23, 1, 2],"float32"), Tensor([16, 1, 10164, 2],"float32"), )
paddle.minimum(Tensor([16, 23, 1, 2],"float32"), Tensor([16, 1, 8400, 2],"float32"), )
paddle.minimum(Tensor([16, 23, 1, 2],"float32"), Tensor([16, 1, 9261, 2],"float32"), )
paddle.minimum(Tensor([16, 25, 1, 2],"float32"), Tensor([16, 1, 9261, 2],"float32"), )
paddle.minimum(Tensor([16, 27, 1, 2],"float32"), Tensor([16, 1, 7581, 2],"float32"), )
paddle.minimum(Tensor([16, 28, 1, 2],"float32"), Tensor([16, 1, 7581, 2],"float32"), )
paddle.minimum(Tensor([16, 30, 1, 2],"float32"), Tensor([16, 1, 9261, 2],"float32"), )
paddle.minimum(Tensor([16, 31, 1, 2],"float32"), Tensor([16, 1, 3549, 2],"float32"), )
paddle.minimum(Tensor([16, 32, 1, 2],"float32"), Tensor([16, 1, 6804, 2],"float32"), )
paddle.minimum(Tensor([16, 32, 1, 2],"float32"), Tensor([16, 1, 7581, 2],"float32"), )
paddle.minimum(Tensor([16, 34, 1, 2],"float32"), Tensor([16, 1, 10164, 2],"float32"), )
paddle.minimum(Tensor([16, 35, 1, 2],"float32"), Tensor([16, 1, 10164, 2],"float32"), )
paddle.minimum(Tensor([16, 36, 1, 2],"float32"), Tensor([16, 1, 6804, 2],"float32"), )
paddle.minimum(Tensor([16, 40, 1, 2],"float32"), Tensor([16, 1, 9261, 2],"float32"), )
paddle.minimum(Tensor([16, 45, 1, 2],"float32"), Tensor([16, 1, 10164, 2],"float32"), )
paddle.minimum(Tensor([16, 50, 1, 2],"float32"), Tensor([16, 1, 7581, 2],"float32"), )
paddle.minimum(Tensor([16, 54, 1, 2],"float32"), Tensor([16, 1, 6069, 2],"float32"), )
paddle.minimum(Tensor([1664, 1, 2],"float32"), Tensor([1, 2577, 2],"float32"), )
paddle.minimum(Tensor([1672, 1, 2],"float32"), Tensor([1, 4725, 2],"float32"), )
paddle.minimum(Tensor([17, 1, 2],"float32"), Tensor([171888, 2],"float32"), )
paddle.minimum(Tensor([17, 1, 2],"float32"), Tensor([202572, 2],"float32"), )
paddle.minimum(Tensor([17, 1, 2],"float32"), Tensor([204624, 2],"float32"), )
paddle.minimum(Tensor([17, 1, 2],"float32"), Tensor([234804, 2],"float32"), )
paddle.minimum(Tensor([17, 1, 2],"float32"), Tensor([262194, 2],"float32"), )
paddle.minimum(Tensor([17, 1, 2],"float32"), Tensor([286464, 2],"float32"), )
paddle.minimum(Tensor([17, 1, 2],"float32"), Tensor([301302, 2],"float32"), )
paddle.minimum(Tensor([17, 1, 2],"float32"), Tensor([304368, 2],"float32"), )
paddle.minimum(Tensor([17, 1, 2],"float32"), Tensor([322272, 2],"float32"), )
paddle.minimum(Tensor([17, 1, 2],"float32"), Tensor([349155, 2],"float32"), )
paddle.minimum(Tensor([18, 1, 2],"float32"), Tensor([211038, 2],"float32"), )
paddle.minimum(Tensor([18, 1, 2],"float32"), Tensor([223827, 2],"float32"), )
paddle.minimum(Tensor([18, 1, 2],"float32"), Tensor([229152, 2],"float32"), )
paddle.minimum(Tensor([18, 1, 2],"float32"), Tensor([255780, 2],"float32"), )
paddle.minimum(Tensor([18, 1, 2],"float32"), Tensor([262194, 2],"float32"), )
paddle.minimum(Tensor([18, 1, 2],"float32"), Tensor([290052, 2],"float32"), )
paddle.minimum(Tensor([18, 1, 2],"float32"), Tensor([294624, 2],"float32"), )
paddle.minimum(Tensor([18, 1, 2],"float32"), Tensor([325113, 2],"float32"), )
paddle.minimum(Tensor([18, 1, 2],"float32"), Tensor([331251, 2],"float32"), )
paddle.minimum(Tensor([18, 1, 2],"float32"), Tensor([333018, 2],"float32"), )
paddle.minimum(Tensor([18, 1, 2],"float32"), Tensor([340176, 2],"float32"), )
paddle.minimum(Tensor([18, 1, 2],"float32"), Tensor([359613, 2],"float32"), )
paddle.minimum(Tensor([18, 1, 2],"float32"), Tensor([369303, 2],"float32"), )
paddle.minimum(Tensor([18, 1, 2],"float32"), Tensor([59250, 2],"float32"), )
paddle.minimum(Tensor([18, 1, 2],"float32"), Tensor([74100, 2],"float32"), )
paddle.minimum(Tensor([19, 1, 2],"float32"), Tensor([227124, 2],"float32"), )
paddle.minimum(Tensor([19, 1, 2],"float32"), Tensor([243474, 2],"float32"), )
paddle.minimum(Tensor([19, 1, 2],"float32"), Tensor([250656, 2],"float32"), )
paddle.minimum(Tensor([19, 1, 2],"float32"), Tensor([279279, 2],"float32"), )
paddle.minimum(Tensor([19, 1, 2],"float32"), Tensor([301302, 2],"float32"), )
paddle.minimum(Tensor([19, 1, 2],"float32"), Tensor([304368, 2],"float32"), )
paddle.minimum(Tensor([19, 1, 2],"float32"), Tensor([322272, 2],"float32"), )
paddle.minimum(Tensor([19, 1, 2],"float32"), Tensor([367059, 2],"float32"), )
paddle.minimum(Tensor([19, 1, 2],"float32"), Tensor([368280, 2],"float32"), )
paddle.minimum(Tensor([19, 1, 2],"float32"), Tensor([56250, 2],"float32"), )
paddle.minimum(Tensor([192, 1, 2],"float32"), Tensor([1, 12096, 2],"float32"), )
paddle.minimum(Tensor([1984, 1, 2],"float32"), Tensor([1, 3060, 2],"float32"), )
paddle.minimum(Tensor([2, 1, 2],"float32"), Tensor([150402, 2],"float32"), )
paddle.minimum(Tensor([2, 1, 2],"float32"), Tensor([217413, 2],"float32"), )
paddle.minimum(Tensor([2, 1, 2],"float32"), Tensor([229152, 2],"float32"), )
paddle.minimum(Tensor([2, 1, 2],"float32"), Tensor([250656, 2],"float32"), )
paddle.minimum(Tensor([2, 1, 2],"float32"), Tensor([369303, 2],"float32"), )
paddle.minimum(Tensor([2, 1, 2],"float32"), Tensor([388740, 2],"float32"), )
paddle.minimum(Tensor([2, 1, 2],"float32"), Tensor([71100, 2],"float32"), )
paddle.minimum(Tensor([2, 105, 1, 2],"float32"), Tensor([2, 1, 6804, 2],"float32"), )
paddle.minimum(Tensor([2, 111, 1, 2],"float32"), Tensor([2, 1, 5376, 2],"float32"), )
paddle.minimum(Tensor([2, 114, 1, 2],"float32"), Tensor([2, 1, 2100, 2],"float32"), )
paddle.minimum(Tensor([2, 119, 1, 2],"float32"), Tensor([2, 1, 10164, 2],"float32"), )
paddle.minimum(Tensor([2, 123, 1, 2],"float32"), Tensor([2, 1, 10164, 2],"float32"), )
paddle.minimum(Tensor([2, 139, 1, 2],"float32"), Tensor([2, 1, 2541, 2],"float32"), )
paddle.minimum(Tensor([2, 15, 1, 2],"float32"), Tensor([2, 1, 2541, 2],"float32"), )
paddle.minimum(Tensor([2, 160, 1, 2],"float32"), Tensor([2, 1, 6804, 2],"float32"), )
paddle.minimum(Tensor([2, 177, 1, 2],"float32"), Tensor([2, 1, 4725, 2],"float32"), )
paddle.minimum(Tensor([2, 179, 1, 2],"float32"), Tensor([2, 1, 6069, 2],"float32"), )
paddle.minimum(Tensor([2, 18, 1, 2],"float32"), Tensor([2, 1, 6069, 2],"float32"), )
paddle.minimum(Tensor([2, 210, 1, 2],"float32"), Tensor([2, 1, 9261, 2],"float32"), )
paddle.minimum(Tensor([2, 23, 1, 2],"float32"), Tensor([2, 1, 4116, 2],"float32"), )
paddle.minimum(Tensor([2, 239, 1, 2],"float32"), Tensor([2, 1, 6069, 2],"float32"), )
paddle.minimum(Tensor([2, 249, 1, 2],"float32"), Tensor([2, 1, 12096, 2],"float32"), )
paddle.minimum(Tensor([2, 25, 1, 2],"float32"), Tensor([2, 1, 8500, 2],"float32"), )
paddle.minimum(Tensor([2, 31, 1, 2],"float32"), Tensor([2, 1, 12096, 2],"float32"), )
paddle.minimum(Tensor([2, 35, 1, 2],"float32"), Tensor([2, 1, 7581, 2],"float32"), )
paddle.minimum(Tensor([2, 37, 1, 2],"float32"), Tensor([2, 1, 10164, 2],"float32"), )
paddle.minimum(Tensor([2, 3888, 1, 2],"float32"), Tensor([2, 1, 50, 2],"float32"), )
paddle.minimum(Tensor([2, 45, 1, 2],"float32"), Tensor([2, 1, 6804, 2],"float32"), )
paddle.minimum(Tensor([2, 46, 1, 2],"float32"), Tensor([2, 1, 8400, 2],"float32"), )
paddle.minimum(Tensor([2, 51, 1, 2],"float32"), Tensor([2, 1, 3549, 2],"float32"), )
paddle.minimum(Tensor([2, 58, 1, 2],"float32"), Tensor([2, 1, 2100, 2],"float32"), )
paddle.minimum(Tensor([2, 60, 1, 2],"float32"), Tensor([2, 1, 4116, 2],"float32"), )
paddle.minimum(Tensor([2, 63, 1, 2],"float32"), Tensor([2, 1, 4725, 2],"float32"), )
paddle.minimum(Tensor([2, 66, 1, 2],"float32"), Tensor([2, 1, 10164, 2],"float32"), )
paddle.minimum(Tensor([2, 66, 1, 2],"float32"), Tensor([2, 1, 2541, 2],"float32"), )
paddle.minimum(Tensor([2, 66, 1, 2],"float32"), Tensor([2, 1, 8400, 2],"float32"), )
paddle.minimum(Tensor([2, 70, 1, 2],"float32"), Tensor([2, 1, 12096, 2],"float32"), )
paddle.minimum(Tensor([2, 78, 1, 2],"float32"), Tensor([2, 1, 11109, 2],"float32"), )
paddle.minimum(Tensor([2, 79, 1, 2],"float32"), Tensor([2, 1, 3549, 2],"float32"), )
paddle.minimum(Tensor([2, 99, 1, 2],"float32"), Tensor([2, 1, 2100, 2],"float32"), )
paddle.minimum(Tensor([20, 1, 2],"float32"), Tensor([242991, 2],"float32"), )
paddle.minimum(Tensor([20, 1, 2],"float32"), Tensor([269586, 2],"float32"), )
paddle.minimum(Tensor([20, 1, 2],"float32"), Tensor([277539, 2],"float32"), )
paddle.minimum(Tensor([20, 1, 2],"float32"), Tensor([331251, 2],"float32"), )
paddle.minimum(Tensor([20, 1, 2],"float32"), Tensor([349866, 2],"float32"), )
paddle.minimum(Tensor([2048, 1, 2],"float32"), Tensor([1, 1360, 2],"float32"), )
paddle.minimum(Tensor([21, 1, 2],"float32"), Tensor([235320, 2],"float32"), )
paddle.minimum(Tensor([21, 1, 2],"float32"), Tensor([244800, 2],"float32"), )
paddle.minimum(Tensor([21, 1, 2],"float32"), Tensor([262428, 2],"float32"), )
paddle.minimum(Tensor([21, 1, 2],"float32"), Tensor([269586, 2],"float32"), )
paddle.minimum(Tensor([21, 1, 2],"float32"), Tensor([295443, 2],"float32"), )
paddle.minimum(Tensor([21, 1, 2],"float32"), Tensor([321759, 2],"float32"), )
paddle.minimum(Tensor([2100, 1, 2],"float32"), Tensor([1, 12096, 2],"float32"), )
paddle.minimum(Tensor([2112, 1, 2],"float32"), Tensor([1, 3060, 2],"float32"), )
paddle.minimum(Tensor([2148, 1, 2],"float32"), Tensor([6, 2],"float32"), )
paddle.minimum(Tensor([22, 1, 2],"float32"), Tensor([222012, 2],"float32"), )
paddle.minimum(Tensor([22, 1, 2],"float32"), Tensor([230202, 2],"float32"), )
paddle.minimum(Tensor([22, 1, 2],"float32"), Tensor([243474, 2],"float32"), )
paddle.minimum(Tensor([22, 1, 2],"float32"), Tensor([356541, 2],"float32"), )
paddle.minimum(Tensor([22, 1, 2],"float32"), Tensor([57000, 2],"float32"), )
paddle.minimum(Tensor([2240, 1, 2],"float32"), Tensor([1, 2577, 2],"float32"), )
paddle.minimum(Tensor([2240, 1, 2],"float32"), Tensor([1, 3060, 2],"float32"), )
paddle.minimum(Tensor([23, 1, 2],"float32"), Tensor([243474, 2],"float32"), )
paddle.minimum(Tensor([23, 1, 2],"float32"), Tensor([249405, 2],"float32"), )
paddle.minimum(Tensor([23, 1, 2],"float32"), Tensor([252195, 2],"float32"), )
paddle.minimum(Tensor([23, 1, 2],"float32"), Tensor([253728, 2],"float32"), )
paddle.minimum(Tensor([23, 1, 2],"float32"), Tensor([294624, 2],"float32"), )
paddle.minimum(Tensor([23, 1, 2],"float32"), Tensor([295443, 2],"float32"), )
paddle.minimum(Tensor([23, 1, 2],"float32"), Tensor([312324, 2],"float32"), )
paddle.minimum(Tensor([23, 1, 2],"float32"), Tensor([322272, 2],"float32"), )
paddle.minimum(Tensor([23, 1, 2],"float32"), Tensor([63135, 2],"float32"), )
paddle.minimum(Tensor([232, 1, 2],"float32"), Tensor([1, 4725, 2],"float32"), )
paddle.minimum(Tensor([24, 1, 2],"float32"), Tensor([236334, 2],"float32"), )
paddle.minimum(Tensor([24, 1, 2],"float32"), Tensor([260865, 2],"float32"), )
paddle.minimum(Tensor([24, 1, 2],"float32"), Tensor([286440, 2],"float32"), )
paddle.minimum(Tensor([24, 1, 2],"float32"), Tensor([310992, 2],"float32"), )
paddle.minimum(Tensor([24, 1, 2],"float32"), Tensor([347820, 2],"float32"), )
paddle.minimum(Tensor([24, 1, 2],"float32"), Tensor([378540, 2],"float32"), )
paddle.minimum(Tensor([24, 1, 2],"float32"), Tensor([87600, 2],"float32"), )
paddle.minimum(Tensor([2432, 1, 2],"float32"), Tensor([1, 3060, 2],"float32"), )
paddle.minimum(Tensor([248, 1, 2],"float32"), Tensor([1, 6804, 2],"float32"), )
paddle.minimum(Tensor([25, 1, 2],"float32"), Tensor([242991, 2],"float32"), )
paddle.minimum(Tensor([25, 1, 2],"float32"), Tensor([369303, 2],"float32"), )
paddle.minimum(Tensor([25, 1, 2],"float32"), Tensor([375984, 2],"float32"), )
paddle.minimum(Tensor([25, 1, 2],"float32"), Tensor([408177, 2],"float32"), )
paddle.minimum(Tensor([256, 1, 2],"float32"), Tensor([1, 10164, 2],"float32"), )
paddle.minimum(Tensor([2560, 1, 2],"float32"), Tensor([1, 1360, 2],"float32"), )
paddle.minimum(Tensor([26, 1, 2],"float32"), Tensor([234804, 2],"float32"), )
paddle.minimum(Tensor([26, 1, 2],"float32"), Tensor([250656, 2],"float32"), )
paddle.minimum(Tensor([26, 1, 2],"float32"), Tensor([313347, 2],"float32"), )
paddle.minimum(Tensor([26, 1, 2],"float32"), Tensor([340176, 2],"float32"), )
paddle.minimum(Tensor([26, 1, 2],"float32"), Tensor([375984, 2],"float32"), )
paddle.minimum(Tensor([2624, 1, 2],"float32"), Tensor([1, 1360, 2],"float32"), )
paddle.minimum(Tensor([264, 1, 2],"float32"), Tensor([1, 9261, 2],"float32"), )
paddle.minimum(Tensor([2651, 1, 2],"float32"), Tensor([11, 2],"float32"), )
paddle.minimum(Tensor([27, 1, 2],"float32"), Tensor([313038, 2],"float32"), )
paddle.minimum(Tensor([27, 1, 2],"float32"), Tensor([327360, 2],"float32"), )
paddle.minimum(Tensor([27, 1, 2],"float32"), Tensor([86940, 2],"float32"), )
paddle.minimum(Tensor([2784, 1, 2],"float32"), Tensor([4, 2],"float32"), )
paddle.minimum(Tensor([28, 1, 2],"float32"), Tensor([188256, 2],"float32"), )
paddle.minimum(Tensor([28, 1, 2],"float32"), Tensor([257796, 2],"float32"), )
paddle.minimum(Tensor([28, 1, 2],"float32"), Tensor([306900, 2],"float32"), )
paddle.minimum(Tensor([28, 1, 2],"float32"), Tensor([320739, 2],"float32"), )
paddle.minimum(Tensor([28, 1, 2],"float32"), Tensor([322272, 2],"float32"), )
paddle.minimum(Tensor([2837, 1, 2],"float32"), Tensor([18, 2],"float32"), )
paddle.minimum(Tensor([29, 1, 2],"float32"), Tensor([331452, 2],"float32"), )
paddle.minimum(Tensor([29, 1, 2],"float32"), Tensor([375984, 2],"float32"), )
paddle.minimum(Tensor([29, 1, 2],"float32"), Tensor([66240, 2],"float32"), )
paddle.minimum(Tensor([292, 1, 2],"float32"), Tensor([1, 2541, 2],"float32"), )
paddle.minimum(Tensor([2944, 1, 2],"float32"), Tensor([1, 1726, 2],"float32"), )
paddle.minimum(Tensor([2944, 1, 2],"float32"), Tensor([1, 3060, 2],"float32"), )
paddle.minimum(Tensor([3, 1, 2],"float32"), Tensor([268560, 2],"float32"), )
paddle.minimum(Tensor([3, 1, 2],"float32"), Tensor([291555, 2],"float32"), )
paddle.minimum(Tensor([3, 1, 2],"float32"), Tensor([325113, 2],"float32"), )
paddle.minimum(Tensor([3, 1, 2],"float32"), Tensor([378540, 2],"float32"), )
paddle.minimum(Tensor([304, 1, 2],"float32"), Tensor([1, 7581, 2],"float32"), )
paddle.minimum(Tensor([304, 1, 2],"float32"), Tensor([1, 8400, 2],"float32"), )
paddle.minimum(Tensor([31, 1, 2],"float32"), Tensor([217413, 2],"float32"), )
paddle.minimum(Tensor([31, 1, 2],"float32"), Tensor([229152, 2],"float32"), )
paddle.minimum(Tensor([31, 1, 2],"float32"), Tensor([236616, 2],"float32"), )
paddle.minimum(Tensor([31, 1, 2],"float32"), Tensor([245823, 2],"float32"), )
paddle.minimum(Tensor([31, 1, 2],"float32"), Tensor([278256, 2],"float32"), )
paddle.minimum(Tensor([31, 1, 2],"float32"), Tensor([291555, 2],"float32"), )
paddle.minimum(Tensor([31, 1, 2],"float32"), Tensor([322272, 2],"float32"), )
paddle.minimum(Tensor([31, 1, 2],"float32"), Tensor([408177, 2],"float32"), )
paddle.minimum(Tensor([32, 1, 2],"float32"), Tensor([208692, 2],"float32"), )
paddle.minimum(Tensor([32, 1, 2],"float32"), Tensor([310992, 2],"float32"), )
paddle.minimum(Tensor([3328, 1, 2],"float32"), Tensor([1, 2577, 2],"float32"), )
paddle.minimum(Tensor([336, 1, 2],"float32"), Tensor([1, 5376, 2],"float32"), )
paddle.minimum(Tensor([34, 1, 2],"float32"), Tensor([223554, 2],"float32"), )
paddle.minimum(Tensor([34, 1, 2],"float32"), Tensor([227124, 2],"float32"), )
paddle.minimum(Tensor([34, 1, 2],"float32"), Tensor([368280, 2],"float32"), )
paddle.minimum(Tensor([344, 1, 2],"float32"), Tensor([1, 6804, 2],"float32"), )
paddle.minimum(Tensor([3456, 1, 2],"float32"), Tensor([1, 3060, 2],"float32"), )
paddle.minimum(Tensor([36, 1, 2],"float32"), Tensor([368280, 2],"float32"), )
paddle.minimum(Tensor([37, 1, 2],"float32"), Tensor([205923, 2],"float32"), )
paddle.minimum(Tensor([380, 1, 2],"float32"), Tensor([1, 9261, 2],"float32"), )
paddle.minimum(Tensor([381, 1, 2],"float32"), Tensor([9, 2],"float32"), )
paddle.minimum(Tensor([384, 1, 2],"float32"), Tensor([1, 5376, 2],"float32"), )
paddle.minimum(Tensor([39, 1, 2],"float32"), Tensor([217413, 2],"float32"), )
paddle.minimum(Tensor([39, 1, 2],"float32"), Tensor([242991, 2],"float32"), )
paddle.minimum(Tensor([39, 1, 2],"float32"), Tensor([246051, 2],"float32"), )
paddle.minimum(Tensor([4, 1, 2],"float32"), Tensor([205923, 2],"float32"), )
paddle.minimum(Tensor([4, 1, 2],"float32"), Tensor([283905, 2],"float32"), )
paddle.minimum(Tensor([4, 1, 2],"float32"), Tensor([299250, 2],"float32"), )
paddle.minimum(Tensor([4, 113, 1, 2],"float32"), Tensor([4, 1, 6804, 2],"float32"), )
paddle.minimum(Tensor([4, 171, 1, 2],"float32"), Tensor([4, 1, 10164, 2],"float32"), )
paddle.minimum(Tensor([4, 47, 1, 2],"float32"), Tensor([4, 1, 10164, 2],"float32"), )
paddle.minimum(Tensor([40, 1, 2],"float32"), Tensor([310992, 2],"float32"), )
paddle.minimum(Tensor([40, 1, 2],"float32"), Tensor([375984, 2],"float32"), )
paddle.minimum(Tensor([400, 1, 2],"float32"), Tensor([1, 12096, 2],"float32"), )
paddle.minimum(Tensor([416, 1, 2],"float32"), Tensor([1, 12096, 2],"float32"), )
paddle.minimum(Tensor([424, 1, 2],"float32"), Tensor([1, 7581, 2],"float32"), )
paddle.minimum(Tensor([432, 1, 2],"float32"), Tensor([1, 11109, 2],"float32"), )
paddle.minimum(Tensor([448, 1, 2],"float32"), Tensor([1, 10164, 2],"float32"), )
paddle.minimum(Tensor([448, 1, 2],"float32"), Tensor([1, 5376, 2],"float32"), )
paddle.minimum(Tensor([452, 1, 2],"float32"), Tensor([1, 6804, 2],"float32"), )
paddle.minimum(Tensor([4562, 1, 2],"float32"), Tensor([135, 2],"float32"), )
paddle.minimum(Tensor([4627, 1, 2],"float32"), Tensor([17, 2],"float32"), )
paddle.minimum(Tensor([48, 1, 2],"float32"), Tensor([205923, 2],"float32"), )
paddle.minimum(Tensor([48, 1, 2],"float32"), Tensor([365211, 2],"float32"), )
paddle.minimum(Tensor([49, 1, 2],"float32"), Tensor([343728, 2],"float32"), )
paddle.minimum(Tensor([49, 1, 2],"float32"), Tensor([369303, 2],"float32"), )
paddle.minimum(Tensor([496, 1, 2],"float32"), Tensor([1, 5376, 2],"float32"), )
paddle.minimum(Tensor([5, 1, 2],"float32"), Tensor([236313, 2],"float32"), )
paddle.minimum(Tensor([5, 1, 2],"float32"), Tensor([250656, 2],"float32"), )
paddle.minimum(Tensor([5, 1, 2],"float32"), Tensor([285444, 2],"float32"), )
paddle.minimum(Tensor([5, 1, 2],"float32"), Tensor([329205, 2],"float32"), )
paddle.minimum(Tensor([5, 1, 2],"float32"), Tensor([343728, 2],"float32"), )
paddle.minimum(Tensor([5, 1, 2],"float32"), Tensor([368280, 2],"float32"), )
paddle.minimum(Tensor([512, 1, 2],"float32"), Tensor([1, 5376, 2],"float32"), )
paddle.minimum(Tensor([5358, 1, 2],"float32"), Tensor([180, 2],"float32"), )
paddle.minimum(Tensor([55, 1, 2],"float32"), Tensor([349866, 2],"float32"), )
paddle.minimum(Tensor([55, 1, 2],"float32"), Tensor([81000, 2],"float32"), )
paddle.minimum(Tensor([5635, 1, 2],"float32"), Tensor([121, 2],"float32"), )
paddle.minimum(Tensor([576, 1, 2],"float32"), Tensor([1, 8400, 2],"float32"), )
paddle.minimum(Tensor([576, 1, 2],"float32"), Tensor([1, 9261, 2],"float32"), )
paddle.minimum(Tensor([6, 1, 2],"float32"), Tensor([220968, 2],"float32"), )
paddle.minimum(Tensor([6, 1, 2],"float32"), Tensor([242991, 2],"float32"), )
paddle.minimum(Tensor([6, 1, 2],"float32"), Tensor([247086, 2],"float32"), )
paddle.minimum(Tensor([6, 1, 2],"float32"), Tensor([261888, 2],"float32"), )
paddle.minimum(Tensor([6, 1, 2],"float32"), Tensor([268560, 2],"float32"), )
paddle.minimum(Tensor([6, 1, 2],"float32"), Tensor([339150, 2],"float32"), )
paddle.minimum(Tensor([6, 1, 2],"float32"), Tensor([80640, 2],"float32"), )
paddle.minimum(Tensor([624, 1, 2],"float32"), Tensor([1, 2541, 2],"float32"), )
paddle.minimum(Tensor([624, 1, 2],"float32"), Tensor([1, 3549, 2],"float32"), )
paddle.minimum(Tensor([64, 16, 1, 2],"float32"), Tensor([64, 1, 2577, 2],"float32"), )
paddle.minimum(Tensor([64, 18, 1, 2],"float32"), Tensor([64, 1, 1360, 2],"float32"), )
paddle.minimum(Tensor([64, 18, 1, 2],"float32"), Tensor([64, 1, 3060, 2],"float32"), )
paddle.minimum(Tensor([64, 19, 1, 2],"float32"), Tensor([64, 1, 2577, 2],"float32"), )
paddle.minimum(Tensor([64, 22, 1, 2],"float32"), Tensor([64, 1, 3060, 2],"float32"), )
paddle.minimum(Tensor([64, 23, 1, 2],"float32"), Tensor([64, 1, 1360, 2],"float32"), )
paddle.minimum(Tensor([64, 23, 1, 2],"float32"), Tensor([64, 1, 2577, 2],"float32"), )
paddle.minimum(Tensor([64, 24, 1, 2],"float32"), Tensor([64, 1, 3060, 2],"float32"), )
paddle.minimum(Tensor([64, 26, 1, 2],"float32"), Tensor([64, 1, 3060, 2],"float32"), )
paddle.minimum(Tensor([64, 27, 1, 2],"float32"), Tensor([64, 1, 3060, 2],"float32"), )
paddle.minimum(Tensor([64, 31, 1, 2],"float32"), Tensor([64, 1, 2125, 2],"float32"), )
paddle.minimum(Tensor([64, 32, 1, 2],"float32"), Tensor([64, 1, 1360, 2],"float32"), )
paddle.minimum(Tensor([64, 37, 1, 2],"float32"), Tensor([64, 1, 2577, 2],"float32"), )
paddle.minimum(Tensor([64, 38, 1, 2],"float32"), Tensor([64, 1, 3060, 2],"float32"), )
paddle.minimum(Tensor([64, 39, 1, 2],"float32"), Tensor([64, 1, 2577, 2],"float32"), )
paddle.minimum(Tensor([64, 41, 1, 2],"float32"), Tensor([64, 1, 1360, 2],"float32"), )
paddle.minimum(Tensor([64, 43, 1, 2],"float32"), Tensor([64, 1, 3060, 2],"float32"), )
paddle.minimum(Tensor([64, 51, 1, 2],"float32"), Tensor([64, 1, 3060, 2],"float32"), )
paddle.minimum(Tensor([64, 53, 1, 2],"float32"), Tensor([64, 1, 1360, 2],"float32"), )
paddle.minimum(Tensor([64, 53, 1, 2],"float32"), Tensor([64, 1, 1726, 2],"float32"), )
paddle.minimum(Tensor([64, 54, 1, 2],"float32"), Tensor([64, 1, 3060, 2],"float32"), )
paddle.minimum(Tensor([640, 1, 2],"float32"), Tensor([1, 3549, 2],"float32"), )
paddle.minimum(Tensor([652, 1, 2],"float32"), Tensor([1, 4116, 2],"float32"), )
paddle.minimum(Tensor([668, 1, 2],"float32"), Tensor([1, 8400, 2],"float32"), )
paddle.minimum(Tensor([688, 1, 2],"float32"), Tensor([1, 10164, 2],"float32"), )
paddle.minimum(Tensor([7, 1, 2],"float32"), Tensor([193368, 2],"float32"), )
paddle.minimum(Tensor([7, 1, 2],"float32"), Tensor([236334, 2],"float32"), )
paddle.minimum(Tensor([7, 1, 2],"float32"), Tensor([283905, 2],"float32"), )
paddle.minimum(Tensor([7, 1, 2],"float32"), Tensor([285444, 2],"float32"), )
paddle.minimum(Tensor([7, 1, 2],"float32"), Tensor([286977, 2],"float32"), )
paddle.minimum(Tensor([7, 1, 2],"float32"), Tensor([317160, 2],"float32"), )
paddle.minimum(Tensor([7, 1, 2],"float32"), Tensor([359613, 2],"float32"), )
paddle.minimum(Tensor([7, 1, 2],"float32"), Tensor([44220, 2],"float32"), )
paddle.minimum(Tensor([7, 1, 2],"float32"), Tensor([73920, 2],"float32"), )
paddle.minimum(Tensor([7, 1, 2],"float32"), Tensor([81000, 2],"float32"), )
paddle.minimum(Tensor([7, 1, 2],"float32"), Tensor([86940, 2],"float32"), )
paddle.minimum(Tensor([72, 1, 2],"float32"), Tensor([1, 6069, 2],"float32"), )
paddle.minimum(Tensor([768, 1, 2],"float32"), Tensor([1, 6804, 2],"float32"), )
paddle.minimum(Tensor([792, 1, 2],"float32"), Tensor([24, 2],"float32"), )
paddle.minimum(Tensor([8, 1, 2],"float32"), Tensor([230202, 2],"float32"), )
paddle.minimum(Tensor([8, 1, 2],"float32"), Tensor([234804, 2],"float32"), )
paddle.minimum(Tensor([8, 1, 2],"float32"), Tensor([260865, 2],"float32"), )
paddle.minimum(Tensor([8, 1, 2],"float32"), Tensor([261888, 2],"float32"), )
paddle.minimum(Tensor([8, 1, 2],"float32"), Tensor([349155, 2],"float32"), )
paddle.minimum(Tensor([8, 1, 2],"float32"), Tensor([379050, 2],"float32"), )
paddle.minimum(Tensor([8, 12, 1, 2],"float32"), Tensor([8, 1, 6804, 2],"float32"), )
paddle.minimum(Tensor([8, 15, 1, 2],"float32"), Tensor([8, 1, 6069, 2],"float32"), )
paddle.minimum(Tensor([8, 15, 1, 2],"float32"), Tensor([8, 1, 8400, 2],"float32"), )
paddle.minimum(Tensor([8, 17328, 1, 2],"float32"), Tensor([8, 1, 50, 2],"float32"), )
paddle.minimum(Tensor([8, 18, 1, 2],"float32"), Tensor([8, 1, 4116, 2],"float32"), )
paddle.minimum(Tensor([8, 20, 1, 2],"float32"), Tensor([8, 1, 3549, 2],"float32"), )
paddle.minimum(Tensor([8, 20, 1, 2],"float32"), Tensor([8, 1, 6069, 2],"float32"), )
paddle.minimum(Tensor([8, 22, 1, 2],"float32"), Tensor([8, 1, 4725, 2],"float32"), )
paddle.minimum(Tensor([8, 23, 1, 2],"float32"), Tensor([8, 1, 11109, 2],"float32"), )
paddle.minimum(Tensor([8, 25, 1, 2],"float32"), Tensor([8, 1, 6069, 2],"float32"), )
paddle.minimum(Tensor([8, 26, 1, 2],"float32"), Tensor([8, 1, 3549, 2],"float32"), )
paddle.minimum(Tensor([8, 27, 1, 2],"float32"), Tensor([8, 1, 4725, 2],"float32"), )
paddle.minimum(Tensor([8, 28, 1, 2],"float32"), Tensor([8, 1, 9261, 2],"float32"), )
paddle.minimum(Tensor([8, 30, 1, 2],"float32"), Tensor([8, 1, 6804, 2],"float32"), )
paddle.minimum(Tensor([8, 35, 1, 2],"float32"), Tensor([8, 1, 10164, 2],"float32"), )
paddle.minimum(Tensor([8, 39, 1, 2],"float32"), Tensor([8, 1, 3549, 2],"float32"), )
paddle.minimum(Tensor([8, 41, 1, 2],"float32"), Tensor([8, 1, 9261, 2],"float32"), )
paddle.minimum(Tensor([8, 432, 1, 2],"float32"), Tensor([8, 1, 50, 2],"float32"), )
paddle.minimum(Tensor([8, 45, 1, 2],"float32"), Tensor([8, 1, 10164, 2],"float32"), )
paddle.minimum(Tensor([8, 46, 1, 2],"float32"), Tensor([8, 1, 8400, 2],"float32"), )
paddle.minimum(Tensor([8, 8112, 1, 2],"float32"), Tensor([8, 1, 50, 2],"float32"), )
paddle.minimum(Tensor([8, 9, 1, 2],"float32"), Tensor([8, 1, 12096, 2],"float32"), )
paddle.minimum(Tensor([8, 9, 1, 2],"float32"), Tensor([8, 1, 7581, 2],"float32"), )
paddle.minimum(Tensor([8, 9408, 1, 2],"float32"), Tensor([8, 1, 50, 2],"float32"), )
paddle.minimum(Tensor([88, 1, 2],"float32"), Tensor([1, 3549, 2],"float32"), )
paddle.minimum(Tensor([9, 1, 2],"float32"), Tensor([242991, 2],"float32"), )
paddle.minimum(Tensor([9, 1, 2],"float32"), Tensor([268560, 2],"float32"), )
paddle.minimum(Tensor([9, 1, 2],"float32"), Tensor([279300, 2],"float32"), )
paddle.minimum(Tensor([9, 1, 2],"float32"), Tensor([354501, 2],"float32"), )
paddle.minimum(Tensor([9, 1, 2],"float32"), Tensor([377514, 2],"float32"), )
paddle.minimum(Tensor([96, 1, 2],"float32"), Tensor([1, 10164, 2],"float32"), )
paddle.nextafter(Tensor([],"float32"), Tensor([2, 3, 4],"float32"), )
paddle.nn.functional.conv1d(Tensor([8, 400, 100],"float32"), Tensor([256, 100, 3],"float16"), bias=Tensor([256],"float16"), padding=1, stride=list[1,], dilation=list[1,], groups=4, data_format="NCL", )
paddle.nn.functional.conv2d_transpose(Tensor([4, 16, 16, 4],"float32"), Tensor([4, 3, 3, 3],"float32"), Tensor([6],"float32"), output_size=None, padding="same", stride=1, dilation=1, groups=2, data_format="NHWC", )
paddle.nn.functional.conv2d_transpose(Tensor([64, 64, 43, 19],"float32"), Tensor([64, 32, 5, 5],"float32"), bias=Tensor([32],"float32"), padding=2, output_padding=0, stride=list[1,1,], dilation=list[1,1,], groups=1, output_size=None, data_format="NCHW", )
paddle.nn.functional.cosine_similarity(Tensor([23, 12, 1],"float32"), Tensor([23, 1, 10],"float32"), axis=2, eps=1e-06, )
paddle.nn.functional.cosine_similarity(Tensor([5, 1, 3],"float64"), Tensor([1, 3],"float64"), axis=0, eps=1e-08, )
paddle.nn.functional.embedding(Tensor([1, 300, 4096],"int64"), Tensor([10, 3],"float32"), padding_idx=1, )
paddle.nn.functional.embedding(Tensor([112, 28],"int64"), weight=Tensor([33712, 512],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([12, 7],"int32"), weight=Tensor([84, 32],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([12, 7],"int32"), weight=Tensor([99, 32],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([120, 25],"int64"), weight=Tensor([33712, 512],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([120, 28],"int64"), weight=Tensor([33712, 512],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([120, 31],"int64"), weight=Tensor([33712, 512],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([128, 29],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([13, 10],"int32"), weight=Tensor([81, 24],"float32"), padding_idx=1, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([13, 10],"int32"), weight=Tensor([99, 32],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([13, 3],"int32"), weight=Tensor([81, 24],"float32"), padding_idx=1, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([13, 3],"int32"), weight=Tensor([99, 32],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([13, 4, 7],"int32"), weight=Tensor([99, 16],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([13, 4, 7],"int32"), weight=Tensor([99, 32],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([13, 7],"int32"), weight=Tensor([100, 16],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([13, 7],"int32"), weight=Tensor([103, 24],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([13, 7],"int32"), weight=Tensor([109, 128],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([13, 7],"int32"), weight=Tensor([109, 32],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([13, 7],"int32"), weight=Tensor([109, 32],"float32"), padding_idx=1, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([13, 7],"int32"), weight=Tensor([109, 32],"float32"), padding_idx=3, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([13, 7],"int32"), weight=Tensor([109, 64],"float32"), padding_idx=1, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([13, 7],"int32"), weight=Tensor([110, 16],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([13, 7],"int32"), weight=Tensor([81, 24],"float32"), padding_idx=1, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([13, 7],"int32"), weight=Tensor([84, 128],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([13, 7],"int32"), weight=Tensor([84, 32],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([13, 7],"int32"), weight=Tensor([84, 32],"float32"), padding_idx=3, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([13, 7],"int32"), weight=Tensor([99, 128],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([13, 7],"int32"), weight=Tensor([99, 16],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([13, 7],"int32"), weight=Tensor([99, 32],"float32"), padding_idx=3, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([13, 7],"int64"), weight=Tensor([128, 32],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([13, 8],"int32"), weight=Tensor([84, 32],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([136, 30],"int64"), weight=Tensor([33712, 512],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([144, 25],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([144, 25],"int64"), weight=Tensor([33712, 512],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([152, 33],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([16, 109],"int64"), weight=Tensor([33712, 512],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([16, 149],"int64"), weight=Tensor([33712, 512],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([16, 173],"int64"), weight=Tensor([33712, 512],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([16, 62],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([160, 24],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([160, 28],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([160, 29],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([168, 23],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([168, 24],"int64"), weight=Tensor([33712, 512],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([168, 26],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([176, 16],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([176, 21],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([176, 22],"int64"), weight=Tensor([33712, 512],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([176, 23],"int64"), weight=Tensor([33712, 512],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([176, 27],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([176, 29],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([184, 21],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([184, 23],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([192, 15],"int64"), weight=Tensor([33712, 512],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([192, 22],"int64"), weight=Tensor([6629, 384],"float16"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([2, 4],"int64"), Tensor([10, 4],"float32"), padding_idx=2, scale_grad_by_freq=False, )
paddle.nn.functional.embedding(Tensor([2, 4],"int64"), Tensor([10, 4],"float32"), padding_idx=2, scale_grad_by_freq=True, )
paddle.nn.functional.embedding(Tensor([200, 20],"int64"), weight=Tensor([33712, 512],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([208, 18],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([224, 14],"int64"), weight=Tensor([33712, 512],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([24, 104],"int64"), weight=Tensor([33712, 512],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([24, 132],"int64"), weight=Tensor([33712, 512],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([24, 137],"int64"), weight=Tensor([33712, 512],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([24, 139],"int64"), weight=Tensor([33712, 512],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([24, 149],"int64"), weight=Tensor([33712, 512],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([24, 160],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([24, 174],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([240, 14],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([240, 9],"int64"), weight=Tensor([33712, 512],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([256, 15],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([264, 12],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([272, 11],"int64"), weight=Tensor([33712, 512],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([296, 14],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([3, 1],"int64"), weight=Tensor([10, 3],"float32"), padding_idx=9, max_norm=0.5, norm_type=3.0, sparse=True, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([3, 1],"int64"), weight=Tensor([10, 3],"float32"), padding_idx=9, max_norm=None, norm_type=2.0, sparse=True, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([3, 4],"int64"), Tensor([10, 4],"float64"), padding_idx=-4, )
paddle.nn.functional.embedding(Tensor([3, 4],"int64"), Tensor([10, 4],"float64"), padding_idx=9, )
paddle.nn.functional.embedding(Tensor([32, 100],"int64"), weight=Tensor([33712, 512],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([32, 101],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([32, 110],"int64"), weight=Tensor([33712, 512],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([32, 117],"int64"), weight=Tensor([33712, 512],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([32, 131],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([32, 132],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([32, 150],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([32, 154],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([32, 159],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([32, 512],"int64"), weight=Tensor([40000, 768],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([32, 71],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([32, 74],"int64"), weight=Tensor([33712, 512],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([32, 80],"int64"), weight=Tensor([33712, 512],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([32, 83],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([32, 89],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([32, 90],"int64"), weight=Tensor([33712, 512],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([32, 93],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([32, 95],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([336, 10],"int64"), weight=Tensor([33712, 512],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([352, 11],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([360, 12],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([360, 13],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([39, 7],"int32"), weight=Tensor([99, 32],"float32"), padding_idx=3, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([40, 108],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([40, 115],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([40, 118],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([40, 122],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([40, 89],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([40, 94],"int64"), weight=Tensor([33712, 512],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([40, 95],"int64"), weight=Tensor([33712, 512],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([408, 12],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([424, 12],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([464, 8],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([48, 32],"int64"), weight=Tensor([33712, 512],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([48, 54],"int64"), weight=Tensor([33712, 512],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([48, 64],"int64"), weight=Tensor([33712, 512],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([48, 78],"int64"), weight=Tensor([33712, 512],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([48, 95],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([512, 7],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([52, 7],"int32"), weight=Tensor([109, 32],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([52, 7],"int32"), weight=Tensor([109, 64],"float32"), padding_idx=1, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([52, 7],"int32"), weight=Tensor([84, 32],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([52, 7],"int32"), weight=Tensor([84, 64],"float32"), padding_idx=1, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([52, 7],"int32"), weight=Tensor([99, 128],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([52, 7],"int32"), weight=Tensor([99, 16],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([52, 7],"int32"), weight=Tensor([99, 32],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([52, 7],"int32"), weight=Tensor([99, 64],"float32"), padding_idx=1, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([52, 8],"int32"), weight=Tensor([99, 32],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([56, 28],"int64"), weight=Tensor([33712, 512],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([56, 53],"int64"), weight=Tensor([33712, 512],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([56, 56],"int64"), weight=Tensor([33712, 512],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([56, 62],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([56, 78],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([56, 89],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([56, 90],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([6, 3],"int32"), Tensor([10, 4],"float32"), padding_idx=5, scale_grad_by_freq=False, )
paddle.nn.functional.embedding(Tensor([6, 3],"int32"), Tensor([10, 4],"float32"), padding_idx=5, scale_grad_by_freq=True, )
paddle.nn.functional.embedding(Tensor([624, 8],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([64, 30],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([64, 48],"int64"), weight=Tensor([33712, 512],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([64, 53],"int64"), weight=Tensor([33712, 512],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([64, 55],"int64"), weight=Tensor([33712, 512],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([64, 60],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([64, 61],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([64, 62],"int64"), weight=Tensor([33712, 512],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([64, 70],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([64, 78],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([64, 80],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([72, 28],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([72, 48],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([72, 48],"int64"), weight=Tensor([33712, 512],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([72, 50],"int64"), weight=Tensor([33712, 512],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([72, 51],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([72, 53],"int64"), weight=Tensor([33712, 512],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([72, 70],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([728, 7],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([80, 42],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([80, 45],"int64"), weight=Tensor([33712, 512],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([80, 51],"int64"), weight=Tensor([33712, 512],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([80, 52],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([80, 54],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([88, 14],"int64"), weight=Tensor([33712, 512],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([88, 31],"int64"), weight=Tensor([33712, 512],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([88, 33],"int64"), weight=Tensor([33712, 512],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([88, 34],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([88, 50],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([96, 22],"int64"), weight=Tensor([6629, 384],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([96, 37],"int64"), weight=Tensor([33712, 512],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([96, 48],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.embedding(Tensor([96, 52],"int64"), weight=Tensor([33712, 1024],"float32"), padding_idx=0, max_norm=None, norm_type=2.0, sparse=False, scale_grad_by_freq=False, name=None, )
paddle.nn.functional.grid_sample(Tensor([1, 128, 128, 128],"float32"), Tensor([1, 128, 128, 2],"float32"), )
paddle.nn.functional.grid_sample(Tensor([1, 128, 128, 128],"float32"), Tensor([1, 256, 256, 2],"float32"), )
paddle.nn.functional.grid_sample(Tensor([1, 4, 280, 350],"float32"), Tensor([1, 280, 350, 2],"float32"), mode="nearest", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([1, 4, 280, 350],"float32"), Tensor([1, 298, 364, 2],"float32"), mode="nearest", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([1, 4, 280, 350],"float32"), Tensor([1, 368, 416, 2],"float32"), mode="nearest", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([1, 4, 298, 364],"float32"), Tensor([1, 352, 407, 2],"float32"), mode="nearest", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([1, 4, 368, 416],"float32"), Tensor([1, 391, 436, 2],"float32"), mode="nearest", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([1, 4, 400, 300],"float32"), Tensor([1, 400, 300, 2],"float32"), mode="nearest", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([1, 4, 400, 300],"float32"), Tensor([1, 430, 340, 2],"float32"), mode="nearest", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([1, 4, 400, 300],"float32"), Tensor([1, 434, 346, 2],"float32"), mode="nearest", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([1, 4, 430, 340],"float32"), Tensor([1, 477, 401, 2],"float32"), mode="nearest", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([1, 4, 434, 346],"float32"), Tensor([1, 466, 386, 2],"float32"), mode="nearest", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([100, 1, 176, 176],"float32"), Tensor([100, 1, 37632, 2],"float32"), align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([4, 128, 128, 128],"float16"), Tensor([4, 128, 128, 2],"float16"), )
paddle.nn.functional.grid_sample(Tensor([4, 128, 128, 128],"float16"), Tensor([4, 256, 256, 2],"float16"), )
paddle.nn.functional.grid_sample(Tensor([4, 128, 128, 128],"float32"), Tensor([4, 128, 128, 2],"float32"), )
paddle.nn.functional.grid_sample(Tensor([4, 128, 128, 128],"float32"), Tensor([4, 256, 256, 2],"float32"), )
paddle.nn.functional.grid_sample(Tensor([512, 3, 64, 256],"float32"), Tensor([512, 32, 100, 2],"float32"), )
paddle.nn.functional.grid_sample(Tensor([8, 32, 18, 25],"float32"), Tensor([8, 38367, 4, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.gumbel_softmax(Tensor([2, 3, 4, 5],"float32"), hard=True, )
paddle.nn.functional.gumbel_softmax(Tensor([20, 10],"float64"), hard=False, )
paddle.nn.functional.gumbel_softmax(Tensor([20, 10],"float64"), hard=True, )
paddle.nn.functional.gumbel_softmax(x=Tensor([2, 3, 4],"float64"), )
paddle.nn.functional.gumbel_softmax(x=Tensor([2, 3, 4],"float64"), temperature=4.0, )
paddle.nn.functional.gumbel_softmax(x=Tensor([2, 3, 4],"float64"), temperature=4.0, hard=True, )
paddle.nn.functional.gumbel_softmax(x=Tensor([3, 4, 5],"float64"), temperature=4.0, hard=True, axis=0, )
paddle.nn.functional.gumbel_softmax(x=Tensor([3, 4],"float64"), )
paddle.nn.functional.gumbel_softmax(x=Tensor([4],"float32"), )
paddle.nn.functional.gumbel_softmax(x=Tensor([4],"float64"), )
paddle.nn.functional.hardsigmoid(Tensor([1, 120, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([1, 480, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([1, 672, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([1, 72, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([1, 960, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([1024, 120, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([1024, 144, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([1024, 16, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([1024, 240, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([1024, 288, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([1024, 576, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([1024, 96, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([128, 120, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([128, 1200, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([128, 152, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([128, 168, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([128, 232, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([128, 24, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([128, 240, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([128, 336, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([128, 360, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([128, 40, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([128, 480, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([128, 504, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([128, 56, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([128, 600, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([128, 64, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([128, 672, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([128, 72, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([128, 720, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([128, 840, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([128, 88, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([128, 960, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([16, 240, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([16, 336, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([16, 40, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([16, 480, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([16, 64, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([256, 104, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([256, 112, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([256, 120, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([256, 144, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([256, 152, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([256, 16, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([256, 184, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([256, 200, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([256, 216, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([256, 24, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([256, 240, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([256, 288, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([256, 304, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([256, 32, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([256, 336, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([256, 360, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([256, 40, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([256, 432, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([256, 48, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([256, 480, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([256, 576, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([256, 64, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([256, 72, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([256, 720, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([256, 8, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([256, 88, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([256, 96, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([4, 120, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([4, 128, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([4, 16, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([4, 24, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([4, 240, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([4, 384, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([4, 480, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([4, 672, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([4, 72, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([4, 768, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([4, 96, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([4, 960, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([512, 120, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([512, 144, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([512, 16, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([512, 240, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([512, 288, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([512, 48, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([512, 576, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([512, 64, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([512, 72, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([512, 8, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([512, 96, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([60, 240, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([60, 336, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([60, 40, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([60, 480, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([60, 64, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([64, 240, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([64, 336, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([64, 40, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([64, 480, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([64, 64, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([640, 120, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([640, 480, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([640, 672, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([640, 72, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([640, 960, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([8, 120, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([8, 24, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([8, 480, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([8, 672, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([8, 72, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([8, 96, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.hardsigmoid(Tensor([8, 960, 1, 1],"float32"), slope=0.2, offset=0.5, )
paddle.nn.functional.interpolate(Tensor([1, 2, 128, 128],"float16"), list[512,512,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([2, 2, 128, 128],"float16"), list[512,512,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([4, 128, 32, 32],"float16"), list[128,128,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([4, 128, 4, 4],"float16"), list[16,32,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([4, 19, 128, 256],"float16"), list[512,1024,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([4, 19, 256, 256],"float16"), list[1024,1024,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([4, 19, 256, 256],"float16"), size=list[1024,1024,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([4, 2, 128, 128],"float16"), list[512,512,], mode="bilinear", align_corners=False, data_format="NCHW", )
paddle.nn.functional.interpolate(Tensor([4, 256, 16, 16],"float16"), size=list[64,64,], mode="bilinear", )
paddle.nn.functional.interpolate(Tensor([4, 256, 64, 64],"float16"), size=list[256,256,], mode="bilinear", align_corners=False, )
paddle.nn.functional.interpolate(Tensor([512, 40, 4, 3],"float16"), size=None, scale_factor=8, mode="nearest", align_corners=False, align_mode=0, data_format="NCHW", name=None, )
paddle.nn.functional.linear(x=Tensor([1, 10],"float16"), weight=Tensor([10, 10],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([1, 10],"float16"), weight=Tensor([10, 1],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([10, 10],"float16"), weight=Tensor([10, 10],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([170628, 20, 64],"float16"), weight=Tensor([64, 64],"float32"), bias=None, name=None, )
paddle.nn.functional.linear(x=Tensor([2, 14, 768],"bfloat16"), weight=Tensor([768, 8],"float32"), bias=Tensor([8],"float32"), name=None, )
paddle.nn.functional.linear(x=Tensor([29151, 100, 64],"float16"), weight=Tensor([64, 64],"float32"), bias=None, name=None, )
paddle.nn.functional.rnnt_loss(Tensor([3, 4, 3, 3],"float32"), Tensor([3, 2],"int32"), Tensor([3],"int32"), Tensor([3],"int32"), blank=0, fastemit_lambda=0.0, reduction="none", name=None, )
paddle.nn.functional.rnnt_loss(Tensor([3, 4, 3, 3],"float32"), Tensor([3, 2],"int32"), Tensor([3],"int32"), Tensor([3],"int32"), blank=0, reduction="mean", fastemit_lambda=0.0, )
paddle.nn.functional.rnnt_loss(Tensor([3, 4, 3, 3],"float32"), Tensor([3, 2],"int32"), Tensor([3],"int32"), Tensor([3],"int32"), blank=0, reduction="sum", fastemit_lambda=0.0, )
paddle.nn.functional.rrelu(Tensor([1, 2, 3, 4],"float64"), lower=0.05, upper=0.25, training=True, )
paddle.prod(x=Tensor([2, 2],"int32"), )
paddle.put_along_axis(Tensor([3, 5],"float32"), Tensor([2, 3],"int64"), Tensor([2, 5],"float32"), 1, "assign", True, False, )
paddle.signal.istft(Tensor([257, 471],"complex128"), 512, None, None, Tensor([512],"float64"), True, False, True, None, False, )
paddle.sort(Tensor([3, 10000],"float32"), descending=True, )
paddle.sort(Tensor([35968],"float32"), 0, )
paddle.sort(Tensor([380086],"float32"), )
paddle.sort(Tensor([401899],"float32"), )
paddle.sort(Tensor([403187],"float32"), )
paddle.sort(Tensor([406580],"float32"), )
paddle.sort(Tensor([5, 12000],"float32"), descending=True, )
paddle.std(Tensor([],"float32"), )
paddle.std(Tensor([],"float32"), list[], )
paddle.strided_slice(Tensor([6, 6],"int64"), axes=list[0,1,], starts=list[8,-1,], ends=list[1,-5,], strides=list[-2,-3,], )
paddle.strided_slice(Tensor([6, 7, 8],"int64"), axes=list[0,2,], starts=list[7,-1,], ends=list[2,-5,], strides=list[-2,-3,], )
paddle.strided_slice(x=Tensor([5, 8, 6, 4, 2, 6],"float64"), axes=list[1,2,5,], starts=list[-3,3,4,], ends=list[3,0,1,], strides=list[-1,-1,-2,], )
paddle.strided_slice(x=Tensor([5, 8, 6, 4, 2, 6],"float64"), axes=list[1,2,5,], starts=list[6,5,4,], ends=list[2,0,1,], strides=list[-1,-2,-3,], )
paddle.sum(Tensor([100, 102144],"float16"), axis=1, )
paddle.sum(Tensor([100, 104832],"float16"), axis=1, )
paddle.sum(Tensor([100, 60800],"float16"), axis=1, )
paddle.sum(Tensor([100, 62400],"float16"), axis=1, )
paddle.sum(Tensor([100, 63232],"float16"), axis=1, )
paddle.sum(Tensor([100, 67200],"float16"), axis=1, )
paddle.sum(Tensor([100, 69888],"float16"), axis=1, )
paddle.sum(Tensor([100, 76032],"float16"), axis=1, )
paddle.sum(Tensor([100, 77824],"float16"), axis=1, )
paddle.sum(Tensor([100, 78144],"float16"), axis=1, )
paddle.sum(Tensor([100, 82688],"float16"), axis=1, )
paddle.sum(Tensor([100, 84864],"float16"), axis=1, )
paddle.sum(Tensor([100, 86016],"float16"), axis=1, )
paddle.sum(Tensor([100, 87552],"float16"), axis=1, )
paddle.sum(Tensor([100, 89216],"float16"), axis=1, )
paddle.sum(Tensor([100, 89984],"float16"), axis=1, )
paddle.sum(Tensor([100, 91392],"float16"), axis=1, )
paddle.sum(Tensor([100, 92416],"float16"), axis=1, )
paddle.sum(Tensor([1000, 1000],"float16"), )
paddle.sum(Tensor([1000, 10],"float16"), )
paddle.sum(Tensor([1000],"float16"), )
paddle.sum(Tensor([1024, 1000],"float16"), axis=-1, )
paddle.sum(Tensor([1024, 1024],"float16"), )
paddle.sum(Tensor([1024, 10],"float16"), )
paddle.sum(Tensor([1024, 2],"float16"), )
paddle.sum(Tensor([1024],"float16"), )
paddle.sum(Tensor([104, 102144],"float16"), axis=1, )
paddle.sum(Tensor([104, 54400],"float16"), axis=1, )
paddle.sum(Tensor([104, 60800],"float16"), axis=1, )
paddle.sum(Tensor([104, 65600],"float16"), axis=1, )
paddle.sum(Tensor([104, 67200],"float16"), axis=1, )
paddle.sum(Tensor([104, 73984],"float16"), axis=1, )
paddle.sum(Tensor([104, 76160],"float16"), axis=1, )
paddle.sum(Tensor([104, 78336],"float16"), axis=1, )
paddle.sum(Tensor([104, 82688],"float16"), axis=1, )
paddle.sum(Tensor([104, 84480],"float16"), axis=1, )
paddle.sum(Tensor([104, 84864],"float16"), axis=1, )
paddle.sum(Tensor([104, 86016],"float16"), axis=1, )
paddle.sum(Tensor([104, 87360],"float16"), axis=1, )
paddle.sum(Tensor([104, 87552],"float16"), axis=1, )
paddle.sum(Tensor([104, 89984],"float16"), axis=1, )
paddle.sum(Tensor([104, 91392],"float16"), axis=1, )
paddle.sum(Tensor([104, 92416],"float16"), axis=1, )
paddle.sum(Tensor([104, 97088],"float16"), axis=1, )
paddle.sum(Tensor([1048576],"float16"), )
paddle.sum(Tensor([108, 102144],"float16"), axis=1, )
paddle.sum(Tensor([108, 54400],"float16"), axis=1, )
paddle.sum(Tensor([108, 57600],"float16"), axis=1, )
paddle.sum(Tensor([108, 60800],"float16"), axis=1, )
paddle.sum(Tensor([108, 62400],"float16"), axis=1, )
paddle.sum(Tensor([108, 67200],"float16"), axis=1, )
paddle.sum(Tensor([108, 70528],"float16"), axis=1, )
paddle.sum(Tensor([108, 73984],"float16"), axis=1, )
paddle.sum(Tensor([108, 82688],"float16"), axis=1, )
paddle.sum(Tensor([108, 85120],"float16"), axis=1, )
paddle.sum(Tensor([108, 87040],"float16"), axis=1, )
paddle.sum(Tensor([108, 89984],"float16"), axis=1, )
paddle.sum(Tensor([108, 91392],"float16"), axis=1, )
paddle.sum(Tensor([108, 91840],"float16"), axis=1, )
paddle.sum(Tensor([108, 92416],"float16"), axis=1, )
paddle.sum(Tensor([108, 94848],"float16"), axis=1, )
paddle.sum(Tensor([112, 102144],"float16"), axis=1, )
paddle.sum(Tensor([112, 54400],"float16"), axis=1, )
paddle.sum(Tensor([112, 58752],"float16"), axis=1, )
paddle.sum(Tensor([112, 60800],"float16"), axis=1, )
paddle.sum(Tensor([112, 62400],"float16"), axis=1, )
paddle.sum(Tensor([112, 63232],"float16"), axis=1, )
paddle.sum(Tensor([112, 65664],"float16"), axis=1, )
paddle.sum(Tensor([112, 67200],"float16"), axis=1, )
paddle.sum(Tensor([112, 73984],"float16"), axis=1, )
paddle.sum(Tensor([112, 76160],"float16"), axis=1, )
paddle.sum(Tensor([112, 82688],"float16"), axis=1, )
paddle.sum(Tensor([112, 85120],"float16"), axis=1, )
paddle.sum(Tensor([112, 87040],"float16"), axis=1, )
paddle.sum(Tensor([112, 92416],"float16"), axis=1, )
paddle.sum(Tensor([116, 102144],"float16"), axis=1, )
paddle.sum(Tensor([116, 54400],"float16"), axis=1, )
paddle.sum(Tensor([116, 59200],"float16"), axis=1, )
paddle.sum(Tensor([116, 60800],"float16"), axis=1, )
paddle.sum(Tensor([116, 62400],"float16"), axis=1, )
paddle.sum(Tensor([116, 67200],"float16"), axis=1, )
paddle.sum(Tensor([116, 70528],"float16"), axis=1, )
paddle.sum(Tensor([116, 72960],"float16"), axis=1, )
paddle.sum(Tensor([116, 73984],"float16"), axis=1, )
paddle.sum(Tensor([116, 82688],"float16"), axis=1, )
paddle.sum(Tensor([116, 84864],"float16"), axis=1, )
paddle.sum(Tensor([116, 87552],"float16"), axis=1, )
paddle.sum(Tensor([116, 91392],"float16"), axis=1, )
paddle.sum(Tensor([116, 92416],"float16"), axis=1, )
paddle.sum(Tensor([116, 94848],"float16"), axis=1, )
paddle.sum(Tensor([116, 97280],"float16"), axis=1, )
paddle.sum(Tensor([12, 102144],"float16"), axis=1, )
paddle.sum(Tensor([12, 112896],"float16"), axis=1, )
paddle.sum(Tensor([12, 56576],"float16"), axis=1, )
paddle.sum(Tensor([12, 60800],"float16"), axis=1, )
paddle.sum(Tensor([12, 73984],"float16"), axis=1, )
paddle.sum(Tensor([12, 76160],"float16"), axis=1, )
paddle.sum(Tensor([12, 82688],"float16"), axis=1, )
paddle.sum(Tensor([12, 87040],"float16"), axis=1, )
paddle.sum(Tensor([12, 89984],"float16"), axis=1, )
paddle.sum(Tensor([12, 92416],"float16"), axis=1, )
paddle.sum(Tensor([12, 99712],"float16"), axis=1, )
paddle.sum(Tensor([120, 102144],"float16"), axis=1, )
paddle.sum(Tensor([120, 104832],"float16"), axis=1, )
paddle.sum(Tensor([120, 107520],"float16"), axis=1, )
paddle.sum(Tensor([120, 54400],"float16"), axis=1, )
paddle.sum(Tensor([120, 57600],"float16"), axis=1, )
paddle.sum(Tensor([120, 60800],"float16"), axis=1, )
paddle.sum(Tensor([120, 62400],"float16"), axis=1, )
paddle.sum(Tensor([120, 64000],"float16"), axis=1, )
paddle.sum(Tensor([120, 67200],"float16"), axis=1, )
paddle.sum(Tensor([120, 67392],"float16"), axis=1, )
paddle.sum(Tensor([120, 67456],"float16"), axis=1, )
paddle.sum(Tensor([120, 73984],"float16"), axis=1, )
paddle.sum(Tensor([120, 77824],"float16"), axis=1, )
paddle.sum(Tensor([120, 82688],"float16"), axis=1, )
paddle.sum(Tensor([120, 84864],"float16"), axis=1, )
paddle.sum(Tensor([120, 86016],"float16"), axis=1, )
paddle.sum(Tensor([120, 88704],"float16"), axis=1, )
paddle.sum(Tensor([120, 91392],"float16"), axis=1, )
paddle.sum(Tensor([120, 92416],"float16"), axis=1, )
paddle.sum(Tensor([120, 94848],"float16"), axis=1, )
paddle.sum(Tensor([120, 97280],"float16"), axis=1, )
paddle.sum(Tensor([12288],"float16"), )
paddle.sum(Tensor([124, 102144],"float16"), axis=1, )
paddle.sum(Tensor([124, 54400],"float16"), axis=1, )
paddle.sum(Tensor([124, 60800],"float16"), axis=1, )
paddle.sum(Tensor([124, 62400],"float16"), axis=1, )
paddle.sum(Tensor([124, 64000],"float16"), axis=1, )
paddle.sum(Tensor([124, 67200],"float16"), axis=1, )
paddle.sum(Tensor([124, 73984],"float16"), axis=1, )
paddle.sum(Tensor([124, 77824],"float16"), axis=1, )
paddle.sum(Tensor([124, 82688],"float16"), axis=1, )
paddle.sum(Tensor([124, 84864],"float16"), axis=1, )
paddle.sum(Tensor([124, 86016],"float16"), axis=1, )
paddle.sum(Tensor([124, 89984],"float16"), axis=1, )
paddle.sum(Tensor([124, 91392],"float16"), axis=1, )
paddle.sum(Tensor([124, 92416],"float16"), axis=1, )
paddle.sum(Tensor([12582912],"float16"), )
paddle.sum(Tensor([128, 1000],"float16"), axis=-1, )
paddle.sum(Tensor([128, 102144],"float16"), axis=1, )
paddle.sum(Tensor([128, 104832],"float16"), axis=1, )
paddle.sum(Tensor([128, 192612],"float16"), axis=-1, )
paddle.sum(Tensor([128, 57600],"float16"), axis=1, )
paddle.sum(Tensor([128, 59200],"float16"), axis=1, )
paddle.sum(Tensor([128, 60800],"float16"), axis=1, )
paddle.sum(Tensor([128, 67200],"float16"), axis=1, )
paddle.sum(Tensor([128, 73984],"float16"), axis=1, )
paddle.sum(Tensor([128, 76160],"float16"), axis=1, )
paddle.sum(Tensor([128, 80256],"float16"), axis=1, )
paddle.sum(Tensor([128, 82688],"float16"), axis=1, )
paddle.sum(Tensor([128, 91392],"float16"), axis=1, )
paddle.sum(Tensor([128, 92416],"float16"), axis=1, )
paddle.sum(Tensor([128, 94080],"float16"), axis=1, )
paddle.sum(Tensor([132, 102144],"float16"), axis=1, )
paddle.sum(Tensor([132, 54400],"float16"), axis=1, )
paddle.sum(Tensor([132, 60800],"float16"), axis=1, )
paddle.sum(Tensor([132, 67200],"float16"), axis=1, )
paddle.sum(Tensor([132, 69632],"float16"), axis=1, )
paddle.sum(Tensor([132, 73984],"float16"), axis=1, )
paddle.sum(Tensor([132, 76032],"float16"), axis=1, )
paddle.sum(Tensor([132, 82688],"float16"), axis=1, )
paddle.sum(Tensor([132, 84864],"float16"), axis=1, )
paddle.sum(Tensor([132, 91392],"float16"), axis=1, )
paddle.sum(Tensor([132, 92416],"float16"), axis=1, )
paddle.sum(Tensor([132, 99712],"float16"), axis=1, )
paddle.sum(Tensor([136, 102144],"float16"), axis=1, )
paddle.sum(Tensor([136, 112896],"float16"), axis=1, )
paddle.sum(Tensor([136, 54400],"float16"), axis=1, )
paddle.sum(Tensor([136, 60800],"float16"), axis=1, )
paddle.sum(Tensor([136, 62400],"float16"), axis=1, )
paddle.sum(Tensor([136, 65600],"float16"), axis=1, )
paddle.sum(Tensor([136, 67200],"float16"), axis=1, )
paddle.sum(Tensor([136, 73984],"float16"), axis=1, )
paddle.sum(Tensor([136, 75392],"float16"), axis=1, )
paddle.sum(Tensor([136, 77824],"float16"), axis=1, )
paddle.sum(Tensor([136, 80256],"float16"), axis=1, )
paddle.sum(Tensor([136, 82688],"float16"), axis=1, )
paddle.sum(Tensor([136, 92416],"float16"), axis=1, )
paddle.sum(Tensor([140, 56000],"float16"), axis=1, )
paddle.sum(Tensor([140, 57600],"float16"), axis=1, )
paddle.sum(Tensor([140, 60800],"float16"), axis=1, )
paddle.sum(Tensor([140, 68224],"float16"), axis=1, )
paddle.sum(Tensor([140, 76032],"float16"), axis=1, )
paddle.sum(Tensor([140, 82688],"float16"), axis=1, )
paddle.sum(Tensor([140, 83328],"float16"), axis=1, )
paddle.sum(Tensor([140, 91392],"float16"), axis=1, )
paddle.sum(Tensor([140, 92416],"float16"), axis=1, )
paddle.sum(Tensor([144, 102144],"float16"), axis=1, )
paddle.sum(Tensor([144, 112896],"float16"), axis=1, )
paddle.sum(Tensor([144, 54400],"float16"), axis=1, )
paddle.sum(Tensor([144, 57600],"float16"), axis=1, )
paddle.sum(Tensor([144, 60800],"float16"), axis=1, )
paddle.sum(Tensor([144, 64000],"float16"), axis=1, )
paddle.sum(Tensor([144, 67200],"float16"), axis=1, )
paddle.sum(Tensor([144, 73984],"float16"), axis=1, )
paddle.sum(Tensor([144, 82688],"float16"), axis=1, )
paddle.sum(Tensor([144, 88704],"float16"), axis=1, )
paddle.sum(Tensor([144, 89216],"float16"), axis=1, )
paddle.sum(Tensor([144, 91392],"float16"), axis=1, )
paddle.sum(Tensor([144, 92416],"float16"), axis=1, )
paddle.sum(Tensor([148, 102144],"float16"), axis=1, )
paddle.sum(Tensor([148, 59200],"float16"), axis=1, )
paddle.sum(Tensor([148, 60800],"float16"), axis=1, )
paddle.sum(Tensor([148, 67200],"float16"), axis=1, )
paddle.sum(Tensor([148, 73984],"float16"), axis=1, )
paddle.sum(Tensor([148, 82688],"float16"), axis=1, )
paddle.sum(Tensor([148, 91392],"float16"), axis=1, )
paddle.sum(Tensor([148, 92416],"float16"), axis=1, )
paddle.sum(Tensor([148, 94848],"float16"), axis=1, )
paddle.sum(Tensor([152, 102144],"float16"), axis=1, )
paddle.sum(Tensor([152, 107520],"float16"), axis=1, )
paddle.sum(Tensor([152, 54400],"float16"), axis=1, )
paddle.sum(Tensor([152, 60800],"float16"), axis=1, )
paddle.sum(Tensor([152, 62400],"float16"), axis=1, )
paddle.sum(Tensor([152, 67200],"float16"), axis=1, )
paddle.sum(Tensor([152, 75392],"float16"), axis=1, )
paddle.sum(Tensor([152, 77824],"float16"), axis=1, )
paddle.sum(Tensor([152, 82688],"float16"), axis=1, )
paddle.sum(Tensor([152, 91392],"float16"), axis=1, )
paddle.sum(Tensor([152, 92416],"float16"), axis=1, )
paddle.sum(Tensor([154, 1000],"float16"), axis=-1, )
paddle.sum(Tensor([156, 102144],"float16"), axis=1, )
paddle.sum(Tensor([156, 56000],"float16"), axis=1, )
paddle.sum(Tensor([156, 60800],"float16"), axis=1, )
paddle.sum(Tensor([156, 62400],"float16"), axis=1, )
paddle.sum(Tensor([156, 67200],"float16"), axis=1, )
paddle.sum(Tensor([156, 68224],"float16"), axis=1, )
paddle.sum(Tensor([156, 74240],"float16"), axis=1, )
paddle.sum(Tensor([156, 80256],"float16"), axis=1, )
paddle.sum(Tensor([156, 82688],"float16"), axis=1, )
paddle.sum(Tensor([156, 89216],"float16"), axis=1, )
paddle.sum(Tensor([156, 92416],"float16"), axis=1, )
paddle.sum(Tensor([16, 1000],"float16"), axis=-1, )
paddle.sum(Tensor([16, 102144],"float16"), axis=1, )
paddle.sum(Tensor([16, 102400],"float16"), axis=1, )
paddle.sum(Tensor([16, 112896],"float16"), axis=1, )
paddle.sum(Tensor([16, 54400],"float16"), axis=1, )
paddle.sum(Tensor([16, 60800],"float16"), axis=1, )
paddle.sum(Tensor([16, 62400],"float16"), axis=1, )
paddle.sum(Tensor([16, 64000],"float16"), axis=1, )
paddle.sum(Tensor([16, 65600],"float16"), axis=1, )
paddle.sum(Tensor([16, 67200],"float16"), axis=1, )
paddle.sum(Tensor([16, 69888],"float16"), axis=1, )
paddle.sum(Tensor([16, 70528],"float16"), axis=1, )
paddle.sum(Tensor([16, 73984],"float16"), axis=1, )
paddle.sum(Tensor([16, 76160],"float16"), axis=1, )
paddle.sum(Tensor([16, 77824],"float16"), axis=1, )
paddle.sum(Tensor([16, 80256],"float16"), axis=1, )
paddle.sum(Tensor([16, 80512],"float16"), axis=1, )
paddle.sum(Tensor([16, 82688],"float16"), axis=1, )
paddle.sum(Tensor([16, 84864],"float16"), axis=1, )
paddle.sum(Tensor([16, 85120],"float16"), axis=1, )
paddle.sum(Tensor([16, 87552],"float16"), axis=1, )
paddle.sum(Tensor([16, 89216],"float16"), axis=1, )
paddle.sum(Tensor([16, 89984],"float16"), axis=1, )
paddle.sum(Tensor([16, 91392],"float16"), axis=1, )
paddle.sum(Tensor([16, 92416],"float16"), axis=1, )
paddle.sum(Tensor([16, 94848],"float16"), axis=1, )
paddle.sum(Tensor([16, 96768],"float16"), axis=1, )
paddle.sum(Tensor([16, 99712],"float16"), axis=1, )
paddle.sum(Tensor([160, 102144],"float16"), axis=1, )
paddle.sum(Tensor([160, 54400],"float16"), axis=1, )
paddle.sum(Tensor([160, 56000],"float16"), axis=1, )
paddle.sum(Tensor([160, 60800],"float16"), axis=1, )
paddle.sum(Tensor([160, 67200],"float16"), axis=1, )
paddle.sum(Tensor([160, 72960],"float16"), axis=1, )
paddle.sum(Tensor([160, 82688],"float16"), axis=1, )
paddle.sum(Tensor([160, 84864],"float16"), axis=1, )
paddle.sum(Tensor([160, 89984],"float16"), axis=1, )
paddle.sum(Tensor([160, 91392],"float16"), axis=1, )
paddle.sum(Tensor([160, 92416],"float16"), axis=1, )
paddle.sum(Tensor([16384],"float16"), )
paddle.sum(Tensor([164, 112896],"float16"), axis=1, )
paddle.sum(Tensor([164, 60800],"float16"), axis=1, )
paddle.sum(Tensor([164, 65664],"float16"), axis=1, )
paddle.sum(Tensor([164, 67200],"float16"), axis=1, )
paddle.sum(Tensor([164, 73984],"float16"), axis=1, )
paddle.sum(Tensor([164, 82688],"float16"), axis=1, )
paddle.sum(Tensor([164, 87360],"float16"), axis=1, )
paddle.sum(Tensor([164, 89984],"float16"), axis=1, )
paddle.sum(Tensor([164, 92416],"float16"), axis=1, )
paddle.sum(Tensor([16777216],"float16"), )
paddle.sum(Tensor([168, 102144],"float16"), axis=1, )
paddle.sum(Tensor([168, 57600],"float16"), axis=1, )
paddle.sum(Tensor([168, 60800],"float16"), axis=1, )
paddle.sum(Tensor([168, 73984],"float16"), axis=1, )
paddle.sum(Tensor([168, 82688],"float16"), axis=1, )
paddle.sum(Tensor([168, 92416],"float16"), axis=1, )
paddle.sum(Tensor([168, 97280],"float16"), axis=1, )
paddle.sum(Tensor([172, 102144],"float16"), axis=1, )
paddle.sum(Tensor([172, 54400],"float16"), axis=1, )
paddle.sum(Tensor([172, 60800],"float16"), axis=1, )
paddle.sum(Tensor([172, 67200],"float16"), axis=1, )
paddle.sum(Tensor([172, 77824],"float16"), axis=1, )
paddle.sum(Tensor([172, 80256],"float16"), axis=1, )
paddle.sum(Tensor([172, 80512],"float16"), axis=1, )
paddle.sum(Tensor([172, 82688],"float16"), axis=1, )
paddle.sum(Tensor([172, 92416],"float16"), axis=1, )
paddle.sum(Tensor([176, 60800],"float16"), axis=1, )
paddle.sum(Tensor([176, 62400],"float16"), axis=1, )
paddle.sum(Tensor([176, 69632],"float16"), axis=1, )
paddle.sum(Tensor([176, 74240],"float16"), axis=1, )
paddle.sum(Tensor([176, 82688],"float16"), axis=1, )
paddle.sum(Tensor([176, 83328],"float16"), axis=1, )
paddle.sum(Tensor([176, 92416],"float16"), axis=1, )
paddle.sum(Tensor([176, 94848],"float16"), axis=1, )
paddle.sum(Tensor([176, 99712],"float16"), axis=1, )
paddle.sum(Tensor([180, 102144],"float16"), axis=1, )
paddle.sum(Tensor([180, 54400],"float16"), axis=1, )
paddle.sum(Tensor([180, 60800],"float16"), axis=1, )
paddle.sum(Tensor([180, 64000],"float16"), axis=1, )
paddle.sum(Tensor([180, 80256],"float16"), axis=1, )
paddle.sum(Tensor([180, 82688],"float16"), axis=1, )
paddle.sum(Tensor([180, 83328],"float16"), axis=1, )
paddle.sum(Tensor([180, 91392],"float16"), axis=1, )
paddle.sum(Tensor([180, 92416],"float16"), axis=1, )
paddle.sum(Tensor([184, 54400],"float16"), axis=1, )
paddle.sum(Tensor([184, 60800],"float16"), axis=1, )
paddle.sum(Tensor([184, 65600],"float16"), axis=1, )
paddle.sum(Tensor([184, 67200],"float16"), axis=1, )
paddle.sum(Tensor([184, 82688],"float16"), axis=1, )
paddle.sum(Tensor([184, 92416],"float16"), axis=1, )
paddle.sum(Tensor([184, 99456],"float16"), axis=1, )
paddle.sum(Tensor([188, 102144],"float16"), axis=1, )
paddle.sum(Tensor([188, 60800],"float16"), axis=1, )
paddle.sum(Tensor([188, 67200],"float16"), axis=1, )
paddle.sum(Tensor([188, 73984],"float16"), axis=1, )
paddle.sum(Tensor([188, 78336],"float16"), axis=1, )
paddle.sum(Tensor([188, 82688],"float16"), axis=1, )
paddle.sum(Tensor([188, 91392],"float16"), axis=1, )
paddle.sum(Tensor([188, 92416],"float16"), axis=1, )
paddle.sum(Tensor([192, 60800],"float16"), axis=1, )
paddle.sum(Tensor([192, 67200],"float16"), axis=1, )
paddle.sum(Tensor([192, 82688],"float16"), axis=1, )
paddle.sum(Tensor([192, 92416],"float16"), axis=1, )
paddle.sum(Tensor([196, 102144],"float16"), axis=1, )
paddle.sum(Tensor([196, 60800],"float16"), axis=1, )
paddle.sum(Tensor([196, 67200],"float16"), axis=1, )
paddle.sum(Tensor([196, 91392],"float16"), axis=1, )
paddle.sum(Tensor([196, 92416],"float16"), axis=1, )
paddle.sum(Tensor([20, 102144],"float16"), axis=1, )
paddle.sum(Tensor([20, 102400],"float16"), axis=1, )
paddle.sum(Tensor([20, 60800],"float16"), axis=1, )
paddle.sum(Tensor([20, 64000],"float16"), axis=1, )
paddle.sum(Tensor([20, 67200],"float16"), axis=1, )
paddle.sum(Tensor([20, 70528],"float16"), axis=1, )
paddle.sum(Tensor([20, 73984],"float16"), axis=1, )
paddle.sum(Tensor([20, 82688],"float16"), axis=1, )
paddle.sum(Tensor([20, 85120],"float16"), axis=1, )
paddle.sum(Tensor([20, 87040],"float16"), axis=1, )
paddle.sum(Tensor([20, 89984],"float16"), axis=1, )
paddle.sum(Tensor([20, 91392],"float16"), axis=1, )
paddle.sum(Tensor([20, 92352],"float16"), axis=1, )
paddle.sum(Tensor([20, 92416],"float16"), axis=1, )
paddle.sum(Tensor([20, 97280],"float16"), axis=1, )
paddle.sum(Tensor([20, 99712],"float16"), axis=1, )
paddle.sum(Tensor([200, 102144],"float16"), axis=1, )
paddle.sum(Tensor([200, 104832],"float16"), axis=1, )
paddle.sum(Tensor([200, 60800],"float16"), axis=1, )
paddle.sum(Tensor([200, 82688],"float16"), axis=1, )
paddle.sum(Tensor([200, 92416],"float16"), axis=1, )
paddle.sum(Tensor([204, 54400],"float16"), axis=1, )
paddle.sum(Tensor([204, 62400],"float16"), axis=1, )
paddle.sum(Tensor([204, 67200],"float16"), axis=1, )
paddle.sum(Tensor([204, 82688],"float16"), axis=1, )
paddle.sum(Tensor([204, 92416],"float16"), axis=1, )
paddle.sum(Tensor([208, 54400],"float16"), axis=1, )
paddle.sum(Tensor([208, 60800],"float16"), axis=1, )
paddle.sum(Tensor([208, 67200],"float16"), axis=1, )
paddle.sum(Tensor([208, 82688],"float16"), axis=1, )
paddle.sum(Tensor([208, 87552],"float16"), axis=1, )
paddle.sum(Tensor([208, 92416],"float16"), axis=1, )
paddle.sum(Tensor([212, 102144],"float16"), axis=1, )
paddle.sum(Tensor([212, 54400],"float16"), axis=1, )
paddle.sum(Tensor([212, 57600],"float16"), axis=1, )
paddle.sum(Tensor([212, 60800],"float16"), axis=1, )
paddle.sum(Tensor([212, 65600],"float16"), axis=1, )
paddle.sum(Tensor([212, 73984],"float16"), axis=1, )
paddle.sum(Tensor([212, 80256],"float16"), axis=1, )
paddle.sum(Tensor([212, 82688],"float16"), axis=1, )
paddle.sum(Tensor([212, 92416],"float16"), axis=1, )
paddle.sum(Tensor([216, 60800],"float16"), axis=1, )
paddle.sum(Tensor([216, 92416],"float16"), axis=1, )
paddle.sum(Tensor([220, 60800],"float16"), axis=1, )
paddle.sum(Tensor([220, 63232],"float16"), axis=1, )
paddle.sum(Tensor([220, 67200],"float16"), axis=1, )
paddle.sum(Tensor([220, 92416],"float16"), axis=1, )
paddle.sum(Tensor([224, 102144],"float16"), axis=1, )
paddle.sum(Tensor([224, 54400],"float16"), axis=1, )
paddle.sum(Tensor([224, 59200],"float16"), axis=1, )
paddle.sum(Tensor([224, 60800],"float16"), axis=1, )
paddle.sum(Tensor([224, 63232],"float16"), axis=1, )
paddle.sum(Tensor([224, 65600],"float16"), axis=1, )
paddle.sum(Tensor([224, 67200],"float16"), axis=1, )
paddle.sum(Tensor([224, 76160],"float16"), axis=1, )
paddle.sum(Tensor([224, 78336],"float16"), axis=1, )
paddle.sum(Tensor([224, 82688],"float16"), axis=1, )
paddle.sum(Tensor([224, 92416],"float16"), axis=1, )
paddle.sum(Tensor([228, 102144],"float16"), axis=1, )
paddle.sum(Tensor([228, 67200],"float16"), axis=1, )
paddle.sum(Tensor([228, 82688],"float16"), axis=1, )
paddle.sum(Tensor([232, 54400],"float16"), axis=1, )
paddle.sum(Tensor([232, 67200],"float16"), axis=1, )
paddle.sum(Tensor([232, 92416],"float16"), axis=1, )
paddle.sum(Tensor([232, 99456],"float16"), axis=1, )
paddle.sum(Tensor([236, 54400],"float16"), axis=1, )
paddle.sum(Tensor([236, 60800],"float16"), axis=1, )
paddle.sum(Tensor([24, 102144],"float16"), axis=1, )
paddle.sum(Tensor([24, 104832],"float16"), axis=1, )
paddle.sum(Tensor([24, 112896],"float16"), axis=1, )
paddle.sum(Tensor([24, 54400],"float16"), axis=1, )
paddle.sum(Tensor([24, 56576],"float16"), axis=1, )
paddle.sum(Tensor([24, 57600],"float16"), axis=1, )
paddle.sum(Tensor([24, 60800],"float16"), axis=1, )
paddle.sum(Tensor([24, 62400],"float16"), axis=1, )
paddle.sum(Tensor([24, 63232],"float16"), axis=1, )
paddle.sum(Tensor([24, 64000],"float16"), axis=1, )
paddle.sum(Tensor([24, 67200],"float16"), axis=1, )
paddle.sum(Tensor([24, 68096],"float16"), axis=1, )
paddle.sum(Tensor([24, 70528],"float16"), axis=1, )
paddle.sum(Tensor([24, 73984],"float16"), axis=1, )
paddle.sum(Tensor([24, 74240],"float16"), axis=1, )
paddle.sum(Tensor([24, 76032],"float16"), axis=1, )
paddle.sum(Tensor([24, 76160],"float16"), axis=1, )
paddle.sum(Tensor([24, 78144],"float16"), axis=1, )
paddle.sum(Tensor([24, 78336],"float16"), axis=1, )
paddle.sum(Tensor([24, 80256],"float16"), axis=1, )
paddle.sum(Tensor([24, 80512],"float16"), axis=1, )
paddle.sum(Tensor([24, 82688],"float16"), axis=1, )
paddle.sum(Tensor([24, 84864],"float16"), axis=1, )
paddle.sum(Tensor([24, 85120],"float16"), axis=1, )
paddle.sum(Tensor([24, 86016],"float16"), axis=1, )
paddle.sum(Tensor([24, 87040],"float16"), axis=1, )
paddle.sum(Tensor([24, 87552],"float16"), axis=1, )
paddle.sum(Tensor([24, 89216],"float16"), axis=1, )
paddle.sum(Tensor([24, 89984],"float16"), axis=1, )
paddle.sum(Tensor([24, 91392],"float16"), axis=1, )
paddle.sum(Tensor([24, 91840],"float16"), axis=1, )
paddle.sum(Tensor([24, 92416],"float16"), axis=1, )
paddle.sum(Tensor([24, 94848],"float16"), axis=1, )
paddle.sum(Tensor([24, 96768],"float16"), axis=1, )
paddle.sum(Tensor([24, 97088],"float16"), axis=1, )
paddle.sum(Tensor([24, 97280],"float16"), axis=1, )
paddle.sum(Tensor([24, 99456],"float16"), axis=1, )
paddle.sum(Tensor([24, 99712],"float16"), axis=1, )
paddle.sum(Tensor([240, 102144],"float16"), axis=1, )
paddle.sum(Tensor([240, 82688],"float16"), axis=1, )
paddle.sum(Tensor([240, 92416],"float16"), axis=1, )
paddle.sum(Tensor([244, 54400],"float16"), axis=1, )
paddle.sum(Tensor([244, 60800],"float16"), axis=1, )
paddle.sum(Tensor([244, 82688],"float16"), axis=1, )
paddle.sum(Tensor([248, 102144],"float16"), axis=1, )
paddle.sum(Tensor([248, 54400],"float16"), axis=1, )
paddle.sum(Tensor([248, 76160],"float16"), axis=1, )
paddle.sum(Tensor([252, 60800],"float16"), axis=1, )
paddle.sum(Tensor([252, 72960],"float16"), axis=1, )
paddle.sum(Tensor([252, 82688],"float16"), axis=1, )
paddle.sum(Tensor([256, 1000],"float16"), axis=-1, )
paddle.sum(Tensor([256, 54400],"float16"), axis=1, )
paddle.sum(Tensor([256, 60800],"float16"), axis=1, )
paddle.sum(Tensor([260, 102144],"float16"), axis=1, )
paddle.sum(Tensor([260, 60800],"float16"), axis=1, )
paddle.sum(Tensor([260, 82688],"float16"), axis=1, )
paddle.sum(Tensor([264, 82688],"float16"), axis=1, )
paddle.sum(Tensor([264, 92416],"float16"), axis=1, )
paddle.sum(Tensor([264, 94080],"float16"), axis=1, )
paddle.sum(Tensor([264, 94848],"float16"), axis=1, )
paddle.sum(Tensor([268, 54400],"float16"), axis=1, )
paddle.sum(Tensor([268, 82688],"float16"), axis=1, )
paddle.sum(Tensor([268, 92416],"float16"), axis=1, )
paddle.sum(Tensor([272, 60800],"float16"), axis=1, )
paddle.sum(Tensor([272, 74240],"float16"), axis=1, )
paddle.sum(Tensor([28, 102144],"float16"), axis=1, )
paddle.sum(Tensor([28, 60800],"float16"), axis=1, )
paddle.sum(Tensor([28, 63232],"float16"), axis=1, )
paddle.sum(Tensor([28, 64000],"float16"), axis=1, )
paddle.sum(Tensor([28, 67456],"float16"), axis=1, )
paddle.sum(Tensor([28, 73984],"float16"), axis=1, )
paddle.sum(Tensor([28, 78336],"float16"), axis=1, )
paddle.sum(Tensor([28, 82688],"float16"), axis=1, )
paddle.sum(Tensor([28, 84864],"float16"), axis=1, )
paddle.sum(Tensor([28, 86016],"float16"), axis=1, )
paddle.sum(Tensor([28, 89984],"float16"), axis=1, )
paddle.sum(Tensor([28, 91392],"float16"), axis=1, )
paddle.sum(Tensor([28, 92416],"float16"), axis=1, )
paddle.sum(Tensor([28, 94080],"float16"), axis=1, )
paddle.sum(Tensor([28, 96768],"float16"), axis=1, )
paddle.sum(Tensor([28, 97088],"float16"), axis=1, )
paddle.sum(Tensor([28, 97280],"float16"), axis=1, )
paddle.sum(Tensor([28, 99712],"float16"), axis=1, )
paddle.sum(Tensor([280, 60800],"float16"), axis=1, )
paddle.sum(Tensor([280, 82688],"float16"), axis=1, )
paddle.sum(Tensor([288, 73984],"float16"), axis=1, )
paddle.sum(Tensor([292, 60800],"float16"), axis=1, )
paddle.sum(Tensor([292, 91392],"float16"), axis=1, )
paddle.sum(Tensor([296, 60800],"float16"), axis=1, )
paddle.sum(Tensor([304, 67200],"float16"), axis=1, )
paddle.sum(Tensor([308, 92416],"float16"), axis=1, )
paddle.sum(Tensor([32, 102144],"float16"), axis=1, )
paddle.sum(Tensor([32, 102400],"float16"), axis=1, )
paddle.sum(Tensor([32, 104832],"float16"), axis=1, )
paddle.sum(Tensor([32, 107520],"float16"), axis=1, )
paddle.sum(Tensor([32, 112896],"float16"), axis=1, )
paddle.sum(Tensor([32, 54400],"float16"), axis=1, )
paddle.sum(Tensor([32, 60800],"float16"), axis=1, )
paddle.sum(Tensor([32, 62400],"float16"), axis=1, )
paddle.sum(Tensor([32, 63232],"float16"), axis=1, )
paddle.sum(Tensor([32, 67200],"float16"), axis=1, )
paddle.sum(Tensor([32, 68096],"float16"), axis=1, )
paddle.sum(Tensor([32, 73984],"float16"), axis=1, )
paddle.sum(Tensor([32, 76160],"float16"), axis=1, )
paddle.sum(Tensor([32, 77824],"float16"), axis=1, )
paddle.sum(Tensor([32, 78336],"float16"), axis=1, )
paddle.sum(Tensor([32, 82688],"float16"), axis=1, )
paddle.sum(Tensor([32, 84864],"float16"), axis=1, )
paddle.sum(Tensor([32, 85120],"float16"), axis=1, )
paddle.sum(Tensor([32, 87040],"float16"), axis=1, )
paddle.sum(Tensor([32, 89984],"float16"), axis=1, )
paddle.sum(Tensor([32, 91392],"float16"), axis=1, )
paddle.sum(Tensor([32, 92416],"float16"), axis=1, )
paddle.sum(Tensor([32, 94080],"float16"), axis=1, )
paddle.sum(Tensor([32, 94848],"float16"), axis=1, )
paddle.sum(Tensor([32, 97088],"float16"), axis=1, )
paddle.sum(Tensor([32, 97280],"float16"), axis=1, )
paddle.sum(Tensor([32, 99712],"float16"), axis=1, )
paddle.sum(Tensor([320, 91392],"float16"), axis=1, )
paddle.sum(Tensor([332, 102144],"float16"), axis=1, )
paddle.sum(Tensor([332, 60800],"float16"), axis=1, )
paddle.sum(Tensor([36, 102144],"float16"), axis=1, )
paddle.sum(Tensor([36, 54400],"float16"), axis=1, )
paddle.sum(Tensor([36, 56000],"float16"), axis=1, )
paddle.sum(Tensor([36, 58752],"float16"), axis=1, )
paddle.sum(Tensor([36, 59200],"float16"), axis=1, )
paddle.sum(Tensor([36, 60800],"float16"), axis=1, )
paddle.sum(Tensor([36, 62400],"float16"), axis=1, )
paddle.sum(Tensor([36, 63232],"float16"), axis=1, )
paddle.sum(Tensor([36, 64000],"float16"), axis=1, )
paddle.sum(Tensor([36, 67200],"float16"), axis=1, )
paddle.sum(Tensor([36, 70528],"float16"), axis=1, )
paddle.sum(Tensor([36, 72960],"float16"), axis=1, )
paddle.sum(Tensor([36, 73984],"float16"), axis=1, )
paddle.sum(Tensor([36, 77824],"float16"), axis=1, )
paddle.sum(Tensor([36, 78336],"float16"), axis=1, )
paddle.sum(Tensor([36, 80256],"float16"), axis=1, )
paddle.sum(Tensor([36, 80512],"float16"), axis=1, )
paddle.sum(Tensor([36, 82688],"float16"), axis=1, )
paddle.sum(Tensor([36, 84480],"float16"), axis=1, )
paddle.sum(Tensor([36, 84864],"float16"), axis=1, )
paddle.sum(Tensor([36, 85120],"float16"), axis=1, )
paddle.sum(Tensor([36, 86016],"float16"), axis=1, )
paddle.sum(Tensor([36, 87040],"float16"), axis=1, )
paddle.sum(Tensor([36, 87360],"float16"), axis=1, )
paddle.sum(Tensor([36, 87552],"float16"), axis=1, )
paddle.sum(Tensor([36, 89216],"float16"), axis=1, )
paddle.sum(Tensor([36, 89984],"float16"), axis=1, )
paddle.sum(Tensor([36, 91392],"float16"), axis=1, )
paddle.sum(Tensor([36, 92416],"float16"), axis=1, )
paddle.sum(Tensor([36, 94848],"float16"), axis=1, )
paddle.sum(Tensor([36, 97280],"float16"), axis=1, )
paddle.sum(Tensor([36, 99456],"float16"), axis=1, )
paddle.sum(Tensor([360, 67200],"float16"), axis=1, )
paddle.sum(Tensor([364, 102144],"float16"), axis=1, )
paddle.sum(Tensor([372, 102144],"float16"), axis=1, )
paddle.sum(Tensor([4, 102144],"float16"), axis=1, )
paddle.sum(Tensor([4, 112896],"float16"), axis=1, )
paddle.sum(Tensor([4, 67200],"float16"), axis=1, )
paddle.sum(Tensor([4, 73984],"float16"), axis=1, )
paddle.sum(Tensor([4, 80512],"float16"), axis=1, )
paddle.sum(Tensor([4, 82688],"float16"), axis=1, )
paddle.sum(Tensor([4, 84864],"float16"), axis=1, )
paddle.sum(Tensor([4, 87360],"float16"), axis=1, )
paddle.sum(Tensor([4, 92416],"float16"), axis=1, )
paddle.sum(Tensor([4, 97280],"float16"), axis=1, )
paddle.sum(Tensor([40, 102144],"float16"), axis=1, )
paddle.sum(Tensor([40, 104832],"float16"), axis=1, )
paddle.sum(Tensor([40, 112896],"float16"), axis=1, )
paddle.sum(Tensor([40, 54400],"float16"), axis=1, )
paddle.sum(Tensor([40, 56576],"float16"), axis=1, )
paddle.sum(Tensor([40, 59200],"float16"), axis=1, )
paddle.sum(Tensor([40, 60800],"float16"), axis=1, )
paddle.sum(Tensor([40, 63232],"float16"), axis=1, )
paddle.sum(Tensor([40, 63936],"float16"), axis=1, )
paddle.sum(Tensor([40, 64000],"float16"), axis=1, )
paddle.sum(Tensor([40, 67200],"float16"), axis=1, )
paddle.sum(Tensor([40, 67392],"float16"), axis=1, )
paddle.sum(Tensor([40, 69632],"float16"), axis=1, )
paddle.sum(Tensor([40, 70528],"float16"), axis=1, )
paddle.sum(Tensor([40, 73984],"float16"), axis=1, )
paddle.sum(Tensor([40, 76160],"float16"), axis=1, )
paddle.sum(Tensor([40, 78144],"float16"), axis=1, )
paddle.sum(Tensor([40, 78336],"float16"), axis=1, )
paddle.sum(Tensor([40, 78400],"float16"), axis=1, )
paddle.sum(Tensor([40, 80512],"float16"), axis=1, )
paddle.sum(Tensor([40, 82688],"float16"), axis=1, )
paddle.sum(Tensor([40, 84864],"float16"), axis=1, )
paddle.sum(Tensor([40, 85120],"float16"), axis=1, )
paddle.sum(Tensor([40, 86016],"float16"), axis=1, )
paddle.sum(Tensor([40, 87040],"float16"), axis=1, )
paddle.sum(Tensor([40, 89216],"float16"), axis=1, )
paddle.sum(Tensor([40, 89984],"float16"), axis=1, )
paddle.sum(Tensor([40, 91392],"float16"), axis=1, )
paddle.sum(Tensor([40, 92416],"float16"), axis=1, )
paddle.sum(Tensor([40, 94080],"float16"), axis=1, )
paddle.sum(Tensor([40, 94848],"float16"), axis=1, )
paddle.sum(Tensor([40, 97280],"float16"), axis=1, )
paddle.sum(Tensor([40, 99456],"float16"), axis=1, )
paddle.sum(Tensor([40, 99712],"float16"), axis=1, )
paddle.sum(Tensor([4096],"float16"), )
paddle.sum(Tensor([4194304],"float16"), )
paddle.sum(Tensor([44, 102144],"float16"), axis=1, )
paddle.sum(Tensor([44, 54400],"float16"), axis=1, )
paddle.sum(Tensor([44, 60800],"float16"), axis=1, )
paddle.sum(Tensor([44, 63232],"float16"), axis=1, )
paddle.sum(Tensor([44, 64000],"float16"), axis=1, )
paddle.sum(Tensor([44, 67200],"float16"), axis=1, )
paddle.sum(Tensor([44, 73984],"float16"), axis=1, )
paddle.sum(Tensor([44, 75392],"float16"), axis=1, )
paddle.sum(Tensor([44, 78144],"float16"), axis=1, )
paddle.sum(Tensor([44, 80512],"float16"), axis=1, )
paddle.sum(Tensor([44, 82688],"float16"), axis=1, )
paddle.sum(Tensor([44, 84864],"float16"), axis=1, )
paddle.sum(Tensor([44, 91392],"float16"), axis=1, )
paddle.sum(Tensor([44, 92416],"float16"), axis=1, )
paddle.sum(Tensor([44, 94848],"float16"), axis=1, )
paddle.sum(Tensor([44, 97088],"float16"), axis=1, )
paddle.sum(Tensor([44, 99712],"float16"), axis=1, )
paddle.sum(Tensor([48, 102144],"float16"), axis=1, )
paddle.sum(Tensor([48, 104832],"float16"), axis=1, )
paddle.sum(Tensor([48, 112896],"float16"), axis=1, )
paddle.sum(Tensor([48, 54400],"float16"), axis=1, )
paddle.sum(Tensor([48, 57600],"float16"), axis=1, )
paddle.sum(Tensor([48, 60800],"float16"), axis=1, )
paddle.sum(Tensor([48, 62400],"float16"), axis=1, )
paddle.sum(Tensor([48, 63936],"float16"), axis=1, )
paddle.sum(Tensor([48, 64000],"float16"), axis=1, )
paddle.sum(Tensor([48, 65664],"float16"), axis=1, )
paddle.sum(Tensor([48, 67200],"float16"), axis=1, )
paddle.sum(Tensor([48, 68096],"float16"), axis=1, )
paddle.sum(Tensor([48, 69888],"float16"), axis=1, )
paddle.sum(Tensor([48, 70528],"float16"), axis=1, )
paddle.sum(Tensor([48, 73984],"float16"), axis=1, )
paddle.sum(Tensor([48, 75392],"float16"), axis=1, )
paddle.sum(Tensor([48, 76160],"float16"), axis=1, )
paddle.sum(Tensor([48, 80256],"float16"), axis=1, )
paddle.sum(Tensor([48, 80512],"float16"), axis=1, )
paddle.sum(Tensor([48, 82688],"float16"), axis=1, )
paddle.sum(Tensor([48, 83328],"float16"), axis=1, )
paddle.sum(Tensor([48, 84864],"float16"), axis=1, )
paddle.sum(Tensor([48, 85120],"float16"), axis=1, )
paddle.sum(Tensor([48, 86016],"float16"), axis=1, )
paddle.sum(Tensor([48, 87040],"float16"), axis=1, )
paddle.sum(Tensor([48, 87552],"float16"), axis=1, )
paddle.sum(Tensor([48, 88704],"float16"), axis=1, )
paddle.sum(Tensor([48, 89216],"float16"), axis=1, )
paddle.sum(Tensor([48, 89984],"float16"), axis=1, )
paddle.sum(Tensor([48, 91392],"float16"), axis=1, )
paddle.sum(Tensor([48, 91840],"float16"), axis=1, )
paddle.sum(Tensor([48, 92416],"float16"), axis=1, )
paddle.sum(Tensor([48, 94080],"float16"), axis=1, )
paddle.sum(Tensor([48, 97088],"float16"), axis=1, )
paddle.sum(Tensor([48, 97280],"float16"), axis=1, )
paddle.sum(Tensor([48, 99456],"float16"), axis=1, )
paddle.sum(Tensor([48, 99712],"float16"), axis=1, )
paddle.sum(Tensor([500032],"float16"), )
paddle.sum(Tensor([512, 1000],"float16"), axis=-1, )
paddle.sum(Tensor([51511296],"float16"), )
paddle.sum(Tensor([52, 102144],"float16"), axis=1, )
paddle.sum(Tensor([52, 102400],"float16"), axis=1, )
paddle.sum(Tensor([52, 104832],"float16"), axis=1, )
paddle.sum(Tensor([52, 54400],"float16"), axis=1, )
paddle.sum(Tensor([52, 60800],"float16"), axis=1, )
paddle.sum(Tensor([52, 62400],"float16"), axis=1, )
paddle.sum(Tensor([52, 64000],"float16"), axis=1, )
paddle.sum(Tensor([52, 65664],"float16"), axis=1, )
paddle.sum(Tensor([52, 67200],"float16"), axis=1, )
paddle.sum(Tensor([52, 70528],"float16"), axis=1, )
paddle.sum(Tensor([52, 76160],"float16"), axis=1, )
paddle.sum(Tensor([52, 78336],"float16"), axis=1, )
paddle.sum(Tensor([52, 82688],"float16"), axis=1, )
paddle.sum(Tensor([52, 84864],"float16"), axis=1, )
paddle.sum(Tensor([52, 85120],"float16"), axis=1, )
paddle.sum(Tensor([52, 86016],"float16"), axis=1, )
paddle.sum(Tensor([52, 89216],"float16"), axis=1, )
paddle.sum(Tensor([52, 89984],"float16"), axis=1, )
paddle.sum(Tensor([52, 91392],"float16"), axis=1, )
paddle.sum(Tensor([52, 92352],"float16"), axis=1, )
paddle.sum(Tensor([52, 92416],"float16"), axis=1, )
paddle.sum(Tensor([52, 94080],"float16"), axis=1, )
paddle.sum(Tensor([52, 94848],"float16"), axis=1, )
paddle.sum(Tensor([52, 97280],"float16"), axis=1, )
paddle.sum(Tensor([52, 99456],"float16"), axis=1, )
paddle.sum(Tensor([524288],"float16"), )
paddle.sum(Tensor([56, 102144],"float16"), axis=1, )
paddle.sum(Tensor([56, 54400],"float16"), axis=1, )
paddle.sum(Tensor([56, 60800],"float16"), axis=1, )
paddle.sum(Tensor([56, 62400],"float16"), axis=1, )
paddle.sum(Tensor([56, 63936],"float16"), axis=1, )
paddle.sum(Tensor([56, 64000],"float16"), axis=1, )
paddle.sum(Tensor([56, 65664],"float16"), axis=1, )
paddle.sum(Tensor([56, 67200],"float16"), axis=1, )
paddle.sum(Tensor([56, 73984],"float16"), axis=1, )
paddle.sum(Tensor([56, 76032],"float16"), axis=1, )
paddle.sum(Tensor([56, 77824],"float16"), axis=1, )
paddle.sum(Tensor([56, 80256],"float16"), axis=1, )
paddle.sum(Tensor([56, 80512],"float16"), axis=1, )
paddle.sum(Tensor([56, 82688],"float16"), axis=1, )
paddle.sum(Tensor([56, 84480],"float16"), axis=1, )
paddle.sum(Tensor([56, 87360],"float16"), axis=1, )
paddle.sum(Tensor([56, 89984],"float16"), axis=1, )
paddle.sum(Tensor([56, 91392],"float16"), axis=1, )
paddle.sum(Tensor([56, 92416],"float16"), axis=1, )
paddle.sum(Tensor([56, 94080],"float16"), axis=1, )
paddle.sum(Tensor([56, 94848],"float16"), axis=1, )
paddle.sum(Tensor([56, 97088],"float16"), axis=1, )
paddle.sum(Tensor([56, 97280],"float16"), axis=1, )
paddle.sum(Tensor([60, 102144],"float16"), axis=1, )
paddle.sum(Tensor([60, 54400],"float16"), axis=1, )
paddle.sum(Tensor([60, 56576],"float16"), axis=1, )
paddle.sum(Tensor([60, 58752],"float16"), axis=1, )
paddle.sum(Tensor([60, 60800],"float16"), axis=1, )
paddle.sum(Tensor([60, 62400],"float16"), axis=1, )
paddle.sum(Tensor([60, 63232],"float16"), axis=1, )
paddle.sum(Tensor([60, 63936],"float16"), axis=1, )
paddle.sum(Tensor([60, 64000],"float16"), axis=1, )
paddle.sum(Tensor([60, 65600],"float16"), axis=1, )
paddle.sum(Tensor([60, 65664],"float16"), axis=1, )
paddle.sum(Tensor([60, 67200],"float16"), axis=1, )
paddle.sum(Tensor([60, 67456],"float16"), axis=1, )
paddle.sum(Tensor([60, 68224],"float16"), axis=1, )
paddle.sum(Tensor([60, 73984],"float16"), axis=1, )
paddle.sum(Tensor([60, 77824],"float16"), axis=1, )
paddle.sum(Tensor([60, 80512],"float16"), axis=1, )
paddle.sum(Tensor([60, 82688],"float16"), axis=1, )
paddle.sum(Tensor([60, 84864],"float16"), axis=1, )
paddle.sum(Tensor([60, 89984],"float16"), axis=1, )
paddle.sum(Tensor([60, 91392],"float16"), axis=1, )
paddle.sum(Tensor([60, 91840],"float16"), axis=1, )
paddle.sum(Tensor([60, 92416],"float16"), axis=1, )
paddle.sum(Tensor([60, 94080],"float16"), axis=1, )
paddle.sum(Tensor([60, 94848],"float16"), axis=1, )
paddle.sum(Tensor([60, 96768],"float16"), axis=1, )
paddle.sum(Tensor([60, 99712],"float16"), axis=1, )
paddle.sum(Tensor([64, 1000],"float16"), axis=-1, )
paddle.sum(Tensor([64, 102144],"float16"), axis=1, )
paddle.sum(Tensor([64, 26, 512, 1, 40],"float16"), tuple(3,4,), keepdim=False, )
paddle.sum(Tensor([64, 54400],"float16"), axis=1, )
paddle.sum(Tensor([64, 57600],"float16"), axis=1, )
paddle.sum(Tensor([64, 60800],"float16"), axis=1, )
paddle.sum(Tensor([64, 62400],"float16"), axis=1, )
paddle.sum(Tensor([64, 64000],"float16"), axis=1, )
paddle.sum(Tensor([64, 65664],"float16"), axis=1, )
paddle.sum(Tensor([64, 67200],"float16"), axis=1, )
paddle.sum(Tensor([64, 68224],"float16"), axis=1, )
paddle.sum(Tensor([64, 70528],"float16"), axis=1, )
paddle.sum(Tensor([64, 72960],"float16"), axis=1, )
paddle.sum(Tensor([64, 73984],"float16"), axis=1, )
paddle.sum(Tensor([64, 78336],"float16"), axis=1, )
paddle.sum(Tensor([64, 78400],"float16"), axis=1, )
paddle.sum(Tensor([64, 82688],"float16"), axis=1, )
paddle.sum(Tensor([64, 84864],"float16"), axis=1, )
paddle.sum(Tensor([64, 86016],"float16"), axis=1, )
paddle.sum(Tensor([64, 87552],"float16"), axis=1, )
paddle.sum(Tensor([64, 89216],"float16"), axis=1, )
paddle.sum(Tensor([64, 89984],"float16"), axis=1, )
paddle.sum(Tensor([64, 91392],"float16"), axis=1, )
paddle.sum(Tensor([64, 92352],"float16"), axis=1, )
paddle.sum(Tensor([64, 92416],"float16"), axis=1, )
paddle.sum(Tensor([64, 94080],"float16"), axis=1, )
paddle.sum(Tensor([64, 97280],"float16"), axis=1, )
paddle.sum(Tensor([64, 99712],"float16"), axis=1, )
paddle.sum(Tensor([640, 1000],"float16"), axis=-1, )
paddle.sum(Tensor([68, 102144],"float16"), axis=1, )
paddle.sum(Tensor([68, 112896],"float16"), axis=1, )
paddle.sum(Tensor([68, 54400],"float16"), axis=1, )
paddle.sum(Tensor([68, 60800],"float16"), axis=1, )
paddle.sum(Tensor([68, 63232],"float16"), axis=1, )
paddle.sum(Tensor([68, 64000],"float16"), axis=1, )
paddle.sum(Tensor([68, 65600],"float16"), axis=1, )
paddle.sum(Tensor([68, 67200],"float16"), axis=1, )
paddle.sum(Tensor([68, 72960],"float16"), axis=1, )
paddle.sum(Tensor([68, 73984],"float16"), axis=1, )
paddle.sum(Tensor([68, 76160],"float16"), axis=1, )
paddle.sum(Tensor([68, 77824],"float16"), axis=1, )
paddle.sum(Tensor([68, 78336],"float16"), axis=1, )
paddle.sum(Tensor([68, 80256],"float16"), axis=1, )
paddle.sum(Tensor([68, 82688],"float16"), axis=1, )
paddle.sum(Tensor([68, 89216],"float16"), axis=1, )
paddle.sum(Tensor([68, 89984],"float16"), axis=1, )
paddle.sum(Tensor([68, 91392],"float16"), axis=1, )
paddle.sum(Tensor([68, 92352],"float16"), axis=1, )
paddle.sum(Tensor([68, 92416],"float16"), axis=1, )
paddle.sum(Tensor([68, 94080],"float16"), axis=1, )
paddle.sum(Tensor([68, 94848],"float16"), axis=1, )
paddle.sum(Tensor([68, 97280],"float16"), axis=1, )
paddle.sum(Tensor([68, 99712],"float16"), axis=1, )
paddle.sum(Tensor([72, 102144],"float16"), axis=1, )
paddle.sum(Tensor([72, 112896],"float16"), axis=1, )
paddle.sum(Tensor([72, 54400],"float16"), axis=1, )
paddle.sum(Tensor([72, 57600],"float16"), axis=1, )
paddle.sum(Tensor([72, 58752],"float16"), axis=1, )
paddle.sum(Tensor([72, 60800],"float16"), axis=1, )
paddle.sum(Tensor([72, 62400],"float16"), axis=1, )
paddle.sum(Tensor([72, 63936],"float16"), axis=1, )
paddle.sum(Tensor([72, 64000],"float16"), axis=1, )
paddle.sum(Tensor([72, 65600],"float16"), axis=1, )
paddle.sum(Tensor([72, 65664],"float16"), axis=1, )
paddle.sum(Tensor([72, 67200],"float16"), axis=1, )
paddle.sum(Tensor([72, 70528],"float16"), axis=1, )
paddle.sum(Tensor([72, 73984],"float16"), axis=1, )
paddle.sum(Tensor([72, 74240],"float16"), axis=1, )
paddle.sum(Tensor([72, 76160],"float16"), axis=1, )
paddle.sum(Tensor([72, 78400],"float16"), axis=1, )
paddle.sum(Tensor([72, 82688],"float16"), axis=1, )
paddle.sum(Tensor([72, 84864],"float16"), axis=1, )
paddle.sum(Tensor([72, 89984],"float16"), axis=1, )
paddle.sum(Tensor([72, 91392],"float16"), axis=1, )
paddle.sum(Tensor([72, 92416],"float16"), axis=1, )
paddle.sum(Tensor([72, 94080],"float16"), axis=1, )
paddle.sum(Tensor([72, 94848],"float16"), axis=1, )
paddle.sum(Tensor([72, 97280],"float16"), axis=1, )
paddle.sum(Tensor([72, 99712],"float16"), axis=1, )
paddle.sum(Tensor([76, 102144],"float16"), axis=1, )
paddle.sum(Tensor([76, 54400],"float16"), axis=1, )
paddle.sum(Tensor([76, 60800],"float16"), axis=1, )
paddle.sum(Tensor([76, 62400],"float16"), axis=1, )
paddle.sum(Tensor([76, 65664],"float16"), axis=1, )
paddle.sum(Tensor([76, 67200],"float16"), axis=1, )
paddle.sum(Tensor([76, 67392],"float16"), axis=1, )
paddle.sum(Tensor([76, 73984],"float16"), axis=1, )
paddle.sum(Tensor([76, 78336],"float16"), axis=1, )
paddle.sum(Tensor([76, 82688],"float16"), axis=1, )
paddle.sum(Tensor([76, 85120],"float16"), axis=1, )
paddle.sum(Tensor([76, 87552],"float16"), axis=1, )
paddle.sum(Tensor([76, 89216],"float16"), axis=1, )
paddle.sum(Tensor([76, 89984],"float16"), axis=1, )
paddle.sum(Tensor([76, 92416],"float16"), axis=1, )
paddle.sum(Tensor([76, 94080],"float16"), axis=1, )
paddle.sum(Tensor([76, 94848],"float16"), axis=1, )
paddle.sum(Tensor([76, 97280],"float16"), axis=1, )
paddle.sum(Tensor([76, 99712],"float16"), axis=1, )
paddle.sum(Tensor([8, 100, 100],"float16"), )
paddle.sum(Tensor([8, 102144],"float16"), axis=1, )
paddle.sum(Tensor([8, 102400],"float16"), axis=1, )
paddle.sum(Tensor([8, 107520],"float16"), axis=1, )
paddle.sum(Tensor([8, 128, 64, 64],"float16"), name=None, )
paddle.sum(Tensor([8, 16, 32],"float16"), )
paddle.sum(Tensor([8, 256, 64, 64],"float16"), name=None, )
paddle.sum(Tensor([8, 32, 256, 256],"float16"), name=None, )
paddle.sum(Tensor([8, 60800],"float16"), axis=1, )
paddle.sum(Tensor([8, 64, 128, 128],"float16"), name=None, )
paddle.sum(Tensor([8, 67200],"float16"), axis=1, )
paddle.sum(Tensor([8, 73984],"float16"), axis=1, )
paddle.sum(Tensor([8, 76160],"float16"), axis=1, )
paddle.sum(Tensor([8, 82688],"float16"), axis=1, )
paddle.sum(Tensor([8, 84864],"float16"), axis=1, )
paddle.sum(Tensor([8, 85120],"float16"), axis=1, )
paddle.sum(Tensor([8, 87040],"float16"), axis=1, )
paddle.sum(Tensor([8, 89216],"float16"), axis=1, )
paddle.sum(Tensor([8, 92416],"float16"), axis=1, )
paddle.sum(Tensor([8, 94080],"float16"), axis=1, )
paddle.sum(Tensor([8, 94848],"float16"), axis=1, )
paddle.sum(Tensor([8, 97088],"float16"), axis=1, )
paddle.sum(Tensor([8, 99712],"float16"), axis=1, )
paddle.sum(Tensor([80, 102144],"float16"), axis=1, )
paddle.sum(Tensor([80, 54400],"float16"), axis=1, )
paddle.sum(Tensor([80, 60800],"float16"), axis=1, )
paddle.sum(Tensor([80, 62400],"float16"), axis=1, )
paddle.sum(Tensor([80, 63232],"float16"), axis=1, )
paddle.sum(Tensor([80, 64000],"float16"), axis=1, )
paddle.sum(Tensor([80, 65664],"float16"), axis=1, )
paddle.sum(Tensor([80, 67200],"float16"), axis=1, )
paddle.sum(Tensor([80, 69888],"float16"), axis=1, )
paddle.sum(Tensor([80, 73984],"float16"), axis=1, )
paddle.sum(Tensor([80, 76160],"float16"), axis=1, )
paddle.sum(Tensor([80, 82688],"float16"), axis=1, )
paddle.sum(Tensor([80, 84864],"float16"), axis=1, )
paddle.sum(Tensor([80, 85120],"float16"), axis=1, )
paddle.sum(Tensor([80, 86016],"float16"), axis=1, )
paddle.sum(Tensor([80, 89984],"float16"), axis=1, )
paddle.sum(Tensor([80, 91392],"float16"), axis=1, )
paddle.sum(Tensor([80, 92352],"float16"), axis=1, )
paddle.sum(Tensor([80, 92416],"float16"), axis=1, )
paddle.sum(Tensor([80, 94080],"float16"), axis=1, )
paddle.sum(Tensor([80, 97088],"float16"), axis=1, )
paddle.sum(Tensor([80, 97280],"float16"), axis=1, )
paddle.sum(Tensor([800],"float16"), )
paddle.sum(Tensor([84, 102144],"float16"), axis=1, )
paddle.sum(Tensor([84, 104832],"float16"), axis=1, )
paddle.sum(Tensor([84, 54400],"float16"), axis=1, )
paddle.sum(Tensor([84, 57600],"float16"), axis=1, )
paddle.sum(Tensor([84, 60800],"float16"), axis=1, )
paddle.sum(Tensor([84, 62400],"float16"), axis=1, )
paddle.sum(Tensor([84, 67200],"float16"), axis=1, )
paddle.sum(Tensor([84, 69888],"float16"), axis=1, )
paddle.sum(Tensor([84, 72960],"float16"), axis=1, )
paddle.sum(Tensor([84, 73984],"float16"), axis=1, )
paddle.sum(Tensor([84, 75392],"float16"), axis=1, )
paddle.sum(Tensor([84, 78336],"float16"), axis=1, )
paddle.sum(Tensor([84, 78400],"float16"), axis=1, )
paddle.sum(Tensor([84, 82688],"float16"), axis=1, )
paddle.sum(Tensor([84, 84480],"float16"), axis=1, )
paddle.sum(Tensor([84, 84864],"float16"), axis=1, )
paddle.sum(Tensor([84, 91392],"float16"), axis=1, )
paddle.sum(Tensor([84, 92416],"float16"), axis=1, )
paddle.sum(Tensor([84, 97280],"float16"), axis=1, )
paddle.sum(Tensor([88, 102144],"float16"), axis=1, )
paddle.sum(Tensor([88, 54400],"float16"), axis=1, )
paddle.sum(Tensor([88, 56000],"float16"), axis=1, )
paddle.sum(Tensor([88, 57600],"float16"), axis=1, )
paddle.sum(Tensor([88, 59200],"float16"), axis=1, )
paddle.sum(Tensor([88, 60800],"float16"), axis=1, )
paddle.sum(Tensor([88, 62400],"float16"), axis=1, )
paddle.sum(Tensor([88, 63232],"float16"), axis=1, )
paddle.sum(Tensor([88, 65664],"float16"), axis=1, )
paddle.sum(Tensor([88, 67200],"float16"), axis=1, )
paddle.sum(Tensor([88, 69632],"float16"), axis=1, )
paddle.sum(Tensor([88, 73984],"float16"), axis=1, )
paddle.sum(Tensor([88, 77824],"float16"), axis=1, )
paddle.sum(Tensor([88, 78400],"float16"), axis=1, )
paddle.sum(Tensor([88, 80512],"float16"), axis=1, )
paddle.sum(Tensor([88, 82688],"float16"), axis=1, )
paddle.sum(Tensor([88, 83328],"float16"), axis=1, )
paddle.sum(Tensor([88, 84480],"float16"), axis=1, )
paddle.sum(Tensor([88, 86016],"float16"), axis=1, )
paddle.sum(Tensor([88, 87040],"float16"), axis=1, )
paddle.sum(Tensor([88, 87552],"float16"), axis=1, )
paddle.sum(Tensor([88, 88704],"float16"), axis=1, )
paddle.sum(Tensor([88, 89216],"float16"), axis=1, )
paddle.sum(Tensor([88, 91392],"float16"), axis=1, )
paddle.sum(Tensor([88, 92416],"float16"), axis=1, )
paddle.sum(Tensor([88, 94080],"float16"), axis=1, )
paddle.sum(Tensor([88, 94848],"float16"), axis=1, )
paddle.sum(Tensor([88, 97280],"float16"), axis=1, )
paddle.sum(Tensor([92, 102144],"float16"), axis=1, )
paddle.sum(Tensor([92, 104832],"float16"), axis=1, )
paddle.sum(Tensor([92, 54400],"float16"), axis=1, )
paddle.sum(Tensor([92, 57600],"float16"), axis=1, )
paddle.sum(Tensor([92, 59200],"float16"), axis=1, )
paddle.sum(Tensor([92, 60800],"float16"), axis=1, )
paddle.sum(Tensor([92, 67200],"float16"), axis=1, )
paddle.sum(Tensor([92, 76160],"float16"), axis=1, )
paddle.sum(Tensor([92, 82688],"float16"), axis=1, )
paddle.sum(Tensor([92, 84864],"float16"), axis=1, )
paddle.sum(Tensor([92, 89216],"float16"), axis=1, )
paddle.sum(Tensor([92, 91392],"float16"), axis=1, )
paddle.sum(Tensor([92, 91840],"float16"), axis=1, )
paddle.sum(Tensor([92, 92416],"float16"), axis=1, )
paddle.sum(Tensor([92, 94848],"float16"), axis=1, )
paddle.sum(Tensor([92, 99712],"float16"), axis=1, )
paddle.sum(Tensor([96, 102144],"float16"), axis=1, )
paddle.sum(Tensor([96, 112896],"float16"), axis=1, )
paddle.sum(Tensor([96, 54400],"float16"), axis=1, )
paddle.sum(Tensor([96, 58752],"float16"), axis=1, )
paddle.sum(Tensor([96, 59200],"float16"), axis=1, )
paddle.sum(Tensor([96, 60800],"float16"), axis=1, )
paddle.sum(Tensor([96, 62400],"float16"), axis=1, )
paddle.sum(Tensor([96, 63232],"float16"), axis=1, )
paddle.sum(Tensor([96, 65664],"float16"), axis=1, )
paddle.sum(Tensor([96, 67200],"float16"), axis=1, )
paddle.sum(Tensor([96, 67456],"float16"), axis=1, )
paddle.sum(Tensor([96, 72960],"float16"), axis=1, )
paddle.sum(Tensor([96, 76160],"float16"), axis=1, )
paddle.sum(Tensor([96, 77824],"float16"), axis=1, )
paddle.sum(Tensor([96, 78336],"float16"), axis=1, )
paddle.sum(Tensor([96, 80256],"float16"), axis=1, )
paddle.sum(Tensor([96, 82688],"float16"), axis=1, )
paddle.sum(Tensor([96, 85120],"float16"), axis=1, )
paddle.sum(Tensor([96, 89984],"float16"), axis=1, )
paddle.sum(Tensor([96, 91392],"float16"), axis=1, )
paddle.sum(Tensor([96, 92416],"float16"), axis=1, )
paddle.sum(Tensor([96, 97280],"float16"), axis=1, )
paddle.sum(x=Tensor([2, 2],"float64"), axis=Tensor([1],"int64"), )
paddle.tensordot(Tensor([3, 4, 4],"float32"), Tensor([4, 4, 5],"float32"), Tensor([1],"int64"), )
paddle.tensordot(Tensor([3, 4, 4],"float64"), Tensor([4, 4, 5],"float64"), Tensor([1],"int64"), )
paddle.trace(x=Tensor([3, 4],"float64"), offset=-1, axis1=0, axis2=1, )
paddle.trace(x=Tensor([3, 4],"float64"), offset=1, axis1=0, axis2=1, )
paddle.trapezoid(y=Tensor([2, 3],"float32"), x=None, dx=None, axis=-1, )
paddle.trapezoid(y=Tensor([2, 3],"float32"), x=Tensor([2, 3],"float32"), dx=None, axis=-1, )
paddle.trapezoid(y=Tensor([2, 3],"float64"), x=None, dx=None, axis=-1, )
paddle.trapezoid(y=Tensor([2, 3],"float64"), x=Tensor([2, 3],"float64"), dx=None, axis=-1, )
paddle.trapezoid(y=Tensor([3, 3, 4],"float32"), x=Tensor([3],"float32"), dx=None, axis=1, )
paddle.unique(Tensor([120],"int64"), return_index=True, return_inverse=True, return_counts=True, dtype="int32", )
paddle.unique(Tensor([3, 5, 5],"float32"), return_index=True, return_inverse=True, return_counts=True, axis=0, )
paddle.unique(Tensor([],"float32"), return_index=True, return_inverse=True, return_counts=True, )
paddle.unique_consecutive(x=Tensor([4, 1],"float32"), return_inverse=True, )
paddle.unique_consecutive(x=Tensor([6, 1],"float32"), return_inverse=True, return_counts=True, )
paddle.vander(Tensor([5],"complex128"), 2, False, )
paddle.vander(Tensor([5],"complex128"), 3, False, )
paddle.vander(Tensor([5],"complex128"), 4, False, )
paddle.vander(Tensor([5],"float32"), 2, False, )
paddle.vander(Tensor([5],"float32"), 3, False, )
paddle.vander(Tensor([5],"float32"), 4, False, )
paddle.vander(Tensor([5],"float32"), 5, False, )
paddle.vander(Tensor([5],"float32"), 6, False, )
paddle.vander(Tensor([5],"float32"), 7, False, )
paddle.vander(Tensor([5],"float32"), 8, False, )
paddle.vander(Tensor([5],"float32"), None, False, )
paddle.var(Tensor([],"float32"), )
paddle.var(Tensor([],"float32"), list[], )
paddle.vision.ops.deform_conv2d(x=Tensor([20, 128, 76, 136],"float32"), offset=Tensor([20, 18, 76, 136],"float16"), weight=Tensor([128, 128, 3, 3],"float16"), bias=Tensor([128],"float16"), stride=list[1,1,], padding=list[1,1,], dilation=list[1,1,], deformable_groups=1, groups=1, mask=Tensor([20, 9, 76, 136],"float16"), )
paddle.vision.ops.deform_conv2d(x=Tensor([20, 128, 76, 136],"float32"), offset=Tensor([20, 18, 76, 136],"float16"), weight=Tensor([64, 128, 3, 3],"float16"), bias=Tensor([64],"float16"), stride=list[1,1,], padding=list[1,1,], dilation=list[1,1,], deformable_groups=1, groups=1, mask=Tensor([20, 9, 76, 136],"float16"), )
paddle.vision.ops.deform_conv2d(x=Tensor([20, 256, 38, 68],"float32"), offset=Tensor([20, 18, 38, 68],"float16"), weight=Tensor([128, 256, 3, 3],"float16"), bias=Tensor([128],"float16"), stride=list[1,1,], padding=list[1,1,], dilation=list[1,1,], deformable_groups=1, groups=1, mask=Tensor([20, 9, 38, 68],"float16"), )
paddle.vision.ops.deform_conv2d(x=Tensor([20, 256, 38, 68],"float32"), offset=Tensor([20, 18, 38, 68],"float16"), weight=Tensor([256, 256, 3, 3],"float16"), bias=Tensor([256],"float16"), stride=list[1,1,], padding=list[1,1,], dilation=list[1,1,], deformable_groups=1, groups=1, mask=Tensor([20, 9, 38, 68],"float16"), )
paddle.vision.ops.deform_conv2d(x=Tensor([20, 256, 38, 68],"float32"), offset=Tensor([20, 18, 38, 68],"float16"), weight=Tensor([64, 256, 3, 3],"float16"), bias=Tensor([64],"float16"), stride=list[1,1,], padding=list[1,1,], dilation=list[1,1,], deformable_groups=1, groups=1, mask=Tensor([20, 9, 38, 68],"float16"), )
paddle.vision.ops.deform_conv2d(x=Tensor([20, 64, 152, 272],"float32"), offset=Tensor([20, 18, 152, 272],"float16"), weight=Tensor([64, 64, 3, 3],"float16"), bias=Tensor([64],"float16"), stride=list[1,1,], padding=list[1,1,], dilation=list[1,1,], deformable_groups=1, groups=1, mask=Tensor([20, 9, 152, 272],"float16"), )
paddle.vision.ops.deform_conv2d(x=Tensor([4, 32, 64, 64],"float32"), offset=Tensor([4, 144, 64, 64],"float32"), weight=Tensor([32, 32, 3, 3],"float16"), bias=Tensor([32],"float16"), stride=list[1,1,], padding=list[1,1,], dilation=list[1,1,], deformable_groups=8, groups=1, mask=Tensor([4, 72, 64, 64],"float16"), )
paddle.vision.ops.deform_conv2d(x=Tensor([4, 32, 64, 64],"float32"), offset=Tensor([4, 72, 64, 64],"float32"), weight=Tensor([32, 32, 3, 3],"float16"), bias=Tensor([32],"float16"), stride=list[1,1,], padding=list[1,1,], dilation=list[1,1,], deformable_groups=4, groups=1, mask=Tensor([4, 36, 64, 64],"float16"), )
paddle.vision.ops.deform_conv2d(x=Tensor([4, 32, 64, 64],"float32"), offset=Tensor([4, 72, 64, 64],"float32"), weight=Tensor([32, 32, 3, 3],"float16"), bias=Tensor([32],"float16"), stride=list[1,1,], padding=list[1,1,], dilation=list[1,1,], deformable_groups=4, groups=1, mask=Tensor([4, 36, 64, 64],"float32"), )
