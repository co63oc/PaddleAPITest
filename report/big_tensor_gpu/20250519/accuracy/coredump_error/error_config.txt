paddle.nn.functional.pairwise_distance(Tensor([100, 22817014],"float32"), Tensor([100, 22817014],"float32"), math.inf, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([100, 42949673],"float16"), Tensor([100, 42949673],"float16"), 2, 1e-06, False, None, )
paddle.nn.functional.normalize(Tensor([60, 38028357],"float32"), axis=0, )
paddle.nn.functional.grid_sample(x=Tensor([16, 64, 80, 94, 311],"float32"), grid=Tensor([16, 280, 376, 25, 3],"float32"), mode="bilinear", padding_mode="zeros", align_corners=False, )
paddle.trunc(input=Tensor([3, 6628036, 6, 6, 6],"float16"), )
paddle.copysign(Tensor([12, 20, 9507090],"float32"), Tensor([12, 20, 9507090],"float32"), )
paddle.cumsum(Tensor([570425345, 4],"int64"), axis=0, )
paddle.nn.functional.pairwise_distance(Tensor([100, 22817014],"float32"), Tensor([100, 22817014],"float32"), -1, 1e-06, False, None, )
paddle.std(x=Tensor([3, 477218589, 3],"float16"), axis=0, )
paddle.trunc(input=Tensor([380283564, 6],"int32"), )
paddle.nn.functional.pairwise_distance(Tensor([100, 42949673],"float16"), Tensor([100, 42949673],"float16"), math.inf, 1e-06, True, None, )
paddle.argmax(Tensor([4, 4, 4, 16777217, 4],"float16"), axis=0, )
paddle.linalg.norm(x=Tensor([2, 536870913, 4],"float16"), p=1, axis=list[0,1,], keepdim=True, )
paddle.trunc(Tensor([20, 114085069],"float32"), )
paddle.nn.functional.normalize(Tensor([2, 16297867, 7, 10],"float32"), axis=1, )
paddle.nn.functional.pairwise_distance(Tensor([100, 22817014],"float32"), Tensor([100, 22817014],"float32"), 2, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([22817014, 100],"float32"), Tensor([22817014, 100],"float32"), 1, 1e-06, True, None, )
paddle.Tensor.cumsum(Tensor([1, 192, 11883862],"float32"), 2, )
paddle.trunc(input=Tensor([6, 119304648, 6],"float16"), )
paddle.copysign(Tensor([214748365, 20],"float16"), Tensor([214748365, 20],"float16"), )
paddle.nn.functional.normalize(Tensor([456340276, 5],"float32"), axis=0, )
paddle.Tensor.cumsum(Tensor([285212673, 4, 2],"int64"), axis=1, )
paddle.copysign(Tensor([214748365, 4, 5],"float16"), Tensor([4, 5],"float16"), )
paddle.nn.functional.pairwise_distance(Tensor([22817014, 100],"float32"), Tensor([22817014, 100],"float32"), -1, 1e-06, False, None, )
paddle.argmin(Tensor([3, 3, 3, 3, 3, 17674763],"float16"), axis=0, )
paddle.nn.functional.grid_sample(Tensor([56, 3, 6790778, 2],"float32"), Tensor([56, 2, 6790778, 2],"float32"), mode="bilinear", padding_mode="border", align_corners=True, )
paddle.nn.functional.adaptive_max_pool2d(x=Tensor([29217465, 3, 7, 7],"float32"), return_mask=False, output_size=list[3,3,], )
paddle.unique_consecutive(x=Tensor([570425345, 4],"float32"), return_inverse=True, return_counts=True, axis=0, )
paddle.argmin(x=Tensor([357913942, 3, 4],"float16"), axis=1, keepdim=False, )
paddle.trunc(Tensor([10, 20, 11408507],"float32"), )
paddle.argmax(Tensor([3, 17674763, 3, 3, 3, 3],"float16"), axis=0, )
paddle.nn.functional.pairwise_distance(Tensor([42949673, 100],"float16"), Tensor([42949673, 100],"float16"), 1, 1e-06, False, None, )
paddle.nn.functional.adaptive_max_pool2d(x=Tensor([29217465, 3, 7, 7],"float32"), output_size=list[2,5,], )
paddle.frac(Tensor([760567127, 3],"float32"), )
paddle.argmin(x=Tensor([3, 3, 477218589],"float16"), axis=1, keepdim=False, )
paddle.nn.functional.pairwise_distance(Tensor([100, 42949673],"float16"), Tensor([100, 42949673],"float16"), -math.inf, 1e-06, True, None, )
paddle.cumsum(Tensor([570425345, 4],"int64"), axis=-2, )
paddle.copysign(Tensor([114085069, 20],"float32"), Tensor([114085069, 20],"float32"), )
paddle.frac(Tensor([114085069, 20, 1],"float32"), )
paddle.nn.functional.grid_sample(Tensor([5821, 4, 280, 350],"float32"), Tensor([5821, 368, 416, 2],"float32"), mode="nearest", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.grid_sample(Tensor([742742, 3, 32, 32],"float32"), Tensor([742742, 32, 32, 2],"float32"), mode="bilinear", padding_mode="border", align_corners=True, )
paddle.nn.functional.normalize(x=Tensor([4, 5, 214748365],"float16"), )
paddle.cumsum(Tensor([51856850, 44],"int64"), axis=1, )
paddle.nn.functional.normalize(x=Tensor([4, 5, 6, 35791395],"float16"), )
paddle.trunc(input=Tensor([3, 6, 6, 6628036, 6],"float16"), )
paddle.nn.functional.pairwise_distance(Tensor([22817014, 100],"float32"), Tensor([22817014, 100],"float32"), -1, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([22817014, 100],"float32"), Tensor([22817014, 100],"float32"), math.inf, 1e-06, False, None, )
paddle.nn.functional.normalize(Tensor([4, 570425345],"float32"), axis=0, )
paddle.Tensor.cumsum(Tensor([570425345, 4],"int64"), axis=0, )
paddle.std(Tensor([35791395, 3, 4, 10],"float16"), 2, True, False, )
paddle.nn.functional.normalize(Tensor([1, 64, 557057, 64],"float32"), axis=1, )
paddle.trunc(input=Tensor([3314018, 6, 6, 6, 6],"float16"), )
paddle.cumsum(Tensor([114085069, 20],"int64"), axis=1, )
paddle.argmax(Tensor([4, 4, 16777217, 4, 4],"float16"), axis=0, )
paddle.nn.functional.normalize(Tensor([10, 228170138],"float32"), )
paddle.nn.functional.adaptive_max_pool2d(Tensor([29217465, 3, 7, 7],"float32"), output_size=list[None,3,], return_mask=False, name=None, )
paddle.nn.functional.normalize(x=Tensor([4, 5, 30678338, 7],"float16"), )
paddle.dist(x=Tensor([4, 1073741825],"float16"), y=Tensor([4, 1073741825],"float16"), p=1, )
paddle.nn.functional.normalize(x=Tensor([20452226, 5, 6, 7],"float16"), p=1, )
paddle.nn.functional.grid_sample(Tensor([56, 3, 848848, 16],"float32"), Tensor([56, 16, 16, 2],"float32"), mode="bilinear", padding_mode="border", align_corners=True, )
paddle.argmax(Tensor([4, 4, 4, 4, 16777217],"float16"), axis=0, )
paddle.Tensor.repeat_interleave(Tensor([2281701379, 1],"int64"), 1, axis=0, )
paddle.argmin(Tensor([3, 17674763, 3, 3, 3, 3],"float16"), axis=0, )
paddle.copysign(Tensor([2281701379],"float32"), Tensor([2281701379],"float32"), )
paddle.nn.functional.pairwise_distance(Tensor([42949673, 100],"float16"), Tensor([42949673, 100],"float16"), math.inf, 1e-06, True, None, )
paddle.argmin(Tensor([4, 4, 4, 4, 16777217],"float16"), axis=0, )
paddle.copysign(Tensor([4, 5],"float16"), Tensor([214748365, 4, 5],"float16"), )
paddle.nn.functional.normalize(x=Tensor([4, 1073741825],"float16"), p=1.2, )
paddle.Tensor.cumsum(Tensor([3, 380283564, 2],"int64"), axis=0, )
paddle.cumsum(Tensor([50704476, 45],"int64"), axis=1, )
paddle.Tensor.argmax(Tensor([1, 1, 2281701379],"float32"), axis=-2, )
paddle.nn.functional.grid_sample(Tensor([56, 39790, 32, 32],"float32"), Tensor([56, 32, 32, 2],"float32"), mode="bilinear", padding_mode="border", align_corners=True, )
paddle.argmax(Tensor([4, 16777217, 4, 4, 4],"float16"), axis=0, )
paddle.nn.functional.pairwise_distance(Tensor([42949673, 100],"float16"), Tensor([42949673, 100],"float16"), math.inf, 1e-06, False, None, )
paddle.nn.functional.normalize(Tensor([1, 557057, 64, 64],"float32"), axis=1, )
paddle.cumsum(x=Tensor([1, 16, 8388609, 32],"float16"), axis=2, )
paddle.nn.functional.normalize(Tensor([4074467, 8, 7, 10],"float32"), axis=1, )
paddle.nn.functional.normalize(x=Tensor([4, 5, 30678338, 7],"float16"), p=4, axis=3, )
paddle.nn.functional.normalize(Tensor([8388609, 512],"float16"), )
paddle.argmin(Tensor([4, 4, 16777217, 4, 4],"float16"), axis=0, )
paddle.Tensor.argmax(Tensor([4, 285212673, 2],"float32"), axis=-1, )
paddle.trunc(Tensor([114085069, 20, 1],"float32"), )
paddle.cumsum(x=Tensor([87382, 16, 96, 32],"float16"), axis=2, )
paddle.nn.functional.grid_sample(Tensor([73661, 1, 176, 176],"float32"), Tensor([73661, 1, 12544, 2],"float32"), align_corners=False, )
paddle.nn.functional.normalize(Tensor([325957340, 7],"float32"), axis=1, )
paddle.Tensor.cumsum(Tensor([1, 15845149, 144],"float32"), 1, )
paddle.nn.functional.normalize(Tensor([2, 8, 7, 20372334],"float32"), axis=1, )
paddle.nn.functional.normalize(x=Tensor([570425345, 4],"float32"), )
paddle.nn.functional.rrelu(Tensor([38028357, 3, 4, 5],"float32"), 0.1, 0.3, training=False, )
paddle.Tensor.cumsum(Tensor([3, 4, 190141782],"int64"), axis=0, )
paddle.nn.functional.normalize(Tensor([325957340, 7],"float32"), axis=0, )
paddle.nn.functional.normalize(x=Tensor([4, 5, 30678338, 7],"float16"), p=1, )
paddle.Tensor.cumsum(Tensor([3, 4, 190141782],"int64"), axis=1, )
paddle.nn.functional.pairwise_distance(Tensor([100, 42949673],"float16"), Tensor([100, 42949673],"float16"), -math.inf, 1e-06, False, None, )
paddle.Tensor.cumsum(Tensor([285212673, 4, 2],"int64"), axis=2, )
paddle.nn.functional.normalize(Tensor([2970966, 768],"float32"), axis=-1, )
paddle.nn.functional.pairwise_distance(Tensor([22817014, 100],"float32"), Tensor([22817014, 100],"float32"), 1, 1e-06, False, None, )
paddle.trunc(Tensor([10, 228170138, 1],"float32"), )
paddle.nn.functional.pairwise_distance(Tensor([42949673, 100],"float16"), Tensor([42949673, 100],"float16"), -1, 1e-06, False, None, )
paddle.Tensor.cumsum(Tensor([5, 456340276],"int64"), axis=0, )
paddle.argmax(Tensor([3, 3, 3, 17674763, 3, 3],"float16"), axis=0, )
paddle.argmax(x=Tensor([3, 3, 477218589],"float16"), axis=1, keepdim=False, )
paddle.nn.functional.pairwise_distance(x=Tensor([100, 22817014],"float32"), y=Tensor([100, 22817014],"float32"), p=2.0, epsilon=1e-06, keepdim=False, )
paddle.std(x=Tensor([3, 477218589, 3],"float16"), axis=0, unbiased=False, )
paddle.nn.functional.normalize(Tensor([2, 8, 14260634, 10],"float32"), axis=1, )
paddle.argmin(Tensor([4, 16777217, 4, 4, 4],"float16"), axis=0, )
paddle.cumsum(Tensor([3, 760567127],"int64"), axis=-2, )
paddle.argmax(Tensor([3, 3, 3, 3, 3, 17674763],"float16"), axis=0, )
paddle.cumsum(Tensor([49602204, 46],"int64"), axis=1, )
paddle.trunc(input=Tensor([6, 6, 19884108, 6],"float16"), )
paddle.trunc(input=Tensor([3, 6, 6628036, 6, 6],"float16"), )
paddle.nn.functional.normalize(x=Tensor([4, 25565282, 6, 7],"float16"), p=1, )
paddle.argmax(Tensor([3, 3, 3, 3, 17674763, 3],"float16"), axis=0, )
paddle.nn.functional.pairwise_distance(Tensor([22817014, 100],"float32"), Tensor([22817014, 100],"float32"), -math.inf, 1e-06, True, None, )
paddle.nn.functional.layer_norm(Tensor([69633, 128, 256],"float32"), list[256,], weight=Tensor([256],"float32"), bias=Tensor([256],"float32"), epsilon=1e-05, )
paddle.argmin(Tensor([4, 4, 4, 16777217, 4],"float16"), axis=0, )
paddle.nn.functional.normalize(x=Tensor([143165577, 5, 6],"float16"), )
paddle.dist(Tensor([2, 1140850690],"float32"), Tensor([2, 1140850690],"float32"), 0, )
paddle.nn.functional.rrelu(Tensor([2, 3, 4, 95070891],"float32"), 0.1, 0.3, training=False, )
paddle.argmax(Tensor([2, 536870913, 4],"float16"), axis=-1, keepdim=True, )
paddle.nn.functional.normalize(Tensor([1, 128, 557057, 32],"float32"), axis=1, )
paddle.nn.functional.normalize(Tensor([228170138, 10],"float32"), )
paddle.nn.functional.normalize(Tensor([1, 8912897, 16, 16],"float32"), axis=1, )
paddle.nn.functional.normalize(Tensor([8705, 64, 64, 64],"float32"), axis=1, )
paddle.Tensor.cumsum(Tensor([1, 285212673, 8],"float32"), 1, )
paddle.nn.functional.pairwise_distance(Tensor([22817014, 100],"float32"), Tensor([22817014, 100],"float32"), -math.inf, 1e-06, False, None, )
paddle.trunc(input=Tensor([6, 6, 119304648],"float16"), )
paddle.nn.functional.rrelu(Tensor([2, 3, 76056713, 5],"float32"), 0.1, 0.3, training=False, )
paddle.nn.functional.pairwise_distance(Tensor([1431655766, 3],"float16"), Tensor([1431655766, 3],"float16"), 2, 1e-06, False, None, )
paddle.Tensor.argmax(Tensor([93991, 1, 24276],"float32"), axis=-2, )
paddle.cumsum(x=Tensor([1, 1398102, 96, 32],"float16"), axis=2, )
paddle.nn.functional.pairwise_distance(Tensor([22817014, 100],"float32"), Tensor([22817014, 100],"float32"), math.inf, 1e-06, True, None, )
paddle.nn.functional.normalize(Tensor([1, 64, 64, 557057],"float32"), axis=1, )
paddle.nn.functional.pairwise_distance(Tensor([2, 1140850690],"float32"), Tensor([2, 1140850690],"float32"), math.inf, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([760567127, 3],"float32"), Tensor([760567127, 3],"float32"), 2, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([100, 22817014],"float32"), Tensor([100, 22817014],"float32"), math.inf, 1e-06, False, None, )
paddle.Tensor.cumsum(Tensor([1, 253522376, 9],"float32"), 1, )
paddle.Tensor.cumsum(Tensor([3, 380283564, 2],"int64"), axis=2, )
paddle.nn.functional.normalize(Tensor([228170138, 10],"float32"), p=1.5, )
paddle.linalg.solve(Tensor([10, 10],"float32"), Tensor([10, 228170138],"float32"), )
paddle.copysign(Tensor([2, 3, 4, 178956971],"float16"), Tensor([2, 3, 4, 178956971],"float16"), )
paddle.trunc(input=Tensor([6, 6, 6, 19884108],"float16"), )
paddle.nn.functional.adaptive_max_pool2d(x=Tensor([29217465, 3, 7, 7],"float32"), output_size=list[None,3,], )
paddle.nn.functional.pairwise_distance(Tensor([42949673, 100],"float16"), Tensor([42949673, 100],"float16"), -math.inf, 1e-06, False, None, )
paddle.copysign(Tensor([2, 107374183, 4, 5],"float16"), Tensor([2, 107374183, 4, 5],"float16"), )
paddle.cumsum(x=Tensor([1, 16, 96, 2796203],"float16"), axis=2, )
paddle.nn.functional.normalize(Tensor([1, 128, 32, 557057],"float32"), axis=1, )
paddle.frac(Tensor([2, 1140850690],"float32"), )
paddle.nn.functional.normalize(x=Tensor([20452226, 5, 6, 7],"float16"), p=4, axis=3, )
paddle.Tensor.cumsum(Tensor([3, 380283564, 2],"int64"), axis=1, )
paddle.copysign(Tensor([8, 17, 751921, 6, 7],"float16"), Tensor([8, 17, 751921, 6, 7],"float16"), )
paddle.Tensor.cumsum(Tensor([3, 760567127],"int64"), axis=0, )
paddle.trapezoid(y=Tensor([1073741825, 4],"float16"), x=Tensor([1073741825, 4],"float16"), )
paddle.nn.functional.adaptive_max_pool1d(Tensor([2, 67108864, 32],"float32"), output_size=16, )
paddle.dist(x=Tensor([1073741825, 4],"float16"), y=Tensor([1073741825, 4],"float16"), p=1, )
paddle.nn.functional.normalize(Tensor([207427399, 11],"float32"), axis=1, )
paddle.nn.functional.pairwise_distance(Tensor([42949673, 100],"float16"), Tensor([42949673, 100],"float16"), 1, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([22817014, 100],"float32"), Tensor([22817014, 100],"float32"), 2, 1e-06, True, None, )
paddle.trunc(input=Tensor([6, 380283564],"int32"), )
paddle.copysign(Tensor([8, 17, 5, 6, 1052689],"float16"), Tensor([8, 17, 5, 6, 1052689],"float16"), )
paddle.copysign(Tensor([57042535, 20, 2],"float32"), Tensor([57042535, 20, 2],"float32"), )
paddle.Tensor.cumsum(Tensor([1, 144, 15845149],"float32"), 2, )
paddle.nn.functional.normalize(Tensor([253522376, 9],"float32"), axis=1, )
paddle.nn.functional.normalize(x=Tensor([4, 5, 6, 35791395],"float16"), p=1, )
paddle.nn.functional.normalize(Tensor([570425345, 4],"float32"), axis=0, )
paddle.frac(Tensor([10, 20, 11408507],"float32"), )
paddle.linalg.norm(x=Tensor([2, 536870913, 4],"float16"), p=1, axis=list[0,1,], keepdim=False, )
paddle.nn.functional.pairwise_distance(Tensor([100, 22817014],"float32"), Tensor([100, 22817014],"float32"), 2.0, 1e-06, False, None, )
paddle.copysign(Tensor([71582789, 3, 4, 5],"float16"), Tensor([71582789, 3, 4, 5],"float16"), )
paddle.nn.functional.grid_sample(Tensor([727584, 4, 28, 28],"float32"), Tensor([727584, 28, 28, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.layer_norm(Tensor([8, 1114113, 256],"float32"), list[256,], weight=Tensor([256],"float32"), bias=Tensor([256],"float32"), epsilon=1e-05, )
paddle.Tensor.argmax(Tensor([7225, 157920, 2],"float32"), axis=-1, )
paddle.nn.functional.normalize(x=Tensor([20452226, 5, 6, 7],"float16"), )
paddle.nn.functional.normalize(Tensor([34817, 256, 16, 16],"float32"), axis=1, )
paddle.nn.functional.normalize(Tensor([1, 256, 16, 557057],"float32"), axis=1, )
paddle.nn.functional.normalize(Tensor([4194305, 1024],"float16"), p=2, axis=-1, )
paddle.nn.functional.grid_sample(Tensor([56, 9948, 64, 64],"float32"), Tensor([56, 64, 64, 2],"float32"), mode="bilinear", padding_mode="border", align_corners=True, )
paddle.nn.functional.normalize(Tensor([35651585, 64],"float32"), axis=-1, )
paddle.std(Tensor([1, 3, 4, 357913942],"float16"), 2, True, False, )
paddle.argmax(Tensor([8912897, 2, 4, 16, 2],"float32"), axis=-1, )
paddle.nn.functional.normalize(Tensor([760567127, 3],"float32"), axis=0, )
paddle.dist(x=Tensor([2147483649, 2],"float16"), y=Tensor([2147483649, 2],"float16"), p=0, )
paddle.nn.functional.normalize(Tensor([228170138, 10],"float32"), axis=0, )
paddle.nn.functional.pairwise_distance(Tensor([760567127, 3],"float32"), Tensor([760567127, 3],"float32"), 1, 1e-06, False, None, )
paddle.trunc(input=Tensor([19884108, 6, 6, 6],"float16"), )
paddle.copysign(Tensor([2, 3, 143165577, 5],"float16"), Tensor([2, 3, 143165577, 5],"float16"), )
paddle.nn.functional.normalize(x=Tensor([2970966, 768],"float32"), axis=-1, )
paddle.dist(x=Tensor([4294967297],"float16"), y=Tensor([4294967297],"float16"), )
paddle.nn.functional.grid_sample(Tensor([56, 3, 848848, 16],"float32"), Tensor([56, 16, 848848, 2],"float32"), mode="bilinear", padding_mode="border", align_corners=True, )
paddle.trunc(input=Tensor([6, 19884108, 6, 6],"float16"), )
paddle.nn.functional.normalize(x=Tensor([2, 1140850690],"float32"), )
paddle.argmin(Tensor([3, 3, 3, 17674763, 3, 3],"float16"), axis=0, )
paddle.nn.functional.rrelu(Tensor([2, 57042535, 4, 5],"float32"), 0.1, 0.3, training=False, )
paddle.argmin(Tensor([3, 3, 17674763, 3, 3, 3],"float16"), axis=0, )
paddle.argmax(Tensor([13, 1371215, 4, 16, 2],"float32"), axis=-1, )
paddle.bmm(x=Tensor([2, 715827883, 3],"float16"), y=Tensor([2, 3, 2],"float16"), )
paddle.nn.functional.pairwise_distance(Tensor([100, 22817014],"float32"), Tensor([100, 22817014],"float32"), -math.inf, 1e-06, False, None, )
paddle.cumsum(Tensor([21939437, 104],"int64"), 1, )
paddle.dist(Tensor([1140850690, 2],"float32"), Tensor([1140850690, 2],"float32"), 0, )
paddle.nn.functional.normalize(Tensor([1006, 2268093],"float32"), )
paddle.trunc(input=Tensor([119304648, 6, 6],"float16"), )
paddle.argmax(Tensor([357913942, 3, 4],"float16"), axis=-1, keepdim=True, )
paddle.copysign(Tensor([8, 2556529, 5, 6, 7],"float16"), Tensor([8, 2556529, 5, 6, 7],"float16"), )
paddle.cumsum(Tensor([207427399, 11],"int64"), axis=-1, )
paddle.nn.functional.normalize(Tensor([11883862, 192],"float32"), axis=1, )
paddle.nn.functional.adaptive_max_pool2d(Tensor([29217465, 3, 7, 7],"float32"), output_size=list[3,3,], return_mask=False, name=None, )
paddle.nn.functional.pairwise_distance(Tensor([100, 22817014],"float32"), Tensor([100, 22817014],"float32"), -math.inf, 1e-06, True, None, )
paddle.nn.functional.normalize(Tensor([80, 28521268],"float32"), axis=-1, )
paddle.nn.functional.pairwise_distance(Tensor([2, 1140850690],"float32"), Tensor([2, 1140850690],"float32"), -math.inf, 1e-06, False, None, )
paddle.cumsum(Tensor([114085069, 20],"int64"), axis=-1, )
paddle.cumsum(Tensor([22369622, 102],"int64"), 1, )
paddle.nn.functional.normalize(Tensor([10, 228170138],"float32"), axis=0, )
paddle.nn.functional.normalize(Tensor([35651585, 64],"float32"), axis=1, )
paddle.nn.functional.pairwise_distance(Tensor([100, 42949673],"float16"), Tensor([100, 42949673],"float16"), -1, 1e-06, False, None, )
paddle.cumsum(Tensor([22591103, 101],"int64"), 1, )
paddle.std(x=Tensor([3, 3, 477218589],"float16"), axis=0, )
paddle.copysign(Tensor([3, 286331154, 5],"float16"), Tensor([5],"float16"), )
paddle.cumsum(Tensor([22817014, 100],"int64"), 1, )
paddle.nn.functional.normalize(Tensor([1, 2228225, 32, 32],"float32"), axis=1, )
paddle.dist(x=Tensor([1073741825, 4],"float16"), y=Tensor([1073741825, 4],"float16"), )
paddle.Tensor.argmax(Tensor([67908, 1, 33600],"float32"), axis=-2, )
paddle.nn.functional.pairwise_distance(Tensor([42949673, 100],"float16"), Tensor([42949673, 100],"float16"), 2, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([100, 22817014],"float32"), Tensor([100, 22817014],"float32"), 2, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([42949673, 100],"float16"), Tensor([42949673, 100],"float16"), -math.inf, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([858993460, 5],"float16"), Tensor([858993460, 5],"float16"), 2, 1e-06, False, None, )
paddle.dist(x=Tensor([4, 1073741825],"float16"), y=Tensor([4, 1073741825],"float16"), )
paddle.nn.functional.normalize(Tensor([12, 190141782],"float32"), axis=-1, )
paddle.argmax(Tensor([13, 2, 4, 10969719, 2],"float32"), axis=-1, )
paddle.Tensor.argmax(Tensor([221848, 1, 10285],"float32"), axis=-2, )
paddle.nn.functional.normalize(x=Tensor([1073741825, 4],"float16"), )
paddle.Tensor.argmax(Tensor([83837, 1, 27216],"float32"), axis=-2, )
paddle.nn.functional.normalize(Tensor([1, 256, 557057, 16],"float32"), axis=1, )
paddle.nn.functional.pairwise_distance(Tensor([22817014, 100],"float32"), Tensor([22817014, 100],"float32"), 2, 1e-06, False, None, )
paddle.trunc(input=Tensor([3, 6, 6, 6, 6628036],"float16"), )
paddle.nn.functional.pairwise_distance(Tensor([100, 42949673],"float16"), Tensor([100, 42949673],"float16"), 2, 1e-06, True, None, )
paddle.copysign(Tensor([10, 228170138],"float32"), Tensor([10, 228170138],"float32"), )
paddle.copysign(Tensor([214748365, 4, 5],"float16"), Tensor([5],"float16"), )
paddle.copysign(Tensor([12, 178956971, 2],"float16"), Tensor([12, 178956971, 2],"float16"), )
paddle.std(x=Tensor([3, 3, 477218589],"float16"), axis=0, unbiased=False, )
paddle.nn.functional.pairwise_distance(Tensor([100, 22817014],"float32"), Tensor([100, 22817014],"float32"), -1, 1e-06, True, None, )
paddle.frac(Tensor([10, 228170138, 1],"float32"), )
paddle.Tensor.cumsum(Tensor([285212673, 4, 2],"int64"), axis=0, )
paddle.argmax(x=Tensor([357913942, 3, 4],"float16"), axis=1, keepdim=False, )
paddle.nn.functional.grid_sample(Tensor([5821, 4, 280, 350],"float32"), Tensor([5821, 298, 364, 2],"float32"), mode="nearest", padding_mode="zeros", align_corners=False, )
paddle.copysign(Tensor([8, 17, 5, 902305, 7],"float16"), Tensor([8, 17, 5, 902305, 7],"float16"), )
paddle.nn.functional.grid_sample(Tensor([5821, 4, 280, 350],"float32"), Tensor([5821, 280, 350, 2],"float32"), mode="nearest", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.pairwise_distance(Tensor([42949673, 100],"float16"), Tensor([42949673, 100],"float16"), -1, 1e-06, True, None, )
paddle.Tensor.cumsum(Tensor([1, 11408507, 200],"float32"), 1, )
paddle.copysign(Tensor([10, 429496730],"float16"), Tensor([10, 429496730],"float16"), )
paddle.nn.functional.adaptive_max_pool1d(Tensor([2, 67108864, 32],"float32"), 16, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([42949673, 100],"float16"), Tensor([42949673, 100],"float16"), 2, 1e-06, True, None, )
paddle.cumsum(Tensor([760567127, 3],"float32"), axis=0, )
paddle.copysign(Tensor([12, 20, 17895698],"float16"), Tensor([12, 20, 17895698],"float16"), )
paddle.copysign(Tensor([12, 95070891, 2],"float32"), Tensor([12, 95070891, 2],"float32"), )
paddle.argmin(Tensor([3, 3, 3, 3, 17674763, 3],"float16"), axis=0, )
paddle.nn.functional.pairwise_distance(Tensor([100, 42949673],"float16"), Tensor([100, 42949673],"float16"), math.inf, 1e-06, False, None, )
paddle.cumsum(Tensor([3, 760567127],"int64"), axis=0, )
paddle.cumulative_trapezoid(y=Tensor([1073741825, 4],"float16"), x=Tensor([1073741825, 4],"float16"), )
paddle.cumsum(Tensor([22152441, 103],"int64"), 1, )
paddle.cumsum(x=Tensor([715827883, 2, 1, 3],"float16"), axis=-4, )
paddle.Tensor.cumsum(Tensor([1, 18, 126761188],"float32"), 2, )
paddle.trapezoid(Tensor([2281701379],"float32"), dx=2.0, )
paddle.trunc(Tensor([114085069, 20],"float32"), )
paddle.nn.functional.adaptive_max_pool2d(Tensor([29217465, 3, 7, 7],"float32"), output_size=list[2,5,], return_mask=False, name=None, )
paddle.argmax(Tensor([13, 2, 2742430, 16, 2],"float32"), axis=-1, )
paddle.dist(x=Tensor([2, 2147483649],"float16"), y=Tensor([2, 2147483649],"float16"), p=0, )
paddle.nn.functional.grid_sample(Tensor([727584, 4, 28, 28],"float32"), Tensor([727584, 34, 34, 2],"float32"), mode="nearest", padding_mode="zeros", align_corners=False, )
paddle.dist(x=Tensor([570425345, 4],"float32"), y=Tensor([570425345, 4],"float32"), )
paddle.argmax(Tensor([3, 3, 17674763, 3, 3, 3],"float16"), axis=0, )
paddle.nn.functional.normalize(Tensor([10, 228170138],"float32"), p=1.5, )
paddle.nn.functional.normalize(Tensor([17409, 128, 32, 32],"float32"), axis=1, )
paddle.Tensor.cumsum(Tensor([570425345, 4],"int64"), axis=1, )
paddle.nn.functional.grid_sample(Tensor([56, 3, 6790778, 2],"float32"), Tensor([56, 2, 2, 2],"float32"), mode="bilinear", padding_mode="border", align_corners=True, )
paddle.copysign(Tensor([1203073, 17, 5, 6, 7],"float16"), Tensor([1203073, 17, 5, 6, 7],"float16"), )
paddle.nn.functional.normalize(Tensor([45, 50704476],"float32"), axis=0, )
paddle.Tensor.argmax(Tensor([75245, 1, 30324],"float32"), axis=-2, )
paddle.Tensor.cumsum(Tensor([1, 91268056, 25],"float32"), 1, )
paddle.nn.functional.normalize(Tensor([4456449, 512],"float32"), )
paddle.nn.functional.pairwise_distance(Tensor([1431655766, 3],"float16"), Tensor([1431655766, 3],"float16"), 1, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([100, 42949673],"float16"), Tensor([100, 42949673],"float16"), -1, 1e-06, True, None, )
paddle.copysign(Tensor([107374183, 20, 2],"float16"), Tensor([107374183, 20, 2],"float16"), )
paddle.cumsum(Tensor([1140850690, 2],"int64"), axis=-1, )
paddle.dist(x=Tensor([4, 570425345],"float32"), y=Tensor([4, 570425345],"float32"), )
paddle.cumsum(Tensor([3, 190141782, 4],"float32"), axis=1, )
