paddle.nn.functional.adaptive_max_pool2d(x=Tensor([29217465, 3, 7, 7],"float32"), return_mask=False, output_size=list[3,3,], )
paddle.linalg.norm(Tensor([2, 107374183, 4, 5],"float16"), 2.0, 1, False, )
paddle.tril(Tensor([2281701379, 1],"float32"), diagonal=0, )
paddle.nn.functional.normalize(Tensor([2, 2147483649],"float16"), p=2, axis=-1, )
paddle.nn.functional.normalize(Tensor([4294967295],"float32"), axis=0, epsilon=1e-10, )
paddle.nn.functional.triplet_margin_with_distance_loss(Tensor([5, 858993460],"float16"), Tensor([5, 858993460],"float16"), Tensor([5, 858993460],"float16"), margin=0.3, swap=False, reduction="mean", name=None, )
paddle.chunk(Tensor([52, 4, 7, 1567103],"float32"), 3, axis=-1, )
paddle.linalg.vector_norm(x=Tensor([357913942, 3, 4],"float32"), p=math.inf, axis=None, keepdim=False, )
paddle.sum(Tensor([3, 4, 357913942],"int32"), axis=0, keepdim=True, )
paddle.triu(x=Tensor([3, 2, 715827883],"float16"), diagonal=-5, )
paddle.Tensor.argmax(Tensor([75245, 1, 30324],"float32"), axis=-2, )
paddle.sum(Tensor([536870912, 4, 2],"int32"), axis=1, keepdim=True, )
paddle.nn.functional.normalize(Tensor([2, 16297867, 7, 10],"float32"), axis=1, )
paddle.nn.functional.pairwise_distance(Tensor([4294967297],"float16"), Tensor([4294967297],"float16"), 2, 1e-06, False, None, )
paddle.nn.functional.adaptive_max_pool2d(x=Tensor([29217465, 3, 7, 7],"float32"), output_size=list[2,5,], )
paddle.chunk(Tensor([1, 1, 1, 4294967297],"float16"), 2, axis=-1, )
paddle.Tensor.cumsum(Tensor([1, 285212673, 8],"float32"), 1, )
paddle.Tensor.lerp(x=Tensor([4, 268435457, 4],"float16"), y=Tensor([4, 268435457, 4],"float16"), weight=0.5, )
paddle.tril(x=Tensor([3, 715827883, 2],"float16"), diagonal=-1, )
paddle.nanmean(Tensor([2, 3, 4, 178956971],"float32"), list[0,1,2,3,], False, )
paddle.trunc(input=Tensor([6, 6, 119304648],"float16"), )
paddle.argmax(x=Tensor([357913942, 3, 4],"float16"), axis=1, keepdim=False, )
paddle.nn.functional.pairwise_distance(Tensor([1431655766, 3],"float16"), Tensor([1431655766, 3],"float16"), 1, 1e-06, False, None, )
paddle.tensordot(Tensor([1, 1, 1, 4294967297],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[0,1,3,2,],list[1,3,0,2,],], )
paddle.roll(Tensor([1, 16, 49933, 7, 768],"float16"), shifts=tuple(-4,-3,0,), axis=tuple(1,2,3,), )
paddle.Tensor.diff(x=Tensor([1073741825, 4],"float16"), axis=0, prepend=Tensor([4, 4],"float16"), append=Tensor([4, 4],"float16"), )
paddle.Tensor.inner(x=Tensor([2, 5, 3, 143165577],"float16"), y=Tensor([3, 2, 5, 143165577],"float16"), )
paddle.lerp(Tensor([1, 3, 3],"float32"), Tensor([1, 3, 3],"float32"), Tensor([253522376, 3, 3],"float32"), )
paddle.linalg.vector_norm(x=Tensor([2, 3, 715827883],"float32"), p=math.inf, axis=None, keepdim=False, )
paddle.tril(x=Tensor([3, 715827883, 2],"float16"), diagonal=0, )
paddle.lerp(Tensor([2, 1],"float32"), Tensor([2, 1],"float32"), Tensor([2, 1140850690],"float32"), )
paddle.copysign(Tensor([8, 2556529, 5, 6, 7],"float16"), Tensor([8, 2556529, 5, 6, 7],"float16"), )
paddle.nn.functional.adaptive_avg_pool1d(Tensor([2, 67108864, 32],"float32"), output_size=16, )
paddle.Tensor.lerp(x=Tensor([4, 5, 71582789, 3],"float16"), y=Tensor([4, 5, 71582789, 3],"float16"), weight=1.0, )
paddle.Tensor.cumsum(Tensor([5070448, 18, 25],"float32"), 1, )
paddle.nn.functional.grid_sample(Tensor([56, 3, 6790778, 2],"float32"), Tensor([56, 2, 2, 2],"float32"), mode="bilinear", padding_mode="border", align_corners=True, )
paddle.bucketize(Tensor([2, 2147483649],"float16"), Tensor([4],"float16"), )
paddle.tensordot(Tensor([5, 171798692, 5, 1],"float16"), Tensor([5, 5, 1, 5],"float16"), list[list[0,2,3,],list[0,1,2,],], )
paddle.nn.functional.normalize(Tensor([228170138, 10],"float32"), )
paddle.triu(x=Tensor([3, 2, 715827883],"float16"), diagonal=-1, )
paddle.lerp(Tensor([1],"float32"), Tensor([2281701379],"float32"), Tensor([1],"float32"), )
paddle.nn.functional.rrelu(Tensor([71582789, 3, 4, 5],"float16"), 0.1, 0.3, training=False, )
paddle.nn.functional.pairwise_distance(Tensor([42949673, 100],"float16"), Tensor([42949673, 100],"float16"), -1, 1e-06, True, None, )
paddle.Tensor.diff(x=Tensor([10],"float16"), prepend=Tensor([4294967297],"float16"), )
paddle.nn.functional.pairwise_distance(Tensor([100, 22817014],"float32"), Tensor([100, 1],"float32"), 2.0, 1e-06, False, None, )
paddle.nn.functional.normalize(Tensor([45, 50704476],"float32"), axis=0, )
paddle.nn.functional.grid_sample(Tensor([56, 39790, 32, 32],"float32"), Tensor([56, 32, 32, 2],"float32"), mode="bilinear", padding_mode="border", align_corners=True, )
paddle.nn.functional.pairwise_distance(Tensor([2, 1140850690],"float32"), Tensor([2, 1140850690],"float32"), -math.inf, 1e-06, False, None, )
paddle.dist(Tensor([1140850690, 2],"float32"), Tensor([1140850690, 2],"float32"), 0, )
paddle.trunc(input=Tensor([6, 6, 6, 19884108],"float16"), )
paddle.bmm(x=Tensor([2, 380283564, 3],"float32"), y=Tensor([2, 3, 2],"float32"), )
paddle.nanmean(Tensor([2, 3, 4, 178956971],"float32"), list[], False, )
paddle.copysign(Tensor([214748365, 4, 5],"float16"), Tensor([5],"float16"), )
paddle.digamma(Tensor([8, 3, 5592406, 32],"float16"), )
paddle.nn.functional.rrelu(Tensor([38028357, 3, 4, 5],"float32"), 0.1, 0.3, training=False, )
paddle.digamma(x=Tensor([3, 1431655766],"float16"), )
paddle.nn.functional.grid_sample(Tensor([56, 3, 6790778, 2],"float32"), Tensor([56, 2, 6790778, 2],"float32"), mode="bilinear", padding_mode="border", align_corners=True, )
paddle.nn.functional.normalize(x=Tensor([20452226, 5, 6, 7],"float16"), p=4, )
paddle.copysign(Tensor([8, 17, 5, 902305, 7],"float16"), Tensor([8, 17, 5, 902305, 7],"float16"), )
paddle.nn.functional.adaptive_avg_pool1d(Tensor([2, 67108864, 32],"float32"), 16, None, )
paddle.nanmean(Tensor([2, 3, 4, 178956971],"float32"), None, False, )
paddle.rsqrt(x=Tensor([715827883, 3, 2],"float16"), )
paddle.Tensor.cumsum(Tensor([1, 15845149, 144],"float32"), 1, )
paddle.roll(Tensor([1, 16, 21, 33289, 384],"float16"), shifts=tuple(4,3,3,), axis=tuple(1,2,3,), )
paddle.Tensor.nansum(Tensor([477218589, 3, 3],"float16"), axis=-1, )
paddle.diff(Tensor([2, 1140850690],"float32"), n=2, axis=0, prepend=None, append=Tensor([2, 1140850690],"float32"), )
paddle.Tensor.diff(x=Tensor([2281701379],"int64"), )
paddle.roll(Tensor([1, 16, 49933, 14, 384],"float16"), shifts=tuple(4,3,3,), axis=tuple(1,2,3,), )
paddle.diff(Tensor([2281701379],"float32"), n=1, axis=-1, prepend=None, append=None, )
paddle.sum(Tensor([2, 3, 4, 178956971],"bool"), axis=list[0,2,], keepdim=False, )
paddle.copysign(Tensor([12, 20, 17895698],"float16"), Tensor([12, 20, 17895698],"float16"), )
paddle.triu(x=Tensor([3, 715827883, 2],"float16"), diagonal=1, )
paddle.nn.functional.triplet_margin_with_distance_loss(Tensor([5, 858993460],"float16"), Tensor([5, 858993460],"float16"), Tensor([5, 858993460],"float16"), margin=0.3, swap=True, reduction="mean", name=None, )
paddle.roll(Tensor([1, 57066, 14, 7, 768],"float16"), shifts=tuple(-4,-3,0,), axis=tuple(1,2,3,), )
paddle.linalg.norm(Tensor([3, 20, 38028357],"float32"), math.inf, 2, True, )
paddle.nn.functional.pairwise_distance(Tensor([760567127, 3],"float32"), Tensor([760567127, 3],"float32"), 2, 1e-06, False, None, )
paddle.isclose(x=Tensor([3, 286331154, 5],"float16"), y=Tensor([3, 286331154, 5],"float16"), )
paddle.linalg.norm(Tensor([10, 10, 42949673],"float32"), p=2.5, axis=-1, )
paddle.linalg.norm(x=Tensor([357913942, 3, 4],"float16"), )
paddle.digamma(Tensor([8, 3, 32, 5592406],"float16"), )
paddle.linalg.norm(Tensor([38028357, 20, 3],"float32"), -math.inf, 2, True, )
paddle.Tensor.argmax(Tensor([221848, 1, 10285],"float32"), axis=-2, )
paddle.dist(Tensor([2, 2, 3, 190141782],"float32"), Tensor([1, 1, 3, 190141782],"float32"), 2, )
paddle.nn.functional.pairwise_distance(Tensor([4294967297],"float16"), Tensor([4294967297],"float16"), 2, 1e-06, True, None, )
paddle.Tensor.gcd(x=Tensor([2281701379],"int32"), y=Tensor([1],"int32"), )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([858993460, 5, 1, 1],"float16"), list[list[3,1,2,],list[1,3,2,],], )
paddle.copysign(Tensor([3, 286331154, 5],"float16"), Tensor([5],"float16"), )
paddle.roll(Tensor([1, 38044, 21, 14, 384],"float16"), shifts=tuple(4,3,3,), axis=tuple(1,2,3,), )
paddle.tensordot(Tensor([1, 1, 1, 4294967297],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[1,0,3,],list[2,3,0,],], )
paddle.Tensor.repeat_interleave(Tensor([2281701379, 1],"int64"), 1, axis=0, )
paddle.Tensor.cumsum(Tensor([570425345, 4],"int64"), axis=1, )
paddle.linalg.cond(Tensor([2, 126761188, 3, 3],"float32"), -math.inf, )
paddle.argsort(Tensor([22817014, 100],"int64"), axis=1, stable=True, )
paddle.dist(x=Tensor([10],"float16"), y=Tensor([429496730, 10],"float16"), )
paddle.linalg.solve(Tensor([10, 10],"float32"), Tensor([10, 228170138],"float32"), )
paddle.triu(x=Tensor([1073741825, 2, 2],"float16"), diagonal=0, )
paddle.argmax(Tensor([2, 536870913, 4],"float16"), axis=-1, keepdim=True, )
paddle.digamma(Tensor([10, 10, 21474837, 2],"float16"), )
paddle.Tensor.repeat_interleave(Tensor([2, 1140850690],"int64"), 2, axis=0, )
paddle.nn.functional.pairwise_distance(Tensor([2281701379],"float32"), Tensor([2281701379],"float32"), 2, 1e-06, False, None, )
paddle.tensordot(Tensor([5, 5, 5, 34359739],"float16"), Tensor([5, 5, 1, 34359739],"float16"), list[list[3,0,],list[2,1,],], )
paddle.cumsum(x=Tensor([715827883, 2, 1, 3],"float16"), axis=-4, )
paddle.digamma(Tensor([10, 21474837, 10, 2],"float16"), )
paddle.nn.functional.pairwise_distance(Tensor([2, 2147483649],"float16"), Tensor([2, 2147483649],"float16"), math.inf, 1e-06, False, None, )
paddle.linalg.norm(Tensor([10, 10, 22817014],"float32"), p=3.0, axis=-1, )
paddle.dist(Tensor([190141782, 2, 3, 2],"float32"), Tensor([1, 1, 3, 1],"float32"), 2, )
paddle.digamma(Tensor([10, 10, 42949673],"float16"), )
paddle.nn.functional.normalize(Tensor([8388609, 512],"float16"), )
paddle.cumsum(Tensor([76057, 30000],"float32"), axis=-1, )
paddle.roll(Tensor([1, 16, 14, 24967, 768],"float16"), shifts=tuple(4,3,0,), axis=tuple(1,2,3,), )
paddle.linalg.norm(Tensor([4294967295],"float32"), p=1, axis=0, )
paddle.Tensor.chunk(Tensor([75304, 300, 101],"float32"), 16, )
paddle.chunk(Tensor([8192, 278529],"float32"), 2, axis=-1, )
paddle.isreal(Tensor([134217728, 32],"bool"), )
paddle.triu(Tensor([42524429, 1, 1, 101],"float16"), )
paddle.nn.functional.pairwise_distance(Tensor([100, 22817014],"float32"), Tensor([100, 22817014],"float32"), -1, 1e-06, False, None, )
paddle.linalg.norm(Tensor([2281701379],"float32"), p=1, axis=0, )
paddle.Tensor.cumsum(Tensor([3, 4, 190141782],"int64"), axis=0, )
paddle.digamma(Tensor([42949673, 10, 10],"float16"), )
paddle.diff(Tensor([2, 4],"float32"), n=1, axis=0, prepend=Tensor([2, 4],"float32"), append=Tensor([570425345, 4],"float32"), )
paddle.linalg.norm(x=Tensor([3, 1431655766],"float16"), p=1, axis=1, keepdim=False, )
paddle.argmin(Tensor([3, 17674763, 3, 3, 3, 3],"float16"), axis=0, )
paddle.nn.functional.layer_norm(normalized_shape=tuple(2,3,), x=Tensor([715827883, 2, 3],"float16"), epsilon=1e-05, )
paddle.nanmean(Tensor([71582789, 3, 4, 5],"float32"), None, True, )
paddle.nanmean(Tensor([2, 2147483648],"float32"), 1, False, )
paddle.nn.functional.pairwise_distance(Tensor([100, 22817014],"float32"), Tensor([100, 22817014],"float32"), -math.inf, 1e-06, True, None, )
paddle.tril(x=Tensor([1073741825, 2, 2],"float16"), diagonal=0, )
paddle.linalg.norm(Tensor([10, 10, 22817014],"float32"), p=2.5, axis=-1, )
paddle.digamma(Tensor([2, 5, 429496730],"float16"), )
paddle.trunc(input=Tensor([6, 119304648, 6],"float16"), )
paddle.conj(Tensor([35791395, 20, 2, 3],"float32"), )
paddle.argmax(Tensor([4, 4, 4, 4, 16777217],"float16"), axis=0, )
paddle.nn.functional.pairwise_distance(Tensor([1431655766, 3],"float16"), Tensor([1431655766, 3],"float16"), 2, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([2281701379],"float32"), Tensor([2281701379],"float32"), math.inf, 1e-06, True, None, )
paddle.trunc(Tensor([114085069, 20, 1],"float32"), )
paddle.Tensor.cumsum(Tensor([285212673, 4, 2],"int64"), axis=0, )
paddle.digamma(Tensor([4294967297],"float16"), )
paddle.Tensor.cumsum(Tensor([162978670, 14],"int32"), -1, )
paddle.diff(Tensor([570425345, 4],"float32"), n=1, axis=0, prepend=Tensor([570425345, 4],"float32"), append=Tensor([570425345, 4],"float32"), )
paddle.digamma(x=Tensor([6, 6, 119304648],"float16"), )
paddle.cumsum(x=Tensor([1, 16, 96, 2796203],"float16"), axis=2, )
paddle.std(Tensor([1, 3, 4, 357913942],"float16"), 2, True, False, )
paddle.Tensor.argmax(Tensor([67908, 1, 33600],"float32"), axis=-2, )
paddle.chunk(Tensor([1, 11, 207427399],"float32"), chunks=2, axis=-1, )
paddle.Tensor.cumsum(Tensor([1, 253522376, 9],"float32"), 1, )
paddle.roll(x=Tensor([3, 1431655766],"float16"), shifts=0, axis=None, )
paddle.nn.functional.normalize(Tensor([1006, 4269352],"float16"), )
paddle.Tensor.argmax(Tensor([93991, 1, 24276],"float32"), axis=-2, )
paddle.nanmean(Tensor([2, 107374183, 4, 5],"float32"), None, False, )
paddle.Tensor.chunk(Tensor([5704254, 100, 4],"float32"), 4, )
paddle.triu(Tensor([2, 1, 1, 2147483649],"float16"), )
paddle.triu(x=Tensor([3, 2, 715827883],"float16"), diagonal=0, )
paddle.Tensor.expand_as(Tensor([1, 1],"int32"), Tensor([2281701379, 1],"int64"), )
paddle.sum(Tensor([2, 107374183, 4, 5],"bool"), axis=2, keepdim=True, )
paddle.roll(Tensor([3567, 16, 7, 14, 768],"float16"), shifts=tuple(-4,0,-3,), axis=tuple(1,2,3,), )
paddle.nn.functional.layer_norm(normalized_shape=tuple(3,), x=Tensor([760567127, 3],"float32"), epsilon=1e-05, )
paddle.triu(Tensor([1, 1, 2048, 2097153],"float16"), )
paddle.inner(Tensor([42949673, 10, 10],"float16"), Tensor([2, 10],"float16"), )
paddle.roll(Tensor([3567, 16, 14, 14, 384],"float16"), shifts=tuple(4,3,3,), axis=tuple(1,2,3,), )
paddle.nn.functional.grid_sample(Tensor([742742, 3, 32, 32],"float32"), Tensor([742742, 32, 32, 2],"float32"), mode="bilinear", padding_mode="border", align_corners=True, )
paddle.nn.functional.normalize(Tensor([1, 256, 557057, 16],"float32"), axis=1, )
paddle.fft.ifftshift(x=Tensor([53687092, 5, 4, 4],"float16"), )
paddle.lerp(Tensor([1, 3, 3],"float32"), Tensor([253522376, 3, 3],"float32"), Tensor([1, 3, 3],"float32"), )
paddle.frac(Tensor([10, 228170138, 1],"float32"), )
paddle.tril(x=Tensor([3, 715827883, 2],"float16"), diagonal=-5, )
paddle.nn.functional.triplet_margin_with_distance_loss(input=Tensor([5, 858993460],"float16"), positive=Tensor([5, 858993460],"float16"), negative=Tensor([5, 858993460],"float16"), distance_function=None, margin=0.3, swap=True, reduction="mean", )
paddle.sum(Tensor([2, 3, 4, 178956971],"bool"), axis=list[2,], keepdim=True, )
paddle.trunc(Tensor([10, 20, 11408507],"float32"), )
paddle.Tensor.diff(x=Tensor([10],"float16"), prepend=Tensor([4294967297],"float16"), append=Tensor([4],"float16"), )
paddle.lerp(Tensor([1, 3, 4],"float16"), Tensor([1, 3, 4],"float16"), Tensor([357913942, 3, 4],"float16"), )
paddle.sum(Tensor([71582789, 3, 4, 5],"bool"), axis=list[-1,], keepdim=False, )
paddle.digamma(Tensor([8, 524289, 32, 32],"float16"), )
paddle.Tensor.logit(x=Tensor([4, 3, 357913942],"float16"), )
paddle.cumsum(Tensor([570425345, 4],"int64"), axis=-2, )
paddle.isreal(Tensor([64, 67108864],"int16"), )
paddle.tensordot(Tensor([1, 1, 1, 4294967297],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[0,1,3,2,],list[2,3,0,1,],], )
paddle.Tensor.lerp(x=Tensor([4, 89478486, 4, 3],"float16"), y=Tensor([4, 89478486, 4, 3],"float16"), weight=0.0, )
paddle.tensordot(Tensor([171798692, 5, 5, 1],"float16"), Tensor([171798692, 1, 1, 1],"float16"), list[list[3,0,],list[2,1,],], )
paddle.nn.functional.normalize(Tensor([1, 2281701379],"float32"), axis=1, )
paddle.isclose(x=Tensor([4294967297],"float16"), y=Tensor([4294967297],"float16"), )
paddle.nn.functional.normalize(x=Tensor([4, 5, 30678338, 7],"float16"), )
paddle.roll(Tensor([3567, 16, 14, 7, 768],"float16"), shifts=tuple(-4,-3,0,), axis=tuple(1,2,3,), )
paddle.linalg.lstsq(Tensor([253522376, 9],"float32"), Tensor([253522376, 5],"float32"), rcond=1e-15, driver="gels", )
paddle.argsort(Tensor([285212673, 4, 2],"int64"), axis=2, stable=True, )
paddle.linalg.norm(Tensor([715827883, 6],"float32"), )
paddle.diff(Tensor([2, 4],"float32"), n=1, axis=0, prepend=None, append=Tensor([570425345, 4],"float32"), )
paddle.nansum(Tensor([1073741824, 4],"float32"), )
paddle.linalg.norm(x=Tensor([2, 536870913, 4],"float16"), p=-math.inf, axis=list[0,1,], keepdim=False, )
paddle.tril(Tensor([1, 1, 2281701379, 1],"float32"), )
paddle.tensordot(Tensor([5, 5, 5, 34359739],"float16"), Tensor([5, 5, 1, 5],"float16"), list[list[1,2,0,],list[1,2,3,],], )
paddle.nn.functional.rrelu(Tensor([71582789, 3, 4, 5],"float16"), 0.3, 0.300000009, training=True, )
paddle.nn.functional.normalize(x=Tensor([2147483649, 2],"float16"), p=1.2, )
paddle.linalg.norm(Tensor([2281701379],"float32"), p=1, )
paddle.tensordot(Tensor([171798692, 5, 5, 1],"float16"), Tensor([171798692, 5, 1, 5],"float16"), list[list[1,2,0,],list[1,3,2,],], )
paddle.cumsum(Tensor([1140850690, 2],"int64"), axis=-1, )
paddle.argmin(x=Tensor([357913942, 3, 4],"float16"), axis=1, keepdim=False, )
paddle.nn.functional.normalize(Tensor([456340276, 5],"float32"), axis=0, )
paddle.Tensor.chunk(Tensor([1, 1, 2281701379],"float32"), 2, axis=-1, )
paddle.Tensor.nansum(Tensor([477218589, 3, 3],"float16"), )
paddle.linalg.norm(Tensor([3, 20, 71582789],"float32"), 2.0, 2, True, )
paddle.sum(Tensor([2, 3, 143165577, 5],"bool"), axis=-1, keepdim=False, )
paddle.linalg.matrix_rank(Tensor([114085069, 4, 5],"float32"), tol=0.1, )
paddle.nn.functional.pairwise_distance(Tensor([22817014, 100],"float32"), Tensor([22817014, 100],"float32"), 2, 1e-06, True, None, )
paddle.sum(Tensor([2, 3, 4, 178956971],"bool"), axis=2, keepdim=True, )
paddle.dist(x=Tensor([4294967297],"float16"), y=Tensor([4294967297],"float16"), )
paddle.trapezoid(Tensor([2281701379],"float32"), dx=2.0, )
paddle.flatten(Tensor([536870912, 4, 2],"int32"), )
paddle.nn.functional.normalize(Tensor([325957340, 7],"float32"), axis=0, )
paddle.sum(Tensor([1431655765, 3],"bool"), axis=1, keepdim=False, )
paddle.nn.functional.normalize(x=Tensor([4, 5, 30678338, 7],"float16"), p=1, )
paddle.nn.functional.pairwise_distance(Tensor([100, 22817014],"float32"), Tensor([100, 22817014],"float32"), 1, 1e-06, True, None, )
paddle.nn.functional.grid_sample(Tensor([727584, 4, 28, 28],"float32"), Tensor([727584, 28, 28, 2],"float32"), mode="bilinear", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.pairwise_distance(Tensor([42949673, 100],"float16"), Tensor([42949673, 100],"float16"), 2, 1e-06, False, None, )
paddle.linalg.norm(x=Tensor([477218589, 3, 3],"float16"), axis=None, )
paddle.dist(Tensor([2, 190141782, 3, 2],"float32"), Tensor([1, 1, 3, 1],"float32"), 2, )
paddle.tril(x=Tensor([1073741825, 2, 2],"float16"), diagonal=1, )
paddle.diff(Tensor([2, 1140850690],"float32"), n=1, axis=0, prepend=Tensor([2, 1140850690],"float32"), append=Tensor([2, 1140850690],"float32"), )
paddle.roll(Tensor([2378, 16, 14, 21, 384],"float16"), shifts=tuple(-4,-3,-3,), axis=tuple(1,2,3,), )
paddle.nn.functional.pairwise_distance(Tensor([22817014, 100],"float32"), Tensor([22817014, 100],"float32"), -1, 1e-06, False, None, )
paddle.lerp(Tensor([1, 1, 1],"float32"), Tensor([3, 8, 95070891],"float32"), 0.3, )
paddle.nn.functional.pairwise_distance(Tensor([100, 42949673],"float16"), Tensor([100, 42949673],"float16"), math.inf, 1e-06, False, None, )
paddle.nn.functional.normalize(Tensor([2, 8, 7, 20372334],"float32"), axis=1, )
paddle.nn.functional.pairwise_distance(Tensor([2, 2147483649],"float16"), Tensor([2, 2147483649],"float16"), 0, 1e-06, False, None, )
paddle.chunk(x=Tensor([760567127, 3],"float32"), chunks=3, axis=0, )
paddle.atan2(Tensor([100],"float16"), Tensor([42949673, 100],"float16"), )
paddle.diff(x=Tensor([1073741825, 4],"float16"), axis=0, prepend=Tensor([4, 4],"float16"), append=Tensor([4, 4],"float16"), )
paddle.linalg.matrix_norm(x=Tensor([2, 536870913, 4],"float16"), p=-math.inf, axis=list[0,1,], keepdim=True, )
paddle.cumsum(Tensor([22152441, 103],"int64"), 1, )
paddle.linalg.norm(Tensor([3, 20, 38028357],"float32"), 0.0, 2, True, )
paddle.tensordot(Tensor([1, 1, 5, 5],"float16"), Tensor([5, 5, 34359739, 5],"float16"), list[list[3,1,0,],list[3,2,1,],], )
paddle.nn.functional.pairwise_distance(Tensor([100, 22817014],"float32"), Tensor([100, 22817014],"float32"), math.inf, 1e-06, False, None, )
paddle.Tensor.argmax(Tensor([1, 1, 2281701379],"float32"), axis=-2, )
paddle.nansum(Tensor([858993459, 5],"float32"), axis=None, )
paddle.Tensor.logit(x=Tensor([2281701379],"float32"), )
paddle.tensordot(Tensor([171798692, 5, 5, 1],"float16"), Tensor([5, 5, 1, 5],"float16"), list[list[1,3,],list[1,0,],], )
paddle.nn.functional.pairwise_distance(Tensor([22817014, 100],"float32"), Tensor([22817014, 100],"float32"), math.inf, 1e-06, False, None, )
paddle.argmin(x=Tensor([3, 3, 477218589],"float16"), axis=1, keepdim=False, )
paddle.chunk(Tensor([16, 5593, 25500],"float32"), 2, axis=1, )
paddle.roll(Tensor([1, 38044, 14, 21, 384],"float16"), shifts=tuple(4,3,3,), axis=tuple(1,2,3,), )
paddle.maximum(Tensor([2147483649],"float64"), Tensor([1],"float64"), )
paddle.linalg.norm(x=Tensor([2, 3, 715827883],"float32"), p=math.inf, axis=0, keepdim=True, )
paddle.digamma(x=Tensor([3, 6, 6, 6, 6628036],"float16"), )
paddle.roll(Tensor([1, 57066, 14, 14, 384],"float16"), shifts=tuple(4,3,3,), axis=tuple(1,2,3,), )
paddle.nn.utils.vector_to_parameters(Tensor([2281701379],"float32"), list[Tensor([2, 2],"float32"),Tensor([2],"float32"),], )
paddle.tensordot(Tensor([1, 1, 1, 4294967297],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[1,3,0,],list[3,0,2,],], )
paddle.linalg.cond(Tensor([63380594, 4, 3, 3],"float32"), math.inf, )
paddle.diff(Tensor([2281701379],"float32"), n=2, axis=0, prepend=None, append=None, )
paddle.nn.functional.pairwise_distance(Tensor([4294967297],"float16"), Tensor([4294967297],"float16"), math.inf, 1e-06, True, None, )
paddle.var(x=Tensor([477218589, 3, 3],"float16"), axis=tuple(0,1,), keepdim=True, )paddle.argsort(Tensor([2, 1140850690],"int64"), axis=1, stable=True, )
paddle.tensordot(Tensor([5, 5, 5, 34359739],"float16"), Tensor([5, 5, 1, 5],"float16"), list[list[1,2,0,],list[1,3,2,],], )
paddle.Tensor.chunk(Tensor([1, 2281701379],"float32"), 2, axis=1, )
paddle.roll(Tensor([1, 16, 14, 7, 2739138],"float16"), shifts=tuple(4,3,0,), axis=tuple(1,2,3,), )
paddle.chunk(x=Tensor([1431655766, 3],"float16"), chunks=3, axis=0, )
paddle.nn.functional.triplet_margin_with_distance_loss(Tensor([5, 858993460],"float16"), Tensor([5, 858993460],"float16"), Tensor([5, 858993460],"float16"), margin=0.3, swap=False, reduction="sum", name=None, )
paddle.chunk(Tensor([13, 16, 10969719],"float32"), chunks=2, axis=-1, )
paddle.diff(Tensor([2, 1140850690],"float32"), n=2, axis=0, prepend=Tensor([2, 1140850690],"float32"), append=None, )
paddle.roll(Tensor([3, 1431655766],"float16"), shifts=1, axis=0, )
paddle.flatten(Tensor([268435457, 4, 2],"float64"), )
paddle.minimum(Tensor([4294967295],"float32"), Tensor([1],"float32"), )
paddle.nanmean(Tensor([3, 1431655765],"float32"), keepdim=True, )
paddle.nn.functional.normalize(Tensor([1, 2228225, 32, 32],"float32"), axis=1, )
paddle.gcd(Tensor([2281701379],"int64"), Tensor([1],"int64"), )
paddle.linalg.norm(Tensor([3, 20, 71582789],"float32"), 0.0, 2, True, )
paddle.dist(Tensor([2, 1140850690],"float32"), Tensor([2, 1140850690],"float32"), 0, )
paddle.argmax(Tensor([4, 4, 4, 16777217, 4],"float16"), axis=0, )
paddle.roll(Tensor([1, 38044, 21, 14, 384],"float16"), shifts=tuple(-4,-3,-3,), axis=tuple(1,2,3,), )
paddle.nn.functional.normalize(Tensor([11883862, 192],"float32"), axis=1, )
paddle.nn.functional.grid_sample(Tensor([56, 3, 848848, 16],"float32"), Tensor([56, 16, 16, 2],"float32"), mode="bilinear", padding_mode="border", align_corners=True, )
paddle.nn.functional.pairwise_distance(Tensor([2281701379],"float32"), Tensor([2281701379],"float32"), 1, 1e-06, False, None, )
paddle.nn.functional.layer_norm(normalized_shape=tuple(2,3,), x=Tensor([715827883, 2, 3],"float16"), )
paddle.triu(x=Tensor([1073741825, 2, 2],"float16"), diagonal=1, )
paddle.std(Tensor([35791395, 3, 4, 10],"float16"), 2, True, False, )
paddle.nn.functional.normalize(x=Tensor([143165577, 5, 6],"float16"), )
paddle.nn.utils.vector_to_parameters(Tensor([2281701379],"float32"), list[Tensor([64, 8],"float32"),Tensor([64, 16],"float32"),Tensor([64],"float32"),Tensor([64],"float32"),Tensor([64, 16],"float32"),Tensor([64, 16],"float32"),Tensor([64],"float32"),Tensor([64],"float32"),], )
paddle.diff(x=Tensor([10],"float16"), prepend=Tensor([4294967297],"float16"), )
paddle.linalg.vector_norm(x=Tensor([3, 1431655765],"float32"), p=2, axis=None, keepdim=True, )
paddle.nn.functional.pairwise_distance(Tensor([2281701379],"float32"), Tensor([2281701379],"float32"), -math.inf, 1e-06, False, None, )
paddle.linalg.norm(Tensor([10, 10, 22817014],"float32"), p=2.0, axis=-1, )
paddle.nn.functional.pairwise_distance(Tensor([2281701379],"float32"), Tensor([2281701379],"float32"), -1, 1e-06, True, None, )
paddle.chunk(Tensor([4, 262145, 64, 64],"float16"), 3, axis=1, )
paddle.linalg.norm(x=Tensor([1431655766, 3],"float16"), axis=None, p="fro", )
paddle.argsort(Tensor([3, 380283564, 2],"int64"), axis=2, stable=True, )
paddle.linalg.cond(Tensor([63380594, 4, 3, 3],"float32"), None, )
paddle.linalg.vector_norm(x=Tensor([3, 715827883],"float64"), p=0, axis=None, keepdim=True, )
paddle.nn.functional.normalize(Tensor([17409, 128, 32, 32],"float32"), axis=1, )
paddle.tensordot(Tensor([5, 171798692, 5, 1],"float16"), Tensor([5, 5, 1, 5],"float16"), list[list[3,2,0,],list[2,1,0,],], )
paddle.isreal(Tensor([134217728, 32],"int16"), )
paddle.nanmean(Tensor([71582789, 3, 4, 5],"float32"), None, False, )
paddle.Tensor.logit(x=Tensor([715827883, 3, 2],"float16"), )
paddle.nn.functional.normalize(Tensor([4, 570425345],"float32"), axis=0, )
paddle.Tensor.lerp(x=Tensor([71582789, 5, 4, 3],"float16"), y=Tensor([71582789, 5, 4, 3],"float16"), weight=0.5, )
paddle.triu(x=Tensor([1073741825, 2, 2],"float16"), diagonal=-1, )
paddle.nn.utils.vector_to_parameters(Tensor([2281701379],"float32"), list[Tensor([10, 15],"float32"),Tensor([15],"float32"),], )
paddle.nn.functional.normalize(x=Tensor([4, 25565282, 6, 7],"float16"), )
paddle.nn.functional.normalize(Tensor([2, 8, 14260634, 10],"float32"), axis=1, )
paddle.nn.functional.normalize(Tensor([228170138, 10],"float32"), p=1.5, )
paddle.copysign(Tensor([2, 107374183, 4, 5],"float16"), Tensor([2, 107374183, 4, 5],"float16"), )
paddle.dist(x=Tensor([10],"float16"), y=Tensor([429496730, 10],"float16"), p=4, )
paddle.cumsum(Tensor([325957340, 7],"int32"), axis=1, )
paddle.nn.functional.normalize(x=Tensor([4, 178956971, 6],"float16"), )
paddle.Tensor.chunk(Tensor([1, 1, 1, 2281701379],"float32"), 4, axis=-1, )
paddle.linalg.norm(x=Tensor([3, 1431655766],"float16"), p=2, axis=1, keepdim=True, )
paddle.linalg.matrix_norm(x=Tensor([2, 536870913, 4],"float16"), p=-math.inf, axis=list[0,1,], keepdim=False, )
paddle.roll(Tensor([1, 16, 14, 7, 2739138],"float16"), shifts=tuple(-4,-3,0,), axis=tuple(1,2,3,), )
paddle.Tensor.bmm(Tensor([7012, 108472, 3],"float32"), Tensor([7012, 3, 2],"float32"), )
paddle.nn.functional.pairwise_distance(Tensor([100, 42949673],"float16"), Tensor([100, 42949673],"float16"), 0, 1e-06, True, None, )
paddle.linalg.norm(Tensor([4294967295],"float32"), )
paddle.tril(Tensor([40139882, 107],"float16"), )
paddle.linalg.cond(Tensor([63380594, 4, 3, 3],"float32"), "nuc", )
paddle.argmax(Tensor([357913942, 3, 4],"float16"), axis=-1, keepdim=True, )
paddle.cumsum(Tensor([21939437, 104],"int64"), 1, )
paddle.dist(Tensor([2, 190141782, 3, 2],"float32"), Tensor([1, 190141782, 3, 1],"float32"), 2, )
paddle.nn.functional.normalize(x=Tensor([570425345, 4],"float32"), )
paddle.Tensor.cumsum(Tensor([1, 144, 15845149],"float32"), 2, )
paddle.Tensor.argmax(Tensor([4, 285212673, 2],"float32"), axis=-1, )
paddle.cumsum(Tensor([22591103, 101],"int64"), 1, )
paddle.Tensor.cumsum(Tensor([1, 12, 190141782],"float32"), 2, )
paddle.linalg.norm(x=Tensor([2, 536870912, 4],"float32"), p=math.inf, axis=0, keepdim=False, )
paddle.digamma(Tensor([429496730, 5, 2],"float16"), )
paddle.linalg.norm(Tensor([50, 50, 1717987],"float16"), p=2.0, axis=-1, )
paddle.Tensor.cumsum(Tensor([1, 11408507, 200],"float32"), 1, )
paddle.copysign(Tensor([214748365, 20],"float16"), Tensor([214748365, 20],"float16"), )
paddle.linalg.norm(x=Tensor([3, 1431655766],"float16"), p=0, axis=1, keepdim=False, )
paddle.digamma(x=Tensor([19884108, 6, 6, 6],"float16"), )
paddle.bmm(x=Tensor([2, 715827883, 3],"float16"), y=Tensor([2, 3, 2],"float16"), )
paddle.argmin(Tensor([3, 3, 3, 3, 17674763, 3],"float16"), axis=0, )
paddle.nn.functional.pairwise_distance(Tensor([2, 1140850690],"float32"), Tensor([2, 1140850690],"float32"), 1, 1e-06, False, None, )
paddle.Tensor.lerp(x=Tensor([4, 89478486, 4, 3],"float16"), y=Tensor([4, 89478486, 4, 3],"float16"), weight=1.0, )
paddle.nn.functional.pairwise_distance(Tensor([42949673, 100],"float16"), Tensor([42949673, 100],"float16"), -1, 1e-06, False, None, )
paddle.Tensor.bmm(Tensor([5203, 146200, 3],"float32"), Tensor([5203, 3, 2],"float32"), )
paddle.linalg.norm(x=Tensor([2, 3, 380283564],"float32"), )
paddle.Tensor.lerp(x=Tensor([4, 89478486, 4, 3],"float16"), y=Tensor([4, 89478486, 4, 3],"float16"), weight=0.5, )
paddle.roll(Tensor([1, 16, 49933, 7, 768],"float16"), shifts=tuple(-4,0,0,), axis=tuple(1,2,3,), )
paddle.argmin(Tensor([3, 3, 17674763, 3, 3, 3],"float16"), axis=0, )
paddle.nn.functional.pairwise_distance(Tensor([22817014, 100],"float32"), Tensor([22817014, 100],"float32"), -1, 1e-06, True, None, )
paddle.nn.functional.normalize(x=Tensor([20452226, 5, 6, 7],"float16"), p=1, )
paddle.isreal(Tensor([64, 67108864],"int32"), )
paddle.roll(Tensor([1, 16, 49933, 14, 384],"float16"), shifts=tuple(-4,-3,-3,), axis=tuple(1,2,3,), )
paddle.linalg.norm(x=Tensor([2, 3, 715827883],"float16"), p=2, axis=-1, keepdim=True, )
paddle.linalg.norm(Tensor([380283564, 6],"float32"), p=1, axis=list[0,1,], )
paddle.diff(Tensor([2, 1140850690],"float32"), n=1, axis=0, prepend=None, append=Tensor([1, 1140850690],"float32"), )
paddle.nn.functional.pairwise_distance(Tensor([22817014, 100],"float32"), Tensor([22817014, 100],"float32"), 2, 1e-06, False, None, )
paddle.linalg.vector_norm(x=Tensor([2, 536870912, 4],"float32"), p=math.inf, axis=0, keepdim=True, )
paddle.linalg.vector_norm(x=Tensor([357913942, 3, 4],"float32"), p=math.inf, axis=None, keepdim=True, )
paddle.frac(Tensor([2, 2147483649],"float16"), )
paddle.Tensor.cumsum(Tensor([3, 380283564, 2],"int64"), axis=1, )
paddle.nanmean(Tensor([2, 3, 143165577, 5],"float32"), None, False, )
paddle.chunk(Tensor([13, 56, 3134206],"float32"), 3, axis=-1, )
paddle.nn.functional.pairwise_distance(Tensor([100, 42949673],"float16"), Tensor([100, 42949673],"float16"), -1, 1e-06, True, None, )
paddle.nn.functional.normalize(Tensor([760567127, 3],"float32"), axis=0, )
paddle.nn.utils.vector_to_parameters(Tensor([2281701379],"float32"), list[Tensor([10, 3],"float32"),], )
paddle.roll(Tensor([1, 114131, 7, 7, 768],"float16"), shifts=tuple(-4,0,0,), axis=tuple(1,2,3,), )
paddle.argsort(Tensor([5, 456340276],"int64"), axis=1, stable=True, )
paddle.Tensor.diff(x=Tensor([4294967297],"float16"), )
paddle.nn.functional.normalize(Tensor([1, 256, 16, 557057],"float32"), axis=1, )
paddle.nansum(Tensor([1431655765, 3],"float32"), axis=None, keepdim=False, name=None, )
paddle.lerp(Tensor([2, 1, 1, 1],"float32"), Tensor([2, 17825793, 8, 8],"float32"), 0.3, )
paddle.argsort(Tensor([26, 87757746],"int64"), axis=-1, )
paddle.Tensor.diff(x=Tensor([10],"float16"), prepend=Tensor([4],"float16"), append=Tensor([4294967297],"float16"), )
paddle.nn.functional.pairwise_distance(Tensor([2281701379],"float32"), Tensor([2281701379],"float32"), )
paddle.linalg.norm(x=Tensor([3, 477218589, 3],"float16"), axis=1, p=0, )
paddle.linalg.vector_norm(x=Tensor([3, 1431655765],"float32"), p=2, axis=None, keepdim=False, )
paddle.nanmean(Tensor([2, 3, 4, 178956971],"float32"), None, True, )
paddle.argmax(Tensor([3, 3, 17674763, 3, 3, 3],"float16"), axis=0, )
paddle.nn.functional.normalize(Tensor([34817, 256, 16, 16],"float32"), axis=1, )
paddle.linalg.norm(Tensor([10, 10, 42949673],"float32"), p=3.0, axis=-1, )
paddle.flatten(Tensor([2, 512, 1, 4194304],"float32"), start_axis=1, stop_axis=-1, )
paddle.lerp(Tensor([2, 17825793, 8, 8],"float32"), Tensor([2, 17825793, 8, 8],"float32"), 2.1, )
paddle.dist(x=Tensor([2147483649, 2],"float16"), y=Tensor([2147483649, 2],"float16"), p=0, )
paddle.linalg.cond(Tensor([63380594, 4, 3, 3],"float32"), -1, )
paddle.Tensor.logit(x=Tensor([4, 1073741825],"float16"), )
paddle.nn.functional.normalize(x=Tensor([4, 5, 6, 35791395],"float16"), p=1, )
paddle.tensordot(Tensor([5, 171798692, 5, 1],"float16"), Tensor([5, 5, 1, 5],"float16"), list[list[2,3,0,],list[1,2,0,],], )
paddle.cumsum(Tensor([285212673, 2, 4],"float32"), axis=1, )
paddle.roll(Tensor([1, 16, 14, 14, 1369569],"float16"), shifts=tuple(-4,-3,-3,), axis=tuple(1,2,3,), )
paddle.broadcast_to(Tensor([8, 1, 219, 1302341],"bool"), list[8,8,219,113,], )
paddle.linalg.norm(x=Tensor([3, 3, 477218589],"float16"), axis=None, )
paddle.roll(x=Tensor([3, 1431655766],"float16"), shifts=tuple(-1,1,), axis=tuple(0,1,), )
paddle.isclose(x=Tensor([214748365, 4, 5],"float16"), y=Tensor([214748365, 4, 5],"float16"), )
paddle.isreal(Tensor([64, 67108864],"bool"), )
paddle.nn.functional.pairwise_distance(Tensor([100, 22817014],"float32"), Tensor([100, 22817014],"float32"), -1, 1e-06, True, None, )
paddle.linalg.norm(x=Tensor([3, 1431655766],"float16"), p=2, axis=1, keepdim=False, )
paddle.triu(x=Tensor([3, 2, 715827883],"float16"), diagonal=1, )
paddle.nn.functional.grid_sample(x=Tensor([16, 64, 80, 94, 311],"float32"), grid=Tensor([16, 280, 376, 25, 3],"float32"), mode="bilinear", padding_mode="zeros", align_corners=False, )
paddle.nn.functional.adaptive_max_pool2d(x=Tensor([29217465, 3, 7, 7],"float32"), output_size=list[None,3,], )
paddle.Tensor.cumsum(Tensor([2228225, 1024],"int32"), axis=-1, )
paddle.rsqrt(x=Tensor([2, 3, 715827883],"float16"), )
paddle.dist(Tensor([190141782, 2, 3, 2],"float32"), Tensor([190141782, 1, 3, 1],"float32"), 2, )
paddle.flatten(Tensor([2, 512, 4194304, 1],"float32"), 1, )
paddle.nanmean(Tensor([71582789, 3, 4, 5],"float32"), list[], False, )
paddle.nn.functional.pairwise_distance(Tensor([100, 22817014],"float32"), Tensor([100, 22817014],"float32"), 0, 1e-06, False, None, )
paddle.nansum(Tensor([1431655765, 3],"float32"), axis=None, keepdim=True, name=None, )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 5, 858993460, 1],"float16"), list[list[2,3,0,],list[3,1,0,],], )
paddle.cumulative_trapezoid(y=Tensor([1073741825, 4],"float16"), x=Tensor([1073741825, 4],"float16"), )
paddle.nanmean(Tensor([2, 3, 143165577, 5],"float32"), 2, True, )
paddle.roll(Tensor([1, 16, 33289, 21, 384],"float16"), shifts=tuple(-4,-3,-3,), axis=tuple(1,2,3,), )
paddle.frac(Tensor([2, 1140850690],"float32"), )
paddle.linalg.matrix_rank(Tensor([114085069, 4, 5],"float32"), )
paddle.nn.functional.normalize(x=Tensor([2, 1140850690],"float32"), )
paddle.linalg.cond(Tensor([2, 126761188, 3, 3],"float32"), math.inf, )
paddle.Tensor.diff(x=Tensor([2281701379],"float32"), )
paddle.nanmean(Tensor([71582789, 3, 4, 5],"float32"), list[0,2,], False, )
paddle.cumsum(x=Tensor([1, 1398102, 96, 32],"float16"), axis=2, )
paddle.lerp(Tensor([1, 1, 1],"float32"), Tensor([3, 28, 27163112],"float32"), 0.36, )
paddle.nn.functional.normalize(Tensor([4074467, 8, 7, 10],"float32"), axis=1, )
paddle.roll(x=Tensor([1431655766, 3],"float16"), shifts=tuple(-1,1,), axis=tuple(0,1,), )
paddle.roll(Tensor([1, 57066, 14, 7, 768],"float16"), shifts=tuple(4,3,0,), axis=tuple(1,2,3,), )
paddle.nn.functional.pairwise_distance(Tensor([2281701379],"float32"), Tensor([2281701379],"float32"), 0, 1e-06, True, None, )
paddle.nn.functional.layer_norm(normalized_shape=tuple(3,), x=Tensor([1431655766, 3],"float16"), )
paddle.atan2(Tensor([58099, 222, 333],"float16"), Tensor([222, 333],"float16"), )
paddle.roll(Tensor([1, 57066, 7, 14, 768],"float16"), shifts=tuple(4,0,3,), axis=tuple(1,2,3,), )
paddle.nn.functional.pairwise_distance(Tensor([2, 1140850690],"float32"), Tensor([2, 1140850690],"float32"), 2, 1e-06, False, None, )
paddle.Tensor.cumsum(Tensor([285212673, 4, 2],"int64"), axis=2, )
paddle.nanmean(Tensor([1431655765, 3],"float32"), 0, True, )
paddle.nn.functional.triplet_margin_with_distance_loss(input=Tensor([858993460, 5],"float16"), positive=Tensor([858993460, 5],"float16"), negative=Tensor([858993460, 5],"float16"), distance_function=None, margin=0.3, swap=False, reduction="sum", )
paddle.roll(Tensor([1, 16, 7, 14, 2739138],"float16"), shifts=tuple(-4,0,-3,), axis=tuple(1,2,3,), )
paddle.diff(x=Tensor([10, 4],"float16"), axis=0, prepend=Tensor([4, 4],"float16"), append=Tensor([1073741825, 4],"float16"), )
paddle.nanmean(Tensor([2, 3, 143165577, 5],"float32"), None, True, )
paddle.outer(Tensor([2281701379],"float32"), Tensor([1],"float32"), )
paddle.Tensor.lerp(x=Tensor([858993460, 5],"float16"), y=Tensor([1],"float16"), weight=0.2, )
paddle.nn.functional.rrelu(Tensor([2, 3, 4, 95070891],"float32"), 0.1, 0.3, training=False, )
paddle.conj(Tensor([2, 357913942, 2, 3],"float32"), )
paddle.linalg.cond(Tensor([63380594, 4, 3, 3],"float32"), 2, )
paddle.argmax(Tensor([3, 3, 3, 3, 17674763, 3],"float16"), axis=0, )
paddle.argmax(Tensor([3, 3, 3, 3, 3, 17674763],"float16"), axis=0, )
paddle.Tensor.diff(x=Tensor([10, 429496730],"float16"), axis=0, prepend=Tensor([4, 429496730],"float16"), append=Tensor([4, 429496730],"float16"), )
paddle.sum(Tensor([2, 107374183, 4, 5],"bool"), axis=-1, keepdim=False, )
paddle.linalg.lstsq(Tensor([9, 253522376],"float32"), Tensor([9, 5],"float32"), rcond=1e-15, driver="gels", )
paddle.tensordot(Tensor([1, 1, 5, 5],"float16"), Tensor([5, 5, 34359739, 5],"float16"), list[list[1,0,3,2,],list[2,3,0,1,],], )
paddle.nn.functional.adaptive_max_pool1d(Tensor([2, 67108864, 32],"float32"), 16, False, None, )
paddle.linalg.norm(x=Tensor([3, 1431655766],"float16"), axis=None, p="fro", )
paddle.lerp(Tensor([1, 3],"float16"), Tensor([1431655766, 3],"float16"), Tensor([1, 3],"float16"), )
paddle.linalg.norm(x=Tensor([2, 3, 380283564],"float32"), p=math.inf, axis=0, keepdim=True, )
paddle.linalg.det(Tensor([3, 30422686, 5, 5],"float32"), )
paddle.roll(Tensor([2378, 16, 21, 14, 384],"float16"), shifts=tuple(-4,-3,-3,), axis=tuple(1,2,3,), )
paddle.linalg.norm(x=Tensor([2, 536870913, 4],"float16"), p=1, axis=list[0,1,], keepdim=False, )
paddle.nn.functional.normalize(Tensor([10, 228170138],"float32"), axis=0, )
paddle.rsqrt(x=Tensor([2, 715827883, 3],"float16"), )
paddle.nn.functional.triplet_margin_with_distance_loss(input=Tensor([5, 858993460],"float16"), positive=Tensor([5, 858993460],"float16"), negative=Tensor([5, 858993460],"float16"), distance_function=None, margin=0.3, swap=False, reduction="mean", )
paddle.Tensor.chunk(Tensor([1, 101, 1, 22591103],"float32"), 4, axis=-1, )
paddle.Tensor.lerp(x=Tensor([4, 5, 71582789, 3],"float16"), y=Tensor([4, 5, 71582789, 3],"float16"), weight=0.0, )
paddle.conj(Tensor([2, 20, 35791395, 3],"float32"), )
paddle.Tensor.logit(x=Tensor([4, 536870913, 2],"float16"), )
paddle.Tensor.chunk(Tensor([1, 10, 1, 228170138],"float32"), 4, axis=-1, )
paddle.cumsum(Tensor([760567127, 3],"float32"), axis=0, )
paddle.linalg.norm(Tensor([10, 10, 42949673],"float32"), p=0, axis=-1, )
paddle.digamma(Tensor([10, 42949673, 10],"float16"), )
paddle.linalg.norm(Tensor([3, 20, 38028357],"float32"), 2.0, 2, True, )
paddle.cumsum(x=Tensor([87382, 16, 96, 32],"float16"), axis=2, )
paddle.roll(Tensor([1, 16, 14, 49933, 384],"float16"), shifts=tuple(-4,-3,-3,), axis=tuple(1,2,3,), )
paddle.cumsum(Tensor([3, 760567127],"int64"), axis=-2, )
paddle.trunc(input=Tensor([3, 6628036, 6, 6, 6],"float16"), )
paddle.diff(x=Tensor([2281701379],"int64"), )
paddle.diff(Tensor([2, 4],"float32"), n=2, axis=0, prepend=Tensor([570425345, 4],"float32"), append=Tensor([2, 4],"float32"), )
paddle.nn.functional.normalize(x=Tensor([4, 5, 6, 35791395],"float16"), p=4, )
paddle.linalg.norm(Tensor([4294967295],"float32"), 2.0, )
paddle.cumsum(Tensor([570425345, 4],"int64"), axis=0, )
paddle.Tensor.chunk(Tensor([475355, 300, 16],"float32"), 2, )
paddle.Tensor.chunk(Tensor([1, 101, 22591103],"float32"), 2, axis=-1, )
paddle.isreal(Tensor([1431655765, 3],"int16"), )
paddle.sum(Tensor([71582789, 3, 4, 5],"bool"), axis=2, keepdim=True, )
paddle.dist(Tensor([2, 2, 285212673, 2],"float32"), Tensor([1, 1, 285212673, 1],"float32"), 2, )
paddle.diff(Tensor([2, 4],"float32"), n=2, axis=0, prepend=None, append=Tensor([570425345, 4],"float32"), )
paddle.Tensor.diff(x=Tensor([10, 4],"float16"), axis=0, prepend=Tensor([4, 4],"float16"), append=Tensor([1073741825, 4],"float16"), )
paddle.Tensor.chunk(Tensor([1, 1, 11109, 205393],"float32"), 2, axis=-1, )
paddle.nanmean(Tensor([2, 2147483648],"float32"), None, True, )
paddle.Tensor.diff(x=Tensor([10, 4],"float16"), axis=0, prepend=Tensor([1073741825, 4],"float16"), append=Tensor([4, 4],"float16"), )
paddle.cumsum(Tensor([50704476, 45],"int64"), axis=1, )
paddle.gcd(Tensor([2281701379],"int32"), Tensor([1],"int32"), )
paddle.nanmean(Tensor([4294967295],"float32"), axis=0, )
paddle.diff(x=Tensor([10, 4],"float16"), axis=0, prepend=Tensor([1073741825, 4],"float16"), append=Tensor([4, 4],"float16"), )
paddle.lerp(Tensor([1],"float16"), Tensor([4294967297],"float16"), Tensor([1],"float16"), )
paddle.linalg.norm(Tensor([3, 253522376, 3],"float32"), -math.inf, 2, True, )
paddle.nn.functional.pairwise_distance(Tensor([42949673, 100],"float16"), Tensor([42949673, 100],"float16"), 1, 1e-06, True, None, )
paddle.lerp(Tensor([1, 8, 8],"float32"), Tensor([35651585, 8, 8],"float32"), 1.1, )
paddle.roll(Tensor([3567, 16, 14, 14, 384],"float16"), shifts=tuple(-4,-3,-3,), axis=tuple(1,2,3,), )
paddle.sum(Tensor([2, 2147483648],"bool"), axis=list[0,], keepdim=True, )
paddle.nn.functional.adaptive_max_pool1d(Tensor([2, 67108864, 32],"float32"), output_size=16, )
paddle.Tensor.diff(x=Tensor([4294967297],"float16"), prepend=Tensor([4294967297],"float16"), )
paddle.Tensor.lerp(x=Tensor([4, 1073741825],"float16"), y=Tensor([4, 1073741825],"float16"), weight=0.5, )
paddle.argmin(Tensor([4, 4, 4, 4, 16777217],"float16"), axis=0, )
paddle.nn.functional.pairwise_distance(Tensor([4294967297],"float16"), Tensor([4294967297],"float16"), -math.inf, 1e-06, True, None, )
paddle.Tensor.logit(x=Tensor([4294967297],"float16"), )
paddle.nn.utils.vector_to_parameters(Tensor([2281701379],"float32"), list[Tensor([3, 2, 4, 4, 4],"float32"),Tensor([3],"float32"),], )
paddle.nn.functional.normalize(Tensor([2281701379],"float32"), axis=0, epsilon=1e-12, )
paddle.argmin(Tensor([4, 4, 4, 16777217, 4],"float16"), axis=0, )
paddle.Tensor.chunk(Tensor([13, 5484860, 32],"float32"), 8, axis=1, )
paddle.roll(Tensor([1, 38044, 14, 21, 384],"float16"), shifts=tuple(-4,-3,-3,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 16, 7, 49933, 768],"float16"), shifts=tuple(4,0,3,), axis=tuple(1,2,3,), )
paddle.Tensor.diff(Tensor([2281701379],"float32"), )
paddle.roll(Tensor([1, 16, 33289, 21, 384],"float16"), shifts=tuple(4,3,3,), axis=tuple(1,2,3,), )
paddle.nn.functional.normalize(Tensor([4194305, 1024],"float16"), p=2, axis=-1, )
paddle.tensordot(Tensor([5, 5, 5, 1],"float16"), Tensor([5, 5, 34359739, 5],"float16"), list[list[0,1,3,],list[0,3,1,],], )
paddle.nn.functional.rrelu(Tensor([2, 57042535, 4, 5],"float32"), 0.3, 0.300000009, training=True, )
paddle.inner(x=Tensor([2, 5, 3, 143165577],"float16"), y=Tensor([3, 2, 5, 143165577],"float16"), )
paddle.Tensor.diff(Tensor([4294967297],"float16"), )
paddle.std(x=Tensor([3, 477218589, 3],"float16"), axis=0, )
paddle.roll(Tensor([1, 16, 7, 7, 5478275],"float16"), shifts=tuple(4,0,0,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1431655766, 3],"float16"), shifts=1, )
paddle.nn.functional.normalize(Tensor([4456449, 512],"float32"), )
paddle.diff(Tensor([570425345, 4],"float32"), n=2, axis=0, prepend=None, append=Tensor([570425345, 4],"float32"), )
paddle.linalg.norm(x=Tensor([190141782, 3, 4],"float32"), p=math.inf, axis=0, keepdim=False, )
paddle.linalg.norm(x=Tensor([2, 536870913, 4],"float16"), )
paddle.roll(Tensor([1, 16, 49933, 7, 768],"float16"), shifts=tuple(4,3,0,), axis=tuple(1,2,3,), )
paddle.std(x=Tensor([3, 3, 477218589],"float16"), axis=0, )
paddle.diff(x=Tensor([10, 429496730],"float16"), axis=0, prepend=Tensor([4, 429496730],"float16"), append=Tensor([4, 429496730],"float16"), )
paddle.nn.functional.normalize(Tensor([253522376, 9],"float32"), axis=1, )
paddle.nn.functional.pairwise_distance(x=Tensor([100, 22817014],"float32"), y=Tensor([100, 22817014],"float32"), p=2.0, epsilon=1e-06, keepdim=False, )
paddle.nn.functional.rrelu(Tensor([2, 3, 76056713, 5],"float32"), 0.1, 0.3, training=False, )
paddle.linalg.vector_norm(x=Tensor([2, 536870912, 4],"float32"), p=math.inf, axis=0, keepdim=False, )
paddle.tensordot(Tensor([5, 5, 5, 1],"float16"), Tensor([171798692, 5, 1, 5],"float16"), list[list[3,1,2,],list[2,3,1,],], )
paddle.dist(Tensor([2, 2, 3, 190141782],"float32"), Tensor([1, 1, 3, 1],"float32"), 2, )
paddle.copysign(Tensor([107374183, 20, 2],"float16"), Tensor([107374183, 20, 2],"float16"), )
paddle.nansum(Tensor([3, 1431655765],"float32"), axis=None, )
paddle.linalg.norm(Tensor([380283564, 6],"float32"), )
paddle.linalg.norm(x=Tensor([2, 3, 715827883],"float16"), )
paddle.linalg.norm(x=Tensor([2, 536870913, 4],"float16"), p=math.inf, axis=list[0,1,], keepdim=False, )
paddle.full_like(Tensor([2, 1140850690],"int64"), 2, )
paddle.tensordot(Tensor([1, 1, 5, 5],"float16"), Tensor([171798692, 5, 1, 5],"float16"), list[list[3,1,2,],list[1,2,3,],], )
paddle.diff(Tensor([570425345, 4],"float32"), n=2, axis=0, prepend=Tensor([2, 4],"float32"), append=None, )
paddle.Tensor.lerp(x=Tensor([858993460, 5],"float16"), y=Tensor([858993460, 5],"float16"), weight=0.5, )
paddle.nn.functional.pairwise_distance(Tensor([22817014, 100],"float32"), Tensor([22817014, 100],"float32"), math.inf, 1e-06, True, None, )
paddle.conj(Tensor([2, 20, 2, 53687092],"float32"), )
paddle.nn.functional.normalize(Tensor([1, 64, 64, 557057],"float32"), axis=1, )
paddle.linalg.norm(Tensor([2281701379],"float32"), )
paddle.Tensor.cumsum(Tensor([1, 91268056, 25],"float32"), 1, )
paddle.nn.functional.normalize(x=Tensor([20452226, 5, 6, 7],"float16"), )
paddle.nn.functional.normalize(x=Tensor([4294967297],"float16"), axis=0, )
paddle.linalg.vector_norm(x=Tensor([3, 715827883],"float64"), p=0, axis=None, keepdim=False, )
paddle.rsqrt(x=Tensor([477218589, 3, 3],"float16"), )
paddle.sum(Tensor([2, 3, 143165577, 5],"bool"), axis=list[-1,], keepdim=False, )
paddle.roll(Tensor([1, 16, 7, 7, 5478275],"float16"), shifts=tuple(-4,0,0,), axis=tuple(1,2,3,), )
paddle.diff(Tensor([2, 1140850690],"float32"), n=1, axis=0, prepend=Tensor([3, 1140850690],"float32"), append=None, )
paddle.lerp(Tensor([2, 1],"float32"), Tensor([2, 1140850690],"float32"), Tensor([2, 1],"float32"), )
paddle.argmax(x=Tensor([3, 3, 477218589],"float16"), axis=1, keepdim=False, )
paddle.linalg.norm(x=Tensor([2, 3, 715827883],"float16"), p=2, axis=-1, keepdim=False, )
paddle.nn.functional.pairwise_distance(Tensor([2281701379],"float32"), Tensor([2281701379],"float32"), 1, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([4294967297],"float16"), Tensor([4294967297],"float16"), -1, 1e-06, False, None, )
paddle.nn.functional.normalize(Tensor([1, 128, 557057, 32],"float32"), axis=1, )
paddle.lerp(Tensor([1, 1, 1],"float32"), Tensor([3, 95070891, 8],"float32"), 0.3, )
paddle.linalg.norm(Tensor([3, 253522376, 3],"float32"), math.inf, 2, True, )
paddle.copysign(Tensor([1203073, 17, 5, 6, 7],"float16"), Tensor([1203073, 17, 5, 6, 7],"float16"), )
paddle.Tensor.chunk(Tensor([1, 1, 12096, 188633],"float32"), 2, axis=-1, )
paddle.digamma(Tensor([1398102, 3, 32, 32],"float16"), )
paddle.nn.functional.pairwise_distance(Tensor([22817014, 100],"float32"), Tensor([22817014, 100],"float32"), 1, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([22817014, 100],"float32"), Tensor([22817014, 100],"float32"), 1, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([100, 22817014],"float32"), Tensor([100, 22817014],"float32"), 1, 1e-06, False, None, )
paddle.cumsum(Tensor([51856850, 44],"int64"), axis=1, )
paddle.dist(x=Tensor([1073741825, 4],"float16"), y=Tensor([1073741825, 4],"float16"), )
paddle.roll(Tensor([1, 114131, 7, 7, 768],"float16"), shifts=tuple(4,0,0,), axis=tuple(1,2,3,), )
paddle.sum(Tensor([1431655765, 3],"bool"), axis=-1, keepdim=False, )
paddle.fft.ifftshift(x=Tensor([536870913, 4, 2],"float16"), )
paddle.nn.functional.adaptive_max_pool2d(Tensor([29217465, 3, 7, 7],"float32"), output_size=list[3,3,], return_mask=False, name=None, )
paddle.linalg.norm(Tensor([10, 10, 42949673],"float32"), p=2.0, axis=-1, )
paddle.argsort(Tensor([570425345, 4],"int64"), axis=1, stable=True, )
paddle.nn.functional.grid_sample(Tensor([56, 9948, 64, 64],"float32"), Tensor([56, 64, 64, 2],"float32"), mode="bilinear", padding_mode="border", align_corners=True, )
paddle.nanmean(Tensor([3, 1431655765],"float32"), axis=None, )
paddle.cumsum(Tensor([22817014, 100],"int64"), 1, )
paddle.nansum(Tensor([858993459, 5],"float32"), axis=None, keepdim=True, name=None, )
paddle.argsort(Tensor([3, 4, 190141782],"int64"), axis=2, stable=True, )
paddle.sum(Tensor([2, 107374183, 4, 5],"bool"), axis=tuple(0,2,), keepdim=False, )
paddle.digamma(x=Tensor([3, 6628036, 6, 6, 6],"float16"), )
paddle.Tensor.lerp(x=Tensor([214748365, 5, 4],"float16"), y=Tensor([214748365, 5, 4],"float16"), weight=0.5, )
paddle.Tensor.cumsum(Tensor([3, 4, 190141782],"int64"), axis=1, )
paddle.roll(Tensor([1, 16, 21, 14, 913046],"float16"), shifts=tuple(-4,-3,-3,), axis=tuple(1,2,3,), )
paddle.lerp(Tensor([1, 28, 28],"float32"), Tensor([2910334, 28, 28],"float32"), 1.0, )
paddle.nn.functional.normalize(Tensor([2281701379],"float32"), axis=0, epsilon=1e-10, )
paddle.linalg.cond(Tensor([63380594, 4, 3, 3],"float32"), "fro", )
paddle.nn.functional.normalize(x=Tensor([4, 5, 6, 35791395],"float16"), )
paddle.flatten(Tensor([5, 429496730],"float64"), )
paddle.isclose(Tensor([429496730, 10],"float16"), Tensor([429496730, 10],"float16"), rtol=1e-05, atol=1e-08, )
paddle.frac(Tensor([1431655766, 3],"float16"), )
paddle.linalg.cond(Tensor([2, 126761188, 3, 3],"float32"), None, )
paddle.fmin(Tensor([2281701379],"int64"), Tensor([1],"int64"), )
paddle.linalg.cond(Tensor([2, 126761188, 3, 3],"float32"), 1, )
paddle.linalg.vector_norm(x=Tensor([536870913, 4],"float64"), p=0, axis=None, keepdim=False, )
paddle.nn.functional.grid_sample(Tensor([5821, 4, 280, 350],"float32"), Tensor([5821, 280, 350, 2],"float32"), mode="nearest", padding_mode="zeros", align_corners=False, )
paddle.Tensor.argmax(Tensor([83837, 1, 27216],"float32"), axis=-2, )
paddle.nn.functional.normalize(Tensor([228170138, 10],"float32"), axis=0, )
paddle.cumsum(Tensor([3, 760567127],"int64"), axis=0, )
paddle.Tensor.logit(x=Tensor([4, 107374183, 2, 5],"float16"), )
paddle.linalg.cond(Tensor([2, 126761188, 3, 3],"float32"), "nuc", )
paddle.Tensor.chunk(Tensor([1, 102, 1, 22369622],"float32"), 4, axis=-1, )
paddle.nanmean(Tensor([2, 2147483648],"float32"), -1, False, )
paddle.linalg.norm(x=Tensor([2, 285212673, 4],"float32"), p=math.inf, axis=0, keepdim=True, )
paddle.copysign(Tensor([12, 178956971, 2],"float16"), Tensor([12, 178956971, 2],"float16"), )
paddle.Tensor.cumsum(Tensor([3, 380283564, 2],"int64"), axis=0, )
paddle.chunk(Tensor([52, 5484860, 8],"float32"), 3, axis=1, )
paddle.nn.functional.pairwise_distance(Tensor([100, 22817014],"float32"), Tensor([100, 22817014],"float32"), -math.inf, 1e-06, False, None, )
paddle.linalg.cholesky_solve(x=Tensor([4, 570425345],"float32"), y=Tensor([4, 4],"float32"), )
paddle.digamma(x=Tensor([1431655766, 3],"float16"), )
paddle.roll(x=Tensor([3, 1431655766],"float16"), shifts=list[-1,1,], axis=list[0,1,], )
paddle.copysign(Tensor([12, 95070891, 2],"float32"), Tensor([12, 95070891, 2],"float32"), )
paddle.tensordot(Tensor([1, 1, 1, 4294967297],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[0,2,3,],list[0,1,2,],], )
paddle.nn.functional.grid_sample(Tensor([61896, 1, 192, 192],"float32"), Tensor([61896, 1, 12544, 2],"float32"), align_corners=False, )
paddle.copysign(Tensor([114085069, 20],"float32"), Tensor([114085069, 20],"float32"), )
paddle.Tensor.logit(x=Tensor([4, 3, 2, 178956971],"float16"), )
paddle.trunc(input=Tensor([6, 19884108, 6, 6],"float16"), )
paddle.unique_consecutive(x=Tensor([570425345, 4],"float32"), return_inverse=True, return_counts=True, axis=0, )
paddle.nn.functional.pairwise_distance(Tensor([42949673, 100],"float16"), Tensor([42949673, 100],"float16"), math.inf, 1e-06, False, None, )
paddle.maximum(Tensor([1],"float64"), Tensor([2147483649],"float64"), )
paddle.diff(x=Tensor([10],"float16"), prepend=Tensor([4],"float16"), append=Tensor([4294967297],"float16"), )
paddle.argmin(Tensor([4, 4, 16777217, 4, 4],"float16"), axis=0, )
paddle.diff(Tensor([570425345, 4],"float32"), n=2, axis=0, prepend=Tensor([570425345, 4],"float32"), append=None, )
paddle.sum(Tensor([3, 715827883, 2],"int32"), axis=0, keepdim=True, )
paddle.linalg.cond(Tensor([142606337, 4, 4],"float32"), p="fro", )
paddle.roll(x=Tensor([3, 1431655766],"float16"), shifts=1, axis=None, )
paddle.copysign(Tensor([2281701379],"float32"), Tensor([2281701379],"float32"), )
paddle.argmax(Tensor([13, 1371215, 4, 16, 2],"float32"), axis=-1, )
paddle.argmin(Tensor([4, 16777217, 4, 4, 4],"float16"), axis=0, )
paddle.digamma(Tensor([2, 1073741825, 2],"float16"), )
paddle.sum(Tensor([71582789, 3, 4, 5],"bool"), axis=-1, keepdim=False, )
paddle.Tensor.cumsum(Tensor([1, 18, 126761188],"float32"), 2, )
paddle.linalg.norm(Tensor([2281701379],"float32"), 2.0, )
paddle.linalg.norm(x=Tensor([2, 3, 380283564],"float32"), p=math.inf, axis=0, keepdim=False, )
paddle.lerp(Tensor([2, 1, 8, 8],"float32"), Tensor([2, 17825793, 8, 8],"float32"), 1.1, )
paddle.nn.functional.normalize(Tensor([35651585, 64],"float32"), axis=1, )
paddle.argsort(Tensor([35651585, 64],"int64"), axis=-1, )
paddle.nn.functional.rrelu(Tensor([2, 3, 4, 178956971],"float16"), 0.1, 0.3, training=False, )
paddle.broadcast_to(Tensor([10140896, 1, 15, 15],"bool"), list[10,8,15,15,], )
paddle.digamma(x=Tensor([6, 6, 19884108, 6],"float16"), )
paddle.Tensor.chunk(Tensor([1, 103, 1, 22152441],"float32"), 4, axis=-1, )
paddle.nanmean(Tensor([2, 3, 143165577, 5],"float32"), tuple(0,2,), False, )
paddle.Tensor.cumsum(Tensor([1, 2281701379],"float32"), axis=-1, )
paddle.tril(x=Tensor([1073741825, 2, 2],"float16"), diagonal=5, )
paddle.trunc(input=Tensor([119304648, 6, 6],"float16"), )
paddle.nn.functional.pairwise_distance(Tensor([2281701379],"float32"), Tensor([2281701379],"float32"), math.inf, 1e-06, False, None, )
paddle.linalg.norm(x=Tensor([3, 3, 477218589],"float16"), axis=list[1,2,], p=math.inf, )
paddle.nanmean(Tensor([858993459, 5],"float32"), keepdim=True, )
paddle.Tensor.lerp(x=Tensor([4, 1073741825],"float16"), y=Tensor([1],"float16"), weight=0.2, )
paddle.linalg.norm(Tensor([3, 20, 38028357],"float32"), 2.0, -1, False, )
paddle.chunk(Tensor([13, 5484860, 32],"float32"), 3, axis=1, )
paddle.nn.functional.pairwise_distance(Tensor([2, 1140850690],"float32"), Tensor([2, 1140850690],"float32"), 0, 1e-06, False, None, )
paddle.trunc(input=Tensor([3, 6, 6, 6, 6628036],"float16"), )
paddle.Tensor.lu(Tensor([3, 760567127],"float32"), )
paddle.nn.functional.pairwise_distance(Tensor([4294967297],"float16"), Tensor([4294967297],"float16"), -math.inf, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([100, 42949673],"float16"), Tensor([100, 42949673],"float16"), -1, 1e-06, False, None, )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([858993460, 5, 1, 1],"float16"), list[list[3,1,2,],list[1,2,3,],], )
paddle.triu(Tensor([1, 429496730, 1, 10],"float16"), diagonal=1, )
paddle.argmin(Tensor([3, 3, 3, 3, 3, 17674763],"float16"), axis=0, )
paddle.roll(Tensor([2378, 16, 21, 14, 384],"float16"), shifts=tuple(4,3,3,), axis=tuple(1,2,3,), )
paddle.Tensor.lerp(x=Tensor([4, 5, 71582789, 3],"float16"), y=Tensor([4, 5, 71582789, 3],"float16"), weight=0.5, )
paddle.nanmean(Tensor([71582789, 3, 4, 5],"float32"), tuple(0,2,), False, )
paddle.tril(Tensor([10, 228170138, 1],"float32"), 0, )
paddle.trapezoid(y=Tensor([1073741825, 4],"float16"), x=Tensor([1073741825, 4],"float16"), )
paddle.argsort(Tensor([3, 760567127],"int64"), axis=1, stable=True, )
paddle.nn.utils.vector_to_parameters(Tensor([2281701379],"float32"), list[Tensor([48, 8],"float32"),Tensor([48, 16],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),Tensor([48, 16],"float32"),Tensor([48, 16],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),], )
paddle.nn.functional.triplet_margin_with_distance_loss(Tensor([5, 858993460],"float16"), Tensor([5, 858993460],"float16"), Tensor([5, 858993460],"float16"), margin=0.3, swap=False, reduction="none", name=None, )
paddle.tensordot(Tensor([5, 5, 5, 1],"float16"), Tensor([5, 5, 1, 171798692],"float16"), list[list[3,2,0,],list[2,1,0,],], )
paddle.nn.functional.hardshrink(Tensor([2281701379],"float32"), 0.5, None, )
paddle.roll(Tensor([1, 16, 14, 14, 1369569],"float16"), shifts=tuple(4,3,3,), axis=tuple(1,2,3,), )
paddle.tensordot(Tensor([5, 171798692, 5, 1],"float16"), Tensor([5, 171798692, 1, 5],"float16"), list[list[2,3,0,],list[3,1,0,],], )
paddle.nn.functional.grid_sample(Tensor([5821, 4, 280, 350],"float32"), Tensor([5821, 368, 416, 2],"float32"), mode="nearest", padding_mode="zeros", align_corners=False, )
paddle.roll(Tensor([3567, 16, 14, 7, 768],"float16"), shifts=tuple(4,3,0,), axis=tuple(1,2,3,), )
paddle.nn.functional.pairwise_distance(Tensor([100, 42949673],"float16"), Tensor([100, 42949673],"float16"), -math.inf, 1e-06, True, None, )
paddle.sum(Tensor([71582789, 3, 4, 5],"bool"), axis=list[2,], keepdim=True, )
paddle.flatten(Tensor([214748365, 4, 5],"float32"), )
paddle.diff(Tensor([570425345, 4],"float32"), n=1, axis=0, prepend=Tensor([570425345, 4],"float32"), append=None, )
paddle.nn.functional.normalize(Tensor([2281701379],"float32"), axis=0, )
paddle.nn.functional.grid_sample(Tensor([67395, 1, 184, 184],"float32"), Tensor([67395, 1, 12544, 2],"float32"), align_corners=False, )
paddle.argmax(Tensor([3, 3, 3, 17674763, 3, 3],"float16"), axis=0, )
paddle.triu(Tensor([1, 390451573, 1, 11],"float16"), diagonal=1, )
paddle.Tensor.nansum(Tensor([477218589, 3, 3],"float16"), axis=0, keepdim=True, )
paddle.nanmean(Tensor([858993459, 5],"float32"), axis=None, )
paddle.diff(Tensor([570425345, 4],"float32"), n=1, axis=0, prepend=None, append=Tensor([1, 4],"float32"), )
paddle.chunk(x=Tensor([3, 760567127],"int64"), chunks=3, axis=-1, )
paddle.Tensor.expand_as(Tensor([2281701379, 1],"int32"), Tensor([2281701379, 1],"int64"), )
paddle.nn.functional.normalize(x=Tensor([4, 5, 30678338, 7],"float16"), p=4, )
paddle.nn.functional.normalize(Tensor([570425345, 4],"float32"), axis=0, )
paddle.linalg.norm(Tensor([10, 10, 22817014],"float32"), p=math.inf, axis=-1, )
paddle.linalg.norm(x=Tensor([2, 285212673, 4],"float32"), )
paddle.sum(Tensor([2, 107374183, 4, 5],"bool"), axis=list[0,2,], keepdim=False, )
paddle.isreal(Tensor([1431655765, 3],"bfloat16"), )
paddle.roll(Tensor([1, 16, 14, 24967, 768],"float16"), shifts=tuple(-4,-3,0,), axis=tuple(1,2,3,), )
paddle.linalg.cond(Tensor([2, 126761188, 3, 3],"float32"), 2, )
paddle.chunk(x=Tensor([2281701379],"bool"), chunks=3, axis=0, )
paddle.nanmean(Tensor([2, 107374183, 4, 5],"float32"), list[0,1,2,3,], False, )
paddle.linalg.matrix_rank(Tensor([3, 25352238, 5, 6],"float32"), Tensor([3, 4],"float32"), False, )
paddle.trunc(input=Tensor([3, 6, 6, 6628036, 6],"float16"), )
paddle.nanmean(Tensor([1431655765, 3],"float32"), None, True, )
paddle.trunc(input=Tensor([3, 6, 6628036, 6, 6],"float16"), )
paddle.roll(Tensor([1, 16, 21, 33289, 384],"float16"), shifts=tuple(-4,-3,-3,), axis=tuple(1,2,3,), )
paddle.full_like(Tensor([2, 1140850690],"int64"), 151643, )
paddle.nn.functional.normalize(Tensor([325957340, 7],"float32"), axis=1, )
paddle.nn.functional.normalize(Tensor([80, 28521268],"float32"), axis=-1, )
paddle.linalg.norm(Tensor([4294967295],"float32"), p=1, )
paddle.argmax(Tensor([13, 2, 4, 10969719, 2],"float32"), axis=-1, )
paddle.nn.functional.layer_norm(Tensor([570425345, 4],"float32"), list[4,], None, None, )
paddle.nanmean(Tensor([2, 3, 143165577, 5],"float32"), list[], False, )
paddle.nn.functional.normalize(x=Tensor([1, 2281701379],"float32"), axis=-1, )
paddle.nanmean(Tensor([1431655765, 3],"float32"), None, False, )
paddle.nanmean(Tensor([2, 2147483648],"float32"), None, False, )
paddle.linalg.norm(Tensor([4, 570425345],"float32"), p=-math.inf, axis=list[0,1,], )
paddle.linalg.norm(Tensor([38028357, 20, 3],"float32"), math.inf, 2, True, )
paddle.tensordot(Tensor([1, 1, 1, 5],"float16"), Tensor([1, 5, 858993460, 1],"float16"), list[list[0,1,3,],list[0,3,1,],], )
paddle.cumsum(x=Tensor([1, 16, 8388609, 32],"float16"), axis=2, )
paddle.flatten(Tensor([3, 715827883, 2],"int32"), )
paddle.dist(x=Tensor([1073741825, 4],"float16"), y=Tensor([1073741825, 4],"float16"), p=1, )
paddle.chunk(Tensor([2048, 1114113],"float32"), 2, axis=-1, )
paddle.linalg.norm(x=Tensor([3, 1431655766],"float16"), p=1, axis=1, keepdim=True, )
paddle.nn.functional.hardshrink(x=Tensor([2281701379],"float32"), )
paddle.nansum(Tensor([3, 1431655765],"float32"), axis=None, keepdim=True, name=None, )
paddle.triu(x=Tensor([3, 2, 715827883],"float16"), diagonal=5, )
paddle.argmax(Tensor([4, 16777217, 4, 4, 4],"float16"), axis=0, )
paddle.Tensor.lerp(x=Tensor([4, 5, 4, 53687092],"float16"), y=Tensor([4, 5, 4, 53687092],"float16"), weight=1.0, )
paddle.nn.functional.pairwise_distance(Tensor([2281701379],"float32"), Tensor([2281701379],"float32"), -math.inf, 1e-06, True, None, )
paddle.rsqrt(x=Tensor([2, 1073741825, 2],"float16"), )
paddle.tensordot(Tensor([1, 1, 5, 5],"float16"), Tensor([5, 5, 34359739, 5],"float16"), list[list[1,3,2,0,],list[2,1,0,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 4294967297],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[1,0,3,2,],list[2,3,0,1,],], )
paddle.nn.functional.layer_norm(normalized_shape=tuple(3,), x=Tensor([1431655766, 3],"float16"), epsilon=1e-05, )
paddle.tensordot(Tensor([171798692, 5, 5, 1],"float16"), Tensor([5, 5, 1, 5],"float16"), list[list[3,2,1,],list[2,0,1,],], )
paddle.nn.functional.normalize(Tensor([1, 8912897, 16, 16],"float32"), axis=1, )
paddle.nn.functional.normalize(Tensor([35651585, 64],"float32"), axis=-1, )
paddle.chunk(x=Tensor([760567127, 3],"int64"), chunks=3, axis=0, )
paddle.isfinite(Tensor([8, 17, 5, 6, 1052689],"float16"), )
paddle.copysign(Tensor([10, 228170138],"float32"), Tensor([10, 228170138],"float32"), )
paddle.nanmean(Tensor([2, 3, 143165577, 5],"float32"), list[0,1,2,3,], False, )
paddle.chunk(Tensor([1, 1, 64, 67108865],"float16"), 2, axis=-1, )
paddle.linalg.norm(Tensor([715827883, 6],"float32"), p=1, axis=list[0,1,], )
paddle.maximum(Tensor([1],"float32"), Tensor([4294967295],"float32"), )
paddle.copysign(Tensor([71582789, 3, 4, 5],"float16"), Tensor([71582789, 3, 4, 5],"float16"), )
paddle.linalg.norm(x=Tensor([2, 3, 715827883],"float16"), p=1, axis=list[0,1,], keepdim=True, )
paddle.linalg.norm(Tensor([10, 10, 42949673],"float32"), p=1.5, axis=-1, )
paddle.trunc(Tensor([20, 114085069],"float32"), )
paddle.nn.functional.pairwise_distance(Tensor([100, 42949673],"float16"), Tensor([100, 42949673],"float16"), math.inf, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([4294967297],"float16"), Tensor([4294967297],"float16"), 1, 1e-06, True, None, )
paddle.Tensor.lerp(x=Tensor([71582789, 5, 4, 3],"float16"), y=Tensor([71582789, 5, 4, 3],"float16"), weight=1.0, )
paddle.isnan(Tensor([858993459, 5],"float32"), )
paddle.linalg.norm(x=Tensor([2, 285212673, 4],"float32"), p=math.inf, axis=0, keepdim=False, )
paddle.lerp(Tensor([2, 1, 1, 1],"float32"), Tensor([2, 3, 8, 47535446],"float32"), 0.3, )
paddle.diff(Tensor([2, 4],"float32"), n=2, axis=0, prepend=Tensor([570425345, 4],"float32"), append=None, )
paddle.linalg.vector_norm(x=Tensor([2, 3, 715827883],"float32"), p=math.inf, axis=0, keepdim=True, )
paddle.cumsum(Tensor([49602204, 46],"int64"), axis=1, )
paddle.diff(x=Tensor([2281701379],"float32"), )
paddle.tensordot(Tensor([1, 1, 1, 4294967297],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[1,0,2,3,],list[3,0,1,2,],], )
paddle.nansum(Tensor([858993459, 5],"float32"), axis=None, keepdim=False, name=None, )
paddle.triu(x=Tensor([3, 715827883, 2],"float16"), diagonal=-5, )
paddle.lerp(Tensor([1, 1, 1],"float32"), Tensor([3, 27163112, 28],"float32"), 0.36, )
paddle.chunk(x=Tensor([3, 1431655766],"float16"), chunks=3, axis=-1, )
paddle.tensordot(Tensor([171798692, 5, 5, 1],"float16"), Tensor([171798692, 5, 1, 5],"float16"), list[list[3,2,0,],list[2,1,0,],], )
paddle.digamma(x=Tensor([3314018, 6, 6, 6, 6],"float16"), )
paddle.cumsum(Tensor([120, 19014179],"int32"), axis=0, )
paddle.Tensor.lu(Tensor([760567127, 3],"float32"), )
paddle.roll(Tensor([1, 57066, 14, 14, 384],"float16"), shifts=tuple(-4,-3,-3,), axis=tuple(1,2,3,), )
paddle.nn.functional.pairwise_distance(Tensor([42949673, 100],"float16"), Tensor([42949673, 100],"float16"), 1, 1e-06, False, None, )
paddle.diff(Tensor([570425345, 4],"float32"), n=2, axis=0, prepend=Tensor([2, 4],"float32"), append=Tensor([2, 4],"float32"), )
paddle.diff(x=Tensor([4294967297],"float16"), prepend=Tensor([4],"float16"), )
paddle.nn.functional.pairwise_distance(Tensor([760567127, 3],"float32"), Tensor([760567127, 3],"float32"), 1, 1e-06, False, None, )
paddle.fmin(Tensor([1],"int64"), Tensor([2281701379],"int64"), )
paddle.diff(Tensor([570425345, 4],"float32"), n=1, axis=0, prepend=None, append=None, )
paddle.linalg.norm(x=Tensor([190141782, 3, 4],"float32"), )
paddle.nn.functional.rrelu(Tensor([2, 57042535, 4, 5],"float32"), 0.1, 0.3, training=False, )
paddle.diff(Tensor([570425345, 4],"float32"), n=1, axis=0, prepend=None, append=Tensor([570425345, 4],"float32"), )
paddle.nn.functional.normalize(Tensor([207427399, 11],"float32"), axis=1, )
paddle.Tensor.chunk(Tensor([1901418, 300, 4],"float32"), 4, )
paddle.nn.functional.pairwise_distance(Tensor([42949673, 100],"float16"), Tensor([42949673, 100],"float16"), -math.inf, 1e-06, True, None, )
paddle.lerp(Tensor([1],"float32"), Tensor([1],"float32"), Tensor([2281701379],"float32"), )
paddle.nanmean(Tensor([2, 3, 4, 178956971],"float32"), -1, False, )
paddle.lerp(Tensor([1, 3, 4],"float16"), Tensor([357913942, 3, 4],"float16"), Tensor([1, 3, 4],"float16"), )
paddle.copysign(Tensor([4, 5],"float16"), Tensor([214748365, 4, 5],"float16"), )
paddle.linalg.norm(Tensor([4, 1073741824],"float32"), )
paddle.nn.functional.normalize(Tensor([2, 2147483648],"float32"), axis=1, )
paddle.chunk(Tensor([13, 175515491, 1],"float32"), 4, axis=1, )
paddle.diff(x=Tensor([4294967297],"float16"), prepend=Tensor([4294967297],"float16"), )
paddle.logsumexp(Tensor([2, 107374183, 4, 5],"float32"), list[-1,], False, )
paddle.nanmean(Tensor([1431655765, 3],"float32"), tuple(0,1,), False, )
paddle.isreal(Tensor([2, 2147483648],"bfloat16"), )
paddle.tensordot(Tensor([1, 1, 1, 4294967297],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[1,2,0,3,],list[0,2,1,3,],], )
paddle.triu(Tensor([2, 21262215, 1, 101],"float16"), )
paddle.linalg.norm(Tensor([4, 570425345],"float32"), )
paddle.nn.functional.pairwise_distance(Tensor([100, 42949673],"float16"), Tensor([100, 42949673],"float16"), 1, 1e-06, True, None, )
paddle.triu(Tensor([390451573, 1, 1, 11],"float16"), diagonal=1, )
paddle.diff(x=Tensor([10],"float16"), prepend=Tensor([4294967297],"float16"), append=Tensor([4],"float16"), )
paddle.linalg.vector_norm(x=Tensor([536870913, 4],"float64"), p=0, axis=None, keepdim=True, )
paddle.roll(Tensor([1, 16, 7, 49933, 768],"float16"), shifts=tuple(4,0,0,), axis=tuple(1,2,3,), )
paddle.Tensor.bmm(Tensor([5309, 143264, 3],"float32"), Tensor([5309, 3, 2],"float32"), )
paddle.Tensor.logit(x=Tensor([143165577, 3, 2, 5],"float16"), )
paddle.digamma(x=Tensor([6, 6, 6, 19884108],"float16"), )
paddle.diff(x=Tensor([4294967297],"float16"), prepend=Tensor([4],"float16"), append=Tensor([4],"float16"), )
paddle.nanmean(Tensor([2, 107374183, 4, 5],"float32"), list[], False, )
paddle.nn.functional.pairwise_distance(Tensor([2281701379],"float32"), Tensor([2281701379],"float32"), 0, 1e-06, False, None, )
paddle.nn.functional.normalize(x=Tensor([4, 25565282, 6, 7],"float16"), p=4, axis=3, )
paddle.trunc(input=Tensor([3314018, 6, 6, 6, 6],"float16"), )
paddle.roll(x=Tensor([3, 1431655766],"float16"), shifts=-1, axis=0, )
paddle.digamma(Tensor([21474837, 10, 10, 2],"float16"), )
paddle.linalg.norm(x=Tensor([2, 536870913, 4],"float16"), p=math.inf, axis=list[0,1,], keepdim=True, )
paddle.nn.functional.pairwise_distance(Tensor([2, 2147483649],"float16"), Tensor([2, 2147483649],"float16"), 1, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([100, 42949673],"float16"), Tensor([100, 42949673],"float16"), -math.inf, 1e-06, False, None, )
paddle.isreal(Tensor([64, 67108864],"bfloat16"), )
paddle.nansum(Tensor([1431655765, 3],"float32"), axis=list[0,], keepdim=True, name=None, )
paddle.flatten(Tensor([214748365, 4, 5],"int32"), )
paddle.nn.utils.vector_to_parameters(Tensor([2281701379],"float32"), list[Tensor([3, 2, 4],"float32"),Tensor([3],"float32"),], )
paddle.triu(Tensor([429496730, 1, 1, 10],"float16"), diagonal=1, )
paddle.nn.functional.pairwise_distance(Tensor([4294967297],"float16"), Tensor([4294967297],"float16"), 1, 1e-06, False, None, )
paddle.sum(Tensor([2, 107374183, 4, 5],"bool"), axis=list[-1,], keepdim=False, )
paddle.linalg.vector_norm(x=Tensor([1073741824, 4],"float32"), p=2, axis=None, keepdim=True, )
paddle.Tensor.repeat_interleave(Tensor([22817014, 1, 10, 10],"int64"), 2, axis=0, )
paddle.digamma(x=Tensor([119304648, 6, 6],"float16"), )
paddle.copysign(Tensor([2, 3, 143165577, 5],"float16"), Tensor([2, 3, 143165577, 5],"float16"), )
paddle.nn.functional.pairwise_distance(Tensor([22817014, 100],"float32"), Tensor([22817014, 100],"float32"), -math.inf, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([100, 22817014],"float32"), Tensor([100, 22817014],"float32"), 0, 1e-06, True, None, )
paddle.linalg.norm(x=Tensor([477218589, 3, 3],"float16"), axis=list[0,2,], p=1, )
paddle.nn.functional.pairwise_distance(Tensor([100, 22817014],"float32"), Tensor([100, 22817014],"float32"), math.inf, 1e-06, True, None, )
paddle.nn.functional.normalize(Tensor([12, 190141782],"float32"), axis=-1, )
paddle.trunc(Tensor([10, 228170138, 1],"float32"), )
paddle.nn.functional.pairwise_distance(Tensor([2281701379],"float32"), Tensor([2281701379],"float32"), -1, 1e-06, False, None, )
paddle.std(x=Tensor([3, 477218589, 3],"float16"), axis=0, unbiased=False, )
paddle.bucketize(Tensor([1073741825, 4],"float16"), Tensor([4],"float16"), )
paddle.dist(x=Tensor([2, 2147483649],"float16"), y=Tensor([2, 2147483649],"float16"), p=0, )
paddle.linalg.norm(x=Tensor([2, 3, 715827883],"float32"), p=math.inf, axis=0, keepdim=False, )
paddle.linalg.norm(x=Tensor([357913942, 3, 4],"float16"), p=1, axis=list[0,1,], keepdim=False, )
paddle.Tensor.cumsum(Tensor([3, 380283564, 2],"int64"), axis=2, )
paddle.sum(Tensor([2, 3, 715827883],"int32"), axis=tuple(0,1,), )
paddle.Tensor.cumsum(Tensor([4294967297],"float16"), -1, )
paddle.Tensor.cumsum(Tensor([285212673, 4, 2],"int64"), axis=1, )
paddle.roll(Tensor([1, 16, 7, 14, 2739138],"float16"), shifts=tuple(4,0,3,), axis=tuple(1,2,3,), )
paddle.nn.functional.pairwise_distance(Tensor([100, 22817014],"float32"), Tensor([100, 22817014],"float32"), 2, 1e-06, False, None, )
paddle.linalg.norm(x=Tensor([3, 477218589, 3],"float16"), axis=list[1,2,], p=1, )
paddle.nn.functional.layer_norm(Tensor([8, 1114113, 256],"float32"), list[256,], weight=Tensor([256],"float32"), bias=Tensor([256],"float32"), epsilon=1e-05, )
paddle.nanmean(Tensor([2, 107374183, 4, 5],"float32"), None, True, )
paddle.tensordot(Tensor([858993460, 1, 1, 5],"float16"), Tensor([858993460, 5, 1, 1],"float16"), list[list[3,2,0,],list[3,2,0,],], )
paddle.fft.ifftshift(x=Tensor([4, 67108865, 4, 4],"float16"), )
paddle.chunk(x=Tensor([760567127, 3],"int32"), chunks=3, axis=0, )
paddle.nn.functional.rrelu(Tensor([38028357, 3, 4, 5],"float32"), 0.3, 0.300000009, training=True, )
paddle.nansum(Tensor([858993459, 5],"float32"), keepdim=True, )
paddle.Tensor.cumsum(Tensor([228170138, 10],"int64"), axis=1, )
paddle.Tensor.logit(x=Tensor([4, 3, 71582789, 5],"float16"), )
paddle.triu(x=Tensor([3, 715827883, 2],"float16"), diagonal=-1, )
paddle.gcd(x=Tensor([2281701379],"int32"), y=Tensor([1],"int32"), )
paddle.nanmean(Tensor([2, 3, 143165577, 5],"float32"), list[0,2,], False, )
paddle.tril(Tensor([114085069, 20, 1],"float32"), 0, )
paddle.linalg.norm(x=Tensor([2, 536870913, 4],"float16"), p=1, axis=list[0,1,], keepdim=True, )
paddle.cumsum(Tensor([2281701379],"float32"), axis=0, )
paddle.linalg.norm(Tensor([10, 10, 22817014],"float32"), p=1.5, axis=-1, )
paddle.tril(x=Tensor([1073741825, 2, 2],"float16"), diagonal=-1, )
paddle.sum(Tensor([2, 2147483648],"bool"), axis=0, keepdim=True, )
paddle.nn.functional.normalize(Tensor([2970966, 768],"float32"), axis=-1, )
paddle.nn.functional.normalize(Tensor([8705, 64, 64, 64],"float32"), axis=1, )
paddle.Tensor.cumsum(Tensor([5, 456340276],"int64"), axis=0, )
paddle.sum(Tensor([3, 4, 357913942],"int32"), axis=1, keepdim=True, )
paddle.linalg.norm(Tensor([10, 10, 42949673],"float32"), p=1.0, axis=-1, )
paddle.diff(Tensor([2, 4],"float32"), n=1, axis=0, prepend=Tensor([570425345, 4],"float32"), append=Tensor([2, 4],"float32"), )
paddle.linalg.norm(Tensor([10, 10, 22817014],"float32"), p=0, axis=-1, )
paddle.linalg.cond(Tensor([63380594, 4, 3, 3],"float32"), -2, )
paddle.linalg.vector_norm(x=Tensor([2, 3, 715827883],"float32"), p=math.inf, axis=None, keepdim=True, )
paddle.linalg.norm(x=Tensor([2, 536870912, 4],"float32"), p=math.inf, axis=0, keepdim=True, )
paddle.Tensor.kthvalue(Tensor([2, 200, 5704254],"float32"), k=200, axis=1, )
paddle.cumsum(Tensor([1, 2281701379],"float32"), axis=-1, )
paddle.roll(Tensor([1, 16, 14, 21, 913046],"float16"), shifts=tuple(-4,-3,-3,), axis=tuple(1,2,3,), )
paddle.cumsum(Tensor([3, 190141782, 4],"float32"), axis=1, )
paddle.trunc(input=Tensor([6, 6, 19884108, 6],"float16"), )
paddle.diff(Tensor([570425345, 4],"float32"), n=2, axis=0, prepend=None, append=Tensor([2, 4],"float32"), )
paddle.Tensor.kthvalue(Tensor([1140851, 200, 10],"float32"), k=200, axis=1, )
paddle.dist(x=Tensor([570425345, 4],"float32"), y=Tensor([570425345, 4],"float32"), )
paddle.roll(Tensor([1431655766, 3],"float16"), shifts=1, axis=0, )
paddle.Tensor.lerp(x=Tensor([4, 5, 214748365],"float16"), y=Tensor([4, 5, 214748365],"float16"), weight=0.5, )
paddle.nn.functional.normalize(Tensor([1, 557057, 64, 64],"float32"), axis=1, )
paddle.lerp(Tensor([2, 17825793, 8, 8],"float32"), Tensor([2, 17825793, 8, 8],"float32"), 1.1, )
paddle.Tensor.cumsum(Tensor([1, 192, 11883862],"float32"), 2, )
paddle.triu(x=Tensor([3, 715827883, 2],"float16"), diagonal=0, )
paddle.tril(Tensor([1, 2281701379, 1, 1],"float32"), )
paddle.nn.functional.normalize(x=Tensor([4, 5, 6, 35791395],"float16"), p=4, axis=3, )
paddle.linalg.norm(x=Tensor([3, 1431655766],"float16"), p=0, axis=1, keepdim=True, )
paddle.nn.functional.pairwise_distance(Tensor([2, 1140850690],"float32"), Tensor([2, 1140850690],"float32"), math.inf, 1e-06, False, None, )
paddle.argmax(Tensor([13, 2, 2742430, 16, 2],"float32"), axis=-1, )
paddle.digamma(Tensor([10, 10, 10, 4294968],"float16"), )
paddle.nn.functional.normalize(x=Tensor([4, 5, 214748365],"float16"), )
paddle.nanmean(Tensor([2, 2147483648],"float32"), tuple(0,1,), False, )
paddle.linalg.cond(Tensor([2, 126761188, 3, 3],"float32"), -1, )
paddle.nn.functional.pairwise_distance(Tensor([4294967297],"float16"), Tensor([4294967297],"float16"), math.inf, 1e-06, False, None, )
paddle.nn.functional.normalize(Tensor([1, 128, 32, 557057],"float32"), axis=1, )
paddle.nn.functional.normalize(x=Tensor([20452226, 5, 6, 7],"float16"), p=4, axis=3, )
paddle.nansum(Tensor([3, 1431655765],"float32"), axis=None, keepdim=False, name=None, )
paddle.nn.functional.pairwise_distance(Tensor([2, 2147483649],"float16"), Tensor([2, 2147483649],"float16"), 2, 1e-06, False, None, )
paddle.linalg.norm(x=Tensor([357913942, 3, 4],"float16"), p=1, axis=list[0,1,], keepdim=True, )
paddle.nn.functional.triplet_margin_with_distance_loss(input=Tensor([5, 858993460],"float16"), positive=Tensor([5, 858993460],"float16"), negative=Tensor([5, 858993460],"float16"), distance_function=None, margin=0.3, swap=False, reduction="sum", )
paddle.nn.utils.vector_to_parameters(Tensor([2281701379],"float32"), list[Tensor([16, 8],"float32"),Tensor([16, 16],"float32"),Tensor([16],"float32"),Tensor([16],"float32"),Tensor([16, 16],"float32"),Tensor([16, 16],"float32"),Tensor([16],"float32"),Tensor([16],"float32"),], )
paddle.fmin(Tensor([2147483649],"int64"), Tensor([1],"int64"), )
paddle.Tensor.cumsum(Tensor([3, 760567127],"int64"), axis=0, )
paddle.triu(Tensor([114085069, 20, 1],"float32"), 0, )
paddle.nn.functional.normalize(Tensor([1006, 2268093],"float32"), )
paddle.nn.functional.grid_sample(Tensor([56, 3, 848848, 16],"float32"), Tensor([56, 16, 848848, 2],"float32"), mode="bilinear", padding_mode="border", align_corners=True, )
paddle.diff(Tensor([2, 4],"float32"), n=2, axis=0, prepend=Tensor([2, 4],"float32"), append=Tensor([570425345, 4],"float32"), )
paddle.dist(x=Tensor([4, 570425345],"float32"), y=Tensor([4, 570425345],"float32"), )
paddle.diff(Tensor([570425345, 4],"float32"), n=1, axis=0, prepend=Tensor([2, 4],"float32"), append=Tensor([2, 4],"float32"), )
paddle.nn.functional.layer_norm(normalized_shape=tuple(3,), x=Tensor([760567127, 3],"float32"), )
paddle.dist(x=Tensor([4, 1073741825],"float16"), y=Tensor([4, 1073741825],"float16"), )
paddle.roll(Tensor([1, 16, 14, 21, 913046],"float16"), shifts=tuple(4,3,3,), axis=tuple(1,2,3,), )
paddle.chunk(x=Tensor([3, 760567127],"int32"), chunks=3, axis=-1, )
paddle.cumsum(Tensor([16, 142606337],"int32"), axis=0, )
paddle.nn.functional.rrelu(Tensor([2, 3, 4, 178956971],"float16"), 0.3, 0.300000009, training=True, )
paddle.nn.functional.pairwise_distance(Tensor([100, 42949673],"float16"), Tensor([100, 42949673],"float16"), 0, 1e-06, False, None, )
paddle.copysign(Tensor([57042535, 20, 2],"float32"), Tensor([57042535, 20, 2],"float32"), )
paddle.nn.functional.normalize(Tensor([10, 228170138],"float32"), p=1.5, )
paddle.triu(x=Tensor([1073741825, 2, 2],"float16"), diagonal=-5, )
paddle.nansum(Tensor([3, 1431655765],"float32"), keepdim=True, )
paddle.linalg.cond(Tensor([63380594, 4, 3, 3],"float32"), -math.inf, )
paddle.nn.functional.pairwise_distance(Tensor([42949673, 100],"float16"), Tensor([42949673, 100],"float16"), -math.inf, 1e-06, False, None, )
paddle.linalg.norm(x=Tensor([2, 3, 715827883],"float16"), p=1, axis=list[0,1,], keepdim=False, )
paddle.linalg.norm(x=Tensor([3, 477218589, 3],"float16"), axis=None, )
paddle.nn.functional.normalize(Tensor([1, 64, 557057, 64],"float32"), axis=1, )
paddle.nn.functional.normalize(x=Tensor([1073741825, 4],"float16"), )
paddle.diff(x=Tensor([2281701379],"int32"), )
paddle.roll(Tensor([1, 16, 49933, 7, 768],"float16"), shifts=tuple(4,0,0,), axis=tuple(1,2,3,), )
paddle.nn.functional.normalize(Tensor([10, 429496730],"float16"), )
paddle.minimum(Tensor([1],"float32"), Tensor([4294967295],"float32"), )
paddle.argsort(Tensor([228170138, 10],"int64"), axis=1, stable=True, )
paddle.nn.functional.pairwise_distance(Tensor([4294967297],"float16"), Tensor([4294967297],"float16"), -1, 1e-06, True, None, )
paddle.isreal(Tensor([1431655765, 3],"float32"), )
paddle.frac(Tensor([760567127, 3],"float32"), )
paddle.nanmean(Tensor([71582789, 3, 4, 5],"float32"), list[0,1,2,3,], False, )
paddle.linalg.norm(x=Tensor([190141782, 3, 4],"float32"), p=math.inf, axis=0, keepdim=True, )
paddle.copysign(Tensor([8, 17, 5, 6, 1052689],"float16"), Tensor([8, 17, 5, 6, 1052689],"float16"), )
paddle.argmax(Tensor([3, 17674763, 3, 3, 3, 3],"float16"), axis=0, )
paddle.tensordot(Tensor([5, 171798692, 5, 1],"float16"), Tensor([5, 5, 1, 5],"float16"), list[list[2,3,0,],list[3,1,0,],], )
paddle.linalg.det(Tensor([253522376, 3, 3],"float32"), )
paddle.nn.functional.triplet_margin_with_distance_loss(input=Tensor([5, 858993460],"float16"), positive=Tensor([5, 858993460],"float16"), negative=Tensor([5, 858993460],"float16"), distance_function=None, margin=0.3, swap=False, reduction="none", )
paddle.Tensor.argmax(Tensor([7225, 157920, 2],"float32"), axis=-1, )
paddle.lerp(Tensor([1, 1, 1],"float32"), Tensor([35651585, 8, 8],"float32"), 0.3, )
paddle.nn.functional.pairwise_distance(Tensor([22817014, 100],"float32"), Tensor([22817014, 100],"float32"), -math.inf, 1e-06, True, None, )
paddle.roll(Tensor([3567, 16, 7, 14, 768],"float16"), shifts=tuple(4,0,3,), axis=tuple(1,2,3,), )
paddle.cumsum(Tensor([22369622, 102],"int64"), 1, )
paddle.nn.functional.pairwise_distance(Tensor([100, 22817014],"float32"), Tensor([100, 22817014],"float32"), 2, 1e-06, True, None, )
paddle.roll(Tensor([2378, 16, 14, 21, 384],"float16"), shifts=tuple(4,3,3,), axis=tuple(1,2,3,), )
paddle.nn.functional.grid_sample(Tensor([5821, 4, 280, 350],"float32"), Tensor([5821, 298, 364, 2],"float32"), mode="nearest", padding_mode="zeros", align_corners=False, )
paddle.linalg.lstsq(Tensor([10, 228170138],"float32"), Tensor([10, 8],"float32"), rcond=None, driver="gels", )
paddle.linalg.norm(x=Tensor([2, 536870913, 4],"float16"), p=-math.inf, axis=list[0,1,], keepdim=True, )
paddle.tril(x=Tensor([3, 715827883, 2],"float16"), diagonal=1, )
paddle.roll(Tensor([1, 16, 14, 49933, 384],"float16"), shifts=tuple(4,3,3,), axis=tuple(1,2,3,), )
paddle.Tensor.cumsum(Tensor([28521268, 10, 8],"float32"), 1, )
paddle.nn.functional.pairwise_distance(Tensor([100, 42949673],"float16"), Tensor([100, 42949673],"float16"), 1, 1e-06, False, None, )
paddle.tril(x=Tensor([3, 715827883, 2],"float16"), diagonal=5, )
paddle.nn.functional.normalize(x=Tensor([2, 2147483649],"float16"), )
paddle.tensordot(Tensor([1, 1, 1, 4294967297],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[0,3,1,2,],list[3,2,1,0,],], )
paddle.Tensor.diff(x=Tensor([4294967297],"float16"), prepend=Tensor([4],"float16"), )
paddle.argmax(Tensor([8912897, 2, 4, 16, 2],"float32"), axis=-1, )
paddle.nn.functional.normalize(x=Tensor([2970966, 768],"float32"), axis=-1, )
paddle.roll(Tensor([1, 16, 21, 14, 913046],"float16"), shifts=tuple(4,3,3,), axis=tuple(1,2,3,), )
paddle.nn.functional.pairwise_distance(Tensor([4294967297],"float16"), Tensor([4294967297],"float16"), 0, 1e-06, True, None, )
paddle.copysign(Tensor([8, 17, 751921, 6, 7],"float16"), Tensor([8, 17, 751921, 6, 7],"float16"), )
paddle.nn.functional.normalize(Tensor([60, 38028357],"float32"), axis=0, )
paddle.argmax(Tensor([4, 4, 16777217, 4, 4],"float16"), axis=0, )
paddle.lerp(Tensor([1, 3, 3],"float16"), Tensor([477218589, 3, 3],"float16"), Tensor([1, 3, 3],"float16"), )
paddle.Tensor.cumsum(Tensor([22817014, 100],"int64"), axis=1, )
paddle.tensordot(Tensor([1, 1, 1, 4294967297],"float16"), Tensor([1, 5, 1, 1],"float16"), list[list[1,2,3,0,],list[1,3,0,2,],], )
paddle.std(x=Tensor([3, 3, 477218589],"float16"), axis=0, unbiased=False, )
paddle.copysign(Tensor([10, 429496730],"float16"), Tensor([10, 429496730],"float16"), )
paddle.frac(Tensor([114085069, 20, 1],"float32"), )
paddle.cumsum(Tensor([38028357, 60],"int32"), axis=0, )
paddle.copysign(Tensor([2, 3, 4, 178956971],"float16"), Tensor([2, 3, 4, 178956971],"float16"), )
paddle.Tensor.lerp(x=Tensor([71582789, 5, 4, 3],"float16"), y=Tensor([71582789, 5, 4, 3],"float16"), weight=0.0, )
paddle.Tensor.cumsum(Tensor([1, 10, 228170138],"float32"), 2, )
paddle.nn.functional.pairwise_distance(Tensor([4294967297],"float16"), Tensor([4294967297],"float16"), 0, 1e-06, False, None, )
paddle.linalg.norm(Tensor([11408507, 10, 20],"float32"), p=math.inf, axis=-1, )
paddle.frac(Tensor([10, 20, 11408507],"float32"), )
paddle.Tensor.lerp(x=Tensor([4, 5, 4, 53687092],"float16"), y=Tensor([4, 5, 4, 53687092],"float16"), weight=0.0, )
paddle.diff(Tensor([2, 4],"float32"), n=1, axis=0, prepend=Tensor([570425345, 4],"float32"), append=None, )
paddle.tril(Tensor([2281701379, 1, 1, 1],"float32"), )
paddle.Tensor.repeat_interleave(Tensor([228170138, 10],"int64"), 2, axis=0, )
paddle.nn.functional.pairwise_distance(Tensor([100, 42949673],"float16"), Tensor([100, 42949673],"float16"), 2, 1e-06, False, None, )
paddle.digamma(x=Tensor([6, 119304648, 6],"float16"), )
paddle.trunc(input=Tensor([19884108, 6, 6, 6],"float16"), )
paddle.cumsum(Tensor([24, 95070891],"int32"), axis=0, )
paddle.sum(Tensor([2, 107374183, 4, 5],"bool"), axis=list[2,], keepdim=True, )
paddle.nn.functional.pairwise_distance(Tensor([858993460, 5],"float16"), Tensor([858993460, 5],"float16"), 2, 1e-06, False, None, )
paddle.digamma(x=Tensor([3, 6, 6628036, 6, 6],"float16"), )
paddle.nn.functional.pairwise_distance(Tensor([100, 42949673],"float16"), Tensor([100, 42949673],"float16"), 2, 1e-06, True, None, )
paddle.Tensor.kthvalue(Tensor([2, 114085069, 10],"float32"), k=200, axis=1, )
paddle.tensordot(Tensor([171798692, 5, 5, 1],"float16"), Tensor([171798692, 5, 1, 5],"float16"), list[list[2,3,0,],list[1,2,0,],], )
paddle.copysign(Tensor([214748365, 4, 5],"float16"), Tensor([4, 5],"float16"), )
paddle.nn.utils.vector_to_parameters(Tensor([2281701379],"float32"), list[Tensor([3, 2, 4, 4],"float32"),Tensor([3],"float32"),], )
paddle.digamma(x=Tensor([6, 19884108, 6, 6],"float16"), )
paddle.chunk(x=Tensor([3, 760567127],"float32"), chunks=3, axis=-1, )
paddle.sum(Tensor([2, 3, 4, 178956971],"bool"), axis=tuple(0,2,), keepdim=False, )
paddle.nn.functional.layer_norm(Tensor([69633, 128, 256],"float32"), list[256,], weight=Tensor([256],"float32"), bias=Tensor([256],"float32"), epsilon=1e-05, )
paddle.nn.functional.pairwise_distance(x=Tensor([100, 22817014],"float32"), y=Tensor([100, 1],"float32"), p=2.0, epsilon=1e-06, keepdim=False, )
paddle.trunc(Tensor([114085069, 20],"float32"), )
paddle.nn.functional.pairwise_distance(Tensor([5, 858993460],"float16"), Tensor([5, 858993460],"float16"), 2, 1e-06, False, None, )
paddle.sum(Tensor([1431655765, 3],"bool"), axis=list[1,], keepdim=False, )
paddle.roll(Tensor([3, 1431655766],"float16"), shifts=1, )
paddle.roll(Tensor([1, 16, 24967, 14, 768],"float16"), shifts=tuple(4,0,3,), axis=tuple(1,2,3,), )
paddle.roll(Tensor([1, 16, 7, 49933, 768],"float16"), shifts=tuple(-4,0,0,), axis=tuple(1,2,3,), )
paddle.Tensor.lerp(x=Tensor([4294967297],"float16"), y=Tensor([4294967297],"float16"), weight=0.5, )
paddle.nn.functional.normalize(x=Tensor([4, 5, 30678338, 7],"float16"), p=4, axis=3, )
paddle.nn.functional.adaptive_max_pool2d(Tensor([29217465, 3, 7, 7],"float32"), output_size=list[2,5,], return_mask=False, name=None, )
paddle.nn.functional.pairwise_distance(Tensor([100, 22817014],"float32"), Tensor([100, 22817014],"float32"), 2.0, 1e-06, False, None, )
paddle.nn.functional.normalize(Tensor([4294967295],"float32"), axis=0, epsilon=1e-12, )
paddle.nn.functional.adaptive_max_pool2d(Tensor([29217465, 3, 7, 7],"float32"), output_size=list[None,3,], return_mask=False, name=None, )
paddle.linalg.cond(Tensor([2, 126761188, 3, 3],"float32"), "fro", )
paddle.linalg.cond(Tensor([63380594, 4, 3, 3],"float32"), 1, )
paddle.chunk(Tensor([13, 4, 7, 6268411],"float32"), 3, axis=-1, )
paddle.Tensor.lerp(x=Tensor([2281701379],"float32"), y=Tensor([2281701379],"float32"), weight=0.5, )
paddle.Tensor.bmm(Tensor([6339, 120000, 3],"float32"), Tensor([6339, 3, 2],"float32"), )
paddle.nn.functional.triplet_margin_with_distance_loss(Tensor([858993460, 5],"float16"), Tensor([858993460, 5],"float16"), Tensor([858993460, 5],"float16"), margin=0.3, swap=False, reduction="sum", name=None, )
paddle.cumsum(Tensor([114085069, 20],"int64"), axis=-1, )
paddle.diff(x=Tensor([4294967297],"float16"), )
paddle.linalg.vector_norm(x=Tensor([2, 3, 715827883],"float32"), p=math.inf, axis=0, keepdim=False, )
paddle.dist(x=Tensor([4, 1073741825],"float16"), y=Tensor([4, 1073741825],"float16"), p=1, )
paddle.diff(Tensor([2281701379],"float32"), )
paddle.Tensor.chunk(Tensor([950709, 300, 8],"float32"), 8, )
paddle.linalg.norm(Tensor([10, 11408507, 20],"float32"), p=math.inf, axis=-1, )
paddle.nn.functional.pairwise_distance(Tensor([42949673, 100],"float16"), Tensor([42949673, 100],"float16"), 2, 1e-06, True, None, )
paddle.linalg.norm(Tensor([3, 20, 71582789],"float32"), 2.0, -1, False, )
paddle.tensordot(Tensor([1, 1, 5, 5],"float16"), Tensor([5, 5, 34359739, 5],"float16"), list[list[0,1,3,2,],list[2,3,0,1,],], )
paddle.nn.functional.rrelu(Tensor([2, 3, 4, 95070891],"float32"), 0.3, 0.300000009, training=True, )
paddle.Tensor.lerp(x=Tensor([4, 5, 4, 53687092],"float16"), y=Tensor([4, 5, 4, 53687092],"float16"), weight=0.5, )
paddle.Tensor.cumsum(Tensor([570425345, 4],"int64"), axis=0, )
paddle.cumsum(Tensor([207427399, 11],"int64"), axis=-1, )
paddle.linalg.matrix_rank(Tensor([19014179, 4, 5, 6],"float32"), Tensor([3, 4],"float32"), False, )
paddle.linalg.det(Tensor([30422686, 3, 5, 5],"float32"), )
paddle.nn.functional.pairwise_distance(Tensor([2281701379],"float32"), Tensor([2281701379],"float32"), 2, 1e-06, True, None, )
paddle.nn.functional.rrelu(Tensor([2, 3, 76056713, 5],"float32"), 0.3, 0.300000009, training=True, )
paddle.tensordot(Tensor([171798692, 5, 5, 1],"float16"), Tensor([171798692, 5, 1, 5],"float16"), list[list[1,3,],list[1,0,],], )
paddle.nn.functional.normalize(x=Tensor([4, 25565282, 6, 7],"float16"), p=1, )
paddle.lerp(Tensor([2, 1, 1, 1],"float32"), Tensor([2, 3, 47535446, 8],"float32"), 0.3, )
paddle.nn.functional.normalize(x=Tensor([4, 25565282, 6, 7],"float16"), p=4, )
paddle.nn.functional.normalize(x=Tensor([4, 1073741825],"float16"), p=1.2, )
paddle.roll(Tensor([1, 57066, 7, 14, 768],"float16"), shifts=tuple(-4,0,-3,), axis=tuple(1,2,3,), )
paddle.sum(Tensor([1431655765, 3],"bool"), axis=list[-1,], keepdim=False, )
paddle.nn.functional.pairwise_distance(Tensor([42949673, 100],"float16"), Tensor([42949673, 100],"float16"), math.inf, 1e-06, True, None, )
paddle.Tensor.diff(x=Tensor([2281701379],"int32"), )
paddle.chunk(Tensor([4, 139265, 64, 64],"float32"), 3, axis=1, )
paddle.diff(Tensor([570425345, 4],"float32"), n=1, axis=0, prepend=Tensor([3, 4],"float32"), append=None, )
paddle.chunk(Tensor([1, 4, 20, 28521268],"float32"), 3, axis=-1, )
paddle.nn.functional.grid_sample(Tensor([73661, 1, 176, 176],"float32"), Tensor([73661, 1, 12544, 2],"float32"), align_corners=False, )
paddle.Tensor.diff(x=Tensor([4294967297],"float16"), prepend=Tensor([4],"float16"), append=Tensor([4],"float16"), )
paddle.nn.functional.normalize(Tensor([10, 228170138],"float32"), )
paddle.copysign(Tensor([12, 20, 9507090],"float32"), Tensor([12, 20, 9507090],"float32"), )
paddle.cumsum(Tensor([1, 2281701379],"float32"), axis=0, )
paddle.nn.functional.pairwise_distance(Tensor([2, 2147483649],"float16"), Tensor([2, 2147483649],"float16"), -math.inf, 1e-06, False, None, )
paddle.tensordot(Tensor([1, 1, 5, 5],"float16"), Tensor([5, 5, 34359739, 5],"float16"), list[list[1,0,3,],list[2,3,0,],], )
paddle.argmin(Tensor([3, 3, 3, 17674763, 3, 3],"float16"), axis=0, )
paddle.linalg.norm(Tensor([4, 1073741824],"float32"), p=-math.inf, axis=list[0,1,], )
paddle.logsumexp(Tensor([4294967295],"float32"), axis=0, )
paddle.fft.ifftshift(x=Tensor([4294967297],"float16"), )
paddle.nn.functional.grid_sample(Tensor([727584, 4, 28, 28],"float32"), Tensor([727584, 34, 34, 2],"float32"), mode="nearest", padding_mode="zeros", align_corners=False, )
paddle.roll(Tensor([1, 16, 24967, 14, 768],"float16"), shifts=tuple(-4,0,-3,), axis=tuple(1,2,3,), )
paddle.Tensor.logit(x=Tensor([2147483649, 2],"float16"), )
paddle.maximum(Tensor([4294967295],"float32"), Tensor([1],"float32"), )
paddle.roll(Tensor([1, 16, 7, 49933, 768],"float16"), shifts=tuple(-4,0,-3,), axis=tuple(1,2,3,), )
paddle.nn.functional.normalize(Tensor([4294967295],"float32"), axis=0, )
paddle.digamma(x=Tensor([3, 6, 6, 6628036, 6],"float16"), )
paddle.Tensor.chunk(Tensor([1, 1, 10164, 224489],"float32"), 2, axis=-1, )
paddle.cumsum(Tensor([114085069, 20],"int64"), axis=1, )
