2025-03-05 15:43:49.502252 test begin: paddle.dot(Tensor([0],"float32"), Tensor([0],"float32"), )

[accuracy error] paddle.dot(Tensor([0],"float32"), Tensor([0],"float32"), ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 1 / 1 (100%)
Max absolute difference: 0.35092852
Max relative difference: inf
 x: array(0.350929, dtype=float32)
 y: array(0., dtype=float32)
2025-03-05 15:43:55.032276 test begin: paddle.dot(x=Tensor([0],"float32"), y=Tensor([0],"float32"), )

[accuracy error] paddle.dot(x=Tensor([0],"float32"), y=Tensor([0],"float32"), ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 1 / 1 (100%)
Max absolute difference: 0.3481032
Max relative difference: inf
 x: array(0.348103, dtype=float32)
 y: array(0., dtype=float32)
2025-03-05 15:23:15.142905 test begin: paddle.linalg.cov(Tensor([0],"float32"), )

/usr/local/lib/python3.9/dist-packages/torch/utils/_device.py:106: UserWarning: cov(): degrees of freedom is <= 0. Correction should be strictly less than the number of observations. (Triggered internally at ../aten/src/ATen/native/Correlation.cpp:116.)
  return func(*args, **kwargs)
[accuracy error] paddle.linalg.cov(Tensor([0],"float32"), ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

x and y nan location mismatch:
 x: array(-inf, dtype=float32)
 y: array(nan, dtype=float32)
2025-03-05 15:23:15.153036 test begin: paddle.linalg.cov(Tensor([3, 0],"float32"), )

[accuracy error] paddle.linalg.cov(Tensor([3, 0],"float32"), ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

x and y nan location mismatch:
 x: array([[-inf,  nan,  nan],
       [ nan,  nan,  nan],
       [ nan,  nan,  nan]], dtype=float32)
 y: array([[nan, nan, nan],
       [nan, nan, nan],
       [nan, nan, nan]], dtype=float32)
2025-03-05 15:23:15.367935 test begin: paddle.linalg.cov(x=Tensor([4, 0],"float32"), )

[accuracy error] paddle.linalg.cov(x=Tensor([4, 0],"float32"), ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

x and y nan location mismatch:
 x: array([[-inf,  nan,  nan,  nan],
       [ nan,  nan,  nan,  nan],
       [ nan,  nan,  nan,  nan],
       [ nan,  nan,  nan,  nan]], dtype=float32)
 y: array([[nan, nan, nan, nan],
       [nan, nan, nan, nan],
       [nan, nan, nan, nan],
       [nan, nan, nan, nan]], dtype=float32)
2025-03-05 15:23:15.375176 test begin: paddle.linalg.cov(x=Tensor([4, 0],"float64"), )

[accuracy error] paddle.linalg.cov(x=Tensor([4, 0],"float64"), ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

x and y nan location mismatch:
 x: array([[-inf,  nan,  nan,  nan],
       [ nan,  nan,  nan,  nan],
       [ nan,  nan,  nan,  nan],
       [ nan,  nan,  nan,  nan]])
 y: array([[nan, nan, nan, nan],
       [nan, nan, nan, nan],
       [nan, nan, nan, nan],
       [nan, nan, nan, nan]])
2025-03-05 15:23:24.995801 test begin: paddle.linalg.lstsq(Tensor([3, 2, 8],"float32"), Tensor([3, 2, 0],"float32"), rcond=None, driver="gels", )

[accuracy error] paddle.linalg.lstsq(Tensor([3, 2, 8],"float32"), Tensor([3, 2, 0],"float32"), rcond=None, driver="gels", ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (3, 8, 2, 0), (3, 8, 0) mismatch)
 x: array([], shape=(3, 8, 2, 0), dtype=float32)
 y: array([], shape=(3, 8, 0), dtype=float32)
2025-03-05 15:40:26.440435 test begin: paddle.nn.functional.cosine_similarity(x1=Tensor([2, 0, 4],"float64"), x2=Tensor([2, 0, 4],"float64"), axis=1, eps=0, )

[accuracy error] paddle.nn.functional.cosine_similarity(x1=Tensor([2, 0, 4],"float64"), x2=Tensor([2, 0, 4],"float64"), axis=1, eps=0, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

x and y nan location mismatch:
 x: array([[nan, nan, nan, nan],
       [nan, nan, nan, nan]])
 y: array([[0., 0., 0., 0.],
       [0., 0., 0., 0.]])
2025-03-05 15:25:14.010172 test begin: paddle.Tensor.dot(Tensor([0],"float32"), Tensor([0],"float32"), )

[accuracy error] paddle.Tensor.dot(Tensor([0],"float32"), Tensor([0],"float32"), ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

Mismatched elements: 1 / 1 (100%)
Max absolute difference: 0.0418321
Max relative difference: inf
 x: array(0.041832, dtype=float32)
 y: array(0., dtype=float32)
2025-03-05 15:27:11.945992 test begin: paddle.Tensor.matmul(Tensor([0, 100, 1],"float64"), Tensor([0, 1, 40],"float64"), )

[accuracy error] paddle.Tensor.matmul(Tensor([0, 100, 1],"float64"), Tensor([0, 1, 40],"float64"), ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (0, 100, 1, 40), (0, 100, 40) mismatch)
 x: array([], shape=(0, 100, 1, 40), dtype=float64)
 y: array([], shape=(0, 100, 40), dtype=float64)
2025-03-05 15:27:11.948466 test begin: paddle.Tensor.matmul(Tensor([0, 100, 1],"float64"), Tensor([0, 1, 4],"float64"), )

[accuracy error] paddle.Tensor.matmul(Tensor([0, 100, 1],"float64"), Tensor([0, 1, 4],"float64"), ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (0, 100, 1, 4), (0, 100, 4) mismatch)
 x: array([], shape=(0, 100, 1, 4), dtype=float64)
 y: array([], shape=(0, 100, 4), dtype=float64)
2025-03-05 15:27:11.951177 test begin: paddle.Tensor.matmul(Tensor([0, 100, 1],"float64"), Tensor([1, 1, 40],"float64"), )

[accuracy error] paddle.Tensor.matmul(Tensor([0, 100, 1],"float64"), Tensor([1, 1, 40],"float64"), ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (0, 100, 1, 40), (0, 100, 40) mismatch)
 x: array([], shape=(0, 100, 1, 40), dtype=float64)
 y: array([], shape=(0, 100, 40), dtype=float64)
2025-03-05 15:27:11.954424 test begin: paddle.Tensor.matmul(Tensor([0, 100, 1],"float64"), Tensor([1, 1, 4],"float64"), )

[accuracy error] paddle.Tensor.matmul(Tensor([0, 100, 1],"float64"), Tensor([1, 1, 4],"float64"), ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (0, 100, 1, 4), (0, 100, 4) mismatch)
 x: array([], shape=(0, 100, 1, 4), dtype=float64)
 y: array([], shape=(0, 100, 4), dtype=float64)
2025-03-05 15:27:11.956424 test begin: paddle.Tensor.matmul(Tensor([0, 12, 197, 197],"float16"), Tensor([0, 12, 197, 64],"float16"), )

[accuracy error] paddle.Tensor.matmul(Tensor([0, 12, 197, 197],"float16"), Tensor([0, 12, 197, 64],"float16"), ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (0, 12, 197, 12, 197, 64), (0, 12, 197, 64) mismatch)
 x: array([], shape=(0, 12, 197, 12, 197, 64), dtype=float16)
 y: array([], shape=(0, 12, 197, 64), dtype=float16)
2025-03-05 15:27:12.318150 test begin: paddle.Tensor.matmul(Tensor([0, 12, 197, 197],"float32"), Tensor([0, 12, 197, 64],"float32"), )

[accuracy error] paddle.Tensor.matmul(Tensor([0, 12, 197, 197],"float32"), Tensor([0, 12, 197, 64],"float32"), ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (0, 12, 197, 12, 197, 64), (0, 12, 197, 64) mismatch)
 x: array([], shape=(0, 12, 197, 12, 197, 64), dtype=float32)
 y: array([], shape=(0, 12, 197, 64), dtype=float32)
2025-03-05 15:27:30.397691 test begin: paddle.Tensor.matmul(Tensor([1, 0, 1],"float64"), Tensor([1, 1, 40],"float64"), )

[accuracy error] paddle.Tensor.matmul(Tensor([1, 0, 1],"float64"), Tensor([1, 1, 40],"float64"), ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (1, 0, 1, 40), (1, 0, 40) mismatch)
 x: array([], shape=(1, 0, 1, 40), dtype=float64)
 y: array([], shape=(1, 0, 40), dtype=float64)
2025-03-05 15:27:30.413200 test begin: paddle.Tensor.matmul(Tensor([1, 0, 1],"float64"), Tensor([1, 1, 4],"float64"), )

[accuracy error] paddle.Tensor.matmul(Tensor([1, 0, 1],"float64"), Tensor([1, 1, 4],"float64"), ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (1, 0, 1, 4), (1, 0, 4) mismatch)
 x: array([], shape=(1, 0, 1, 4), dtype=float64)
 y: array([], shape=(1, 0, 4), dtype=float64)
2025-03-05 15:27:30.462573 test begin: paddle.Tensor.matmul(Tensor([1, 100, 1],"float64"), Tensor([0, 1, 40],"float64"), )

[accuracy error] paddle.Tensor.matmul(Tensor([1, 100, 1],"float64"), Tensor([0, 1, 40],"float64"), ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (1, 100, 1, 40), (0, 100, 40) mismatch)
 x: array([[[[0., 0., 0., ..., 0., 0., 0.]],

        [[0., 0., 0., ..., 0., 0., 0.]],...
 y: array([], shape=(0, 100, 40), dtype=float64)
2025-03-05 15:27:30.475768 test begin: paddle.Tensor.matmul(Tensor([1, 100, 1],"float64"), Tensor([0, 1, 4],"float64"), )

[accuracy error] paddle.Tensor.matmul(Tensor([1, 100, 1],"float64"), Tensor([0, 1, 4],"float64"), ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (1, 100, 1, 4), (0, 100, 4) mismatch)
 x: array([[[[0., 0., 0., 0.]],

        [[0., 0., 0., 0.]],...
 y: array([], shape=(0, 100, 4), dtype=float64)
2025-03-05 15:27:30.492518 test begin: paddle.Tensor.matmul(Tensor([1, 100, 1],"float64"), Tensor([1, 1, 0],"float64"), )

[accuracy error] paddle.Tensor.matmul(Tensor([1, 100, 1],"float64"), Tensor([1, 1, 0],"float64"), ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (1, 100, 1, 0), (1, 100, 0) mismatch)
 x: array([], shape=(1, 100, 1, 0), dtype=float64)
 y: array([], shape=(1, 100, 0), dtype=float64)
2025-03-05 15:27:30.544142 test begin: paddle.Tensor.matmul(Tensor([112, 0, 197, 197],"float16"), Tensor([112, 0, 197, 64],"float16"), )

[accuracy error] paddle.Tensor.matmul(Tensor([112, 0, 197, 197],"float16"), Tensor([112, 0, 197, 64],"float16"), ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (112, 0, 197, 0, 197, 64), (112, 0, 197, 64) mismatch)
 x: array([], shape=(112, 0, 197, 0, 197, 64), dtype=float16)
 y: array([], shape=(112, 0, 197, 64), dtype=float16)
2025-03-05 15:27:30.858318 test begin: paddle.Tensor.matmul(Tensor([112, 0, 197, 197],"float32"), Tensor([112, 0, 197, 64],"float32"), )

[accuracy error] paddle.Tensor.matmul(Tensor([112, 0, 197, 197],"float32"), Tensor([112, 0, 197, 64],"float32"), ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (112, 0, 197, 0, 197, 64), (112, 0, 197, 64) mismatch)
 x: array([], shape=(112, 0, 197, 0, 197, 64), dtype=float32)
 y: array([], shape=(112, 0, 197, 64), dtype=float32)
2025-03-05 15:27:31.150432 test begin: paddle.Tensor.matmul(Tensor([112, 12, 0, 197],"float16"), Tensor([112, 12, 197, 64],"float16"), )

[accuracy error] paddle.Tensor.matmul(Tensor([112, 12, 0, 197],"float16"), Tensor([112, 12, 197, 64],"float16"), ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (112, 12, 0, 12, 197, 64), (112, 12, 0, 64) mismatch)
 x: array([], shape=(112, 12, 0, 12, 197, 64), dtype=float16)
 y: array([], shape=(112, 12, 0, 64), dtype=float16)
2025-03-05 15:27:31.510658 test begin: paddle.Tensor.matmul(Tensor([112, 12, 0, 197],"float32"), Tensor([112, 12, 197, 64],"float32"), )

[accuracy error] paddle.Tensor.matmul(Tensor([112, 12, 0, 197],"float32"), Tensor([112, 12, 197, 64],"float32"), ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (112, 12, 0, 12, 197, 64), (112, 12, 0, 64) mismatch)
 x: array([], shape=(112, 12, 0, 12, 197, 64), dtype=float32)
 y: array([], shape=(112, 12, 0, 64), dtype=float32)
2025-03-05 15:27:35.764593 test begin: paddle.Tensor.matmul(Tensor([112, 12, 197, 197],"float16"), Tensor([112, 12, 197, 0],"float16"), )

[accuracy error] paddle.Tensor.matmul(Tensor([112, 12, 197, 197],"float16"), Tensor([112, 12, 197, 0],"float16"), ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (112, 12, 197, 12, 197, 0), (112, 12, 197, 0) mismatch)
 x: array([], shape=(112, 12, 197, 12, 197, 0), dtype=float16)
 y: array([], shape=(112, 12, 197, 0), dtype=float16)
2025-03-05 15:27:39.148025 test begin: paddle.Tensor.matmul(Tensor([112, 12, 197, 197],"float32"), Tensor([112, 12, 197, 0],"float32"), )

[accuracy error] paddle.Tensor.matmul(Tensor([112, 12, 197, 197],"float32"), Tensor([112, 12, 197, 0],"float32"), ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (112, 12, 197, 12, 197, 0), (112, 12, 197, 0) mismatch)
 x: array([], shape=(112, 12, 197, 12, 197, 0), dtype=float32)
 y: array([], shape=(112, 12, 197, 0), dtype=float32)

2025-03-10 10:16:20.688672 test begin: paddle.maximum(Tensor([0, 1, 1, 2],"float32"), Tensor([0, 1, 10285, 2],"float32"), )

[accuracy error] backward  paddle.maximum(Tensor([0, 1, 1, 2],"float32"), Tensor([0, 1, 10285, 2],"float32"), ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (0, 1, 2), (0, 1, 1, 2) mismatch)
 x: array([], shape=(0, 1, 2), dtype=float32)
 y: array([], shape=(0, 1, 1, 2), dtype=float32)
2025-03-10 10:16:20.706817 test begin: paddle.maximum(Tensor([0, 1, 1, 2],"float32"), Tensor([0, 1, 24276, 2],"float32"), )

[accuracy error] backward  paddle.maximum(Tensor([0, 1, 1, 2],"float32"), Tensor([0, 1, 24276, 2],"float32"), ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (0, 1, 2), (0, 1, 1, 2) mismatch)
 x: array([], shape=(0, 1, 2), dtype=float32)
 y: array([], shape=(0, 1, 1, 2), dtype=float32)
2025-03-10 10:16:20.728293 test begin: paddle.maximum(Tensor([0, 1, 1, 2],"float32"), Tensor([1, 1, 10285, 2],"float32"), )

[accuracy error] backward  paddle.maximum(Tensor([0, 1, 1, 2],"float32"), Tensor([1, 1, 10285, 2],"float32"), ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (0, 1, 2), (0, 1, 1, 2) mismatch)
 x: array([], shape=(0, 1, 2), dtype=float32)
 y: array([], shape=(0, 1, 1, 2), dtype=float32)
2025-03-10 10:16:20.762946 test begin: paddle.maximum(Tensor([0, 1, 1, 2],"float32"), Tensor([1, 1, 24276, 2],"float32"), )

[accuracy error] backward  paddle.maximum(Tensor([0, 1, 1, 2],"float32"), Tensor([1, 1, 24276, 2],"float32"), ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (0, 1, 2), (0, 1, 1, 2) mismatch)
 x: array([], shape=(0, 1, 2), dtype=float32)
 y: array([], shape=(0, 1, 1, 2), dtype=float32)
2025-03-10 10:16:20.803104 test begin: paddle.maximum(Tensor([0, 1, 2],"float32"), Tensor([0, 10285, 2],"float32"), )

[accuracy error] backward  paddle.maximum(Tensor([0, 1, 2],"float32"), Tensor([0, 10285, 2],"float32"), ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (0, 2), (0, 1, 2) mismatch)
 x: array([], shape=(0, 2), dtype=float32)
 y: array([], shape=(0, 1, 2), dtype=float32)
2025-03-10 10:16:20.833208 test begin: paddle.maximum(Tensor([0, 1, 2],"float32"), Tensor([0, 3598, 2],"float32"), )

[accuracy error] backward  paddle.maximum(Tensor([0, 1, 2],"float32"), Tensor([0, 3598, 2],"float32"), ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (0, 2), (0, 1, 2) mismatch)
 x: array([], shape=(0, 2), dtype=float32)
 y: array([], shape=(0, 1, 2), dtype=float32)
2025-03-10 10:16:20.866079 test begin: paddle.maximum(Tensor([0, 1, 2],"float32"), Tensor([1, 10285, 2],"float32"), )

[accuracy error] backward  paddle.maximum(Tensor([0, 1, 2],"float32"), Tensor([1, 10285, 2],"float32"), ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (0, 2), (0, 1, 2) mismatch)
 x: array([], shape=(0, 2), dtype=float32)
 y: array([], shape=(0, 1, 2), dtype=float32)
2025-03-10 10:16:20.895948 test begin: paddle.maximum(Tensor([0, 1, 2],"float32"), Tensor([1, 3598, 2],"float32"), )

[accuracy error] backward  paddle.maximum(Tensor([0, 1, 2],"float32"), Tensor([1, 3598, 2],"float32"), ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (0, 2), (0, 1, 2) mismatch)
 x: array([], shape=(0, 2), dtype=float32)
 y: array([], shape=(0, 1, 2), dtype=float32)
2025-03-10 10:16:20.937165 test begin: paddle.maximum(Tensor([0, 1, 2],"float32"), Tensor([1001, 2],"float32"), )

[accuracy error] backward  paddle.maximum(Tensor([0, 1, 2],"float32"), Tensor([1001, 2],"float32"), ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (0, 2), (0, 1, 2) mismatch)
 x: array([], shape=(0, 2), dtype=float32)
 y: array([], shape=(0, 1, 2), dtype=float32)
2025-03-10 10:16:20.983375 test begin: paddle.maximum(Tensor([0, 1, 2],"float32"), Tensor([1002, 2],"float32"), )

[accuracy error] backward  paddle.maximum(Tensor([0, 1, 2],"float32"), Tensor([1002, 2],"float32"), ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (0, 2), (0, 1, 2) mismatch)
 x: array([], shape=(0, 2), dtype=float32)
 y: array([], shape=(0, 1, 2), dtype=float32)
2025-03-10 10:16:21.060641 test begin: paddle.maximum(Tensor([0, 1],"float32"), Tensor([1, 1],"float32"), )

[accuracy error] backward  paddle.maximum(Tensor([0, 1],"float32"), Tensor([1, 1],"float32"), ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (1,), (1, 1) mismatch)
 x: array([0.], dtype=float32)
 y: array([[0.]], dtype=float32)
2025-03-10 10:16:21.379349 test begin: paddle.maximum(Tensor([1, 0, 1, 2],"float32"), Tensor([1, 0, 10285, 2],"float32"), )

[accuracy error] backward  paddle.maximum(Tensor([1, 0, 1, 2],"float32"), Tensor([1, 0, 10285, 2],"float32"), ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (1, 0, 2), (1, 0, 1, 2) mismatch)
 x: array([], shape=(1, 0, 2), dtype=float32)
 y: array([], shape=(1, 0, 1, 2), dtype=float32)
2025-03-10 10:16:21.410442 test begin: paddle.maximum(Tensor([1, 0, 1, 2],"float32"), Tensor([1, 0, 24276, 2],"float32"), )

[accuracy error] backward  paddle.maximum(Tensor([1, 0, 1, 2],"float32"), Tensor([1, 0, 24276, 2],"float32"), ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (1, 0, 2), (1, 0, 1, 2) mismatch)
 x: array([], shape=(1, 0, 2), dtype=float32)
 y: array([], shape=(1, 0, 1, 2), dtype=float32)
2025-03-10 10:16:21.434733 test begin: paddle.maximum(Tensor([1, 0, 1, 2],"float32"), Tensor([1, 1, 10285, 2],"float32"), )

[accuracy error] backward  paddle.maximum(Tensor([1, 0, 1, 2],"float32"), Tensor([1, 1, 10285, 2],"float32"), ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (1, 0, 2), (1, 0, 1, 2) mismatch)
 x: array([], shape=(1, 0, 2), dtype=float32)
 y: array([], shape=(1, 0, 1, 2), dtype=float32)
2025-03-10 10:16:21.465974 test begin: paddle.maximum(Tensor([1, 0, 1, 2],"float32"), Tensor([1, 1, 24276, 2],"float32"), )

[accuracy error] backward  paddle.maximum(Tensor([1, 0, 1, 2],"float32"), Tensor([1, 1, 24276, 2],"float32"), ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (1, 0, 2), (1, 0, 1, 2) mismatch)
 x: array([], shape=(1, 0, 2), dtype=float32)
 y: array([], shape=(1, 0, 1, 2), dtype=float32)
2025-03-10 10:16:21.572911 test begin: paddle.maximum(Tensor([1, 0],"float32"), Tensor([1, 1],"float32"), )

[accuracy error] backward  paddle.maximum(Tensor([1, 0],"float32"), Tensor([1, 1],"float32"), ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (1,), (1, 1) mismatch)
 x: array([0.], dtype=float32)
 y: array([[0.]], dtype=float32)
2025-03-10 10:16:21.723221 test begin: paddle.maximum(Tensor([1, 1, 0],"float32"), Tensor([1, 10285, 0],"float32"), )

[accuracy error] backward  paddle.maximum(Tensor([1, 1, 0],"float32"), Tensor([1, 10285, 0],"float32"), ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (1, 0), (1, 1, 0) mismatch)
 x: array([], shape=(1, 0), dtype=float32)
 y: array([], shape=(1, 1, 0), dtype=float32)
2025-03-10 10:16:21.761870 test begin: paddle.maximum(Tensor([1, 1, 0],"float32"), Tensor([1, 3598, 0],"float32"), )

[accuracy error] backward  paddle.maximum(Tensor([1, 1, 0],"float32"), Tensor([1, 3598, 0],"float32"), ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (1, 0), (1, 1, 0) mismatch)
 x: array([], shape=(1, 0), dtype=float32)
 y: array([], shape=(1, 1, 0), dtype=float32)
2025-03-10 10:16:21.899335 test begin: paddle.maximum(Tensor([1, 1, 1, 0],"float32"), Tensor([1, 1, 10285, 0],"float32"), )

[accuracy error] backward  paddle.maximum(Tensor([1, 1, 1, 0],"float32"), Tensor([1, 1, 10285, 0],"float32"), ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (1, 1, 0), (1, 1, 1, 0) mismatch)
 x: array([], shape=(1, 1, 0), dtype=float32)
 y: array([], shape=(1, 1, 1, 0), dtype=float32)
2025-03-10 10:16:21.931498 test begin: paddle.maximum(Tensor([1, 1, 1, 0],"float32"), Tensor([1, 1, 24276, 0],"float32"), )

[accuracy error] backward  paddle.maximum(Tensor([1, 1, 1, 0],"float32"), Tensor([1, 1, 24276, 0],"float32"), ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (1, 1, 0), (1, 1, 1, 0) mismatch)
 x: array([], shape=(1, 1, 0), dtype=float32)
 y: array([], shape=(1, 1, 1, 0), dtype=float32)
2025-03-10 10:16:21.966548 test begin: paddle.maximum(Tensor([1, 1, 1, 2],"float32"), Tensor([0, 1, 10285, 2],"float32"), )

[accuracy error] backward  paddle.maximum(Tensor([1, 1, 1, 2],"float32"), Tensor([0, 1, 10285, 2],"float32"), ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (1, 2), (1, 1, 1, 2) mismatch)
 x: array([[0., 0.]], dtype=float32)
 y: array([[[[0., 0.]]]], dtype=float32)
2025-03-10 10:16:21.986387 test begin: paddle.maximum(Tensor([1, 1, 1, 2],"float32"), Tensor([0, 1, 24276, 2],"float32"), )

[accuracy error] backward  paddle.maximum(Tensor([1, 1, 1, 2],"float32"), Tensor([0, 1, 24276, 2],"float32"), ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (1, 2), (1, 1, 1, 2) mismatch)
 x: array([[0., 0.]], dtype=float32)
 y: array([[[[0., 0.]]]], dtype=float32)
2025-03-10 10:16:22.010918 test begin: paddle.maximum(Tensor([1, 1, 1, 2],"float32"), Tensor([1, 0, 10285, 2],"float32"), )

[accuracy error] backward  paddle.maximum(Tensor([1, 1, 1, 2],"float32"), Tensor([1, 0, 10285, 2],"float32"), ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (1, 2), (1, 1, 1, 2) mismatch)
 x: array([[0., 0.]], dtype=float32)
 y: array([[[[0., 0.]]]], dtype=float32)
2025-03-10 10:16:22.052027 test begin: paddle.maximum(Tensor([1, 1, 1, 2],"float32"), Tensor([1, 0, 24276, 2],"float32"), )

[accuracy error] backward  paddle.maximum(Tensor([1, 1, 1, 2],"float32"), Tensor([1, 0, 24276, 2],"float32"), ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (1, 2), (1, 1, 1, 2) mismatch)
 x: array([[0., 0.]], dtype=float32)
 y: array([[[[0., 0.]]]], dtype=float32)
2025-03-10 10:16:22.097470 test begin: paddle.maximum(Tensor([1, 1, 1, 2],"float32"), Tensor([1, 1, 0, 2],"float32"), )

[accuracy error] backward  paddle.maximum(Tensor([1, 1, 1, 2],"float32"), Tensor([1, 1, 0, 2],"float32"), ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (1, 1, 2), (1, 1, 1, 2) mismatch)
 x: array([[[0., 0.]]], dtype=float32)
 y: array([[[[0., 0.]]]], dtype=float32)
2025-03-10 10:16:22.149389 test begin: paddle.maximum(Tensor([1, 1, 2],"float32"), Tensor([0, 10285, 2],"float32"), )

[accuracy error] backward  paddle.maximum(Tensor([1, 1, 2],"float32"), Tensor([0, 10285, 2],"float32"), ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2,), (1, 1, 2) mismatch)
 x: array([0., 0.], dtype=float32)
 y: array([[[0., 0.]]], dtype=float32)
2025-03-10 10:16:22.167004 test begin: paddle.maximum(Tensor([1, 1, 2],"float32"), Tensor([0, 2],"float32"), )

[accuracy error] backward  paddle.maximum(Tensor([1, 1, 2],"float32"), Tensor([0, 2],"float32"), ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (1, 2), (1, 1, 2) mismatch)
 x: array([[0., 0.]], dtype=float32)
 y: array([[[0., 0.]]], dtype=float32)
2025-03-10 10:16:22.190660 test begin: paddle.maximum(Tensor([1, 1, 2],"float32"), Tensor([0, 3598, 2],"float32"), )

[accuracy error] backward  paddle.maximum(Tensor([1, 1, 2],"float32"), Tensor([0, 3598, 2],"float32"), ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2,), (1, 1, 2) mismatch)
 x: array([0., 0.], dtype=float32)
 y: array([[[0., 0.]]], dtype=float32)
2025-03-10 10:16:22.213026 test begin: paddle.maximum(Tensor([1, 1, 2],"float32"), Tensor([1, 0, 2],"float32"), )

[accuracy error] backward  paddle.maximum(Tensor([1, 1, 2],"float32"), Tensor([1, 0, 2],"float32"), ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (1, 2), (1, 1, 2) mismatch)
 x: array([[0., 0.]], dtype=float32)
 y: array([[[0., 0.]]], dtype=float32)
2025-03-10 10:16:22.286233 test begin: paddle.maximum(Tensor([1, 1],"float32"), Tensor([0, 1],"float32"), )

[accuracy error] backward  paddle.maximum(Tensor([1, 1],"float32"), Tensor([0, 1],"float32"), ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (1,), (1, 1) mismatch)
 x: array([0.], dtype=float32)
 y: array([[0.]], dtype=float32)
2025-03-10 10:16:22.325126 test begin: paddle.maximum(Tensor([1, 1],"float32"), Tensor([1, 0],"float32"), )

[accuracy error] backward  paddle.maximum(Tensor([1, 1],"float32"), Tensor([1, 0],"float32"), ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (1,), (1, 1) mismatch)
 x: array([0.], dtype=float32)
 y: array([[0.]], dtype=float32)
2025-03-10 10:16:22.403211 test begin: paddle.maximum(Tensor([10, 0],"float32"), Tensor([10, 1],"float32"), )

[accuracy error] backward  paddle.maximum(Tensor([10, 0],"float32"), Tensor([10, 1],"float32"), ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (10,), (10, 1) mismatch)
 x: array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], dtype=float32)
 y: array([[0.],
       [0.],
       [0.],...
2025-03-10 10:16:22.475368 test begin: paddle.maximum(Tensor([10, 1],"float32"), Tensor([10, 0],"float32"), )

[accuracy error] backward  paddle.maximum(Tensor([10, 1],"float32"), Tensor([10, 0],"float32"), ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (10,), (10, 1) mismatch)
 x: array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], dtype=float32)
 y: array([[0.],
       [0.],
       [0.],...
2025-03-10 10:16:22.537097 test begin: paddle.maximum(Tensor([100, 1],"float32"), Tensor([0],"float32"), )

[accuracy error] backward  paddle.maximum(Tensor([100, 1],"float32"), Tensor([0],"float32"), ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (100,), (100, 1) mismatch)
 x: array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,...
 y: array([[0.],
       [0.],
       [0.],...
2025-03-10 10:16:22.842595 test begin: paddle.maximum(Tensor([12, 3, 10, 10, 0],"float32"), Tensor([12, 3, 10, 10, 1],"float32"), )

[accuracy error] backward  paddle.maximum(Tensor([12, 3, 10, 10, 0],"float32"), Tensor([12, 3, 10, 10, 1],"float32"), ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (12, 3, 10, 10), (12, 3, 10, 10, 1) mismatch)
 x: array([[[[0., 0., 0., ..., 0., 0., 0.],
         [0., 0., 0., ..., 0., 0., 0.],
         [0., 0., 0., ..., 0., 0., 0.],...
 y: array([[[[[0.],
          [0.],
          [0.],...
2025-03-10 10:16:22.968754 test begin: paddle.maximum(Tensor([12, 3, 10, 10, 1],"float32"), Tensor([12, 3, 10, 10, 0],"float32"), )

[accuracy error] backward  paddle.maximum(Tensor([12, 3, 10, 10, 1],"float32"), Tensor([12, 3, 10, 10, 0],"float32"), ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (12, 3, 10, 10), (12, 3, 10, 10, 1) mismatch)
 x: array([[[[0., 0., 0., ..., 0., 0., 0.],
         [0., 0., 0., ..., 0., 0., 0.],
         [0., 0., 0., ..., 0., 0., 0.],...
 y: array([[[[[0.],
          [0.],
          [0.],...
2025-03-10 10:16:23.069206 test begin: paddle.maximum(Tensor([12, 3, 20, 20, 0],"float32"), Tensor([12, 3, 20, 20, 1],"float32"), )

[accuracy error] backward  paddle.maximum(Tensor([12, 3, 20, 20, 0],"float32"), Tensor([12, 3, 20, 20, 1],"float32"), ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (12, 3, 20, 20), (12, 3, 20, 20, 1) mismatch)
 x: array([[[[0., 0., 0., ..., 0., 0., 0.],
         [0., 0., 0., ..., 0., 0., 0.],
         [0., 0., 0., ..., 0., 0., 0.],...
 y: array([[[[[0.],
          [0.],
          [0.],...
2025-03-10 10:16:23.151316 test begin: paddle.maximum(Tensor([12, 3, 20, 20, 1],"float32"), Tensor([12, 3, 20, 20, 0],"float32"), )

[accuracy error] backward  paddle.maximum(Tensor([12, 3, 20, 20, 1],"float32"), Tensor([12, 3, 20, 20, 0],"float32"), ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (12, 3, 20, 20), (12, 3, 20, 20, 1) mismatch)
 x: array([[[[0., 0., 0., ..., 0., 0., 0.],
         [0., 0., 0., ..., 0., 0., 0.],
         [0., 0., 0., ..., 0., 0., 0.],...
 y: array([[[[[0.],
          [0.],
          [0.],...
2025-03-10 10:16:23.364892 test begin: paddle.maximum(x=Tensor([0, 2, 1, 3],"float64"), y=Tensor([1, 2, 3],"float64"), )

[accuracy error] backward  paddle.maximum(x=Tensor([0, 2, 1, 3],"float64"), y=Tensor([1, 2, 3],"float64"), ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (0, 2, 3), (0, 2, 1, 3) mismatch)
 x: array([], shape=(0, 2, 3), dtype=float64)
 y: array([], shape=(0, 2, 1, 3), dtype=float64)
2025-03-10 10:16:23.475279 test begin: paddle.maximum(x=Tensor([1, 0, 1, 3],"float64"), y=Tensor([1, 2, 3],"float64"), )

[accuracy error] backward  paddle.maximum(x=Tensor([1, 0, 1, 3],"float64"), y=Tensor([1, 2, 3],"float64"), ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (1, 0, 3), (1, 0, 1, 3) mismatch)
 x: array([], shape=(1, 0, 3), dtype=float64)
 y: array([], shape=(1, 0, 1, 3), dtype=float64)
2025-03-10 10:16:23.490676 test begin: paddle.maximum(x=Tensor([1, 0],"float64"), y=Tensor([2, 0],"float64"), )

[accuracy error] backward  paddle.maximum(x=Tensor([1, 0],"float64"), y=Tensor([2, 0],"float64"), ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (0,), (1, 0) mismatch)
 x: array([], dtype=float64)
 y: array([], shape=(1, 0), dtype=float64)
2025-03-10 10:16:23.579914 test begin: paddle.maximum(x=Tensor([1, 2, 1, 3],"float64"), y=Tensor([1, 0, 3],"float64"), )

[accuracy error] backward  paddle.maximum(x=Tensor([1, 2, 1, 3],"float64"), y=Tensor([1, 0, 3],"float64"), ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (1, 2, 3), (1, 2, 1, 3) mismatch)
 x: array([[[0., 0., 0.],
        [0., 0., 0.]]])
 y: array([[[[0., 0., 0.]],

        [[0., 0., 0.]]]])
2025-03-10 10:16:23.622548 test begin: paddle.maximum(x=Tensor([1, 2],"float64"), y=Tensor([0, 2],"float64"), )

[accuracy error] backward  paddle.maximum(x=Tensor([1, 2],"float64"), y=Tensor([0, 2],"float64"), ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2,), (1, 2) mismatch)
 x: array([0., 0.])
 y: array([[0., 0.]])
2025-03-10 10:16:28.813070 test begin: paddle.minimum(Tensor([0, 1, 1, 2],"float32"), Tensor([0, 1, 10285, 2],"float32"), )

[accuracy error] backward  paddle.minimum(Tensor([0, 1, 1, 2],"float32"), Tensor([0, 1, 10285, 2],"float32"), ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (0, 1, 2), (0, 1, 1, 2) mismatch)
 x: array([], shape=(0, 1, 2), dtype=float32)
 y: array([], shape=(0, 1, 1, 2), dtype=float32)
2025-03-10 10:16:28.836499 test begin: paddle.minimum(Tensor([0, 1, 1, 2],"float32"), Tensor([0, 1, 24276, 2],"float32"), )

[accuracy error] backward  paddle.minimum(Tensor([0, 1, 1, 2],"float32"), Tensor([0, 1, 24276, 2],"float32"), ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (0, 1, 2), (0, 1, 1, 2) mismatch)
 x: array([], shape=(0, 1, 2), dtype=float32)
 y: array([], shape=(0, 1, 1, 2), dtype=float32)
2025-03-10 10:16:28.860274 test begin: paddle.minimum(Tensor([0, 1, 1, 2],"float32"), Tensor([1, 1, 10285, 2],"float32"), )

[accuracy error] backward  paddle.minimum(Tensor([0, 1, 1, 2],"float32"), Tensor([1, 1, 10285, 2],"float32"), ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (0, 1, 2), (0, 1, 1, 2) mismatch)
 x: array([], shape=(0, 1, 2), dtype=float32)
 y: array([], shape=(0, 1, 1, 2), dtype=float32)
2025-03-10 10:16:28.886541 test begin: paddle.minimum(Tensor([0, 1, 1, 2],"float32"), Tensor([1, 1, 24276, 2],"float32"), )

[accuracy error] backward  paddle.minimum(Tensor([0, 1, 1, 2],"float32"), Tensor([1, 1, 24276, 2],"float32"), ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (0, 1, 2), (0, 1, 1, 2) mismatch)
 x: array([], shape=(0, 1, 2), dtype=float32)
 y: array([], shape=(0, 1, 1, 2), dtype=float32)
2025-03-10 10:16:28.908878 test begin: paddle.minimum(Tensor([0, 1, 2],"float32"), Tensor([0, 10285, 2],"float32"), )

[accuracy error] backward  paddle.minimum(Tensor([0, 1, 2],"float32"), Tensor([0, 10285, 2],"float32"), ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (0, 2), (0, 1, 2) mismatch)
 x: array([], shape=(0, 2), dtype=float32)
 y: array([], shape=(0, 1, 2), dtype=float32)
2025-03-10 10:16:28.927082 test begin: paddle.minimum(Tensor([0, 1, 2],"float32"), Tensor([0, 3598, 2],"float32"), )

[accuracy error] backward  paddle.minimum(Tensor([0, 1, 2],"float32"), Tensor([0, 3598, 2],"float32"), ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (0, 2), (0, 1, 2) mismatch)
 x: array([], shape=(0, 2), dtype=float32)
 y: array([], shape=(0, 1, 2), dtype=float32)
2025-03-10 10:16:28.957085 test begin: paddle.minimum(Tensor([0, 1, 2],"float32"), Tensor([1, 10285, 2],"float32"), )

[accuracy error] backward  paddle.minimum(Tensor([0, 1, 2],"float32"), Tensor([1, 10285, 2],"float32"), ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (0, 2), (0, 1, 2) mismatch)
 x: array([], shape=(0, 2), dtype=float32)
 y: array([], shape=(0, 1, 2), dtype=float32)
2025-03-10 10:16:28.979106 test begin: paddle.minimum(Tensor([0, 1, 2],"float32"), Tensor([1, 3598, 2],"float32"), )

[accuracy error] backward  paddle.minimum(Tensor([0, 1, 2],"float32"), Tensor([1, 3598, 2],"float32"), ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (0, 2), (0, 1, 2) mismatch)
 x: array([], shape=(0, 2), dtype=float32)
 y: array([], shape=(0, 1, 2), dtype=float32)
2025-03-10 10:16:29.023253 test begin: paddle.minimum(Tensor([0, 1, 2],"float32"), Tensor([1001, 2],"float32"), )

[accuracy error] backward  paddle.minimum(Tensor([0, 1, 2],"float32"), Tensor([1001, 2],"float32"), ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (0, 2), (0, 1, 2) mismatch)
 x: array([], shape=(0, 2), dtype=float32)
 y: array([], shape=(0, 1, 2), dtype=float32)
2025-03-10 10:16:29.052564 test begin: paddle.minimum(Tensor([0, 1, 2],"float32"), Tensor([1002, 2],"float32"), )

[accuracy error] backward  paddle.minimum(Tensor([0, 1, 2],"float32"), Tensor([1002, 2],"float32"), ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (0, 2), (0, 1, 2) mismatch)
 x: array([], shape=(0, 2), dtype=float32)
 y: array([], shape=(0, 1, 2), dtype=float32)
2025-03-10 10:16:29.130554 test begin: paddle.minimum(Tensor([0, 1],"float32"), Tensor([1, 1],"float32"), )

[accuracy error] backward  paddle.minimum(Tensor([0, 1],"float32"), Tensor([1, 1],"float32"), ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (1,), (1, 1) mismatch)
 x: array([0.], dtype=float32)
 y: array([[0.]], dtype=float32)
2025-03-10 10:16:29.425448 test begin: paddle.minimum(Tensor([1, 0, 1, 2],"float32"), Tensor([1, 0, 10285, 2],"float32"), )

[accuracy error] backward  paddle.minimum(Tensor([1, 0, 1, 2],"float32"), Tensor([1, 0, 10285, 2],"float32"), ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (1, 0, 2), (1, 0, 1, 2) mismatch)
 x: array([], shape=(1, 0, 2), dtype=float32)
 y: array([], shape=(1, 0, 1, 2), dtype=float32)
2025-03-10 10:16:29.459411 test begin: paddle.minimum(Tensor([1, 0, 1, 2],"float32"), Tensor([1, 0, 24276, 2],"float32"), )

[accuracy error] backward  paddle.minimum(Tensor([1, 0, 1, 2],"float32"), Tensor([1, 0, 24276, 2],"float32"), ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (1, 0, 2), (1, 0, 1, 2) mismatch)
 x: array([], shape=(1, 0, 2), dtype=float32)
 y: array([], shape=(1, 0, 1, 2), dtype=float32)
2025-03-10 10:16:29.486183 test begin: paddle.minimum(Tensor([1, 0, 1, 2],"float32"), Tensor([1, 1, 10285, 2],"float32"), )

[accuracy error] backward  paddle.minimum(Tensor([1, 0, 1, 2],"float32"), Tensor([1, 1, 10285, 2],"float32"), ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (1, 0, 2), (1, 0, 1, 2) mismatch)
 x: array([], shape=(1, 0, 2), dtype=float32)
 y: array([], shape=(1, 0, 1, 2), dtype=float32)
2025-03-10 10:16:29.507129 test begin: paddle.minimum(Tensor([1, 0, 1, 2],"float32"), Tensor([1, 1, 24276, 2],"float32"), )

[accuracy error] backward  paddle.minimum(Tensor([1, 0, 1, 2],"float32"), Tensor([1, 1, 24276, 2],"float32"), ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (1, 0, 2), (1, 0, 1, 2) mismatch)
 x: array([], shape=(1, 0, 2), dtype=float32)
 y: array([], shape=(1, 0, 1, 2), dtype=float32)
2025-03-10 10:16:29.672536 test begin: paddle.minimum(Tensor([1, 0],"float32"), Tensor([1, 1],"float32"), )

[accuracy error] backward  paddle.minimum(Tensor([1, 0],"float32"), Tensor([1, 1],"float32"), ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (1,), (1, 1) mismatch)
 x: array([0.], dtype=float32)
 y: array([[0.]], dtype=float32)
2025-03-10 10:16:29.788774 test begin: paddle.minimum(Tensor([1, 1, 0],"float32"), Tensor([1, 10285, 0],"float32"), )

[accuracy error] backward  paddle.minimum(Tensor([1, 1, 0],"float32"), Tensor([1, 10285, 0],"float32"), ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (1, 0), (1, 1, 0) mismatch)
 x: array([], shape=(1, 0), dtype=float32)
 y: array([], shape=(1, 1, 0), dtype=float32)
2025-03-10 10:16:29.833310 test begin: paddle.minimum(Tensor([1, 1, 0],"float32"), Tensor([1, 3598, 0],"float32"), )

[accuracy error] backward  paddle.minimum(Tensor([1, 1, 0],"float32"), Tensor([1, 3598, 0],"float32"), ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (1, 0), (1, 1, 0) mismatch)
 x: array([], shape=(1, 0), dtype=float32)
 y: array([], shape=(1, 1, 0), dtype=float32)
2025-03-10 10:16:29.892028 test begin: paddle.minimum(Tensor([1, 1, 1, 0],"float32"), Tensor([1, 1, 10285, 0],"float32"), )

[accuracy error] backward  paddle.minimum(Tensor([1, 1, 1, 0],"float32"), Tensor([1, 1, 10285, 0],"float32"), ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (1, 1, 0), (1, 1, 1, 0) mismatch)
 x: array([], shape=(1, 1, 0), dtype=float32)
 y: array([], shape=(1, 1, 1, 0), dtype=float32)
2025-03-10 10:16:29.968275 test begin: paddle.minimum(Tensor([1, 1, 1, 0],"float32"), Tensor([1, 1, 24276, 0],"float32"), )

[accuracy error] backward  paddle.minimum(Tensor([1, 1, 1, 0],"float32"), Tensor([1, 1, 24276, 0],"float32"), ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (1, 1, 0), (1, 1, 1, 0) mismatch)
 x: array([], shape=(1, 1, 0), dtype=float32)
 y: array([], shape=(1, 1, 1, 0), dtype=float32)
2025-03-10 10:16:30.002587 test begin: paddle.minimum(Tensor([1, 1, 1, 2],"float32"), Tensor([0, 1, 10285, 2],"float32"), )

[accuracy error] backward  paddle.minimum(Tensor([1, 1, 1, 2],"float32"), Tensor([0, 1, 10285, 2],"float32"), ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (1, 2), (1, 1, 1, 2) mismatch)
 x: array([[0., 0.]], dtype=float32)
 y: array([[[[0., 0.]]]], dtype=float32)
2025-03-10 10:16:30.039444 test begin: paddle.minimum(Tensor([1, 1, 1, 2],"float32"), Tensor([0, 1, 24276, 2],"float32"), )

[accuracy error] backward  paddle.minimum(Tensor([1, 1, 1, 2],"float32"), Tensor([0, 1, 24276, 2],"float32"), ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (1, 2), (1, 1, 1, 2) mismatch)
 x: array([[0., 0.]], dtype=float32)
 y: array([[[[0., 0.]]]], dtype=float32)
2025-03-10 10:16:30.071868 test begin: paddle.minimum(Tensor([1, 1, 1, 2],"float32"), Tensor([1, 0, 10285, 2],"float32"), )

[accuracy error] backward  paddle.minimum(Tensor([1, 1, 1, 2],"float32"), Tensor([1, 0, 10285, 2],"float32"), ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (1, 2), (1, 1, 1, 2) mismatch)
 x: array([[0., 0.]], dtype=float32)
 y: array([[[[0., 0.]]]], dtype=float32)
2025-03-10 10:16:30.093370 test begin: paddle.minimum(Tensor([1, 1, 1, 2],"float32"), Tensor([1, 0, 24276, 2],"float32"), )

[accuracy error] backward  paddle.minimum(Tensor([1, 1, 1, 2],"float32"), Tensor([1, 0, 24276, 2],"float32"), ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (1, 2), (1, 1, 1, 2) mismatch)
 x: array([[0., 0.]], dtype=float32)
 y: array([[[[0., 0.]]]], dtype=float32)
2025-03-10 10:16:30.121516 test begin: paddle.minimum(Tensor([1, 1, 1, 2],"float32"), Tensor([1, 1, 0, 2],"float32"), )

[accuracy error] backward  paddle.minimum(Tensor([1, 1, 1, 2],"float32"), Tensor([1, 1, 0, 2],"float32"), ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (1, 1, 2), (1, 1, 1, 2) mismatch)
 x: array([[[0., 0.]]], dtype=float32)
 y: array([[[[0., 0.]]]], dtype=float32)
2025-03-10 10:16:30.185701 test begin: paddle.minimum(Tensor([1, 1, 2],"float32"), Tensor([0, 10285, 2],"float32"), )

[accuracy error] backward  paddle.minimum(Tensor([1, 1, 2],"float32"), Tensor([0, 10285, 2],"float32"), ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2,), (1, 1, 2) mismatch)
 x: array([0., 0.], dtype=float32)
 y: array([[[0., 0.]]], dtype=float32)
2025-03-10 10:16:30.215142 test begin: paddle.minimum(Tensor([1, 1, 2],"float32"), Tensor([0, 2],"float32"), )

[accuracy error] backward  paddle.minimum(Tensor([1, 1, 2],"float32"), Tensor([0, 2],"float32"), ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (1, 2), (1, 1, 2) mismatch)
 x: array([[0., 0.]], dtype=float32)
 y: array([[[0., 0.]]], dtype=float32)
2025-03-10 10:16:30.242319 test begin: paddle.minimum(Tensor([1, 1, 2],"float32"), Tensor([0, 3598, 2],"float32"), )

[accuracy error] backward  paddle.minimum(Tensor([1, 1, 2],"float32"), Tensor([0, 3598, 2],"float32"), ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2,), (1, 1, 2) mismatch)
 x: array([0., 0.], dtype=float32)
 y: array([[[0., 0.]]], dtype=float32)
2025-03-10 10:16:30.275985 test begin: paddle.minimum(Tensor([1, 1, 2],"float32"), Tensor([1, 0, 2],"float32"), )

[accuracy error] backward  paddle.minimum(Tensor([1, 1, 2],"float32"), Tensor([1, 0, 2],"float32"), ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (1, 2), (1, 1, 2) mismatch)
 x: array([[0., 0.]], dtype=float32)
 y: array([[[0., 0.]]], dtype=float32)
2025-03-10 10:16:30.359351 test begin: paddle.minimum(Tensor([1, 1],"float32"), Tensor([0, 1],"float32"), )

[accuracy error] backward  paddle.minimum(Tensor([1, 1],"float32"), Tensor([0, 1],"float32"), ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (1,), (1, 1) mismatch)
 x: array([0.], dtype=float32)
 y: array([[0.]], dtype=float32)
2025-03-10 10:16:30.412259 test begin: paddle.minimum(Tensor([1, 1],"float32"), Tensor([1, 0],"float32"), )

[accuracy error] backward  paddle.minimum(Tensor([1, 1],"float32"), Tensor([1, 0],"float32"), ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (1,), (1, 1) mismatch)
 x: array([0.], dtype=float32)
 y: array([[0.]], dtype=float32)
2025-03-10 10:16:30.830630 test begin: paddle.minimum(Tensor([12, 3, 10, 10, 0],"float32"), Tensor([12, 3, 10, 10, 1],"float32"), )

[accuracy error] backward  paddle.minimum(Tensor([12, 3, 10, 10, 0],"float32"), Tensor([12, 3, 10, 10, 1],"float32"), ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (12, 3, 10, 10), (12, 3, 10, 10, 1) mismatch)
 x: array([[[[0., 0., 0., ..., 0., 0., 0.],
         [0., 0., 0., ..., 0., 0., 0.],
         [0., 0., 0., ..., 0., 0., 0.],...
 y: array([[[[[0.],
          [0.],
          [0.],...
2025-03-10 10:16:30.925946 test begin: paddle.minimum(Tensor([12, 3, 10, 10, 1],"float32"), Tensor([12, 3, 10, 10, 0],"float32"), )

[accuracy error] backward  paddle.minimum(Tensor([12, 3, 10, 10, 1],"float32"), Tensor([12, 3, 10, 10, 0],"float32"), ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (12, 3, 10, 10), (12, 3, 10, 10, 1) mismatch)
 x: array([[[[0., 0., 0., ..., 0., 0., 0.],
         [0., 0., 0., ..., 0., 0., 0.],
         [0., 0., 0., ..., 0., 0., 0.],...
 y: array([[[[[0.],
          [0.],
          [0.],...
2025-03-10 10:16:31.035263 test begin: paddle.minimum(Tensor([12, 3, 20, 20, 0],"float32"), Tensor([12, 3, 20, 20, 1],"float32"), )

[accuracy error] backward  paddle.minimum(Tensor([12, 3, 20, 20, 0],"float32"), Tensor([12, 3, 20, 20, 1],"float32"), ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (12, 3, 20, 20), (12, 3, 20, 20, 1) mismatch)
 x: array([[[[0., 0., 0., ..., 0., 0., 0.],
         [0., 0., 0., ..., 0., 0., 0.],
         [0., 0., 0., ..., 0., 0., 0.],...
 y: array([[[[[0.],
          [0.],
          [0.],...
2025-03-10 10:16:31.140583 test begin: paddle.minimum(Tensor([12, 3, 20, 20, 1],"float32"), Tensor([12, 3, 20, 20, 0],"float32"), )

[accuracy error] backward  paddle.minimum(Tensor([12, 3, 20, 20, 1],"float32"), Tensor([12, 3, 20, 20, 0],"float32"), ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (12, 3, 20, 20), (12, 3, 20, 20, 1) mismatch)
 x: array([[[[0., 0., 0., ..., 0., 0., 0.],
         [0., 0., 0., ..., 0., 0., 0.],
         [0., 0., 0., ..., 0., 0., 0.],...
 y: array([[[[[0.],
          [0.],
          [0.],...
2025-03-10 10:16:31.378219 test begin: paddle.minimum(x=Tensor([0, 2, 1, 3],"float64"), y=Tensor([1, 2, 3],"float64"), )

[accuracy error] backward  paddle.minimum(x=Tensor([0, 2, 1, 3],"float64"), y=Tensor([1, 2, 3],"float64"), ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (0, 2, 3), (0, 2, 1, 3) mismatch)
 x: array([], shape=(0, 2, 3), dtype=float64)
 y: array([], shape=(0, 2, 1, 3), dtype=float64)
2025-03-10 10:16:31.504763 test begin: paddle.minimum(x=Tensor([1, 0, 1, 3],"float64"), y=Tensor([1, 2, 3],"float64"), )

[accuracy error] backward  paddle.minimum(x=Tensor([1, 0, 1, 3],"float64"), y=Tensor([1, 2, 3],"float64"), ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (1, 0, 3), (1, 0, 1, 3) mismatch)
 x: array([], shape=(1, 0, 3), dtype=float64)
 y: array([], shape=(1, 0, 1, 3), dtype=float64)
2025-03-10 10:16:31.531468 test begin: paddle.minimum(x=Tensor([1, 0],"float64"), y=Tensor([2, 0],"float64"), )

[accuracy error] backward  paddle.minimum(x=Tensor([1, 0],"float64"), y=Tensor([2, 0],"float64"), ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (0,), (1, 0) mismatch)
 x: array([], dtype=float64)
 y: array([], shape=(1, 0), dtype=float64)
2025-03-10 10:16:31.597053 test begin: paddle.minimum(x=Tensor([1, 2, 1, 3],"float64"), y=Tensor([1, 0, 3],"float64"), )

[accuracy error] backward  paddle.minimum(x=Tensor([1, 2, 1, 3],"float64"), y=Tensor([1, 0, 3],"float64"), ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (1, 2, 3), (1, 2, 1, 3) mismatch)
 x: array([[[0., 0., 0.],
        [0., 0., 0.]]])
 y: array([[[[0., 0., 0.]],

        [[0., 0., 0.]]]])
2025-03-10 10:16:31.641506 test begin: paddle.minimum(x=Tensor([1, 2],"float64"), y=Tensor([0, 2],"float64"), )

[accuracy error] backward  paddle.minimum(x=Tensor([1, 2],"float64"), y=Tensor([0, 2],"float64"), ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (2,), (1, 2) mismatch)
 x: array([0., 0.])
 y: array([[0., 0.]])
2025-03-10 10:22:38.325841 test begin: paddle.nn.functional.cosine_similarity(Tensor([0, 5, 2],"float64"), Tensor([1, 5, 2],"float64"), axis=0, eps=1e-08, )

[accuracy error] backward  paddle.nn.functional.cosine_similarity(Tensor([0, 5, 2],"float64"), Tensor([1, 5, 2],"float64"), axis=0, eps=1e-08, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (5, 2), (1, 5, 2) mismatch)
 x: array([[0., 0.],
       [0., 0.],
       [0., 0.],...
 y: array([[[0., 0.],
        [0., 0.],
        [0., 0.],...
2025-03-10 10:22:39.599009 test begin: paddle.nn.functional.cosine_similarity(Tensor([1, 5, 2],"float64"), Tensor([0, 5, 2],"float64"), axis=0, eps=1e-08, )

[accuracy error] backward  paddle.nn.functional.cosine_similarity(Tensor([1, 5, 2],"float64"), Tensor([0, 5, 2],"float64"), axis=0, eps=1e-08, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (5, 2), (1, 5, 2) mismatch)
 x: array([[0., 0.],
       [0., 0.],
       [0., 0.],...
 y: array([[[0., 0.],
        [0., 0.],
        [0., 0.],...
2025-03-10 10:22:40.164666 test begin: paddle.nn.functional.cosine_similarity(Tensor([10, 12, 0],"float32"), Tensor([10, 1, 0],"float32"), axis=2, eps=1e-06, )

[accuracy error] backward  paddle.nn.functional.cosine_similarity(Tensor([10, 12, 0],"float32"), Tensor([10, 1, 0],"float32"), axis=2, eps=1e-06, ) 
 
Not equal to tolerance rtol=0.01, atol=0.01

(shapes (10, 0), (10, 1, 0) mismatch)
 x: array([], shape=(10, 0), dtype=float32)
 y: array([], shape=(10, 1, 0), dtype=float32)
