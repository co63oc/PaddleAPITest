paddle.addmm(input=Tensor([1, 1],"float64"), x=Tensor([0, 4],"float64"), y=Tensor([4, 5],"float64"), beta=-3.3, alpha=3.3, )
paddle.addmm(input=Tensor([1, 1],"float64"), x=Tensor([5, 4],"float64"), y=Tensor([4, 0],"float64"), beta=-3.3, alpha=3.3, )
paddle.addmm(input=Tensor([5, 1],"float64"), x=Tensor([5, 4],"float64"), y=Tensor([4, 0],"float64"), beta=-3.3, alpha=3.3, )
paddle.amax(Tensor([0, 10, 10],"float32"), axis=list[-1,-2,], keepdim=False, )
paddle.amax(Tensor([0, 2, 4, 5],"float32"), axis=-1, keepdim=True, )
paddle.amax(Tensor([0, 2, 5, 4],"float32"), axis=2, keepdim=True, )
paddle.amax(Tensor([0, 2, 5, 4],"float32"), axis=tuple(1,2,), keepdim=True, )
paddle.amax(Tensor([0, 4],"float64"), 1, True, )
paddle.amax(Tensor([10, 0, 10],"float32"), axis=list[-1,0,], keepdim=False, )
paddle.amax(Tensor([10, 10, 0],"float32"), axis=list[0,1,], keepdim=False, )
paddle.amax(Tensor([2, 0],"float64"), 0, False, )
paddle.amax(Tensor([2, 2, 0],"int32"), tuple(0,1,), False, )
paddle.amax(Tensor([3, 0, 4, 5],"float32"), axis=-1, keepdim=True, )
paddle.amax(Tensor([3, 0, 5, 4],"float32"), axis=2, keepdim=True, )
paddle.amax(Tensor([3, 2, 0, 5],"float32"), axis=-1, keepdim=True, )
paddle.amax(Tensor([3, 2, 5, 0],"float32"), axis=2, keepdim=True, )
paddle.amax(Tensor([3, 2, 5, 0],"float32"), axis=tuple(1,2,), keepdim=True, )
paddle.amin(Tensor([0, 10, 10],"float32"), axis=list[-1,-2,], keepdim=False, )
paddle.amin(Tensor([0, 2, 4, 5],"float32"), axis=-1, keepdim=True, )
paddle.amin(Tensor([0, 2, 5, 4],"float32"), axis=2, keepdim=True, )
paddle.amin(Tensor([0, 2, 5, 4],"float32"), axis=tuple(1,2,), keepdim=True, )
paddle.amin(Tensor([0, 4],"float64"), 1, True, )
paddle.amin(Tensor([10, 0, 10],"float32"), axis=list[-1,0,], keepdim=False, )
paddle.amin(Tensor([10, 10, 0],"float32"), axis=list[0,1,], keepdim=False, )
paddle.amin(Tensor([2, 0],"float64"), 0, False, )
paddle.amin(Tensor([2, 2, 0],"int32"), tuple(0,1,), False, )
paddle.amin(Tensor([3, 0, 4, 5],"float32"), axis=-1, keepdim=True, )
paddle.amin(Tensor([3, 0, 5, 4],"float32"), axis=2, keepdim=True, )
paddle.amin(Tensor([3, 2, 0, 5],"float32"), axis=-1, keepdim=True, )
paddle.amin(Tensor([3, 2, 5, 0],"float32"), axis=2, keepdim=True, )
paddle.amin(Tensor([3, 2, 5, 0],"float32"), axis=tuple(1,2,), keepdim=True, )
paddle.argmax(Tensor([0, 10],"float32"), axis=1, )
paddle.argmax(Tensor([0, 10],"float32"), axis=-1, keepdim=True, )
paddle.argmax(Tensor([0, 100],"float32"), axis=-1, )
paddle.argmax(Tensor([0, 1000],"float32"), axis=1, )
paddle.argmax(Tensor([0, 1024, 50304],"float16"), -1, )
paddle.argmax(Tensor([0, 2, 4, 16, 2],"float32"), axis=-1, )
paddle.argmax(Tensor([0, 256],"float32"), axis=-1, )
paddle.argmax(Tensor([0, 3, 4],"float64"), axis=-1, keepdim=True, )
paddle.argmax(Tensor([0, 32, 64],"float16"), axis=1, )
paddle.argmax(Tensor([0, 32, 64],"float32"), axis=1, )
paddle.argmax(Tensor([0, 7, 99],"float32"), axis=-1, )
paddle.argmax(Tensor([0, 8, 14, 12],"float32"), axis=1, keepdim=True, )
paddle.argmax(Tensor([1, 8, 0, 12],"float32"), axis=1, keepdim=True, )
paddle.argmax(Tensor([1, 8, 14, 0],"float32"), axis=1, keepdim=True, )
paddle.argmax(Tensor([12988, 32, 0],"float16"), axis=1, )
paddle.argmax(Tensor([12988, 32, 0],"float32"), axis=1, )
paddle.argmax(Tensor([13, 0, 4, 16, 2],"float32"), axis=-1, )
paddle.argmax(Tensor([13, 0, 99],"float32"), axis=-1, )
paddle.argmax(Tensor([13, 2, 0, 16, 2],"float32"), axis=-1, )
paddle.argmax(Tensor([13, 2, 4, 0, 2],"float32"), axis=-1, )
paddle.argmax(Tensor([16, 0, 50304],"float16"), -1, )
paddle.argmax(Tensor([2, 0, 4],"float64"), axis=-1, keepdim=True, )
paddle.argmax(Tensor([3, 0, 3, 3, 3, 3],"float64"), axis=0, )
paddle.argmax(Tensor([3, 3, 0, 3, 3, 3],"float64"), axis=0, )
paddle.argmax(Tensor([3, 3, 3, 0, 3, 3],"float64"), axis=0, )
paddle.argmax(Tensor([3, 3, 3, 3, 0, 3],"float64"), axis=0, )
paddle.argmax(Tensor([3, 3, 3, 3, 3, 0],"float64"), axis=0, )
paddle.argmax(Tensor([4, 0, 4, 4, 4],"float64"), axis=0, )
paddle.argmax(Tensor([4, 4, 0, 4, 4],"float64"), axis=0, )
paddle.argmax(Tensor([4, 4, 4, 0, 4],"float64"), axis=0, )
paddle.argmax(Tensor([4, 4, 4, 4, 0],"float64"), axis=0, )
paddle.argmax(Tensor([5, 0, 5, 5],"float64"), axis=0, )
paddle.argmax(Tensor([5, 5, 0, 5],"float64"), axis=0, )
paddle.argmax(Tensor([5, 5, 5, 0],"float64"), axis=0, )
paddle.argmax(x=Tensor([0, 3, 4],"float64"), axis=1, keepdim=False, )
paddle.argmax(x=Tensor([0, 3],"int64"), axis=-1, )
paddle.argmax(x=Tensor([3, 0],"int64"), axis=-2, )
paddle.argmax(x=Tensor([3, 3, 0],"float64"), axis=1, keepdim=False, )
paddle.argmin(Tensor([0, 10],"float32"), axis=1, )
paddle.argmin(Tensor([0, 10],"float32"), axis=-1, )
paddle.argmin(Tensor([0, 10],"float32"), axis=-1, keepdim=True, )
paddle.argmin(Tensor([3, 0, 3, 3, 3, 3],"float64"), axis=0, )
paddle.argmin(Tensor([3, 3, 0, 3, 3, 3],"float64"), axis=0, )
paddle.argmin(Tensor([3, 3, 3, 0, 3, 3],"float64"), axis=0, )
paddle.argmin(Tensor([3, 3, 3, 3, 0, 3],"float64"), axis=0, )
paddle.argmin(Tensor([3, 3, 3, 3, 3, 0],"float64"), axis=0, )
paddle.argmin(Tensor([4, 0, 4, 4, 4],"float64"), axis=0, )
paddle.argmin(Tensor([4, 4, 0, 4, 4],"float64"), axis=0, )
paddle.argmin(Tensor([4, 4, 4, 0, 4],"float64"), axis=0, )
paddle.argmin(Tensor([4, 4, 4, 4, 0],"float64"), axis=0, )
paddle.argmin(Tensor([5, 0, 5, 5],"float64"), axis=0, )
paddle.argmin(Tensor([5, 5, 0, 5],"float64"), axis=0, )
paddle.argmin(Tensor([5, 5, 5, 0],"float64"), axis=0, )
paddle.argmin(x=Tensor([0, 3, 4],"float64"), axis=1, keepdim=False, )
paddle.argmin(x=Tensor([0, 3],"int64"), axis=-1, )
paddle.argmin(x=Tensor([3, 0],"int64"), axis=-2, )
paddle.argmin(x=Tensor([3, 3, 0],"float64"), axis=1, keepdim=False, )
paddle.as_complex(Tensor([0, 10, 10, 2],"float32"), )
paddle.as_complex(Tensor([0, 10, 2],"float64"), )
paddle.as_complex(Tensor([0, 4, 2],"float32"), )
paddle.as_complex(Tensor([10, 0, 10, 2],"float32"), )
paddle.as_complex(Tensor([10, 0, 2],"float64"), )
paddle.as_complex(Tensor([10, 10, 0, 2],"float32"), )
paddle.as_complex(Tensor([2, 0, 2],"float32"), )
paddle.as_complex(x=Tensor([0, 2, 3, 2],"float64"), )
paddle.as_complex(x=Tensor([0, 2],"float32"), )
paddle.as_complex(x=Tensor([0, 2],"float64"), )
paddle.as_complex(x=Tensor([0, 3, 2],"float64"), )
paddle.as_complex(x=Tensor([9, 0, 2],"float64"), )
paddle.as_complex(x=Tensor([9, 0, 3, 2],"float64"), )
paddle.as_complex(x=Tensor([9, 2, 0, 2],"float64"), )
paddle.as_real(Tensor([0, 10, 10, 20],"complex128"), )
paddle.as_real(Tensor([0, 10],"complex128"), )
paddle.as_real(Tensor([0, 4],"complex128"), )
paddle.as_real(Tensor([10, 0, 10, 20],"complex128"), )
paddle.as_real(Tensor([10, 0],"complex128"), )
paddle.as_real(Tensor([10, 10, 0, 20],"complex128"), )
paddle.as_real(Tensor([10, 10, 10, 0],"complex128"), )
paddle.as_real(Tensor([2, 0],"complex128"), )
paddle.as_real(x=Tensor([0, 2, 3],"complex128"), )
paddle.as_real(x=Tensor([0, 2, 3],"complex64"), )
paddle.as_real(x=Tensor([0, 3],"complex128"), )
paddle.as_real(x=Tensor([0, 3],"complex64"), )
paddle.as_real(x=Tensor([0],"complex128"), )
paddle.as_real(x=Tensor([0],"complex64"), )
paddle.as_real(x=Tensor([9, 0, 3],"complex128"), )
paddle.as_real(x=Tensor([9, 0, 3],"complex64"), )
paddle.as_real(x=Tensor([9, 0],"complex128"), )
paddle.as_real(x=Tensor([9, 0],"complex64"), )
paddle.as_real(x=Tensor([9, 2, 0],"complex128"), )
paddle.as_real(x=Tensor([9, 2, 0],"complex64"), )
paddle.bmm(Tensor([0, 300, 128],"float32"), Tensor([0, 128, 30976],"float32"), )
paddle.bmm(Tensor([0, 300, 128],"float32"), Tensor([0, 128, 33856],"float32"), )
paddle.bmm(Tensor([1, 300, 128],"float32"), Tensor([1, 128, 0],"float32"), )
paddle.bmm(x=Tensor([0, 2, 3],"float32"), y=Tensor([0, 3, 2],"float32"), )
paddle.bmm(x=Tensor([0, 2, 3],"float64"), y=Tensor([0, 3, 2],"float64"), )
paddle.bmm(x=Tensor([2, 2, 3],"float32"), y=Tensor([2, 3, 0],"float32"), )
paddle.bmm(x=Tensor([2, 2, 3],"float64"), y=Tensor([2, 3, 0],"float64"), )
paddle.column_stack(list[Tensor([0, 1, 1, 1],"float64"),], )
paddle.column_stack(list[Tensor([0, 1, 1, 1],"float64"),Tensor([0, 1, 1, 1],"float64"),Tensor([0, 1, 1, 1],"float64"),], )
paddle.column_stack(list[Tensor([0, 1, 1],"float64"),], )
paddle.column_stack(list[Tensor([0, 1, 1],"float64"),Tensor([0, 1, 1],"float64"),Tensor([0, 1, 1],"float64"),], )
paddle.column_stack(list[Tensor([0, 1],"float64"),], )
paddle.column_stack(list[Tensor([0, 1],"float64"),Tensor([0, 1],"float64"),Tensor([0, 1],"float64"),], )
paddle.column_stack(list[Tensor([0, 2],"float64"),], )
paddle.column_stack(list[Tensor([0, 2],"float64"),Tensor([0, 2],"float64"),Tensor([0, 2],"float64"),], )
paddle.column_stack(list[Tensor([0, 4, 2, 5],"float64"),], )
paddle.column_stack(list[Tensor([0, 4, 2, 5],"float64"),Tensor([0, 4, 2, 5],"float64"),Tensor([0, 4, 2, 5],"float64"),], )
paddle.column_stack(list[Tensor([0, 4, 2],"float64"),], )
paddle.column_stack(list[Tensor([0, 4, 2],"float64"),Tensor([0, 4, 2],"float64"),Tensor([0, 4, 2],"float64"),], )
paddle.column_stack(list[Tensor([0],"float64"),], )
paddle.column_stack(list[Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),], )
paddle.column_stack(list[Tensor([1, 0, 1, 1],"float64"),], )
paddle.column_stack(list[Tensor([1, 0, 1, 1],"float64"),Tensor([1, 0, 1, 1],"float64"),Tensor([1, 0, 1, 1],"float64"),], )
paddle.column_stack(list[Tensor([1, 0, 1],"float64"),], )
paddle.column_stack(list[Tensor([1, 0, 1],"float64"),Tensor([1, 0, 1],"float64"),Tensor([1, 0, 1],"float64"),], )
paddle.column_stack(list[Tensor([1, 0],"float64"),], )
paddle.column_stack(list[Tensor([1, 0],"float64"),Tensor([1, 0],"float64"),Tensor([1, 0],"float64"),], )
paddle.column_stack(list[Tensor([1, 1, 0, 1],"float64"),], )
paddle.column_stack(list[Tensor([1, 1, 0, 1],"float64"),Tensor([1, 1, 0, 1],"float64"),Tensor([1, 1, 0, 1],"float64"),], )
paddle.column_stack(list[Tensor([1, 1, 0],"float64"),], )
paddle.column_stack(list[Tensor([1, 1, 0],"float64"),Tensor([1, 1, 0],"float64"),Tensor([1, 1, 0],"float64"),], )
paddle.column_stack(list[Tensor([1, 1, 1, 0],"float64"),], )
paddle.column_stack(list[Tensor([1, 1, 1, 0],"float64"),Tensor([1, 1, 1, 0],"float64"),Tensor([1, 1, 1, 0],"float64"),], )
paddle.column_stack(list[Tensor([3, 0, 2, 5],"float64"),], )
paddle.column_stack(list[Tensor([3, 0, 2, 5],"float64"),Tensor([3, 0, 2, 5],"float64"),Tensor([3, 0, 2, 5],"float64"),], )
paddle.column_stack(list[Tensor([3, 0, 2],"float64"),], )
paddle.column_stack(list[Tensor([3, 0, 2],"float64"),Tensor([3, 0, 2],"float64"),Tensor([3, 0, 2],"float64"),], )
paddle.column_stack(list[Tensor([3, 0],"float64"),], )
paddle.column_stack(list[Tensor([3, 0],"float64"),Tensor([3, 0],"float64"),Tensor([3, 0],"float64"),], )
paddle.column_stack(list[Tensor([3, 4, 0, 5],"float64"),], )
paddle.column_stack(list[Tensor([3, 4, 0, 5],"float64"),Tensor([3, 4, 0, 5],"float64"),Tensor([3, 4, 0, 5],"float64"),], )
paddle.column_stack(list[Tensor([3, 4, 0],"float64"),], )
paddle.column_stack(list[Tensor([3, 4, 0],"float64"),Tensor([3, 4, 0],"float64"),Tensor([3, 4, 0],"float64"),], )
paddle.column_stack(list[Tensor([3, 4, 2, 0],"float64"),], )
paddle.column_stack(list[Tensor([3, 4, 2, 0],"float64"),Tensor([3, 4, 2, 0],"float64"),Tensor([3, 4, 2, 0],"float64"),], )
paddle.concat(list[Tensor([0, 1, 1, 1],"float32"),Tensor([0, 1, 1, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([0, 1, 1, 1],"float64"),], axis=0, name=None, )
paddle.concat(list[Tensor([0, 1, 1, 1],"float64"),], axis=1, name=None, )
paddle.concat(list[Tensor([0, 1, 1, 1],"float64"),], axis=2, name=None, )
paddle.concat(list[Tensor([0, 1, 1, 1],"float64"),Tensor([0, 1, 1, 1],"float64"),Tensor([0, 1, 1, 1],"float64"),], axis=0, name=None, )
paddle.concat(list[Tensor([0, 1, 1, 1],"float64"),Tensor([0, 1, 1, 1],"float64"),Tensor([0, 1, 1, 1],"float64"),], axis=1, name=None, )
paddle.concat(list[Tensor([0, 1, 1, 1],"float64"),Tensor([0, 1, 1, 1],"float64"),Tensor([0, 1, 1, 1],"float64"),], axis=2, name=None, )
paddle.concat(list[Tensor([0, 1, 1, 16],"float32"),Tensor([0, 1, 1, 16],"float32"),], axis=-1, )
paddle.concat(list[Tensor([0, 1, 1],"float16"),], axis=2, name=None, )
paddle.concat(list[Tensor([0, 1, 1],"float32"),], axis=2, name=None, )
paddle.concat(list[Tensor([0, 1, 1],"float32"),Tensor([0, 1, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([0, 1, 1],"float64"),], axis=0, name=None, )
paddle.concat(list[Tensor([0, 1, 1],"float64"),], axis=1, name=None, )
paddle.concat(list[Tensor([0, 1, 1],"float64"),Tensor([0, 1, 1],"float64"),Tensor([0, 1, 1],"float64"),], axis=0, name=None, )
paddle.concat(list[Tensor([0, 1, 1],"float64"),Tensor([0, 1, 1],"float64"),Tensor([0, 1, 1],"float64"),], axis=1, name=None, )
paddle.concat(list[Tensor([0, 1, 1],"float64"),Tensor([0, 1, 1],"float64"),Tensor([0, 1, 1],"float64"),], axis=2, name=None, )
paddle.concat(list[Tensor([0, 1, 100, 136],"float32"),Tensor([0, 1, 100, 136],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 1, 100, 152],"float32"),Tensor([0, 1, 100, 152],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 1, 100, 176, 176],"float32"),Tensor([0, 1, 100, 176, 176],"float32"),], )
paddle.concat(list[Tensor([0, 1, 100, 184, 184],"float32"),Tensor([0, 1, 100, 184, 184],"float32"),], )
paddle.concat(list[Tensor([0, 1, 100, 2],"float32"),Tensor([0, 1, 100, 2],"float32"),], )
paddle.concat(list[Tensor([0, 1, 100, 4],"float32"),Tensor([0, 1, 100, 4],"float32"),], )
paddle.concat(list[Tensor([0, 1, 10285, 1],"float32"),Tensor([0, 1, 10285, 1],"float32"),Tensor([0, 1, 10285, 1],"float32"),Tensor([0, 1, 10285, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([0, 1, 12544, 2],"float32"),], )
paddle.concat(list[Tensor([0, 1, 2],"float32"),Tensor([0, 1, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([0, 1, 2],"float32"),Tensor([0, 1, 2],"float32"),], axis=-2, )
paddle.concat(list[Tensor([0, 1, 24276, 1],"float32"),Tensor([0, 1, 24276, 1],"float32"),Tensor([0, 1, 24276, 1],"float32"),Tensor([0, 1, 24276, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([0, 1, 2704],"float32"),Tensor([0, 1, 676],"float32"),Tensor([0, 1, 169],"float32"),Tensor([0, 1, 49],"float32"),], axis=-1, )
paddle.concat(list[Tensor([0, 1, 27648],"float32"),Tensor([0, 1, 6912],"float32"),Tensor([0, 1, 1728],"float32"),Tensor([0, 1, 432],"float32"),Tensor([0, 1, 108],"float32"),Tensor([0, 1, 30],"float32"),], axis=-1, )
paddle.concat(list[Tensor([0, 1, 28800],"float32"),Tensor([0, 1, 7200],"float32"),Tensor([0, 1, 1800],"float32"),Tensor([0, 1, 450],"float32"),Tensor([0, 1, 117],"float32"),Tensor([0, 1, 35],"float32"),], axis=-1, )
paddle.concat(list[Tensor([0, 1, 3, 1],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 1, 3],"float32"),Tensor([0, 1, 4],"float32"),], -1, )
paddle.concat(list[Tensor([0, 1, 3136],"float32"),Tensor([0, 1, 784],"float32"),Tensor([0, 1, 196],"float32"),Tensor([0, 1, 49],"float32"),], axis=-1, )
paddle.concat(list[Tensor([0, 1, 32],"float32"),Tensor([0, 225, 32],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 1, 32],"float32"),Tensor([0, 4, 32],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 1, 4],"float32"),Tensor([0, 1, 4],"float32"),], -1, )
paddle.concat(list[Tensor([0, 1, 4800],"float32"),Tensor([0, 1, 1200],"float32"),Tensor([0, 1, 300],"float32"),Tensor([0, 1, 80],"float32"),Tensor([0, 1, 20],"float32"),], axis=-1, )
paddle.concat(list[Tensor([0, 1, 64, 64, 2],"float32"),Tensor([0, 10, 64, 64, 2],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 1, 640, 640],"float16"),Tensor([0, 1, 640, 640],"float16"),Tensor([0, 1, 640, 640],"float16"),], axis=1, )
paddle.concat(list[Tensor([0, 1, 640, 640],"float32"),Tensor([0, 1, 640, 640],"float32"),Tensor([0, 1, 640, 640],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 1, 6408],"float32"),Tensor([0, 1, 1620],"float32"),Tensor([0, 1, 414],"float32"),Tensor([0, 1, 108],"float32"),Tensor([0, 1, 30],"float32"),], axis=-1, )
paddle.concat(list[Tensor([0, 1, 8, 4],"int64"),Tensor([0, 1, 8, 4],"int64"),], axis=3, )
paddle.concat(list[Tensor([0, 1, 8],"float32"),Tensor([0, 1, 8],"float32"),Tensor([0, 1, 8],"float32"),Tensor([0, 1, 8],"float32"),Tensor([0, 1, 8],"float32"),Tensor([0, 1, 8],"float32"),Tensor([0, 1, 8],"float32"),Tensor([0, 1, 8],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 1, 8],"float32"),Tensor([0, 1, 8],"float32"),Tensor([0, 1, 8],"float32"),Tensor([0, 1, 8],"float32"),Tensor([0, 1, 8],"float32"),Tensor([0, 1, 8],"float32"),Tensor([0, 1, 8],"float32"),Tensor([0, 1, 8],"float32"),Tensor([0, 1, 8],"float32"),Tensor([0, 1, 8],"float32"),Tensor([0, 1, 8],"float32"),Tensor([0, 1, 8],"float32"),Tensor([0, 1, 8],"float32"),Tensor([0, 1, 8],"float32"),Tensor([0, 1, 8],"float32"),Tensor([0, 1, 8],"float32"),Tensor([0, 1, 8],"float32"),Tensor([0, 1, 8],"float32"),Tensor([0, 1, 8],"float32"),Tensor([0, 1, 8],"float32"),Tensor([0, 1, 8],"float32"),Tensor([0, 1, 8],"float32"),Tensor([0, 1, 8],"float32"),Tensor([0, 1, 8],"float32"),Tensor([0, 1, 8],"float32"),Tensor([0, 1, 8],"float32"),Tensor([0, 1, 8],"float32"),Tensor([0, 1, 8],"float32"),Tensor([0, 1, 8],"float32"),Tensor([0, 1, 8],"float32"),Tensor([0, 1, 8],"float32"),Tensor([0, 1, 8],"float32"),Tensor([0, 1, 8],"float32"),Tensor([0, 1, 8],"float32"),Tensor([0, 1, 8],"float32"),Tensor([0, 1, 8],"float32"),Tensor([0, 1, 8],"float32"),Tensor([0, 1, 8],"float32"),Tensor([0, 1, 8],"float32"),Tensor([0, 1, 8],"float32"),Tensor([0, 1, 8],"float32"),Tensor([0, 1, 8],"float32"),Tensor([0, 1, 8],"float32"),Tensor([0, 1, 8],"float32"),Tensor([0, 1, 8],"float32"),Tensor([0, 1, 8],"float32"),Tensor([0, 1, 8],"float32"),Tensor([0, 1, 8],"float32"),Tensor([0, 1, 8],"float32"),Tensor([0, 1, 8],"float32"),Tensor([0, 1, 8],"float32"),Tensor([0, 1, 8],"float32"),], axis=0, )
paddle.concat(list[Tensor([0, 1],"bool"),Tensor([0, 1],"bool"),], axis=-1, )
paddle.concat(list[Tensor([0, 1],"bool"),Tensor([0, 1],"bool"),Tensor([0, 1],"bool"),Tensor([0, 1],"bool"),Tensor([0, 1],"bool"),Tensor([0, 1],"bool"),Tensor([0, 1],"bool"),Tensor([0, 1],"bool"),Tensor([0, 1],"bool"),Tensor([0, 1],"bool"),Tensor([0, 1],"bool"),Tensor([0, 1],"bool"),Tensor([0, 1],"bool"),Tensor([0, 1],"bool"),Tensor([0, 1],"bool"),Tensor([0, 1],"bool"),Tensor([0, 1],"bool"),Tensor([0, 1],"bool"),Tensor([0, 1],"bool"),Tensor([0, 1],"bool"),Tensor([0, 1],"bool"),Tensor([0, 1],"bool"),Tensor([0, 1],"bool"),Tensor([0, 1],"bool"),Tensor([0, 1],"bool"),Tensor([0, 1],"bool"),Tensor([0, 1],"bool"),Tensor([0, 1],"bool"),Tensor([0, 1],"bool"),Tensor([0, 1],"bool"),Tensor([0, 1],"bool"),Tensor([0, 1],"bool"),Tensor([0, 1],"bool"),Tensor([0, 1],"bool"),Tensor([0, 1],"bool"),Tensor([0, 1],"bool"),Tensor([0, 1],"bool"),Tensor([0, 1],"bool"),Tensor([0, 1],"bool"),Tensor([0, 1],"bool"),Tensor([0, 1],"bool"),Tensor([0, 1],"bool"),Tensor([0, 1],"bool"),Tensor([0, 1],"bool"),Tensor([0, 1],"bool"),Tensor([0, 1],"bool"),Tensor([0, 1],"bool"),Tensor([0, 1],"bool"),Tensor([0, 1],"bool"),Tensor([0, 1],"bool"),], axis=1, )
paddle.concat(list[Tensor([0, 1],"float16"),], axis=0, name=None, )
paddle.concat(list[Tensor([0, 1],"float16"),], axis=1, name=None, )
paddle.concat(list[Tensor([0, 1],"float16"),Tensor([0, 1],"float16"),Tensor([0, 1],"float16"),], 0, )
paddle.concat(list[Tensor([0, 1],"float32"),], axis=0, name=None, )
paddle.concat(list[Tensor([0, 1],"float32"),], axis=1, name=None, )
paddle.concat(list[Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),], 1, )
paddle.concat(list[Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),], )
paddle.concat(list[Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),], 0, )
paddle.concat(list[Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),], -1, )
paddle.concat(list[Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),], )
paddle.concat(list[Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),], axis=0, )
paddle.concat(list[Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),], )
paddle.concat(list[Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),], 0, )
paddle.concat(list[Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),], )
paddle.concat(list[Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),], 0, )
paddle.concat(list[Tensor([0, 1],"float64"),Tensor([0, 1],"float64"),], axis=1, name=None, )
paddle.concat(list[Tensor([0, 1],"float64"),Tensor([0, 1],"float64"),Tensor([0, 1],"float64"),], axis=0, name=None, )
paddle.concat(list[Tensor([0, 1],"float64"),Tensor([0, 1],"float64"),Tensor([0, 1],"float64"),], axis=1, name=None, )
paddle.concat(list[Tensor([0, 1],"int32"),], )
paddle.concat(list[Tensor([0, 1],"int32"),Tensor([0, 1],"int32"),], )
paddle.concat(list[Tensor([0, 1],"int32"),Tensor([0, 1],"int32"),Tensor([0, 1],"int32"),Tensor([0, 1],"int32"),], )
paddle.concat(list[Tensor([0, 1],"int32"),Tensor([0, 1],"int32"),Tensor([0, 1],"int32"),Tensor([0, 1],"int32"),Tensor([0, 1],"int32"),], axis=0, )
paddle.concat(list[Tensor([0, 1],"int32"),Tensor([0, 1],"int32"),Tensor([0, 1],"int32"),Tensor([0, 1],"int32"),Tensor([0, 1],"int32"),Tensor([0, 1],"int32"),Tensor([0, 1],"int32"),Tensor([0, 1],"int32"),], )
paddle.concat(list[Tensor([0, 1],"int32"),Tensor([0, 1],"int32"),Tensor([0, 1],"int32"),Tensor([0, 1],"int32"),Tensor([0, 1],"int32"),Tensor([0, 1],"int32"),Tensor([0, 1],"int32"),Tensor([0, 1],"int32"),Tensor([0, 1],"int32"),Tensor([0, 1],"int32"),Tensor([0, 1],"int32"),Tensor([0, 1],"int32"),Tensor([0, 1],"int32"),Tensor([0, 1],"int32"),Tensor([0, 1],"int32"),Tensor([0, 1],"int32"),], )
paddle.concat(list[Tensor([0, 1],"int64"),], )
paddle.concat(list[Tensor([0, 1],"int64"),Tensor([0, 1],"int64"),], axis=1, )
paddle.concat(list[Tensor([0, 1],"int64"),Tensor([0, 1],"int64"),Tensor([0, 1],"int64"),Tensor([0, 1],"int64"),Tensor([0, 1],"int64"),Tensor([0, 1],"int64"),Tensor([0, 1],"int64"),Tensor([0, 1],"int64"),Tensor([0, 1],"int64"),Tensor([0, 1],"int64"),Tensor([0, 1],"int64"),Tensor([0, 1],"int64"),Tensor([0, 1],"int64"),Tensor([0, 1],"int64"),Tensor([0, 1],"int64"),Tensor([0, 1],"int64"),Tensor([0, 1],"int64"),Tensor([0, 1],"int64"),Tensor([0, 1],"int64"),Tensor([0, 1],"int64"),Tensor([0, 1],"int64"),Tensor([0, 1],"int64"),Tensor([0, 1],"int64"),Tensor([0, 1],"int64"),Tensor([0, 1],"int64"),], axis=0, )
paddle.concat(list[Tensor([0, 1],"int64"),Tensor([0, 2],"int64"),], axis=1, )
paddle.concat(list[Tensor([0, 10, 1, 2],"float32"),Tensor([0, 10, 1, 2],"float32"),], axis=-2, )
paddle.concat(list[Tensor([0, 10, 5],"float32"),Tensor([0, 10, 5],"float32"),], )
paddle.concat(list[Tensor([0, 10],"float32"),], 1, )
paddle.concat(list[Tensor([0, 10],"float32"),Tensor([0, 10],"float32"),Tensor([0, 10],"float32"),], 1, )
paddle.concat(list[Tensor([0, 100, 120],"float64"),Tensor([0, 100, 120],"float64"),], axis=0, )
paddle.concat(list[Tensor([0, 100, 256],"float32"),Tensor([0, 300, 256],"float32"),], 1, )
paddle.concat(list[Tensor([0, 100, 4],"float32"),Tensor([0, 300, 4],"float32"),], 1, )
paddle.concat(list[Tensor([0, 1024, 1],"float32"),Tensor([0, 4096, 1],"float32"),Tensor([0, 16384, 1],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 1024, 10],"float32"),Tensor([0, 4096, 10],"float32"),Tensor([0, 16384, 10],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 1024, 18, 18],"float32"),Tensor([0, 768, 18, 18],"float32"),Tensor([0, 768, 18, 18],"float32"),Tensor([0, 768, 18, 18],"float32"),Tensor([0, 768, 18, 18],"float32"),Tensor([0, 768, 18, 18],"float32"),Tensor([0, 768, 18, 18],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 1024, 20, 20],"float32"),Tensor([0, 768, 20, 20],"float32"),Tensor([0, 768, 20, 20],"float32"),Tensor([0, 768, 20, 20],"float32"),Tensor([0, 768, 20, 20],"float32"),Tensor([0, 768, 20, 20],"float32"),Tensor([0, 768, 20, 20],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 103680, 1],"float32"),Tensor([0, 25920, 1],"float32"),Tensor([0, 6480, 1],"float32"),Tensor([0, 1620, 1],"float32"),Tensor([0, 420, 1],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 103680, 4],"float32"),Tensor([0, 25920, 4],"float32"),Tensor([0, 6480, 4],"float32"),Tensor([0, 1620, 4],"float32"),Tensor([0, 420, 4],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 107, 128],"float16"),Tensor([0, 107, 107],"float16"),], axis=2, )
paddle.concat(list[Tensor([0, 109, 128],"float16"),Tensor([0, 109, 109],"float16"),], axis=2, )
paddle.concat(list[Tensor([0, 11, 256],"float32"),], axis=0, )
paddle.concat(list[Tensor([0, 11, 4],"float32"),], axis=0, )
paddle.concat(list[Tensor([0, 11],"int32"),], axis=0, )
paddle.concat(list[Tensor([0, 1100, 128],"float32"),Tensor([0, 1100, 128],"float32"),Tensor([0, 1100, 128],"float32"),Tensor([0, 1100, 128],"float32"),], axis=2, )
paddle.concat(list[Tensor([0, 12],"float64"),Tensor([0, 12],"float64"),Tensor([0, 12],"float64"),Tensor([0, 12],"float64"),Tensor([0, 12],"float64"),Tensor([0, 12],"float64"),Tensor([0, 12],"float64"),Tensor([0, 12],"float64"),Tensor([0, 12],"float64"),Tensor([0, 12],"float64"),Tensor([0, 12],"float64"),Tensor([0, 12],"float64"),], axis=1, )
paddle.concat(list[Tensor([0, 128, 1],"int64"),Tensor([0, 128, 1],"int64"),Tensor([0, 128, 1],"int64"),Tensor([0, 128, 1],"int64"),], axis=0, )
paddle.concat(list[Tensor([0, 128, 256, 256],"float32"),Tensor([0, 128, 256, 256],"float32"),Tensor([0, 128, 256, 256],"float32"),Tensor([0, 128, 256, 256],"float32"),], 1, )
paddle.concat(list[Tensor([0, 128, 32, 32],"float32"),Tensor([0, 32, 32, 32],"float32"),Tensor([0, 32, 32, 32],"float32"),Tensor([0, 32, 32, 32],"float32"),Tensor([0, 32, 32, 32],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 128, 64, 64],"float32"),Tensor([0, 128, 64, 64],"float32"),], 1, )
paddle.concat(list[Tensor([0, 128],"float32"),Tensor([0, 128],"float32"),Tensor([0, 128],"float32"),Tensor([0, 128],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 1280, 7, 7],"float32"),Tensor([0, 288, 7, 7],"float32"),Tensor([0, 288, 7, 7],"float32"),Tensor([0, 288, 7, 7],"float32"),Tensor([0, 288, 7, 7],"float32"),Tensor([0, 288, 7, 7],"float32"),Tensor([0, 288, 7, 7],"float32"),Tensor([0, 288, 7, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 13, 64],"float32"),Tensor([0, 3, 64],"float32"),], axis=-2, )
paddle.concat(list[Tensor([0, 136, 136],"float32"),Tensor([0, 136, 136],"float32"),], )
paddle.concat(list[Tensor([0, 14, 14],"int32"),Tensor([0, 14, 14],"int32"),Tensor([0, 14, 14],"int32"),Tensor([0, 14, 14],"int32"),], axis=0, )
paddle.concat(list[Tensor([0, 15, 15, 2],"float32"),Tensor([0, 15, 15, 2],"float32"),], -1, )
paddle.concat(list[Tensor([0, 1536],"float16"),Tensor([0, 256],"float16"),Tensor([0, 256],"float16"),], axis=-1, )
paddle.concat(list[Tensor([0, 16, 128, 64],"float32"),Tensor([0, 16, 1, 64],"float32"),], axis=-2, )
paddle.concat(list[Tensor([0, 16, 14, 14, 192],"float16"),Tensor([0, 16, 14, 14, 192],"float16"),Tensor([0, 16, 14, 14, 192],"float16"),Tensor([0, 16, 14, 14, 192],"float16"),], -1, )
paddle.concat(list[Tensor([0, 16, 14, 14, 192],"float32"),Tensor([0, 16, 14, 14, 192],"float32"),Tensor([0, 16, 14, 14, 192],"float32"),Tensor([0, 16, 14, 14, 192],"float32"),], -1, )
paddle.concat(list[Tensor([0, 16, 16, 2],"float32"),Tensor([0, 16, 16, 2],"float32"),], -1, )
paddle.concat(list[Tensor([0, 16, 16],"int64"),Tensor([0, 16, 16],"int64"),], 0, )
paddle.concat(list[Tensor([0, 16, 64],"float32"),Tensor([0, 16, 64],"float32"),Tensor([0, 16, 64],"float32"),Tensor([0, 16, 64],"float32"),Tensor([0, 16, 64],"float32"),Tensor([0, 16, 64],"float32"),Tensor([0, 16, 64],"float32"),Tensor([0, 16, 64],"float32"),Tensor([0, 16, 64],"float32"),Tensor([0, 16, 64],"float32"),Tensor([0, 16, 64],"float32"),Tensor([0, 16, 64],"float32"),Tensor([0, 16, 64],"float32"),], axis=0, )
paddle.concat(list[Tensor([0, 160, 18, 18],"float32"),Tensor([0, 160, 18, 18],"float32"),], 1, )
paddle.concat(list[Tensor([0, 160, 56, 56],"float32"),Tensor([0, 192, 56, 56],"float32"),Tensor([0, 192, 56, 56],"float32"),Tensor([0, 192, 56, 56],"float32"),Tensor([0, 192, 56, 56],"float32"),Tensor([0, 192, 56, 56],"float32"),Tensor([0, 192, 56, 56],"float32"),Tensor([0, 192, 56, 56],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 176, 176],"float32"),], )
paddle.concat(list[Tensor([0, 18, 128],"float32"),Tensor([0, 18, 128],"float32"),Tensor([0, 18, 128],"float32"),Tensor([0, 18, 128],"float32"),], axis=2, )
paddle.concat(list[Tensor([0, 18],"int32"),], axis=0, )
paddle.concat(list[Tensor([0, 184, 184],"float32"),], )
paddle.concat(list[Tensor([0, 188, 140, 1, 2, 7],"float32"),Tensor([0, 188, 140, 1, 2, 7],"float32"),Tensor([0, 188, 140, 1, 2, 7],"float32"),], axis=-3, )
paddle.concat(list[Tensor([0, 188, 140, 2, 7],"float32"),Tensor([0, 188, 140, 2, 7],"float32"),Tensor([0, 188, 140, 2, 7],"float32"),], axis=-2, )
paddle.concat(list[Tensor([0, 188, 140, 2],"float32"),Tensor([0, 188, 140, 2],"float32"),Tensor([0, 188, 140, 2],"float32"),], axis=-1, )
paddle.concat(list[Tensor([0, 188, 140, 2],"int32"),Tensor([0, 188, 140, 2],"int32"),Tensor([0, 188, 140, 2],"int32"),], axis=-1, )
paddle.concat(list[Tensor([0, 192, 20, 20],"float32"),Tensor([0, 192, 20, 20],"float32"),Tensor([0, 192, 20, 20],"float32"),Tensor([0, 192, 20, 20],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 2, 1, 4, 16],"float32"),Tensor([0, 2, 15, 4, 16],"float32"),], axis=2, )
paddle.concat(list[Tensor([0, 2, 1, 4, 16],"float32"),Tensor([0, 2, 7, 4, 16],"float32"),], axis=2, )
paddle.concat(list[Tensor([0, 2, 1],"float64"),Tensor([0, 2, 1],"float64"),], axis=2, name=None, )
paddle.concat(list[Tensor([0, 2, 16, 4, 16],"float32"),Tensor([0, 2, 16, 4, 16],"float32"),], axis=3, )
paddle.concat(list[Tensor([0, 2, 16, 4],"int64"),Tensor([0, 2, 16, 4],"int64"),], axis=3, )
paddle.concat(list[Tensor([0, 2, 32],"float32"),Tensor([0, 2, 32],"float32"),Tensor([0, 2, 32],"float32"),], axis=2, )
paddle.concat(list[Tensor([0, 2, 4, 16, 1],"float32"),Tensor([0, 2, 4, 16, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([0, 2, 8, 4, 16],"float32"),Tensor([0, 2, 8, 4, 16],"float32"),], axis=3, )
paddle.concat(list[Tensor([0, 2],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 2],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([0, 2],"float32"),Tensor([0, 2],"float32"),], -1, )
paddle.concat(list[Tensor([0, 2],"float32"),Tensor([0, 2],"float32"),], axis=-2, )
paddle.concat(list[Tensor([0, 2],"float32"),Tensor([0, 2],"float32"),Tensor([0, 2],"float32"),], )
paddle.concat(list[Tensor([0, 2],"float64"),Tensor([0, 2],"float64"),], axis=0, name=None, )
paddle.concat(list[Tensor([0, 2],"float64"),Tensor([0, 2],"float64"),Tensor([0, 2],"float64"),], axis=1, name=None, )
paddle.concat(list[Tensor([0, 20, 15, 384],"float32"),Tensor([0, 20, 15, 384],"float32"),Tensor([0, 20, 15, 384],"float32"),Tensor([0, 20, 15, 384],"float32"),], -1, )
paddle.concat(list[Tensor([0, 20, 5],"float32"),Tensor([0, 20, 5],"float32"),Tensor([0, 20, 5],"float32"),Tensor([0, 20, 5],"float32"),Tensor([0, 20, 5],"float32"),Tensor([0, 20, 5],"float32"),Tensor([0, 20, 5],"float32"),Tensor([0, 20, 5],"float32"),], axis=0, )
paddle.concat(list[Tensor([0, 214272],"float32"),Tensor([0, 214272],"float32"),], 0, )
paddle.concat(list[Tensor([0, 214272],"float32"),Tensor([0, 214272],"float32"),Tensor([0, 214272],"float32"),Tensor([0, 214272],"float32"),], 0, )
paddle.concat(list[Tensor([0, 21504, 2],"float32"),Tensor([0, 21504, 2],"float32"),Tensor([0, 21504, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([0, 224, 28, 28],"float16"),Tensor([0, 128, 28, 28],"float16"),Tensor([0, 128, 28, 28],"float16"),Tensor([0, 128, 28, 28],"float16"),Tensor([0, 128, 28, 28],"float16"),Tensor([0, 128, 28, 28],"float16"),], axis=1, )
paddle.concat(list[Tensor([0, 224, 28, 28],"float32"),Tensor([0, 128, 28, 28],"float32"),Tensor([0, 128, 28, 28],"float32"),Tensor([0, 128, 28, 28],"float32"),Tensor([0, 128, 28, 28],"float32"),Tensor([0, 128, 28, 28],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 24, 18, 768],"float32"),Tensor([0, 24, 18, 768],"float32"),Tensor([0, 24, 18, 768],"float32"),Tensor([0, 24, 18, 768],"float32"),], -1, )
paddle.concat(list[Tensor([0, 248, 1, 1, 2, 1],"float32"),Tensor([0, 248, 1, 1, 2, 1],"float32"),Tensor([0, 248, 1, 1, 2, 1],"float32"),Tensor([0, 248, 1, 1, 2, 3],"float32"),Tensor([0, 248, 1, 1, 2, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([0, 248, 216, 2, 7],"float32"),], axis=-2, )
paddle.concat(list[Tensor([0, 248832, 1],"float32"),Tensor([0, 62208, 1],"float32"),Tensor([0, 15552, 1],"float32"),Tensor([0, 3888, 1],"float32"),Tensor([0, 972, 1],"float32"),Tensor([0, 270, 1],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 248832, 4],"float32"),Tensor([0, 62208, 4],"float32"),Tensor([0, 15552, 4],"float32"),Tensor([0, 3888, 4],"float32"),Tensor([0, 972, 4],"float32"),Tensor([0, 270, 4],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 256, 1],"float32"),Tensor([0, 256, 1],"float32"),], 2, )
paddle.concat(list[Tensor([0, 256, 124, 128],"float32"),Tensor([0, 256, 124, 128],"float32"),Tensor([0, 256, 124, 128],"float32"),Tensor([0, 256, 124, 128],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 256, 62, 64],"float32"),Tensor([0, 256, 62, 64],"float32"),Tensor([0, 256, 62, 64],"float32"),Tensor([0, 256, 62, 64],"float32"),Tensor([0, 256, 62, 64],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 256],"float32"),Tensor([0, 256],"float32"),Tensor([0, 256],"float32"),Tensor([0, 256],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 256],"float32"),Tensor([0, 256],"float32"),Tensor([0, 256],"float32"),Tensor([0, 256],"float32"),Tensor([0, 256],"float32"),Tensor([0, 256],"float32"),], axis=0, )
paddle.concat(list[Tensor([0, 262144],"float32"),Tensor([0, 262144],"float32"),Tensor([0, 262144],"float32"),Tensor([0, 262144],"float32"),], 0, )
paddle.concat(list[Tensor([0, 262144],"float32"),Tensor([0, 262144],"float32"),Tensor([0, 262144],"float32"),Tensor([0, 262144],"float32"),Tensor([0, 262144],"float32"),Tensor([0, 262144],"float32"),Tensor([0, 262144],"float32"),Tensor([0, 262144],"float32"),], 0, )
paddle.concat(list[Tensor([0, 2704, 11],"float32"),Tensor([0, 676, 11],"float32"),Tensor([0, 169, 11],"float32"),Tensor([0, 49, 11],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 2704, 32],"float32"),Tensor([0, 676, 32],"float32"),Tensor([0, 169, 32],"float32"),Tensor([0, 49, 32],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 27648, 2],"float32"),Tensor([0, 6912, 2],"float32"),Tensor([0, 1728, 2],"float32"),Tensor([0, 432, 2],"float32"),Tensor([0, 108, 2],"float32"),], 1, )
paddle.concat(list[Tensor([0, 27648, 256],"float32"),Tensor([0, 6912, 256],"float32"),Tensor([0, 1728, 256],"float32"),Tensor([0, 432, 256],"float32"),Tensor([0, 108, 256],"float32"),], 1, )
paddle.concat(list[Tensor([0, 27648],"float32"),Tensor([0, 6912],"float32"),Tensor([0, 1728],"float32"),Tensor([0, 432],"float32"),Tensor([0, 108],"float32"),], 1, )
paddle.concat(list[Tensor([0, 28800],"float32"),Tensor([0, 7200],"float32"),Tensor([0, 1800],"float32"),Tensor([0, 450],"float32"),Tensor([0, 117],"float32"),], 1, )
paddle.concat(list[Tensor([0, 3, 1],"float32"),Tensor([0, 3, 1],"float32"),Tensor([0, 3, 1],"float32"),], axis=2, )
paddle.concat(list[Tensor([0, 3, 10, 10, 1],"float32"),Tensor([0, 3, 10, 10, 1],"float32"),Tensor([0, 3, 10, 10, 1],"float32"),Tensor([0, 3, 10, 10, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([0, 3, 112, 112],"float32"),Tensor([0, 3, 112, 112],"float32"),], 0, )
paddle.concat(list[Tensor([0, 3, 16, 16],"float32"),Tensor([0, 3, 16, 16],"float32"),Tensor([0, 2, 16, 16],"float32"),], 1, )
paddle.concat(list[Tensor([0, 3, 2, 2],"float32"),Tensor([0, 3, 2, 2],"float32"),Tensor([0, 2, 2, 2],"float32"),], 1, )
paddle.concat(list[Tensor([0, 3, 20, 20, 1],"float32"),Tensor([0, 3, 20, 20, 1],"float32"),Tensor([0, 3, 20, 20, 1],"float32"),Tensor([0, 3, 20, 20, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([0, 3, 224, 224],"float32"),Tensor([0, 3, 224, 224],"float32"),], 0, )
paddle.concat(list[Tensor([0, 3, 240, 240],"float32"),Tensor([0, 3, 240, 240],"float32"),Tensor([0, 3, 240, 240],"float32"),Tensor([0, 3, 240, 240],"float32"),], 1, )
paddle.concat(list[Tensor([0, 3, 256, 256],"float32"),], 0, )
paddle.concat(list[Tensor([0, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([0,  ...
paddle.concat(list[Tensor([0, 3, 64],"float32"),Tensor([0, 3, 64],"float32"),Tensor([0, 3, 64],"float32"),Tensor([0, 3, 64],"float32"),Tensor([0, 3, 64],"float32"),Tensor([0, 3, 64],"float32"),Tensor([0, 3, 64],"float32"),Tensor([0, 3, 64],"float32"),Tensor([0, 3, 64],"float32"),Tensor([0, 3, 64],"float32"),Tensor([0, 3, 64],"float32"),Tensor([0, 3, 64],"float32"),Tensor([0, 3, 64],"float32"),], axis=0, )
paddle.concat(list[Tensor([0, 304, 918],"float16"),Tensor([0, 304, 918],"float16"),Tensor([0, 304, 918],"float16"),Tensor([0, 304, 918],"float16"),Tensor([0, 304, 918],"float16"),Tensor([0, 304, 918],"float16"),Tensor([0, 304, 918],"float16"),Tensor([0, 304, 918],"float16"),Tensor([0, 304, 918],"float16"),Tensor([0, 304, 918],"float16"),Tensor([0, 304, 918],"float16"),Tensor([0, 304, 918],"float16"),], axis=-1, )
paddle.concat(list[Tensor([0, 32, 4],"float32"),Tensor([0, 32, 3],"float32"),Tensor([0, 32, 2],"float32"),], axis=-1, )
paddle.concat(list[Tensor([0, 32],"float32"),Tensor([0, 32],"float32"),Tensor([0, 32],"float32"),Tensor([0, 32],"float32"),Tensor([0, 32],"float32"),Tensor([0, 32],"float32"),Tensor([0, 32],"float32"),Tensor([0, 32],"float32"),Tensor([0, 32],"float32"),Tensor([0, 32],"float32"),Tensor([0, 32],"float32"),Tensor([0, 32],"float32"),Tensor([0, 32],"float32"),Tensor([0, 32],"float32"),Tensor([0, 32],"float32"),Tensor([0, 32],"float32"),], axis=-1, )
paddle.concat(list[Tensor([0, 32],"float32"),Tensor([0, 32],"float32"),Tensor([0, 32],"float32"),Tensor([0, 32],"float32"),Tensor([0, 32],"float32"),Tensor([0, 32],"float32"),Tensor([0, 32],"float32"),Tensor([0, 32],"float32"),Tensor([0, 32],"float32"),Tensor([0, 32],"float32"),Tensor([0, 32],"float32"),Tensor([0, 32],"float32"),Tensor([0, 32],"float32"),Tensor([0, 32],"float32"),Tensor([0, 32],"float32"),Tensor([0, 32],"float32"),Tensor([0, 32],"float32"),Tensor([0, 32],"float32"),Tensor([0, 32],"float32"),Tensor([0, 32],"float32"),Tensor([0, 32],"float32"),Tensor([0, 32],"float32"),Tensor([0, 32],"float32"),Tensor([0, 32],"float32"),Tensor([0, 32],"float32"),Tensor([0, 32],"float32"),Tensor([0, 32],"float32"),Tensor([0, 32],"float32"),Tensor([0, 32],"float32"),Tensor([0, 32],"float32"),Tensor([0, 32],"float32"),Tensor([0, 32],"float32"),Tensor([0, 32],"float32"),Tensor([0, 32],"float32"),Tensor([0, 32],"float32"),Tensor([0, 32],"float32"),Tensor([0, 32],"float32"),Tensor([0, 32],"float32"),Tensor([0, 32],"float32"),Tensor([0, 32],"float32"),Tensor([0, 32],"float32"),Tensor([0, 32],"float32"),Tensor([0, 32],"float32"),Tensor([0, 32],"float32"),Tensor([0, 32],"float32"),Tensor([0, 32],"float32"),Tensor([0, 32],"float32"),Tensor([0, 32],"float32"),], axis=-1, )
paddle.concat(list[Tensor([0, 346, 918],"float16"),Tensor([0, 346, 918],"float16"),Tensor([0, 346, 918],"float16"),Tensor([0, 346, 918],"float16"),Tensor([0, 346, 918],"float16"),Tensor([0, 346, 918],"float16"),Tensor([0, 346, 918],"float16"),Tensor([0, 346, 918],"float16"),Tensor([0, 346, 918],"float16"),Tensor([0, 346, 918],"float16"),Tensor([0, 346, 918],"float16"),Tensor([0, 346, 918],"float16"),], axis=-1, )
paddle.concat(list[Tensor([0, 3600, 4],"float32"),Tensor([0, 900, 4],"float32"),Tensor([0, 225, 4],"float32"),], 1, )
paddle.concat(list[Tensor([0, 36000, 1],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 36000, 4],"float32"),], axis=1, )
paddle.concat(list[Tensor([0, 4, 1, 1, 8],"float32"),Tensor([0, 4, 3, 1, 8],"float32"),Tensor([0, 4, 1, 1, 8],"float32"),], axis=2, )
paddle.concat(list[Tensor([0, 4, 1, 5, 1, 8],"float32"),Tensor([0, 4, 3, 5, 1, 8],"float32"),Tensor([0, 4, 1, 5, 1, 8],"float32"),], axis=2, )
paddle.concat(list[Tensor([0, 4, 1, 8],"float32"),Tensor([0, 4, 1, 8],"float32"),], axis=2, )
paddle.concat(list[Tensor([0, 4, 1, 8],"float32"),Tensor([0, 4, 5, 8],"float32"),Tensor([0, 4, 1, 8],"float32"),], axis=2, )
paddle.concat(list[Tensor([0, 4, 10],"float32"),Tensor([0, 4, 10],"float32"),Tensor([0, 4, 10],"float32"),], 0, )
paddle.concat(list[Tensor([0, 4, 2, 5],"float64"),], axis=0, name=None, )
paddle.concat(list[Tensor([0, 4, 2, 5],"float64"),], axis=1, name=None, )
paddle.concat(list[Tensor([0, 4, 2, 5],"float64"),], axis=2, name=None, )
paddle.concat(list[Tensor([0, 4, 2, 5],"float64"),Tensor([0, 4, 2, 5],"float64"),Tensor([0, 4, 2, 5],"float64"),], axis=0, name=None, )
paddle.concat(list[Tensor([0, 4, 2, 5],"float64"),Tensor([0, 4, 2, 5],"float64"),Tensor([0, 4, 2, 5],"float64"),], axis=1, name=None, )
paddle.concat(list[Tensor([0, 4, 2, 5],"float64"),Tensor([0, 4, 2, 5],"float64"),Tensor([0, 4, 2, 5],"float64"),], axis=2, name=None, )
paddle.concat(list[Tensor([0, 4, 2, 8],"float32"),Tensor([0, 4, 1, 8],"float32"),], axis=2, )
paddle.concat(list[Tensor([0, 4, 2],"float64"),], axis=0, name=None, )
paddle.concat(list[Tensor([0, 4, 2],"float64"),], axis=1, name=None, )
paddle.concat(list[Tensor([0, 4, 2],"float64"),Tensor([0, 4, 2],"float64"),Tensor([0, 4, 2],"float64"),], axis=0, name=None, )
paddle.concat(list[Tensor([0, 4, 2],"float64"),Tensor([0, 4, 2],"float64"),Tensor([0, 4, 2],"float64"),], axis=1, name=None, )
paddle.concat(list[Tensor([0, 4, 3, 1, 1, 8],"float32"),Tensor([0, 4, 3, 1, 1, 8],"float32"),Tensor([0, 4, 3, 1, 1, 8],"float32"),], axis=3, )
paddle.concat(list[Tensor([0, 4, 3, 1, 1, 8],"float32"),Tensor([0, 4, 3, 3, 1, 8],"float32"),Tensor([0, 4, 3, 1, 1, 8],"float32"),], axis=3, )
paddle.concat(list[Tensor([0, 4, 5, 1, 5],"float32"),Tensor([0, 4, 5, 1, 2],"float32"),], axis=4, )
paddle.concat(list[Tensor([0, 4],"float32"),], 0, )
paddle.concat(list[Tensor([0, 4],"float32"),Tensor([0, 4],"float32"),], axis=0, )
paddle.concat(list[Tensor([0, 4],"float32"),Tensor([0, 4],"float32"),Tensor([0, 4],"float32"),Tensor([0, 4],"float32"),], )
paddle.concat(list[Tensor([0, 4],"float32"),Tensor([0, 4],"float32"),Tensor([0, 4],"float32"),Tensor([0, 4],"float32"),Tensor([0, 4],"float32"),Tensor([0, 4],"float32"),], )
paddle.concat(list[Tensor([0, 4],"float32"),Tensor([0, 4],"float32"),Tensor([0, 4],"float32"),Tensor([0, 4],"float32"),Tensor([0, 4],"float32"),Tensor([0, 4],"float32"),Tensor([0, 4],"float32"),Tensor([0, 4],"float32"),], )
paddle.concat(list[Tensor([0, 4],"float32"),Tensor([0, 4],"float32"),Tensor([0, 4],"float32"),Tensor([0, 4],"float32"),Tensor([0, 4],"float32"),Tensor([0, 4],"float32"),Tensor([0, 4],"float32"),Tensor([0, 4],"float32"),Tensor([0, 4],"float32"),Tensor([0, 4],"float32"),Tensor([0, 4],"float32"),Tensor([0, 4],"float32"),Tensor([0, 4],"float32"),Tensor([0, 4],"float32"),Tensor([0, 4],"float32"),Tensor([0, 4],"float32"),], )
paddle.concat(list[Tensor([0, 4],"int32"),Tensor([0, 4],"int32"),Tensor([0, 4],"int32"),Tensor([0, 4],"int32"),], axis=0, )
paddle.concat(list[Tensor([0, 4],"int32"),Tensor([0, 4],"int32"),Tensor([0, 4],"int32"),Tensor([0, 4],"int32"),Tensor([0, 4],"int32"),Tensor([0, 4],"int32"),Tensor([0, 4],"int32"),Tensor([0, 4],"int32"),], axis=0, )
paddle.concat(list[Tensor([0, 400],"float32"),Tensor([0, 400],"float32"),Tensor([0, 400],"float32"),Tensor([0, 400],"float32"),Tensor([0, 400],"float32"),Tensor([0, 400],"float32"),Tensor([0, 400],"float32"),Tensor([0, 400],"float32"),Tensor([0, 400],"float32"),Tensor([0, 400],"float32"),Tensor([0, 400],"float32"),Tensor([0, 400],"float32"),Tensor([0, 400],"float32"),Tensor([0, 400],"float32"),Tensor([0, 400],"float32"),Tensor([0, 400],"float32"),Tensor([0, 400],"float32"),Tensor([0, 400],"float32"),Tensor([0, 400],"float32"),Tensor([0, 400],"float32"),Tensor([0, 400],"float32"),Tensor([0, 400],"float32"),Tensor([0, 400],"float32"),Tensor([0, 400],"float32"),Tensor([0, 400],"float32"),], axis=0, )
paddle.concat(list[Tensor([0, 4096, 4],"float32"),Tensor([0, 1024, 4],"float32"),Tensor([0, 256, 4],"float32"),], 1, )
paddle.concat(list[Tensor([0, 4800, 2],"float32"),Tensor([0, 1200, 2],"float32"),Tensor([0, 300, 2],"float32"),Tensor([0, 80, 2],"float32"),], 1, )
paddle.concat(list[Tensor([0, 4800, 256],"float32"),Tensor([0, 1200, 256],"float32"),Tensor([0, 300, 256],"float32"),Tensor([0, 80, 256],"float32"),], 1, )
paddle.concat(list[Tensor([0, 4800],"float32"),Tensor([0, 1200],"float32"),Tensor([0, 300],"float32"),Tensor([0, 80],"float32"),], 1, )
paddle.concat(list[Tensor([0, 5, 1, 1],"float32"),Tensor([0, 5, 1, 3],"float32"),Tensor([0, 5, 1, 1],"float32"),], axis=3, )
paddle.concat(list[Tensor([0, 5, 1],"float32"),Tensor([0, 5, 1],"float32"),], 2, )
paddle.concat(list[Tensor([0, 5, 1],"float64"),Tensor([0, 5, 1],"float64"),Tensor([0, 5, 1],"float64"),], axis=2, name=None, )
paddle.concat(list[Tensor([0, 5],"float64"),Tensor([0, 5],"float64"),Tensor([0, 5],"float64"),], axis=0, name=None, )
paddle.concat(list[Tensor([0, 50, 50, 5],"float32"),Tensor([0, 50, 50, 5],"float32"),], axis=0, )
paddle.concat(list[Tensor([0, 500, 1],"int64"),Tensor([0, 500, 1],"int64"),Tensor([0, 500, 1],"int64"),Tensor([0, 500, 1],"int64"),Tensor([0, 500, 1],"int64"),Tensor([0, 500, 1],"int64"),Tensor([0, 500, 1],"int64"),Tensor([0, 500, 1],"int64"),Tensor([0, 500, 1],"int64"),Tensor([0, 500, 1],"int64"),Tensor([0, 500, 1],"int64"),Tensor([0, 500, 1],"int64"),Tensor([0, 500, 1],"int64"),Tensor([0, 500, 1],"int64"),Tensor([0, 500, 1],"int64"),Tensor([0, 500, 1],"int64"),Tensor([0, 500, 1],"int64"),Tensor([0, 500, 1],"int64"),Tensor([0, 500, 1],"int64"),Tensor([0, 500, 1],"int64"),], axis=0, )
paddle.concat(list[Tensor([0, 512],"float16"),Tensor([0, 128],"float16"),Tensor([0, 128],"float16"),], axis=1, )
paddle.concat(list[Tensor([0, 52, 14, 8],"float32"),Tensor([0, 52, 14, 8],"float32"),], axis=0, )
paddle.concat(list[Tensor([0, 6],"float64"),Tensor([0, 6],"float64"),Tensor([0, 6],"float64"),Tensor([0, 6],"float64"),Tensor([0, 6],"float64"),Tensor([0, 6],"float64"),], axis=1, )
paddle.concat(list[Tensor([0, 640, 640],"float32"),Tensor([0, 640, 640],"float32"),Tensor([0, 640, 640],"float32"),Tensor([0, 640, 640],"float32"),Tensor([0, 640, 640],"float32"),Tensor([0, 640, 640],"float32"),Tensor([0, 640, 640],"float32"),Tensor([0, 640, 640],"float32"),], 0, )
paddle.concat(list[Tensor([0, 6408],"float32"),Tensor([0, 1620],"float32"),Tensor([0, 414],"float32"),Tensor([0, 108],"float32"),], 1, )
paddle.concat(list[Tensor([0, 7, 32],"float32"),Tensor([0, 7, 32],"float32"),], axis=0, )
paddle.concat(list[Tensor([0, 7],"float32"),Tensor([0, 7],"float32"),], axis=0, )
paddle.concat(list[Tensor([0, 7],"int64"),Tensor([0, 10],"int64"),Tensor([0, 7],"int64"),], axis=1, )
paddle.concat(list[Tensor([0, 96],"float32"),Tensor([0, 50],"float32"),], 1, )
paddle.concat(list[Tensor([0, 96],"float32"),Tensor([0, 96],"float32"),], 0, )
paddle.concat(list[Tensor([0],"float16"),], axis=0, name=None, )
paddle.concat(list[Tensor([0],"float16"),Tensor([0],"float16"),Tensor([0],"float16"),], axis=-1, )
paddle.concat(list[Tensor([0],"float16"),Tensor([0],"float16"),Tensor([0],"float16"),Tensor([0],"float16"),Tensor([0],"float16"),Tensor([0],"float16"),Tensor([0],"float16"),Tensor([0],"float16"),Tensor([0],"float16"),], )
paddle.concat(list[Tensor([0],"float16"),Tensor([0],"float16"),Tensor([0],"float16"),Tensor([0],"float16"),Tensor([0],"float16"),Tensor([0],"float16"),Tensor([0],"float16"),Tensor([0],"float16"),Tensor([0],"float16"),Tensor([0],"float16"),Tensor([0],"float16"),Tensor([0],"float16"),Tensor([0],"float16"),Tensor([0],"float16"),Tensor([0],"float16"),Tensor([0],"float16"),Tensor([0],"float16"),Tensor([0],"float16"),Tensor([0],"float16"),Tensor([0],"float16"),Tensor([0],"float16"),Tensor([0],"float16"),Tensor([0],"float16"),], )
paddle.concat(list[Tensor([0],"float16"),Tensor([0],"float16"),Tensor([0],"float16"),Tensor([0],"float16"),Tensor([0],"float16"),Tensor([0],"float16"),Tensor([0],"float16"),Tensor([0],"float16"),Tensor([0],"float16"),Tensor([0],"float16"),Tensor([0],"float16"),Tensor([0],"float16"),Tensor([0],"float16"),Tensor([0],"float16"),Tensor([0],"float16"),Tensor([0],"float16"),Tensor([0],"float16"),Tensor([0],"float16"),Tensor([0],"float16"),Tensor([0],"float16"),Tensor([0],"float16"),Tensor([0],"float16"),Tensor([0],"float16"),Tensor([0],"float16"),Tensor([0],"float16"),Tensor([0],"float16"),Tensor([0],"float16"),Tensor([0],"float16"),Tensor([0],"float16"),Tensor([0],"float16"),], )
paddle.concat(list[Tensor([0],"float16"),Tensor([0],"float16"),Tensor([0],"float16"),Tensor([0],"float16"),Tensor([0],"float16"),Tensor([0],"float16"),Tensor([0],"float16"),Tensor([0],"float16"),Tensor([0],"float16"),Tensor([0],"float16"),Tensor([0],"float16"),Tensor([0],"float16"),Tensor([0],"float16"),Tensor([0],"float16"),Tensor([0],"float16"),Tensor([0],"float16"),Tensor([0],"float16"),Tensor([0],"float16"),Tensor([0],"float16"),Tensor([0],"float16"),Tensor([0],"float16"),Tensor([0],"float16"),Tensor([0],"float16"),Tensor([0],"float16"),Tensor([0],"float16"),Tensor([0],"float16"),Tensor([0],"float16"),Tensor([0],"float16"),Tensor([0],"float16"),Tensor([0],"float16"),Tensor([0],"float16"),], )
paddle.concat(list[Tensor([0],"float32"),], 0, )
paddle.concat(list[Tensor([0],"float32"),], axis=0, )
paddle.concat(list[Tensor([0],"float32"),], axis=0, name=None, )
paddle.concat(list[Tensor([0],"float32"),Tensor([0],"float32"),], )
paddle.concat(list[Tensor([0],"float32"),Tensor([0],"float32"),], axis=0, )
paddle.concat(list[Tensor([0],"float32"),Tensor([0],"float32"),], axis=-1, )
paddle.concat(list[Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),], axis=0, )
paddle.concat(list[Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),], axis=0, )
paddle.concat(list[Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),], )
paddle.concat(list[Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),], )
paddle.concat(list[Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),], )
paddle.concat(list[Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),], )
paddle.concat(list[Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),], axis=-1, )
paddle.concat(list[Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),], axis=-1, )
paddle.concat(list[Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"float32"),Tensor([0],"f ...
paddle.concat(list[Tensor([0],"float64"),Tensor([0],"float64"),], axis=0, name=None, )
paddle.concat(list[Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),], )
paddle.concat(list[Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),], axis=0, name=None, )
paddle.concat(list[Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),], axis=0, )
paddle.concat(list[Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),], axis=0, )
paddle.concat(list[Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),], axis=0, )
paddle.concat(list[Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),], axis=0, )
paddle.concat(list[Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),], axis=0, )
paddle.concat(list[Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),], axis=0, )
paddle.concat(list[Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),], axis=0, )
paddle.concat(list[Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),], axis=0, )
paddle.concat(list[Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),], axis=0, )
paddle.concat(list[Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),], axis=0, )
paddle.concat(list[Tensor([0],"int32"),], axis=0, )
paddle.concat(list[Tensor([0],"int32"),Tensor([0],"int32"),Tensor([0],"int32"),Tensor([0],"int32"),Tensor([0],"int32"),Tensor([0],"int32"),Tensor([0],"int32"),Tensor([0],"int32"),], axis=0, )
paddle.concat(list[Tensor([0],"int64"),], )
paddle.concat(list[Tensor([0],"int64"),], 0, )
paddle.concat(list[Tensor([0],"int64"),Tensor([0],"int64"),], -1, )
paddle.concat(list[Tensor([0],"int64"),Tensor([0],"int64"),Tensor([0],"int64"),], axis=0, )
paddle.concat(list[Tensor([0],"int64"),Tensor([0],"int64"),Tensor([0],"int64"),Tensor([0],"int64"),], )
paddle.concat(list[Tensor([0],"int64"),Tensor([0],"int64"),Tensor([0],"int64"),Tensor([0],"int64"),Tensor([0],"int64"),Tensor([0],"int64"),Tensor([0],"int64"),Tensor([0],"int64"),], )
paddle.concat(list[Tensor([0],"int64"),Tensor([0],"int64"),Tensor([0],"int64"),Tensor([0],"int64"),Tensor([0],"int64"),Tensor([0],"int64"),Tensor([0],"int64"),Tensor([0],"int64"),Tensor([0],"int64"),Tensor([0],"int64"),Tensor([0],"int64"),Tensor([0],"int64"),Tensor([0],"int64"),Tensor([0],"int64"),Tensor([0],"int64"),Tensor([0],"int64"),], )
paddle.concat(list[Tensor([1, 0, 1, 1],"float32"),Tensor([1, 0, 1, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 0, 1, 1],"float64"),], axis=0, name=None, )
paddle.concat(list[Tensor([1, 0, 1, 1],"float64"),], axis=1, name=None, )
paddle.concat(list[Tensor([1, 0, 1, 1],"float64"),], axis=2, name=None, )
paddle.concat(list[Tensor([1, 0, 1, 1],"float64"),Tensor([1, 0, 1, 1],"float64"),Tensor([1, 0, 1, 1],"float64"),], axis=0, name=None, )
paddle.concat(list[Tensor([1, 0, 1, 1],"float64"),Tensor([1, 0, 1, 1],"float64"),Tensor([1, 0, 1, 1],"float64"),], axis=1, name=None, )
paddle.concat(list[Tensor([1, 0, 1, 1],"float64"),Tensor([1, 0, 1, 1],"float64"),Tensor([1, 0, 1, 1],"float64"),], axis=2, name=None, )
paddle.concat(list[Tensor([1, 0, 1, 16],"float32"),Tensor([1, 0, 1, 16],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 0, 1, 8],"float32"),Tensor([1, 0, 1, 8],"float32"),], axis=2, )
paddle.concat(list[Tensor([1, 0, 1],"float16"),], axis=2, name=None, )
paddle.concat(list[Tensor([1, 0, 1],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 0, 1],"float32"),], axis=2, name=None, )
paddle.concat(list[Tensor([1, 0, 1],"float32"),Tensor([1, 0, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 0, 1],"float32"),Tensor([1, 0, 1],"float32"),Tensor([1, 0, 1],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 0, 1],"float32"),Tensor([1, 0, 1],"float32"),Tensor([1, 0, 1],"float32"),Tensor([1, 0, 1],"float32"),Tensor([1, 0, 1],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 0, 1],"float32"),Tensor([1, 0, 1],"float32"),Tensor([1, 0, 1],"float32"),Tensor([1, 0, 1],"float32"),Tensor([1, 0, 1],"float32"),Tensor([1, 0, 1],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 0, 1],"float64"),], axis=0, name=None, )
paddle.concat(list[Tensor([1, 0, 1],"float64"),], axis=1, name=None, )
paddle.concat(list[Tensor([1, 0, 1],"float64"),Tensor([1, 0, 1],"float64"),], axis=2, name=None, )
paddle.concat(list[Tensor([1, 0, 1],"float64"),Tensor([1, 0, 1],"float64"),Tensor([1, 0, 1],"float64"),], axis=0, name=None, )
paddle.concat(list[Tensor([1, 0, 1],"float64"),Tensor([1, 0, 1],"float64"),Tensor([1, 0, 1],"float64"),], axis=1, name=None, )
paddle.concat(list[Tensor([1, 0, 1],"float64"),Tensor([1, 0, 1],"float64"),Tensor([1, 0, 1],"float64"),], axis=2, name=None, )
paddle.concat(list[Tensor([1, 0, 1],"int64"),Tensor([1, 0, 1],"int64"),Tensor([1, 0, 1],"int64"),Tensor([1, 0, 1],"int64"),], axis=0, )
paddle.concat(list[Tensor([1, 0, 1],"int64"),Tensor([1, 0, 1],"int64"),Tensor([1, 0, 1],"int64"),Tensor([1, 0, 1],"int64"),Tensor([1, 0, 1],"int64"),Tensor([1, 0, 1],"int64"),Tensor([1, 0, 1],"int64"),Tensor([1, 0, 1],"int64"),Tensor([1, 0, 1],"int64"),Tensor([1, 0, 1],"int64"),Tensor([1, 0, 1],"int64"),Tensor([1, 0, 1],"int64"),Tensor([1, 0, 1],"int64"),Tensor([1, 0, 1],"int64"),Tensor([1, 0, 1],"int64"),Tensor([1, 0, 1],"int64"),Tensor([1, 0, 1],"int64"),Tensor([1, 0, 1],"int64"),Tensor([1, 0, 1],"int64"),Tensor([1, 0, 1],"int64"),], axis=0, )
paddle.concat(list[Tensor([1, 0, 10],"float32"),Tensor([1, 0, 10],"float32"),Tensor([1, 0, 10],"float32"),], 0, )
paddle.concat(list[Tensor([1, 0, 10],"float32"),Tensor([1, 0, 10],"float32"),Tensor([1, 0, 10],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 0, 100, 136],"float32"),Tensor([1, 0, 100, 136],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 0, 100, 152],"float32"),Tensor([1, 0, 100, 152],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 0, 100, 176, 176],"float32"),Tensor([6, 0, 100, 176, 176],"float32"),], )
paddle.concat(list[Tensor([1, 0, 100, 184, 184],"float32"),Tensor([6, 0, 100, 184, 184],"float32"),], )
paddle.concat(list[Tensor([1, 0, 100, 2],"float32"),Tensor([6, 0, 100, 2],"float32"),], )
paddle.concat(list[Tensor([1, 0, 100, 4],"float32"),Tensor([6, 0, 100, 4],"float32"),], )
paddle.concat(list[Tensor([1, 0, 10285, 1],"float32"),Tensor([1, 0, 10285, 1],"float32"),Tensor([1, 0, 10285, 1],"float32"),Tensor([1, 0, 10285, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 0, 11],"float32"),Tensor([1, 0, 11],"float32"),Tensor([1, 0, 11],"float32"),Tensor([1, 0, 11],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 0, 124, 128],"float32"),Tensor([1, 0, 124, 128],"float32"),Tensor([1, 0, 124, 128],"float32"),Tensor([1, 0, 124, 128],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 0, 12544, 2],"float32"),], )
paddle.concat(list[Tensor([1, 0, 128],"float16"),Tensor([1, 0, 107],"float16"),], axis=2, )
paddle.concat(list[Tensor([1, 0, 128],"float16"),Tensor([1, 0, 109],"float16"),], axis=2, )
paddle.concat(list[Tensor([1, 0, 128],"float32"),Tensor([1, 0, 128],"float32"),Tensor([1, 0, 128],"float32"),Tensor([1, 0, 128],"float32"),], axis=2, )
paddle.concat(list[Tensor([1, 0, 136],"float32"),Tensor([1, 0, 136],"float32"),], )
paddle.concat(list[Tensor([1, 0, 14, 14, 192],"float16"),Tensor([1, 0, 14, 14, 192],"float16"),Tensor([1, 0, 14, 14, 192],"float16"),Tensor([1, 0, 14, 14, 192],"float16"),], -1, )
paddle.concat(list[Tensor([1, 0, 14, 14, 192],"float32"),Tensor([1, 0, 14, 14, 192],"float32"),Tensor([1, 0, 14, 14, 192],"float32"),Tensor([1, 0, 14, 14, 192],"float32"),], -1, )
paddle.concat(list[Tensor([1, 0, 14, 8],"float32"),Tensor([1, 0, 14, 8],"float32"),], axis=0, )
paddle.concat(list[Tensor([1, 0, 140, 1, 2, 7],"float32"),Tensor([1, 0, 140, 1, 2, 7],"float32"),Tensor([1, 0, 140, 1, 2, 7],"float32"),], axis=-3, )
paddle.concat(list[Tensor([1, 0, 140, 2, 7],"float32"),Tensor([1, 0, 140, 2, 7],"float32"),Tensor([1, 0, 140, 2, 7],"float32"),], axis=-2, )
paddle.concat(list[Tensor([1, 0, 140, 2],"float32"),Tensor([1, 0, 140, 2],"float32"),Tensor([1, 0, 140, 2],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 0, 140, 2],"int32"),Tensor([1, 0, 140, 2],"int32"),Tensor([1, 0, 140, 2],"int32"),], axis=-1, )
paddle.concat(list[Tensor([1, 0, 15, 2],"float32"),Tensor([1, 0, 15, 2],"float32"),], -1, )
paddle.concat(list[Tensor([1, 0, 15, 384],"float32"),Tensor([1, 0, 15, 384],"float32"),Tensor([1, 0, 15, 384],"float32"),Tensor([1, 0, 15, 384],"float32"),], -1, )
paddle.concat(list[Tensor([1, 0, 16, 2],"float32"),Tensor([1, 0, 16, 2],"float32"),], -1, )
paddle.concat(list[Tensor([1, 0, 16],"int64"),Tensor([1, 0, 16],"int64"),], 0, )
paddle.concat(list[Tensor([1, 0, 176],"float32"),], )
paddle.concat(list[Tensor([1, 0, 18, 18],"float32"),Tensor([1, 0, 18, 18],"float32"),], 1, )
paddle.concat(list[Tensor([1, 0, 18, 18],"float32"),Tensor([1, 0, 18, 18],"float32"),Tensor([1, 0, 18, 18],"float32"),Tensor([1, 0, 18, 18],"float32"),Tensor([1, 0, 18, 18],"float32"),Tensor([1, 0, 18, 18],"float32"),Tensor([1, 0, 18, 18],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 0, 18, 768],"float32"),Tensor([1, 0, 18, 768],"float32"),Tensor([1, 0, 18, 768],"float32"),Tensor([1, 0, 18, 768],"float32"),], -1, )
paddle.concat(list[Tensor([1, 0, 184],"float32"),], )
paddle.concat(list[Tensor([1, 0, 2, 8],"float32"),Tensor([1, 0, 1, 8],"float32"),], axis=2, )
paddle.concat(list[Tensor([1, 0, 2],"float32"),Tensor([1, 0, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 0, 2],"float32"),Tensor([1, 0, 2],"float32"),], axis=-2, )
paddle.concat(list[Tensor([1, 0, 2],"float32"),Tensor([1, 0, 2],"float32"),Tensor([1, 0, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 0, 2],"float32"),Tensor([1, 0, 2],"float32"),Tensor([1, 0, 2],"float32"),Tensor([1, 0, 2],"float32"),], 1, )
paddle.concat(list[Tensor([1, 0, 2],"float32"),Tensor([1, 0, 2],"float32"),Tensor([1, 0, 2],"float32"),Tensor([1, 0, 2],"float32"),Tensor([1, 0, 2],"float32"),], 1, )
paddle.concat(list[Tensor([1, 0, 20, 20],"float32"),Tensor([1, 0, 20, 20],"float32"),Tensor([1, 0, 20, 20],"float32"),Tensor([1, 0, 20, 20],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 0, 20, 20],"float32"),Tensor([1, 0, 20, 20],"float32"),Tensor([1, 0, 20, 20],"float32"),Tensor([1, 0, 20, 20],"float32"),Tensor([1, 0, 20, 20],"float32"),Tensor([1, 0, 20, 20],"float32"),Tensor([1, 0, 20, 20],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 0, 216, 2, 7],"float32"),], axis=-2, )
paddle.concat(list[Tensor([1, 0, 224, 224],"float32"),Tensor([1, 0, 224, 224],"float32"),], 0, )
paddle.concat(list[Tensor([1, 0, 24276, 1],"float32"),Tensor([1, 0, 24276, 1],"float32"),Tensor([1, 0, 24276, 1],"float32"),Tensor([1, 0, 24276, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 0, 256, 256],"float32"),], 0, )
paddle.concat(list[Tensor([1, 0, 256, 256],"float32"),Tensor([1, 0, 256, 256],"float32"),Tensor([1, 0, 256, 256],"float32"),Tensor([1, 0, 256, 256],"float32"),], 1, )
paddle.concat(list[Tensor([1, 0, 256],"float32"),], axis=0, )
paddle.concat(list[Tensor([1, 0, 256],"float32"),Tensor([1, 0, 256],"float32"),], 1, )
paddle.concat(list[Tensor([1, 0, 256],"float32"),Tensor([1, 0, 256],"float32"),Tensor([1, 0, 256],"float32"),Tensor([1, 0, 256],"float32"),], 1, )
paddle.concat(list[Tensor([1, 0, 256],"float32"),Tensor([1, 0, 256],"float32"),Tensor([1, 0, 256],"float32"),Tensor([1, 0, 256],"float32"),Tensor([1, 0, 256],"float32"),], 1, )
paddle.concat(list[Tensor([1, 0, 2704],"float32"),Tensor([1, 0, 676],"float32"),Tensor([1, 0, 169],"float32"),Tensor([1, 0, 49],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 0, 27648],"float32"),Tensor([1, 0, 6912],"float32"),Tensor([1, 0, 1728],"float32"),Tensor([1, 0, 432],"float32"),Tensor([1, 0, 108],"float32"),Tensor([1, 0, 30],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 0, 28800],"float32"),Tensor([1, 0, 7200],"float32"),Tensor([1, 0, 1800],"float32"),Tensor([1, 0, 450],"float32"),Tensor([1, 0, 117],"float32"),Tensor([1, 0, 35],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 0, 3],"float32"),Tensor([1, 0, 4],"float32"),], -1, )
paddle.concat(list[Tensor([1, 0, 3136],"float32"),Tensor([1, 0, 784],"float32"),Tensor([1, 0, 196],"float32"),Tensor([1, 0, 49],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 0, 32, 32],"float32"),Tensor([1, 0, 32, 32],"float32"),Tensor([1, 0, 32, 32],"float32"),Tensor([1, 0, 32, 32],"float32"),Tensor([1, 0, 32, 32],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 0, 32],"float32"),Tensor([1, 0, 32],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 0, 32],"float32"),Tensor([1, 0, 32],"float32"),Tensor([1, 0, 32],"float32"),Tensor([1, 0, 32],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 0, 336, 336],"float32"),Tensor([1, 0, 336, 336],"float32"),Tensor([1, 0, 336, 336],"float32"),Tensor([1, 0, 336, 336],"float32"),Tensor([1, 0, 336, 336],"float32"),Tensor([1, 0, 336, 336],"float32"),Tensor([1, 0, 336, 336],"float32"),Tensor([1, 0, 336, 336],"float32"),Tensor([1, 0, 336, 336],"float32"),Tensor([1, 0, 336, 336],"float32"),Tensor([1, 0, 336, 336],"float32"),Tensor([1, 0, 336, 336],"float32"),Tensor([1, 0, 336, 336],"float32"),Tensor([1, 0, 336, 336],"float32"),Tensor([1, 0, 336, 336],"float32"),Tensor([1, 0, 336, 336],"float32"),Tensor([1, 0, 336, 336],"float32"),Tensor([1, 0, 336, 336],"float32"),Tensor([1, 0, 336, 336],"float32"),Tensor([1, 0, 336, 336],"float32"),Tensor([1, 0, 336, 336],"float32"),Tensor([1, 0, 336, 336],"float32"),Tensor([1, 0, 336, 336],"float32"),Tensor([1, 0, 336, 336],"float32"),Tensor([1, 0, 336, 336],"float32"),Tensor([1, 0, 336, 336],"float32"),Tensor([1, 0, 336, 336],"float32"),Tensor([1, 0, 336, 336],"float32"),Tensor([1, 0, 336, 336],"float32"),Tensor([1, 0, 336, 336],"float32"),Tensor([1, 0, 336, 336],"float32"),Tensor([1, 0, 336, 336],"float32"),Tensor([1, 0, 336, 336],"float32"),Tensor([1, 0, 336, 336],"float32"),Tensor([1, 0, 336, 336],"float32"),Tensor([1, 0, 336, 336],"float32"),Tensor([1, 0, 336, 336],"float32"),Tensor([1, 0, 336, 336],"float32"),Tensor([1, 0, 336, 336],"float32"),Tensor([1, 0, 336, 336],"float32"),Tensor([1, 0, 336, 336],"float32"),Tensor([1, 0, 336, 336],"float32"),Tensor([1, 0, 336, 336],"float32"),Tensor([1, 0, 336, 336],"float32"),Tensor([1, 0, 336, 336],"float32"),Tensor([1, 0, 336, 336],"float32"),Tensor([1, 0, 336, 336],"float32"),Tensor([1, 0, 336, 336],"float32"),Tensor([1, 0, 336, 336],"float32"),Tensor([1, 0, 336, 336],"float32"),Tensor([1, 0, 336, 336],"float32"),Tensor([1, 0, 336, 336],"float32"),Tensor([1, 0, 336, 336],"float32"),Tensor([1, 0, 336, 336],"float32"),Tensor([1, 0, 336, 336],"float32"),Tensor([1, 0, 336, 336],"float32"),Tensor([1,  ...
paddle.concat(list[Tensor([1, 0, 4],"float32"),], axis=0, )
paddle.concat(list[Tensor([1, 0, 4],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 0, 4],"float32"),Tensor([1, 0, 4],"float32"),], 1, )
paddle.concat(list[Tensor([1, 0, 4],"float32"),Tensor([1, 0, 4],"float32"),], -1, )
paddle.concat(list[Tensor([1, 0, 4],"float32"),Tensor([1, 0, 4],"float32"),Tensor([1, 0, 4],"float32"),], 1, )
paddle.concat(list[Tensor([1, 0, 4],"float32"),Tensor([1, 0, 4],"float32"),Tensor([1, 0, 4],"float32"),Tensor([1, 0, 4],"float32"),Tensor([1, 0, 4],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 0, 4],"float32"),Tensor([1, 0, 4],"float32"),Tensor([1, 0, 4],"float32"),Tensor([1, 0, 4],"float32"),Tensor([1, 0, 4],"float32"),Tensor([1, 0, 4],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 0, 4800],"float32"),Tensor([1, 0, 1200],"float32"),Tensor([1, 0, 300],"float32"),Tensor([1, 0, 80],"float32"),Tensor([1, 0, 20],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 0, 5],"float32"),Tensor([1, 0, 5],"float32"),], )
paddle.concat(list[Tensor([1, 0, 62, 64],"float32"),Tensor([1, 0, 62, 64],"float32"),Tensor([1, 0, 62, 64],"float32"),Tensor([1, 0, 62, 64],"float32"),Tensor([1, 0, 62, 64],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 0, 64, 64],"float32"),Tensor([1, 0, 64, 64],"float32"),], 1, )
paddle.concat(list[Tensor([1, 0, 64],"float32"),Tensor([1, 0, 64],"float32"),Tensor([1, 0, 64],"float32"),Tensor([1, 0, 64],"float32"),Tensor([1, 0, 64],"float32"),Tensor([1, 0, 64],"float32"),Tensor([1, 0, 64],"float32"),Tensor([1, 0, 64],"float32"),Tensor([1, 0, 64],"float32"),Tensor([1, 0, 64],"float32"),Tensor([1, 0, 64],"float32"),Tensor([1, 0, 64],"float32"),Tensor([1, 0, 64],"float32"),], axis=0, )
paddle.concat(list[Tensor([1, 0, 640],"float32"),Tensor([1, 0, 640],"float32"),Tensor([1, 0, 640],"float32"),Tensor([1, 0, 640],"float32"),Tensor([1, 0, 640],"float32"),Tensor([1, 0, 640],"float32"),Tensor([1, 0, 640],"float32"),Tensor([1, 0, 640],"float32"),], 0, )
paddle.concat(list[Tensor([1, 0, 6408],"float32"),Tensor([1, 0, 1620],"float32"),Tensor([1, 0, 414],"float32"),Tensor([1, 0, 108],"float32"),Tensor([1, 0, 30],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 0],"bool"),Tensor([1, 0],"bool"),], axis=-1, )
paddle.concat(list[Tensor([1, 0],"float16"),], axis=0, name=None, )
paddle.concat(list[Tensor([1, 0],"float16"),], axis=1, name=None, )
paddle.concat(list[Tensor([1, 0],"float32"),], axis=0, name=None, )
paddle.concat(list[Tensor([1, 0],"float32"),], axis=1, name=None, )
paddle.concat(list[Tensor([1, 0],"float32"),Tensor([1, 0],"float32"),], 1, )
paddle.concat(list[Tensor([1, 0],"float32"),Tensor([1, 0],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 0],"float32"),Tensor([1, 0],"float32"),], axis=-2, )
paddle.concat(list[Tensor([1, 0],"float32"),Tensor([1, 0],"float32"),Tensor([1, 0],"float32"),Tensor([1, 0],"float32"),], )
paddle.concat(list[Tensor([1, 0],"float32"),Tensor([1, 0],"float32"),Tensor([1, 0],"float32"),Tensor([1, 0],"float32"),], 1, )
paddle.concat(list[Tensor([1, 0],"float32"),Tensor([1, 0],"float32"),Tensor([1, 0],"float32"),Tensor([1, 0],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 0],"float32"),Tensor([1, 0],"float32"),Tensor([1, 0],"float32"),Tensor([1, 0],"float32"),Tensor([1, 0],"float32"),], 1, )
paddle.concat(list[Tensor([1, 0],"float32"),Tensor([1, 0],"float32"),Tensor([1, 0],"float32"),Tensor([1, 0],"float32"),Tensor([1, 0],"float32"),Tensor([1, 0],"float32"),Tensor([1, 0],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 0],"float32"),Tensor([1, 0],"float32"),Tensor([1, 0],"float32"),Tensor([1, 0],"float32"),Tensor([1, 0],"float32"),Tensor([1, 0],"float32"),Tensor([1, 0],"float32"),Tensor([1, 0],"float32"),], )
paddle.concat(list[Tensor([1, 0],"float32"),Tensor([2, 0],"float32"),Tensor([2, 0],"float32"),Tensor([5, 0],"float32"),Tensor([8, 0],"float32"),Tensor([22, 0],"float32"),Tensor([5, 0],"float32"),Tensor([5, 0],"float32"),Tensor([18, 0],"float32"),Tensor([3, 0],"float32"),Tensor([9, 0],"float32"),Tensor([4, 0],"float32"),Tensor([1, 0],"float32"),Tensor([2, 0],"float32"),Tensor([11, 0],"float32"),Tensor([3, 0],"float32"),], )
paddle.concat(list[Tensor([1, 0],"float32"),Tensor([4, 0],"float32"),], axis=0, )
paddle.concat(list[Tensor([1, 0],"float32"),Tensor([7, 0],"float32"),], axis=0, )
paddle.concat(list[Tensor([1, 0],"float64"),Tensor([1, 0],"float64"),], axis=0, name=None, )
paddle.concat(list[Tensor([1, 0],"float64"),Tensor([1, 0],"float64"),Tensor([1, 0],"float64"),], axis=0, name=None, )
paddle.concat(list[Tensor([1, 0],"float64"),Tensor([1, 0],"float64"),Tensor([1, 0],"float64"),], axis=1, name=None, )
paddle.concat(list[Tensor([1, 0],"int32"),], )
paddle.concat(list[Tensor([1, 0],"int32"),], axis=0, )
paddle.concat(list[Tensor([1, 0],"int32"),Tensor([1, 0],"int32"),], )
paddle.concat(list[Tensor([1, 0],"int32"),Tensor([1, 0],"int32"),Tensor([1, 0],"int32"),Tensor([1, 0],"int32"),], )
paddle.concat(list[Tensor([1, 0],"int32"),Tensor([1, 0],"int32"),Tensor([1, 0],"int32"),Tensor([1, 0],"int32"),Tensor([1, 0],"int32"),Tensor([1, 0],"int32"),Tensor([1, 0],"int32"),Tensor([1, 0],"int32"),], )
paddle.concat(list[Tensor([1, 0],"int32"),Tensor([2, 0],"int32"),Tensor([2, 0],"int32"),Tensor([5, 0],"int32"),Tensor([8, 0],"int32"),Tensor([22, 0],"int32"),Tensor([5, 0],"int32"),Tensor([5, 0],"int32"),Tensor([18, 0],"int32"),Tensor([3, 0],"int32"),Tensor([9, 0],"int32"),Tensor([4, 0],"int32"),Tensor([1, 0],"int32"),Tensor([2, 0],"int32"),Tensor([11, 0],"int32"),Tensor([3, 0],"int32"),], )
paddle.concat(list[Tensor([1, 0],"int32"),Tensor([3, 0],"int32"),], )
paddle.concat(list[Tensor([1, 0],"int64"),], )
paddle.concat(list[Tensor([1, 0],"int64"),Tensor([1, 0],"int64"),], axis=1, )
paddle.concat(list[Tensor([1, 1, 0, 1],"float32"),Tensor([1, 1, 0, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 1, 0, 1],"float32"),Tensor([1, 1, 0, 1],"float32"),Tensor([1, 1, 0, 1],"float32"),Tensor([1, 1, 0, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 1, 0, 1],"float64"),], axis=0, name=None, )
paddle.concat(list[Tensor([1, 1, 0, 1],"float64"),], axis=1, name=None, )
paddle.concat(list[Tensor([1, 1, 0, 1],"float64"),], axis=2, name=None, )
paddle.concat(list[Tensor([1, 1, 0, 1],"float64"),Tensor([1, 1, 0, 1],"float64"),Tensor([1, 1, 0, 1],"float64"),], axis=0, name=None, )
paddle.concat(list[Tensor([1, 1, 0, 1],"float64"),Tensor([1, 1, 0, 1],"float64"),Tensor([1, 1, 0, 1],"float64"),], axis=1, name=None, )
paddle.concat(list[Tensor([1, 1, 0, 1],"float64"),Tensor([1, 1, 0, 1],"float64"),Tensor([1, 1, 0, 1],"float64"),], axis=2, name=None, )
paddle.concat(list[Tensor([1, 1, 0, 136],"float32"),Tensor([1, 1, 0, 136],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 1, 0, 152],"float32"),Tensor([1, 1, 0, 152],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 1, 0, 16],"float32"),Tensor([1, 1, 0, 16],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 1, 0, 176, 176],"float32"),Tensor([6, 1, 0, 176, 176],"float32"),], )
paddle.concat(list[Tensor([1, 1, 0, 184, 184],"float32"),Tensor([6, 1, 0, 184, 184],"float32"),], )
paddle.concat(list[Tensor([1, 1, 0, 2],"float32"),], )
paddle.concat(list[Tensor([1, 1, 0, 2],"float32"),Tensor([6, 1, 0, 2],"float32"),], )
paddle.concat(list[Tensor([1, 1, 0, 4],"float32"),Tensor([6, 1, 0, 4],"float32"),], )
paddle.concat(list[Tensor([1, 1, 0],"float16"),], axis=2, name=None, )
paddle.concat(list[Tensor([1, 1, 0],"float32"),], axis=2, name=None, )
paddle.concat(list[Tensor([1, 1, 0],"float32"),Tensor([1, 1, 0],"float32"),], -1, )
paddle.concat(list[Tensor([1, 1, 0],"float32"),Tensor([1, 1, 0],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 1, 0],"float32"),Tensor([1, 1, 0],"float32"),], axis=-2, )
paddle.concat(list[Tensor([1, 1, 0],"float32"),Tensor([1, 1, 0],"float32"),Tensor([1, 1, 0],"float32"),Tensor([1, 1, 0],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 1, 0],"float32"),Tensor([1, 1, 0],"float32"),Tensor([1, 1, 0],"float32"),Tensor([1, 1, 0],"float32"),Tensor([1, 1, 0],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 1, 0],"float32"),Tensor([1, 1, 0],"float32"),Tensor([1, 1, 0],"float32"),Tensor([1, 1, 0],"float32"),Tensor([1, 1, 0],"float32"),Tensor([1, 1, 0],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 1, 0],"float32"),Tensor([1, 225, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 1, 0],"float32"),Tensor([1, 4, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 1, 0],"float64"),], axis=0, name=None, )
paddle.concat(list[Tensor([1, 1, 0],"float64"),], axis=1, name=None, )
paddle.concat(list[Tensor([1, 1, 0],"float64"),Tensor([1, 1, 0],"float64"),Tensor([1, 1, 0],"float64"),], axis=0, name=None, )
paddle.concat(list[Tensor([1, 1, 0],"float64"),Tensor([1, 1, 0],"float64"),Tensor([1, 1, 0],"float64"),], axis=1, name=None, )
paddle.concat(list[Tensor([1, 1, 0],"float64"),Tensor([1, 1, 0],"float64"),Tensor([1, 1, 0],"float64"),], axis=2, name=None, )
paddle.concat(list[Tensor([1, 1, 1, 0],"float32"),Tensor([1, 1, 1, 0],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 1, 1, 0],"float64"),], axis=0, name=None, )
paddle.concat(list[Tensor([1, 1, 1, 0],"float64"),], axis=1, name=None, )
paddle.concat(list[Tensor([1, 1, 1, 0],"float64"),], axis=2, name=None, )
paddle.concat(list[Tensor([1, 1, 1, 0],"float64"),Tensor([1, 1, 1, 0],"float64"),Tensor([1, 1, 1, 0],"float64"),], axis=0, name=None, )
paddle.concat(list[Tensor([1, 1, 1, 0],"float64"),Tensor([1, 1, 1, 0],"float64"),Tensor([1, 1, 1, 0],"float64"),], axis=1, name=None, )
paddle.concat(list[Tensor([1, 1, 1, 0],"float64"),Tensor([1, 1, 1, 0],"float64"),Tensor([1, 1, 1, 0],"float64"),], axis=2, name=None, )
paddle.concat(list[Tensor([1, 1, 100, 0, 176],"float32"),Tensor([6, 1, 100, 0, 176],"float32"),], )
paddle.concat(list[Tensor([1, 1, 100, 0, 184],"float32"),Tensor([6, 1, 100, 0, 184],"float32"),], )
paddle.concat(list[Tensor([1, 1, 100, 0],"float32"),Tensor([1, 1, 100, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 1, 100, 0],"float32"),Tensor([6, 1, 100, 0],"float32"),], )
paddle.concat(list[Tensor([1, 1, 100, 176, 0],"float32"),Tensor([6, 1, 100, 176, 0],"float32"),], )
paddle.concat(list[Tensor([1, 1, 100, 184, 0],"float32"),Tensor([6, 1, 100, 184, 0],"float32"),], )
paddle.concat(list[Tensor([1, 1, 10285, 0],"float32"),Tensor([1, 1, 10285, 0],"float32"),Tensor([1, 1, 10285, 0],"float32"),Tensor([1, 1, 10285, 0],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 1, 12544, 0],"float32"),], )
paddle.concat(list[Tensor([1, 1, 24276, 0],"float32"),Tensor([1, 1, 24276, 0],"float32"),Tensor([1, 1, 24276, 0],"float32"),Tensor([1, 1, 24276, 0],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 10, 0],"float32"),Tensor([1, 10, 0],"float32"),], )
paddle.concat(list[Tensor([1, 100, 0],"float32"),Tensor([1, 300, 0],"float32"),], 1, )
paddle.concat(list[Tensor([1, 1024, 0, 18],"float32"),Tensor([1, 768, 0, 18],"float32"),Tensor([1, 768, 0, 18],"float32"),Tensor([1, 768, 0, 18],"float32"),Tensor([1, 768, 0, 18],"float32"),Tensor([1, 768, 0, 18],"float32"),Tensor([1, 768, 0, 18],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 1024, 0, 20],"float32"),Tensor([1, 768, 0, 20],"float32"),Tensor([1, 768, 0, 20],"float32"),Tensor([1, 768, 0, 20],"float32"),Tensor([1, 768, 0, 20],"float32"),Tensor([1, 768, 0, 20],"float32"),Tensor([1, 768, 0, 20],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 1024, 0],"float32"),Tensor([1, 4096, 0],"float32"),Tensor([1, 16384, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 1024, 18, 0],"float32"),Tensor([1, 768, 18, 0],"float32"),Tensor([1, 768, 18, 0],"float32"),Tensor([1, 768, 18, 0],"float32"),Tensor([1, 768, 18, 0],"float32"),Tensor([1, 768, 18, 0],"float32"),Tensor([1, 768, 18, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 1024, 20, 0],"float32"),Tensor([1, 768, 20, 0],"float32"),Tensor([1, 768, 20, 0],"float32"),Tensor([1, 768, 20, 0],"float32"),Tensor([1, 768, 20, 0],"float32"),Tensor([1, 768, 20, 0],"float32"),Tensor([1, 768, 20, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 103680, 0],"float32"),Tensor([1, 25920, 0],"float32"),Tensor([1, 6480, 0],"float32"),Tensor([1, 1620, 0],"float32"),Tensor([1, 420, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 107, 0],"float16"),Tensor([1, 107, 0],"float16"),], axis=2, )
paddle.concat(list[Tensor([1, 109, 0],"float16"),Tensor([1, 109, 0],"float16"),], axis=2, )
paddle.concat(list[Tensor([1, 11, 0],"float32"),], axis=0, )
paddle.concat(list[Tensor([1, 1100, 0],"float32"),Tensor([1, 1100, 0],"float32"),Tensor([1, 1100, 0],"float32"),Tensor([1, 1100, 0],"float32"),], axis=2, )
paddle.concat(list[Tensor([1, 128, 0, 256],"float32"),Tensor([1, 128, 0, 256],"float32"),Tensor([1, 128, 0, 256],"float32"),Tensor([1, 128, 0, 256],"float32"),], 1, )
paddle.concat(list[Tensor([1, 128, 0, 32],"float32"),Tensor([1, 32, 0, 32],"float32"),Tensor([1, 32, 0, 32],"float32"),Tensor([1, 32, 0, 32],"float32"),Tensor([1, 32, 0, 32],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 128, 0, 64],"float32"),Tensor([1, 128, 0, 64],"float32"),], 1, )
paddle.concat(list[Tensor([1, 128, 0],"int64"),Tensor([1, 128, 0],"int64"),Tensor([1, 128, 0],"int64"),Tensor([1, 128, 0],"int64"),], axis=0, )
paddle.concat(list[Tensor([1, 128, 256, 0],"float32"),Tensor([1, 128, 256, 0],"float32"),Tensor([1, 128, 256, 0],"float32"),Tensor([1, 128, 256, 0],"float32"),], 1, )
paddle.concat(list[Tensor([1, 128, 32, 0],"float32"),Tensor([1, 32, 32, 0],"float32"),Tensor([1, 32, 32, 0],"float32"),Tensor([1, 32, 32, 0],"float32"),Tensor([1, 32, 32, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 128, 64, 0],"float32"),Tensor([1, 128, 64, 0],"float32"),], 1, )
paddle.concat(list[Tensor([1, 136, 0],"float32"),Tensor([1, 136, 0],"float32"),], )
paddle.concat(list[Tensor([1, 15, 0, 2],"float32"),Tensor([1, 15, 0, 2],"float32"),], -1, )
paddle.concat(list[Tensor([1, 15, 15, 0],"float32"),Tensor([1, 15, 15, 0],"float32"),], -1, )
paddle.concat(list[Tensor([1, 16, 0, 14, 192],"float16"),Tensor([1, 16, 0, 14, 192],"float16"),Tensor([1, 16, 0, 14, 192],"float16"),Tensor([1, 16, 0, 14, 192],"float16"),], -1, )
paddle.concat(list[Tensor([1, 16, 0, 14, 192],"float32"),Tensor([1, 16, 0, 14, 192],"float32"),Tensor([1, 16, 0, 14, 192],"float32"),Tensor([1, 16, 0, 14, 192],"float32"),], -1, )
paddle.concat(list[Tensor([1, 16, 0, 2],"float32"),Tensor([1, 16, 0, 2],"float32"),], -1, )
paddle.concat(list[Tensor([1, 16, 0],"float32"),Tensor([1, 16, 0],"float32"),Tensor([1, 16, 0],"float32"),Tensor([1, 16, 0],"float32"),Tensor([1, 16, 0],"float32"),Tensor([1, 16, 0],"float32"),Tensor([1, 16, 0],"float32"),Tensor([1, 16, 0],"float32"),Tensor([1, 16, 0],"float32"),Tensor([1, 16, 0],"float32"),Tensor([1, 16, 0],"float32"),Tensor([1, 16, 0],"float32"),Tensor([1, 16, 0],"float32"),], axis=0, )
paddle.concat(list[Tensor([1, 16, 0],"int64"),Tensor([1, 16, 0],"int64"),], 0, )
paddle.concat(list[Tensor([1, 16, 14, 0, 192],"float16"),Tensor([1, 16, 14, 0, 192],"float16"),Tensor([1, 16, 14, 0, 192],"float16"),Tensor([1, 16, 14, 0, 192],"float16"),], -1, )
paddle.concat(list[Tensor([1, 16, 14, 0, 192],"float32"),Tensor([1, 16, 14, 0, 192],"float32"),Tensor([1, 16, 14, 0, 192],"float32"),Tensor([1, 16, 14, 0, 192],"float32"),], -1, )
paddle.concat(list[Tensor([1, 16, 14, 14, 0],"float16"),Tensor([1, 16, 14, 14, 0],"float16"),Tensor([1, 16, 14, 14, 0],"float16"),Tensor([1, 16, 14, 14, 0],"float16"),], -1, )
paddle.concat(list[Tensor([1, 16, 14, 14, 0],"float32"),Tensor([1, 16, 14, 14, 0],"float32"),Tensor([1, 16, 14, 14, 0],"float32"),Tensor([1, 16, 14, 14, 0],"float32"),], -1, )
paddle.concat(list[Tensor([1, 16, 16, 0],"float32"),Tensor([1, 16, 16, 0],"float32"),], -1, )
paddle.concat(list[Tensor([1, 160, 0, 18],"float32"),Tensor([1, 160, 0, 18],"float32"),], 1, )
paddle.concat(list[Tensor([1, 160, 18, 0],"float32"),Tensor([1, 160, 18, 0],"float32"),], 1, )
paddle.concat(list[Tensor([1, 176, 0],"float32"),], )
paddle.concat(list[Tensor([1, 18, 0],"float32"),Tensor([1, 18, 0],"float32"),Tensor([1, 18, 0],"float32"),Tensor([1, 18, 0],"float32"),], axis=2, )
paddle.concat(list[Tensor([1, 184, 0],"float32"),], )
paddle.concat(list[Tensor([1, 188, 0, 1, 2, 7],"float32"),Tensor([1, 188, 0, 1, 2, 7],"float32"),Tensor([1, 188, 0, 1, 2, 7],"float32"),], axis=-3, )
paddle.concat(list[Tensor([1, 188, 0, 2, 7],"float32"),Tensor([1, 188, 0, 2, 7],"float32"),Tensor([1, 188, 0, 2, 7],"float32"),], axis=-2, )
paddle.concat(list[Tensor([1, 188, 0, 2],"float32"),Tensor([1, 188, 0, 2],"float32"),Tensor([1, 188, 0, 2],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 188, 0, 2],"int32"),Tensor([1, 188, 0, 2],"int32"),Tensor([1, 188, 0, 2],"int32"),], axis=-1, )
paddle.concat(list[Tensor([1, 188, 140, 0, 2, 7],"float32"),Tensor([1, 188, 140, 0, 2, 7],"float32"),Tensor([1, 188, 140, 0, 2, 7],"float32"),], axis=-3, )
paddle.concat(list[Tensor([1, 188, 140, 0, 7],"float32"),Tensor([1, 188, 140, 0, 7],"float32"),Tensor([1, 188, 140, 0, 7],"float32"),], axis=-2, )
paddle.concat(list[Tensor([1, 188, 140, 0],"float32"),Tensor([1, 188, 140, 0],"float32"),Tensor([1, 188, 140, 0],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 188, 140, 0],"int32"),Tensor([1, 188, 140, 0],"int32"),Tensor([1, 188, 140, 0],"int32"),], axis=-1, )
paddle.concat(list[Tensor([1, 188, 140, 1, 0, 7],"float32"),Tensor([1, 188, 140, 1, 0, 7],"float32"),Tensor([1, 188, 140, 1, 0, 7],"float32"),], axis=-3, )
paddle.concat(list[Tensor([1, 188, 140, 1, 2, 0],"float32"),Tensor([1, 188, 140, 1, 2, 0],"float32"),Tensor([1, 188, 140, 1, 2, 0],"float32"),], axis=-3, )
paddle.concat(list[Tensor([1, 188, 140, 2, 0],"float32"),Tensor([1, 188, 140, 2, 0],"float32"),Tensor([1, 188, 140, 2, 0],"float32"),], axis=-2, )
paddle.concat(list[Tensor([1, 192, 0, 20],"float32"),Tensor([1, 192, 0, 20],"float32"),Tensor([1, 192, 0, 20],"float32"),Tensor([1, 192, 0, 20],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 192, 20, 0],"float32"),Tensor([1, 192, 20, 0],"float32"),Tensor([1, 192, 20, 0],"float32"),Tensor([1, 192, 20, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 2, 0],"float64"),Tensor([1, 2, 0],"float64"),], axis=2, name=None, )
paddle.concat(list[Tensor([1, 20, 0, 384],"float32"),Tensor([1, 20, 0, 384],"float32"),Tensor([1, 20, 0, 384],"float32"),Tensor([1, 20, 0, 384],"float32"),], -1, )
paddle.concat(list[Tensor([1, 20, 15, 0],"float32"),Tensor([1, 20, 15, 0],"float32"),Tensor([1, 20, 15, 0],"float32"),Tensor([1, 20, 15, 0],"float32"),], -1, )
paddle.concat(list[Tensor([1, 21504, 0],"float32"),Tensor([1, 21504, 0],"float32"),Tensor([1, 21504, 0],"float32"),], axis=-1, )
paddle.concat(list[Tensor([1, 24, 0, 768],"float32"),Tensor([1, 24, 0, 768],"float32"),Tensor([1, 24, 0, 768],"float32"),Tensor([1, 24, 0, 768],"float32"),], -1, )
paddle.concat(list[Tensor([1, 24, 18, 0],"float32"),Tensor([1, 24, 18, 0],"float32"),Tensor([1, 24, 18, 0],"float32"),Tensor([1, 24, 18, 0],"float32"),], -1, )
paddle.concat(list[Tensor([1, 248, 0, 2, 7],"float32"),], axis=-2, )
paddle.concat(list[Tensor([1, 248, 216, 0, 7],"float32"),], axis=-2, )
paddle.concat(list[Tensor([1, 248, 216, 2, 0],"float32"),], axis=-2, )
paddle.concat(list[Tensor([1, 248832, 0],"float32"),Tensor([1, 62208, 0],"float32"),Tensor([1, 15552, 0],"float32"),Tensor([1, 3888, 0],"float32"),Tensor([1, 972, 0],"float32"),Tensor([1, 270, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 256, 0, 128],"float32"),Tensor([1, 256, 0, 128],"float32"),Tensor([1, 256, 0, 128],"float32"),Tensor([1, 256, 0, 128],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 256, 0, 64],"float32"),Tensor([1, 256, 0, 64],"float32"),Tensor([1, 256, 0, 64],"float32"),Tensor([1, 256, 0, 64],"float32"),Tensor([1, 256, 0, 64],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 256, 124, 0],"float32"),Tensor([1, 256, 124, 0],"float32"),Tensor([1, 256, 124, 0],"float32"),Tensor([1, 256, 124, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 256, 62, 0],"float32"),Tensor([1, 256, 62, 0],"float32"),Tensor([1, 256, 62, 0],"float32"),Tensor([1, 256, 62, 0],"float32"),Tensor([1, 256, 62, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 2704, 0],"float32"),Tensor([1, 676, 0],"float32"),Tensor([1, 169, 0],"float32"),Tensor([1, 49, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 27648, 0],"float32"),Tensor([1, 6912, 0],"float32"),Tensor([1, 1728, 0],"float32"),Tensor([1, 432, 0],"float32"),Tensor([1, 108, 0],"float32"),], 1, )
paddle.concat(list[Tensor([1, 3, 0, 224],"float32"),Tensor([1, 3, 0, 224],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 0, 256],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 0, 336],"float32"),Tensor([1, 3, 0, 336],"float32"),Tensor([1, 3, 0, 336],"float32"),Tensor([1, 3, 0, 336],"float32"),Tensor([1, 3, 0, 336],"float32"),Tensor([1, 3, 0, 336],"float32"),Tensor([1, 3, 0, 336],"float32"),Tensor([1, 3, 0, 336],"float32"),Tensor([1, 3, 0, 336],"float32"),Tensor([1, 3, 0, 336],"float32"),Tensor([1, 3, 0, 336],"float32"),Tensor([1, 3, 0, 336],"float32"),Tensor([1, 3, 0, 336],"float32"),Tensor([1, 3, 0, 336],"float32"),Tensor([1, 3, 0, 336],"float32"),Tensor([1, 3, 0, 336],"float32"),Tensor([1, 3, 0, 336],"float32"),Tensor([1, 3, 0, 336],"float32"),Tensor([1, 3, 0, 336],"float32"),Tensor([1, 3, 0, 336],"float32"),Tensor([1, 3, 0, 336],"float32"),Tensor([1, 3, 0, 336],"float32"),Tensor([1, 3, 0, 336],"float32"),Tensor([1, 3, 0, 336],"float32"),Tensor([1, 3, 0, 336],"float32"),Tensor([1, 3, 0, 336],"float32"),Tensor([1, 3, 0, 336],"float32"),Tensor([1, 3, 0, 336],"float32"),Tensor([1, 3, 0, 336],"float32"),Tensor([1, 3, 0, 336],"float32"),Tensor([1, 3, 0, 336],"float32"),Tensor([1, 3, 0, 336],"float32"),Tensor([1, 3, 0, 336],"float32"),Tensor([1, 3, 0, 336],"float32"),Tensor([1, 3, 0, 336],"float32"),Tensor([1, 3, 0, 336],"float32"),Tensor([1, 3, 0, 336],"float32"),Tensor([1, 3, 0, 336],"float32"),Tensor([1, 3, 0, 336],"float32"),Tensor([1, 3, 0, 336],"float32"),Tensor([1, 3, 0, 336],"float32"),Tensor([1, 3, 0, 336],"float32"),Tensor([1, 3, 0, 336],"float32"),Tensor([1, 3, 0, 336],"float32"),Tensor([1, 3, 0, 336],"float32"),Tensor([1, 3, 0, 336],"float32"),Tensor([1, 3, 0, 336],"float32"),Tensor([1, 3, 0, 336],"float32"),Tensor([1, 3, 0, 336],"float32"),Tensor([1, 3, 0, 336],"float32"),Tensor([1, 3, 0, 336],"float32"),Tensor([1, 3, 0, 336],"float32"),Tensor([1, 3, 0, 336],"float32"),Tensor([1, 3, 0, 336],"float32"),Tensor([1, 3, 0, 336],"float32"),Tensor([1, 3, 0, 336],"float32"),Tensor([1, 3, 0, 336],"float32"),Tensor([1, 3, 0, 336],"float32"),Tensor([1, 3, 0, 336],"float32"),Tensor([1, 3, 0, 336],"f ...
paddle.concat(list[Tensor([1, 3, 0],"float32"),Tensor([1, 3, 0],"float32"),Tensor([1, 3, 0],"float32"),Tensor([1, 3, 0],"float32"),Tensor([1, 3, 0],"float32"),Tensor([1, 3, 0],"float32"),Tensor([1, 3, 0],"float32"),Tensor([1, 3, 0],"float32"),Tensor([1, 3, 0],"float32"),Tensor([1, 3, 0],"float32"),Tensor([1, 3, 0],"float32"),Tensor([1, 3, 0],"float32"),Tensor([1, 3, 0],"float32"),], axis=0, )
paddle.concat(list[Tensor([1, 3, 224, 0],"float32"),Tensor([1, 3, 224, 0],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 256, 0],"float32"),], 0, )
paddle.concat(list[Tensor([1, 3, 336, 0],"float32"),Tensor([1, 3, 336, 0],"float32"),Tensor([1, 3, 336, 0],"float32"),Tensor([1, 3, 336, 0],"float32"),Tensor([1, 3, 336, 0],"float32"),Tensor([1, 3, 336, 0],"float32"),Tensor([1, 3, 336, 0],"float32"),Tensor([1, 3, 336, 0],"float32"),Tensor([1, 3, 336, 0],"float32"),Tensor([1, 3, 336, 0],"float32"),Tensor([1, 3, 336, 0],"float32"),Tensor([1, 3, 336, 0],"float32"),Tensor([1, 3, 336, 0],"float32"),Tensor([1, 3, 336, 0],"float32"),Tensor([1, 3, 336, 0],"float32"),Tensor([1, 3, 336, 0],"float32"),Tensor([1, 3, 336, 0],"float32"),Tensor([1, 3, 336, 0],"float32"),Tensor([1, 3, 336, 0],"float32"),Tensor([1, 3, 336, 0],"float32"),Tensor([1, 3, 336, 0],"float32"),Tensor([1, 3, 336, 0],"float32"),Tensor([1, 3, 336, 0],"float32"),Tensor([1, 3, 336, 0],"float32"),Tensor([1, 3, 336, 0],"float32"),Tensor([1, 3, 336, 0],"float32"),Tensor([1, 3, 336, 0],"float32"),Tensor([1, 3, 336, 0],"float32"),Tensor([1, 3, 336, 0],"float32"),Tensor([1, 3, 336, 0],"float32"),Tensor([1, 3, 336, 0],"float32"),Tensor([1, 3, 336, 0],"float32"),Tensor([1, 3, 336, 0],"float32"),Tensor([1, 3, 336, 0],"float32"),Tensor([1, 3, 336, 0],"float32"),Tensor([1, 3, 336, 0],"float32"),Tensor([1, 3, 336, 0],"float32"),Tensor([1, 3, 336, 0],"float32"),Tensor([1, 3, 336, 0],"float32"),Tensor([1, 3, 336, 0],"float32"),Tensor([1, 3, 336, 0],"float32"),Tensor([1, 3, 336, 0],"float32"),Tensor([1, 3, 336, 0],"float32"),Tensor([1, 3, 336, 0],"float32"),Tensor([1, 3, 336, 0],"float32"),Tensor([1, 3, 336, 0],"float32"),Tensor([1, 3, 336, 0],"float32"),Tensor([1, 3, 336, 0],"float32"),Tensor([1, 3, 336, 0],"float32"),Tensor([1, 3, 336, 0],"float32"),Tensor([1, 3, 336, 0],"float32"),Tensor([1, 3, 336, 0],"float32"),Tensor([1, 3, 336, 0],"float32"),Tensor([1, 3, 336, 0],"float32"),Tensor([1, 3, 336, 0],"float32"),Tensor([1, 3, 336, 0],"float32"),Tensor([1, 3, 336, 0],"float32"),Tensor([1, 3, 336, 0],"float32"),Tensor([1, 3, 336, 0],"float32"),Tensor([1, 3, 336, 0],"f ...
paddle.concat(list[Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([0, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1, 3, 336, 336],"float32"),Tensor([1,  ...
paddle.concat(list[Tensor([1, 3600, 0],"float32"),Tensor([1, 900, 0],"float32"),Tensor([1, 225, 0],"float32"),], 1, )
paddle.concat(list[Tensor([1, 36000, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([1, 4, 0, 8],"float32"),Tensor([1, 4, 0, 8],"float32"),], axis=2, )
paddle.concat(list[Tensor([1, 4, 0],"float32"),Tensor([1, 4, 0],"float32"),Tensor([1, 4, 0],"float32"),], 0, )
paddle.concat(list[Tensor([1, 4, 1, 0],"float32"),Tensor([1, 4, 1, 0],"float32"),], axis=2, )
paddle.concat(list[Tensor([1, 4, 2, 0],"float32"),Tensor([1, 4, 1, 0],"float32"),], axis=2, )
paddle.concat(list[Tensor([1, 4096, 0],"float32"),Tensor([1, 1024, 0],"float32"),Tensor([1, 256, 0],"float32"),], 1, )
paddle.concat(list[Tensor([1, 4800, 0],"float32"),Tensor([1, 1200, 0],"float32"),Tensor([1, 300, 0],"float32"),Tensor([1, 80, 0],"float32"),], 1, )
paddle.concat(list[Tensor([1, 5, 0],"float64"),Tensor([1, 5, 0],"float64"),Tensor([1, 5, 0],"float64"),], axis=2, name=None, )
paddle.concat(list[Tensor([1, 500, 0],"int64"),Tensor([1, 500, 0],"int64"),Tensor([1, 500, 0],"int64"),Tensor([1, 500, 0],"int64"),Tensor([1, 500, 0],"int64"),Tensor([1, 500, 0],"int64"),Tensor([1, 500, 0],"int64"),Tensor([1, 500, 0],"int64"),Tensor([1, 500, 0],"int64"),Tensor([1, 500, 0],"int64"),Tensor([1, 500, 0],"int64"),Tensor([1, 500, 0],"int64"),Tensor([1, 500, 0],"int64"),Tensor([1, 500, 0],"int64"),Tensor([1, 500, 0],"int64"),Tensor([1, 500, 0],"int64"),Tensor([1, 500, 0],"int64"),Tensor([1, 500, 0],"int64"),Tensor([1, 500, 0],"int64"),Tensor([1, 500, 0],"int64"),], axis=0, )
paddle.concat(list[Tensor([1, 52, 0, 8],"float32"),Tensor([1, 52, 0, 8],"float32"),], axis=0, )
paddle.concat(list[Tensor([1, 52, 14, 0],"float32"),Tensor([1, 52, 14, 0],"float32"),], axis=0, )
paddle.concat(list[Tensor([1, 640, 0],"float32"),Tensor([1, 640, 0],"float32"),Tensor([1, 640, 0],"float32"),Tensor([1, 640, 0],"float32"),Tensor([1, 640, 0],"float32"),Tensor([1, 640, 0],"float32"),Tensor([1, 640, 0],"float32"),Tensor([1, 640, 0],"float32"),], 0, )
paddle.concat(list[Tensor([10, 0, 14],"int32"),Tensor([128, 0, 14],"int32"),Tensor([77, 0, 14],"int32"),Tensor([128, 0, 14],"int32"),], axis=0, )
paddle.concat(list[Tensor([10, 0],"float32"),Tensor([10, 0],"float32"),Tensor([10, 0],"float32"),Tensor([10, 0],"float32"),Tensor([10, 0],"float32"),Tensor([10, 0],"float32"),Tensor([10, 0],"float32"),], axis=-1, )
paddle.concat(list[Tensor([10, 14, 0],"int32"),Tensor([128, 14, 0],"int32"),Tensor([77, 14, 0],"int32"),Tensor([128, 14, 0],"int32"),], axis=0, )
paddle.concat(list[Tensor([100, 0],"float32"),Tensor([100, 0],"float32"),Tensor([100, 0],"float32"),Tensor([100, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([100, 0],"float32"),Tensor([400, 0],"float32"),Tensor([1600, 0],"float32"),], )
paddle.concat(list[Tensor([1000, 0],"float32"),Tensor([517, 0],"float32"),Tensor([469, 0],"float32"),Tensor([636, 0],"float32"),Tensor([221, 0],"float32"),], )
paddle.concat(list[Tensor([1000, 0],"float32"),Tensor([632, 0],"float32"),Tensor([633, 0],"float32"),Tensor([326, 0],"float32"),Tensor([236, 0],"float32"),], )
paddle.concat(list[Tensor([101376, 0],"float32"),Tensor([25344, 0],"float32"),Tensor([6336, 0],"float32"),Tensor([1584, 0],"float32"),Tensor([396, 0],"float32"),], axis=0, )
paddle.concat(list[Tensor([101376, 0],"int32"),Tensor([25344, 0],"int32"),Tensor([6336, 0],"int32"),Tensor([1584, 0],"int32"),Tensor([396, 0],"int32"),], axis=0, )
paddle.concat(list[Tensor([10240, 0],"float32"),Tensor([10240, 0],"float32"),Tensor([10240, 0],"float32"),], -1, )
paddle.concat(list[Tensor([10240, 0],"float32"),Tensor([10240, 0],"float32"),Tensor([10240, 0],"float32"),Tensor([10240, 0],"float32"),Tensor([10240, 0],"float32"),Tensor([10240, 0],"float32"),Tensor([10240, 0],"float32"),Tensor([10240, 0],"float32"),Tensor([10240, 0],"float32"),Tensor([10240, 0],"float32"),Tensor([10240, 0],"float32"),Tensor([10240, 0],"float32"),Tensor([10240, 0],"float32"),Tensor([10240, 0],"float32"),Tensor([10240, 0],"float32"),Tensor([10240, 0],"float32"),Tensor([10240, 0],"float32"),Tensor([10240, 0],"float32"),Tensor([10240, 0],"float32"),Tensor([10240, 0],"float32"),Tensor([10240, 0],"float32"),Tensor([10240, 0],"float32"),Tensor([10240, 0],"float32"),Tensor([10240, 0],"float32"),Tensor([10240, 0],"float32"),Tensor([10240, 0],"float32"),Tensor([10240, 0],"float32"),Tensor([10240, 0],"float32"),Tensor([10240, 0],"float32"),Tensor([10240, 0],"float32"),Tensor([10240, 0],"float32"),Tensor([10240, 0],"float32"),Tensor([10240, 0],"float32"),Tensor([10240, 0],"float32"),Tensor([10240, 0],"float32"),Tensor([10240, 0],"float32"),Tensor([10240, 0],"float32"),Tensor([10240, 0],"float32"),Tensor([10240, 0],"float32"),Tensor([10240, 0],"float32"),Tensor([10240, 0],"float32"),Tensor([10240, 0],"float32"),Tensor([10240, 0],"float32"),Tensor([10240, 0],"float32"),Tensor([10240, 0],"float32"),Tensor([10240, 0],"float32"),Tensor([10240, 0],"float32"),Tensor([1820, 0],"float32"),], )
paddle.concat(list[Tensor([11, 0],"float32"),], 0, )
paddle.concat(list[Tensor([11, 0],"float32"),Tensor([11, 0],"float32"),Tensor([11, 0],"float32"),Tensor([11, 0],"float32"),], axis=-1, )
paddle.concat(list[Tensor([12, 0, 10, 10, 1],"float32"),Tensor([12, 0, 10, 10, 1],"float32"),Tensor([12, 0, 10, 10, 1],"float32"),Tensor([12, 0, 10, 10, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([12, 0, 20, 20, 1],"float32"),Tensor([12, 0, 20, 20, 1],"float32"),Tensor([12, 0, 20, 20, 1],"float32"),Tensor([12, 0, 20, 20, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([12, 0],"int64"),Tensor([12, 0],"int64"),Tensor([12, 0],"int64"),], axis=1, )
paddle.concat(list[Tensor([12, 3, 0, 10, 1],"float32"),Tensor([12, 3, 0, 10, 1],"float32"),Tensor([12, 3, 0, 10, 1],"float32"),Tensor([12, 3, 0, 10, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([12, 3, 0, 20, 1],"float32"),Tensor([12, 3, 0, 20, 1],"float32"),Tensor([12, 3, 0, 20, 1],"float32"),Tensor([12, 3, 0, 20, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([12, 3, 10, 0, 1],"float32"),Tensor([12, 3, 10, 0, 1],"float32"),Tensor([12, 3, 10, 0, 1],"float32"),Tensor([12, 3, 10, 0, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([12, 3, 10, 10, 0],"float32"),Tensor([12, 3, 10, 10, 0],"float32"),Tensor([12, 3, 10, 10, 0],"float32"),Tensor([12, 3, 10, 10, 0],"float32"),], axis=-1, )
paddle.concat(list[Tensor([12, 3, 20, 0, 1],"float32"),Tensor([12, 3, 20, 0, 1],"float32"),Tensor([12, 3, 20, 0, 1],"float32"),Tensor([12, 3, 20, 0, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([12, 3, 20, 20, 0],"float32"),Tensor([12, 3, 20, 20, 0],"float32"),Tensor([12, 3, 20, 20, 0],"float32"),Tensor([12, 3, 20, 20, 0],"float32"),], axis=-1, )
paddle.concat(list[Tensor([128, 0, 28, 28],"float16"),Tensor([128, 0, 28, 28],"float16"),Tensor([128, 0, 28, 28],"float16"),Tensor([128, 0, 28, 28],"float16"),Tensor([128, 0, 28, 28],"float16"),Tensor([128, 0, 28, 28],"float16"),], axis=1, )
paddle.concat(list[Tensor([128, 0, 28, 28],"float32"),Tensor([128, 0, 28, 28],"float32"),Tensor([128, 0, 28, 28],"float32"),Tensor([128, 0, 28, 28],"float32"),Tensor([128, 0, 28, 28],"float32"),Tensor([128, 0, 28, 28],"float32"),], axis=1, )
paddle.concat(list[Tensor([128, 0],"float16"),Tensor([128, 0],"float16"),Tensor([128, 0],"float16"),], axis=1, )
paddle.concat(list[Tensor([128, 224, 0, 28],"float16"),Tensor([128, 128, 0, 28],"float16"),Tensor([128, 128, 0, 28],"float16"),Tensor([128, 128, 0, 28],"float16"),Tensor([128, 128, 0, 28],"float16"),Tensor([128, 128, 0, 28],"float16"),], axis=1, )
paddle.concat(list[Tensor([128, 224, 0, 28],"float32"),Tensor([128, 128, 0, 28],"float32"),Tensor([128, 128, 0, 28],"float32"),Tensor([128, 128, 0, 28],"float32"),Tensor([128, 128, 0, 28],"float32"),Tensor([128, 128, 0, 28],"float32"),], axis=1, )
paddle.concat(list[Tensor([128, 224, 28, 0],"float16"),Tensor([128, 128, 28, 0],"float16"),Tensor([128, 128, 28, 0],"float16"),Tensor([128, 128, 28, 0],"float16"),Tensor([128, 128, 28, 0],"float16"),Tensor([128, 128, 28, 0],"float16"),], axis=1, )
paddle.concat(list[Tensor([128, 224, 28, 0],"float32"),Tensor([128, 128, 28, 0],"float32"),Tensor([128, 128, 28, 0],"float32"),Tensor([128, 128, 28, 0],"float32"),Tensor([128, 128, 28, 0],"float32"),Tensor([128, 128, 28, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([12988, 0, 4],"float32"),Tensor([12988, 0, 3],"float32"),Tensor([12988, 0, 2],"float32"),], axis=-1, )
paddle.concat(list[Tensor([12988, 32, 0],"float32"),Tensor([12988, 32, 0],"float32"),Tensor([12988, 32, 0],"float32"),], axis=-1, )
paddle.concat(list[Tensor([13, 0, 1, 1, 8],"float32"),Tensor([13, 0, 3, 1, 8],"float32"),Tensor([13, 0, 1, 1, 8],"float32"),], axis=2, )
paddle.concat(list[Tensor([13, 0, 1, 1],"float32"),Tensor([13, 0, 1, 3],"float32"),Tensor([13, 0, 1, 1],"float32"),], axis=3, )
paddle.concat(list[Tensor([13, 0, 1, 4, 16],"float32"),Tensor([13, 0, 15, 4, 16],"float32"),], axis=2, )
paddle.concat(list[Tensor([13, 0, 1, 4, 16],"float32"),Tensor([13, 0, 7, 4, 16],"float32"),], axis=2, )
paddle.concat(list[Tensor([13, 0, 1, 5, 1, 8],"float32"),Tensor([13, 0, 3, 5, 1, 8],"float32"),Tensor([13, 0, 1, 5, 1, 8],"float32"),], axis=2, )
paddle.concat(list[Tensor([13, 0, 1, 8],"float32"),Tensor([13, 0, 5, 8],"float32"),Tensor([13, 0, 1, 8],"float32"),], axis=2, )
paddle.concat(list[Tensor([13, 0, 1],"float32"),Tensor([13, 0, 1],"float32"),Tensor([13, 0, 1],"float32"),], axis=2, )
paddle.concat(list[Tensor([13, 0, 16, 4, 16],"float32"),Tensor([13, 0, 16, 4, 16],"float32"),], axis=3, )
paddle.concat(list[Tensor([13, 0, 16, 4],"int64"),Tensor([13, 0, 16, 4],"int64"),], axis=3, )
paddle.concat(list[Tensor([13, 0, 3, 1, 1, 8],"float32"),Tensor([13, 0, 3, 1, 1, 8],"float32"),Tensor([13, 0, 3, 1, 1, 8],"float32"),], axis=3, )
paddle.concat(list[Tensor([13, 0, 3, 1, 1, 8],"float32"),Tensor([13, 0, 3, 3, 1, 8],"float32"),Tensor([13, 0, 3, 1, 1, 8],"float32"),], axis=3, )
paddle.concat(list[Tensor([13, 0, 3, 1],"float32"),], axis=1, )
paddle.concat(list[Tensor([13, 0, 32],"float32"),Tensor([13, 0, 32],"float32"),], axis=0, )
paddle.concat(list[Tensor([13, 0, 32],"float32"),Tensor([13, 0, 32],"float32"),Tensor([13, 0, 32],"float32"),], axis=2, )
paddle.concat(list[Tensor([13, 0, 4, 16, 1],"float32"),Tensor([13, 0, 4, 16, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([13, 0, 5, 1, 5],"float32"),Tensor([13, 0, 5, 1, 2],"float32"),], axis=4, )
paddle.concat(list[Tensor([13, 0, 64],"float32"),Tensor([13, 0, 64],"float32"),], axis=-2, )
paddle.concat(list[Tensor([13, 0, 8, 4, 16],"float32"),Tensor([13, 0, 8, 4, 16],"float32"),], axis=3, )
paddle.concat(list[Tensor([13, 0, 8, 4],"int64"),Tensor([13, 0, 8, 4],"int64"),], axis=3, )
paddle.concat(list[Tensor([13, 1, 0, 1],"float32"),], axis=1, )
paddle.concat(list[Tensor([13, 1, 0, 4],"int64"),Tensor([13, 1, 0, 4],"int64"),], axis=3, )
paddle.concat(list[Tensor([13, 1, 3, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([13, 1, 8, 0],"int64"),Tensor([13, 1, 8, 0],"int64"),], axis=3, )
paddle.concat(list[Tensor([13, 13, 0],"float32"),Tensor([13, 3, 0],"float32"),], axis=-2, )
paddle.concat(list[Tensor([13, 2, 0, 16, 1],"float32"),Tensor([13, 2, 0, 16, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([13, 2, 0, 4, 16],"float32"),Tensor([13, 2, 0, 4, 16],"float32"),], axis=2, )
paddle.concat(list[Tensor([13, 2, 0, 4, 16],"float32"),Tensor([13, 2, 0, 4, 16],"float32"),], axis=3, )
paddle.concat(list[Tensor([13, 2, 0, 4],"int64"),Tensor([13, 2, 0, 4],"int64"),], axis=3, )
paddle.concat(list[Tensor([13, 2, 0],"float32"),Tensor([13, 2, 0],"float32"),Tensor([13, 2, 0],"float32"),], axis=2, )
paddle.concat(list[Tensor([13, 2, 1, 0, 16],"float32"),Tensor([13, 2, 15, 0, 16],"float32"),], axis=2, )
paddle.concat(list[Tensor([13, 2, 1, 0, 16],"float32"),Tensor([13, 2, 7, 0, 16],"float32"),], axis=2, )
paddle.concat(list[Tensor([13, 2, 1, 4, 0],"float32"),Tensor([13, 2, 15, 4, 0],"float32"),], axis=2, )
paddle.concat(list[Tensor([13, 2, 1, 4, 0],"float32"),Tensor([13, 2, 7, 4, 0],"float32"),], axis=2, )
paddle.concat(list[Tensor([13, 2, 16, 0, 16],"float32"),Tensor([13, 2, 16, 0, 16],"float32"),], axis=3, )
paddle.concat(list[Tensor([13, 2, 16, 0],"int64"),Tensor([13, 2, 16, 0],"int64"),], axis=3, )
paddle.concat(list[Tensor([13, 2, 16, 4, 0],"float32"),Tensor([13, 2, 16, 4, 0],"float32"),], axis=3, )
paddle.concat(list[Tensor([13, 2, 4, 0, 1],"float32"),Tensor([13, 2, 4, 0, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([13, 2, 4, 16, 0],"float32"),Tensor([13, 2, 4, 16, 0],"float32"),], axis=-1, )
paddle.concat(list[Tensor([13, 2, 8, 0, 16],"float32"),Tensor([13, 2, 8, 0, 16],"float32"),], axis=3, )
paddle.concat(list[Tensor([13, 2, 8, 4, 0],"float32"),Tensor([13, 2, 8, 4, 0],"float32"),], axis=3, )
paddle.concat(list[Tensor([13, 3, 0],"float32"),Tensor([13, 3, 0],"float32"),Tensor([13, 3, 0],"float32"),], axis=2, )
paddle.concat(list[Tensor([13, 4, 0, 1, 1, 8],"float32"),Tensor([13, 4, 0, 1, 1, 8],"float32"),Tensor([13, 4, 0, 1, 1, 8],"float32"),], axis=3, )
paddle.concat(list[Tensor([13, 4, 0, 1, 1, 8],"float32"),Tensor([13, 4, 0, 3, 1, 8],"float32"),Tensor([13, 4, 0, 1, 1, 8],"float32"),], axis=3, )
paddle.concat(list[Tensor([13, 4, 0, 1, 5],"float32"),Tensor([13, 4, 0, 1, 2],"float32"),], axis=4, )
paddle.concat(list[Tensor([13, 4, 0, 1, 8],"float32"),Tensor([13, 4, 0, 1, 8],"float32"),Tensor([13, 4, 0, 1, 8],"float32"),], axis=2, )
paddle.concat(list[Tensor([13, 4, 0, 5, 1, 8],"float32"),Tensor([13, 4, 0, 5, 1, 8],"float32"),Tensor([13, 4, 0, 5, 1, 8],"float32"),], axis=2, )
paddle.concat(list[Tensor([13, 4, 0, 8],"float32"),Tensor([13, 4, 0, 8],"float32"),Tensor([13, 4, 0, 8],"float32"),], axis=2, )
paddle.concat(list[Tensor([13, 4, 1, 0, 1, 8],"float32"),Tensor([13, 4, 3, 0, 1, 8],"float32"),Tensor([13, 4, 1, 0, 1, 8],"float32"),], axis=2, )
paddle.concat(list[Tensor([13, 4, 1, 0, 8],"float32"),Tensor([13, 4, 3, 0, 8],"float32"),Tensor([13, 4, 1, 0, 8],"float32"),], axis=2, )
paddle.concat(list[Tensor([13, 4, 1, 0],"float32"),Tensor([13, 4, 5, 0],"float32"),Tensor([13, 4, 1, 0],"float32"),], axis=2, )
paddle.concat(list[Tensor([13, 4, 1, 1, 0],"float32"),Tensor([13, 4, 3, 1, 0],"float32"),Tensor([13, 4, 1, 1, 0],"float32"),], axis=2, )
paddle.concat(list[Tensor([13, 4, 1, 5, 0, 8],"float32"),Tensor([13, 4, 3, 5, 0, 8],"float32"),Tensor([13, 4, 1, 5, 0, 8],"float32"),], axis=2, )
paddle.concat(list[Tensor([13, 4, 1, 5, 1, 0],"float32"),Tensor([13, 4, 3, 5, 1, 0],"float32"),Tensor([13, 4, 1, 5, 1, 0],"float32"),], axis=2, )
paddle.concat(list[Tensor([13, 4, 3, 0, 1, 8],"float32"),Tensor([13, 4, 3, 0, 1, 8],"float32"),Tensor([13, 4, 3, 0, 1, 8],"float32"),], axis=3, )
paddle.concat(list[Tensor([13, 4, 3, 1, 0, 8],"float32"),Tensor([13, 4, 3, 1, 0, 8],"float32"),Tensor([13, 4, 3, 1, 0, 8],"float32"),], axis=3, )
paddle.concat(list[Tensor([13, 4, 3, 1, 0, 8],"float32"),Tensor([13, 4, 3, 3, 0, 8],"float32"),Tensor([13, 4, 3, 1, 0, 8],"float32"),], axis=3, )
paddle.concat(list[Tensor([13, 4, 3, 1, 1, 0],"float32"),Tensor([13, 4, 3, 1, 1, 0],"float32"),Tensor([13, 4, 3, 1, 1, 0],"float32"),], axis=3, )
paddle.concat(list[Tensor([13, 4, 3, 1, 1, 0],"float32"),Tensor([13, 4, 3, 3, 1, 0],"float32"),Tensor([13, 4, 3, 1, 1, 0],"float32"),], axis=3, )
paddle.concat(list[Tensor([13, 4, 5, 0, 5],"float32"),Tensor([13, 4, 5, 0, 2],"float32"),], axis=4, )
paddle.concat(list[Tensor([13, 4, 5, 1, 0],"float32"),Tensor([13, 4, 5, 1, 0],"float32"),], axis=4, )
paddle.concat(list[Tensor([13, 5, 0, 1],"float32"),Tensor([13, 5, 0, 3],"float32"),Tensor([13, 5, 0, 1],"float32"),], axis=3, )
paddle.concat(list[Tensor([13, 5, 1, 0],"float32"),Tensor([13, 5, 1, 0],"float32"),Tensor([13, 5, 1, 0],"float32"),], axis=3, )
paddle.concat(list[Tensor([13, 7, 0],"float32"),Tensor([13, 7, 0],"float32"),], axis=0, )
paddle.concat(list[Tensor([13125, 0],"float32"),Tensor([13125, 0],"float32"),Tensor([13125, 0],"float32"),], axis=-1, )
paddle.concat(list[Tensor([15000, 0],"bool"),Tensor([15000, 0],"bool"),Tensor([15000, 0],"bool"),Tensor([15000, 0],"bool"),Tensor([15000, 0],"bool"),Tensor([15000, 0],"bool"),Tensor([15000, 0],"bool"),Tensor([15000, 0],"bool"),Tensor([15000, 0],"bool"),Tensor([15000, 0],"bool"),Tensor([15000, 0],"bool"),Tensor([15000, 0],"bool"),Tensor([15000, 0],"bool"),Tensor([15000, 0],"bool"),Tensor([15000, 0],"bool"),Tensor([15000, 0],"bool"),Tensor([15000, 0],"bool"),Tensor([15000, 0],"bool"),Tensor([15000, 0],"bool"),Tensor([15000, 0],"bool"),Tensor([15000, 0],"bool"),Tensor([15000, 0],"bool"),Tensor([15000, 0],"bool"),Tensor([15000, 0],"bool"),Tensor([15000, 0],"bool"),Tensor([15000, 0],"bool"),Tensor([15000, 0],"bool"),Tensor([15000, 0],"bool"),Tensor([15000, 0],"bool"),Tensor([15000, 0],"bool"),Tensor([15000, 0],"bool"),Tensor([15000, 0],"bool"),Tensor([15000, 0],"bool"),Tensor([15000, 0],"bool"),Tensor([15000, 0],"bool"),Tensor([15000, 0],"bool"),Tensor([15000, 0],"bool"),Tensor([15000, 0],"bool"),Tensor([15000, 0],"bool"),Tensor([15000, 0],"bool"),Tensor([15000, 0],"bool"),Tensor([15000, 0],"bool"),Tensor([15000, 0],"bool"),Tensor([15000, 0],"bool"),Tensor([15000, 0],"bool"),Tensor([15000, 0],"bool"),Tensor([15000, 0],"bool"),Tensor([15000, 0],"bool"),Tensor([15000, 0],"bool"),Tensor([15000, 0],"bool"),], axis=1, )
paddle.concat(list[Tensor([1514, 0],"float32"),Tensor([1570, 0],"float32"),Tensor([1690, 0],"float32"),Tensor([1866, 0],"float32"),Tensor([406, 0],"float32"),Tensor([97, 0],"float32"),], )
paddle.concat(list[Tensor([1536, 0],"float16"),Tensor([1536, 0],"float16"),Tensor([1536, 0],"float16"),], axis=-1, )
paddle.concat(list[Tensor([16, 0, 1, 2],"float32"),Tensor([16, 0, 1, 2],"float32"),], axis=-2, )
paddle.concat(list[Tensor([16, 0, 64, 64, 2],"float32"),Tensor([16, 0, 64, 64, 2],"float32"),], axis=1, )
paddle.concat(list[Tensor([16, 0, 640, 640],"float16"),Tensor([16, 0, 640, 640],"float16"),Tensor([16, 0, 640, 640],"float16"),], axis=1, )
paddle.concat(list[Tensor([16, 0, 640, 640],"float32"),Tensor([16, 0, 640, 640],"float32"),Tensor([16, 0, 640, 640],"float32"),], axis=1, )
paddle.concat(list[Tensor([16, 1, 0, 64, 2],"float32"),Tensor([16, 10, 0, 64, 2],"float32"),], axis=1, )
paddle.concat(list[Tensor([16, 1, 0, 640],"float16"),Tensor([16, 1, 0, 640],"float16"),Tensor([16, 1, 0, 640],"float16"),], axis=1, )
paddle.concat(list[Tensor([16, 1, 0, 640],"float32"),Tensor([16, 1, 0, 640],"float32"),Tensor([16, 1, 0, 640],"float32"),], axis=1, )
paddle.concat(list[Tensor([16, 1, 64, 0, 2],"float32"),Tensor([16, 10, 64, 0, 2],"float32"),], axis=1, )
paddle.concat(list[Tensor([16, 1, 64, 64, 0],"float32"),Tensor([16, 10, 64, 64, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([16, 1, 640, 0],"float16"),Tensor([16, 1, 640, 0],"float16"),Tensor([16, 1, 640, 0],"float16"),], axis=1, )
paddle.concat(list[Tensor([16, 1, 640, 0],"float32"),Tensor([16, 1, 640, 0],"float32"),Tensor([16, 1, 640, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([16, 10, 0, 2],"float32"),Tensor([16, 10, 0, 2],"float32"),], axis=-2, )
paddle.concat(list[Tensor([16, 10, 1, 0],"float32"),Tensor([16, 10, 1, 0],"float32"),], axis=-2, )
paddle.concat(list[Tensor([18, 0],"float32"),], 0, )
paddle.concat(list[Tensor([18, 0],"float32"),Tensor([18, 0],"float32"),], -1, )
paddle.concat(list[Tensor([1820, 0],"float32"),Tensor([1820, 0],"float32"),Tensor([1820, 0],"float32"),], -1, )
paddle.concat(list[Tensor([2, 0, 240, 240],"float32"),Tensor([2, 0, 240, 240],"float32"),Tensor([2, 0, 240, 240],"float32"),Tensor([2, 0, 240, 240],"float32"),], 1, )
paddle.concat(list[Tensor([2, 0, 8],"float32"),Tensor([2, 0, 8],"float32"),Tensor([2, 0, 8],"float32"),Tensor([2, 0, 8],"float32"),Tensor([2, 0, 8],"float32"),Tensor([2, 0, 8],"float32"),Tensor([2, 0, 8],"float32"),Tensor([2, 0, 8],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 0],"float32"),Tensor([2, 0],"float32"),Tensor([2, 0],"float32"),Tensor([2, 0],"float32"),Tensor([2, 0],"float32"),Tensor([2, 0],"float32"),Tensor([2, 0],"float32"),Tensor([2, 0],"float32"),Tensor([2, 0],"float32"),Tensor([2, 0],"float32"),Tensor([2, 0],"float32"),Tensor([2, 0],"float32"),Tensor([2, 0],"float32"),Tensor([2, 0],"float32"),Tensor([2, 0],"float32"),Tensor([2, 0],"float32"),Tensor([2, 0],"float32"),Tensor([2, 0],"float32"),Tensor([2, 0],"float32"),Tensor([2, 0],"float32"),Tensor([2, 0],"float32"),Tensor([2, 0],"float32"),Tensor([2, 0],"float32"),Tensor([2, 0],"float32"),Tensor([2, 0],"float32"),], axis=0, )
paddle.concat(list[Tensor([2, 0],"float64"),Tensor([2, 0],"float64"),], axis=1, name=None, )
paddle.concat(list[Tensor([2, 0],"float64"),Tensor([2, 0],"float64"),Tensor([2, 0],"float64"),Tensor([2, 0],"float64"),Tensor([2, 0],"float64"),Tensor([2, 0],"float64"),Tensor([2, 0],"float64"),Tensor([2, 0],"float64"),Tensor([2, 0],"float64"),Tensor([2, 0],"float64"),Tensor([2, 0],"float64"),Tensor([2, 0],"float64"),], axis=1, )
paddle.concat(list[Tensor([2, 0],"int64"),Tensor([2, 0],"int64"),Tensor([2, 0],"int64"),Tensor([2, 0],"int64"),Tensor([2, 0],"int64"),Tensor([2, 0],"int64"),Tensor([2, 0],"int64"),Tensor([2, 0],"int64"),Tensor([2, 0],"int64"),Tensor([2, 0],"int64"),Tensor([2, 0],"int64"),Tensor([2, 0],"int64"),Tensor([2, 0],"int64"),Tensor([2, 0],"int64"),Tensor([2, 0],"int64"),Tensor([2, 0],"int64"),Tensor([2, 0],"int64"),Tensor([2, 0],"int64"),Tensor([2, 0],"int64"),Tensor([2, 0],"int64"),Tensor([2, 0],"int64"),Tensor([2, 0],"int64"),Tensor([2, 0],"int64"),Tensor([2, 0],"int64"),Tensor([2, 0],"int64"),], axis=0, )
paddle.concat(list[Tensor([2, 1, 0],"float32"),Tensor([2, 1, 0],"float32"),Tensor([2, 1, 0],"float32"),Tensor([2, 1, 0],"float32"),Tensor([2, 1, 0],"float32"),Tensor([2, 1, 0],"float32"),Tensor([2, 1, 0],"float32"),Tensor([2, 1, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([2, 3, 0, 240],"float32"),Tensor([2, 3, 0, 240],"float32"),Tensor([2, 3, 0, 240],"float32"),Tensor([2, 3, 0, 240],"float32"),], 1, )
paddle.concat(list[Tensor([2, 3, 240, 0],"float32"),Tensor([2, 3, 240, 0],"float32"),Tensor([2, 3, 240, 0],"float32"),Tensor([2, 3, 240, 0],"float32"),], 1, )
paddle.concat(list[Tensor([20, 0, 112, 112],"float32"),Tensor([20, 0, 112, 112],"float32"),], 0, )
paddle.concat(list[Tensor([20, 3, 0, 112],"float32"),Tensor([20, 3, 0, 112],"float32"),], 0, )
paddle.concat(list[Tensor([20, 3, 112, 0],"float32"),Tensor([20, 3, 112, 0],"float32"),], 0, )
paddle.concat(list[Tensor([216, 0, 1, 1, 2, 1],"float32"),Tensor([216, 0, 1, 1, 2, 1],"float32"),Tensor([216, 0, 1, 1, 2, 1],"float32"),Tensor([216, 0, 1, 1, 2, 3],"float32"),Tensor([216, 0, 1, 1, 2, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([216, 248, 0, 1, 2, 1],"float32"),Tensor([216, 248, 0, 1, 2, 1],"float32"),Tensor([216, 248, 0, 1, 2, 1],"float32"),Tensor([216, 248, 0, 1, 2, 3],"float32"),Tensor([216, 248, 0, 1, 2, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([216, 248, 1, 0, 2, 1],"float32"),Tensor([216, 248, 1, 0, 2, 1],"float32"),Tensor([216, 248, 1, 0, 2, 1],"float32"),Tensor([216, 248, 1, 0, 2, 3],"float32"),Tensor([216, 248, 1, 0, 2, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([216, 248, 1, 1, 0, 1],"float32"),Tensor([216, 248, 1, 1, 0, 1],"float32"),Tensor([216, 248, 1, 1, 0, 1],"float32"),Tensor([216, 248, 1, 1, 0, 3],"float32"),Tensor([216, 248, 1, 1, 0, 1],"float32"),], axis=-1, )
paddle.concat(list[Tensor([216, 248, 1, 1, 2, 0],"float32"),Tensor([216, 248, 1, 1, 2, 0],"float32"),Tensor([216, 248, 1, 1, 2, 0],"float32"),Tensor([216, 248, 1, 1, 2, 0],"float32"),Tensor([216, 248, 1, 1, 2, 0],"float32"),], axis=-1, )
paddle.concat(list[Tensor([21955, 0, 5],"float32"),Tensor([20524, 0, 5],"float32"),Tensor([19780, 0, 5],"float32"),Tensor([17980, 0, 5],"float32"),Tensor([14701, 0, 5],"float32"),Tensor([25757, 0, 5],"float32"),Tensor([27860, 0, 5],"float32"),Tensor([22071, 0, 5],"float32"),], axis=0, )
paddle.concat(list[Tensor([21955, 0],"int32"),Tensor([20524, 0],"int32"),Tensor([19780, 0],"int32"),Tensor([17980, 0],"int32"),], axis=0, )
paddle.concat(list[Tensor([21955, 0],"int32"),Tensor([20524, 0],"int32"),Tensor([19780, 0],"int32"),Tensor([17980, 0],"int32"),Tensor([14701, 0],"int32"),Tensor([25757, 0],"int32"),Tensor([27860, 0],"int32"),Tensor([22071, 0],"int32"),], axis=0, )
paddle.concat(list[Tensor([21955, 20, 0],"float32"),Tensor([20524, 20, 0],"float32"),Tensor([19780, 20, 0],"float32"),Tensor([17980, 20, 0],"float32"),Tensor([14701, 20, 0],"float32"),Tensor([25757, 20, 0],"float32"),Tensor([27860, 20, 0],"float32"),Tensor([22071, 20, 0],"float32"),], axis=0, )
paddle.concat(list[Tensor([24, 0],"float32"),Tensor([24, 0],"float32"),], 1, )
paddle.concat(list[Tensor([256, 0, 1],"float32"),Tensor([256, 0, 1],"float32"),], 2, )
paddle.concat(list[Tensor([256, 256, 0],"float32"),Tensor([256, 256, 0],"float32"),], 2, )
paddle.concat(list[Tensor([27648, 0],"float32"),Tensor([6912, 0],"float32"),Tensor([1728, 0],"float32"),Tensor([432, 0],"float32"),Tensor([108, 0],"float32"),Tensor([30, 0],"float32"),], axis=0, )
paddle.concat(list[Tensor([28800, 0],"float32"),Tensor([7200, 0],"float32"),Tensor([1800, 0],"float32"),Tensor([450, 0],"float32"),Tensor([117, 0],"float32"),Tensor([35, 0],"float32"),], axis=0, )
paddle.concat(list[Tensor([3, 0, 120],"float64"),Tensor([3, 0, 120],"float64"),], axis=0, )
paddle.concat(list[Tensor([3, 0, 2, 5],"float64"),], axis=0, name=None, )
paddle.concat(list[Tensor([3, 0, 2, 5],"float64"),], axis=1, name=None, )
paddle.concat(list[Tensor([3, 0, 2, 5],"float64"),], axis=2, name=None, )
paddle.concat(list[Tensor([3, 0, 2, 5],"float64"),Tensor([3, 0, 2, 5],"float64"),Tensor([3, 0, 2, 5],"float64"),], axis=0, name=None, )
paddle.concat(list[Tensor([3, 0, 2, 5],"float64"),Tensor([3, 0, 2, 5],"float64"),Tensor([3, 0, 2, 5],"float64"),], axis=1, name=None, )
paddle.concat(list[Tensor([3, 0, 2, 5],"float64"),Tensor([3, 0, 2, 5],"float64"),Tensor([3, 0, 2, 5],"float64"),], axis=2, name=None, )
paddle.concat(list[Tensor([3, 0, 2],"float64"),], axis=0, name=None, )
paddle.concat(list[Tensor([3, 0, 2],"float64"),], axis=1, name=None, )
paddle.concat(list[Tensor([3, 0, 2],"float64"),Tensor([3, 0, 2],"float64"),Tensor([3, 0, 2],"float64"),], axis=0, name=None, )
paddle.concat(list[Tensor([3, 0, 2],"float64"),Tensor([3, 0, 2],"float64"),Tensor([3, 0, 2],"float64"),], axis=1, name=None, )
paddle.concat(list[Tensor([3, 0],"float16"),Tensor([18, 0],"float16"),Tensor([18, 0],"float16"),], 0, )
paddle.concat(list[Tensor([3, 0],"float32"),Tensor([18, 0],"float32"),Tensor([18, 0],"float32"),], 0, )
paddle.concat(list[Tensor([3, 0],"float32"),Tensor([3, 0],"float32"),], -1, )
paddle.concat(list[Tensor([3, 0],"float64"),Tensor([3, 0],"float64"),Tensor([3, 0],"float64"),], axis=1, name=None, )
paddle.concat(list[Tensor([3, 0],"float64"),Tensor([3, 0],"float64"),Tensor([3, 0],"float64"),Tensor([3, 0],"float64"),Tensor([3, 0],"float64"),Tensor([3, 0],"float64"),], axis=1, )
paddle.concat(list[Tensor([3, 100, 0],"float64"),Tensor([3, 100, 0],"float64"),], axis=0, )
paddle.concat(list[Tensor([3, 4, 0, 5],"float64"),], axis=0, name=None, )
paddle.concat(list[Tensor([3, 4, 0, 5],"float64"),], axis=1, name=None, )
paddle.concat(list[Tensor([3, 4, 0, 5],"float64"),], axis=2, name=None, )
paddle.concat(list[Tensor([3, 4, 0, 5],"float64"),Tensor([3, 4, 0, 5],"float64"),Tensor([3, 4, 0, 5],"float64"),], axis=0, name=None, )
paddle.concat(list[Tensor([3, 4, 0, 5],"float64"),Tensor([3, 4, 0, 5],"float64"),Tensor([3, 4, 0, 5],"float64"),], axis=1, name=None, )
paddle.concat(list[Tensor([3, 4, 0, 5],"float64"),Tensor([3, 4, 0, 5],"float64"),Tensor([3, 4, 0, 5],"float64"),], axis=2, name=None, )
paddle.concat(list[Tensor([3, 4, 0],"float64"),], axis=0, name=None, )
paddle.concat(list[Tensor([3, 4, 0],"float64"),], axis=1, name=None, )
paddle.concat(list[Tensor([3, 4, 0],"float64"),Tensor([3, 4, 0],"float64"),Tensor([3, 4, 0],"float64"),], axis=0, name=None, )
paddle.concat(list[Tensor([3, 4, 0],"float64"),Tensor([3, 4, 0],"float64"),Tensor([3, 4, 0],"float64"),], axis=1, name=None, )
paddle.concat(list[Tensor([3, 4, 2, 0],"float64"),], axis=0, name=None, )
paddle.concat(list[Tensor([3, 4, 2, 0],"float64"),], axis=1, name=None, )
paddle.concat(list[Tensor([3, 4, 2, 0],"float64"),], axis=2, name=None, )
paddle.concat(list[Tensor([3, 4, 2, 0],"float64"),Tensor([3, 4, 2, 0],"float64"),Tensor([3, 4, 2, 0],"float64"),], axis=0, name=None, )
paddle.concat(list[Tensor([3, 4, 2, 0],"float64"),Tensor([3, 4, 2, 0],"float64"),Tensor([3, 4, 2, 0],"float64"),], axis=1, name=None, )
paddle.concat(list[Tensor([3, 4, 2, 0],"float64"),Tensor([3, 4, 2, 0],"float64"),Tensor([3, 4, 2, 0],"float64"),], axis=2, name=None, )
paddle.concat(list[Tensor([4, 0, 918],"float16"),Tensor([4, 0, 918],"float16"),Tensor([4, 0, 918],"float16"),Tensor([4, 0, 918],"float16"),Tensor([4, 0, 918],"float16"),Tensor([4, 0, 918],"float16"),Tensor([4, 0, 918],"float16"),Tensor([4, 0, 918],"float16"),Tensor([4, 0, 918],"float16"),Tensor([4, 0, 918],"float16"),Tensor([4, 0, 918],"float16"),Tensor([4, 0, 918],"float16"),], axis=-1, )
paddle.concat(list[Tensor([4, 0],"float32"),], 1, )
paddle.concat(list[Tensor([4, 0],"float32"),Tensor([4, 0],"float32"),Tensor([4, 0],"float32"),], 1, )
paddle.concat(list[Tensor([4, 304, 0],"float16"),Tensor([4, 304, 0],"float16"),Tensor([4, 304, 0],"float16"),Tensor([4, 304, 0],"float16"),Tensor([4, 304, 0],"float16"),Tensor([4, 304, 0],"float16"),Tensor([4, 304, 0],"float16"),Tensor([4, 304, 0],"float16"),Tensor([4, 304, 0],"float16"),Tensor([4, 304, 0],"float16"),Tensor([4, 304, 0],"float16"),Tensor([4, 304, 0],"float16"),], axis=-1, )
paddle.concat(list[Tensor([4, 346, 0],"float16"),Tensor([4, 346, 0],"float16"),Tensor([4, 346, 0],"float16"),Tensor([4, 346, 0],"float16"),Tensor([4, 346, 0],"float16"),Tensor([4, 346, 0],"float16"),Tensor([4, 346, 0],"float16"),Tensor([4, 346, 0],"float16"),Tensor([4, 346, 0],"float16"),Tensor([4, 346, 0],"float16"),Tensor([4, 346, 0],"float16"),Tensor([4, 346, 0],"float16"),], axis=-1, )
paddle.concat(list[Tensor([40, 0, 50, 5],"float32"),Tensor([60, 0, 50, 5],"float32"),], axis=0, )
paddle.concat(list[Tensor([40, 0, 8],"float32"),Tensor([40, 0, 8],"float32"),Tensor([40, 0, 8],"float32"),Tensor([40, 0, 8],"float32"),Tensor([40, 0, 8],"float32"),Tensor([40, 0, 8],"float32"),Tensor([40, 0, 8],"float32"),Tensor([40, 0, 8],"float32"),Tensor([40, 0, 8],"float32"),Tensor([40, 0, 8],"float32"),Tensor([40, 0, 8],"float32"),Tensor([40, 0, 8],"float32"),Tensor([40, 0, 8],"float32"),Tensor([40, 0, 8],"float32"),Tensor([40, 0, 8],"float32"),Tensor([40, 0, 8],"float32"),Tensor([40, 0, 8],"float32"),Tensor([40, 0, 8],"float32"),Tensor([40, 0, 8],"float32"),Tensor([40, 0, 8],"float32"),Tensor([40, 0, 8],"float32"),Tensor([40, 0, 8],"float32"),Tensor([40, 0, 8],"float32"),Tensor([40, 0, 8],"float32"),Tensor([40, 0, 8],"float32"),Tensor([40, 0, 8],"float32"),Tensor([40, 0, 8],"float32"),Tensor([40, 0, 8],"float32"),Tensor([40, 0, 8],"float32"),Tensor([40, 0, 8],"float32"),Tensor([40, 0, 8],"float32"),Tensor([40, 0, 8],"float32"),Tensor([40, 0, 8],"float32"),Tensor([40, 0, 8],"float32"),Tensor([40, 0, 8],"float32"),Tensor([40, 0, 8],"float32"),Tensor([40, 0, 8],"float32"),Tensor([40, 0, 8],"float32"),Tensor([40, 0, 8],"float32"),Tensor([40, 0, 8],"float32"),Tensor([40, 0, 8],"float32"),Tensor([40, 0, 8],"float32"),Tensor([40, 0, 8],"float32"),Tensor([40, 0, 8],"float32"),Tensor([40, 0, 8],"float32"),Tensor([40, 0, 8],"float32"),Tensor([40, 0, 8],"float32"),Tensor([40, 0, 8],"float32"),Tensor([40, 0, 8],"float32"),Tensor([40, 0, 8],"float32"),Tensor([40, 0, 8],"float32"),Tensor([40, 0, 8],"float32"),], axis=0, )
paddle.concat(list[Tensor([40, 0],"float32"),Tensor([40, 0],"float32"),Tensor([40, 0],"float32"),Tensor([40, 0],"float32"),Tensor([40, 0],"float32"),Tensor([40, 0],"float32"),Tensor([40, 0],"float32"),Tensor([40, 0],"float32"),Tensor([40, 0],"float32"),Tensor([40, 0],"float32"),Tensor([40, 0],"float32"),Tensor([40, 0],"float32"),Tensor([40, 0],"float32"),], 0, )
paddle.concat(list[Tensor([40, 0],"float32"),Tensor([40, 0],"float32"),Tensor([40, 0],"float32"),Tensor([40, 0],"float32"),Tensor([40, 0],"float32"),Tensor([40, 0],"float32"),Tensor([40, 0],"float32"),Tensor([40, 0],"float32"),Tensor([40, 0],"float32"),Tensor([40, 0],"float32"),Tensor([40, 0],"float32"),Tensor([40, 0],"float32"),Tensor([40, 0],"float32"),Tensor([40, 0],"float32"),Tensor([40, 0],"float32"),Tensor([40, 0],"float32"),Tensor([40, 0],"float32"),Tensor([40, 0],"float32"),Tensor([40, 0],"float32"),Tensor([40, 0],"float32"),Tensor([40, 0],"float32"),Tensor([40, 0],"float32"),Tensor([40, 0],"float32"),Tensor([40, 0],"float32"),Tensor([40, 0],"float32"),Tensor([40, 0],"float32"),Tensor([40, 0],"float32"),Tensor([40, 0],"float32"),Tensor([40, 0],"float32"),Tensor([40, 0],"float32"),Tensor([40, 0],"float32"),Tensor([40, 0],"float32"),Tensor([40, 0],"float32"),Tensor([40, 0],"float32"),Tensor([40, 0],"float32"),Tensor([40, 0],"float32"),Tensor([40, 0],"float32"),Tensor([40, 0],"float32"),Tensor([40, 0],"float32"),Tensor([40, 0],"float32"),Tensor([40, 0],"float32"),Tensor([40, 0],"float32"),Tensor([40, 0],"float32"),Tensor([40, 0],"float32"),Tensor([40, 0],"float32"),Tensor([40, 0],"float32"),Tensor([40, 0],"float32"),Tensor([40, 0],"float32"),Tensor([40, 0],"float32"),Tensor([40, 0],"float32"),Tensor([40, 0],"float32"),Tensor([40, 0],"float32"),], 0, )
paddle.concat(list[Tensor([40, 1, 0],"float32"),Tensor([40, 1, 0],"float32"),Tensor([40, 1, 0],"float32"),Tensor([40, 1, 0],"float32"),Tensor([40, 1, 0],"float32"),Tensor([40, 1, 0],"float32"),Tensor([40, 1, 0],"float32"),Tensor([40, 1, 0],"float32"),Tensor([40, 1, 0],"float32"),Tensor([40, 1, 0],"float32"),Tensor([40, 1, 0],"float32"),Tensor([40, 1, 0],"float32"),Tensor([40, 1, 0],"float32"),Tensor([40, 1, 0],"float32"),Tensor([40, 1, 0],"float32"),Tensor([40, 1, 0],"float32"),Tensor([40, 1, 0],"float32"),Tensor([40, 1, 0],"float32"),Tensor([40, 1, 0],"float32"),Tensor([40, 1, 0],"float32"),Tensor([40, 1, 0],"float32"),Tensor([40, 1, 0],"float32"),Tensor([40, 1, 0],"float32"),Tensor([40, 1, 0],"float32"),Tensor([40, 1, 0],"float32"),Tensor([40, 1, 0],"float32"),Tensor([40, 1, 0],"float32"),Tensor([40, 1, 0],"float32"),Tensor([40, 1, 0],"float32"),Tensor([40, 1, 0],"float32"),Tensor([40, 1, 0],"float32"),Tensor([40, 1, 0],"float32"),Tensor([40, 1, 0],"float32"),Tensor([40, 1, 0],"float32"),Tensor([40, 1, 0],"float32"),Tensor([40, 1, 0],"float32"),Tensor([40, 1, 0],"float32"),Tensor([40, 1, 0],"float32"),Tensor([40, 1, 0],"float32"),Tensor([40, 1, 0],"float32"),Tensor([40, 1, 0],"float32"),Tensor([40, 1, 0],"float32"),Tensor([40, 1, 0],"float32"),Tensor([40, 1, 0],"float32"),Tensor([40, 1, 0],"float32"),Tensor([40, 1, 0],"float32"),Tensor([40, 1, 0],"float32"),Tensor([40, 1, 0],"float32"),Tensor([40, 1, 0],"float32"),Tensor([40, 1, 0],"float32"),Tensor([40, 1, 0],"float32"),Tensor([40, 1, 0],"float32"),], axis=0, )
paddle.concat(list[Tensor([40, 50, 0, 5],"float32"),Tensor([60, 50, 0, 5],"float32"),], axis=0, )
paddle.concat(list[Tensor([40, 50, 50, 0],"float32"),Tensor([60, 50, 50, 0],"float32"),], axis=0, )
paddle.concat(list[Tensor([5, 0, 1],"float32"),Tensor([5, 0, 1],"float32"),], 2, )
paddle.concat(list[Tensor([5, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([5, 5, 0],"float32"),Tensor([5, 5, 0],"float32"),], 2, )
paddle.concat(list[Tensor([512, 0],"float32"),Tensor([512, 0],"float32"),Tensor([512, 0],"float32"),Tensor([512, 0],"float32"),Tensor([512, 0],"float32"),Tensor([512, 0],"float32"),Tensor([512, 0],"float32"),Tensor([512, 0],"float32"),Tensor([512, 0],"float32"),Tensor([512, 0],"float32"),Tensor([512, 0],"float32"),Tensor([512, 0],"float32"),Tensor([512, 0],"float32"),Tensor([512, 0],"float32"),Tensor([512, 0],"float32"),Tensor([512, 0],"float32"),], axis=-1, )
paddle.concat(list[Tensor([512, 0],"float32"),Tensor([512, 0],"float32"),Tensor([512, 0],"float32"),Tensor([512, 0],"float32"),Tensor([512, 0],"float32"),Tensor([512, 0],"float32"),Tensor([512, 0],"float32"),Tensor([512, 0],"float32"),Tensor([512, 0],"float32"),Tensor([512, 0],"float32"),Tensor([512, 0],"float32"),Tensor([512, 0],"float32"),Tensor([512, 0],"float32"),Tensor([512, 0],"float32"),Tensor([512, 0],"float32"),Tensor([512, 0],"float32"),Tensor([512, 0],"float32"),Tensor([512, 0],"float32"),Tensor([512, 0],"float32"),Tensor([512, 0],"float32"),Tensor([512, 0],"float32"),Tensor([512, 0],"float32"),Tensor([512, 0],"float32"),Tensor([512, 0],"float32"),Tensor([512, 0],"float32"),Tensor([512, 0],"float32"),Tensor([512, 0],"float32"),Tensor([512, 0],"float32"),Tensor([512, 0],"float32"),Tensor([512, 0],"float32"),Tensor([512, 0],"float32"),Tensor([512, 0],"float32"),Tensor([512, 0],"float32"),Tensor([512, 0],"float32"),Tensor([512, 0],"float32"),Tensor([512, 0],"float32"),Tensor([512, 0],"float32"),Tensor([512, 0],"float32"),Tensor([512, 0],"float32"),Tensor([512, 0],"float32"),Tensor([512, 0],"float32"),Tensor([512, 0],"float32"),Tensor([512, 0],"float32"),Tensor([512, 0],"float32"),Tensor([512, 0],"float32"),Tensor([512, 0],"float32"),Tensor([512, 0],"float32"),Tensor([512, 0],"float32"),], axis=-1, )
paddle.concat(list[Tensor([52, 0, 1, 1, 8],"float32"),Tensor([52, 0, 3, 1, 8],"float32"),Tensor([52, 0, 1, 1, 8],"float32"),], axis=2, )
paddle.concat(list[Tensor([52, 0, 1, 1],"float32"),Tensor([52, 0, 1, 3],"float32"),Tensor([52, 0, 1, 1],"float32"),], axis=3, )
paddle.concat(list[Tensor([52, 0, 1, 5, 1, 8],"float32"),Tensor([52, 0, 3, 5, 1, 8],"float32"),Tensor([52, 0, 1, 5, 1, 8],"float32"),], axis=2, )
paddle.concat(list[Tensor([52, 0, 1, 8],"float32"),Tensor([52, 0, 5, 8],"float32"),Tensor([52, 0, 1, 8],"float32"),], axis=2, )
paddle.concat(list[Tensor([52, 0, 3, 1],"float32"),], axis=1, )
paddle.concat(list[Tensor([52, 0, 5, 1, 5],"float32"),Tensor([52, 0, 5, 1, 2],"float32"),], axis=4, )
paddle.concat(list[Tensor([52, 1, 0, 1],"float32"),], axis=1, )
paddle.concat(list[Tensor([52, 1, 3, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([52, 4, 0, 1, 5],"float32"),Tensor([52, 4, 0, 1, 2],"float32"),], axis=4, )
paddle.concat(list[Tensor([52, 4, 0, 1, 8],"float32"),Tensor([52, 4, 0, 1, 8],"float32"),Tensor([52, 4, 0, 1, 8],"float32"),], axis=2, )
paddle.concat(list[Tensor([52, 4, 0, 5, 1, 8],"float32"),Tensor([52, 4, 0, 5, 1, 8],"float32"),Tensor([52, 4, 0, 5, 1, 8],"float32"),], axis=2, )
paddle.concat(list[Tensor([52, 4, 0, 8],"float32"),Tensor([52, 4, 0, 8],"float32"),Tensor([52, 4, 0, 8],"float32"),], axis=2, )
paddle.concat(list[Tensor([52, 4, 1, 0, 1, 8],"float32"),Tensor([52, 4, 3, 0, 1, 8],"float32"),Tensor([52, 4, 1, 0, 1, 8],"float32"),], axis=2, )
paddle.concat(list[Tensor([52, 4, 1, 0, 8],"float32"),Tensor([52, 4, 3, 0, 8],"float32"),Tensor([52, 4, 1, 0, 8],"float32"),], axis=2, )
paddle.concat(list[Tensor([52, 4, 1, 0],"float32"),Tensor([52, 4, 5, 0],"float32"),Tensor([52, 4, 1, 0],"float32"),], axis=2, )
paddle.concat(list[Tensor([52, 4, 1, 1, 0],"float32"),Tensor([52, 4, 3, 1, 0],"float32"),Tensor([52, 4, 1, 1, 0],"float32"),], axis=2, )
paddle.concat(list[Tensor([52, 4, 1, 5, 0, 8],"float32"),Tensor([52, 4, 3, 5, 0, 8],"float32"),Tensor([52, 4, 1, 5, 0, 8],"float32"),], axis=2, )
paddle.concat(list[Tensor([52, 4, 1, 5, 1, 0],"float32"),Tensor([52, 4, 3, 5, 1, 0],"float32"),Tensor([52, 4, 1, 5, 1, 0],"float32"),], axis=2, )
paddle.concat(list[Tensor([52, 4, 5, 0, 5],"float32"),Tensor([52, 4, 5, 0, 2],"float32"),], axis=4, )
paddle.concat(list[Tensor([52, 4, 5, 1, 0],"float32"),Tensor([52, 4, 5, 1, 0],"float32"),], axis=4, )
paddle.concat(list[Tensor([52, 5, 0, 1],"float32"),Tensor([52, 5, 0, 3],"float32"),Tensor([52, 5, 0, 1],"float32"),], axis=3, )
paddle.concat(list[Tensor([52, 5, 1, 0],"float32"),Tensor([52, 5, 1, 0],"float32"),Tensor([52, 5, 1, 0],"float32"),], axis=3, )
paddle.concat(list[Tensor([56, 0, 16, 16],"float32"),Tensor([56, 0, 16, 16],"float32"),Tensor([56, 0, 16, 16],"float32"),], 1, )
paddle.concat(list[Tensor([56, 0, 2, 2],"float32"),Tensor([56, 0, 2, 2],"float32"),Tensor([56, 0, 2, 2],"float32"),], 1, )
paddle.concat(list[Tensor([56, 3, 0, 16],"float32"),Tensor([56, 3, 0, 16],"float32"),Tensor([56, 2, 0, 16],"float32"),], 1, )
paddle.concat(list[Tensor([56, 3, 0, 2],"float32"),Tensor([56, 3, 0, 2],"float32"),Tensor([56, 2, 0, 2],"float32"),], 1, )
paddle.concat(list[Tensor([56, 3, 16, 0],"float32"),Tensor([56, 3, 16, 0],"float32"),Tensor([56, 2, 16, 0],"float32"),], 1, )
paddle.concat(list[Tensor([56, 3, 2, 0],"float32"),Tensor([56, 3, 2, 0],"float32"),Tensor([56, 2, 2, 0],"float32"),], 1, )
paddle.concat(list[Tensor([60000, 0],"bool"),Tensor([60000, 0],"bool"),Tensor([60000, 0],"bool"),Tensor([60000, 0],"bool"),Tensor([60000, 0],"bool"),Tensor([60000, 0],"bool"),Tensor([60000, 0],"bool"),Tensor([60000, 0],"bool"),Tensor([60000, 0],"bool"),Tensor([60000, 0],"bool"),Tensor([60000, 0],"bool"),Tensor([60000, 0],"bool"),Tensor([60000, 0],"bool"),Tensor([60000, 0],"bool"),Tensor([60000, 0],"bool"),Tensor([60000, 0],"bool"),Tensor([60000, 0],"bool"),Tensor([60000, 0],"bool"),Tensor([60000, 0],"bool"),Tensor([60000, 0],"bool"),Tensor([60000, 0],"bool"),Tensor([60000, 0],"bool"),Tensor([60000, 0],"bool"),Tensor([60000, 0],"bool"),Tensor([60000, 0],"bool"),Tensor([60000, 0],"bool"),Tensor([60000, 0],"bool"),Tensor([60000, 0],"bool"),Tensor([60000, 0],"bool"),Tensor([60000, 0],"bool"),Tensor([60000, 0],"bool"),Tensor([60000, 0],"bool"),Tensor([60000, 0],"bool"),Tensor([60000, 0],"bool"),Tensor([60000, 0],"bool"),Tensor([60000, 0],"bool"),Tensor([60000, 0],"bool"),Tensor([60000, 0],"bool"),Tensor([60000, 0],"bool"),Tensor([60000, 0],"bool"),Tensor([60000, 0],"bool"),Tensor([60000, 0],"bool"),Tensor([60000, 0],"bool"),Tensor([60000, 0],"bool"),Tensor([60000, 0],"bool"),Tensor([60000, 0],"bool"),Tensor([60000, 0],"bool"),Tensor([60000, 0],"bool"),Tensor([60000, 0],"bool"),Tensor([60000, 0],"bool"),], axis=1, )
paddle.concat(list[Tensor([64, 0, 56, 56],"float32"),Tensor([64, 0, 56, 56],"float32"),Tensor([64, 0, 56, 56],"float32"),Tensor([64, 0, 56, 56],"float32"),Tensor([64, 0, 56, 56],"float32"),Tensor([64, 0, 56, 56],"float32"),Tensor([64, 0, 56, 56],"float32"),Tensor([64, 0, 56, 56],"float32"),], axis=1, )
paddle.concat(list[Tensor([64, 0, 7, 7],"float32"),Tensor([64, 0, 7, 7],"float32"),Tensor([64, 0, 7, 7],"float32"),Tensor([64, 0, 7, 7],"float32"),Tensor([64, 0, 7, 7],"float32"),Tensor([64, 0, 7, 7],"float32"),Tensor([64, 0, 7, 7],"float32"),Tensor([64, 0, 7, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([64, 0],"float32"),Tensor([64, 0],"float32"),], 0, )
paddle.concat(list[Tensor([64, 0],"float32"),Tensor([64, 0],"float32"),Tensor([64, 0],"float32"),Tensor([64, 0],"float32"),], 0, )
paddle.concat(list[Tensor([64, 0],"float32"),Tensor([64, 0],"float32"),Tensor([64, 0],"float32"),Tensor([64, 0],"float32"),Tensor([64, 0],"float32"),Tensor([64, 0],"float32"),Tensor([64, 0],"float32"),Tensor([64, 0],"float32"),], 0, )
paddle.concat(list[Tensor([64, 1280, 0, 7],"float32"),Tensor([64, 288, 0, 7],"float32"),Tensor([64, 288, 0, 7],"float32"),Tensor([64, 288, 0, 7],"float32"),Tensor([64, 288, 0, 7],"float32"),Tensor([64, 288, 0, 7],"float32"),Tensor([64, 288, 0, 7],"float32"),Tensor([64, 288, 0, 7],"float32"),], axis=1, )
paddle.concat(list[Tensor([64, 1280, 7, 0],"float32"),Tensor([64, 288, 7, 0],"float32"),Tensor([64, 288, 7, 0],"float32"),Tensor([64, 288, 7, 0],"float32"),Tensor([64, 288, 7, 0],"float32"),Tensor([64, 288, 7, 0],"float32"),Tensor([64, 288, 7, 0],"float32"),Tensor([64, 288, 7, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([64, 160, 0, 56],"float32"),Tensor([64, 192, 0, 56],"float32"),Tensor([64, 192, 0, 56],"float32"),Tensor([64, 192, 0, 56],"float32"),Tensor([64, 192, 0, 56],"float32"),Tensor([64, 192, 0, 56],"float32"),Tensor([64, 192, 0, 56],"float32"),Tensor([64, 192, 0, 56],"float32"),], axis=1, )
paddle.concat(list[Tensor([64, 160, 56, 0],"float32"),Tensor([64, 192, 56, 0],"float32"),Tensor([64, 192, 56, 0],"float32"),Tensor([64, 192, 56, 0],"float32"),Tensor([64, 192, 56, 0],"float32"),Tensor([64, 192, 56, 0],"float32"),Tensor([64, 192, 56, 0],"float32"),Tensor([64, 192, 56, 0],"float32"),], axis=1, )
paddle.concat(list[Tensor([8, 0, 128, 64],"float32"),Tensor([8, 0, 1, 64],"float32"),], axis=-2, )
paddle.concat(list[Tensor([8, 16, 0, 64],"float32"),Tensor([8, 16, 0, 64],"float32"),], axis=-2, )
paddle.concat(list[Tensor([8, 16, 128, 0],"float32"),Tensor([8, 16, 1, 0],"float32"),], axis=-2, )
paddle.concat(list[Tensor([8141, 0],"int32"),Tensor([7974, 0],"int32"),Tensor([7485, 0],"int32"),Tensor([5551, 0],"int32"),], axis=0, )
paddle.concat(tuple(Tensor([0, 1, 192],"float32"),Tensor([0, 576, 192],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([0, 1, 2, 4],"float32"),Tensor([0, 1, 2, 4],"float32"),), axis=-1, )
paddle.concat(tuple(Tensor([0, 1, 20, 2],"float32"),Tensor([0, 1, 20, 20],"float32"),), axis=-1, )
paddle.concat(tuple(Tensor([0, 1, 256],"float32"),Tensor([0, 108, 256],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([0, 1, 32],"float32"),Tensor([0, 1, 32],"float32"),Tensor([0, 1, 32],"float32"),Tensor([0, 1, 32],"float32"),Tensor([0, 1, 32],"float32"),Tensor([0, 1, 32],"float32"),Tensor([0, 1, 32],"float32"),Tensor([0, 1, 32],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([0, 1, 8, 4],"float32"),Tensor([0, 1, 8, 4],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([0, 1],"bool"),Tensor([0, 1],"bool"),), axis=1, )
paddle.concat(tuple(Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),Tensor([0, 1],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([0, 1],"int64"),Tensor([0, 1],"int64"),), axis=0, )
paddle.concat(tuple(Tensor([0, 1],"int64"),Tensor([0, 1],"int64"),), axis=-1, )
paddle.concat(tuple(Tensor([0, 10, 8, 128],"float32"),Tensor([0, 10, 8, 128],"float32"),), axis=3, )
paddle.concat(tuple(Tensor([0, 10, 8, 2],"float32"),Tensor([0, 10, 8, 2],"float32"),), -1, )
paddle.concat(tuple(Tensor([0, 10],"bool"),Tensor([0, 1],"bool"),), axis=1, )
paddle.concat(tuple(Tensor([0, 10],"int64"),Tensor([0, 1],"int64"),), axis=-1, )
paddle.concat(tuple(Tensor([0, 1024, 7, 7],"float16"),Tensor([0, 1024, 7, 7],"float16"),Tensor([0, 512, 7, 7],"float16"),), 1, )
paddle.concat(tuple(Tensor([0, 1024, 7, 7],"float32"),Tensor([0, 1024, 7, 7],"float32"),Tensor([0, 512, 7, 7],"float32"),), 1, )
paddle.concat(tuple(Tensor([0, 112, 14, 14],"float16"),Tensor([0, 112, 14, 14],"float16"),Tensor([0, 112, 14, 14],"float16"),), axis=1, )
paddle.concat(tuple(Tensor([0, 112, 14, 14],"float32"),Tensor([0, 112, 14, 14],"float32"),Tensor([0, 112, 14, 14],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([0, 12, 9, 128],"float32"),Tensor([0, 12, 9, 128],"float32"),), axis=3, )
paddle.concat(tuple(Tensor([0, 12, 9, 2],"float32"),Tensor([0, 12, 9, 2],"float32"),), -1, )
paddle.concat(tuple(Tensor([0, 12],"float64"),), 1, )
paddle.concat(tuple(Tensor([0, 120, 14, 14],"float16"),Tensor([0, 120, 14, 14],"float16"),Tensor([0, 120, 14, 14],"float16"),Tensor([0, 120, 14, 14],"float16"),), axis=1, )
paddle.concat(tuple(Tensor([0, 188, 1, 1, 2, 6],"float32"),Tensor([0, 188, 1, 1, 2, 1],"float32"),), axis=-1, )
paddle.concat(tuple(Tensor([0, 188, 1, 1, 3],"float32"),Tensor([0, 188, 1, 1, 3],"float32"),), axis=-1, )
paddle.concat(tuple(Tensor([0, 2, 128, 128],"float32"),Tensor([0, 1, 128, 128],"float32"),Tensor([0, 3, 128, 128],"float32"),Tensor([0, 2, 128, 128],"float32"),Tensor([0, 2, 128, 128],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([0, 2, 2, 128],"float16"),Tensor([0, 2, 2, 128],"float16"),), axis=0, )
paddle.concat(tuple(Tensor([0, 2, 248, 216],"float32"),Tensor([0, 1, 248, 216],"float32"),Tensor([0, 3, 248, 216],"float32"),Tensor([0, 2, 248, 216],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([0, 2, 8, 4],"float32"),Tensor([0, 1, 8, 4],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([0, 2],"float16"),Tensor([0, 2],"float16"),), 1, )
paddle.concat(tuple(Tensor([0, 20, 2],"float32"),Tensor([0, 20, 20],"float32"),), axis=-1, )
paddle.concat(tuple(Tensor([0, 256, 28, 28],"float16"),Tensor([0, 256, 28, 28],"float16"),Tensor([0, 128, 28, 28],"float16"),Tensor([0, 256, 28, 28],"float16"),Tensor([0, 256, 28, 28],"float16"),), 1, )
paddle.concat(tuple(Tensor([0, 256, 28, 28],"float32"),Tensor([0, 256, 28, 28],"float32"),Tensor([0, 128, 28, 28],"float32"),Tensor([0, 256, 28, 28],"float32"),Tensor([0, 256, 28, 28],"float32"),), 1, )
paddle.concat(tuple(Tensor([0, 26, 512],"float32"),Tensor([0, 26, 512],"float32"),Tensor([0, 26, 512],"float32"),), 2, )
paddle.concat(tuple(Tensor([0, 280, 376, 25, 2],"float32"),Tensor([0, 280, 376, 25, 1],"float32"),), axis=-1, )
paddle.concat(tuple(Tensor([0, 3, 256, 256],"float32"),Tensor([0, 3, 256, 256],"float32"),), 1, )
paddle.concat(tuple(Tensor([0, 3, 32, 32],"float32"),Tensor([0, 3, 32, 32],"float32"),), 1, )
paddle.concat(tuple(Tensor([0, 3],"float64"),), 1, )
paddle.concat(tuple(Tensor([0, 3],"float64"),Tensor([0, 3],"float64"),), 1, )
paddle.concat(tuple(Tensor([0, 4, 1, 8],"float32"),Tensor([0, 4, 1, 8],"float32"),), axis=-2, )
paddle.concat(tuple(Tensor([0, 4, 2, 8],"float32"),Tensor([0, 4, 1, 8],"float32"),), axis=-2, )
paddle.concat(tuple(Tensor([0, 4, 32],"float32"),Tensor([0, 4, 32],"float32"),), axis=-1, )
paddle.concat(tuple(Tensor([0, 512, 14, 14],"float16"),Tensor([0, 512, 14, 14],"float16"),Tensor([0, 256, 14, 14],"float16"),Tensor([0, 512, 14, 14],"float16"),Tensor([0, 512, 14, 14],"float16"),Tensor([0, 512, 14, 14],"float16"),Tensor([0, 512, 14, 14],"float16"),), 1, )
paddle.concat(tuple(Tensor([0, 512, 14, 14],"float16"),Tensor([0, 512, 14, 14],"float16"),Tensor([0, 512, 14, 14],"float16"),Tensor([0, 512, 14, 14],"float16"),), 1, )
paddle.concat(tuple(Tensor([0, 512, 14, 14],"float32"),Tensor([0, 512, 14, 14],"float32"),Tensor([0, 256, 14, 14],"float32"),Tensor([0, 512, 14, 14],"float32"),Tensor([0, 512, 14, 14],"float32"),Tensor([0, 512, 14, 14],"float32"),Tensor([0, 512, 14, 14],"float32"),), 1, )
paddle.concat(tuple(Tensor([0, 512, 14, 14],"float32"),Tensor([0, 512, 14, 14],"float32"),Tensor([0, 512, 14, 14],"float32"),Tensor([0, 512, 14, 14],"float32"),), 1, )
paddle.concat(tuple(Tensor([0, 7, 16],"float32"),Tensor([0, 7, 16],"float32"),), 2, )
paddle.concat(tuple(Tensor([0, 7, 32],"float32"),Tensor([0, 7, 32],"float32"),Tensor([0, 7, 32],"float32"),), axis=2, )
paddle.concat(tuple(Tensor([0, 7, 4],"float32"),Tensor([0, 7, 4],"float32"),), axis=2, )
paddle.concat(tuple(Tensor([0, 768],"float32"),Tensor([0, 768],"float32"),), axis=0, )
paddle.concat(tuple(Tensor([0],"float32"),), )
paddle.concat(tuple(Tensor([0],"float32"),Tensor([0],"float32"),), )
paddle.concat(tuple(Tensor([0],"float64"),), )
paddle.concat(tuple(Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),), )
paddle.concat(tuple(Tensor([0],"int32"),Tensor([0],"int32"),), axis=0, )
paddle.concat(tuple(Tensor([0],"int64"),Tensor([0],"int64"),), axis=0, )
paddle.concat(tuple(Tensor([1, 0, 1, 8],"float32"),Tensor([1, 0, 1, 8],"float32"),), axis=-2, )
paddle.concat(tuple(Tensor([1, 0, 192],"float32"),Tensor([1, 0, 192],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([1, 0, 2, 4],"float32"),Tensor([1, 0, 2, 4],"float32"),), axis=-1, )
paddle.concat(tuple(Tensor([1, 0, 2, 8],"float32"),Tensor([1, 0, 1, 8],"float32"),), axis=-2, )
paddle.concat(tuple(Tensor([1, 0, 2],"float32"),Tensor([1, 0, 20],"float32"),), axis=-1, )
paddle.concat(tuple(Tensor([1, 0, 20, 2],"float32"),Tensor([1, 0, 20, 20],"float32"),), axis=-1, )
paddle.concat(tuple(Tensor([1, 0, 256, 256],"float32"),Tensor([1, 0, 256, 256],"float32"),), 1, )
paddle.concat(tuple(Tensor([1, 0, 256],"float32"),Tensor([1, 0, 256],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([1, 0, 8, 128],"float32"),Tensor([1, 0, 8, 128],"float32"),), axis=3, )
paddle.concat(tuple(Tensor([1, 0, 8, 2],"float32"),Tensor([1, 0, 8, 2],"float32"),), -1, )
paddle.concat(tuple(Tensor([1, 0, 8, 4],"float32"),Tensor([1, 0, 8, 4],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([1, 0, 9, 128],"float32"),Tensor([1, 0, 9, 128],"float32"),), axis=3, )
paddle.concat(tuple(Tensor([1, 0, 9, 2],"float32"),Tensor([1, 0, 9, 2],"float32"),), -1, )
paddle.concat(tuple(Tensor([1, 0],"bool"),Tensor([1, 0],"bool"),), axis=1, )
paddle.concat(tuple(Tensor([1, 0],"float32"),Tensor([1, 0],"float32"),), axis=0, )
paddle.concat(tuple(Tensor([1, 0],"int64"),Tensor([1, 0],"int64"),), axis=0, )
paddle.concat(tuple(Tensor([1, 0],"int64"),Tensor([1, 0],"int64"),), axis=-1, )
paddle.concat(tuple(Tensor([1, 1, 0, 2],"float32"),Tensor([1, 1, 0, 20],"float32"),), axis=-1, )
paddle.concat(tuple(Tensor([1, 1, 0, 4],"float32"),Tensor([1, 1, 0, 4],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([1, 1, 0, 4],"float32"),Tensor([1, 1, 0, 4],"float32"),), axis=-1, )
paddle.concat(tuple(Tensor([1, 1, 0],"float32"),Tensor([1, 108, 0],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([1, 1, 0],"float32"),Tensor([1, 576, 0],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([1, 1, 2, 0],"float32"),Tensor([1, 1, 2, 0],"float32"),), axis=-1, )
paddle.concat(tuple(Tensor([1, 1, 20, 0],"float32"),Tensor([1, 1, 20, 0],"float32"),), axis=-1, )
paddle.concat(tuple(Tensor([1, 1, 8, 0],"float32"),Tensor([1, 1, 8, 0],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([1, 10, 0, 128],"float32"),Tensor([1, 10, 0, 128],"float32"),), axis=3, )
paddle.concat(tuple(Tensor([1, 10, 0, 2],"float32"),Tensor([1, 10, 0, 2],"float32"),), -1, )
paddle.concat(tuple(Tensor([1, 10, 8, 0],"float32"),Tensor([1, 10, 8, 0],"float32"),), -1, )
paddle.concat(tuple(Tensor([1, 10, 8, 0],"float32"),Tensor([1, 10, 8, 0],"float32"),), axis=3, )
paddle.concat(tuple(Tensor([1, 12, 0, 128],"float32"),Tensor([1, 12, 0, 128],"float32"),), axis=3, )
paddle.concat(tuple(Tensor([1, 12, 0, 2],"float32"),Tensor([1, 12, 0, 2],"float32"),), -1, )
paddle.concat(tuple(Tensor([1, 12, 9, 0],"float32"),Tensor([1, 12, 9, 0],"float32"),), -1, )
paddle.concat(tuple(Tensor([1, 12, 9, 0],"float32"),Tensor([1, 12, 9, 0],"float32"),), axis=3, )
paddle.concat(tuple(Tensor([1, 2, 0, 4],"float32"),Tensor([1, 1, 0, 4],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([1, 2, 8, 0],"float32"),Tensor([1, 1, 8, 0],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([1, 20, 0],"float32"),Tensor([1, 20, 0],"float32"),), axis=-1, )
paddle.concat(tuple(Tensor([1, 3, 0, 256],"float32"),Tensor([1, 3, 0, 256],"float32"),), 1, )
paddle.concat(tuple(Tensor([1, 3, 256, 0],"float32"),Tensor([1, 3, 256, 0],"float32"),), 1, )
paddle.concat(tuple(Tensor([1, 4, 0, 8],"float32"),Tensor([1, 4, 0, 8],"float32"),), axis=-2, )
paddle.concat(tuple(Tensor([1, 4, 1, 0],"float32"),Tensor([1, 4, 1, 0],"float32"),), axis=-2, )
paddle.concat(tuple(Tensor([1, 4, 2, 0],"float32"),Tensor([1, 4, 1, 0],"float32"),), axis=-2, )
paddle.concat(tuple(Tensor([100, 0, 2, 128],"float16"),Tensor([1, 0, 2, 128],"float16"),), axis=0, )
paddle.concat(tuple(Tensor([100, 2, 0, 128],"float16"),Tensor([1, 2, 0, 128],"float16"),), axis=0, )
paddle.concat(tuple(Tensor([100, 2, 2, 0],"float16"),Tensor([1, 2, 2, 0],"float16"),), axis=0, )
paddle.concat(tuple(Tensor([101, 0, 2, 128],"float16"),Tensor([1, 0, 2, 128],"float16"),), axis=0, )
paddle.concat(tuple(Tensor([101, 2, 0, 128],"float16"),Tensor([1, 2, 0, 128],"float16"),), axis=0, )
paddle.concat(tuple(Tensor([101, 2, 2, 0],"float16"),Tensor([1, 2, 2, 0],"float16"),), axis=0, )
paddle.concat(tuple(Tensor([13, 0, 16],"float32"),Tensor([13, 0, 16],"float32"),), 2, )
paddle.concat(tuple(Tensor([13, 0, 32],"float32"),Tensor([13, 0, 32],"float32"),Tensor([13, 0, 32],"float32"),), axis=2, )
paddle.concat(tuple(Tensor([13, 0, 32],"float32"),Tensor([13, 0, 32],"float32"),Tensor([13, 0, 32],"float32"),Tensor([13, 0, 32],"float32"),Tensor([13, 0, 32],"float32"),Tensor([13, 0, 32],"float32"),Tensor([13, 0, 32],"float32"),Tensor([13, 0, 32],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([13, 0, 4],"float32"),Tensor([13, 0, 4],"float32"),), axis=2, )
paddle.concat(tuple(Tensor([13, 1, 0],"float32"),Tensor([13, 1, 0],"float32"),Tensor([13, 1, 0],"float32"),Tensor([13, 1, 0],"float32"),Tensor([13, 1, 0],"float32"),Tensor([13, 1, 0],"float32"),Tensor([13, 1, 0],"float32"),Tensor([13, 1, 0],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([13, 7, 0],"float32"),Tensor([13, 7, 0],"float32"),), 2, )
paddle.concat(tuple(Tensor([13, 7, 0],"float32"),Tensor([13, 7, 0],"float32"),), axis=2, )
paddle.concat(tuple(Tensor([13, 7, 0],"float32"),Tensor([13, 7, 0],"float32"),Tensor([13, 7, 0],"float32"),), axis=2, )
paddle.concat(tuple(Tensor([140, 0, 1, 1, 2, 6],"float32"),Tensor([140, 0, 1, 1, 2, 1],"float32"),), axis=-1, )
paddle.concat(tuple(Tensor([140, 0, 1, 1, 3],"float32"),Tensor([140, 0, 1, 1, 3],"float32"),), axis=-1, )
paddle.concat(tuple(Tensor([140, 188, 0, 1, 2, 6],"float32"),Tensor([140, 188, 0, 1, 2, 1],"float32"),), axis=-1, )
paddle.concat(tuple(Tensor([140, 188, 0, 1, 3],"float32"),Tensor([140, 188, 0, 1, 3],"float32"),), axis=-1, )
paddle.concat(tuple(Tensor([140, 188, 1, 0, 2, 6],"float32"),Tensor([140, 188, 1, 0, 2, 1],"float32"),), axis=-1, )
paddle.concat(tuple(Tensor([140, 188, 1, 0, 3],"float32"),Tensor([140, 188, 1, 0, 3],"float32"),), axis=-1, )
paddle.concat(tuple(Tensor([140, 188, 1, 1, 0, 6],"float32"),Tensor([140, 188, 1, 1, 0, 1],"float32"),), axis=-1, )
paddle.concat(tuple(Tensor([140, 188, 1, 1, 0],"float32"),Tensor([140, 188, 1, 1, 0],"float32"),), axis=-1, )
paddle.concat(tuple(Tensor([140, 188, 1, 1, 2, 0],"float32"),Tensor([140, 188, 1, 1, 2, 0],"float32"),), axis=-1, )
paddle.concat(tuple(Tensor([2, 0, 32, 32],"float32"),Tensor([2, 0, 32, 32],"float32"),), 1, )
paddle.concat(tuple(Tensor([2, 0, 32],"float32"),Tensor([2, 0, 32],"float32"),), axis=-1, )
paddle.concat(tuple(Tensor([2, 0],"float64"),), 1, )
paddle.concat(tuple(Tensor([2, 3, 0, 32],"float32"),Tensor([2, 3, 0, 32],"float32"),), 1, )
paddle.concat(tuple(Tensor([2, 3, 32, 0],"float32"),Tensor([2, 3, 32, 0],"float32"),), 1, )
paddle.concat(tuple(Tensor([2, 4, 0],"float32"),Tensor([2, 4, 0],"float32"),), axis=-1, )
paddle.concat(tuple(Tensor([3, 0],"float64"),Tensor([3, 0],"float64"),), 1, )
paddle.concat(tuple(Tensor([385, 0],"float16"),Tensor([385, 0],"float16"),), 1, )
paddle.concat(tuple(Tensor([4, 0, 128, 128],"float32"),Tensor([4, 0, 128, 128],"float32"),Tensor([4, 0, 128, 128],"float32"),Tensor([4, 0, 128, 128],"float32"),Tensor([4, 0, 128, 128],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([4, 0, 248, 216],"float32"),Tensor([4, 0, 248, 216],"float32"),Tensor([4, 0, 248, 216],"float32"),Tensor([4, 0, 248, 216],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([4, 0, 376, 25, 2],"float32"),Tensor([4, 0, 376, 25, 1],"float32"),), axis=-1, )
paddle.concat(tuple(Tensor([4, 0],"float32"),Tensor([4, 0],"float32"),Tensor([4, 0],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([4, 2, 0, 128],"float32"),Tensor([4, 1, 0, 128],"float32"),Tensor([4, 3, 0, 128],"float32"),Tensor([4, 2, 0, 128],"float32"),Tensor([4, 2, 0, 128],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([4, 2, 0, 216],"float32"),Tensor([4, 1, 0, 216],"float32"),Tensor([4, 3, 0, 216],"float32"),Tensor([4, 2, 0, 216],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([4, 2, 128, 0],"float32"),Tensor([4, 1, 128, 0],"float32"),Tensor([4, 3, 128, 0],"float32"),Tensor([4, 2, 128, 0],"float32"),Tensor([4, 2, 128, 0],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([4, 2, 248, 0],"float32"),Tensor([4, 1, 248, 0],"float32"),Tensor([4, 3, 248, 0],"float32"),Tensor([4, 2, 248, 0],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([4, 280, 0, 25, 2],"float32"),Tensor([4, 280, 0, 25, 1],"float32"),), axis=-1, )
paddle.concat(tuple(Tensor([4, 280, 376, 0, 2],"float32"),Tensor([4, 280, 376, 0, 1],"float32"),), axis=-1, )
paddle.concat(tuple(Tensor([4, 280, 376, 25, 0],"float32"),Tensor([4, 280, 376, 25, 0],"float32"),), axis=-1, )
paddle.concat(tuple(Tensor([52, 0, 4],"float32"),Tensor([52, 0, 4],"float32"),), axis=2, )
paddle.concat(tuple(Tensor([52, 7, 0],"float32"),Tensor([52, 7, 0],"float32"),), axis=2, )
paddle.concat(tuple(Tensor([64, 0, 14, 14],"float16"),Tensor([64, 0, 14, 14],"float16"),Tensor([64, 0, 14, 14],"float16"),), axis=1, )
paddle.concat(tuple(Tensor([64, 0, 14, 14],"float16"),Tensor([64, 0, 14, 14],"float16"),Tensor([64, 0, 14, 14],"float16"),Tensor([64, 0, 14, 14],"float16"),), 1, )
paddle.concat(tuple(Tensor([64, 0, 14, 14],"float16"),Tensor([64, 0, 14, 14],"float16"),Tensor([64, 0, 14, 14],"float16"),Tensor([64, 0, 14, 14],"float16"),), axis=1, )
paddle.concat(tuple(Tensor([64, 0, 14, 14],"float16"),Tensor([64, 0, 14, 14],"float16"),Tensor([64, 0, 14, 14],"float16"),Tensor([64, 0, 14, 14],"float16"),Tensor([64, 0, 14, 14],"float16"),Tensor([64, 0, 14, 14],"float16"),Tensor([64, 0, 14, 14],"float16"),), 1, )
paddle.concat(tuple(Tensor([64, 0, 14, 14],"float32"),Tensor([64, 0, 14, 14],"float32"),Tensor([64, 0, 14, 14],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([64, 0, 14, 14],"float32"),Tensor([64, 0, 14, 14],"float32"),Tensor([64, 0, 14, 14],"float32"),Tensor([64, 0, 14, 14],"float32"),), 1, )
paddle.concat(tuple(Tensor([64, 0, 14, 14],"float32"),Tensor([64, 0, 14, 14],"float32"),Tensor([64, 0, 14, 14],"float32"),Tensor([64, 0, 14, 14],"float32"),Tensor([64, 0, 14, 14],"float32"),Tensor([64, 0, 14, 14],"float32"),Tensor([64, 0, 14, 14],"float32"),), 1, )
paddle.concat(tuple(Tensor([64, 0, 28, 28],"float16"),Tensor([64, 0, 28, 28],"float16"),Tensor([64, 0, 28, 28],"float16"),Tensor([64, 0, 28, 28],"float16"),Tensor([64, 0, 28, 28],"float16"),), 1, )
paddle.concat(tuple(Tensor([64, 0, 28, 28],"float32"),Tensor([64, 0, 28, 28],"float32"),Tensor([64, 0, 28, 28],"float32"),Tensor([64, 0, 28, 28],"float32"),Tensor([64, 0, 28, 28],"float32"),), 1, )
paddle.concat(tuple(Tensor([64, 0, 512],"float32"),Tensor([64, 0, 512],"float32"),Tensor([64, 0, 512],"float32"),), 2, )
paddle.concat(tuple(Tensor([64, 0, 7, 7],"float16"),Tensor([64, 0, 7, 7],"float16"),Tensor([64, 0, 7, 7],"float16"),), 1, )
paddle.concat(tuple(Tensor([64, 0, 7, 7],"float32"),Tensor([64, 0, 7, 7],"float32"),Tensor([64, 0, 7, 7],"float32"),), 1, )
paddle.concat(tuple(Tensor([64, 1024, 0, 7],"float16"),Tensor([64, 1024, 0, 7],"float16"),Tensor([64, 512, 0, 7],"float16"),), 1, )
paddle.concat(tuple(Tensor([64, 1024, 0, 7],"float32"),Tensor([64, 1024, 0, 7],"float32"),Tensor([64, 512, 0, 7],"float32"),), 1, )
paddle.concat(tuple(Tensor([64, 1024, 7, 0],"float16"),Tensor([64, 1024, 7, 0],"float16"),Tensor([64, 512, 7, 0],"float16"),), 1, )
paddle.concat(tuple(Tensor([64, 1024, 7, 0],"float32"),Tensor([64, 1024, 7, 0],"float32"),Tensor([64, 512, 7, 0],"float32"),), 1, )
paddle.concat(tuple(Tensor([64, 112, 0, 14],"float16"),Tensor([64, 112, 0, 14],"float16"),Tensor([64, 112, 0, 14],"float16"),), axis=1, )
paddle.concat(tuple(Tensor([64, 112, 0, 14],"float32"),Tensor([64, 112, 0, 14],"float32"),Tensor([64, 112, 0, 14],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([64, 112, 14, 0],"float16"),Tensor([64, 112, 14, 0],"float16"),Tensor([64, 112, 14, 0],"float16"),), axis=1, )
paddle.concat(tuple(Tensor([64, 112, 14, 0],"float32"),Tensor([64, 112, 14, 0],"float32"),Tensor([64, 112, 14, 0],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([64, 120, 0, 14],"float16"),Tensor([64, 120, 0, 14],"float16"),Tensor([64, 120, 0, 14],"float16"),Tensor([64, 120, 0, 14],"float16"),), axis=1, )
paddle.concat(tuple(Tensor([64, 120, 14, 0],"float16"),Tensor([64, 120, 14, 0],"float16"),Tensor([64, 120, 14, 0],"float16"),Tensor([64, 120, 14, 0],"float16"),), axis=1, )
paddle.concat(tuple(Tensor([64, 256, 0, 28],"float16"),Tensor([64, 256, 0, 28],"float16"),Tensor([64, 128, 0, 28],"float16"),Tensor([64, 256, 0, 28],"float16"),Tensor([64, 256, 0, 28],"float16"),), 1, )
paddle.concat(tuple(Tensor([64, 256, 0, 28],"float32"),Tensor([64, 256, 0, 28],"float32"),Tensor([64, 128, 0, 28],"float32"),Tensor([64, 256, 0, 28],"float32"),Tensor([64, 256, 0, 28],"float32"),), 1, )
paddle.concat(tuple(Tensor([64, 256, 28, 0],"float16"),Tensor([64, 256, 28, 0],"float16"),Tensor([64, 128, 28, 0],"float16"),Tensor([64, 256, 28, 0],"float16"),Tensor([64, 256, 28, 0],"float16"),), 1, )
paddle.concat(tuple(Tensor([64, 256, 28, 0],"float32"),Tensor([64, 256, 28, 0],"float32"),Tensor([64, 128, 28, 0],"float32"),Tensor([64, 256, 28, 0],"float32"),Tensor([64, 256, 28, 0],"float32"),), 1, )
paddle.concat(tuple(Tensor([64, 26, 0],"float32"),Tensor([64, 26, 0],"float32"),Tensor([64, 26, 0],"float32"),), 2, )
paddle.concat(tuple(Tensor([64, 512, 0, 14],"float16"),Tensor([64, 512, 0, 14],"float16"),Tensor([64, 256, 0, 14],"float16"),Tensor([64, 512, 0, 14],"float16"),Tensor([64, 512, 0, 14],"float16"),Tensor([64, 512, 0, 14],"float16"),Tensor([64, 512, 0, 14],"float16"),), 1, )
paddle.concat(tuple(Tensor([64, 512, 0, 14],"float16"),Tensor([64, 512, 0, 14],"float16"),Tensor([64, 512, 0, 14],"float16"),Tensor([64, 512, 0, 14],"float16"),), 1, )
paddle.concat(tuple(Tensor([64, 512, 0, 14],"float32"),Tensor([64, 512, 0, 14],"float32"),Tensor([64, 256, 0, 14],"float32"),Tensor([64, 512, 0, 14],"float32"),Tensor([64, 512, 0, 14],"float32"),Tensor([64, 512, 0, 14],"float32"),Tensor([64, 512, 0, 14],"float32"),), 1, )
paddle.concat(tuple(Tensor([64, 512, 0, 14],"float32"),Tensor([64, 512, 0, 14],"float32"),Tensor([64, 512, 0, 14],"float32"),Tensor([64, 512, 0, 14],"float32"),), 1, )
paddle.concat(tuple(Tensor([64, 512, 14, 0],"float16"),Tensor([64, 512, 14, 0],"float16"),Tensor([64, 256, 14, 0],"float16"),Tensor([64, 512, 14, 0],"float16"),Tensor([64, 512, 14, 0],"float16"),Tensor([64, 512, 14, 0],"float16"),Tensor([64, 512, 14, 0],"float16"),), 1, )
paddle.concat(tuple(Tensor([64, 512, 14, 0],"float16"),Tensor([64, 512, 14, 0],"float16"),Tensor([64, 512, 14, 0],"float16"),Tensor([64, 512, 14, 0],"float16"),), 1, )
paddle.concat(tuple(Tensor([64, 512, 14, 0],"float32"),Tensor([64, 512, 14, 0],"float32"),Tensor([64, 256, 14, 0],"float32"),Tensor([64, 512, 14, 0],"float32"),Tensor([64, 512, 14, 0],"float32"),Tensor([64, 512, 14, 0],"float32"),Tensor([64, 512, 14, 0],"float32"),), 1, )
paddle.concat(tuple(Tensor([64, 512, 14, 0],"float32"),Tensor([64, 512, 14, 0],"float32"),Tensor([64, 512, 14, 0],"float32"),Tensor([64, 512, 14, 0],"float32"),), 1, )
paddle.concat(tuple(Tensor([8, 0, 128, 128],"float32"),Tensor([8, 0, 128, 128],"float32"),Tensor([8, 0, 128, 128],"float32"),Tensor([8, 0, 128, 128],"float32"),Tensor([8, 0, 128, 128],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([8, 0, 512],"float32"),Tensor([8, 0, 512],"float32"),Tensor([8, 0, 512],"float32"),), 2, )
paddle.concat(tuple(Tensor([8, 2, 0, 128],"float32"),Tensor([8, 1, 0, 128],"float32"),Tensor([8, 3, 0, 128],"float32"),Tensor([8, 2, 0, 128],"float32"),Tensor([8, 2, 0, 128],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([8, 2, 128, 0],"float32"),Tensor([8, 1, 128, 0],"float32"),Tensor([8, 3, 128, 0],"float32"),Tensor([8, 2, 128, 0],"float32"),Tensor([8, 2, 128, 0],"float32"),), axis=1, )
paddle.concat(tuple(Tensor([8, 26, 0],"float32"),Tensor([8, 26, 0],"float32"),Tensor([8, 26, 0],"float32"),), 2, )
paddle.concat(x=list[Tensor([0, 1024, 4, 14, 14],"float32"),Tensor([0, 256, 4, 14, 14],"float32"),], axis=1, name=None, )
paddle.concat(x=list[Tensor([0, 12, 1],"float32"),Tensor([0, 96, 1],"float32"),Tensor([0, 12, 1],"float32"),], axis=1, )
paddle.concat(x=list[Tensor([0, 1408],"float16"),Tensor([0, 1408],"float16"),], axis=-1, )
paddle.concat(x=list[Tensor([0, 16, 32],"float32"),Tensor([0, 16, 32],"float32"),], axis=2, )
paddle.concat(x=list[Tensor([0, 2048, 1, 1, 1],"float32"),Tensor([0, 256, 1, 1, 1],"float32"),], axis=1, )
paddle.concat(x=list[Tensor([0, 3],"float32"),Tensor([0, 3],"float32"),], axis=0, )
paddle.concat(x=list[Tensor([0, 8, 14, 12],"float32"),Tensor([0, 8, 14, 12],"float32"),], axis=0, )
paddle.concat(x=list[Tensor([1, 0, 14, 12],"float32"),Tensor([1, 0, 14, 12],"float32"),], axis=0, )
paddle.concat(x=list[Tensor([1, 0],"float32"),Tensor([1, 0],"float32"),], axis=0, )
paddle.concat(x=list[Tensor([1, 8, 0, 12],"float32"),Tensor([1, 8, 0, 12],"float32"),], axis=0, )
paddle.concat(x=list[Tensor([1, 8, 14, 0],"float32"),Tensor([1, 8, 14, 0],"float32"),], axis=0, )
paddle.concat(x=list[Tensor([13, 0, 1],"float32"),Tensor([13, 0, 1],"float32"),Tensor([13, 0, 1],"float32"),], axis=1, )
paddle.concat(x=list[Tensor([13, 12, 0],"float32"),Tensor([13, 96, 0],"float32"),Tensor([13, 12, 0],"float32"),], axis=1, )
paddle.concat(x=list[Tensor([16, 0, 32],"float32"),Tensor([16, 0, 32],"float32"),], axis=2, )
paddle.concat(x=list[Tensor([16, 16, 0],"float32"),Tensor([16, 16, 0],"float32"),], axis=2, )
paddle.concat(x=list[Tensor([2048, 0],"float16"),Tensor([2048, 0],"float16"),], axis=-1, )
paddle.concat(x=list[Tensor([8, 0, 1, 1, 1],"float32"),Tensor([8, 0, 1, 1, 1],"float32"),], axis=1, )
paddle.concat(x=list[Tensor([8, 0, 4, 14, 14],"float32"),Tensor([8, 0, 4, 14, 14],"float32"),], axis=1, name=None, )
paddle.concat(x=list[Tensor([8, 1024, 0, 14, 14],"float32"),Tensor([8, 256, 0, 14, 14],"float32"),], axis=1, name=None, )
paddle.concat(x=list[Tensor([8, 1024, 4, 0, 14],"float32"),Tensor([8, 256, 4, 0, 14],"float32"),], axis=1, name=None, )
paddle.concat(x=list[Tensor([8, 1024, 4, 14, 0],"float32"),Tensor([8, 256, 4, 14, 0],"float32"),], axis=1, name=None, )
paddle.concat(x=list[Tensor([8, 2048, 0, 1, 1],"float32"),Tensor([8, 256, 0, 1, 1],"float32"),], axis=1, )
paddle.concat(x=list[Tensor([8, 2048, 1, 0, 1],"float32"),Tensor([8, 256, 1, 0, 1],"float32"),], axis=1, )
paddle.concat(x=list[Tensor([8, 2048, 1, 1, 0],"float32"),Tensor([8, 256, 1, 1, 0],"float32"),], axis=1, )
paddle.concat(x=tuple(Tensor([0, 1, 1024],"float32"),Tensor([0, 256, 1024],"float32"),), axis=1, )
paddle.concat(x=tuple(Tensor([0, 1, 96, 32],"float32"),Tensor([0, 1, 96, 4],"float32"),), axis=3, )
paddle.concat(x=tuple(Tensor([0, 10, 56, 56],"float32"),Tensor([0, 30, 56, 56],"float32"),), axis=1, )
paddle.concat(x=tuple(Tensor([0, 16, 1, 64],"float32"),Tensor([0, 16, 256, 64],"float32"),), axis=-2, )
paddle.concat(x=tuple(Tensor([0, 3],"float32"),Tensor([0, 3],"float32"),), axis=0, )
paddle.concat(x=tuple(Tensor([0, 96, 1],"float32"),Tensor([0, 384, 1],"float32"),Tensor([0, 384, 1],"float32"),), axis=1, )
paddle.concat(x=tuple(Tensor([1, 0, 1, 64],"float32"),Tensor([1, 0, 256, 64],"float32"),), axis=-2, )
paddle.concat(x=tuple(Tensor([1, 0, 1024],"float32"),Tensor([1, 0, 1024],"float32"),), axis=1, )
paddle.concat(x=tuple(Tensor([1, 1, 0],"float32"),Tensor([1, 256, 0],"float32"),), axis=1, )
paddle.concat(x=tuple(Tensor([1, 16, 0, 64],"float32"),Tensor([1, 16, 0, 64],"float32"),), axis=-2, )
paddle.concat(x=tuple(Tensor([1, 16, 1, 0],"float32"),Tensor([1, 16, 256, 0],"float32"),), axis=-2, )
paddle.concat(x=tuple(Tensor([124, 0, 56, 56],"float32"),Tensor([124, 0, 56, 56],"float32"),), axis=1, )
paddle.concat(x=tuple(Tensor([124, 10, 0, 56],"float32"),Tensor([124, 30, 0, 56],"float32"),), axis=1, )
paddle.concat(x=tuple(Tensor([124, 10, 56, 0],"float32"),Tensor([124, 30, 56, 0],"float32"),), axis=1, )
paddle.concat(x=tuple(Tensor([13, 0, 1],"float32"),Tensor([13, 0, 1],"float32"),Tensor([13, 0, 1],"float32"),), axis=1, )
paddle.concat(x=tuple(Tensor([13, 0, 96, 32],"float32"),Tensor([13, 0, 96, 4],"float32"),), axis=3, )
paddle.concat(x=tuple(Tensor([13, 1, 0, 32],"float32"),Tensor([13, 1, 0, 4],"float32"),), axis=3, )
paddle.concat(x=tuple(Tensor([13, 1, 96, 0],"float32"),Tensor([13, 1, 96, 0],"float32"),), axis=3, )
paddle.concat(x=tuple(Tensor([13, 96, 0],"float32"),Tensor([13, 384, 0],"float32"),Tensor([13, 384, 0],"float32"),), axis=1, )
paddle.concat(x=tuple(Tensor([2, 0],"float32"),Tensor([2, 0],"float32"),), axis=0, )
paddle.cumulative_trapezoid(y=Tensor([0, 4],"float16"), x=Tensor([0, 4],"float16"), )
paddle.cumulative_trapezoid(y=Tensor([4, 0],"float16"), x=Tensor([4, 0],"float16"), )
paddle.diag(Tensor([0, 10],"float32"), offset=-1, )
paddle.diag(Tensor([10, 0],"float32"), offset=1, )
paddle.diag(x=Tensor([0, 3],"float64"), offset=-1, )
paddle.diag(x=Tensor([2, 0],"float64"), offset=2, )
paddle.diag(x=Tensor([3, 0],"float64"), offset=1, )
paddle.diagonal(Tensor([0, 2, 2],"float32"), offset=0, axis1=-1, axis2=-2, )
paddle.diagonal(Tensor([0, 3, 4],"float32"), )
paddle.diagonal(Tensor([0, 3, 4],"float32"), offset=0, axis1=1, axis2=2, )
paddle.diagonal(Tensor([0, 3, 4],"float32"), offset=0, axis1=2, axis2=1, )
paddle.diagonal(Tensor([0, 3, 4],"float32"), offset=1, axis1=0, axis2=1, )
paddle.diagonal(Tensor([1, 0, 2],"float32"), offset=0, axis1=-1, axis2=-2, )
paddle.diagonal(Tensor([1, 2, 0],"float32"), offset=0, axis1=-1, axis2=-2, )
paddle.diagonal(Tensor([10, 0, 4],"float32"), )
paddle.diagonal(Tensor([10, 0, 4],"float32"), offset=0, axis1=1, axis2=2, )
paddle.diagonal(Tensor([10, 0, 4],"float32"), offset=0, axis1=2, axis2=1, )
paddle.diagonal(Tensor([10, 0, 4],"float32"), offset=1, axis1=0, axis2=1, )
paddle.diagonal(Tensor([10, 3, 0],"float32"), )
paddle.diagonal(Tensor([10, 3, 0],"float32"), offset=0, axis1=1, axis2=2, )
paddle.diagonal(Tensor([10, 3, 0],"float32"), offset=0, axis1=2, axis2=1, )
paddle.diagonal(x=Tensor([0, 6, 6, 2, 2],"float64"), )
paddle.diagonal(x=Tensor([0, 6, 6, 2, 2],"float64"), axis1=0, axis2=3, )
paddle.diagonal(x=Tensor([0, 6, 6, 2, 2],"float64"), axis1=-1, axis2=2, )
paddle.diagonal(x=Tensor([0, 6, 6, 2, 2],"float64"), axis1=2, axis2=3, )
paddle.diagonal(x=Tensor([0, 6, 6, 2, 2],"float64"), axis1=3, axis2=4, )
paddle.diagonal(x=Tensor([0, 6, 6, 2, 2],"float64"), axis1=4, axis2=2, )
paddle.diagonal(x=Tensor([0, 6, 6, 6],"float64"), )
paddle.diagonal(x=Tensor([0, 6, 6],"float64"), )
paddle.diagonal(x=Tensor([0, 6],"float32"), )
paddle.diagonal(x=Tensor([0, 6],"float64"), offset=1, )
paddle.diagonal(x=Tensor([0, 6],"float64"), offset=-1, )
paddle.diagonal(x=Tensor([6, 0, 6, 2, 2],"float64"), )
paddle.diagonal(x=Tensor([6, 0, 6, 2, 2],"float64"), axis1=0, axis2=3, )
paddle.diagonal(x=Tensor([6, 0, 6, 2, 2],"float64"), axis1=-1, axis2=2, )
paddle.diagonal(x=Tensor([6, 0, 6, 2, 2],"float64"), axis1=2, axis2=3, )
paddle.diagonal(x=Tensor([6, 0, 6, 2, 2],"float64"), axis1=3, axis2=4, )
paddle.diagonal(x=Tensor([6, 0, 6, 2, 2],"float64"), axis1=4, axis2=2, )
paddle.diagonal(x=Tensor([6, 0, 6, 6],"float64"), )
paddle.diagonal(x=Tensor([6, 0, 6],"float64"), )
paddle.diagonal(x=Tensor([6, 0],"float32"), )
paddle.diagonal(x=Tensor([6, 0],"float64"), offset=1, )
paddle.diagonal(x=Tensor([6, 0],"float64"), offset=-1, )
paddle.diagonal(x=Tensor([6, 6, 0, 2, 2],"float64"), )
paddle.diagonal(x=Tensor([6, 6, 0, 2, 2],"float64"), axis1=0, axis2=3, )
paddle.diagonal(x=Tensor([6, 6, 0, 2, 2],"float64"), axis1=-1, axis2=2, )
paddle.diagonal(x=Tensor([6, 6, 0, 2, 2],"float64"), axis1=2, axis2=3, )
paddle.diagonal(x=Tensor([6, 6, 0, 2, 2],"float64"), axis1=3, axis2=4, )
paddle.diagonal(x=Tensor([6, 6, 0, 2, 2],"float64"), axis1=4, axis2=2, )
paddle.diagonal(x=Tensor([6, 6, 0, 6],"float64"), )
paddle.diagonal(x=Tensor([6, 6, 0],"float64"), )
paddle.diagonal(x=Tensor([6, 6, 6, 0, 2],"float64"), )
paddle.diagonal(x=Tensor([6, 6, 6, 0, 2],"float64"), axis1=0, axis2=3, )
paddle.diagonal(x=Tensor([6, 6, 6, 0, 2],"float64"), axis1=-1, axis2=2, )
paddle.diagonal(x=Tensor([6, 6, 6, 0, 2],"float64"), axis1=2, axis2=3, )
paddle.diagonal(x=Tensor([6, 6, 6, 0, 2],"float64"), axis1=3, axis2=4, )
paddle.diagonal(x=Tensor([6, 6, 6, 0, 2],"float64"), axis1=4, axis2=2, )
paddle.diagonal(x=Tensor([6, 6, 6, 0],"float64"), )
paddle.diagonal(x=Tensor([6, 6, 6, 2, 0],"float64"), )
paddle.diagonal(x=Tensor([6, 6, 6, 2, 0],"float64"), axis1=0, axis2=3, )
paddle.diagonal(x=Tensor([6, 6, 6, 2, 0],"float64"), axis1=-1, axis2=2, )
paddle.diagonal(x=Tensor([6, 6, 6, 2, 0],"float64"), axis1=2, axis2=3, )
paddle.diagonal(x=Tensor([6, 6, 6, 2, 0],"float64"), axis1=3, axis2=4, )
paddle.diagonal(x=Tensor([6, 6, 6, 2, 0],"float64"), axis1=4, axis2=2, )
paddle.dist(Tensor([0, 2, 3, 2],"float32"), Tensor([0, 1, 3, 1],"float32"), 2, )
paddle.dist(Tensor([0, 2, 3, 2],"float32"), Tensor([1, 1, 3, 1],"float32"), 2, )
paddle.dist(Tensor([0, 2],"float32"), Tensor([0, 2],"float32"), 0, )
paddle.dist(Tensor([2, 0, 3, 2],"float32"), Tensor([1, 0, 3, 1],"float32"), 2, )
paddle.dist(Tensor([2, 0, 3, 2],"float32"), Tensor([1, 1, 3, 1],"float32"), 2, )
paddle.dist(Tensor([2, 0],"float32"), Tensor([2, 0],"float32"), 0, )
paddle.dist(Tensor([2, 2, 0, 2],"float32"), Tensor([1, 1, 0, 1],"float32"), 2, )
paddle.dist(Tensor([2, 2, 3, 0],"float32"), Tensor([1, 1, 3, 0],"float32"), 2, )
paddle.dist(Tensor([2, 2, 3, 0],"float32"), Tensor([1, 1, 3, 1],"float32"), 2, )
paddle.dist(x=Tensor([0, 1, 1, 4, 4],"float64"), y=Tensor([0, 8, 7, 1, 4],"float64"), )
paddle.dist(x=Tensor([0, 1, 4, 4],"float64"), y=Tensor([7, 1, 4],"float64"), )
paddle.dist(x=Tensor([0, 2],"float64"), y=Tensor([0, 2],"float64"), p=0, )
paddle.dist(x=Tensor([0, 4, 1, 3],"float64"), y=Tensor([4, 3, 1],"float64"), p=7, )
paddle.dist(x=Tensor([0, 4],"float32"), y=Tensor([0, 4],"float32"), )
paddle.dist(x=Tensor([0, 4],"float64"), y=Tensor([0, 4],"float64"), p=1, )
paddle.dist(x=Tensor([0],"float64"), y=Tensor([0],"float64"), )
paddle.dist(x=Tensor([10],"float64"), y=Tensor([0, 10],"float64"), )
paddle.dist(x=Tensor([10],"float64"), y=Tensor([0, 10],"float64"), p=4, )
paddle.dist(x=Tensor([2, 0, 1, 4, 4],"float64"), y=Tensor([2, 0, 7, 1, 4],"float64"), )
paddle.dist(x=Tensor([2, 0],"float64"), y=Tensor([2, 0],"float64"), p=0, )
paddle.dist(x=Tensor([2, 1, 0, 4, 4],"float64"), y=Tensor([2, 8, 0, 1, 4],"float64"), )
paddle.dist(x=Tensor([2, 1, 0, 4],"float64"), y=Tensor([7, 1, 4],"float64"), )
paddle.dist(x=Tensor([2, 1, 1, 0, 4],"float64"), y=Tensor([2, 8, 7, 0, 4],"float64"), )
paddle.dist(x=Tensor([2, 1, 1, 0, 4],"float64"), y=Tensor([2, 8, 7, 1, 4],"float64"), )
paddle.dist(x=Tensor([2, 1, 1, 4, 0],"float64"), y=Tensor([2, 8, 7, 1, 0],"float64"), )
paddle.dist(x=Tensor([2, 1, 1, 4, 4],"float64"), y=Tensor([2, 0, 7, 1, 4],"float64"), )
paddle.dist(x=Tensor([2, 1, 1, 4, 4],"float64"), y=Tensor([2, 8, 0, 1, 4],"float64"), )
paddle.dist(x=Tensor([2, 1, 4, 4],"float64"), y=Tensor([0, 1, 4],"float64"), )
paddle.dist(x=Tensor([2, 4, 1, 0],"float64"), y=Tensor([4, 3, 1],"float64"), p=7, )
paddle.dist(x=Tensor([2, 4, 1, 3],"float64"), y=Tensor([4, 0, 1],"float64"), p=7, )
paddle.dist(x=Tensor([4, 0],"float32"), y=Tensor([4, 0],"float32"), )
paddle.dist(x=Tensor([4, 0],"float64"), y=Tensor([4, 0],"float64"), p=1, )
paddle.dstack(list[Tensor([0, 1, 1, 1],"float64"),], )
paddle.dstack(list[Tensor([0, 1, 1, 1],"float64"),Tensor([0, 1, 1, 1],"float64"),Tensor([0, 1, 1, 1],"float64"),], )
paddle.dstack(list[Tensor([0, 1, 1],"float64"),], )
paddle.dstack(list[Tensor([0, 1, 1],"float64"),Tensor([0, 1, 1],"float64"),Tensor([0, 1, 1],"float64"),], )
paddle.dstack(list[Tensor([0, 1],"float64"),], )
paddle.dstack(list[Tensor([0, 1],"float64"),Tensor([0, 1],"float64"),Tensor([0, 1],"float64"),], )
paddle.dstack(list[Tensor([0],"float64"),], )
paddle.dstack(list[Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),], )
paddle.dstack(list[Tensor([1, 0, 1, 1],"float64"),], )
paddle.dstack(list[Tensor([1, 0, 1, 1],"float64"),Tensor([1, 0, 1, 1],"float64"),Tensor([1, 0, 1, 1],"float64"),], )
paddle.dstack(list[Tensor([1, 0, 1],"float64"),], )
paddle.dstack(list[Tensor([1, 0, 1],"float64"),Tensor([1, 0, 1],"float64"),Tensor([1, 0, 1],"float64"),], )
paddle.dstack(list[Tensor([1, 0],"float64"),], )
paddle.dstack(list[Tensor([1, 0],"float64"),Tensor([1, 0],"float64"),Tensor([1, 0],"float64"),], )
paddle.dstack(list[Tensor([1, 1, 0, 1],"float64"),], )
paddle.dstack(list[Tensor([1, 1, 0, 1],"float64"),Tensor([1, 1, 0, 1],"float64"),Tensor([1, 1, 0, 1],"float64"),], )
paddle.dstack(list[Tensor([1, 1, 0],"float64"),], )
paddle.dstack(list[Tensor([1, 1, 0],"float64"),Tensor([1, 1, 0],"float64"),Tensor([1, 1, 0],"float64"),], )
paddle.dstack(list[Tensor([1, 1, 1, 0],"float64"),], )
paddle.dstack(list[Tensor([1, 1, 1, 0],"float64"),Tensor([1, 1, 1, 0],"float64"),Tensor([1, 1, 1, 0],"float64"),], )
paddle.fft.fft2(x=Tensor([3, 3, 2, 0],"complex128"), s=tuple(1,2,), )
paddle.fft.fftn(Tensor([3, 3, 2, 0],"complex128"), tuple(1,2,), tuple(-2,-1,), "backward", None, )
paddle.fft.fftn(x=Tensor([4, 0, 6, 2],"float64"), s=list[2,4,], axes=tuple(0,1,), )
paddle.fft.fftn(x=Tensor([4, 0, 6],"float64"), s=list[2,4,], )
paddle.fft.fftn(x=Tensor([4, 4, 0],"float64"), s=list[2,4,], )
paddle.fft.ifft2(x=Tensor([3, 3, 2, 0],"complex128"), s=tuple(1,2,), )
paddle.fft.ifftn(Tensor([3, 3, 2, 0],"complex128"), tuple(1,2,), tuple(-2,-1,), "backward", None, )
paddle.fft.ifftn(x=Tensor([4, 0, 6, 2],"float64"), s=list[2,4,], axes=tuple(0,1,), )
paddle.fft.ifftn(x=Tensor([4, 0, 6],"float64"), s=list[2,4,], )
paddle.fft.ifftn(x=Tensor([4, 4, 0],"float64"), s=list[2,4,], )
paddle.fft.ihfft2(x=Tensor([0, 3, 3],"float64"), s=tuple(1,2,), axes=tuple(0,2,), )
paddle.fft.ihfft2(x=Tensor([0, 3, 3],"float64"), s=tuple(1,2,), axes=tuple(0,2,), norm="forward", )
paddle.fft.ihfft2(x=Tensor([0, 3, 3],"float64"), s=tuple(1,2,), axes=tuple(0,2,), norm="ortho", )
paddle.fft.ihfft2(x=Tensor([4, 0, 3],"float64"), s=tuple(1,2,), )
paddle.fft.ihfft2(x=Tensor([4, 3, 0],"float64"), s=tuple(1,2,), )
paddle.fft.ihfft2(x=Tensor([4, 3, 0],"float64"), s=tuple(1,2,), axes=tuple(0,2,), )
paddle.fft.ihfft2(x=Tensor([4, 3, 0],"float64"), s=tuple(1,2,), axes=tuple(0,2,), norm="forward", )
paddle.fft.ihfft2(x=Tensor([4, 3, 0],"float64"), s=tuple(1,2,), axes=tuple(0,2,), norm="ortho", )
paddle.fft.ihfftn(Tensor([0, 3, 3],"float64"), tuple(1,2,), tuple(0,2,), "backward", None, )
paddle.fft.ihfftn(Tensor([0, 3, 3],"float64"), tuple(1,2,), tuple(0,2,), "forward", None, )
paddle.fft.ihfftn(Tensor([0, 3, 3],"float64"), tuple(1,2,), tuple(0,2,), "ortho", None, )
paddle.fft.ihfftn(Tensor([4, 0, 3],"float64"), tuple(1,2,), tuple(-2,-1,), "backward", None, )
paddle.fft.ihfftn(Tensor([4, 3, 0],"float64"), tuple(1,2,), tuple(0,2,), "backward", None, )
paddle.fft.ihfftn(Tensor([4, 3, 0],"float64"), tuple(1,2,), tuple(0,2,), "forward", None, )
paddle.fft.ihfftn(Tensor([4, 3, 0],"float64"), tuple(1,2,), tuple(0,2,), "ortho", None, )
paddle.fft.ihfftn(Tensor([4, 3, 0],"float64"), tuple(1,2,), tuple(-2,-1,), "backward", None, )
paddle.fft.ihfftn(x=Tensor([4, 3, 0],"float64"), s=tuple(1,2,), )
paddle.fft.ihfftn(x=Tensor([4, 3, 0],"float64"), s=tuple(1,2,), axes=tuple(0,2,), )
paddle.fft.ihfftn(x=Tensor([4, 3, 0],"float64"), s=tuple(1,2,), axes=tuple(0,2,), norm="forward", )
paddle.fft.ihfftn(x=Tensor([4, 3, 0],"float64"), s=tuple(1,2,), axes=tuple(0,2,), norm="ortho", )
paddle.fft.rfft2(x=Tensor([2, 2, 0],"float64"), s=list[1,2,], )
paddle.fft.rfft2(x=Tensor([2, 2, 0],"float64"), s=list[1,2,], norm="backward", )
paddle.fft.rfft2(x=Tensor([2, 2, 0],"float64"), s=list[1,2,], norm="forward", )
paddle.fft.rfft2(x=Tensor([2, 2, 0],"float64"), s=list[1,2,], norm="ortho", )
paddle.fft.rfftn(Tensor([2, 2, 0],"float64"), list[1,2,], None, "ortho", None, )
paddle.fft.rfftn(Tensor([2, 2, 0],"float64"), list[1,2,], tuple(-2,-1,), "backward", None, )
paddle.fft.rfftn(Tensor([2, 2, 0],"float64"), list[1,2,], tuple(-2,-1,), "forward", None, )
paddle.fft.rfftn(Tensor([2, 2, 0],"float64"), list[1,2,], tuple(-2,-1,), "ortho", None, )
paddle.hstack(list[Tensor([0, 1, 1, 1],"float64"),], )
paddle.hstack(list[Tensor([0, 1, 1, 1],"float64"),Tensor([0, 1, 1, 1],"float64"),Tensor([0, 1, 1, 1],"float64"),], )
paddle.hstack(list[Tensor([0, 1, 1],"float64"),], )
paddle.hstack(list[Tensor([0, 1, 1],"float64"),Tensor([0, 1, 1],"float64"),Tensor([0, 1, 1],"float64"),], )
paddle.hstack(list[Tensor([0, 1],"float64"),], )
paddle.hstack(list[Tensor([0, 1],"float64"),Tensor([0, 1],"float64"),Tensor([0, 1],"float64"),], )
paddle.hstack(list[Tensor([0],"float64"),], )
paddle.hstack(list[Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),], )
paddle.hstack(list[Tensor([1, 0, 1, 1],"float64"),], )
paddle.hstack(list[Tensor([1, 0, 1, 1],"float64"),Tensor([1, 0, 1, 1],"float64"),Tensor([1, 0, 1, 1],"float64"),], )
paddle.hstack(list[Tensor([1, 0, 1],"float64"),], )
paddle.hstack(list[Tensor([1, 0, 1],"float64"),Tensor([1, 0, 1],"float64"),Tensor([1, 0, 1],"float64"),], )
paddle.hstack(list[Tensor([1, 0],"float64"),], )
paddle.hstack(list[Tensor([1, 0],"float64"),Tensor([1, 0],"float64"),Tensor([1, 0],"float64"),], )
paddle.hstack(list[Tensor([1, 1, 0, 1],"float64"),], )
paddle.hstack(list[Tensor([1, 1, 0, 1],"float64"),Tensor([1, 1, 0, 1],"float64"),Tensor([1, 1, 0, 1],"float64"),], )
paddle.hstack(list[Tensor([1, 1, 0],"float64"),], )
paddle.hstack(list[Tensor([1, 1, 0],"float64"),Tensor([1, 1, 0],"float64"),Tensor([1, 1, 0],"float64"),], )
paddle.hstack(list[Tensor([1, 1, 1, 0],"float64"),], )
paddle.hstack(list[Tensor([1, 1, 1, 0],"float64"),Tensor([1, 1, 1, 0],"float64"),Tensor([1, 1, 1, 0],"float64"),], )
paddle.inner(Tensor([5, 10, 10],"complex128"), Tensor([0, 10],"complex128"), )
paddle.inner(Tensor([5, 10, 10],"float64"), Tensor([0, 10],"float64"), )
paddle.inner(x=Tensor([0],"float64"), y=Tensor([0],"float64"), )
paddle.inner(x=Tensor([2, 5, 3, 0],"float64"), y=Tensor([3, 2, 5, 0],"float64"), )
paddle.inner(x=Tensor([2, 5, 3, 4],"float64"), y=Tensor([0, 2, 5, 4],"float64"), )
paddle.inner(x=Tensor([2, 5, 3, 4],"float64"), y=Tensor([3, 0, 5, 4],"float64"), )
paddle.inner(x=Tensor([2, 5, 3, 4],"float64"), y=Tensor([3, 2, 0, 4],"float64"), )
paddle.inner(x=Tensor([3, 0],"float64"), y=Tensor([5, 0],"float64"), )
paddle.inner(x=Tensor([3, 4],"float64"), y=Tensor([0, 2, 4],"float64"), )
paddle.inner(x=Tensor([3, 4],"float64"), y=Tensor([0, 2, 5, 4],"float64"), )
paddle.inner(x=Tensor([3, 4],"float64"), y=Tensor([0, 4],"float64"), )
paddle.inner(x=Tensor([3, 4],"float64"), y=Tensor([3, 0, 4],"float64"), )
paddle.inner(x=Tensor([3, 4],"float64"), y=Tensor([3, 0, 5, 4],"float64"), )
paddle.inner(x=Tensor([3, 4],"float64"), y=Tensor([3, 2, 0, 4],"float64"), )
paddle.inner(x=Tensor([4, 0],"float32"), y=Tensor([4, 0],"float32"), )
paddle.inner(x=Tensor([4, 4],"float32"), y=Tensor([0, 4],"float32"), )
paddle.inner(x=Tensor([5, 3, 0],"float64"), y=Tensor([2, 5, 0],"float64"), )
paddle.inner(x=Tensor([5, 3, 4],"float64"), y=Tensor([0, 5, 4],"float64"), )
paddle.inner(x=Tensor([5, 3, 4],"float64"), y=Tensor([2, 0, 4],"float64"), )
paddle.kron(Tensor([2, 2],"complex128"), Tensor([0, 2, 3],"float64"), )
paddle.kron(Tensor([2, 2],"complex128"), Tensor([2, 0, 3],"float64"), )
paddle.kron(Tensor([2, 2],"complex128"), Tensor([2, 2, 0],"float64"), )
paddle.lerp(Tensor([0, 1, 1, 1],"float32"), Tensor([0, 3, 8, 8],"float32"), 0.3, )
paddle.lerp(Tensor([0, 1, 1],"float32"), Tensor([0, 28, 28],"float32"), 0.36, )
paddle.lerp(Tensor([0, 1, 1],"float32"), Tensor([0, 8, 8],"float32"), 0.3, )
paddle.lerp(Tensor([0, 1, 8, 8],"float32"), Tensor([0, 3, 8, 8],"float32"), 1.1, )
paddle.lerp(Tensor([0, 1],"float32"), Tensor([0, 1],"float32"), Tensor([0, 1],"float32"), )
paddle.lerp(Tensor([0, 28, 28],"float32"), Tensor([0, 28, 28],"float32"), 1.0, )
paddle.lerp(Tensor([0, 28, 28],"float32"), Tensor([0, 28, 28],"float32"), 1.2, )
paddle.lerp(Tensor([0, 3, 3],"float32"), Tensor([0, 3, 3],"float32"), Tensor([0, 3, 3],"float32"), )
paddle.lerp(Tensor([0, 3, 3],"float32"), Tensor([1, 3, 3],"float32"), Tensor([1, 3, 3],"float32"), )
paddle.lerp(Tensor([0, 3, 3],"float64"), Tensor([0, 3, 3],"float64"), Tensor([0, 3, 3],"float64"), )
paddle.lerp(Tensor([0, 3, 3],"float64"), Tensor([1, 3, 3],"float64"), Tensor([1, 3, 3],"float64"), )
paddle.lerp(Tensor([0, 3, 8, 8],"float32"), Tensor([0, 3, 8, 8],"float32"), 2.1, )
paddle.lerp(Tensor([0, 3],"float64"), Tensor([0, 3],"float64"), Tensor([0, 3],"float64"), )
paddle.lerp(Tensor([0, 3],"float64"), Tensor([1, 3],"float64"), Tensor([1, 3],"float64"), )
paddle.lerp(Tensor([0, 6, 3, 1, 2, 5],"float64"), Tensor([0, 6, 3, 1, 2, 5],"float64"), Tensor([0, 6, 3, 1, 2, 5],"float64"), )
paddle.lerp(Tensor([0, 6, 3, 4, 1, 5],"float64"), Tensor([0, 6, 3, 4, 1, 5],"float64"), Tensor([0, 6, 3, 4, 1, 5],"float64"), )
paddle.lerp(Tensor([0, 8, 8],"float32"), Tensor([0, 8, 8],"float32"), 1.1, )
paddle.lerp(Tensor([0, 8, 8],"float32"), Tensor([0, 8, 8],"float32"), 2.1, )
paddle.lerp(Tensor([0],"float32"), Tensor([0],"float32"), Tensor([0],"float32"), )
paddle.lerp(Tensor([0],"float32"), Tensor([1],"float32"), Tensor([1],"float32"), )
paddle.lerp(Tensor([0],"float64"), Tensor([0],"float64"), Tensor([0],"float64"), )
paddle.lerp(Tensor([0],"float64"), Tensor([1],"float64"), Tensor([1],"float64"), )
paddle.lerp(Tensor([1, 0, 1],"float32"), Tensor([3, 0, 28],"float32"), 0.36, )
paddle.lerp(Tensor([1, 0, 1],"float32"), Tensor([3, 0, 8],"float32"), 0.3, )
paddle.lerp(Tensor([1, 0, 28],"float32"), Tensor([3, 0, 28],"float32"), 1.0, )
paddle.lerp(Tensor([1, 0, 3],"float32"), Tensor([1, 0, 3],"float32"), Tensor([1, 0, 3],"float32"), )
paddle.lerp(Tensor([1, 0, 3],"float64"), Tensor([1, 0, 3],"float64"), Tensor([1, 0, 3],"float64"), )
paddle.lerp(Tensor([1, 0, 8],"float32"), Tensor([3, 0, 8],"float32"), 1.1, )
paddle.lerp(Tensor([1, 0],"float64"), Tensor([1, 0],"float64"), Tensor([1, 0],"float64"), )
paddle.lerp(Tensor([1, 1, 0],"float32"), Tensor([3, 28, 0],"float32"), 0.36, )
paddle.lerp(Tensor([1, 1, 0],"float32"), Tensor([3, 8, 0],"float32"), 0.3, )
paddle.lerp(Tensor([1, 1, 1],"float32"), Tensor([0, 28, 28],"float32"), 0.36, )
paddle.lerp(Tensor([1, 1, 1],"float32"), Tensor([0, 8, 8],"float32"), 0.3, )
paddle.lerp(Tensor([1, 1, 1],"float32"), Tensor([3, 0, 28],"float32"), 0.36, )
paddle.lerp(Tensor([1, 1, 1],"float32"), Tensor([3, 0, 8],"float32"), 0.3, )
paddle.lerp(Tensor([1, 1, 1],"float32"), Tensor([3, 28, 0],"float32"), 0.36, )
paddle.lerp(Tensor([1, 1, 1],"float32"), Tensor([3, 8, 0],"float32"), 0.3, )
paddle.lerp(Tensor([1, 28, 0],"float32"), Tensor([3, 28, 0],"float32"), 1.0, )
paddle.lerp(Tensor([1, 28, 28],"float32"), Tensor([0, 28, 28],"float32"), 1.0, )
paddle.lerp(Tensor([1, 3, 0],"float32"), Tensor([1, 3, 0],"float32"), Tensor([1, 3, 0],"float32"), )
paddle.lerp(Tensor([1, 3, 0],"float64"), Tensor([1, 3, 0],"float64"), Tensor([1, 3, 0],"float64"), )
paddle.lerp(Tensor([1, 3, 3],"float32"), Tensor([0, 3, 3],"float32"), Tensor([1, 3, 3],"float32"), )
paddle.lerp(Tensor([1, 3, 3],"float64"), Tensor([0, 3, 3],"float64"), Tensor([1, 3, 3],"float64"), )
paddle.lerp(Tensor([1, 3],"float64"), Tensor([0, 3],"float64"), Tensor([1, 3],"float64"), )
paddle.lerp(Tensor([1, 8, 0],"float32"), Tensor([3, 8, 0],"float32"), 1.1, )
paddle.lerp(Tensor([1, 8, 8],"float32"), Tensor([0, 8, 8],"float32"), 1.1, )
paddle.lerp(Tensor([1],"float32"), Tensor([0],"float32"), Tensor([1],"float32"), )
paddle.lerp(Tensor([1],"float64"), Tensor([0],"float64"), Tensor([1],"float64"), )
paddle.lerp(Tensor([10, 1, 0, 5, 5],"float32"), Tensor([10, 5, 1, 5, 5],"float32"), Tensor([1],"float32"), )
paddle.lerp(Tensor([10, 1, 10, 5, 5],"float32"), Tensor([10, 0, 1, 5, 5],"float32"), Tensor([1],"float32"), )
paddle.lerp(Tensor([10, 5, 10, 1, 0],"float32"), Tensor([10, 5, 10, 5, 1],"float32"), Tensor([1],"float32"), )
paddle.lerp(Tensor([10, 5, 10, 1, 5],"float32"), Tensor([10, 5, 10, 0, 1],"float32"), Tensor([1],"float32"), )
paddle.lerp(Tensor([2, 0, 1, 1],"float32"), Tensor([2, 0, 8, 8],"float32"), 0.3, )
paddle.lerp(Tensor([2, 0, 5],"float32"), Tensor([3, 2, 1, 5],"float32"), 0.5, )
paddle.lerp(Tensor([2, 0, 8, 8],"float32"), Tensor([2, 0, 8, 8],"float32"), 1.1, )
paddle.lerp(Tensor([2, 0, 8, 8],"float32"), Tensor([2, 0, 8, 8],"float32"), 2.1, )
paddle.lerp(Tensor([2, 0],"float32"), Tensor([2, 0],"float32"), Tensor([2, 0],"float32"), )
paddle.lerp(Tensor([2, 0],"float32"), Tensor([2, 1],"float32"), Tensor([2, 1],"float32"), )
paddle.lerp(Tensor([2, 1, 0, 1],"float32"), Tensor([2, 3, 0, 8],"float32"), 0.3, )
paddle.lerp(Tensor([2, 1, 0, 8],"float32"), Tensor([2, 3, 0, 8],"float32"), 1.1, )
paddle.lerp(Tensor([2, 1, 1, 0],"float32"), Tensor([2, 3, 8, 0],"float32"), 0.3, )
paddle.lerp(Tensor([2, 1, 1, 1],"float32"), Tensor([2, 0, 8, 8],"float32"), 0.3, )
paddle.lerp(Tensor([2, 1, 1, 1],"float32"), Tensor([2, 3, 0, 8],"float32"), 0.3, )
paddle.lerp(Tensor([2, 1, 1, 1],"float32"), Tensor([2, 3, 8, 0],"float32"), 0.3, )
paddle.lerp(Tensor([2, 1, 8, 0],"float32"), Tensor([2, 3, 8, 0],"float32"), 1.1, )
paddle.lerp(Tensor([2, 1, 8, 8],"float32"), Tensor([2, 0, 8, 8],"float32"), 1.1, )
paddle.lerp(Tensor([2, 1],"float32"), Tensor([2, 0],"float32"), Tensor([2, 1],"float32"), )
paddle.lerp(Tensor([2, 2, 5],"float32"), Tensor([0, 2, 1, 5],"float32"), 0.5, )
paddle.lerp(Tensor([2, 3, 0, 8],"float32"), Tensor([2, 3, 0, 8],"float32"), 2.1, )
paddle.lerp(Tensor([2, 3, 8, 0],"float32"), Tensor([2, 3, 8, 0],"float32"), 2.1, )
paddle.lerp(Tensor([3, 0, 28],"float32"), Tensor([3, 0, 28],"float32"), 1.2, )
paddle.lerp(Tensor([3, 0, 3, 1, 2, 5],"float64"), Tensor([3, 0, 3, 1, 2, 5],"float64"), Tensor([3, 0, 3, 1, 2, 5],"float64"), )
paddle.lerp(Tensor([3, 0, 3, 4, 1, 5],"float64"), Tensor([3, 0, 3, 4, 1, 5],"float64"), Tensor([3, 0, 3, 4, 1, 5],"float64"), )
paddle.lerp(Tensor([3, 0, 8],"float32"), Tensor([3, 0, 8],"float32"), 2.1, )
paddle.lerp(Tensor([3, 28, 0],"float32"), Tensor([3, 28, 0],"float32"), 1.2, )
paddle.lerp(Tensor([3, 6, 0, 1, 2, 5],"float64"), Tensor([3, 6, 0, 1, 2, 5],"float64"), Tensor([3, 6, 0, 1, 2, 5],"float64"), )
paddle.lerp(Tensor([3, 6, 0, 4, 1, 5],"float64"), Tensor([3, 6, 0, 4, 1, 5],"float64"), Tensor([3, 6, 0, 4, 1, 5],"float64"), )
paddle.lerp(Tensor([3, 6, 3, 0, 1, 5],"float64"), Tensor([3, 6, 3, 0, 1, 5],"float64"), Tensor([3, 6, 3, 0, 1, 5],"float64"), )
paddle.lerp(Tensor([3, 6, 3, 0, 2, 5],"float64"), Tensor([3, 6, 3, 0, 2, 5],"float64"), Tensor([3, 6, 3, 0, 2, 5],"float64"), )
paddle.lerp(Tensor([3, 6, 3, 0, 2, 5],"float64"), Tensor([3, 6, 3, 1, 2, 5],"float64"), Tensor([3, 6, 3, 1, 2, 5],"float64"), )
paddle.lerp(Tensor([3, 6, 3, 1, 0, 5],"float64"), Tensor([3, 6, 3, 1, 0, 5],"float64"), Tensor([3, 6, 3, 1, 0, 5],"float64"), )
paddle.lerp(Tensor([3, 6, 3, 1, 2, 0],"float64"), Tensor([3, 6, 3, 1, 2, 0],"float64"), Tensor([3, 6, 3, 1, 2, 0],"float64"), )
paddle.lerp(Tensor([3, 6, 3, 1, 2, 5],"float64"), Tensor([3, 6, 3, 0, 2, 5],"float64"), Tensor([3, 6, 3, 1, 2, 5],"float64"), )
paddle.lerp(Tensor([3, 6, 3, 4, 0, 5],"float64"), Tensor([3, 6, 3, 4, 0, 5],"float64"), Tensor([3, 6, 3, 4, 0, 5],"float64"), )
paddle.lerp(Tensor([3, 6, 3, 4, 0, 5],"float64"), Tensor([3, 6, 3, 4, 1, 5],"float64"), Tensor([3, 6, 3, 4, 1, 5],"float64"), )
paddle.lerp(Tensor([3, 6, 3, 4, 1, 0],"float64"), Tensor([3, 6, 3, 4, 1, 0],"float64"), Tensor([3, 6, 3, 4, 1, 0],"float64"), )
paddle.lerp(Tensor([3, 6, 3, 4, 1, 5],"float64"), Tensor([3, 6, 3, 4, 0, 5],"float64"), Tensor([3, 6, 3, 4, 1, 5],"float64"), )
paddle.lerp(Tensor([3, 8, 0],"float32"), Tensor([3, 8, 0],"float32"), 2.1, )
paddle.lerp(x=Tensor([0, 5, 4, 3],"float64"), y=Tensor([0, 5, 4, 3],"float64"), weight=0.0, )
paddle.lerp(x=Tensor([0, 5, 4, 3],"float64"), y=Tensor([0, 5, 4, 3],"float64"), weight=0.5, )
paddle.lerp(x=Tensor([0, 5, 4, 3],"float64"), y=Tensor([0, 5, 4, 3],"float64"), weight=1.0, )
paddle.lerp(x=Tensor([0, 5, 4],"float64"), y=Tensor([0, 5, 4],"float64"), weight=0.5, )
paddle.lerp(x=Tensor([0, 5],"float64"), y=Tensor([0, 5],"float64"), weight=0.5, )
paddle.lerp(x=Tensor([0, 5],"float64"), y=Tensor([1],"float64"), weight=0.2, )
paddle.lerp(x=Tensor([0],"float32"), y=Tensor([0],"float32"), weight=0.5, )
paddle.lerp(x=Tensor([0],"float64"), y=Tensor([0],"float64"), weight=0.5, )
paddle.lerp(x=Tensor([4, 0, 4, 3],"float64"), y=Tensor([4, 0, 4, 3],"float64"), weight=0.0, )
paddle.lerp(x=Tensor([4, 0, 4, 3],"float64"), y=Tensor([4, 0, 4, 3],"float64"), weight=0.5, )
paddle.lerp(x=Tensor([4, 0, 4, 3],"float64"), y=Tensor([4, 0, 4, 3],"float64"), weight=1.0, )
paddle.lerp(x=Tensor([4, 0, 4],"float64"), y=Tensor([4, 0, 4],"float64"), weight=0.5, )
paddle.lerp(x=Tensor([4, 0],"float64"), y=Tensor([1],"float64"), weight=0.2, )
paddle.lerp(x=Tensor([4, 0],"float64"), y=Tensor([4, 0],"float64"), weight=0.5, )
paddle.lerp(x=Tensor([4, 5, 0, 3],"float64"), y=Tensor([4, 5, 0, 3],"float64"), weight=0.0, )
paddle.lerp(x=Tensor([4, 5, 0, 3],"float64"), y=Tensor([4, 5, 0, 3],"float64"), weight=0.5, )
paddle.lerp(x=Tensor([4, 5, 0, 3],"float64"), y=Tensor([4, 5, 0, 3],"float64"), weight=1.0, )
paddle.lerp(x=Tensor([4, 5, 0],"float64"), y=Tensor([4, 5, 0],"float64"), weight=0.5, )
paddle.lerp(x=Tensor([4, 5, 4, 0],"float64"), y=Tensor([4, 5, 4, 0],"float64"), weight=0.0, )
paddle.lerp(x=Tensor([4, 5, 4, 0],"float64"), y=Tensor([4, 5, 4, 0],"float64"), weight=0.5, )
paddle.lerp(x=Tensor([4, 5, 4, 0],"float64"), y=Tensor([4, 5, 4, 0],"float64"), weight=1.0, )
paddle.linalg.cholesky_solve(Tensor([0, 30, 2],"float64"), Tensor([0, 30, 30],"float64"), upper=True, )
paddle.linalg.cholesky_solve(Tensor([1, 30, 0],"float64"), Tensor([2, 30, 30],"float64"), upper=True, )
paddle.linalg.cholesky_solve(Tensor([1, 30, 2],"float64"), Tensor([0, 30, 30],"float64"), upper=True, )
paddle.linalg.cholesky_solve(Tensor([20, 0],"float64"), Tensor([20, 20],"float64"), upper=True, )
paddle.linalg.cholesky_solve(x=Tensor([0, 2, 4, 3],"float64"), y=Tensor([0, 2, 4, 4],"float64"), )
paddle.linalg.cholesky_solve(x=Tensor([0, 2, 4, 3],"float64"), y=Tensor([0, 2, 4, 4],"float64"), upper=True, )
paddle.linalg.cholesky_solve(x=Tensor([0, 4, 3],"float64"), y=Tensor([0, 4, 4],"float64"), )
paddle.linalg.cholesky_solve(x=Tensor([4, 0],"float32"), y=Tensor([4, 4],"float32"), )
paddle.linalg.cholesky_solve(x=Tensor([4, 0],"float64"), y=Tensor([4, 4],"float64"), )
paddle.linalg.cholesky_solve(x=Tensor([5, 0, 4, 3],"float64"), y=Tensor([5, 0, 4, 4],"float64"), )
paddle.linalg.cholesky_solve(x=Tensor([5, 0, 4, 3],"float64"), y=Tensor([5, 0, 4, 4],"float64"), upper=True, )
paddle.linalg.cholesky_solve(x=Tensor([5, 2, 4, 0],"float64"), y=Tensor([5, 2, 4, 4],"float64"), )
paddle.linalg.cholesky_solve(x=Tensor([5, 2, 4, 0],"float64"), y=Tensor([5, 2, 4, 4],"float64"), upper=True, )
paddle.linalg.cholesky_solve(x=Tensor([5, 4, 0],"float64"), y=Tensor([5, 4, 4],"float64"), )
paddle.linalg.cond(Tensor([0, 3],"float32"), )
paddle.linalg.cond(Tensor([0, 3],"float32"), p=1, )
paddle.linalg.cond(Tensor([0, 3],"float32"), p=-1, )
paddle.linalg.cond(Tensor([0, 3],"float32"), p=2, )
paddle.linalg.cond(Tensor([0, 3],"float32"), p=math.inf, )
paddle.linalg.cond(Tensor([0, 5],"float32"), 1, )
paddle.linalg.cond(Tensor([0, 5],"float32"), -1, )
paddle.linalg.cond(Tensor([0, 5],"float32"), 2, )
paddle.linalg.cond(Tensor([0, 5],"float32"), -2, )
paddle.linalg.cond(Tensor([0, 5],"float32"), math.inf, )
paddle.linalg.cond(Tensor([0, 5],"float32"), -math.inf, )
paddle.linalg.cond(Tensor([0, 5],"float32"), None, )
paddle.linalg.cond(Tensor([0, 7],"float64"), 2, )
paddle.linalg.cond(Tensor([0, 7],"float64"), -2, )
paddle.linalg.cond(Tensor([0, 7],"float64"), None, )
paddle.linalg.cond(Tensor([2, 4, 0, 3],"float32"), 1, )
paddle.linalg.cond(Tensor([2, 4, 0, 3],"float32"), -1, )
paddle.linalg.cond(Tensor([2, 4, 0, 3],"float32"), 2, )
paddle.linalg.cond(Tensor([2, 4, 0, 3],"float32"), -2, )
paddle.linalg.cond(Tensor([2, 4, 0, 3],"float32"), math.inf, )
paddle.linalg.cond(Tensor([2, 4, 0, 3],"float32"), -math.inf, )
paddle.linalg.cond(Tensor([2, 4, 0, 3],"float32"), None, )
paddle.linalg.cond(Tensor([2, 4, 3, 0],"float32"), 1, )
paddle.linalg.cond(Tensor([2, 4, 3, 0],"float32"), -1, )
paddle.linalg.cond(Tensor([2, 4, 3, 0],"float32"), 2, )
paddle.linalg.cond(Tensor([2, 4, 3, 0],"float32"), -2, )
paddle.linalg.cond(Tensor([2, 4, 3, 0],"float32"), math.inf, )
paddle.linalg.cond(Tensor([2, 4, 3, 0],"float32"), -math.inf, )
paddle.linalg.cond(Tensor([2, 4, 3, 0],"float32"), None, )
paddle.linalg.cond(Tensor([3, 0],"float32"), )
paddle.linalg.cond(Tensor([3, 0],"float32"), p=1, )
paddle.linalg.cond(Tensor([3, 0],"float32"), p=-1, )
paddle.linalg.cond(Tensor([3, 0],"float32"), p=2, )
paddle.linalg.cond(Tensor([3, 0],"float32"), p=math.inf, )
paddle.linalg.cond(Tensor([5, 0],"float32"), 1, )
paddle.linalg.cond(Tensor([5, 0],"float32"), -1, )
paddle.linalg.cond(Tensor([5, 0],"float32"), 2, )
paddle.linalg.cond(Tensor([5, 0],"float32"), -2, )
paddle.linalg.cond(Tensor([5, 0],"float32"), math.inf, )
paddle.linalg.cond(Tensor([5, 0],"float32"), -math.inf, )
paddle.linalg.cond(Tensor([5, 0],"float32"), None, )
paddle.linalg.cond(Tensor([9, 0],"float64"), 2, )
paddle.linalg.cond(Tensor([9, 0],"float64"), -2, )
paddle.linalg.cond(Tensor([9, 0],"float64"), None, )
paddle.linalg.cond(x=Tensor([0, 3],"float32"), )
paddle.linalg.cond(x=Tensor([0, 3],"float64"), )
paddle.linalg.cond(x=Tensor([0, 4],"float64"), p=1, )
paddle.linalg.cond(x=Tensor([0, 4],"float64"), p=-2, )
paddle.linalg.cond(x=Tensor([3, 0],"float32"), )
paddle.linalg.cond(x=Tensor([3, 0],"float64"), )
paddle.linalg.cond(x=Tensor([4, 0],"float64"), p=1, )
paddle.linalg.cond(x=Tensor([4, 0],"float64"), p=-2, )
paddle.linalg.cond(x=Tensor([4, 2, 0, 4],"float64"), p=-1, )
paddle.linalg.cond(x=Tensor([4, 2, 0, 4],"float64"), p=math.inf, )
paddle.linalg.cond(x=Tensor([4, 2, 0, 4],"float64"), p=-math.inf, )
paddle.linalg.cond(x=Tensor([4, 2, 4, 0],"float64"), p=-1, )
paddle.linalg.cond(x=Tensor([4, 2, 4, 0],"float64"), p=math.inf, )
paddle.linalg.cond(x=Tensor([4, 2, 4, 0],"float64"), p=-math.inf, )
paddle.linalg.cond(x=Tensor([6, 0],"float64"), p=-2, )
paddle.linalg.cond(x=Tensor([6, 2, 4, 0, 4],"float64"), )
paddle.linalg.cond(x=Tensor([6, 2, 4, 3, 0],"float64"), )
paddle.linalg.cov(Tensor([0, 4],"float32"), )
paddle.linalg.cov(x=Tensor([0, 12],"float64"), )
paddle.linalg.cov(x=Tensor([0, 2],"float32"), )
paddle.linalg.inv(x=Tensor([0, 2, 2],"float64"), )
paddle.linalg.inv(x=Tensor([0, 3, 4, 4],"float64"), )
paddle.linalg.inv(x=Tensor([5, 0, 4, 4],"float64"), )
paddle.linalg.lstsq(Tensor([0, 10],"float64"), Tensor([0, 8],"float64"), rcond=1e-15, driver="gels", )
paddle.linalg.lstsq(Tensor([0, 5],"float32"), Tensor([0, 8],"float32"), rcond=None, driver="gels", )
paddle.linalg.lstsq(Tensor([0, 7, 3],"float64"), Tensor([0, 7, 6],"float64"), rcond=1e-15, driver="gels", )
paddle.linalg.lstsq(Tensor([0, 8, 6],"float64"), Tensor([0, 8, 10],"float64"), rcond=1e-15, driver="gels", )
paddle.linalg.lstsq(Tensor([0, 9],"float32"), Tensor([0, 5],"float32"), rcond=1e-15, driver="gels", )
paddle.linalg.lstsq(Tensor([10, 0, 3],"float64"), Tensor([10, 0, 6],"float64"), rcond=1e-15, driver="gels", )
paddle.linalg.lstsq(Tensor([10, 0, 6],"float64"), Tensor([10, 0, 10],"float64"), rcond=1e-15, driver="gels", )
paddle.linalg.lstsq(Tensor([10, 0],"float32"), Tensor([10, 0],"float32"), rcond=None, driver="gels", )
paddle.linalg.lstsq(Tensor([10, 0],"float32"), Tensor([10, 8],"float32"), rcond=None, driver="gels", )
paddle.linalg.lstsq(Tensor([10, 7, 0],"float64"), Tensor([10, 7, 0],"float64"), rcond=1e-15, driver="gels", )
paddle.linalg.lstsq(Tensor([10, 7, 0],"float64"), Tensor([10, 7, 6],"float64"), rcond=1e-15, driver="gels", )
paddle.linalg.lstsq(Tensor([10, 7, 3],"float64"), Tensor([10, 7, 0],"float64"), rcond=1e-15, driver="gels", )
paddle.linalg.lstsq(Tensor([10, 8, 0],"float64"), Tensor([10, 8, 0],"float64"), rcond=1e-15, driver="gels", )
paddle.linalg.lstsq(Tensor([10, 8, 0],"float64"), Tensor([10, 8, 10],"float64"), rcond=1e-15, driver="gels", )
paddle.linalg.lstsq(Tensor([10, 8, 6],"float64"), Tensor([10, 8, 0],"float64"), rcond=1e-15, driver="gels", )
paddle.linalg.lstsq(Tensor([3, 0, 8],"float32"), Tensor([3, 0, 15],"float32"), rcond=None, driver="gels", )
paddle.linalg.lstsq(Tensor([3, 2, 0],"float32"), Tensor([3, 2, 0],"float32"), rcond=None, driver="gels", )
paddle.linalg.lstsq(Tensor([3, 2, 0],"float32"), Tensor([3, 2, 15],"float32"), rcond=None, driver="gels", )
paddle.linalg.lstsq(Tensor([5, 0],"float64"), Tensor([5, 0],"float64"), rcond=1e-15, driver="gels", )
paddle.linalg.lstsq(Tensor([5, 0],"float64"), Tensor([5, 8],"float64"), rcond=1e-15, driver="gels", )
paddle.linalg.lstsq(Tensor([9, 0],"float32"), Tensor([9, 0],"float32"), rcond=1e-15, driver="gels", )
paddle.linalg.lstsq(Tensor([9, 0],"float32"), Tensor([9, 5],"float32"), rcond=1e-15, driver="gels", )
paddle.linalg.matrix_norm(x=Tensor([0, 3, 4, 5],"float64"), p=-2, axis=list[1,2,], keepdim=False, )
paddle.linalg.matrix_norm(x=Tensor([0, 3, 4, 5],"float64"), p=-2, axis=list[1,2,], keepdim=True, )
paddle.linalg.matrix_norm(x=Tensor([0, 3, 4],"float64"), p="fro", axis=list[0,1,], keepdim=False, )
paddle.linalg.matrix_norm(x=Tensor([0, 3, 4],"float64"), p="fro", axis=list[0,1,], keepdim=True, )
paddle.linalg.matrix_norm(x=Tensor([0, 3, 4],"float64"), p="nuc", axis=list[0,1,], keepdim=False, )
paddle.linalg.matrix_norm(x=Tensor([0, 3, 4],"float64"), p="nuc", axis=list[0,1,], keepdim=True, )
paddle.linalg.matrix_norm(x=Tensor([2, 0, 4],"float64"), p="fro", axis=list[0,1,], keepdim=False, )
paddle.linalg.matrix_norm(x=Tensor([2, 0, 4],"float64"), p="fro", axis=list[0,1,], keepdim=True, )
paddle.linalg.matrix_norm(x=Tensor([2, 0, 4],"float64"), p="nuc", axis=list[0,1,], keepdim=False, )
paddle.linalg.matrix_norm(x=Tensor([2, 0, 4],"float64"), p="nuc", axis=list[0,1,], keepdim=True, )
paddle.linalg.matrix_norm(x=Tensor([2, 0, 4],"float64"), p=-math.inf, axis=list[0,1,], keepdim=False, )
paddle.linalg.matrix_norm(x=Tensor([2, 0, 4],"float64"), p=-math.inf, axis=list[0,1,], keepdim=True, )
paddle.linalg.matrix_norm(x=Tensor([2, 3, 0],"float64"), p="fro", axis=list[0,1,], keepdim=False, )
paddle.linalg.matrix_norm(x=Tensor([2, 3, 0],"float64"), p="fro", axis=list[0,1,], keepdim=True, )
paddle.linalg.matrix_norm(x=Tensor([2, 3, 0],"float64"), p=-math.inf, axis=list[0,1,], keepdim=False, )
paddle.linalg.matrix_norm(x=Tensor([2, 3, 0],"float64"), p=-math.inf, axis=list[0,1,], keepdim=True, )
paddle.linalg.matrix_norm(x=Tensor([2, 3, 4, 0],"float64"), p=-2, axis=list[1,2,], keepdim=False, )
paddle.linalg.matrix_norm(x=Tensor([2, 3, 4, 0],"float64"), p=-2, axis=list[1,2,], keepdim=True, )
paddle.linalg.matrix_power(x=Tensor([0, 2, 10, 10],"float64"), n=64, )
paddle.linalg.matrix_power(x=Tensor([0, 2, 2, 7, 6, 1, 11, 4, 4],"float64"), n=3, )
paddle.linalg.matrix_power(x=Tensor([0, 2, 3, 2, 1, 32, 32],"float64"), n=10, )
paddle.linalg.matrix_power(x=Tensor([0, 2, 3, 2, 1, 32, 32],"float64"), n=-10, )
paddle.linalg.matrix_power(x=Tensor([0, 2, 3, 2, 1, 32, 32],"float64"), n=-2, )
paddle.linalg.matrix_power(x=Tensor([0, 2, 32, 32],"float64"), n=10, )
paddle.linalg.matrix_power(x=Tensor([0, 2, 32, 32],"float64"), n=-10, )
paddle.linalg.matrix_power(x=Tensor([0, 2, 4, 4],"float64"), n=64, )
paddle.linalg.matrix_power(x=Tensor([0, 2, 4, 4],"float64"), n=8, )
paddle.linalg.matrix_power(x=Tensor([0, 4, 4],"float32"), n=3, )
paddle.linalg.matrix_power(x=Tensor([0, 4, 4],"float64"), n=3, )
paddle.linalg.matrix_power(x=Tensor([3, 0, 10, 10],"float64"), n=64, )
paddle.linalg.matrix_power(x=Tensor([3, 0, 2, 7, 6, 1, 11, 4, 4],"float64"), n=3, )
paddle.linalg.matrix_power(x=Tensor([3, 0, 3, 2, 1, 32, 32],"float64"), n=10, )
paddle.linalg.matrix_power(x=Tensor([3, 0, 3, 2, 1, 32, 32],"float64"), n=-10, )
paddle.linalg.matrix_power(x=Tensor([3, 0, 3, 2, 1, 32, 32],"float64"), n=-2, )
paddle.linalg.matrix_power(x=Tensor([3, 0, 32, 32],"float64"), n=10, )
paddle.linalg.matrix_power(x=Tensor([3, 0, 32, 32],"float64"), n=-10, )
paddle.linalg.matrix_power(x=Tensor([3, 0, 4, 4],"float64"), n=64, )
paddle.linalg.matrix_power(x=Tensor([3, 0, 4, 4],"float64"), n=8, )
paddle.linalg.matrix_power(x=Tensor([3, 2, 0, 2, 1, 32, 32],"float64"), n=10, )
paddle.linalg.matrix_power(x=Tensor([3, 2, 0, 2, 1, 32, 32],"float64"), n=-10, )
paddle.linalg.matrix_power(x=Tensor([3, 2, 0, 2, 1, 32, 32],"float64"), n=-2, )
paddle.linalg.matrix_power(x=Tensor([3, 2, 0, 7, 6, 1, 11, 4, 4],"float64"), n=3, )
paddle.linalg.matrix_power(x=Tensor([3, 2, 2, 0, 6, 1, 11, 4, 4],"float64"), n=3, )
paddle.linalg.matrix_power(x=Tensor([3, 2, 2, 7, 0, 1, 11, 4, 4],"float64"), n=3, )
paddle.linalg.matrix_power(x=Tensor([3, 2, 2, 7, 6, 0, 11, 4, 4],"float64"), n=3, )
paddle.linalg.matrix_power(x=Tensor([3, 2, 2, 7, 6, 1, 0, 4, 4],"float64"), n=3, )
paddle.linalg.matrix_power(x=Tensor([3, 2, 3, 0, 1, 32, 32],"float64"), n=10, )
paddle.linalg.matrix_power(x=Tensor([3, 2, 3, 0, 1, 32, 32],"float64"), n=-10, )
paddle.linalg.matrix_power(x=Tensor([3, 2, 3, 0, 1, 32, 32],"float64"), n=-2, )
paddle.linalg.matrix_power(x=Tensor([3, 2, 3, 2, 0, 32, 32],"float64"), n=10, )
paddle.linalg.matrix_power(x=Tensor([3, 2, 3, 2, 0, 32, 32],"float64"), n=-10, )
paddle.linalg.matrix_power(x=Tensor([3, 2, 3, 2, 0, 32, 32],"float64"), n=-2, )
paddle.linalg.matrix_rank(Tensor([0, 1],"float64"), Tensor([0, 4],"float64"), False, )
paddle.linalg.matrix_rank(Tensor([0, 1],"float64"), Tensor([1, 4],"float64"), False, )
paddle.linalg.matrix_rank(Tensor([0, 10],"float32"), )
paddle.linalg.matrix_rank(Tensor([0, 10],"float32"), hermitian=True, )
paddle.linalg.matrix_rank(Tensor([0, 10],"float32"), hermitian=True, atol=0.015, rtol=None, )
paddle.linalg.matrix_rank(Tensor([0, 10],"float32"), hermitian=True, atol=0.2, rtol=0.05, )
paddle.linalg.matrix_rank(Tensor([0, 10],"float32"), hermitian=True, atol=None, rtol=1.1, )
paddle.linalg.matrix_rank(Tensor([0, 10],"float32"), tol=0.1, )
paddle.linalg.matrix_rank(Tensor([0, 10],"float32"), tol=Tensor([2],"float32"), )
paddle.linalg.matrix_rank(Tensor([0, 200],"float64"), Tensor([0, 200],"float64"), True, )
paddle.linalg.matrix_rank(Tensor([0, 200],"float64"), Tensor([200, 200],"float64"), True, )
paddle.linalg.matrix_rank(Tensor([0, 3],"float32"), 0.1, True, )
paddle.linalg.matrix_rank(Tensor([0, 4, 5, 5],"float64"), hermitian=False, atol=Tensor([3, 4],"float64"), rtol=None, )
paddle.linalg.matrix_rank(Tensor([0, 4, 5, 6],"float32"), Tensor([3, 4],"float32"), False, )
paddle.linalg.matrix_rank(Tensor([0, 4, 7, 8],"float64"), hermitian=False, atol=Tensor([3, 1],"float32"), rtol=Tensor([3, 1],"float32"), )
paddle.linalg.matrix_rank(Tensor([0, 4, 7, 8],"float64"), hermitian=False, atol=Tensor([3, 4],"float32"), rtol=Tensor([3, 4],"float32"), )
paddle.linalg.matrix_rank(Tensor([0, 4, 7, 8],"float64"), Tensor([3, 4],"float32"), hermitian=False, )
paddle.linalg.matrix_rank(Tensor([10, 0],"float32"), )
paddle.linalg.matrix_rank(Tensor([10, 0],"float32"), hermitian=True, )
paddle.linalg.matrix_rank(Tensor([10, 0],"float32"), hermitian=True, atol=0.015, rtol=None, )
paddle.linalg.matrix_rank(Tensor([10, 0],"float32"), hermitian=True, atol=0.2, rtol=0.05, )
paddle.linalg.matrix_rank(Tensor([10, 0],"float32"), hermitian=True, atol=None, rtol=1.1, )
paddle.linalg.matrix_rank(Tensor([10, 0],"float32"), tol=0.1, )
paddle.linalg.matrix_rank(Tensor([10, 0],"float32"), tol=Tensor([2],"float32"), )
paddle.linalg.matrix_rank(Tensor([200, 0],"float64"), Tensor([200, 0],"float64"), True, )
paddle.linalg.matrix_rank(Tensor([200, 0],"float64"), Tensor([200, 200],"float64"), True, )
paddle.linalg.matrix_rank(Tensor([3, 0, 5, 5],"float64"), hermitian=False, atol=Tensor([3, 4],"float64"), rtol=None, )
paddle.linalg.matrix_rank(Tensor([3, 0, 5, 6],"float32"), Tensor([3, 4],"float32"), False, )
paddle.linalg.matrix_rank(Tensor([3, 0, 5],"float32"), )
paddle.linalg.matrix_rank(Tensor([3, 0, 5],"float32"), tol=0.1, )
paddle.linalg.matrix_rank(Tensor([3, 0, 7, 8],"float64"), hermitian=False, atol=Tensor([3, 4],"float32"), rtol=Tensor([3, 4],"float32"), )
paddle.linalg.matrix_rank(Tensor([3, 0, 7, 8],"float64"), Tensor([3, 4],"float32"), hermitian=False, )
paddle.linalg.matrix_rank(Tensor([3, 0],"float32"), 0.1, True, )
paddle.linalg.matrix_rank(Tensor([3, 4, 0, 5],"float64"), hermitian=False, atol=Tensor([3, 4],"float64"), rtol=None, )
paddle.linalg.matrix_rank(Tensor([3, 4, 0, 5],"float64"), hermitian=True, atol=0.5, rtol=None, )
paddle.linalg.matrix_rank(Tensor([3, 4, 0, 6],"float32"), Tensor([3, 4],"float32"), False, )
paddle.linalg.matrix_rank(Tensor([3, 4, 0, 8],"float64"), 0.1, hermitian=False, )
paddle.linalg.matrix_rank(Tensor([3, 4, 0, 8],"float64"), hermitian=False, atol=Tensor([3, 1],"float32"), rtol=Tensor([3, 1],"float32"), )
paddle.linalg.matrix_rank(Tensor([3, 4, 0, 8],"float64"), hermitian=False, atol=Tensor([3, 4],"float32"), rtol=Tensor([3, 4],"float32"), )
paddle.linalg.matrix_rank(Tensor([3, 4, 0, 8],"float64"), Tensor([3, 4],"float32"), hermitian=False, )
paddle.linalg.matrix_rank(Tensor([3, 4, 0],"float32"), )
paddle.linalg.matrix_rank(Tensor([3, 4, 0],"float32"), tol=0.1, )
paddle.linalg.matrix_rank(Tensor([3, 4, 5, 0],"float32"), Tensor([3, 4],"float32"), False, )
paddle.linalg.matrix_rank(Tensor([3, 4, 5, 0],"float64"), hermitian=False, atol=Tensor([3, 4],"float64"), rtol=None, )
paddle.linalg.matrix_rank(Tensor([3, 4, 5, 0],"float64"), hermitian=True, atol=0.5, rtol=None, )
paddle.linalg.matrix_rank(Tensor([3, 4, 7, 0],"float64"), 0.1, hermitian=False, )
paddle.linalg.matrix_rank(Tensor([3, 4, 7, 0],"float64"), hermitian=False, atol=Tensor([3, 1],"float32"), rtol=Tensor([3, 1],"float32"), )
paddle.linalg.matrix_rank(Tensor([3, 4, 7, 0],"float64"), hermitian=False, atol=Tensor([3, 4],"float32"), rtol=Tensor([3, 4],"float32"), )
paddle.linalg.matrix_rank(Tensor([3, 4, 7, 0],"float64"), Tensor([3, 4],"float32"), hermitian=False, )
paddle.linalg.matrix_rank(Tensor([5, 0],"float64"), Tensor([1, 0],"float64"), False, )
paddle.linalg.matrix_rank(Tensor([5, 0],"float64"), Tensor([1, 4],"float64"), False, )
paddle.linalg.matrix_rank(x=Tensor([0, 3, 4, 4],"float64"), tol=Tensor([2, 3],"float64"), hermitian=True, )
paddle.linalg.matrix_rank(x=Tensor([0, 4, 4, 5],"float64"), tol=Tensor([2, 1],"float64"), hermitian=False, )
paddle.linalg.matrix_rank(x=Tensor([0, 4],"float64"), tol=4.4, hermitian=True, )
paddle.linalg.matrix_rank(x=Tensor([0, 4],"float64"), tol=Tensor([1],"float64"), hermitian=True, )
paddle.linalg.matrix_rank(x=Tensor([0, 5],"float64"), tol=4.4, hermitian=False, )
paddle.linalg.matrix_rank(x=Tensor([2, 0, 4, 4],"float64"), tol=Tensor([2, 3],"float64"), hermitian=True, )
paddle.linalg.matrix_rank(x=Tensor([2, 2, 0, 4],"float64"), tol=Tensor([1, 1],"float64"), hermitian=True, )
paddle.linalg.matrix_rank(x=Tensor([2, 2, 4, 0],"float64"), tol=Tensor([1, 1],"float64"), hermitian=True, )
paddle.linalg.matrix_rank(x=Tensor([2, 3, 0, 4],"float64"), tol=Tensor([1],"float64"), hermitian=True, )
paddle.linalg.matrix_rank(x=Tensor([2, 3, 0, 4],"float64"), tol=Tensor([2, 3],"float64"), hermitian=True, )
paddle.linalg.matrix_rank(x=Tensor([2, 3, 4, 0],"float64"), tol=Tensor([1],"float64"), hermitian=True, )
paddle.linalg.matrix_rank(x=Tensor([2, 3, 4, 0],"float64"), tol=Tensor([2, 3],"float64"), hermitian=True, )
paddle.linalg.matrix_rank(x=Tensor([2, 4, 0, 5],"float64"), tol=Tensor([2, 1],"float64"), hermitian=False, )
paddle.linalg.matrix_rank(x=Tensor([2, 4, 4, 0],"float64"), tol=Tensor([2, 1],"float64"), hermitian=False, )
paddle.linalg.matrix_rank(x=Tensor([4, 0],"float64"), tol=4.4, hermitian=False, )
paddle.linalg.matrix_rank(x=Tensor([4, 0],"float64"), tol=4.4, hermitian=True, )
paddle.linalg.matrix_rank(x=Tensor([4, 0],"float64"), tol=Tensor([1],"float64"), hermitian=True, )
paddle.linalg.multi_dot(list[Tensor([0],"float64"),Tensor([0],"float64"),], )
paddle.linalg.multi_dot(list[Tensor([2, 10],"float64"),Tensor([10, 4],"float64"),Tensor([4, 0],"float64"),], )
paddle.linalg.multi_dot(list[Tensor([2, 4],"float64"),Tensor([4, 0],"float64"),], )
paddle.linalg.multi_dot(list[Tensor([2, 8],"float16"),Tensor([8, 0],"float16"),], )
paddle.linalg.multi_dot(list[Tensor([3, 4],"float64"),Tensor([4, 8],"float64"),Tensor([8, 0],"float64"),], )
paddle.linalg.multi_dot(list[Tensor([4],"float64"),Tensor([4, 0],"float64"),], )
paddle.linalg.multi_dot(list[Tensor([4],"float64"),Tensor([4, 3],"float64"),Tensor([3, 0],"float64"),], )
paddle.linalg.multi_dot(list[Tensor([4],"float64"),Tensor([4, 3],"float64"),Tensor([3, 4],"float64"),Tensor([4, 0],"float64"),], )
paddle.linalg.multi_dot(list[Tensor([8, 6],"float64"),Tensor([6, 3],"float64"),Tensor([3, 4],"float64"),Tensor([4, 0],"float64"),], )
paddle.linalg.norm(Tensor([0, 1, 4],"float32"), p=1.0, axis=-1, )
paddle.linalg.norm(Tensor([0, 10, 20],"float32"), p=0, axis=-1, )
paddle.linalg.norm(Tensor([0, 10, 20],"float32"), p=1.0, axis=-1, )
paddle.linalg.norm(Tensor([0, 10, 20],"float32"), p=1.5, axis=-1, )
paddle.linalg.norm(Tensor([0, 10, 20],"float32"), p=2.0, axis=-1, )
paddle.linalg.norm(Tensor([0, 10, 20],"float32"), p=2.5, axis=-1, )
paddle.linalg.norm(Tensor([0, 10, 20],"float32"), p=3.0, axis=-1, )
paddle.linalg.norm(Tensor([0, 10, 20],"float32"), p=math.inf, axis=-1, )
paddle.linalg.norm(Tensor([0, 20, 3],"float32"), 0.0, 2, True, )
paddle.linalg.norm(Tensor([0, 20, 3],"float32"), 2.0, -1, False, )
paddle.linalg.norm(Tensor([0, 20, 3],"float32"), 2.0, 2, True, )
paddle.linalg.norm(Tensor([0, 20, 3],"float32"), math.inf, 2, True, )
paddle.linalg.norm(Tensor([0, 20, 3],"float32"), -math.inf, 2, True, )
paddle.linalg.norm(Tensor([0, 3, 4, 5],"float64"), 2.0, 1, False, )
paddle.linalg.norm(Tensor([0, 3, 4, 5],"float64"), p="fro", axis=list[1,2,], keepdim=False, )
paddle.linalg.norm(Tensor([0, 5, 5],"float32"), p="fro", axis=list[0,1,], keepdim=True, )
paddle.linalg.norm(Tensor([0, 50, 20],"float64"), p=2.0, axis=-1, )
paddle.linalg.norm(Tensor([0, 6],"float32"), )
paddle.linalg.norm(Tensor([0, 6],"float32"), p=1, axis=list[0,1,], )
paddle.linalg.norm(Tensor([0],"float32"), )
paddle.linalg.norm(Tensor([0],"float32"), 2.0, )
paddle.linalg.norm(Tensor([0],"float32"), p=1, )
paddle.linalg.norm(Tensor([0],"float32"), p=1, axis=0, )
paddle.linalg.norm(Tensor([10, 0, 20],"float32"), p=0, axis=-1, )
paddle.linalg.norm(Tensor([10, 0, 20],"float32"), p=1.0, axis=-1, )
paddle.linalg.norm(Tensor([10, 0, 20],"float32"), p=1.5, axis=-1, )
paddle.linalg.norm(Tensor([10, 0, 20],"float32"), p=2.0, axis=-1, )
paddle.linalg.norm(Tensor([10, 0, 20],"float32"), p=2.5, axis=-1, )
paddle.linalg.norm(Tensor([10, 0, 20],"float32"), p=3.0, axis=-1, )
paddle.linalg.norm(Tensor([10, 0, 20],"float32"), p=math.inf, axis=-1, )
paddle.linalg.norm(Tensor([10, 10, 0],"float32"), p=0, axis=-1, )
paddle.linalg.norm(Tensor([10, 10, 0],"float32"), p=1.0, axis=-1, )
paddle.linalg.norm(Tensor([10, 10, 0],"float32"), p=1.5, axis=-1, )
paddle.linalg.norm(Tensor([10, 10, 0],"float32"), p=2.0, axis=-1, )
paddle.linalg.norm(Tensor([10, 10, 0],"float32"), p=2.5, axis=-1, )
paddle.linalg.norm(Tensor([10, 10, 0],"float32"), p=3.0, axis=-1, )
paddle.linalg.norm(Tensor([2, 0, 4, 5],"float64"), 2.0, 1, False, )
paddle.linalg.norm(Tensor([2, 0, 4, 5],"float64"), p="fro", axis=list[1,2,], keepdim=False, )
paddle.linalg.norm(Tensor([2, 3, 0, 5],"float64"), 2.0, 1, False, )
paddle.linalg.norm(Tensor([2, 3, 0, 5],"float64"), p="fro", axis=list[1,2,], keepdim=False, )
paddle.linalg.norm(Tensor([2, 3, 4, 0],"float64"), 2.0, 1, False, )
paddle.linalg.norm(Tensor([2, 3, 4, 0],"float64"), p="fro", axis=list[1,2,], keepdim=False, )
paddle.linalg.norm(Tensor([3, 0, 3],"float32"), 0.0, 2, True, )
paddle.linalg.norm(Tensor([3, 0, 3],"float32"), 2.0, -1, False, )
paddle.linalg.norm(Tensor([3, 0, 3],"float32"), 2.0, 2, True, )
paddle.linalg.norm(Tensor([3, 0, 3],"float32"), math.inf, 2, True, )
paddle.linalg.norm(Tensor([3, 0, 3],"float32"), -math.inf, 2, True, )
paddle.linalg.norm(Tensor([3, 20, 0],"float32"), 0.0, 2, True, )
paddle.linalg.norm(Tensor([3, 20, 0],"float32"), 2.0, -1, False, )
paddle.linalg.norm(Tensor([3, 20, 0],"float32"), 2.0, 2, True, )
paddle.linalg.norm(Tensor([300, 0, 4],"float32"), p=1.0, axis=-1, )
paddle.linalg.norm(Tensor([300, 1, 0],"float32"), p=1.0, axis=-1, )
paddle.linalg.norm(Tensor([4, 0],"float32"), )
paddle.linalg.norm(Tensor([4, 0],"float32"), p=-math.inf, axis=list[0,1,], )
paddle.linalg.norm(Tensor([5, 0, 5],"float32"), p="fro", axis=list[0,1,], keepdim=True, )
paddle.linalg.norm(Tensor([5, 5, 0],"float32"), p="fro", axis=list[0,1,], keepdim=True, )
paddle.linalg.norm(Tensor([50, 0, 20],"float64"), p=2.0, axis=-1, )
paddle.linalg.norm(Tensor([50, 50, 0],"float64"), p=2.0, axis=-1, )
paddle.linalg.norm(x=Tensor([0, 3, 3],"float64"), axis=1, p=0, )
paddle.linalg.norm(x=Tensor([0, 3, 3],"float64"), axis=1, p=math.inf, )
paddle.linalg.norm(x=Tensor([0, 3, 3],"float64"), axis=1, p=-math.inf, )
paddle.linalg.norm(x=Tensor([0, 3, 3],"float64"), axis=list[0,2,], p=1, )
paddle.linalg.norm(x=Tensor([0, 3, 3],"float64"), axis=list[1,], p=math.inf, )
paddle.linalg.norm(x=Tensor([0, 3, 3],"float64"), axis=list[1,2,], p=1, )
paddle.linalg.norm(x=Tensor([0, 3, 3],"float64"), axis=list[1,2,], p=math.inf, )
paddle.linalg.norm(x=Tensor([0, 3, 3],"float64"), axis=None, )
paddle.linalg.norm(x=Tensor([0, 3, 4],"float32"), )
paddle.linalg.norm(x=Tensor([0, 3, 4],"float64"), )
paddle.linalg.norm(x=Tensor([0, 3, 4],"float64"), p=1, axis=list[0,1,], keepdim=False, )
paddle.linalg.norm(x=Tensor([0, 3, 4],"float64"), p=1, axis=list[0,1,], keepdim=True, )
paddle.linalg.norm(x=Tensor([0, 3, 4],"float64"), p=2, axis=-1, keepdim=False, )
paddle.linalg.norm(x=Tensor([0, 3, 4],"float64"), p=2, axis=-1, keepdim=True, )
paddle.linalg.norm(x=Tensor([0, 3],"float64"), axis=None, p="fro", )
paddle.linalg.norm(x=Tensor([0, 4],"float64"), p=0, axis=1, keepdim=False, )
paddle.linalg.norm(x=Tensor([0, 4],"float64"), p=0, axis=1, keepdim=True, )
paddle.linalg.norm(x=Tensor([0, 4],"float64"), p=1, axis=1, keepdim=False, )
paddle.linalg.norm(x=Tensor([0, 4],"float64"), p=1, axis=1, keepdim=True, )
paddle.linalg.norm(x=Tensor([0, 4],"float64"), p=2, axis=1, keepdim=False, )
paddle.linalg.norm(x=Tensor([0, 4],"float64"), p=2, axis=1, keepdim=True, )
paddle.linalg.norm(x=Tensor([2, 0, 4],"float32"), )
paddle.linalg.norm(x=Tensor([2, 0, 4],"float32"), p=math.inf, axis=0, keepdim=False, )
paddle.linalg.norm(x=Tensor([2, 0, 4],"float32"), p=math.inf, axis=0, keepdim=True, )
paddle.linalg.norm(x=Tensor([2, 0, 4],"float64"), )
paddle.linalg.norm(x=Tensor([2, 0, 4],"float64"), p=2, axis=-1, keepdim=False, )
paddle.linalg.norm(x=Tensor([2, 0, 4],"float64"), p=2, axis=-1, keepdim=True, )
paddle.linalg.norm(x=Tensor([2, 0, 4],"float64"), p=-math.inf, axis=0, keepdim=False, )
paddle.linalg.norm(x=Tensor([2, 0, 4],"float64"), p=-math.inf, axis=0, keepdim=True, )
paddle.linalg.norm(x=Tensor([2, 0, 4],"float64"), p=math.inf, axis=list[0,1,], keepdim=False, )
paddle.linalg.norm(x=Tensor([2, 0, 4],"float64"), p=-math.inf, axis=list[0,1,], keepdim=False, )
paddle.linalg.norm(x=Tensor([2, 0, 4],"float64"), p=math.inf, axis=list[0,1,], keepdim=True, )
paddle.linalg.norm(x=Tensor([2, 0, 4],"float64"), p=-math.inf, axis=list[0,1,], keepdim=True, )
paddle.linalg.norm(x=Tensor([2, 3, 0],"float32"), )
paddle.linalg.norm(x=Tensor([2, 3, 0],"float32"), p=math.inf, axis=0, keepdim=False, )
paddle.linalg.norm(x=Tensor([2, 3, 0],"float32"), p=math.inf, axis=0, keepdim=True, )
paddle.linalg.norm(x=Tensor([2, 3, 0],"float64"), )
paddle.linalg.norm(x=Tensor([2, 3, 0],"float64"), p=1, axis=list[0,1,], keepdim=False, )
paddle.linalg.norm(x=Tensor([2, 3, 0],"float64"), p=1, axis=list[0,1,], keepdim=True, )
paddle.linalg.norm(x=Tensor([2, 3, 0],"float64"), p=2, axis=-1, keepdim=False, )
paddle.linalg.norm(x=Tensor([2, 3, 0],"float64"), p=2, axis=-1, keepdim=True, )
paddle.linalg.norm(x=Tensor([2, 3, 0],"float64"), p=2, axis=list[0,1,], keepdim=False, )
paddle.linalg.norm(x=Tensor([2, 3, 0],"float64"), p=2, axis=list[0,1,], keepdim=True, )
paddle.linalg.norm(x=Tensor([2, 3, 0],"float64"), p=-math.inf, axis=0, keepdim=False, )
paddle.linalg.norm(x=Tensor([2, 3, 0],"float64"), p=-math.inf, axis=0, keepdim=True, )
paddle.linalg.norm(x=Tensor([2, 3, 0],"float64"), p=math.inf, axis=list[0,1,], keepdim=False, )
paddle.linalg.norm(x=Tensor([2, 3, 0],"float64"), p=-math.inf, axis=list[0,1,], keepdim=False, )
paddle.linalg.norm(x=Tensor([2, 3, 0],"float64"), p=math.inf, axis=list[0,1,], keepdim=True, )
paddle.linalg.norm(x=Tensor([2, 3, 0],"float64"), p=-math.inf, axis=list[0,1,], keepdim=True, )
paddle.linalg.norm(x=Tensor([3, 0, 3],"float64"), axis=1, p=0, )
paddle.linalg.norm(x=Tensor([3, 0, 3],"float64"), axis=list[0,2,], p=1, )
paddle.linalg.norm(x=Tensor([3, 0, 3],"float64"), axis=list[0,2,], p=2, )
paddle.linalg.norm(x=Tensor([3, 0, 3],"float64"), axis=list[1,2,], p=1, )
paddle.linalg.norm(x=Tensor([3, 0, 3],"float64"), axis=None, )
paddle.linalg.norm(x=Tensor([3, 0],"float64"), axis=None, p="fro", )
paddle.linalg.norm(x=Tensor([3, 0],"float64"), p=0, axis=1, keepdim=False, )
paddle.linalg.norm(x=Tensor([3, 0],"float64"), p=0, axis=1, keepdim=True, )
paddle.linalg.norm(x=Tensor([3, 0],"float64"), p=1, axis=1, keepdim=False, )
paddle.linalg.norm(x=Tensor([3, 0],"float64"), p=1, axis=1, keepdim=True, )
paddle.linalg.norm(x=Tensor([3, 0],"float64"), p=2, axis=1, keepdim=False, )
paddle.linalg.norm(x=Tensor([3, 0],"float64"), p=2, axis=1, keepdim=True, )
paddle.linalg.norm(x=Tensor([3, 3, 0],"float64"), axis=1, p=0, )
paddle.linalg.norm(x=Tensor([3, 3, 0],"float64"), axis=1, p=math.inf, )
paddle.linalg.norm(x=Tensor([3, 3, 0],"float64"), axis=1, p=-math.inf, )
paddle.linalg.norm(x=Tensor([3, 3, 0],"float64"), axis=list[1,], p=math.inf, )
paddle.linalg.norm(x=Tensor([3, 3, 0],"float64"), axis=list[1,2,], p=math.inf, )
paddle.linalg.norm(x=Tensor([3, 3, 0],"float64"), axis=None, )
paddle.linalg.pinv(Tensor([0, 200, 300],"float64"), rcond=1e-15, hermitian=False, )
paddle.linalg.pinv(Tensor([0, 4, 5],"float64"), rcond=1e-15, hermitian=False, )
paddle.linalg.pinv(Tensor([0, 4],"float64"), rcond=1e-15, hermitian=False, )
paddle.linalg.pinv(Tensor([0, 5, 5],"float64"), rcond=1e-10, hermitian=False, )
paddle.linalg.pinv(Tensor([0, 5],"float64"), rcond=1e-15, hermitian=False, )
paddle.linalg.pinv(Tensor([0, 6, 5, 4],"float64"), rcond=1e-15, hermitian=False, )
paddle.linalg.pinv(Tensor([2, 0, 300],"float64"), rcond=1e-15, hermitian=False, )
paddle.linalg.pinv(Tensor([2, 200, 0],"float64"), rcond=1e-15, hermitian=False, )
paddle.linalg.pinv(Tensor([3, 0, 5, 4],"float64"), rcond=1e-15, hermitian=False, )
paddle.linalg.pinv(Tensor([3, 0, 5],"float64"), rcond=1e-10, hermitian=False, )
paddle.linalg.pinv(Tensor([3, 0, 5],"float64"), rcond=1e-15, hermitian=False, )
paddle.linalg.pinv(Tensor([3, 4, 0],"float64"), rcond=1e-15, hermitian=False, )
paddle.linalg.pinv(Tensor([3, 5, 0],"float64"), rcond=1e-10, hermitian=False, )
paddle.linalg.pinv(Tensor([3, 6, 0, 4],"float64"), rcond=1e-15, hermitian=False, )
paddle.linalg.pinv(Tensor([3, 6, 5, 0],"float64"), rcond=1e-15, hermitian=False, )
paddle.linalg.pinv(Tensor([4, 0],"float64"), rcond=1e-15, hermitian=False, )
paddle.linalg.pinv(Tensor([5, 0],"float64"), rcond=1e-15, hermitian=False, )
paddle.linalg.pinv(x=Tensor([0, 2, 2],"float64"), rcond=5, hermitian=True, )
paddle.linalg.pinv(x=Tensor([0, 4, 40],"float64"), )
paddle.linalg.pinv(x=Tensor([0, 4, 40],"float64"), rcond=0.5, )
paddle.linalg.pinv(x=Tensor([0, 4],"float32"), )
paddle.linalg.pinv(x=Tensor([0, 40],"float64"), )
paddle.linalg.pinv(x=Tensor([2, 0, 40],"float64"), )
paddle.linalg.pinv(x=Tensor([2, 0, 40],"float64"), rcond=0.5, )
paddle.linalg.pinv(x=Tensor([2, 0],"float64"), )
paddle.linalg.pinv(x=Tensor([2, 4, 0],"float64"), )
paddle.linalg.pinv(x=Tensor([2, 4, 0],"float64"), rcond=0.5, )
paddle.linalg.pinv(x=Tensor([3, 0],"float32"), )
paddle.linalg.pinv(x=Tensor([4, 0, 2],"float64"), rcond=5, hermitian=True, )
paddle.linalg.pinv(x=Tensor([4, 2, 0],"float64"), rcond=5, hermitian=True, )
paddle.linalg.solve(Tensor([0, 3, 3],"float64"), Tensor([0, 3, 3],"float64"), )
paddle.linalg.solve(Tensor([0, 3, 3],"float64"), Tensor([0, 3, 3],"float64"), left=False, )
paddle.linalg.solve(Tensor([0, 3, 3],"float64"), Tensor([1, 3, 3],"float64"), )
paddle.linalg.solve(Tensor([0, 3, 3],"float64"), Tensor([1, 3, 3],"float64"), left=False, )
paddle.linalg.solve(Tensor([10, 10],"float32"), Tensor([0, 10],"float32"), left=False, )
paddle.linalg.solve(Tensor([10, 10],"float32"), Tensor([10, 0],"float32"), )
paddle.linalg.solve(Tensor([10, 10],"float64"), Tensor([0, 10],"float64"), left=False, )
paddle.linalg.solve(Tensor([10, 10],"float64"), Tensor([10, 0],"float64"), )
paddle.linalg.solve(Tensor([2, 3, 3],"float64"), Tensor([1, 0, 3],"float64"), left=False, )
paddle.linalg.solve(Tensor([2, 3, 3],"float64"), Tensor([1, 3, 0],"float64"), )
paddle.linalg.solve(x=Tensor([0, 14, 14],"float64"), y=Tensor([0, 14, 2],"float64"), )
paddle.linalg.solve(x=Tensor([14, 14],"float64"), y=Tensor([14, 0],"float64"), )
paddle.linalg.solve(x=Tensor([4, 14, 14],"float64"), y=Tensor([4, 14, 0],"float64"), )
paddle.linalg.svd_lowrank(Tensor([0, 17],"float64"), q=4, )
paddle.linalg.svd_lowrank(Tensor([0, 4, 17],"float64"), q=4, )
paddle.linalg.svd_lowrank(Tensor([1, 0, 17],"float64"), q=4, )
paddle.linalg.svd_lowrank(Tensor([1, 4, 0],"float64"), q=4, )
paddle.linalg.svd_lowrank(Tensor([4, 0],"float64"), q=4, )
paddle.linalg.vector_norm(x=Tensor([0, 14, 5, 14],"complex128"), p=math.inf, axis=2, keepdim=False, )
paddle.linalg.vector_norm(x=Tensor([0, 14, 5, 14],"complex128"), p=math.inf, axis=2, keepdim=True, )
paddle.linalg.vector_norm(x=Tensor([0, 3, 4],"float64"), p=2, axis=-1, keepdim=False, )
paddle.linalg.vector_norm(x=Tensor([0, 3, 4],"float64"), p=2, axis=-1, keepdim=True, )
paddle.linalg.vector_norm(x=Tensor([0, 4],"float32"), p=2, axis=None, keepdim=False, )
paddle.linalg.vector_norm(x=Tensor([0, 4],"float32"), p=2, axis=None, keepdim=True, )
paddle.linalg.vector_norm(x=Tensor([0, 4],"float64"), p=0, axis=1, keepdim=False, )
paddle.linalg.vector_norm(x=Tensor([0, 4],"float64"), p=0, axis=1, keepdim=True, )
paddle.linalg.vector_norm(x=Tensor([0, 4],"float64"), p=0, axis=None, keepdim=False, )
paddle.linalg.vector_norm(x=Tensor([0, 4],"float64"), p=0, axis=None, keepdim=True, )
paddle.linalg.vector_norm(x=Tensor([0, 4],"float64"), p=1, axis=1, keepdim=False, )
paddle.linalg.vector_norm(x=Tensor([0, 4],"float64"), p=1, axis=1, keepdim=True, )
paddle.linalg.vector_norm(x=Tensor([0, 4],"float64"), p=2, axis=1, keepdim=False, )
paddle.linalg.vector_norm(x=Tensor([0, 4],"float64"), p=2, axis=1, keepdim=True, )
paddle.linalg.vector_norm(x=Tensor([1, 0, 5, 14],"complex128"), p=math.inf, axis=2, keepdim=False, )
paddle.linalg.vector_norm(x=Tensor([1, 0, 5, 14],"complex128"), p=math.inf, axis=2, keepdim=True, )
paddle.linalg.vector_norm(x=Tensor([1, 14, 5, 0],"complex128"), p=math.inf, axis=2, keepdim=False, )
paddle.linalg.vector_norm(x=Tensor([1, 14, 5, 0],"complex128"), p=math.inf, axis=2, keepdim=True, )
paddle.linalg.vector_norm(x=Tensor([2, 0, 4],"float32"), p=math.inf, axis=0, keepdim=False, )
paddle.linalg.vector_norm(x=Tensor([2, 0, 4],"float32"), p=math.inf, axis=0, keepdim=True, )
paddle.linalg.vector_norm(x=Tensor([2, 0, 4],"float64"), p=2, axis=-1, keepdim=False, )
paddle.linalg.vector_norm(x=Tensor([2, 0, 4],"float64"), p=2, axis=-1, keepdim=True, )
paddle.linalg.vector_norm(x=Tensor([2, 0, 4],"float64"), p=-math.inf, axis=0, keepdim=False, )
paddle.linalg.vector_norm(x=Tensor([2, 0, 4],"float64"), p=-math.inf, axis=0, keepdim=True, )
paddle.linalg.vector_norm(x=Tensor([2, 3, 0],"float32"), p=math.inf, axis=0, keepdim=False, )
paddle.linalg.vector_norm(x=Tensor([2, 3, 0],"float32"), p=math.inf, axis=0, keepdim=True, )
paddle.linalg.vector_norm(x=Tensor([2, 3, 0],"float64"), p=2, axis=-1, keepdim=False, )
paddle.linalg.vector_norm(x=Tensor([2, 3, 0],"float64"), p=2, axis=-1, keepdim=True, )
paddle.linalg.vector_norm(x=Tensor([2, 3, 0],"float64"), p=-math.inf, axis=0, keepdim=False, )
paddle.linalg.vector_norm(x=Tensor([2, 3, 0],"float64"), p=-math.inf, axis=0, keepdim=True, )
paddle.linalg.vector_norm(x=Tensor([2, 3, 0],"float64"), p=math.inf, axis=list[0,1,], keepdim=False, )
paddle.linalg.vector_norm(x=Tensor([2, 3, 0],"float64"), p=math.inf, axis=list[0,1,], keepdim=True, )
paddle.linalg.vector_norm(x=Tensor([3, 0],"float32"), p=2, axis=None, keepdim=False, )
paddle.linalg.vector_norm(x=Tensor([3, 0],"float32"), p=2, axis=None, keepdim=True, )
paddle.linalg.vector_norm(x=Tensor([3, 0],"float64"), p=0, axis=1, keepdim=False, )
paddle.linalg.vector_norm(x=Tensor([3, 0],"float64"), p=0, axis=1, keepdim=True, )
paddle.linalg.vector_norm(x=Tensor([3, 0],"float64"), p=0, axis=None, keepdim=False, )
paddle.linalg.vector_norm(x=Tensor([3, 0],"float64"), p=0, axis=None, keepdim=True, )
paddle.linalg.vector_norm(x=Tensor([3, 0],"float64"), p=1, axis=1, keepdim=False, )
paddle.linalg.vector_norm(x=Tensor([3, 0],"float64"), p=1, axis=1, keepdim=True, )
paddle.linalg.vector_norm(x=Tensor([3, 0],"float64"), p=2, axis=1, keepdim=False, )
paddle.linalg.vector_norm(x=Tensor([3, 0],"float64"), p=2, axis=1, keepdim=True, )
paddle.logsumexp(Tensor([0, 16, 4, 8],"float32"), axis=3, keepdim=True, )
paddle.logsumexp(Tensor([0, 200, 40],"float32"), axis=-1, keepdim=False, )
paddle.logsumexp(Tensor([0, 200, 40],"float32"), axis=list[0,2,], keepdim=False, )
paddle.logsumexp(Tensor([0, 3, 4, 5],"float16"), list[-1,], False, )
paddle.logsumexp(Tensor([0, 3, 4, 5],"float32"), 2, False, )
paddle.logsumexp(Tensor([0, 3, 4, 5],"float32"), list[-1,], False, )
paddle.logsumexp(Tensor([0, 3, 4, 5],"float32"), list[2,-3,], False, )
paddle.logsumexp(Tensor([0, 3, 4, 5],"float32"), tuple(0,1,-1,), False, )
paddle.logsumexp(Tensor([0, 3, 4, 5],"float64"), list[0,-1,], False, )
paddle.logsumexp(Tensor([0, 3, 4, 5],"float64"), list[0,1,2,3,], False, )
paddle.logsumexp(Tensor([0, 3, 4, 5],"float64"), list[-1,], True, )
paddle.logsumexp(Tensor([0, 4, 16, 1],"float32"), axis=1, keepdim=True, )
paddle.logsumexp(Tensor([0, 5, 6],"float64"), list[-1,], False, )
paddle.logsumexp(Tensor([0, 60],"float32"), axis=1, )
paddle.logsumexp(Tensor([0, 8, 4, 8],"float32"), axis=3, keepdim=True, )
paddle.logsumexp(Tensor([0],"float32"), axis=0, )
paddle.logsumexp(Tensor([10, 0],"float32"), axis=1, )
paddle.logsumexp(Tensor([2, 0, 4, 5],"float16"), list[-1,], False, )
paddle.logsumexp(Tensor([2, 0, 4, 5],"float32"), 2, False, )
paddle.logsumexp(Tensor([2, 0, 4, 5],"float32"), list[-1,], False, )
paddle.logsumexp(Tensor([2, 0, 4, 5],"float32"), list[2,-3,], False, )
paddle.logsumexp(Tensor([2, 0, 4, 5],"float32"), tuple(0,1,-1,), False, )
paddle.logsumexp(Tensor([2, 0, 4, 5],"float64"), list[0,-1,], False, )
paddle.logsumexp(Tensor([2, 0, 4, 5],"float64"), list[0,1,2,3,], False, )
paddle.logsumexp(Tensor([2, 0, 4, 5],"float64"), list[-1,], True, )
paddle.logsumexp(Tensor([2, 0],"float32"), axis=1, )
paddle.logsumexp(Tensor([2, 3, 0, 5],"float16"), list[-1,], False, )
paddle.logsumexp(Tensor([2, 3, 0, 5],"float32"), 2, False, )
paddle.logsumexp(Tensor([2, 3, 0, 5],"float32"), list[-1,], False, )
paddle.logsumexp(Tensor([2, 3, 0, 5],"float32"), list[2,-3,], False, )
paddle.logsumexp(Tensor([2, 3, 0, 5],"float32"), tuple(0,1,-1,), False, )
paddle.logsumexp(Tensor([2, 3, 0, 5],"float64"), list[0,-1,], False, )
paddle.logsumexp(Tensor([2, 3, 0, 5],"float64"), list[0,1,2,3,], False, )
paddle.logsumexp(Tensor([2, 3, 0, 5],"float64"), list[-1,], True, )
paddle.logsumexp(Tensor([2, 3, 4, 0],"float16"), list[-1,], False, )
paddle.logsumexp(Tensor([2, 3, 4, 0],"float32"), 2, False, )
paddle.logsumexp(Tensor([2, 3, 4, 0],"float32"), list[-1,], False, )
paddle.logsumexp(Tensor([2, 3, 4, 0],"float32"), list[2,-3,], False, )
paddle.logsumexp(Tensor([2, 3, 4, 0],"float32"), tuple(0,1,-1,), False, )
paddle.logsumexp(Tensor([2, 3, 4, 0],"float64"), list[0,-1,], False, )
paddle.logsumexp(Tensor([2, 3, 4, 0],"float64"), list[0,1,2,3,], False, )
paddle.logsumexp(Tensor([2, 3, 4, 0],"float64"), list[-1,], True, )
paddle.logsumexp(Tensor([26, 0, 16, 1],"float32"), axis=1, keepdim=True, )
paddle.logsumexp(Tensor([26, 0, 4, 8],"float32"), axis=3, keepdim=True, )
paddle.logsumexp(Tensor([26, 16, 0, 8],"float32"), axis=3, keepdim=True, )
paddle.logsumexp(Tensor([26, 16, 4, 0],"float32"), axis=3, keepdim=True, )
paddle.logsumexp(Tensor([26, 4, 0, 1],"float32"), axis=1, keepdim=True, )
paddle.logsumexp(Tensor([26, 4, 16, 0],"float32"), axis=1, keepdim=True, )
paddle.logsumexp(Tensor([26, 8, 0, 8],"float32"), axis=3, keepdim=True, )
paddle.logsumexp(Tensor([26, 8, 4, 0],"float32"), axis=3, keepdim=True, )
paddle.logsumexp(Tensor([30, 0, 40],"float32"), axis=-1, keepdim=False, )
paddle.logsumexp(Tensor([30, 0, 40],"float32"), axis=list[0,2,], keepdim=False, )
paddle.logsumexp(Tensor([30, 200, 0],"float32"), axis=-1, keepdim=False, )
paddle.logsumexp(Tensor([30, 200, 0],"float32"), axis=list[0,2,], keepdim=False, )
paddle.logsumexp(Tensor([4, 0, 6],"float64"), list[-1,], False, )
paddle.logsumexp(Tensor([4, 5, 0],"float64"), list[-1,], False, )
paddle.logsumexp(x=Tensor([0, 3, 2],"float32"), axis=2, )
paddle.logsumexp(x=Tensor([0, 3, 2],"float64"), axis=0, keepdim=True, )
paddle.logsumexp(x=Tensor([0, 3, 2],"float64"), axis=2, )
paddle.logsumexp(x=Tensor([0, 3, 2],"float64"), axis=list[0,1,], )
paddle.logsumexp(x=Tensor([0, 3, 2],"float64"), axis=list[0,1,], keepdim=True, )
paddle.logsumexp(x=Tensor([2, 0, 2],"float32"), axis=2, )
paddle.logsumexp(x=Tensor([2, 0, 2],"float64"), axis=0, keepdim=True, )
paddle.logsumexp(x=Tensor([2, 0, 2],"float64"), axis=2, )
paddle.logsumexp(x=Tensor([2, 0, 2],"float64"), axis=list[0,1,], )
paddle.logsumexp(x=Tensor([2, 0, 2],"float64"), axis=list[0,1,], keepdim=True, )
paddle.logsumexp(x=Tensor([2, 3, 0],"float32"), axis=2, )
paddle.logsumexp(x=Tensor([2, 3, 0],"float64"), axis=0, keepdim=True, )
paddle.logsumexp(x=Tensor([2, 3, 0],"float64"), axis=2, )
paddle.logsumexp(x=Tensor([2, 3, 0],"float64"), axis=list[0,1,], )
paddle.logsumexp(x=Tensor([2, 3, 0],"float64"), axis=list[0,1,], keepdim=True, )
paddle.masked_select(Tensor([0, 1],"float32"), Tensor([0, 1],"bool"), )
paddle.masked_select(Tensor([0, 1],"float32"), Tensor([1, 1],"bool"), )
paddle.masked_select(Tensor([0, 2, 2],"float32"), Tensor([0, 2, 2],"bool"), )
paddle.masked_select(Tensor([0, 2, 2],"float32"), Tensor([1, 2, 2],"bool"), )
paddle.masked_select(Tensor([0, 21504, 4],"float32"), Tensor([0, 21504, 4],"bool"), )
paddle.masked_select(Tensor([0, 21504, 4],"float32"), Tensor([1, 21504, 4],"bool"), )
paddle.masked_select(Tensor([0, 21504],"float32"), Tensor([0, 21504],"bool"), )
paddle.masked_select(Tensor([0, 21504],"float32"), Tensor([1, 21504],"bool"), )
paddle.masked_select(Tensor([1, 0, 2],"float32"), Tensor([1, 0, 2],"bool"), )
paddle.masked_select(Tensor([1, 0, 4],"float32"), Tensor([1, 0, 4],"bool"), )
paddle.masked_select(Tensor([1, 0],"float32"), Tensor([1, 0],"bool"), )
paddle.masked_select(Tensor([1, 0],"float32"), Tensor([1, 1],"bool"), )
paddle.masked_select(Tensor([1, 1],"float32"), Tensor([0, 1],"bool"), )
paddle.masked_select(Tensor([1, 1],"float32"), Tensor([1, 0],"bool"), )
paddle.masked_select(Tensor([1, 2, 0],"float32"), Tensor([1, 2, 0],"bool"), )
paddle.masked_select(Tensor([1, 2, 2],"float32"), Tensor([0, 2, 2],"bool"), )
paddle.masked_select(Tensor([1, 21504, 0],"float32"), Tensor([1, 21504, 0],"bool"), )
paddle.masked_select(Tensor([1, 21504, 4],"float32"), Tensor([0, 21504, 4],"bool"), )
paddle.masked_select(Tensor([1, 21504],"float32"), Tensor([0, 21504],"bool"), )
paddle.masked_select(x=Tensor([0, 3],"float32"), mask=Tensor([0, 3],"bool"), )
paddle.masked_select(x=Tensor([0, 3],"float64"), mask=Tensor([0, 3],"bool"), )
paddle.masked_select(x=Tensor([2, 0],"float32"), mask=Tensor([2, 0],"bool"), )
paddle.masked_select(x=Tensor([2, 0],"float64"), mask=Tensor([2, 0],"bool"), )
paddle.mean(Tensor([0, 1, 1, 1, 3],"float64"), )
paddle.mean(Tensor([0, 1, 1, 1],"float64"), )
paddle.mean(Tensor([0, 1, 1, 4, 3],"float64"), )
paddle.mean(Tensor([0, 1, 1],"float64"), )
paddle.mean(Tensor([0, 1, 100],"float32"), )
paddle.mean(Tensor([0, 1, 16, 16],"float32"), )
paddle.mean(Tensor([0, 1, 8, 8],"float32"), axis=tuple(-3,-2,-1,), keepdim=True, )
paddle.mean(Tensor([0, 1],"float32"), )
paddle.mean(Tensor([0, 1],"float32"), name=None, )
paddle.mean(Tensor([0, 10, 5],"float64"), name=None, )
paddle.mean(Tensor([0, 10],"float32"), axis=-1, )
paddle.mean(Tensor([0, 10],"float32"), name=None, )
paddle.mean(Tensor([0, 100, 2, 2, 2, 2],"float16"), )
paddle.mean(Tensor([0, 100, 2, 2, 2, 2],"float64"), )
paddle.mean(Tensor([0, 120],"float64"), )
paddle.mean(Tensor([0, 14, 5, 1, 1, 2, 1, 1, 2],"float32"), )
paddle.mean(Tensor([0, 16, 3, 3],"float32"), axis=list[1,2,3,], keepdim=True, )
paddle.mean(Tensor([0, 2, 1, 512, 4, 4],"float32"), 0, True, None, )
paddle.mean(Tensor([0, 2, 16, 4, 16],"float32"), axis=-1, keepdim=True, )
paddle.mean(Tensor([0, 2, 16],"float32"), axis=0, )
paddle.mean(Tensor([0, 2, 3, 1, 5, 1, 2],"float64"), )
paddle.mean(Tensor([0, 2, 3, 4, 4, 3, 3],"float64"), )
paddle.mean(Tensor([0, 2],"float64"), axis=1, )
paddle.mean(Tensor([0, 200, 40],"float32"), axis=1, keepdim=False, )
paddle.mean(Tensor([0, 200, 40],"float32"), axis=-1, keepdim=False, )
paddle.mean(Tensor([0, 200, 40],"float32"), axis=list[0,2,], keepdim=False, )
paddle.mean(Tensor([0, 256, 16, 16],"float16"), -2, )
paddle.mean(Tensor([0, 256, 16, 16],"float32"), -2, )
paddle.mean(Tensor([0, 256],"float32"), axis=-1, keepdim=True, )
paddle.mean(Tensor([0, 256],"float64"), axis=-1, keepdim=True, )
paddle.mean(Tensor([0, 28, 28],"float32"), axis=tuple(-3,-2,-1,), keepdim=True, )
paddle.mean(Tensor([0, 3, 10, 10],"float32"), name=None, )
paddle.mean(Tensor([0, 3, 2048],"float16"), axis=1, )
paddle.mean(Tensor([0, 3, 3, 4, 3, 4, 3, 4],"float64"), )
paddle.mean(Tensor([0, 3, 3, 4],"float64"), name=None, )
paddle.mean(Tensor([0, 3, 4, 4, 2, 3, 4, 4],"float64"), )
paddle.mean(Tensor([0, 3],"float32"), axis=list[0,], )
paddle.mean(Tensor([0, 300, 2048],"float32"), axis=list[1,2,], )
paddle.mean(Tensor([0, 32, 1, 1],"float32"), axis=list[1,2,3,], keepdim=True, )
paddle.mean(Tensor([0, 49, 512],"float32"), axis=1, )
paddle.mean(Tensor([0, 5],"float32"), axis=None, )
paddle.mean(Tensor([0, 512],"float32"), 1, keepdim=True, )
paddle.mean(Tensor([0, 60],"float32"), axis=0, )
paddle.mean(Tensor([0, 64],"float32"), axis=-1, )
paddle.mean(Tensor([0, 7, 32],"float32"), axis=-1, keepdim=True, )
paddle.mean(Tensor([0, 8, 768],"float16"), axis=1, keepdim=True, )
paddle.mean(Tensor([0, 8, 768],"float32"), axis=1, keepdim=True, )
paddle.mean(Tensor([0, 8, 8],"float32"), axis=tuple(-3,-2,-1,), keepdim=True, )
paddle.mean(Tensor([0, 9],"float32"), axis=1, )
paddle.mean(Tensor([0, 96, 1],"float32"), name=None, )
paddle.mean(Tensor([0, 96, 2],"float32"), axis=-1, )
paddle.mean(Tensor([0, 960, 960],"float32"), axis=list[1,2,], )
paddle.mean(Tensor([0],"float16"), axis=0, )
paddle.mean(Tensor([0],"float32"), )
paddle.mean(Tensor([0],"float32"), axis=0, )
paddle.mean(Tensor([0],"float32"), name=None, )
paddle.mean(Tensor([0],"float64"), )
paddle.mean(Tensor([1, 0, 1, 1, 3],"float64"), )
paddle.mean(Tensor([1, 0, 1, 1],"float64"), )
paddle.mean(Tensor([1, 0, 1, 4, 3],"float64"), )
paddle.mean(Tensor([1, 0, 1],"float64"), )
paddle.mean(Tensor([1, 0, 100],"float32"), )
paddle.mean(Tensor([1, 0, 16, 16],"float32"), )
paddle.mean(Tensor([1, 0, 2, 2, 2, 2],"float16"), )
paddle.mean(Tensor([1, 0, 2, 2, 2, 2],"float64"), )
paddle.mean(Tensor([1, 0, 28],"float32"), axis=tuple(-3,-2,-1,), keepdim=True, )
paddle.mean(Tensor([1, 0, 3, 4, 4, 3, 3],"float64"), )
paddle.mean(Tensor([1, 0, 8],"float32"), axis=tuple(-3,-2,-1,), keepdim=True, )
paddle.mean(Tensor([1, 0],"float32"), )
paddle.mean(Tensor([1, 0],"float32"), 1, keepdim=True, )
paddle.mean(Tensor([1, 0],"float32"), name=None, )
paddle.mean(Tensor([1, 0],"float64"), )
paddle.mean(Tensor([1, 1, 0, 1, 3],"float64"), )
paddle.mean(Tensor([1, 1, 0, 1],"float64"), )
paddle.mean(Tensor([1, 1, 0, 16],"float32"), )
paddle.mean(Tensor([1, 1, 0, 4, 3],"float64"), )
paddle.mean(Tensor([1, 1, 0],"float32"), )
paddle.mean(Tensor([1, 1, 0],"float64"), )
paddle.mean(Tensor([1, 1, 1, 0, 3],"float64"), )
paddle.mean(Tensor([1, 1, 1, 0],"float64"), )
paddle.mean(Tensor([1, 1, 1, 1, 0],"float64"), )
paddle.mean(Tensor([1, 1, 1, 4, 0],"float64"), )
paddle.mean(Tensor([1, 1, 16, 0],"float32"), )
paddle.mean(Tensor([1, 100, 0, 2, 2, 2],"float16"), )
paddle.mean(Tensor([1, 100, 0, 2, 2, 2],"float64"), )
paddle.mean(Tensor([1, 100, 2, 0, 2, 2],"float16"), )
paddle.mean(Tensor([1, 100, 2, 0, 2, 2],"float64"), )
paddle.mean(Tensor([1, 100, 2, 2, 0, 2],"float16"), )
paddle.mean(Tensor([1, 100, 2, 2, 0, 2],"float64"), )
paddle.mean(Tensor([1, 100, 2, 2, 2, 0],"float16"), )
paddle.mean(Tensor([1, 100, 2, 2, 2, 0],"float64"), )
paddle.mean(Tensor([1, 2, 0, 4, 4, 3, 3],"float64"), )
paddle.mean(Tensor([1, 2, 3, 0, 4, 3, 3],"float64"), )
paddle.mean(Tensor([1, 2, 3, 4, 0, 3, 3],"float64"), )
paddle.mean(Tensor([1, 2, 3, 4, 4, 0, 3],"float64"), )
paddle.mean(Tensor([1, 2, 3, 4, 4, 3, 0],"float64"), )
paddle.mean(Tensor([1, 28, 0],"float32"), axis=tuple(-3,-2,-1,), keepdim=True, )
paddle.mean(Tensor([1, 8, 0],"float32"), axis=tuple(-3,-2,-1,), keepdim=True, )
paddle.mean(Tensor([10, 0, 5],"float64"), name=None, )
paddle.mean(Tensor([10, 0],"float32"), axis=0, )
paddle.mean(Tensor([10, 0],"float32"), name=None, )
paddle.mean(Tensor([10, 10, 0],"float64"), name=None, )
paddle.mean(Tensor([128, 0, 512],"float32"), axis=1, )
paddle.mean(Tensor([128, 49, 0],"float32"), axis=1, )
paddle.mean(Tensor([13, 0, 16, 4, 16],"float32"), axis=-1, keepdim=True, )
paddle.mean(Tensor([13, 0, 32],"float32"), axis=-1, keepdim=True, )
paddle.mean(Tensor([13, 2, 0, 4, 16],"float32"), axis=-1, keepdim=True, )
paddle.mean(Tensor([13, 2, 16, 0, 16],"float32"), axis=-1, keepdim=True, )
paddle.mean(Tensor([13, 2, 16, 4, 0],"float32"), axis=-1, keepdim=True, )
paddle.mean(Tensor([13, 7, 0],"float32"), axis=-1, keepdim=True, )
paddle.mean(Tensor([14, 0, 768],"float16"), axis=1, keepdim=True, )
paddle.mean(Tensor([14, 0, 768],"float32"), axis=1, keepdim=True, )
paddle.mean(Tensor([14, 8, 0],"float16"), axis=1, keepdim=True, )
paddle.mean(Tensor([14, 8, 0],"float32"), axis=1, keepdim=True, )
paddle.mean(Tensor([16, 0, 1, 1],"float32"), axis=list[1,2,3,], keepdim=True, )
paddle.mean(Tensor([16, 0, 1],"float32"), name=None, )
paddle.mean(Tensor([16, 0, 2],"float32"), axis=-1, )
paddle.mean(Tensor([16, 0, 2048],"float16"), axis=1, )
paddle.mean(Tensor([16, 0, 3, 3],"float32"), axis=list[1,2,3,], keepdim=True, )
paddle.mean(Tensor([16, 0],"float32"), axis=-1, keepdim=True, )
paddle.mean(Tensor([16, 0],"float64"), axis=-1, keepdim=True, )
paddle.mean(Tensor([16, 16, 0, 3],"float32"), axis=list[1,2,3,], keepdim=True, )
paddle.mean(Tensor([16, 16, 3, 0],"float32"), axis=list[1,2,3,], keepdim=True, )
paddle.mean(Tensor([16, 3, 0],"float16"), axis=1, )
paddle.mean(Tensor([16, 32, 0, 1],"float32"), axis=list[1,2,3,], keepdim=True, )
paddle.mean(Tensor([16, 32, 1, 0],"float32"), axis=list[1,2,3,], keepdim=True, )
paddle.mean(Tensor([16, 96, 0],"float32"), axis=-1, )
paddle.mean(Tensor([16, 96, 0],"float32"), name=None, )
paddle.mean(Tensor([2, 0, 2],"float32"), axis=-1, )
paddle.mean(Tensor([2, 0, 2048],"float32"), axis=list[1,2,], )
paddle.mean(Tensor([2, 0, 3, 4, 3, 4, 3, 4],"float64"), )
paddle.mean(Tensor([2, 0, 4, 4, 2, 3, 4, 4],"float64"), )
paddle.mean(Tensor([2, 0, 5, 1, 1, 2, 1, 1, 2],"float32"), )
paddle.mean(Tensor([2, 0, 8, 8],"float32"), axis=tuple(-3,-2,-1,), keepdim=True, )
paddle.mean(Tensor([2, 0],"float32"), axis=0, )
paddle.mean(Tensor([2, 0],"float32"), axis=list[0,], )
paddle.mean(Tensor([2, 1, 0, 8],"float32"), axis=tuple(-3,-2,-1,), keepdim=True, )
paddle.mean(Tensor([2, 1, 8, 0],"float32"), axis=tuple(-3,-2,-1,), keepdim=True, )
paddle.mean(Tensor([2, 14, 0, 1, 1, 2, 1, 1, 2],"float32"), )
paddle.mean(Tensor([2, 14, 5, 0, 1, 2, 1, 1, 2],"float32"), )
paddle.mean(Tensor([2, 14, 5, 1, 0, 2, 1, 1, 2],"float32"), )
paddle.mean(Tensor([2, 14, 5, 1, 1, 0, 1, 1, 2],"float32"), )
paddle.mean(Tensor([2, 14, 5, 1, 1, 2, 0, 1, 2],"float32"), )
paddle.mean(Tensor([2, 14, 5, 1, 1, 2, 1, 0, 2],"float32"), )
paddle.mean(Tensor([2, 14, 5, 1, 1, 2, 1, 1, 0],"float32"), )
paddle.mean(Tensor([2, 3, 0, 4, 2, 3, 4, 4],"float64"), )
paddle.mean(Tensor([2, 3, 0, 4, 3, 4, 3, 4],"float64"), )
paddle.mean(Tensor([2, 3, 3, 0, 3, 4, 3, 4],"float64"), )
paddle.mean(Tensor([2, 3, 3, 4, 0, 4, 3, 4],"float64"), )
paddle.mean(Tensor([2, 3, 3, 4, 3, 0, 3, 4],"float64"), )
paddle.mean(Tensor([2, 3, 3, 4, 3, 4, 0, 4],"float64"), )
paddle.mean(Tensor([2, 3, 3, 4, 3, 4, 3, 0],"float64"), )
paddle.mean(Tensor([2, 3, 4, 0, 2, 3, 4, 4],"float64"), )
paddle.mean(Tensor([2, 3, 4, 4, 0, 3, 4, 4],"float64"), )
paddle.mean(Tensor([2, 3, 4, 4, 2, 0, 4, 4],"float64"), )
paddle.mean(Tensor([2, 3, 4, 4, 2, 3, 0, 4],"float64"), )
paddle.mean(Tensor([2, 3, 4, 4, 2, 3, 4, 0],"float64"), )
paddle.mean(Tensor([2, 300, 0],"float32"), axis=list[1,2,], )
paddle.mean(Tensor([2, 96, 0],"float32"), axis=-1, )
paddle.mean(Tensor([26, 0, 32],"float32"), axis=-1, keepdim=True, )
paddle.mean(Tensor([26, 7, 0],"float32"), axis=-1, keepdim=True, )
paddle.mean(Tensor([26182, 0, 16],"float32"), axis=0, )
paddle.mean(Tensor([26182, 2, 0],"float32"), axis=0, )
paddle.mean(Tensor([3, 0, 10, 10],"float32"), name=None, )
paddle.mean(Tensor([3, 0, 3, 1, 5, 1, 2],"float64"), )
paddle.mean(Tensor([3, 0],"float32"), axis=None, )
paddle.mean(Tensor([3, 2, 0, 1, 5, 1, 2],"float64"), )
paddle.mean(Tensor([3, 2, 3, 0, 5, 1, 2],"float64"), )
paddle.mean(Tensor([3, 2, 3, 1, 0, 1, 2],"float64"), )
paddle.mean(Tensor([3, 2, 3, 1, 5, 0, 2],"float64"), )
paddle.mean(Tensor([3, 2, 3, 1, 5, 1, 0],"float64"), )
paddle.mean(Tensor([3, 3, 0, 10],"float32"), name=None, )
paddle.mean(Tensor([3, 3, 10, 0],"float32"), name=None, )
paddle.mean(Tensor([30, 0, 40],"float32"), axis=1, keepdim=False, )
paddle.mean(Tensor([30, 0, 40],"float32"), axis=-1, keepdim=False, )
paddle.mean(Tensor([30, 0, 40],"float32"), axis=list[0,2,], keepdim=False, )
paddle.mean(Tensor([30, 200, 0],"float32"), axis=1, keepdim=False, )
paddle.mean(Tensor([30, 200, 0],"float32"), axis=-1, keepdim=False, )
paddle.mean(Tensor([30, 200, 0],"float32"), axis=list[0,2,], keepdim=False, )
paddle.mean(Tensor([4, 0, 1, 512, 4, 4],"float32"), 0, True, None, )
paddle.mean(Tensor([4, 0, 16, 16],"float16"), -2, )
paddle.mean(Tensor([4, 0, 16, 16],"float32"), -2, )
paddle.mean(Tensor([4, 0, 3, 4],"float64"), name=None, )
paddle.mean(Tensor([4, 0],"float32"), 1, keepdim=True, )
paddle.mean(Tensor([4, 0],"float32"), axis=-1, )
paddle.mean(Tensor([4, 0],"float32"), axis=list[0,], )
paddle.mean(Tensor([4, 2, 0, 512, 4, 4],"float32"), 0, True, None, )
paddle.mean(Tensor([4, 2, 1, 0, 4, 4],"float32"), 0, True, None, )
paddle.mean(Tensor([4, 2, 1, 512, 0, 4],"float32"), 0, True, None, )
paddle.mean(Tensor([4, 2, 1, 512, 4, 0],"float32"), 0, True, None, )
paddle.mean(Tensor([4, 256, 0, 16],"float16"), -2, )
paddle.mean(Tensor([4, 256, 0, 16],"float32"), -2, )
paddle.mean(Tensor([4, 256, 16, 0],"float16"), -2, )
paddle.mean(Tensor([4, 256, 16, 0],"float32"), -2, )
paddle.mean(Tensor([4, 3, 0, 4],"float64"), name=None, )
paddle.mean(Tensor([4, 3, 3, 0],"float64"), name=None, )
paddle.mean(Tensor([5, 0],"float64"), axis=1, )
paddle.mean(Tensor([6, 0],"float32"), axis=1, )
paddle.mean(Tensor([8, 0, 960],"float32"), axis=list[1,2,], )
paddle.mean(Tensor([8, 960, 0],"float32"), axis=list[1,2,], )
paddle.mean(x=Tensor([0, 1, 3],"float64"), axis=list[0,1,], )
paddle.mean(x=Tensor([0, 1, 3],"float64"), axis=list[0,1,2,], )
paddle.mean(x=Tensor([0, 1, 3],"float64"), axis=list[0,1,2,], keepdim=False, )
paddle.mean(x=Tensor([0, 1, 3],"float64"), axis=list[0,2,], keepdim=True, )
paddle.mean(x=Tensor([0, 1, 3],"float64"), axis=tuple(0,1,2,), keepdim=False, )
paddle.mean(x=Tensor([0, 1, 3],"float64"), axis=tuple(0,2,), keepdim=True, )
paddle.mean(x=Tensor([0, 1],"float32"), )
paddle.mean(x=Tensor([0, 4],"float32"), )
paddle.mean(x=Tensor([0, 4],"float64"), axis=1, )
paddle.mean(x=Tensor([0, 4],"float64"), axis=1, keepdim=True, )
paddle.mean(x=Tensor([0, 4],"float64"), axis=-2, )
paddle.mean(x=Tensor([0, 4],"float64"), axis=-2, keepdim=False, )
paddle.mean(x=Tensor([0, 96, 1],"float32"), axis=tuple(1,), keepdim=True, )
paddle.mean(x=Tensor([0, 96, 2],"float32"), axis=-1, )
paddle.mean(x=Tensor([1, 0],"float32"), )
paddle.mean(x=Tensor([1, 0],"float64"), axis=1, )
paddle.mean(x=Tensor([1, 0],"float64"), axis=1, keepdim=True, )
paddle.mean(x=Tensor([1, 0],"float64"), axis=-2, )
paddle.mean(x=Tensor([1, 0],"float64"), axis=-2, keepdim=False, )
paddle.mean(x=Tensor([13, 0, 1],"float32"), axis=tuple(1,), keepdim=True, )
paddle.mean(x=Tensor([13, 96, 0],"float32"), axis=tuple(1,), keepdim=True, )
paddle.mean(x=Tensor([16, 0, 1],"float32"), axis=tuple(1,), keepdim=True, )
paddle.mean(x=Tensor([16, 0, 2],"float32"), axis=-1, )
paddle.mean(x=Tensor([16, 96, 0],"float32"), axis=-1, )
paddle.mean(x=Tensor([16, 96, 0],"float32"), axis=tuple(1,), keepdim=True, )
paddle.mean(x=Tensor([2, 0, 2],"float32"), axis=-1, )
paddle.mean(x=Tensor([2, 0, 3],"float64"), axis=list[0,1,], )
paddle.mean(x=Tensor([2, 0, 3],"float64"), axis=list[0,1,2,], )
paddle.mean(x=Tensor([2, 0, 3],"float64"), axis=list[0,1,2,], keepdim=False, )
paddle.mean(x=Tensor([2, 0, 3],"float64"), axis=list[0,2,], keepdim=True, )
paddle.mean(x=Tensor([2, 0, 3],"float64"), axis=tuple(0,1,2,), keepdim=False, )
paddle.mean(x=Tensor([2, 0, 3],"float64"), axis=tuple(0,2,), keepdim=True, )
paddle.mean(x=Tensor([2, 1, 0],"float64"), axis=list[0,1,], )
paddle.mean(x=Tensor([2, 1, 0],"float64"), axis=list[0,1,2,], )
paddle.mean(x=Tensor([2, 1, 0],"float64"), axis=list[0,1,2,], keepdim=False, )
paddle.mean(x=Tensor([2, 1, 0],"float64"), axis=list[0,2,], keepdim=True, )
paddle.mean(x=Tensor([2, 1, 0],"float64"), axis=tuple(0,1,2,), keepdim=False, )
paddle.mean(x=Tensor([2, 1, 0],"float64"), axis=tuple(0,2,), keepdim=True, )
paddle.mean(x=Tensor([2, 96, 0],"float32"), axis=-1, )
paddle.mm(input=Tensor([2, 3],"float32"), mat2=Tensor([3, 0],"float32"), )
paddle.mm(input=Tensor([2, 3],"float64"), mat2=Tensor([3, 0],"float64"), )
paddle.mm(Tensor([1, 10],"float32"), Tensor([10, 0],"float32"), )
paddle.mm(Tensor([1, 10],"float64"), Tensor([10, 0],"float64"), )
paddle.nn.functional.adaptive_avg_pool1d(Tensor([0, 1024, 49],"float32"), 1, None, )
paddle.nn.functional.adaptive_avg_pool1d(Tensor([0, 256, 16],"float32"), 1, None, )
paddle.nn.functional.adaptive_avg_pool1d(Tensor([12, 0, 16],"float32"), 1, None, )
paddle.nn.functional.adaptive_avg_pool1d(Tensor([12, 0, 49],"float32"), 1, None, )
paddle.nn.functional.normalize(Tensor([0, 10],"float32"), )
paddle.nn.functional.normalize(Tensor([0, 10],"float32"), axis=0, )
paddle.nn.functional.normalize(Tensor([0, 10],"float32"), p=1.5, )
paddle.nn.functional.normalize(Tensor([0, 1024],"float16"), p=2, axis=-1, )
paddle.nn.functional.normalize(Tensor([0, 11],"float32"), axis=1, )
paddle.nn.functional.normalize(Tensor([0, 128, 32, 32],"float32"), axis=1, )
paddle.nn.functional.normalize(Tensor([0, 192],"float32"), axis=1, )
paddle.nn.functional.normalize(Tensor([0, 256, 16, 16],"float32"), axis=1, )
paddle.nn.functional.normalize(Tensor([0, 5],"float32"), axis=0, )
paddle.nn.functional.normalize(Tensor([0, 512],"float16"), )
paddle.nn.functional.normalize(Tensor([0, 64],"float32"), axis=-1, )
paddle.nn.functional.normalize(Tensor([0, 768],"float32"), axis=-1, )
paddle.nn.functional.normalize(Tensor([0],"float32"), axis=0, )
paddle.nn.functional.normalize(Tensor([0],"float32"), axis=0, epsilon=1e-10, )
paddle.nn.functional.normalize(Tensor([0],"float32"), axis=0, epsilon=1e-12, )
paddle.nn.functional.normalize(Tensor([1, 0, 16, 16],"float32"), axis=1, )
paddle.nn.functional.normalize(Tensor([1, 0, 32, 32],"float32"), axis=1, )
paddle.nn.functional.normalize(Tensor([1, 0],"float32"), axis=1, )
paddle.nn.functional.normalize(Tensor([1, 128, 0, 32],"float32"), axis=1, )
paddle.nn.functional.normalize(Tensor([1, 128, 32, 0],"float32"), axis=1, )
paddle.nn.functional.normalize(Tensor([1, 256, 0, 16],"float32"), axis=1, )
paddle.nn.functional.normalize(Tensor([1, 256, 16, 0],"float32"), axis=1, )
paddle.nn.functional.normalize(Tensor([10, 0],"float16"), )
paddle.nn.functional.normalize(Tensor([10, 0],"float32"), )
paddle.nn.functional.normalize(Tensor([10, 0],"float32"), axis=0, )
paddle.nn.functional.normalize(Tensor([10, 0],"float32"), p=1.5, )
paddle.nn.functional.normalize(Tensor([12, 0],"float32"), axis=-1, )
paddle.nn.functional.normalize(Tensor([2, 0],"float16"), p=2, axis=-1, )
paddle.nn.functional.normalize(Tensor([80, 0],"float32"), axis=-1, )
paddle.nn.functional.normalize(x=Tensor([0, 2],"float64"), p=1.2, )
paddle.nn.functional.normalize(x=Tensor([0, 4],"float32"), )
paddle.nn.functional.normalize(x=Tensor([0, 4],"float64"), )
paddle.nn.functional.normalize(x=Tensor([0, 5, 6, 7],"float64"), )
paddle.nn.functional.normalize(x=Tensor([0, 5, 6, 7],"float64"), p=1, )
paddle.nn.functional.normalize(x=Tensor([0, 5, 6, 7],"float64"), p=4, )
paddle.nn.functional.normalize(x=Tensor([0, 5, 6, 7],"float64"), p=4, axis=3, )
paddle.nn.functional.normalize(x=Tensor([0, 5, 6],"float64"), )
paddle.nn.functional.normalize(x=Tensor([0, 768],"float32"), axis=-1, )
paddle.nn.functional.normalize(x=Tensor([0],"float64"), axis=0, )
paddle.nn.functional.normalize(x=Tensor([1, 0],"float32"), axis=-1, )
paddle.nn.functional.normalize(x=Tensor([2, 0],"float32"), )
paddle.nn.functional.normalize(x=Tensor([2, 0],"float64"), )
paddle.nn.functional.normalize(x=Tensor([4, 0, 6, 7],"float64"), )
paddle.nn.functional.normalize(x=Tensor([4, 0, 6, 7],"float64"), p=1, )
paddle.nn.functional.normalize(x=Tensor([4, 0, 6, 7],"float64"), p=4, )
paddle.nn.functional.normalize(x=Tensor([4, 0, 6, 7],"float64"), p=4, axis=3, )
paddle.nn.functional.normalize(x=Tensor([4, 0, 6],"float64"), )
paddle.nn.functional.normalize(x=Tensor([4, 0],"float64"), p=1.2, )
paddle.nn.functional.normalize(x=Tensor([4, 5, 0, 7],"float64"), )
paddle.nn.functional.normalize(x=Tensor([4, 5, 0, 7],"float64"), p=1, )
paddle.nn.functional.normalize(x=Tensor([4, 5, 0, 7],"float64"), p=4, )
paddle.nn.functional.normalize(x=Tensor([4, 5, 0, 7],"float64"), p=4, axis=3, )
paddle.nn.functional.normalize(x=Tensor([4, 5, 0],"float64"), )
paddle.nn.functional.normalize(x=Tensor([4, 5, 6, 0],"float64"), )
paddle.nn.functional.normalize(x=Tensor([4, 5, 6, 0],"float64"), p=1, )
paddle.nn.functional.normalize(x=Tensor([4, 5, 6, 0],"float64"), p=4, )
paddle.nn.functional.normalize(x=Tensor([4, 5, 6, 0],"float64"), p=4, axis=3, )
paddle.nn.functional.pairwise_distance(Tensor([0, 100],"float32"), Tensor([0, 1],"float32"), 2.0, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([0, 100],"float32"), Tensor([0, 100],"float32"), 0, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([0, 100],"float32"), Tensor([0, 100],"float32"), 0, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([0, 100],"float32"), Tensor([0, 100],"float32"), 1, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([0, 100],"float32"), Tensor([0, 100],"float32"), -1, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([0, 100],"float32"), Tensor([0, 100],"float32"), 1, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([0, 100],"float32"), Tensor([0, 100],"float32"), -1, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([0, 100],"float32"), Tensor([0, 100],"float32"), 2, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([0, 100],"float32"), Tensor([0, 100],"float32"), 2, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([0, 100],"float32"), Tensor([0, 100],"float32"), math.inf, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([0, 100],"float32"), Tensor([0, 100],"float32"), -math.inf, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([0, 100],"float32"), Tensor([0, 100],"float32"), math.inf, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([0, 100],"float32"), Tensor([0, 100],"float32"), -math.inf, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([0, 100],"float32"), Tensor([100],"float32"), 2.0, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([0, 100],"float64"), Tensor([0, 100],"float64"), 0, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([0, 100],"float64"), Tensor([0, 100],"float64"), 0, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([0, 100],"float64"), Tensor([0, 100],"float64"), 1, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([0, 100],"float64"), Tensor([0, 100],"float64"), -1, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([0, 100],"float64"), Tensor([0, 100],"float64"), 1, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([0, 100],"float64"), Tensor([0, 100],"float64"), -1, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([0, 100],"float64"), Tensor([0, 100],"float64"), 2, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([0, 100],"float64"), Tensor([0, 100],"float64"), 2, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([0, 100],"float64"), Tensor([0, 100],"float64"), math.inf, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([0, 100],"float64"), Tensor([0, 100],"float64"), -math.inf, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([0, 100],"float64"), Tensor([0, 100],"float64"), math.inf, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([0, 100],"float64"), Tensor([0, 100],"float64"), -math.inf, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([0],"float32"), Tensor([0],"float32"), )
paddle.nn.functional.pairwise_distance(Tensor([0],"float32"), Tensor([0],"float32"), 0, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([0],"float32"), Tensor([0],"float32"), 0, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([0],"float32"), Tensor([0],"float32"), 1, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([0],"float32"), Tensor([0],"float32"), 1, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([0],"float32"), Tensor([0],"float32"), 2, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([0],"float32"), Tensor([0],"float32"), 2, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([0],"float64"), Tensor([0],"float64"), 0, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([0],"float64"), Tensor([0],"float64"), 0, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([0],"float64"), Tensor([0],"float64"), 1, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([0],"float64"), Tensor([0],"float64"), 1, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([0],"float64"), Tensor([0],"float64"), 2, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([0],"float64"), Tensor([0],"float64"), 2, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([100, 0],"float32"), Tensor([100, 0],"float32"), 0, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([100, 0],"float32"), Tensor([100, 0],"float32"), 0, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([100, 0],"float32"), Tensor([100, 0],"float32"), 1, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([100, 0],"float32"), Tensor([100, 0],"float32"), 1, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([100, 0],"float32"), Tensor([100, 0],"float32"), 2, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([100, 0],"float32"), Tensor([100, 0],"float32"), 2, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([100, 0],"float32"), Tensor([100, 0],"float32"), 2.0, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([100, 0],"float32"), Tensor([100, 1],"float32"), 2.0, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([100, 0],"float64"), Tensor([100, 0],"float64"), 0, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([100, 0],"float64"), Tensor([100, 0],"float64"), 0, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([100, 0],"float64"), Tensor([100, 0],"float64"), 1, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([100, 0],"float64"), Tensor([100, 0],"float64"), 1, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(Tensor([100, 0],"float64"), Tensor([100, 0],"float64"), 2, 1e-06, False, None, )
paddle.nn.functional.pairwise_distance(Tensor([100, 0],"float64"), Tensor([100, 0],"float64"), 2, 1e-06, True, None, )
paddle.nn.functional.pairwise_distance(x=Tensor([0, 100],"float32"), y=Tensor([0, 1],"float32"), p=2.0, epsilon=1e-06, keepdim=False, )
paddle.nn.functional.pairwise_distance(x=Tensor([0, 100],"float32"), y=Tensor([100],"float32"), p=2.0, epsilon=1e-06, keepdim=False, )
paddle.nn.functional.pairwise_distance(x=Tensor([100, 0],"float32"), y=Tensor([100, 0],"float32"), p=2.0, epsilon=1e-06, keepdim=False, )
paddle.nn.functional.pairwise_distance(x=Tensor([100, 0],"float32"), y=Tensor([100, 1],"float32"), p=2.0, epsilon=1e-06, keepdim=False, )
paddle.nn.functional.triplet_margin_with_distance_loss(input=Tensor([0, 5],"float64"), positive=Tensor([0, 5],"float64"), negative=Tensor([0, 5],"float64"), distance_function=None, margin=0.3, swap=False, reduction="mean", )
paddle.nn.functional.triplet_margin_with_distance_loss(input=Tensor([0, 5],"float64"), positive=Tensor([0, 5],"float64"), negative=Tensor([0, 5],"float64"), distance_function=None, margin=0.3, swap=False, reduction="none", )
paddle.nn.functional.triplet_margin_with_distance_loss(input=Tensor([0, 5],"float64"), positive=Tensor([0, 5],"float64"), negative=Tensor([0, 5],"float64"), distance_function=None, margin=0.3, swap=False, reduction="sum", )
paddle.nn.functional.triplet_margin_with_distance_loss(input=Tensor([0, 5],"float64"), positive=Tensor([0, 5],"float64"), negative=Tensor([0, 5],"float64"), distance_function=None, margin=0.3, swap=True, reduction="mean", )
paddle.nn.functional.triplet_margin_with_distance_loss(input=Tensor([5, 0],"float64"), positive=Tensor([5, 0],"float64"), negative=Tensor([5, 0],"float64"), distance_function=None, margin=0.3, swap=False, reduction="mean", )
paddle.nn.functional.triplet_margin_with_distance_loss(input=Tensor([5, 0],"float64"), positive=Tensor([5, 0],"float64"), negative=Tensor([5, 0],"float64"), distance_function=None, margin=0.3, swap=False, reduction="none", )
paddle.nn.functional.triplet_margin_with_distance_loss(input=Tensor([5, 0],"float64"), positive=Tensor([5, 0],"float64"), negative=Tensor([5, 0],"float64"), distance_function=None, margin=0.3, swap=False, reduction="sum", )
paddle.nn.functional.triplet_margin_with_distance_loss(input=Tensor([5, 0],"float64"), positive=Tensor([5, 0],"float64"), negative=Tensor([5, 0],"float64"), distance_function=None, margin=0.3, swap=True, reduction="mean", )
paddle.nn.functional.triplet_margin_with_distance_loss(Tensor([0, 5],"float64"), Tensor([0, 5],"float64"), Tensor([0, 5],"float64"), margin=0.3, swap=False, reduction="mean", name=None, )
paddle.nn.functional.triplet_margin_with_distance_loss(Tensor([0, 5],"float64"), Tensor([0, 5],"float64"), Tensor([0, 5],"float64"), margin=0.3, swap=False, reduction="none", name=None, )
paddle.nn.functional.triplet_margin_with_distance_loss(Tensor([0, 5],"float64"), Tensor([0, 5],"float64"), Tensor([0, 5],"float64"), margin=0.3, swap=False, reduction="sum", name=None, )
paddle.nn.functional.triplet_margin_with_distance_loss(Tensor([0, 5],"float64"), Tensor([0, 5],"float64"), Tensor([0, 5],"float64"), margin=0.3, swap=True, reduction="mean", name=None, )
paddle.nn.functional.triplet_margin_with_distance_loss(Tensor([5, 0],"float64"), Tensor([5, 0],"float64"), Tensor([5, 0],"float64"), margin=0.3, swap=False, reduction="mean", name=None, )
paddle.nn.functional.triplet_margin_with_distance_loss(Tensor([5, 0],"float64"), Tensor([5, 0],"float64"), Tensor([5, 0],"float64"), margin=0.3, swap=False, reduction="none", name=None, )
paddle.nn.functional.triplet_margin_with_distance_loss(Tensor([5, 0],"float64"), Tensor([5, 0],"float64"), Tensor([5, 0],"float64"), margin=0.3, swap=False, reduction="sum", name=None, )
paddle.nn.functional.triplet_margin_with_distance_loss(Tensor([5, 0],"float64"), Tensor([5, 0],"float64"), Tensor([5, 0],"float64"), margin=0.3, swap=True, reduction="mean", name=None, )
paddle.nn.utils.vector_to_parameters(Tensor([165],"float32"), list[Tensor([0, 15],"float32"),Tensor([15],"float32"),], )
paddle.nn.utils.vector_to_parameters(Tensor([165],"float32"), list[Tensor([10, 0],"float32"),Tensor([15],"float32"),], )
paddle.nn.utils.vector_to_parameters(Tensor([165],"float32"), list[Tensor([10, 15],"float32"),Tensor([0],"float32"),], )
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([0, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 0],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([0],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([0, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 0],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([0],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([0, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 0],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([0],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([0, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 0],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([0],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([0, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 0],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([0],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([0, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 0],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([0],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([0],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([0],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([0],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([0],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([0, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 0],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([0],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([0, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 0],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([0],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([0, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 0],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([0],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([0, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 0],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([0],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([0, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 0],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([0],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([0, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 0],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([0],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([0],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([0],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([0],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([0],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([0, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 0],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([0],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([0, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 0],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([0],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([0, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 0],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([0],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([0, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 0],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([0],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([0, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 0],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([0],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([0, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 0],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([0],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([0],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([0],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([0],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([0],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([0, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 0],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([0],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([0, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 0],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([0],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([0, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 0],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([0],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([0, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 0],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([0],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([0, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 0],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([0],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([0, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 0],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([0],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([0],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([0],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([0],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([0],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([0],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([0],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([0, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 0],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([0],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([0, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 0],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([0],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([0, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 0],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([0],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([0, 128],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 0],"float32"),Tensor([128],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([0],"float32"),Tenso ...
paddle.nn.utils.vector_to_parameters(Tensor([1851904],"float32"), list[Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 512],"float32"),Tensor([512],"float32"),Tensor([512, 128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Tensor([128, 128],"float32"),Tensor([128],"float32"),Ten ...
paddle.nn.utils.vector_to_parameters(Tensor([27],"float32"), list[Tensor([0, 2, 4],"float32"),Tensor([3],"float32"),], )
paddle.nn.utils.vector_to_parameters(Tensor([27],"float32"), list[Tensor([3, 0, 4],"float32"),Tensor([3],"float32"),], )
paddle.nn.utils.vector_to_parameters(Tensor([27],"float32"), list[Tensor([3, 2, 0],"float32"),Tensor([3],"float32"),], )
paddle.nn.utils.vector_to_parameters(Tensor([27],"float32"), list[Tensor([3, 2, 4],"float32"),Tensor([0],"float32"),], )
paddle.nn.utils.vector_to_parameters(Tensor([2880],"float32"), list[Tensor([0, 8],"float32"),Tensor([48, 16],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),Tensor([48, 16],"float32"),Tensor([48, 16],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),], )
paddle.nn.utils.vector_to_parameters(Tensor([2880],"float32"), list[Tensor([48, 0],"float32"),Tensor([48, 16],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),Tensor([48, 16],"float32"),Tensor([48, 16],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),], )
paddle.nn.utils.vector_to_parameters(Tensor([2880],"float32"), list[Tensor([48, 8],"float32"),Tensor([0, 16],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),Tensor([48, 16],"float32"),Tensor([48, 16],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),], )
paddle.nn.utils.vector_to_parameters(Tensor([2880],"float32"), list[Tensor([48, 8],"float32"),Tensor([48, 0],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),Tensor([48, 16],"float32"),Tensor([48, 16],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),], )
paddle.nn.utils.vector_to_parameters(Tensor([2880],"float32"), list[Tensor([48, 8],"float32"),Tensor([48, 16],"float32"),Tensor([0],"float32"),Tensor([48],"float32"),Tensor([48, 16],"float32"),Tensor([48, 16],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),], )
paddle.nn.utils.vector_to_parameters(Tensor([2880],"float32"), list[Tensor([48, 8],"float32"),Tensor([48, 16],"float32"),Tensor([48],"float32"),Tensor([0],"float32"),Tensor([48, 16],"float32"),Tensor([48, 16],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),], )
paddle.nn.utils.vector_to_parameters(Tensor([2880],"float32"), list[Tensor([48, 8],"float32"),Tensor([48, 16],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),Tensor([0, 16],"float32"),Tensor([48, 16],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),], )
paddle.nn.utils.vector_to_parameters(Tensor([2880],"float32"), list[Tensor([48, 8],"float32"),Tensor([48, 16],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),Tensor([48, 0],"float32"),Tensor([48, 16],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),], )
paddle.nn.utils.vector_to_parameters(Tensor([2880],"float32"), list[Tensor([48, 8],"float32"),Tensor([48, 16],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),Tensor([48, 16],"float32"),Tensor([0, 16],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),], )
paddle.nn.utils.vector_to_parameters(Tensor([2880],"float32"), list[Tensor([48, 8],"float32"),Tensor([48, 16],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),Tensor([48, 16],"float32"),Tensor([48, 0],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),], )
paddle.nn.utils.vector_to_parameters(Tensor([2880],"float32"), list[Tensor([48, 8],"float32"),Tensor([48, 16],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),Tensor([48, 16],"float32"),Tensor([48, 16],"float32"),Tensor([0],"float32"),Tensor([48],"float32"),], )
paddle.nn.utils.vector_to_parameters(Tensor([2880],"float32"), list[Tensor([48, 8],"float32"),Tensor([48, 16],"float32"),Tensor([48],"float32"),Tensor([48],"float32"),Tensor([48, 16],"float32"),Tensor([48, 16],"float32"),Tensor([48],"float32"),Tensor([0],"float32"),], )
paddle.nn.utils.vector_to_parameters(Tensor([30],"float32"), list[Tensor([0, 3],"float32"),], )
paddle.nn.utils.vector_to_parameters(Tensor([30],"float32"), list[Tensor([10, 0],"float32"),], )
paddle.nn.utils.vector_to_parameters(Tensor([3840],"float32"), list[Tensor([0, 8],"float32"),Tensor([64, 16],"float32"),Tensor([64],"float32"),Tensor([64],"float32"),Tensor([64, 16],"float32"),Tensor([64, 16],"float32"),Tensor([64],"float32"),Tensor([64],"float32"),], )
paddle.nn.utils.vector_to_parameters(Tensor([3840],"float32"), list[Tensor([64, 0],"float32"),Tensor([64, 16],"float32"),Tensor([64],"float32"),Tensor([64],"float32"),Tensor([64, 16],"float32"),Tensor([64, 16],"float32"),Tensor([64],"float32"),Tensor([64],"float32"),], )
paddle.nn.utils.vector_to_parameters(Tensor([3840],"float32"), list[Tensor([64, 8],"float32"),Tensor([0, 16],"float32"),Tensor([64],"float32"),Tensor([64],"float32"),Tensor([64, 16],"float32"),Tensor([64, 16],"float32"),Tensor([64],"float32"),Tensor([64],"float32"),], )
paddle.nn.utils.vector_to_parameters(Tensor([3840],"float32"), list[Tensor([64, 8],"float32"),Tensor([64, 0],"float32"),Tensor([64],"float32"),Tensor([64],"float32"),Tensor([64, 16],"float32"),Tensor([64, 16],"float32"),Tensor([64],"float32"),Tensor([64],"float32"),], )
paddle.nn.utils.vector_to_parameters(Tensor([3840],"float32"), list[Tensor([64, 8],"float32"),Tensor([64, 16],"float32"),Tensor([0],"float32"),Tensor([64],"float32"),Tensor([64, 16],"float32"),Tensor([64, 16],"float32"),Tensor([64],"float32"),Tensor([64],"float32"),], )
paddle.nn.utils.vector_to_parameters(Tensor([3840],"float32"), list[Tensor([64, 8],"float32"),Tensor([64, 16],"float32"),Tensor([64],"float32"),Tensor([0],"float32"),Tensor([64, 16],"float32"),Tensor([64, 16],"float32"),Tensor([64],"float32"),Tensor([64],"float32"),], )
paddle.nn.utils.vector_to_parameters(Tensor([3840],"float32"), list[Tensor([64, 8],"float32"),Tensor([64, 16],"float32"),Tensor([64],"float32"),Tensor([64],"float32"),Tensor([0, 16],"float32"),Tensor([64, 16],"float32"),Tensor([64],"float32"),Tensor([64],"float32"),], )
paddle.nn.utils.vector_to_parameters(Tensor([3840],"float32"), list[Tensor([64, 8],"float32"),Tensor([64, 16],"float32"),Tensor([64],"float32"),Tensor([64],"float32"),Tensor([64, 0],"float32"),Tensor([64, 16],"float32"),Tensor([64],"float32"),Tensor([64],"float32"),], )
paddle.nn.utils.vector_to_parameters(Tensor([3840],"float32"), list[Tensor([64, 8],"float32"),Tensor([64, 16],"float32"),Tensor([64],"float32"),Tensor([64],"float32"),Tensor([64, 16],"float32"),Tensor([0, 16],"float32"),Tensor([64],"float32"),Tensor([64],"float32"),], )
paddle.nn.utils.vector_to_parameters(Tensor([3840],"float32"), list[Tensor([64, 8],"float32"),Tensor([64, 16],"float32"),Tensor([64],"float32"),Tensor([64],"float32"),Tensor([64, 16],"float32"),Tensor([64, 0],"float32"),Tensor([64],"float32"),Tensor([64],"float32"),], )
paddle.nn.utils.vector_to_parameters(Tensor([3840],"float32"), list[Tensor([64, 8],"float32"),Tensor([64, 16],"float32"),Tensor([64],"float32"),Tensor([64],"float32"),Tensor([64, 16],"float32"),Tensor([64, 16],"float32"),Tensor([0],"float32"),Tensor([64],"float32"),], )
paddle.nn.utils.vector_to_parameters(Tensor([3840],"float32"), list[Tensor([64, 8],"float32"),Tensor([64, 16],"float32"),Tensor([64],"float32"),Tensor([64],"float32"),Tensor([64, 16],"float32"),Tensor([64, 16],"float32"),Tensor([64],"float32"),Tensor([0],"float32"),], )
paddle.nn.utils.vector_to_parameters(Tensor([387],"float32"), list[Tensor([0, 2, 4, 4, 4],"float32"),Tensor([3],"float32"),], )
paddle.nn.utils.vector_to_parameters(Tensor([387],"float32"), list[Tensor([3, 0, 4, 4, 4],"float32"),Tensor([3],"float32"),], )
paddle.nn.utils.vector_to_parameters(Tensor([387],"float32"), list[Tensor([3, 2, 0, 4, 4],"float32"),Tensor([3],"float32"),], )
paddle.nn.utils.vector_to_parameters(Tensor([387],"float32"), list[Tensor([3, 2, 4, 0, 4],"float32"),Tensor([3],"float32"),], )
paddle.nn.utils.vector_to_parameters(Tensor([387],"float32"), list[Tensor([3, 2, 4, 4, 0],"float32"),Tensor([3],"float32"),], )
paddle.nn.utils.vector_to_parameters(Tensor([387],"float32"), list[Tensor([3, 2, 4, 4, 4],"float32"),Tensor([0],"float32"),], )
paddle.nn.utils.vector_to_parameters(Tensor([6],"float32"), list[Tensor([0, 2],"float32"),Tensor([2],"float32"),], )
paddle.nn.utils.vector_to_parameters(Tensor([6],"float32"), list[Tensor([2, 0],"float32"),Tensor([2],"float32"),], )
paddle.nn.utils.vector_to_parameters(Tensor([6],"float32"), list[Tensor([2, 2],"float32"),Tensor([0],"float32"),], )
paddle.nn.utils.vector_to_parameters(Tensor([99],"float32"), list[Tensor([0, 2, 4, 4],"float32"),Tensor([3],"float32"),], )
paddle.nn.utils.vector_to_parameters(Tensor([99],"float32"), list[Tensor([3, 0, 4, 4],"float32"),Tensor([3],"float32"),], )
paddle.nn.utils.vector_to_parameters(Tensor([99],"float32"), list[Tensor([3, 2, 0, 4],"float32"),Tensor([3],"float32"),], )
paddle.nn.utils.vector_to_parameters(Tensor([99],"float32"), list[Tensor([3, 2, 4, 0],"float32"),Tensor([3],"float32"),], )
paddle.nn.utils.vector_to_parameters(Tensor([99],"float32"), list[Tensor([3, 2, 4, 4],"float32"),Tensor([0],"float32"),], )
paddle.outer(Tensor([10],"float32"), Tensor([0],"float32"), )
paddle.outer(x=Tensor([4],"float64"), y=Tensor([0],"float64"), )
paddle.pdist(Tensor([0, 20],"float32"), 0, )
paddle.pdist(Tensor([0, 20],"float32"), 1.0, )
paddle.pdist(Tensor([0, 20],"float32"), 1.5, )
paddle.pdist(Tensor([0, 20],"float32"), 2.0, )
paddle.pdist(Tensor([0, 20],"float32"), 2.5, )
paddle.pdist(Tensor([0, 20],"float32"), 3.0, )
paddle.pdist(Tensor([0, 20],"float32"), math.inf, )
paddle.pdist(Tensor([0, 20],"float64"), 2.0, )
paddle.pdist(Tensor([10, 0],"float32"), 0, )
paddle.pdist(Tensor([10, 0],"float32"), 1.0, )
paddle.pdist(Tensor([10, 0],"float32"), 1.5, )
paddle.pdist(Tensor([10, 0],"float32"), 2.0, )
paddle.pdist(Tensor([10, 0],"float32"), 2.5, )
paddle.pdist(Tensor([10, 0],"float32"), 3.0, )
paddle.pdist(Tensor([10, 0],"float32"), math.inf, )
paddle.pdist(Tensor([50, 0],"float64"), 2.0, )
paddle.real(Tensor([0, 10, 10, 20],"complex64"), )
paddle.real(Tensor([0, 20, 2, 3],"complex128"), )
paddle.real(Tensor([10, 0, 10, 20],"complex64"), )
paddle.real(Tensor([10, 10, 0, 20],"complex64"), )
paddle.real(Tensor([10, 10, 10, 0],"complex64"), )
paddle.real(Tensor([2, 0, 2, 3],"complex128"), )
paddle.real(Tensor([2, 20, 0, 3],"complex128"), )
paddle.real(Tensor([2, 20, 2, 0],"complex128"), )
paddle.real(x=Tensor([0, 10],"complex128"), )
paddle.real(x=Tensor([0, 10],"complex64"), )
paddle.real(x=Tensor([1, 0],"complex64"), )
paddle.real(x=Tensor([20, 0],"complex128"), )
paddle.row_stack(list[Tensor([0, 1, 1, 1],"float64"),], )
paddle.row_stack(list[Tensor([0, 1, 1, 1],"float64"),Tensor([0, 1, 1, 1],"float64"),Tensor([0, 1, 1, 1],"float64"),], )
paddle.row_stack(list[Tensor([0, 1, 1],"float64"),], )
paddle.row_stack(list[Tensor([0, 1, 1],"float64"),Tensor([0, 1, 1],"float64"),Tensor([0, 1, 1],"float64"),], )
paddle.row_stack(list[Tensor([0, 1],"float64"),], )
paddle.row_stack(list[Tensor([0, 1],"float64"),Tensor([0, 1],"float64"),Tensor([0, 1],"float64"),], )
paddle.row_stack(list[Tensor([0, 2],"float64"),], )
paddle.row_stack(list[Tensor([0, 2],"float64"),Tensor([0, 2],"float64"),Tensor([0, 2],"float64"),], )
paddle.row_stack(list[Tensor([0, 4, 2, 5],"float64"),], )
paddle.row_stack(list[Tensor([0, 4, 2, 5],"float64"),Tensor([0, 4, 2, 5],"float64"),Tensor([0, 4, 2, 5],"float64"),], )
paddle.row_stack(list[Tensor([0, 4, 2],"float64"),], )
paddle.row_stack(list[Tensor([0, 4, 2],"float64"),Tensor([0, 4, 2],"float64"),Tensor([0, 4, 2],"float64"),], )
paddle.row_stack(list[Tensor([0],"float64"),], )
paddle.row_stack(list[Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),], )
paddle.row_stack(list[Tensor([1, 0, 1, 1],"float64"),], )
paddle.row_stack(list[Tensor([1, 0, 1, 1],"float64"),Tensor([1, 0, 1, 1],"float64"),Tensor([1, 0, 1, 1],"float64"),], )
paddle.row_stack(list[Tensor([1, 0, 1],"float64"),], )
paddle.row_stack(list[Tensor([1, 0, 1],"float64"),Tensor([1, 0, 1],"float64"),Tensor([1, 0, 1],"float64"),], )
paddle.row_stack(list[Tensor([1, 0],"float64"),], )
paddle.row_stack(list[Tensor([1, 0],"float64"),Tensor([1, 0],"float64"),Tensor([1, 0],"float64"),], )
paddle.row_stack(list[Tensor([1, 1, 0, 1],"float64"),], )
paddle.row_stack(list[Tensor([1, 1, 0, 1],"float64"),Tensor([1, 1, 0, 1],"float64"),Tensor([1, 1, 0, 1],"float64"),], )
paddle.row_stack(list[Tensor([1, 1, 0],"float64"),], )
paddle.row_stack(list[Tensor([1, 1, 0],"float64"),Tensor([1, 1, 0],"float64"),Tensor([1, 1, 0],"float64"),], )
paddle.row_stack(list[Tensor([1, 1, 1, 0],"float64"),], )
paddle.row_stack(list[Tensor([1, 1, 1, 0],"float64"),Tensor([1, 1, 1, 0],"float64"),Tensor([1, 1, 1, 0],"float64"),], )
paddle.row_stack(list[Tensor([3, 0, 2, 5],"float64"),], )
paddle.row_stack(list[Tensor([3, 0, 2, 5],"float64"),Tensor([3, 0, 2, 5],"float64"),Tensor([3, 0, 2, 5],"float64"),], )
paddle.row_stack(list[Tensor([3, 0, 2],"float64"),], )
paddle.row_stack(list[Tensor([3, 0, 2],"float64"),Tensor([3, 0, 2],"float64"),Tensor([3, 0, 2],"float64"),], )
paddle.row_stack(list[Tensor([3, 0],"float64"),], )
paddle.row_stack(list[Tensor([3, 0],"float64"),Tensor([3, 0],"float64"),Tensor([3, 0],"float64"),], )
paddle.row_stack(list[Tensor([3, 4, 0, 5],"float64"),], )
paddle.row_stack(list[Tensor([3, 4, 0, 5],"float64"),Tensor([3, 4, 0, 5],"float64"),Tensor([3, 4, 0, 5],"float64"),], )
paddle.row_stack(list[Tensor([3, 4, 0],"float64"),], )
paddle.row_stack(list[Tensor([3, 4, 0],"float64"),Tensor([3, 4, 0],"float64"),Tensor([3, 4, 0],"float64"),], )
paddle.row_stack(list[Tensor([3, 4, 2, 0],"float64"),], )
paddle.row_stack(list[Tensor([3, 4, 2, 0],"float64"),Tensor([3, 4, 2, 0],"float64"),Tensor([3, 4, 2, 0],"float64"),], )
paddle.sgn(Tensor([0, 4],"complex128"), )
paddle.sgn(Tensor([0, 4],"complex64"), )
paddle.sgn(Tensor([2, 0],"complex128"), )
paddle.sgn(Tensor([2, 0],"complex64"), )
paddle.std(Tensor([0, 3, 4, 10],"float32"), list[1,3,], True, False, )
paddle.std(Tensor([0, 3, 4, 10],"float64"), 2, True, False, )
paddle.std(Tensor([0, 3, 4, 10],"float64"), list[1,2,], True, False, )
paddle.std(Tensor([0, 3, 4, 10],"float64"), list[1,3,], False, False, )
paddle.std(Tensor([0, 3, 4, 10],"float64"), list[1,3,], True, False, )
paddle.std(Tensor([0, 3, 4, 10],"float64"), tuple(1,3,), True, False, )
paddle.std(Tensor([0, 32],"float32"), )
paddle.std(Tensor([0, 5],"float32"), )
paddle.std(Tensor([0, 9],"float32"), axis=1, )
paddle.std(Tensor([0],"float32"), )
paddle.std(Tensor([1, 0, 4, 10],"float32"), list[1,3,], True, False, )
paddle.std(Tensor([1, 0, 4, 10],"float64"), 2, True, False, )
paddle.std(Tensor([1, 0, 4, 10],"float64"), list[1,2,], True, False, )
paddle.std(Tensor([1, 0, 4, 10],"float64"), list[1,3,], False, False, )
paddle.std(Tensor([1, 0, 4, 10],"float64"), list[1,3,], True, False, )
paddle.std(Tensor([1, 0, 4, 10],"float64"), tuple(1,3,), True, False, )
paddle.std(Tensor([1, 3, 0, 10],"float32"), list[1,3,], True, False, )
paddle.std(Tensor([1, 3, 0, 10],"float64"), 2, True, False, )
paddle.std(Tensor([1, 3, 0, 10],"float64"), list[1,2,], True, False, )
paddle.std(Tensor([1, 3, 0, 10],"float64"), list[1,3,], False, False, )
paddle.std(Tensor([1, 3, 0, 10],"float64"), list[1,3,], True, False, )
paddle.std(Tensor([1, 3, 0, 10],"float64"), tuple(1,3,), True, False, )
paddle.std(Tensor([1, 3, 4, 0],"float32"), list[1,3,], True, False, )
paddle.std(Tensor([1, 3, 4, 0],"float64"), 2, True, False, )
paddle.std(Tensor([1, 3, 4, 0],"float64"), list[1,2,], True, False, )
paddle.std(Tensor([1, 3, 4, 0],"float64"), list[1,3,], False, False, )
paddle.std(Tensor([1, 3, 4, 0],"float64"), list[1,3,], True, False, )
paddle.std(Tensor([1, 3, 4, 0],"float64"), tuple(1,3,), True, False, )
paddle.std(Tensor([3, 0],"float32"), )
paddle.std(Tensor([32, 0],"float32"), )
paddle.std(Tensor([6, 0],"float32"), axis=1, )
paddle.std(x=Tensor([0, 3, 3],"float64"), )
paddle.std(x=Tensor([0, 3, 3],"float64"), axis=0, )
paddle.std(x=Tensor([0, 3, 3],"float64"), axis=0, unbiased=False, )
paddle.std(x=Tensor([0, 3, 3],"float64"), axis=list[0,1,], )
paddle.std(x=Tensor([0, 3, 3],"float64"), axis=tuple(0,1,), )
paddle.std(x=Tensor([0, 3, 3],"float64"), axis=tuple(0,1,), keepdim=True, )
paddle.std(x=Tensor([0, 3],"float32"), )
paddle.std(x=Tensor([0, 3],"float64"), )
paddle.std(x=Tensor([2, 0],"float32"), )
paddle.std(x=Tensor([2, 0],"float64"), )
paddle.std(x=Tensor([3, 0, 3],"float64"), )
paddle.std(x=Tensor([3, 0, 3],"float64"), axis=0, )
paddle.std(x=Tensor([3, 0, 3],"float64"), axis=0, unbiased=False, )
paddle.std(x=Tensor([3, 0, 3],"float64"), axis=list[0,1,], )
paddle.std(x=Tensor([3, 0, 3],"float64"), axis=tuple(0,1,), )
paddle.std(x=Tensor([3, 0, 3],"float64"), axis=tuple(0,1,), keepdim=True, )
paddle.std(x=Tensor([3, 3, 0],"float64"), )
paddle.std(x=Tensor([3, 3, 0],"float64"), axis=0, )
paddle.std(x=Tensor([3, 3, 0],"float64"), axis=0, unbiased=False, )
paddle.std(x=Tensor([3, 3, 0],"float64"), axis=list[0,1,], )
paddle.std(x=Tensor([3, 3, 0],"float64"), axis=tuple(0,1,), )
paddle.std(x=Tensor([3, 3, 0],"float64"), axis=tuple(0,1,), keepdim=True, )
paddle.Tensor.amax(Tensor([0, 2, 4, 5],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.amax(Tensor([0, 2, 5, 4],"float32"), axis=2, keepdim=True, )
paddle.Tensor.amax(Tensor([0, 2, 5, 4],"float32"), axis=tuple(1,2,), keepdim=True, )
paddle.Tensor.amax(Tensor([3, 0, 4, 5],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.amax(Tensor([3, 0, 5, 4],"float32"), axis=2, keepdim=True, )
paddle.Tensor.amax(Tensor([3, 2, 0, 5],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.amax(Tensor([3, 2, 5, 0],"float32"), axis=2, keepdim=True, )
paddle.Tensor.amax(Tensor([3, 2, 5, 0],"float32"), axis=tuple(1,2,), keepdim=True, )
paddle.Tensor.amin(Tensor([0, 2, 4, 5],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.amin(Tensor([0, 2, 5, 4],"float32"), axis=2, keepdim=True, )
paddle.Tensor.amin(Tensor([0, 2, 5, 4],"float32"), axis=tuple(1,2,), keepdim=True, )
paddle.Tensor.amin(Tensor([3, 0, 4, 5],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.amin(Tensor([3, 0, 5, 4],"float32"), axis=2, keepdim=True, )
paddle.Tensor.amin(Tensor([3, 2, 0, 5],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.amin(Tensor([3, 2, 5, 0],"float32"), axis=2, keepdim=True, )
paddle.Tensor.amin(Tensor([3, 2, 5, 0],"float32"), axis=tuple(1,2,), keepdim=True, )
paddle.Tensor.argmax(Tensor([0, 1, 10285],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([0, 1, 24276],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([0, 10],"float32"), axis=1, )
paddle.Tensor.argmax(Tensor([0, 100, 8000],"float32"), axis=2, )
paddle.Tensor.argmax(Tensor([0, 101, 8000],"float32"), axis=2, )
paddle.Tensor.argmax(Tensor([0, 157920, 2],"float32"), axis=-1, )
paddle.Tensor.argmax(Tensor([0, 3, 3],"float32"), 1, )
paddle.Tensor.argmax(Tensor([0, 3],"float32"), 1, )
paddle.Tensor.argmax(Tensor([0, 4],"float32"), axis=-1, )
paddle.Tensor.argmax(Tensor([0, 7],"int32"), -1, )
paddle.Tensor.argmax(Tensor([0, 77],"int64"), axis=-1, )
paddle.Tensor.argmax(Tensor([0, 90, 22400],"float32"), axis=1, )
paddle.Tensor.argmax(Tensor([1, 1, 0],"float32"), axis=-2, )
paddle.Tensor.argmax(Tensor([13, 3, 0],"float32"), 1, )
paddle.Tensor.argmax(Tensor([30, 0, 8000],"float32"), axis=2, )
paddle.Tensor.argmax(Tensor([4, 0, 2],"float32"), axis=-1, )
paddle.Tensor.argmax(Tensor([4, 90, 0],"float32"), axis=1, )
paddle.Tensor.bmm(Tensor([0, 108472, 3],"float32"), Tensor([0, 3, 2],"float32"), )
paddle.Tensor.bmm(Tensor([0, 1156, 3],"float32"), Tensor([0, 3, 2],"float32"), )
paddle.Tensor.bmm(Tensor([1, 108472, 3],"float32"), Tensor([1, 3, 0],"float32"), )
paddle.Tensor.bmm(Tensor([1, 1156, 3],"float32"), Tensor([1, 3, 0],"float32"), )
paddle.Tensor.cholesky_solve(x=Tensor([0, 2, 4, 3],"float64"), y=Tensor([0, 2, 4, 4],"float64"), )
paddle.Tensor.cholesky_solve(x=Tensor([0, 2, 4, 3],"float64"), y=Tensor([0, 2, 4, 4],"float64"), upper=True, )
paddle.Tensor.cholesky_solve(x=Tensor([0, 4, 3],"float64"), y=Tensor([0, 4, 4],"float64"), )
paddle.Tensor.cholesky_solve(x=Tensor([4, 0],"float32"), y=Tensor([4, 4],"float32"), )
paddle.Tensor.cholesky_solve(x=Tensor([4, 0],"float64"), y=Tensor([4, 4],"float64"), )
paddle.Tensor.cholesky_solve(x=Tensor([5, 0, 4, 3],"float64"), y=Tensor([5, 0, 4, 4],"float64"), )
paddle.Tensor.cholesky_solve(x=Tensor([5, 0, 4, 3],"float64"), y=Tensor([5, 0, 4, 4],"float64"), upper=True, )
paddle.Tensor.cholesky_solve(x=Tensor([5, 2, 4, 0],"float64"), y=Tensor([5, 2, 4, 4],"float64"), )
paddle.Tensor.cholesky_solve(x=Tensor([5, 2, 4, 0],"float64"), y=Tensor([5, 2, 4, 4],"float64"), upper=True, )
paddle.Tensor.cholesky_solve(x=Tensor([5, 4, 0],"float64"), y=Tensor([5, 4, 4],"float64"), )
paddle.Tensor.diagonal(Tensor([0, 2],"float32"), axis1=-2, axis2=-1, )
paddle.Tensor.diagonal(Tensor([0, 3],"float64"), axis1=-2, axis2=-1, )
paddle.Tensor.diagonal(Tensor([2, 0],"float32"), axis1=-2, axis2=-1, )
paddle.Tensor.diagonal(Tensor([3, 0],"float64"), axis1=-2, axis2=-1, )
paddle.Tensor.expand_as(Tensor([0, 1, 1, 1],"float32"), Tensor([0, 3, 28, 28],"float32"), )
paddle.Tensor.expand_as(Tensor([0, 1, 1, 1],"float32"), Tensor([0, 3, 280, 350],"float32"), )
paddle.Tensor.expand_as(Tensor([0, 1, 32],"float32"), Tensor([0, 4, 32],"float32"), )
paddle.Tensor.expand_as(Tensor([0, 1],"int32"), Tensor([0, 1],"int64"), )
paddle.Tensor.expand_as(Tensor([0, 128],"int32"), Tensor([0, 128],"int64"), )
paddle.Tensor.expand_as(Tensor([1, 0, 1, 1],"float32"), Tensor([1, 0, 28, 28],"float32"), )
paddle.Tensor.expand_as(Tensor([1, 0, 1, 1],"float32"), Tensor([1, 0, 280, 350],"float32"), )
paddle.Tensor.expand_as(Tensor([1, 0],"int32"), Tensor([5, 0],"int64"), )
paddle.Tensor.expand_as(Tensor([1, 1, 0, 1],"float32"), Tensor([1, 3, 0, 28],"float32"), )
paddle.Tensor.expand_as(Tensor([1, 1, 0, 1],"float32"), Tensor([1, 3, 0, 350],"float32"), )
paddle.Tensor.expand_as(Tensor([1, 1, 1, 0],"float32"), Tensor([1, 3, 28, 0],"float32"), )
paddle.Tensor.expand_as(Tensor([1, 1, 1, 0],"float32"), Tensor([1, 3, 280, 0],"float32"), )
paddle.Tensor.expand_as(Tensor([1, 1, 1, 1],"float32"), Tensor([0, 3, 28, 28],"float32"), )
paddle.Tensor.expand_as(Tensor([1, 1, 1, 1],"float32"), Tensor([0, 3, 280, 350],"float32"), )
paddle.Tensor.expand_as(Tensor([1, 1, 1, 1],"float32"), Tensor([1, 0, 28, 28],"float32"), )
paddle.Tensor.expand_as(Tensor([1, 1, 1, 1],"float32"), Tensor([1, 0, 280, 350],"float32"), )
paddle.Tensor.expand_as(Tensor([1, 1, 1, 1],"float32"), Tensor([1, 3, 0, 28],"float32"), )
paddle.Tensor.expand_as(Tensor([1, 1, 1, 1],"float32"), Tensor([1, 3, 0, 350],"float32"), )
paddle.Tensor.expand_as(Tensor([1, 1, 1, 1],"float32"), Tensor([1, 3, 28, 0],"float32"), )
paddle.Tensor.expand_as(Tensor([1, 1, 1, 1],"float32"), Tensor([1, 3, 280, 0],"float32"), )
paddle.Tensor.expand_as(Tensor([1, 1],"int32"), Tensor([0, 1],"int64"), )
paddle.Tensor.expand_as(Tensor([1, 1],"int32"), Tensor([5, 0],"int64"), )
paddle.Tensor.expand_as(Tensor([1, 128],"int32"), Tensor([0, 128],"int64"), )
paddle.Tensor.expand_as(Tensor([2, 0, 32],"float32"), Tensor([2, 0, 32],"float32"), )
paddle.Tensor.expand_as(Tensor([2, 1, 0],"float32"), Tensor([2, 4, 0],"float32"), )
paddle.Tensor.expand_as(Tensor([2, 1, 32],"float32"), Tensor([2, 0, 32],"float32"), )
paddle.Tensor.inner(x=Tensor([0],"float64"), y=Tensor([0],"float64"), )
paddle.Tensor.inner(x=Tensor([2, 5, 3, 0],"float64"), y=Tensor([3, 2, 5, 0],"float64"), )
paddle.Tensor.inner(x=Tensor([2, 5, 3, 4],"float64"), y=Tensor([0, 2, 5, 4],"float64"), )
paddle.Tensor.inner(x=Tensor([2, 5, 3, 4],"float64"), y=Tensor([3, 0, 5, 4],"float64"), )
paddle.Tensor.inner(x=Tensor([2, 5, 3, 4],"float64"), y=Tensor([3, 2, 0, 4],"float64"), )
paddle.Tensor.inner(x=Tensor([3, 0],"float64"), y=Tensor([5, 0],"float64"), )
paddle.Tensor.inner(x=Tensor([3, 4],"float64"), y=Tensor([0, 2, 4],"float64"), )
paddle.Tensor.inner(x=Tensor([3, 4],"float64"), y=Tensor([0, 2, 5, 4],"float64"), )
paddle.Tensor.inner(x=Tensor([3, 4],"float64"), y=Tensor([0, 4],"float64"), )
paddle.Tensor.inner(x=Tensor([3, 4],"float64"), y=Tensor([3, 0, 4],"float64"), )
paddle.Tensor.inner(x=Tensor([3, 4],"float64"), y=Tensor([3, 0, 5, 4],"float64"), )
paddle.Tensor.inner(x=Tensor([3, 4],"float64"), y=Tensor([3, 2, 0, 4],"float64"), )
paddle.Tensor.inner(x=Tensor([4, 0],"float32"), y=Tensor([4, 0],"float32"), )
paddle.Tensor.inner(x=Tensor([4, 4],"float32"), y=Tensor([0, 4],"float32"), )
paddle.Tensor.inner(x=Tensor([5, 3, 0],"float64"), y=Tensor([2, 5, 0],"float64"), )
paddle.Tensor.inner(x=Tensor([5, 3, 4],"float64"), y=Tensor([0, 5, 4],"float64"), )
paddle.Tensor.inner(x=Tensor([5, 3, 4],"float64"), y=Tensor([2, 0, 4],"float64"), )
paddle.Tensor.lerp(x=Tensor([0, 5, 4, 3],"float64"), y=Tensor([0, 5, 4, 3],"float64"), weight=0.0, )
paddle.Tensor.lerp(x=Tensor([0, 5, 4, 3],"float64"), y=Tensor([0, 5, 4, 3],"float64"), weight=0.5, )
paddle.Tensor.lerp(x=Tensor([0, 5, 4, 3],"float64"), y=Tensor([0, 5, 4, 3],"float64"), weight=1.0, )
paddle.Tensor.lerp(x=Tensor([0, 5, 4],"float64"), y=Tensor([0, 5, 4],"float64"), weight=0.5, )
paddle.Tensor.lerp(x=Tensor([0, 5],"float64"), y=Tensor([0, 5],"float64"), weight=0.5, )
paddle.Tensor.lerp(x=Tensor([0, 5],"float64"), y=Tensor([1],"float64"), weight=0.2, )
paddle.Tensor.lerp(x=Tensor([0],"float32"), y=Tensor([0],"float32"), weight=0.5, )
paddle.Tensor.lerp(x=Tensor([0],"float64"), y=Tensor([0],"float64"), weight=0.5, )
paddle.Tensor.lerp(x=Tensor([4, 0, 4, 3],"float64"), y=Tensor([4, 0, 4, 3],"float64"), weight=0.0, )
paddle.Tensor.lerp(x=Tensor([4, 0, 4, 3],"float64"), y=Tensor([4, 0, 4, 3],"float64"), weight=0.5, )
paddle.Tensor.lerp(x=Tensor([4, 0, 4, 3],"float64"), y=Tensor([4, 0, 4, 3],"float64"), weight=1.0, )
paddle.Tensor.lerp(x=Tensor([4, 0, 4],"float64"), y=Tensor([4, 0, 4],"float64"), weight=0.5, )
paddle.Tensor.lerp(x=Tensor([4, 0],"float64"), y=Tensor([1],"float64"), weight=0.2, )
paddle.Tensor.lerp(x=Tensor([4, 0],"float64"), y=Tensor([4, 0],"float64"), weight=0.5, )
paddle.Tensor.lerp(x=Tensor([4, 5, 0, 3],"float64"), y=Tensor([4, 5, 0, 3],"float64"), weight=0.0, )
paddle.Tensor.lerp(x=Tensor([4, 5, 0, 3],"float64"), y=Tensor([4, 5, 0, 3],"float64"), weight=0.5, )
paddle.Tensor.lerp(x=Tensor([4, 5, 0, 3],"float64"), y=Tensor([4, 5, 0, 3],"float64"), weight=1.0, )
paddle.Tensor.lerp(x=Tensor([4, 5, 0],"float64"), y=Tensor([4, 5, 0],"float64"), weight=0.5, )
paddle.Tensor.lerp(x=Tensor([4, 5, 4, 0],"float64"), y=Tensor([4, 5, 4, 0],"float64"), weight=0.0, )
paddle.Tensor.lerp(x=Tensor([4, 5, 4, 0],"float64"), y=Tensor([4, 5, 4, 0],"float64"), weight=0.5, )
paddle.Tensor.lerp(x=Tensor([4, 5, 4, 0],"float64"), y=Tensor([4, 5, 4, 0],"float64"), weight=1.0, )
paddle.Tensor.lu(Tensor([0, 3, 2, 2],"float64"), )
paddle.Tensor.lu(Tensor([0, 3, 3],"float64"), )
paddle.Tensor.lu(Tensor([0, 3],"float32"), )
paddle.Tensor.lu(Tensor([0, 3],"float64"), )
paddle.Tensor.lu(Tensor([3, 0, 3],"float64"), )
paddle.Tensor.lu(Tensor([3, 0],"float32"), )
paddle.Tensor.lu(Tensor([3, 0],"float64"), )
paddle.Tensor.lu(Tensor([3, 3, 0],"float64"), )
paddle.Tensor.lu(Tensor([4, 0, 2, 2],"float64"), )
paddle.Tensor.lu(Tensor([4, 3, 0, 2],"float64"), )
paddle.Tensor.lu(Tensor([4, 3, 2, 0],"float64"), )
paddle.Tensor.matmul(Tensor([1, 1],"float64"), Tensor([1, 0],"float64"), )
paddle.Tensor.mean(Tensor([0, 1, 1, 12, 1, 64],"float32"), )
paddle.Tensor.mean(Tensor([0, 1, 192],"float32"), )
paddle.Tensor.mean(Tensor([0, 1, 32],"float32"), )
paddle.Tensor.mean(Tensor([0, 1, 32],"float32"), -1, keepdim=True, )
paddle.Tensor.mean(Tensor([0, 1, 32],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.mean(Tensor([0, 1, 36],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.mean(Tensor([0, 1, 50, 50],"float32"), )
paddle.Tensor.mean(Tensor([0, 1, 512, 4, 4],"float32"), list[2,3,4,], keepdim=True, )
paddle.Tensor.mean(Tensor([0, 1, 64],"float32"), -1, keepdim=True, )
paddle.Tensor.mean(Tensor([0, 1],"float16"), )
paddle.Tensor.mean(Tensor([0, 1],"float32"), )
paddle.Tensor.mean(Tensor([0, 100, 2],"float32"), 1, )
paddle.Tensor.mean(Tensor([0, 100, 4],"float64"), axis=-2, keepdim=True, )
paddle.Tensor.mean(Tensor([0, 100, 40],"float64"), axis=-2, keepdim=True, )
paddle.Tensor.mean(Tensor([0, 1000],"float32"), axis=-1, )
paddle.Tensor.mean(Tensor([0, 1024, 12, 12],"float32"), list[-2,-1,], )
paddle.Tensor.mean(Tensor([0, 1024, 7, 7],"float32"), list[-2,-1,], )
paddle.Tensor.mean(Tensor([0, 12, 8, 14],"float32"), )
paddle.Tensor.mean(Tensor([0, 12544],"float32"), 1, )
paddle.Tensor.mean(Tensor([0, 128, 16, 16],"float16"), -1, )
paddle.Tensor.mean(Tensor([0, 128, 16, 16],"float16"), -2, )
paddle.Tensor.mean(Tensor([0, 128, 16, 16],"float32"), -1, )
paddle.Tensor.mean(Tensor([0, 128, 16, 16],"float32"), -2, )
paddle.Tensor.mean(Tensor([0, 128, 56, 56],"float32"), 1, keepdim=True, )
paddle.Tensor.mean(Tensor([0, 128, 96, 96],"float32"), 1, keepdim=True, )
paddle.Tensor.mean(Tensor([0, 160, 160],"float32"), axis=tuple(1,2,), )
paddle.Tensor.mean(Tensor([0, 192, 11],"float32"), 1, )
paddle.Tensor.mean(Tensor([0, 192, 128, 128],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([0, 192, 136, 136],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([0, 2, 2, 2, 2],"float32"), )
paddle.Tensor.mean(Tensor([0, 2, 3, 10, 10, 12, 4],"float64"), )
paddle.Tensor.mean(Tensor([0, 2, 3, 4, 10],"float64"), )
paddle.Tensor.mean(Tensor([0, 2, 3],"float32"), axis=0, )
paddle.Tensor.mean(Tensor([0, 2, 3],"float64"), axis=0, )
paddle.Tensor.mean(Tensor([0, 256, 7],"float32"), -1, )
paddle.Tensor.mean(Tensor([0, 3, 100, 4],"float64"), axis=-2, keepdim=True, )
paddle.Tensor.mean(Tensor([0, 3, 100, 40],"float64"), axis=-2, keepdim=True, )
paddle.Tensor.mean(Tensor([0, 300, 4096],"float32"), tuple(0,1,), keepdim=True, )
paddle.Tensor.mean(Tensor([0, 4, 2, 4, 8],"float32"), axis=-2, )
paddle.Tensor.mean(Tensor([0, 4],"complex128"), axis=0, )
paddle.Tensor.mean(Tensor([0, 4],"float32"), -1, keepdim=True, )
paddle.Tensor.mean(Tensor([0, 4],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.mean(Tensor([0, 4],"float64"), axis=-2, keepdim=True, )
paddle.Tensor.mean(Tensor([0, 40],"float64"), axis=-2, keepdim=True, )
paddle.Tensor.mean(Tensor([0, 49, 512],"float16"), axis=1, )
paddle.Tensor.mean(Tensor([0, 49, 512],"float32"), axis=1, )
paddle.Tensor.mean(Tensor([0, 5],"float64"), axis=-1, )
paddle.Tensor.mean(Tensor([0, 768],"float32"), 0, )
paddle.Tensor.mean(Tensor([0, 784],"float32"), axis=0, )
paddle.Tensor.mean(Tensor([0, 8, 151936],"float32"), -1, )
paddle.Tensor.mean(Tensor([0],"float32"), )
paddle.Tensor.mean(Tensor([0],"float32"), -1, keepdim=True, )
paddle.Tensor.mean(Tensor([0],"float32"), axis=0, )
paddle.Tensor.mean(Tensor([0],"float64"), axis=0, )
paddle.Tensor.mean(Tensor([1, 0, 1, 12, 1, 64],"float32"), )
paddle.Tensor.mean(Tensor([1, 0, 11],"float32"), 1, )
paddle.Tensor.mean(Tensor([1, 0, 128, 128],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([1, 0, 136, 136],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([1, 0, 151936],"float32"), -1, )
paddle.Tensor.mean(Tensor([1, 0, 192],"float32"), )
paddle.Tensor.mean(Tensor([1, 0, 2, 2, 2],"float32"), )
paddle.Tensor.mean(Tensor([1, 0, 2],"float32"), 1, )
paddle.Tensor.mean(Tensor([1, 0, 32],"float32"), )
paddle.Tensor.mean(Tensor([1, 0, 32],"float32"), -1, keepdim=True, )
paddle.Tensor.mean(Tensor([1, 0, 32],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.mean(Tensor([1, 0, 36],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.mean(Tensor([1, 0, 4],"float64"), axis=-2, keepdim=True, )
paddle.Tensor.mean(Tensor([1, 0, 40],"float64"), axis=-2, keepdim=True, )
paddle.Tensor.mean(Tensor([1, 0, 4096],"float32"), tuple(0,1,), keepdim=True, )
paddle.Tensor.mean(Tensor([1, 0, 50, 50],"float32"), )
paddle.Tensor.mean(Tensor([1, 0, 64],"float32"), -1, keepdim=True, )
paddle.Tensor.mean(Tensor([1, 0, 8, 14],"float32"), )
paddle.Tensor.mean(Tensor([1, 0],"float16"), )
paddle.Tensor.mean(Tensor([1, 0],"float32"), )
paddle.Tensor.mean(Tensor([1, 0],"float32"), 1, )
paddle.Tensor.mean(Tensor([1, 0],"float32"), -1, keepdim=True, )
paddle.Tensor.mean(Tensor([1, 1, 0, 12, 1, 64],"float32"), )
paddle.Tensor.mean(Tensor([1, 1, 0, 50],"float32"), )
paddle.Tensor.mean(Tensor([1, 1, 0],"float32"), )
paddle.Tensor.mean(Tensor([1, 1, 0],"float32"), -1, keepdim=True, )
paddle.Tensor.mean(Tensor([1, 1, 0],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.mean(Tensor([1, 1, 1, 0, 1, 64],"float32"), )
paddle.Tensor.mean(Tensor([1, 1, 1, 12, 0, 64],"float32"), )
paddle.Tensor.mean(Tensor([1, 1, 1, 12, 1, 0],"float32"), )
paddle.Tensor.mean(Tensor([1, 1, 50, 0],"float32"), )
paddle.Tensor.mean(Tensor([1, 100, 0],"float32"), 1, )
paddle.Tensor.mean(Tensor([1, 100, 0],"float64"), axis=-2, keepdim=True, )
paddle.Tensor.mean(Tensor([1, 12, 0, 14],"float32"), )
paddle.Tensor.mean(Tensor([1, 12, 8, 0],"float32"), )
paddle.Tensor.mean(Tensor([1, 192, 0, 128],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([1, 192, 0, 136],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([1, 192, 0],"float32"), 1, )
paddle.Tensor.mean(Tensor([1, 192, 128, 0],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([1, 192, 136, 0],"float32"), tuple(2,3,), keepdim=True, )
paddle.Tensor.mean(Tensor([1, 2, 0, 2, 2],"float32"), )
paddle.Tensor.mean(Tensor([1, 2, 2, 0, 2],"float32"), )
paddle.Tensor.mean(Tensor([1, 2, 2, 2, 0],"float32"), )
paddle.Tensor.mean(Tensor([1, 300, 0],"float32"), tuple(0,1,), keepdim=True, )
paddle.Tensor.mean(Tensor([1, 8, 0],"float32"), -1, )
paddle.Tensor.mean(Tensor([10, 0],"float32"), -1, keepdim=True, )
paddle.Tensor.mean(Tensor([100, 0],"float32"), 1, )
paddle.Tensor.mean(Tensor([100, 0],"float64"), axis=-2, keepdim=True, )
paddle.Tensor.mean(Tensor([1000, 0],"float32"), axis=0, )
paddle.Tensor.mean(Tensor([10000, 0, 3],"float32"), axis=0, )
paddle.Tensor.mean(Tensor([10000, 0, 3],"float64"), axis=0, )
paddle.Tensor.mean(Tensor([10000, 2, 0],"float32"), axis=0, )
paddle.Tensor.mean(Tensor([10000, 2, 0],"float64"), axis=0, )
paddle.Tensor.mean(Tensor([100000, 0],"complex128"), axis=0, )
paddle.Tensor.mean(Tensor([11, 0],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.mean(Tensor([124, 0, 12, 12],"float32"), list[-2,-1,], )
paddle.Tensor.mean(Tensor([124, 0, 56, 56],"float32"), 1, keepdim=True, )
paddle.Tensor.mean(Tensor([124, 0, 7, 7],"float32"), list[-2,-1,], )
paddle.Tensor.mean(Tensor([124, 0, 96, 96],"float32"), 1, keepdim=True, )
paddle.Tensor.mean(Tensor([124, 1024, 0, 12],"float32"), list[-2,-1,], )
paddle.Tensor.mean(Tensor([124, 1024, 0, 7],"float32"), list[-2,-1,], )
paddle.Tensor.mean(Tensor([124, 1024, 12, 0],"float32"), list[-2,-1,], )
paddle.Tensor.mean(Tensor([124, 1024, 7, 0],"float32"), list[-2,-1,], )
paddle.Tensor.mean(Tensor([124, 128, 0, 56],"float32"), 1, keepdim=True, )
paddle.Tensor.mean(Tensor([124, 128, 0, 96],"float32"), 1, keepdim=True, )
paddle.Tensor.mean(Tensor([124, 128, 56, 0],"float32"), 1, keepdim=True, )
paddle.Tensor.mean(Tensor([124, 128, 96, 0],"float32"), 1, keepdim=True, )
paddle.Tensor.mean(Tensor([128, 0, 512],"float16"), axis=1, )
paddle.Tensor.mean(Tensor([128, 0, 512],"float32"), axis=1, )
paddle.Tensor.mean(Tensor([128, 0],"float32"), axis=-1, )
paddle.Tensor.mean(Tensor([128, 49, 0],"float16"), axis=1, )
paddle.Tensor.mean(Tensor([128, 49, 0],"float32"), axis=1, )
paddle.Tensor.mean(Tensor([13, 0, 160],"float32"), axis=tuple(1,2,), )
paddle.Tensor.mean(Tensor([13, 0, 2, 4, 8],"float32"), axis=-2, )
paddle.Tensor.mean(Tensor([13, 160, 0],"float32"), axis=tuple(1,2,), )
paddle.Tensor.mean(Tensor([13, 4, 0, 4, 8],"float32"), axis=-2, )
paddle.Tensor.mean(Tensor([13, 4, 2, 0, 8],"float32"), axis=-2, )
paddle.Tensor.mean(Tensor([13, 4, 2, 4, 0],"float32"), axis=-2, )
paddle.Tensor.mean(Tensor([18, 0],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.mean(Tensor([2, 0, 100, 4],"float64"), axis=-2, keepdim=True, )
paddle.Tensor.mean(Tensor([2, 0, 100, 40],"float64"), axis=-2, keepdim=True, )
paddle.Tensor.mean(Tensor([2, 0, 512, 4, 4],"float32"), list[2,3,4,], keepdim=True, )
paddle.Tensor.mean(Tensor([2, 1, 0, 4, 4],"float32"), list[2,3,4,], keepdim=True, )
paddle.Tensor.mean(Tensor([2, 1, 512, 0, 4],"float32"), list[2,3,4,], keepdim=True, )
paddle.Tensor.mean(Tensor([2, 1, 512, 4, 0],"float32"), list[2,3,4,], keepdim=True, )
paddle.Tensor.mean(Tensor([2, 3, 0, 4],"float64"), axis=-2, keepdim=True, )
paddle.Tensor.mean(Tensor([2, 3, 0, 40],"float64"), axis=-2, keepdim=True, )
paddle.Tensor.mean(Tensor([2, 3, 100, 0],"float64"), axis=-2, keepdim=True, )
paddle.Tensor.mean(Tensor([3, 0, 3, 10, 10, 12, 4],"float64"), )
paddle.Tensor.mean(Tensor([3, 0, 3, 4, 10],"float64"), )
paddle.Tensor.mean(Tensor([3, 2, 0, 10, 10, 12, 4],"float64"), )
paddle.Tensor.mean(Tensor([3, 2, 0, 4, 10],"float64"), )
paddle.Tensor.mean(Tensor([3, 2, 3, 0, 10, 12, 4],"float64"), )
paddle.Tensor.mean(Tensor([3, 2, 3, 0, 10],"float64"), )
paddle.Tensor.mean(Tensor([3, 2, 3, 10, 0, 12, 4],"float64"), )
paddle.Tensor.mean(Tensor([3, 2, 3, 10, 10, 0, 4],"float64"), )
paddle.Tensor.mean(Tensor([3, 2, 3, 10, 10, 12, 0],"float64"), )
paddle.Tensor.mean(Tensor([3, 2, 3, 4, 0],"float64"), )
paddle.Tensor.mean(Tensor([4, 0, 16, 16],"float16"), -1, )
paddle.Tensor.mean(Tensor([4, 0, 16, 16],"float16"), -2, )
paddle.Tensor.mean(Tensor([4, 0, 16, 16],"float32"), -1, )
paddle.Tensor.mean(Tensor([4, 0, 16, 16],"float32"), -2, )
paddle.Tensor.mean(Tensor([4, 128, 0, 16],"float16"), -1, )
paddle.Tensor.mean(Tensor([4, 128, 0, 16],"float16"), -2, )
paddle.Tensor.mean(Tensor([4, 128, 0, 16],"float32"), -1, )
paddle.Tensor.mean(Tensor([4, 128, 0, 16],"float32"), -2, )
paddle.Tensor.mean(Tensor([4, 128, 16, 0],"float16"), -1, )
paddle.Tensor.mean(Tensor([4, 128, 16, 0],"float16"), -2, )
paddle.Tensor.mean(Tensor([4, 128, 16, 0],"float32"), -1, )
paddle.Tensor.mean(Tensor([4, 128, 16, 0],"float32"), -2, )
paddle.Tensor.mean(Tensor([5, 0],"float64"), axis=-1, )
paddle.Tensor.mean(Tensor([512, 0, 7],"float32"), -1, )
paddle.Tensor.mean(Tensor([512, 256, 0],"float32"), -1, )
paddle.Tensor.mean(Tensor([80, 0],"float32"), 0, )
paddle.Tensor.median(Tensor([0, 784],"float32"), )
paddle.Tensor.median(Tensor([1000, 0],"float32"), )
paddle.Tensor.mm(Tensor([10, 10],"float32"), Tensor([10, 0],"float32"), )
paddle.Tensor.mode(Tensor([0, 2, 3],"float64"), )
paddle.Tensor.mode(Tensor([0, 2, 3],"float64"), axis=1, keepdim=False, )
paddle.Tensor.mode(Tensor([0, 2, 3],"float64"), axis=2, keepdim=True, )
paddle.Tensor.mode(Tensor([3, 0, 3],"float64"), )
paddle.Tensor.mode(Tensor([3, 0, 3],"float64"), axis=2, keepdim=True, )
paddle.Tensor.mode(Tensor([3, 2, 0],"float64"), axis=1, keepdim=False, )
paddle.Tensor.outer(x=Tensor([4],"float64"), y=Tensor([0],"float64"), )
paddle.Tensor.std(Tensor([0, 1, 36],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([0, 1, 45],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([0, 1024, 8],"float32"), )
paddle.Tensor.std(Tensor([0, 1024, 8],"float64"), )
paddle.Tensor.std(Tensor([1, 0, 36],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([1, 0, 45],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([1, 1, 0],"float32"), axis=-1, keepdim=True, )
paddle.Tensor.std(Tensor([1024, 0, 8],"float32"), )
paddle.Tensor.std(Tensor([1024, 0, 8],"float64"), )
paddle.Tensor.std(Tensor([1024, 1024, 0],"float32"), )
paddle.Tensor.std(Tensor([1024, 1024, 0],"float64"), )
paddle.Tensor.topk(Tensor([0, 1000],"float32"), 5, 1, True, True, )
paddle.Tensor.var(Tensor([0, 2, 3],"float32"), axis=0, )
paddle.Tensor.var(Tensor([0, 2, 3],"float64"), axis=0, )
paddle.Tensor.var(Tensor([0, 4],"float64"), axis=0, )
paddle.Tensor.var(Tensor([0, 784],"float32"), axis=0, )
paddle.Tensor.var(Tensor([0],"float32"), axis=0, )
paddle.Tensor.var(Tensor([0],"float64"), axis=0, )
paddle.Tensor.var(Tensor([1000, 0],"float32"), axis=0, )
paddle.Tensor.var(Tensor([10000, 0, 3],"float32"), axis=0, )
paddle.Tensor.var(Tensor([10000, 0, 3],"float64"), axis=0, )
paddle.Tensor.var(Tensor([10000, 2, 0],"float32"), axis=0, )
paddle.Tensor.var(Tensor([10000, 2, 0],"float64"), axis=0, )
paddle.Tensor.var(Tensor([100000, 0],"float64"), axis=0, )
paddle.tensordot(Tensor([0, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[0,1,3,],list[0,3,1,],], )
paddle.tensordot(Tensor([0, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[0,1,3,2,],list[0,2,1,3,],], )
paddle.tensordot(Tensor([0, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[0,2,3,],list[0,1,2,],], )
paddle.tensordot(Tensor([0, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[0,2,3,],list[0,2,1,],], )
paddle.tensordot(Tensor([0, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[0,3,1,2,],list[3,2,1,0,],], )
paddle.tensordot(Tensor([0, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[0,3,2,1,],list[2,1,3,0,],], )
paddle.tensordot(Tensor([0, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[1,0,2,3,],list[3,0,1,2,],], )
paddle.tensordot(Tensor([0, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[1,0,3,2,],list[3,0,1,2,],], )
paddle.tensordot(Tensor([0, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[1,2,0,],list[1,2,3,],], )
paddle.tensordot(Tensor([0, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[1,2,0,],list[1,3,2,],], )
paddle.tensordot(Tensor([0, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[1,2,3,0,],list[3,2,1,0,],], )
paddle.tensordot(Tensor([0, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[1,3,2,0,],list[1,3,2,0,],], )
paddle.tensordot(Tensor([0, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[1,3,2,0,],list[2,1,0,3,],], )
paddle.tensordot(Tensor([0, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[2,1,0,3,],list[2,0,3,1,],], )
paddle.tensordot(Tensor([0, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[2,3,],list[1,3,],], )
paddle.tensordot(Tensor([0, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[2,3,0,],list[1,2,0,],], )
paddle.tensordot(Tensor([0, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[2,3,0,],list[3,1,0,],], )
paddle.tensordot(Tensor([0, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[3,1,0,2,],list[3,1,0,2,],], )
paddle.tensordot(Tensor([0, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[3,1,2,],list[1,2,3,],], )
paddle.tensordot(Tensor([0, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[3,1,2,],list[1,3,2,],], )
paddle.tensordot(Tensor([0, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[3,1,2,],list[2,3,1,],], )
paddle.tensordot(Tensor([0, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[3,1,2,],list[3,1,0,],], )
paddle.tensordot(Tensor([0, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[3,1,2,0,],list[1,2,3,0,],], )
paddle.tensordot(Tensor([0, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[3,1,2,0,],list[2,3,1,0,],], )
paddle.tensordot(Tensor([0, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[3,2,],list[3,1,],], )
paddle.tensordot(Tensor([0, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[3,2,0,],list[2,1,0,],], )
paddle.tensordot(Tensor([0, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[3,2,0,],list[3,2,0,],], )
paddle.tensordot(Tensor([0, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[3,2,1,],list[2,0,1,],], )
paddle.tensordot(Tensor([0, 1, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[1,2,3,0,],list[1,3,0,2,],], )
paddle.tensordot(Tensor([0, 1, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[1,3,],list[1,0,],], )
paddle.tensordot(Tensor([0, 1, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[1,3,0,],list[3,0,2,],], )
paddle.tensordot(Tensor([0, 1, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[1,3,2,0,],list[1,3,2,0,],], )
paddle.tensordot(Tensor([0, 1, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[1,3,2,0,],list[3,0,1,2,],], )
paddle.tensordot(Tensor([0, 1, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[2,3,],list[1,3,],], )
paddle.tensordot(Tensor([0, 1, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[2,3,0,],list[1,2,0,],], )
paddle.tensordot(Tensor([0, 1, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[2,3,1,],list[1,0,2,],], )
paddle.tensordot(Tensor([0, 1, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[3,1,0,2,],list[3,1,0,2,],], )
paddle.tensordot(Tensor([0, 1, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[3,1,2,],list[0,3,2,],], )
paddle.tensordot(Tensor([0, 1, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[3,1,2,],list[2,3,1,],], )
paddle.tensordot(Tensor([0, 1, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[3,1,2,],list[3,1,0,],], )
paddle.tensordot(Tensor([0, 1, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[3,1,2,0,],list[2,3,1,0,],], )
paddle.tensordot(Tensor([0, 1, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[3,2,],list[3,1,],], )
paddle.tensordot(Tensor([0, 1, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[3,2,0,],list[2,1,0,],], )
paddle.tensordot(Tensor([0, 1, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[3,2,0,],list[3,2,0,],], )
paddle.tensordot(Tensor([0, 1, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[3,2,1,],list[2,0,1,],], )
paddle.tensordot(Tensor([0, 1, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[3,2,1,0,],list[0,1,3,2,],], )
paddle.tensordot(Tensor([0, 1, 5, 5],"float64"), Tensor([0, 5, 1, 5],"float64"), list[list[0,1,3,],list[0,3,1,],], )
paddle.tensordot(Tensor([0, 1, 5, 5],"float64"), Tensor([0, 5, 1, 5],"float64"), list[list[0,1,3,2,],list[0,2,1,3,],], )
paddle.tensordot(Tensor([0, 1, 5, 5],"float64"), Tensor([0, 5, 1, 5],"float64"), list[list[0,2,3,],list[0,1,2,],], )
paddle.tensordot(Tensor([0, 1, 5, 5],"float64"), Tensor([0, 5, 1, 5],"float64"), list[list[0,2,3,],list[0,2,1,],], )
paddle.tensordot(Tensor([0, 1, 5, 5],"float64"), Tensor([0, 5, 1, 5],"float64"), list[list[1,0,2,3,],list[3,0,1,2,],], )
paddle.tensordot(Tensor([0, 1, 5, 5],"float64"), Tensor([0, 5, 1, 5],"float64"), list[list[1,0,3,2,],list[3,0,1,2,],], )
paddle.tensordot(Tensor([0, 1, 5, 5],"float64"), Tensor([0, 5, 1, 5],"float64"), list[list[1,2,0,],list[1,3,2,],], )
paddle.tensordot(Tensor([0, 1, 5, 5],"float64"), Tensor([0, 5, 1, 5],"float64"), list[list[1,2,3,0,],list[3,2,1,0,],], )
paddle.tensordot(Tensor([0, 1, 5, 5],"float64"), Tensor([0, 5, 1, 5],"float64"), list[list[1,3,2,0,],list[1,3,2,0,],], )
paddle.tensordot(Tensor([0, 1, 5, 5],"float64"), Tensor([0, 5, 1, 5],"float64"), list[list[2,3,0,],list[1,2,0,],], )
paddle.tensordot(Tensor([0, 1, 5, 5],"float64"), Tensor([0, 5, 1, 5],"float64"), list[list[3,1,0,2,],list[3,1,0,2,],], )
paddle.tensordot(Tensor([0, 1, 5, 5],"float64"), Tensor([0, 5, 1, 5],"float64"), list[list[3,1,2,],list[1,2,3,],], )
paddle.tensordot(Tensor([0, 1, 5, 5],"float64"), Tensor([0, 5, 1, 5],"float64"), list[list[3,1,2,],list[1,3,2,],], )
paddle.tensordot(Tensor([0, 1, 5, 5],"float64"), Tensor([0, 5, 1, 5],"float64"), list[list[3,1,2,],list[2,3,1,],], )
paddle.tensordot(Tensor([0, 1, 5, 5],"float64"), Tensor([0, 5, 1, 5],"float64"), list[list[3,1,2,0,],list[1,2,3,0,],], )
paddle.tensordot(Tensor([0, 1, 5, 5],"float64"), Tensor([0, 5, 1, 5],"float64"), list[list[3,1,2,0,],list[2,3,1,0,],], )
paddle.tensordot(Tensor([0, 1, 5, 5],"float64"), Tensor([0, 5, 1, 5],"float64"), list[list[3,2,0,],list[2,1,0,],], )
paddle.tensordot(Tensor([0, 1, 5, 5],"float64"), Tensor([0, 5, 1, 5],"float64"), list[list[3,2,0,],list[3,2,0,],], )
paddle.tensordot(Tensor([0, 1, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[3,1,2,],list[0,3,2,],], )
paddle.tensordot(Tensor([0, 1, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[3,1,2,],list[1,3,2,],], )
paddle.tensordot(Tensor([0, 1, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[3,1,2,],list[2,3,1,],], )
paddle.tensordot(Tensor([0, 1, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[3,2,1,],list[2,0,1,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[0,1,2,],list[2,0,1,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[0,1,3,2,],list[2,3,0,1,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[0,2,3,],list[0,1,2,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[0,3,1,2,],list[3,2,1,0,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[1,0,2,3,],list[3,0,1,2,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[1,0,3,],list[2,3,0,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[1,0,3,2,],list[2,3,0,1,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[1,2,0,],list[1,2,3,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[1,2,0,],list[1,3,2,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[1,2,0,3,],list[0,2,1,3,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[1,2,3,0,],list[1,3,0,2,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[1,3,],list[1,0,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[1,3,0,],list[3,0,2,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[1,3,2,0,],list[1,3,2,0,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[2,0,1,],list[0,1,3,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[2,0,1,3,],list[3,1,0,2,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[2,1,],list[0,2,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[2,1,0,3,],list[2,0,1,3,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[2,1,0,3,],list[3,1,2,0,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[2,3,],list[1,3,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[2,3,0,],list[1,2,0,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[2,3,1,],list[1,0,2,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[3,0,],list[2,1,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[3,0,2,1,],list[2,1,0,3,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[3,1,0,],list[3,2,1,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[3,1,0,2,],list[2,3,1,0,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[3,1,0,2,],list[3,1,0,2,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[3,1,2,],list[0,3,2,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[3,1,2,],list[2,3,1,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[3,1,2,],list[3,1,0,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[3,1,2,0,],list[2,3,1,0,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[3,2,],list[3,1,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[3,2,0,],list[2,1,0,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[3,2,0,],list[3,2,0,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[3,2,1,],list[2,0,1,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[3,2,1,0,],list[0,1,3,2,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[0,2,3,],list[0,1,2,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[2,3,],list[1,3,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[2,3,0,],list[1,2,0,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[2,3,1,],list[1,0,2,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[3,0,],list[2,1,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[3,0,2,1,],list[2,1,0,3,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[3,1,0,],list[3,2,1,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[3,1,0,2,],list[2,3,1,0,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[3,1,2,],list[0,3,2,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[3,1,2,],list[2,3,1,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[3,1,2,0,],list[2,3,1,0,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[3,2,],list[3,1,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[3,2,0,],list[2,1,0,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[3,2,0,],list[3,2,0,],], )
paddle.tensordot(Tensor([1, 0, 1, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[3,2,1,0,],list[0,1,3,2,],], )
paddle.tensordot(Tensor([1, 0, 5, 5],"float64"), Tensor([5, 0, 1, 5],"float64"), list[list[0,3,1,2,],list[3,2,1,0,],], )
paddle.tensordot(Tensor([1, 0, 5, 5],"float64"), Tensor([5, 0, 1, 5],"float64"), list[list[1,0,3,],list[2,3,0,],], )
paddle.tensordot(Tensor([1, 0, 5, 5],"float64"), Tensor([5, 0, 1, 5],"float64"), list[list[1,2,0,],list[1,2,3,],], )
paddle.tensordot(Tensor([1, 0, 5, 5],"float64"), Tensor([5, 0, 1, 5],"float64"), list[list[1,2,0,],list[1,3,2,],], )
paddle.tensordot(Tensor([1, 0, 5, 5],"float64"), Tensor([5, 0, 1, 5],"float64"), list[list[1,2,3,0,],list[1,3,0,2,],], )
paddle.tensordot(Tensor([1, 0, 5, 5],"float64"), Tensor([5, 0, 1, 5],"float64"), list[list[1,3,2,0,],list[1,3,2,0,],], )
paddle.tensordot(Tensor([1, 0, 5, 5],"float64"), Tensor([5, 0, 1, 5],"float64"), list[list[2,1,],list[0,2,],], )
paddle.tensordot(Tensor([1, 0, 5, 5],"float64"), Tensor([5, 0, 1, 5],"float64"), list[list[2,1,0,3,],list[3,1,2,0,],], )
paddle.tensordot(Tensor([1, 0, 5, 5],"float64"), Tensor([5, 0, 1, 5],"float64"), list[list[3,0,],list[2,1,],], )
paddle.tensordot(Tensor([1, 0, 5, 5],"float64"), Tensor([5, 0, 1, 5],"float64"), list[list[3,1,0,2,],list[3,1,0,2,],], )
paddle.tensordot(Tensor([1, 0, 5, 5],"float64"), Tensor([5, 0, 1, 5],"float64"), list[list[3,2,0,],list[3,2,0,],], )
paddle.tensordot(Tensor([1, 0, 5, 5],"float64"), Tensor([5, 0, 1, 5],"float64"), list[list[3,2,1,],list[2,0,1,],], )
paddle.tensordot(Tensor([1, 0, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[0,2,3,],list[0,1,2,],], )
paddle.tensordot(Tensor([1, 0, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[0,2,3,],list[0,2,1,],], )
paddle.tensordot(Tensor([1, 0, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[2,3,0,],list[1,2,0,],], )
paddle.tensordot(Tensor([1, 0, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[3,0,],list[2,1,],], )
paddle.tensordot(Tensor([1, 0, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[3,2,0,],list[2,1,0,],], )
paddle.tensordot(Tensor([1, 0, 5, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[3,2,0,],list[3,2,0,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([1, 5, 0, 1],"float64"), list[list[0,1,3,],list[0,3,1,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([1, 5, 0, 1],"float64"), list[list[0,1,3,2,],list[0,2,1,3,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([1, 5, 0, 1],"float64"), list[list[0,1,3,2,],list[1,3,0,2,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([1, 5, 0, 1],"float64"), list[list[0,2,3,],list[0,2,1,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([1, 5, 0, 1],"float64"), list[list[1,0,3,],list[2,3,0,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([1, 5, 0, 1],"float64"), list[list[1,0,3,2,],list[3,0,1,2,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([1, 5, 0, 1],"float64"), list[list[1,2,0,],list[1,2,3,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([1, 5, 0, 1],"float64"), list[list[1,2,0,],list[1,3,2,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([1, 5, 0, 1],"float64"), list[list[1,2,0,3,],list[0,2,1,3,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([1, 5, 0, 1],"float64"), list[list[1,2,3,0,],list[1,3,0,2,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([1, 5, 0, 1],"float64"), list[list[1,2,3,0,],list[3,2,1,0,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([1, 5, 0, 1],"float64"), list[list[1,3,],list[1,0,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([1, 5, 0, 1],"float64"), list[list[1,3,0,],list[3,0,2,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([1, 5, 0, 1],"float64"), list[list[1,3,2,0,],list[1,3,2,0,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([1, 5, 0, 1],"float64"), list[list[2,0,1,],list[0,1,3,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([1, 5, 0, 1],"float64"), list[list[2,1,0,3,],list[2,0,1,3,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([1, 5, 0, 1],"float64"), list[list[2,1,0,3,],list[2,0,3,1,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([1, 5, 0, 1],"float64"), list[list[2,1,0,3,],list[3,1,2,0,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([1, 5, 0, 1],"float64"), list[list[2,3,0,],list[3,1,0,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([1, 5, 0, 1],"float64"), list[list[3,1,0,],list[3,2,1,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([1, 5, 0, 1],"float64"), list[list[3,1,0,2,],list[3,1,0,2,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([1, 5, 0, 1],"float64"), list[list[3,1,2,],list[0,3,2,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([1, 5, 0, 1],"float64"), list[list[3,1,2,],list[1,3,2,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([1, 5, 0, 1],"float64"), list[list[3,1,2,],list[3,1,0,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([1, 5, 0, 1],"float64"), list[list[3,2,0,],list[3,2,0,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[0,1,3,2,],list[1,3,0,2,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[0,3,1,2,],list[3,2,1,0,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[1,0,3,],list[2,3,0,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[1,3,],list[1,0,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[1,3,0,],list[3,0,2,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[1,3,2,0,],list[1,3,2,0,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[3,0,],list[2,1,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[3,0,2,1,],list[2,1,0,3,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[3,1,0,],list[3,2,1,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[3,1,0,2,],list[2,3,1,0,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[3,1,0,2,],list[3,1,0,2,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[3,1,2,],list[0,3,2,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[3,1,2,],list[3,1,0,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[3,2,0,],list[3,2,0,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([1, 5, 1, 1],"float64"), list[list[3,2,1,],list[2,0,1,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([5, 5, 0, 5],"float64"), list[list[0,1,3,],list[0,3,1,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([5, 5, 0, 5],"float64"), list[list[0,1,3,2,],list[1,3,0,2,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([5, 5, 0, 5],"float64"), list[list[0,2,3,],list[0,2,1,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([5, 5, 0, 5],"float64"), list[list[1,0,3,2,],list[3,0,1,2,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([5, 5, 0, 5],"float64"), list[list[1,2,0,],list[1,2,3,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([5, 5, 0, 5],"float64"), list[list[1,2,0,3,],list[0,2,1,3,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([5, 5, 0, 5],"float64"), list[list[1,2,3,0,],list[3,2,1,0,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([5, 5, 0, 5],"float64"), list[list[1,3,],list[1,0,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([5, 5, 0, 5],"float64"), list[list[1,3,0,],list[3,0,2,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([5, 5, 0, 5],"float64"), list[list[1,3,2,0,],list[1,3,2,0,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([5, 5, 0, 5],"float64"), list[list[2,1,0,3,],list[2,0,1,3,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([5, 5, 0, 5],"float64"), list[list[2,1,0,3,],list[2,0,3,1,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([5, 5, 0, 5],"float64"), list[list[3,1,0,2,],list[3,1,0,2,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([5, 5, 0, 5],"float64"), list[list[3,1,2,],list[0,3,2,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([5, 5, 0, 5],"float64"), list[list[3,1,2,],list[1,3,2,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([5, 5, 0, 5],"float64"), list[list[3,2,0,],list[3,2,0,],], )
paddle.tensordot(Tensor([1, 1, 0, 5],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[3,0,],list[2,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 0],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[0,1,2,],list[2,0,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 0],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[0,1,3,2,],list[1,3,0,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 0],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[0,1,3,2,],list[2,3,0,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 0],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[0,2,3,],list[0,1,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 0],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[1,0,3,],list[2,3,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 0],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[1,0,3,2,],list[2,3,0,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 0],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[1,2,0,],list[1,2,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 0],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[1,2,0,],list[1,3,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 0],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[1,2,0,3,],list[0,2,1,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 0],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[1,2,3,0,],list[1,3,0,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 0],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[1,3,],list[1,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 0],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[1,3,2,0,],list[1,3,2,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 0],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[2,0,1,],list[0,1,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 0],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[2,1,],list[0,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 0],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[2,1,0,3,],list[2,0,1,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 0],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[2,3,],list[1,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 0],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[2,3,0,],list[1,2,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 0],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[2,3,1,],list[1,0,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 0],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[3,0,],list[2,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 0],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[3,0,2,1,],list[2,1,0,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 0],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[3,1,0,],list[3,2,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 0],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[3,1,0,2,],list[3,1,0,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 0],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[3,1,2,],list[3,1,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 0],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[3,2,],list[3,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 0],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[3,2,0,],list[2,1,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 0],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[3,2,0,],list[3,2,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 0],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[3,2,1,],list[2,0,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 0],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[3,2,1,0,],list[0,1,3,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[0,1,2,],list[2,0,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[0,3,1,2,],list[3,2,1,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[0,3,2,1,],list[2,1,3,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[1,0,2,3,],list[3,0,1,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[1,0,3,2,],list[3,0,1,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[1,2,0,],list[1,2,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[1,2,0,],list[1,3,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[1,2,3,0,],list[3,2,1,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[1,3,2,0,],list[1,3,2,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[1,3,2,0,],list[2,1,0,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[2,0,1,3,],list[3,1,0,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[2,1,0,3,],list[2,0,1,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[2,1,0,3,],list[2,0,3,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[2,3,],list[1,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[2,3,0,],list[1,2,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[2,3,0,],list[3,1,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[3,0,],list[2,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[3,0,2,1,],list[2,1,0,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[3,1,0,],list[3,2,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[3,1,0,2,],list[2,3,1,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[3,1,0,2,],list[3,1,0,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[3,1,2,],list[1,2,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[3,1,2,],list[1,3,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[3,1,2,],list[2,3,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[3,1,2,],list[3,1,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[3,1,2,0,],list[1,2,3,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[3,1,2,0,],list[2,3,1,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[3,2,],list[3,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[3,2,0,],list[2,1,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([0, 5, 1, 1],"float64"), list[list[3,2,0,],list[3,2,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[0,1,2,],list[2,0,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[0,1,3,2,],list[2,3,0,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[0,2,3,],list[0,1,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[0,3,1,2,],list[3,2,1,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[1,0,2,3,],list[3,0,1,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[1,0,3,],list[2,3,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[1,0,3,2,],list[2,3,0,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[1,2,0,3,],list[0,2,1,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[1,3,0,],list[3,0,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[1,3,2,0,],list[3,0,1,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[2,0,1,],list[0,1,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[2,0,1,3,],list[3,1,0,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[2,1,],list[0,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[2,1,0,3,],list[2,0,1,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[2,1,0,3,],list[3,1,2,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[3,1,0,],list[3,2,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[3,1,0,2,],list[2,3,1,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[3,1,2,],list[0,3,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[3,1,2,],list[2,3,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[3,1,2,0,],list[2,3,1,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[3,2,0,],list[3,2,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 0, 1, 1],"float64"), list[list[3,2,1,],list[2,0,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 0, 1],"float64"), list[list[0,1,3,],list[0,3,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 0, 1],"float64"), list[list[0,1,3,2,],list[0,2,1,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 0, 1],"float64"), list[list[0,1,3,2,],list[1,3,0,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 0, 1],"float64"), list[list[0,2,3,],list[0,2,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 0, 1],"float64"), list[list[1,0,3,2,],list[3,0,1,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 0, 1],"float64"), list[list[1,2,0,],list[1,2,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 0, 1],"float64"), list[list[1,2,0,],list[1,3,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 0, 1],"float64"), list[list[1,2,0,3,],list[0,2,1,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 0, 1],"float64"), list[list[1,2,3,0,],list[1,3,0,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 0, 1],"float64"), list[list[1,2,3,0,],list[3,2,1,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 0, 1],"float64"), list[list[1,3,],list[1,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 0, 1],"float64"), list[list[1,3,0,],list[3,0,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 0, 1],"float64"), list[list[1,3,2,0,],list[1,3,2,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 0, 1],"float64"), list[list[1,3,2,0,],list[3,0,1,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 0, 1],"float64"), list[list[2,0,1,],list[0,1,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 0, 1],"float64"), list[list[2,1,],list[0,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 0, 1],"float64"), list[list[2,1,0,3,],list[3,1,2,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 0, 1],"float64"), list[list[2,3,],list[1,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 0, 1],"float64"), list[list[2,3,0,],list[3,1,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 0, 1],"float64"), list[list[2,3,1,],list[1,0,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 0, 1],"float64"), list[list[3,1,0,2,],list[3,1,0,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 0, 1],"float64"), list[list[3,1,2,],list[0,3,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 0, 1],"float64"), list[list[3,1,2,],list[1,3,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 0, 1],"float64"), list[list[3,1,2,],list[3,1,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 0, 1],"float64"), list[list[3,2,],list[3,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 0, 1],"float64"), list[list[3,2,1,0,],list[0,1,3,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[0,1,2,],list[2,0,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[0,1,3,],list[0,3,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[0,1,3,2,],list[0,2,1,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[0,1,3,2,],list[1,3,0,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[0,1,3,2,],list[2,3,0,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[0,2,3,],list[0,1,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[0,2,3,],list[0,2,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[0,3,2,1,],list[2,1,3,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[1,0,3,],list[2,3,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[1,0,3,2,],list[2,3,0,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[1,2,0,],list[1,2,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[1,2,0,],list[1,3,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[1,2,3,0,],list[1,3,0,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[1,3,],list[1,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[1,3,2,0,],list[2,1,0,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[2,0,1,],list[0,1,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[2,1,],list[0,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[2,1,0,3,],list[2,0,3,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[2,3,0,],list[1,2,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[2,3,1,],list[1,0,2,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[3,0,],list[2,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[3,0,2,1,],list[2,1,0,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[3,1,2,],list[1,2,3,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[3,1,2,0,],list[1,2,3,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[3,2,0,],list[2,1,0,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[3,2,1,],list[2,0,1,],], )
paddle.tensordot(Tensor([1, 1, 1, 5],"float64"), Tensor([1, 5, 1, 0],"float64"), list[list[3,2,1,0,],list[0,1,3,2,],], )
paddle.tensordot(Tensor([1, 1, 5, 0],"float64"), Tensor([5, 5, 1, 0],"float64"), list[list[0,1,2,],list[2,0,1,],], )
paddle.tensordot(Tensor([1, 1, 5, 0],"float64"), Tensor([5, 5, 1, 0],"float64"), list[list[0,2,3,],list[0,1,2,],], )
paddle.tensordot(Tensor([1, 1, 5, 0],"float64"), Tensor([5, 5, 1, 0],"float64"), list[list[1,2,0,],list[1,2,3,],], )
paddle.tensordot(Tensor([1, 1, 5, 0],"float64"), Tensor([5, 5, 1, 0],"float64"), list[list[1,2,0,3,],list[0,2,1,3,],], )
paddle.tensordot(Tensor([1, 1, 5, 0],"float64"), Tensor([5, 5, 1, 0],"float64"), list[list[1,3,2,0,],list[1,3,2,0,],], )
paddle.tensordot(Tensor([1, 1, 5, 0],"float64"), Tensor([5, 5, 1, 0],"float64"), list[list[2,0,1,],list[0,1,3,],], )
paddle.tensordot(Tensor([1, 1, 5, 0],"float64"), Tensor([5, 5, 1, 0],"float64"), list[list[2,1,],list[0,2,],], )
paddle.tensordot(Tensor([1, 1, 5, 0],"float64"), Tensor([5, 5, 1, 0],"float64"), list[list[2,1,0,3,],list[2,0,1,3,],], )
paddle.tensordot(Tensor([1, 1, 5, 0],"float64"), Tensor([5, 5, 1, 0],"float64"), list[list[2,3,0,],list[1,2,0,],], )
paddle.tensordot(Tensor([1, 1, 5, 0],"float64"), Tensor([5, 5, 1, 0],"float64"), list[list[3,0,],list[2,1,],], )
paddle.tensordot(Tensor([1, 1, 5, 0],"float64"), Tensor([5, 5, 1, 0],"float64"), list[list[3,0,2,1,],list[2,1,0,3,],], )
paddle.tensordot(Tensor([1, 1, 5, 0],"float64"), Tensor([5, 5, 1, 0],"float64"), list[list[3,1,0,],list[3,2,1,],], )
paddle.tensordot(Tensor([1, 1, 5, 0],"float64"), Tensor([5, 5, 1, 0],"float64"), list[list[3,1,0,2,],list[3,1,0,2,],], )
paddle.tensordot(Tensor([1, 1, 5, 0],"float64"), Tensor([5, 5, 1, 0],"float64"), list[list[3,1,2,],list[3,1,0,],], )
paddle.tensordot(Tensor([1, 1, 5, 0],"float64"), Tensor([5, 5, 1, 0],"float64"), list[list[3,2,0,],list[2,1,0,],], )
paddle.tensordot(Tensor([1, 1, 5, 0],"float64"), Tensor([5, 5, 1, 0],"float64"), list[list[3,2,0,],list[3,2,0,],], )
paddle.tensordot(Tensor([1, 1, 5, 0],"float64"), Tensor([5, 5, 1, 0],"float64"), list[list[3,2,1,],list[2,0,1,],], )
paddle.tensordot(Tensor([1, 1, 5, 0],"float64"), Tensor([5, 5, 1, 5],"float64"), list[list[1,2,0,],list[1,2,3,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([0, 5, 1, 5],"float64"), list[list[0,1,2,],list[2,0,1,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([0, 5, 1, 5],"float64"), list[list[0,3,2,1,],list[2,1,3,0,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([0, 5, 1, 5],"float64"), list[list[1,0,2,3,],list[3,0,1,2,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([0, 5, 1, 5],"float64"), list[list[1,0,3,2,],list[3,0,1,2,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([0, 5, 1, 5],"float64"), list[list[1,2,0,],list[1,2,3,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([0, 5, 1, 5],"float64"), list[list[1,2,0,],list[1,3,2,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([0, 5, 1, 5],"float64"), list[list[1,2,3,0,],list[3,2,1,0,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([0, 5, 1, 5],"float64"), list[list[1,3,2,0,],list[1,3,2,0,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([0, 5, 1, 5],"float64"), list[list[2,0,1,3,],list[3,1,0,2,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([0, 5, 1, 5],"float64"), list[list[2,3,],list[1,3,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([0, 5, 1, 5],"float64"), list[list[3,0,],list[2,1,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([0, 5, 1, 5],"float64"), list[list[3,1,0,],list[3,2,1,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([0, 5, 1, 5],"float64"), list[list[3,1,0,2,],list[3,1,0,2,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([0, 5, 1, 5],"float64"), list[list[3,1,2,],list[1,2,3,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([0, 5, 1, 5],"float64"), list[list[3,1,2,],list[1,3,2,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([0, 5, 1, 5],"float64"), list[list[3,1,2,],list[2,3,1,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([0, 5, 1, 5],"float64"), list[list[3,1,2,0,],list[1,2,3,0,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([0, 5, 1, 5],"float64"), list[list[3,1,2,0,],list[2,3,1,0,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([0, 5, 1, 5],"float64"), list[list[3,2,],list[3,1,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 0, 1, 5],"float64"), list[list[0,3,1,2,],list[3,2,1,0,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 0, 1, 5],"float64"), list[list[1,0,3,],list[2,3,0,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 0, 1, 5],"float64"), list[list[1,2,0,3,],list[0,2,1,3,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 0, 1, 5],"float64"), list[list[1,3,0,],list[3,0,2,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 0, 1, 5],"float64"), list[list[2,1,],list[0,2,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 0, 1, 5],"float64"), list[list[2,1,0,3,],list[2,0,1,3,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 0, 1, 5],"float64"), list[list[3,1,0,],list[3,2,1,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 0, 1, 5],"float64"), list[list[3,1,0,2,],list[2,3,1,0,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 0, 1, 5],"float64"), list[list[3,1,2,],list[0,3,2,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 0, 1, 5],"float64"), list[list[3,2,0,],list[3,2,0,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 0, 5],"float64"), list[list[0,1,3,],list[0,3,1,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 0, 5],"float64"), list[list[0,1,3,2,],list[0,2,1,3,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 0, 5],"float64"), list[list[1,2,0,],list[1,3,2,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 0, 5],"float64"), list[list[1,2,3,0,],list[1,3,0,2,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 0, 5],"float64"), list[list[1,3,],list[1,0,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 0, 5],"float64"), list[list[1,3,0,],list[3,0,2,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 0, 5],"float64"), list[list[1,3,2,0,],list[3,0,1,2,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 0, 5],"float64"), list[list[2,0,1,],list[0,1,3,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 0, 5],"float64"), list[list[2,1,0,3,],list[3,1,2,0,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 0, 5],"float64"), list[list[2,3,],list[1,3,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 0, 5],"float64"), list[list[2,3,0,],list[3,1,0,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 0, 5],"float64"), list[list[3,1,2,],list[3,1,0,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 0, 5],"float64"), list[list[3,2,],list[3,1,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 0, 5],"float64"), list[list[3,2,1,0,],list[0,1,3,2,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 0],"float64"), list[list[0,1,2,],list[2,0,1,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 0],"float64"), list[list[0,1,3,],list[0,3,1,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 0],"float64"), list[list[0,1,3,2,],list[1,3,0,2,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 0],"float64"), list[list[0,1,3,2,],list[2,3,0,1,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 0],"float64"), list[list[0,2,3,],list[0,1,2,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 0],"float64"), list[list[0,2,3,],list[0,2,1,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 0],"float64"), list[list[1,0,3,],list[2,3,0,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 0],"float64"), list[list[1,0,3,2,],list[2,3,0,1,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 0],"float64"), list[list[1,2,0,],list[1,2,3,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 0],"float64"), list[list[1,3,],list[1,0,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 0],"float64"), list[list[1,3,2,0,],list[2,1,0,3,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 0],"float64"), list[list[2,0,1,],list[0,1,3,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 0],"float64"), list[list[2,1,],list[0,2,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 0],"float64"), list[list[2,1,0,3,],list[2,0,3,1,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 0],"float64"), list[list[2,3,0,],list[1,2,0,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 0],"float64"), list[list[2,3,1,],list[1,0,2,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 0],"float64"), list[list[3,0,],list[2,1,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 0],"float64"), list[list[3,0,2,1,],list[2,1,0,3,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 0],"float64"), list[list[3,2,0,],list[2,1,0,],], )
paddle.tensordot(Tensor([1, 1, 5, 5],"float64"), Tensor([5, 5, 1, 0],"float64"), list[list[3,2,1,],list[2,0,1,],], )
paddle.tensordot(Tensor([3, 4, 4],"float32"), Tensor([0, 4, 5],"float32"), 0, )
paddle.tensordot(Tensor([3, 4, 4],"float32"), Tensor([4, 0, 5],"float32"), 0, )
paddle.tensordot(Tensor([3, 4, 4],"float32"), Tensor([4, 0, 5],"float32"), 1, )
paddle.tensordot(Tensor([3, 4, 4],"float32"), Tensor([4, 4, 0],"float32"), 0, )
paddle.tensordot(Tensor([3, 4, 4],"float32"), Tensor([4, 4, 0],"float32"), 1, )
paddle.tensordot(Tensor([3, 4, 4],"float32"), Tensor([4, 4, 0],"float32"), 2, )
paddle.tensordot(Tensor([3, 4, 4],"float32"), Tensor([4, 4, 0],"float32"), list[list[1,2,],list[0,1,],], )
paddle.tensordot(Tensor([3, 4, 4],"float32"), Tensor([4, 4, 0],"float32"), tuple(list[1,2,],list[0,1,],), )
paddle.tensordot(Tensor([3, 4, 4],"float32"), Tensor([4, 4, 0],"float32"), tuple(tuple(1,2,),tuple(0,1,),), )
paddle.tensordot(Tensor([3, 4, 4],"float64"), Tensor([0, 4, 5],"float64"), 0, )
paddle.tensordot(Tensor([3, 4, 4],"float64"), Tensor([4, 0, 5],"float64"), 0, )
paddle.tensordot(Tensor([3, 4, 4],"float64"), Tensor([4, 0, 5],"float64"), 1, )
paddle.tensordot(Tensor([3, 4, 4],"float64"), Tensor([4, 4, 0],"float64"), 0, )
paddle.tensordot(Tensor([3, 4, 4],"float64"), Tensor([4, 4, 0],"float64"), 1, )
paddle.tensordot(Tensor([3, 4, 4],"float64"), Tensor([4, 4, 0],"float64"), 2, )
paddle.tensordot(Tensor([3, 4, 4],"float64"), Tensor([4, 4, 0],"float64"), list[list[1,2,],list[0,1,],], )
paddle.tensordot(Tensor([3, 4, 4],"float64"), Tensor([4, 4, 0],"float64"), tuple(list[1,2,],list[0,1,],), )
paddle.tensordot(Tensor([3, 4, 4],"float64"), Tensor([4, 4, 0],"float64"), tuple(tuple(1,2,),tuple(0,1,),), )
paddle.tensordot(x=Tensor([2, 3, 3, 4],"float64"), y=Tensor([0, 4, 3, 4],"float64"), axes=0, )
paddle.tensordot(x=Tensor([2, 3, 3, 4],"float64"), y=Tensor([3, 0, 3, 4],"float64"), axes=0, )
paddle.tensordot(x=Tensor([2, 3, 3, 4],"float64"), y=Tensor([3, 4, 0, 4],"float64"), )
paddle.tensordot(x=Tensor([2, 3, 3, 4],"float64"), y=Tensor([3, 4, 0, 4],"float64"), axes=0, )
paddle.tensordot(x=Tensor([2, 3, 3, 4],"float64"), y=Tensor([3, 4, 3, 0],"float64"), )
paddle.tensordot(x=Tensor([2, 3, 3, 4],"float64"), y=Tensor([3, 4, 3, 0],"float64"), axes=0, )
paddle.tensordot(x=Tensor([2, 3, 4, 4],"float64"), y=Tensor([0, 3, 4, 4],"float64"), axes=0, )
paddle.tensordot(x=Tensor([2, 3, 4, 4],"float64"), y=Tensor([2, 0, 4, 4],"float64"), axes=0, )
paddle.tensordot(x=Tensor([2, 3, 4, 4],"float64"), y=Tensor([2, 3, 0, 4],"float64"), axes=0, )
paddle.tensordot(x=Tensor([2, 3, 4, 4],"float64"), y=Tensor([2, 3, 4, 0],"float64"), axes=0, )
paddle.tensordot(x=Tensor([2, 7, 4, 2],"float64"), y=Tensor([7, 0, 4, 2],"float64"), axes=list[tuple(1,2,3,),tuple(0,2,3,),], )
paddle.tensordot(x=Tensor([2, 7, 4, 2],"float64"), y=Tensor([7, 0, 4, 2],"float64"), axes=tuple(list[1,2,3,],list[0,2,3,],), )
paddle.tensordot(x=Tensor([3, 4, 3, 4],"float64"), y=Tensor([4, 0, 3, 4],"float64"), axes=1, )
paddle.tensordot(x=Tensor([3, 4, 3, 4],"float64"), y=Tensor([4, 4, 0, 4],"float64"), axes=1, )
paddle.tensordot(x=Tensor([3, 4, 3, 4],"float64"), y=Tensor([4, 4, 3, 0],"float64"), axes=1, )
paddle.trapezoid(Tensor([0],"float32"), dx=2.0, )
paddle.trapezoid(y=Tensor([0, 4],"float16"), x=Tensor([0, 4],"float16"), )
paddle.trapezoid(y=Tensor([4, 0],"float16"), x=Tensor([4, 0],"float16"), )
paddle.trapezoid(y=Tensor([4, 0],"float16"), x=Tensor([4, 4],"float16"), )
paddle.unflatten(x=Tensor([0, 6, 16],"float32"), axis=-1, shape=list[-1,2,], )
paddle.unflatten(x=Tensor([4, 0, 16],"float32"), axis=0, shape=list[-1,], )
paddle.unflatten(x=Tensor([4, 0, 16],"float32"), axis=0, shape=tuple(-1,), )
paddle.unflatten(x=Tensor([4, 0, 16],"float32"), axis=0, shape=tuple(-1,2,), )
paddle.unflatten(x=Tensor([4, 0, 16],"float32"), axis=-1, shape=list[-1,2,], )
paddle.unflatten(x=Tensor([4, 6, 0],"float32"), axis=0, shape=list[-1,], )
paddle.unflatten(x=Tensor([4, 6, 0],"float32"), axis=0, shape=tuple(-1,), )
paddle.unflatten(x=Tensor([4, 6, 0],"float32"), axis=0, shape=tuple(-1,2,), )
paddle.var(Tensor([0, 16, 3, 3],"float32"), axis=list[1,2,3,], keepdim=True, unbiased=False, )
paddle.var(Tensor([0, 256],"float32"), axis=-1, keepdim=True, )
paddle.var(Tensor([0, 256],"float64"), axis=-1, keepdim=True, )
paddle.var(Tensor([0, 3, 4, 10],"float32"), list[1,3,], True, False, )
paddle.var(Tensor([0, 3, 4, 10],"float64"), 2, True, False, )
paddle.var(Tensor([0, 3, 4, 10],"float64"), list[1,2,], True, False, )
paddle.var(Tensor([0, 3, 4, 10],"float64"), list[1,3,], False, False, )
paddle.var(Tensor([0, 3, 4, 10],"float64"), list[1,3,], True, False, )
paddle.var(Tensor([0, 3, 4, 10],"float64"), tuple(1,3,), True, False, )
paddle.var(Tensor([0, 32, 1, 1],"float32"), axis=list[1,2,3,], keepdim=True, unbiased=False, )
paddle.var(Tensor([0],"float32"), )
paddle.var(Tensor([1, 0, 4, 10],"float32"), list[1,3,], True, False, )
paddle.var(Tensor([1, 0, 4, 10],"float64"), 2, True, False, )
paddle.var(Tensor([1, 0, 4, 10],"float64"), list[1,2,], True, False, )
paddle.var(Tensor([1, 0, 4, 10],"float64"), list[1,3,], False, False, )
paddle.var(Tensor([1, 0, 4, 10],"float64"), list[1,3,], True, False, )
paddle.var(Tensor([1, 0, 4, 10],"float64"), tuple(1,3,), True, False, )
paddle.var(Tensor([1, 3, 0, 10],"float32"), list[1,3,], True, False, )
paddle.var(Tensor([1, 3, 0, 10],"float64"), 2, True, False, )
paddle.var(Tensor([1, 3, 0, 10],"float64"), list[1,2,], True, False, )
paddle.var(Tensor([1, 3, 0, 10],"float64"), list[1,3,], False, False, )
paddle.var(Tensor([1, 3, 0, 10],"float64"), list[1,3,], True, False, )
paddle.var(Tensor([1, 3, 0, 10],"float64"), tuple(1,3,), True, False, )
paddle.var(Tensor([1, 3, 4, 0],"float32"), list[1,3,], True, False, )
paddle.var(Tensor([1, 3, 4, 0],"float64"), 2, True, False, )
paddle.var(Tensor([1, 3, 4, 0],"float64"), list[1,2,], True, False, )
paddle.var(Tensor([1, 3, 4, 0],"float64"), list[1,3,], False, False, )
paddle.var(Tensor([1, 3, 4, 0],"float64"), list[1,3,], True, False, )
paddle.var(Tensor([1, 3, 4, 0],"float64"), tuple(1,3,), True, False, )
paddle.var(Tensor([16, 0, 1, 1],"float32"), axis=list[1,2,3,], keepdim=True, unbiased=False, )
paddle.var(Tensor([16, 0, 3, 3],"float32"), axis=list[1,2,3,], keepdim=True, unbiased=False, )
paddle.var(Tensor([16, 0],"float32"), axis=-1, keepdim=True, )
paddle.var(Tensor([16, 0],"float64"), axis=-1, keepdim=True, )
paddle.var(Tensor([16, 16, 0, 3],"float32"), axis=list[1,2,3,], keepdim=True, unbiased=False, )
paddle.var(Tensor([16, 16, 3, 0],"float32"), axis=list[1,2,3,], keepdim=True, unbiased=False, )
paddle.var(Tensor([16, 32, 0, 1],"float32"), axis=list[1,2,3,], keepdim=True, unbiased=False, )
paddle.var(Tensor([16, 32, 1, 0],"float32"), axis=list[1,2,3,], keepdim=True, unbiased=False, )
paddle.var(x=Tensor([0, 3, 3],"float64"), )
paddle.var(x=Tensor([0, 3, 3],"float64"), axis=0, )
paddle.var(x=Tensor([0, 3, 3],"float64"), axis=0, unbiased=False, )
paddle.var(x=Tensor([0, 3, 3],"float64"), axis=list[0,1,], )
paddle.var(x=Tensor([0, 3, 3],"float64"), axis=tuple(0,1,), )
paddle.var(x=Tensor([0, 3, 3],"float64"), axis=tuple(0,1,), keepdim=True, )
paddle.var(x=Tensor([0, 3],"float32"), )
paddle.var(x=Tensor([0, 3],"float64"), )
paddle.var(x=Tensor([0, 96, 1],"float32"), axis=tuple(1,), keepdim=True, unbiased=False, )
paddle.var(x=Tensor([13, 0, 1],"float32"), axis=tuple(1,), keepdim=True, unbiased=False, )
paddle.var(x=Tensor([13, 96, 0],"float32"), axis=tuple(1,), keepdim=True, unbiased=False, )
paddle.var(x=Tensor([16, 0, 1],"float32"), axis=tuple(1,), keepdim=True, unbiased=False, )
paddle.var(x=Tensor([16, 96, 0],"float32"), axis=tuple(1,), keepdim=True, unbiased=False, )
paddle.var(x=Tensor([2, 0],"float32"), )
paddle.var(x=Tensor([2, 0],"float64"), )
paddle.var(x=Tensor([3, 0, 3],"float64"), )
paddle.var(x=Tensor([3, 0, 3],"float64"), axis=0, )
paddle.var(x=Tensor([3, 0, 3],"float64"), axis=0, unbiased=False, )
paddle.var(x=Tensor([3, 0, 3],"float64"), axis=list[0,1,], )
paddle.var(x=Tensor([3, 0, 3],"float64"), axis=tuple(0,1,), )
paddle.var(x=Tensor([3, 0, 3],"float64"), axis=tuple(0,1,), keepdim=True, )
paddle.var(x=Tensor([3, 3, 0],"float64"), )
paddle.var(x=Tensor([3, 3, 0],"float64"), axis=0, )
paddle.var(x=Tensor([3, 3, 0],"float64"), axis=0, unbiased=False, )
paddle.var(x=Tensor([3, 3, 0],"float64"), axis=list[0,1,], )
paddle.var(x=Tensor([3, 3, 0],"float64"), axis=tuple(0,1,), )
paddle.var(x=Tensor([3, 3, 0],"float64"), axis=tuple(0,1,), keepdim=True, )
paddle.vstack(list[Tensor([0, 1, 1, 1],"float64"),], )
paddle.vstack(list[Tensor([0, 1, 1, 1],"float64"),], name=None, )
paddle.vstack(list[Tensor([0, 1, 1, 1],"float64"),Tensor([0, 1, 1, 1],"float64"),Tensor([0, 1, 1, 1],"float64"),], )
paddle.vstack(list[Tensor([0, 1, 1, 1],"float64"),Tensor([0, 1, 1, 1],"float64"),Tensor([0, 1, 1, 1],"float64"),], name=None, )
paddle.vstack(list[Tensor([0, 1, 1],"float64"),], )
paddle.vstack(list[Tensor([0, 1, 1],"float64"),], name=None, )
paddle.vstack(list[Tensor([0, 1, 1],"float64"),Tensor([0, 1, 1],"float64"),Tensor([0, 1, 1],"float64"),], )
paddle.vstack(list[Tensor([0, 1, 1],"float64"),Tensor([0, 1, 1],"float64"),Tensor([0, 1, 1],"float64"),], name=None, )
paddle.vstack(list[Tensor([0, 1],"float64"),], )
paddle.vstack(list[Tensor([0, 1],"float64"),], name=None, )
paddle.vstack(list[Tensor([0, 1],"float64"),Tensor([0, 1],"float64"),Tensor([0, 1],"float64"),], )
paddle.vstack(list[Tensor([0, 1],"float64"),Tensor([0, 1],"float64"),Tensor([0, 1],"float64"),], name=None, )
paddle.vstack(list[Tensor([0, 2],"float64"),], )
paddle.vstack(list[Tensor([0, 2],"float64"),], name=None, )
paddle.vstack(list[Tensor([0, 2],"float64"),Tensor([0, 2],"float64"),Tensor([0, 2],"float64"),], )
paddle.vstack(list[Tensor([0, 2],"float64"),Tensor([0, 2],"float64"),Tensor([0, 2],"float64"),], name=None, )
paddle.vstack(list[Tensor([0, 4, 2, 5],"float64"),], )
paddle.vstack(list[Tensor([0, 4, 2, 5],"float64"),], name=None, )
paddle.vstack(list[Tensor([0, 4, 2, 5],"float64"),Tensor([0, 4, 2, 5],"float64"),Tensor([0, 4, 2, 5],"float64"),], )
paddle.vstack(list[Tensor([0, 4, 2, 5],"float64"),Tensor([0, 4, 2, 5],"float64"),Tensor([0, 4, 2, 5],"float64"),], name=None, )
paddle.vstack(list[Tensor([0, 4, 2],"float64"),], )
paddle.vstack(list[Tensor([0, 4, 2],"float64"),], name=None, )
paddle.vstack(list[Tensor([0, 4, 2],"float64"),Tensor([0, 4, 2],"float64"),Tensor([0, 4, 2],"float64"),], )
paddle.vstack(list[Tensor([0, 4, 2],"float64"),Tensor([0, 4, 2],"float64"),Tensor([0, 4, 2],"float64"),], name=None, )
paddle.vstack(list[Tensor([0],"float64"),], )
paddle.vstack(list[Tensor([0],"float64"),], name=None, )
paddle.vstack(list[Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),], )
paddle.vstack(list[Tensor([0],"float64"),Tensor([0],"float64"),Tensor([0],"float64"),], name=None, )
paddle.vstack(list[Tensor([1, 0, 1, 1],"float64"),], )
paddle.vstack(list[Tensor([1, 0, 1, 1],"float64"),], name=None, )
paddle.vstack(list[Tensor([1, 0, 1, 1],"float64"),Tensor([1, 0, 1, 1],"float64"),Tensor([1, 0, 1, 1],"float64"),], )
paddle.vstack(list[Tensor([1, 0, 1, 1],"float64"),Tensor([1, 0, 1, 1],"float64"),Tensor([1, 0, 1, 1],"float64"),], name=None, )
paddle.vstack(list[Tensor([1, 0, 1],"float64"),], )
paddle.vstack(list[Tensor([1, 0, 1],"float64"),], name=None, )
paddle.vstack(list[Tensor([1, 0, 1],"float64"),Tensor([1, 0, 1],"float64"),Tensor([1, 0, 1],"float64"),], )
paddle.vstack(list[Tensor([1, 0, 1],"float64"),Tensor([1, 0, 1],"float64"),Tensor([1, 0, 1],"float64"),], name=None, )
paddle.vstack(list[Tensor([1, 0],"float64"),], )
paddle.vstack(list[Tensor([1, 0],"float64"),], name=None, )
paddle.vstack(list[Tensor([1, 0],"float64"),Tensor([1, 0],"float64"),Tensor([1, 0],"float64"),], )
paddle.vstack(list[Tensor([1, 0],"float64"),Tensor([1, 0],"float64"),Tensor([1, 0],"float64"),], name=None, )
paddle.vstack(list[Tensor([1, 1, 0, 1],"float64"),], )
paddle.vstack(list[Tensor([1, 1, 0, 1],"float64"),], name=None, )
paddle.vstack(list[Tensor([1, 1, 0, 1],"float64"),Tensor([1, 1, 0, 1],"float64"),Tensor([1, 1, 0, 1],"float64"),], )
paddle.vstack(list[Tensor([1, 1, 0, 1],"float64"),Tensor([1, 1, 0, 1],"float64"),Tensor([1, 1, 0, 1],"float64"),], name=None, )
paddle.vstack(list[Tensor([1, 1, 0],"float64"),], )
paddle.vstack(list[Tensor([1, 1, 0],"float64"),], name=None, )
paddle.vstack(list[Tensor([1, 1, 0],"float64"),Tensor([1, 1, 0],"float64"),Tensor([1, 1, 0],"float64"),], )
paddle.vstack(list[Tensor([1, 1, 0],"float64"),Tensor([1, 1, 0],"float64"),Tensor([1, 1, 0],"float64"),], name=None, )
paddle.vstack(list[Tensor([1, 1, 1, 0],"float64"),], )
paddle.vstack(list[Tensor([1, 1, 1, 0],"float64"),], name=None, )
paddle.vstack(list[Tensor([1, 1, 1, 0],"float64"),Tensor([1, 1, 1, 0],"float64"),Tensor([1, 1, 1, 0],"float64"),], )
paddle.vstack(list[Tensor([1, 1, 1, 0],"float64"),Tensor([1, 1, 1, 0],"float64"),Tensor([1, 1, 1, 0],"float64"),], name=None, )
paddle.vstack(list[Tensor([3, 0, 2, 5],"float64"),], )
paddle.vstack(list[Tensor([3, 0, 2, 5],"float64"),], name=None, )
paddle.vstack(list[Tensor([3, 0, 2, 5],"float64"),Tensor([3, 0, 2, 5],"float64"),Tensor([3, 0, 2, 5],"float64"),], )
paddle.vstack(list[Tensor([3, 0, 2, 5],"float64"),Tensor([3, 0, 2, 5],"float64"),Tensor([3, 0, 2, 5],"float64"),], name=None, )
paddle.vstack(list[Tensor([3, 0, 2],"float64"),], )
paddle.vstack(list[Tensor([3, 0, 2],"float64"),], name=None, )
paddle.vstack(list[Tensor([3, 0, 2],"float64"),Tensor([3, 0, 2],"float64"),Tensor([3, 0, 2],"float64"),], )
paddle.vstack(list[Tensor([3, 0, 2],"float64"),Tensor([3, 0, 2],"float64"),Tensor([3, 0, 2],"float64"),], name=None, )
paddle.vstack(list[Tensor([3, 0],"float64"),], )
paddle.vstack(list[Tensor([3, 0],"float64"),], name=None, )
paddle.vstack(list[Tensor([3, 0],"float64"),Tensor([3, 0],"float64"),Tensor([3, 0],"float64"),], )
paddle.vstack(list[Tensor([3, 0],"float64"),Tensor([3, 0],"float64"),Tensor([3, 0],"float64"),], name=None, )
paddle.vstack(list[Tensor([3, 4, 0, 5],"float64"),], )
paddle.vstack(list[Tensor([3, 4, 0, 5],"float64"),], name=None, )
paddle.vstack(list[Tensor([3, 4, 0, 5],"float64"),Tensor([3, 4, 0, 5],"float64"),Tensor([3, 4, 0, 5],"float64"),], )
paddle.vstack(list[Tensor([3, 4, 0, 5],"float64"),Tensor([3, 4, 0, 5],"float64"),Tensor([3, 4, 0, 5],"float64"),], name=None, )
paddle.vstack(list[Tensor([3, 4, 0],"float64"),], )
paddle.vstack(list[Tensor([3, 4, 0],"float64"),], name=None, )
paddle.vstack(list[Tensor([3, 4, 0],"float64"),Tensor([3, 4, 0],"float64"),Tensor([3, 4, 0],"float64"),], )
paddle.vstack(list[Tensor([3, 4, 0],"float64"),Tensor([3, 4, 0],"float64"),Tensor([3, 4, 0],"float64"),], name=None, )
paddle.vstack(list[Tensor([3, 4, 2, 0],"float64"),], )
paddle.vstack(list[Tensor([3, 4, 2, 0],"float64"),], name=None, )
paddle.vstack(list[Tensor([3, 4, 2, 0],"float64"),Tensor([3, 4, 2, 0],"float64"),Tensor([3, 4, 2, 0],"float64"),], )
paddle.vstack(list[Tensor([3, 4, 2, 0],"float64"),Tensor([3, 4, 2, 0],"float64"),Tensor([3, 4, 2, 0],"float64"),], name=None, )
